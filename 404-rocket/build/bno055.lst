ARM GAS  /tmp/ccOloYeZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"bno055.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/bno055.c"
  20              		.section	.text.bno055_init,"ax",%progbits
  21              		.align	1
  22              		.global	bno055_init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	bno055_init:
  28              	.LVL0:
  29              	.LFB0:
   1:Core/Src/bno055.c **** /**
   2:Core/Src/bno055.c **** * Copyright (c) 2020 Bosch Sensortec GmbH. All rights reserved.
   3:Core/Src/bno055.c **** *
   4:Core/Src/bno055.c **** * BSD-3-Clause
   5:Core/Src/bno055.c **** *
   6:Core/Src/bno055.c **** * Redistribution and use in source and binary forms, with or without
   7:Core/Src/bno055.c **** * modification, are permitted provided that the following conditions are met:
   8:Core/Src/bno055.c **** *
   9:Core/Src/bno055.c **** * 1. Redistributions of source code must retain the above copyright
  10:Core/Src/bno055.c **** *    notice, this list of conditions and the following disclaimer.
  11:Core/Src/bno055.c **** *
  12:Core/Src/bno055.c **** * 2. Redistributions in binary form must reproduce the above copyright
  13:Core/Src/bno055.c **** *    notice, this list of conditions and the following disclaimer in the
  14:Core/Src/bno055.c **** *    documentation and/or other materials provided with the distribution.
  15:Core/Src/bno055.c **** *
  16:Core/Src/bno055.c **** * 3. Neither the name of the copyright holder nor the names of its
  17:Core/Src/bno055.c **** *    contributors may be used to endorse or promote products derived from
  18:Core/Src/bno055.c **** *    this software without specific prior written permission.
  19:Core/Src/bno055.c **** *
  20:Core/Src/bno055.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  21:Core/Src/bno055.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  22:Core/Src/bno055.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  23:Core/Src/bno055.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  24:Core/Src/bno055.c **** * COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  25:Core/Src/bno055.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  26:Core/Src/bno055.c **** * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Core/Src/bno055.c **** * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  28:Core/Src/bno055.c **** * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  29:Core/Src/bno055.c **** * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
ARM GAS  /tmp/ccOloYeZ.s 			page 2


  30:Core/Src/bno055.c **** * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Core/Src/bno055.c **** * POSSIBILITY OF SUCH DAMAGE.
  32:Core/Src/bno055.c **** *
  33:Core/Src/bno055.c **** * @file bno055.c
  34:Core/Src/bno055.c **** * @date 10/01/2020
  35:Core/Src/bno055.c **** * @version  2.0.6
  36:Core/Src/bno055.c **** *
  37:Core/Src/bno055.c **** */
  38:Core/Src/bno055.c **** 
  39:Core/Src/bno055.c **** /*********************************************************/
  40:Core/Src/bno055.c **** /*              INCLUDES    */
  41:Core/Src/bno055.c **** /*******************************************************/
  42:Core/Src/bno055.c **** #include "bno055.h"
  43:Core/Src/bno055.c **** 
  44:Core/Src/bno055.c **** #ifdef __KERNEL__
  45:Core/Src/bno055.c **** #include <linux/types.h>
  46:Core/Src/bno055.c **** #include <linux/kernel.h>
  47:Core/Src/bno055.c **** #else
  48:Core/Src/bno055.c **** #include <stdint.h>
  49:Core/Src/bno055.c **** #include <stddef.h>
  50:Core/Src/bno055.c **** #endif
  51:Core/Src/bno055.c **** 
  52:Core/Src/bno055.c **** #ifndef NULL
  53:Core/Src/bno055.c **** #ifdef __cplusplus
  54:Core/Src/bno055.c **** #define NULL 0
  55:Core/Src/bno055.c **** #else
  56:Core/Src/bno055.c **** #define NULL ((void *) 0)
  57:Core/Src/bno055.c **** #endif
  58:Core/Src/bno055.c **** #endif
  59:Core/Src/bno055.c **** 
  60:Core/Src/bno055.c **** /*! file <BNO055 >
  61:Core/Src/bno055.c ****  * brief <Sensor driver for BNO055> */
  62:Core/Src/bno055.c **** 
  63:Core/Src/bno055.c **** /*  STRUCTURE DEFINITIONS   */
  64:Core/Src/bno055.c **** static struct bno055_t *p_bno055;
  65:Core/Src/bno055.c **** 
  66:Core/Src/bno055.c **** /*   LOCAL FUNCTIONS    */
  67:Core/Src/bno055.c **** 
  68:Core/Src/bno055.c **** /*!
  69:Core/Src/bno055.c ****  *  @brief
  70:Core/Src/bno055.c ****  *  This API is used for initialize
  71:Core/Src/bno055.c ****  *  bus read, bus write function pointers,device
  72:Core/Src/bno055.c ****  *  address,accel revision id, gyro revision id
  73:Core/Src/bno055.c ****  *  mag revision id, software revision id, boot loader
  74:Core/Src/bno055.c ****  *  revision id and page id
  75:Core/Src/bno055.c ****  *
  76:Core/Src/bno055.c ****  *  @param  bno055 - structure pointer
  77:Core/Src/bno055.c ****  *
  78:Core/Src/bno055.c ****  *
  79:Core/Src/bno055.c ****  *  @return results of bus communication function
  80:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
  81:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
  82:Core/Src/bno055.c ****  *
  83:Core/Src/bno055.c ****  *  @note While changing the parameter of the bno055_t
  84:Core/Src/bno055.c ****  *  consider the following point:
  85:Core/Src/bno055.c ****  *  Changing the reference value of the parameter
  86:Core/Src/bno055.c ****  *  will changes the local copy or local reference
ARM GAS  /tmp/ccOloYeZ.s 			page 3


  87:Core/Src/bno055.c ****  *  make sure your changes will not
  88:Core/Src/bno055.c ****  *  affect the reference value of the parameter
  89:Core/Src/bno055.c ****  *  (Better case don't change the reference value of the parameter)
  90:Core/Src/bno055.c ****  */
  91:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_init(struct bno055_t *bno055)
  92:Core/Src/bno055.c **** {
  30              		.loc 1 92 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 92 1 is_stmt 0 view .LVU1
  35 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  36              		.cfi_def_cfa_offset 20
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 83B0     		sub	sp, sp, #12
  43              		.cfi_def_cfa_offset 32
  93:Core/Src/bno055.c ****     /* Variable used to return value of
  94:Core/Src/bno055.c ****      * communication routine*/
  95:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
  44              		.loc 1 95 5 is_stmt 1 view .LVU2
  45              	.LVL1:
  96:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
  46              		.loc 1 96 5 view .LVU3
  47              		.loc 1 96 8 is_stmt 0 view .LVU4
  48 0004 0025     		movs	r5, #0
  49 0006 8DF80750 		strb	r5, [sp, #7]
  97:Core/Src/bno055.c ****     u8 bno055_page_zero_u8 = BNO055_PAGE_ZERO;
  50              		.loc 1 97 5 is_stmt 1 view .LVU5
  51              		.loc 1 97 8 is_stmt 0 view .LVU6
  52 000a 8DF80650 		strb	r5, [sp, #6]
  98:Core/Src/bno055.c **** 
  99:Core/Src/bno055.c ****     /* Array holding the Software revision id
 100:Core/Src/bno055.c ****      */
 101:Core/Src/bno055.c ****     u8 a_SW_ID_u8[BNO055_REV_ID_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
  53              		.loc 1 101 5 is_stmt 1 view .LVU7
  54              		.loc 1 101 8 is_stmt 0 view .LVU8
  55 000e ADF80450 		strh	r5, [sp, #4]	@ movhi
 102:Core/Src/bno055.c **** 
 103:Core/Src/bno055.c ****     /* stuct parameters are assign to bno055*/
 104:Core/Src/bno055.c ****     p_bno055 = bno055;
  56              		.loc 1 104 5 is_stmt 1 view .LVU9
  57              		.loc 1 104 14 is_stmt 0 view .LVU10
  58 0012 394C     		ldr	r4, .L3
  59 0014 2060     		str	r0, [r4]
 105:Core/Src/bno055.c **** 
 106:Core/Src/bno055.c ****     /* Write the default page as zero*/
 107:Core/Src/bno055.c ****     com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
  60              		.loc 1 107 5 is_stmt 1 view .LVU11
  61              		.loc 1 107 24 is_stmt 0 view .LVU12
  62 0016 C668     		ldr	r6, [r0, #12]
  63              		.loc 1 107 16 view .LVU13
  64 0018 0123     		movs	r3, #1
  65 001a 0DF10602 		add	r2, sp, #6
ARM GAS  /tmp/ccOloYeZ.s 			page 4


  66 001e 0721     		movs	r1, #7
  67 0020 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
  68              	.LVL2:
  69              		.loc 1 107 16 view .LVU14
  70 0022 B047     		blx	r6
  71              	.LVL3:
  72              		.loc 1 107 16 view .LVU15
  73 0024 0646     		mov	r6, r0
  74              	.LVL4:
 108:Core/Src/bno055.c ****                                                BNO055_PAGE_ID_REG,
 109:Core/Src/bno055.c ****                                                &bno055_page_zero_u8,
 110:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 111:Core/Src/bno055.c **** 
 112:Core/Src/bno055.c ****     /* Read the chip id of the sensor from page
 113:Core/Src/bno055.c ****      * zero 0x00 register*/
 114:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
  75              		.loc 1 114 5 is_stmt 1 view .LVU16
  76              		.loc 1 114 25 is_stmt 0 view .LVU17
  77 0026 2068     		ldr	r0, [r4]
  78 0028 0769     		ldr	r7, [r0, #16]
  79              		.loc 1 114 17 view .LVU18
  80 002a 0123     		movs	r3, #1
  81 002c 0DF10702 		add	r2, sp, #7
  82 0030 2946     		mov	r1, r5
  83 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
  84 0034 B847     		blx	r7
  85              	.LVL5:
  86              		.loc 1 114 14 view .LVU19
  87 0036 56FA80F0 		uxtab	r0, r6, r0
  88 003a C5B2     		uxtb	r5, r0
  89              	.LVL6:
 115:Core/Src/bno055.c ****                                                BNO055_CHIP_ID_REG,
 116:Core/Src/bno055.c ****                                                &data_u8,
 117:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 118:Core/Src/bno055.c ****     p_bno055->chip_id = data_u8;
  90              		.loc 1 118 5 is_stmt 1 view .LVU20
  91              		.loc 1 118 13 is_stmt 0 view .LVU21
  92 003c 2068     		ldr	r0, [r4]
  93              		.loc 1 118 23 view .LVU22
  94 003e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
  95 0042 0370     		strb	r3, [r0]
 119:Core/Src/bno055.c **** 
 120:Core/Src/bno055.c ****     /* Read the accel revision id from page
 121:Core/Src/bno055.c ****      * zero 0x01 register*/
 122:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
  96              		.loc 1 122 5 is_stmt 1 view .LVU23
  97              		.loc 1 122 25 is_stmt 0 view .LVU24
  98 0044 0669     		ldr	r6, [r0, #16]
  99              		.loc 1 122 17 view .LVU25
 100 0046 0123     		movs	r3, #1
 101 0048 0DF10702 		add	r2, sp, #7
 102 004c 1946     		mov	r1, r3
 103 004e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 104 0050 B047     		blx	r6
 105              	.LVL7:
 106              		.loc 1 122 14 view .LVU26
 107 0052 55FA80F5 		uxtab	r5, r5, r0
ARM GAS  /tmp/ccOloYeZ.s 			page 5


 108              	.LVL8:
 109              		.loc 1 122 14 view .LVU27
 110 0056 EDB2     		uxtb	r5, r5
 111              	.LVL9:
 123:Core/Src/bno055.c ****                                                BNO055_ACCEL_REV_ID_REG,
 124:Core/Src/bno055.c ****                                                &data_u8,
 125:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 126:Core/Src/bno055.c ****     p_bno055->accel_rev_id = data_u8;
 112              		.loc 1 126 5 is_stmt 1 view .LVU28
 113              		.loc 1 126 13 is_stmt 0 view .LVU29
 114 0058 2068     		ldr	r0, [r4]
 115              		.loc 1 126 28 view .LVU30
 116 005a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 117 005e 4371     		strb	r3, [r0, #5]
 127:Core/Src/bno055.c **** 
 128:Core/Src/bno055.c ****     /* Read the mag revision id from page
 129:Core/Src/bno055.c ****      * zero 0x02 register*/
 130:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 118              		.loc 1 130 5 is_stmt 1 view .LVU31
 119              		.loc 1 130 25 is_stmt 0 view .LVU32
 120 0060 0669     		ldr	r6, [r0, #16]
 121              		.loc 1 130 17 view .LVU33
 122 0062 0123     		movs	r3, #1
 123 0064 0DF10702 		add	r2, sp, #7
 124 0068 0221     		movs	r1, #2
 125 006a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 126 006c B047     		blx	r6
 127              	.LVL10:
 128              		.loc 1 130 14 view .LVU34
 129 006e 55FA80F5 		uxtab	r5, r5, r0
 130              	.LVL11:
 131              		.loc 1 130 14 view .LVU35
 132 0072 EDB2     		uxtb	r5, r5
 133              	.LVL12:
 131:Core/Src/bno055.c ****                                                BNO055_MAG_REV_ID_REG,
 132:Core/Src/bno055.c ****                                                &data_u8,
 133:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 134:Core/Src/bno055.c ****     p_bno055->mag_rev_id = data_u8;
 134              		.loc 1 134 5 is_stmt 1 view .LVU36
 135              		.loc 1 134 13 is_stmt 0 view .LVU37
 136 0074 2068     		ldr	r0, [r4]
 137              		.loc 1 134 26 view .LVU38
 138 0076 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 139 007a 8371     		strb	r3, [r0, #6]
 135:Core/Src/bno055.c **** 
 136:Core/Src/bno055.c ****     /* Read the gyro revision id from page
 137:Core/Src/bno055.c ****      * zero 0x02 register*/
 138:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 140              		.loc 1 138 5 is_stmt 1 view .LVU39
 141              		.loc 1 138 25 is_stmt 0 view .LVU40
 142 007c 0669     		ldr	r6, [r0, #16]
 143              		.loc 1 138 17 view .LVU41
 144 007e 0123     		movs	r3, #1
 145 0080 0DF10702 		add	r2, sp, #7
 146 0084 0321     		movs	r1, #3
 147 0086 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 148 0088 B047     		blx	r6
ARM GAS  /tmp/ccOloYeZ.s 			page 6


 149              	.LVL13:
 150              		.loc 1 138 14 view .LVU42
 151 008a 55FA80F5 		uxtab	r5, r5, r0
 152              	.LVL14:
 153              		.loc 1 138 14 view .LVU43
 154 008e EDB2     		uxtb	r5, r5
 155              	.LVL15:
 139:Core/Src/bno055.c ****                                                BNO055_GYRO_REV_ID_REG,
 140:Core/Src/bno055.c ****                                                &data_u8,
 141:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 142:Core/Src/bno055.c ****     p_bno055->gyro_rev_id = data_u8;
 156              		.loc 1 142 5 is_stmt 1 view .LVU44
 157              		.loc 1 142 13 is_stmt 0 view .LVU45
 158 0090 2068     		ldr	r0, [r4]
 159              		.loc 1 142 27 view .LVU46
 160 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 161 0096 C371     		strb	r3, [r0, #7]
 143:Core/Src/bno055.c **** 
 144:Core/Src/bno055.c ****     /* Read the boot loader revision from page
 145:Core/Src/bno055.c ****      * zero 0x06 register*/
 146:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 162              		.loc 1 146 5 is_stmt 1 view .LVU47
 163              		.loc 1 146 25 is_stmt 0 view .LVU48
 164 0098 0669     		ldr	r6, [r0, #16]
 165              		.loc 1 146 17 view .LVU49
 166 009a 0123     		movs	r3, #1
 167 009c 0DF10702 		add	r2, sp, #7
 168 00a0 0621     		movs	r1, #6
 169 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 170 00a4 B047     		blx	r6
 171              	.LVL16:
 172              		.loc 1 146 14 view .LVU50
 173 00a6 55FA80F5 		uxtab	r5, r5, r0
 174              	.LVL17:
 175              		.loc 1 146 14 view .LVU51
 176 00aa EDB2     		uxtb	r5, r5
 177              	.LVL18:
 147:Core/Src/bno055.c ****                                                BNO055_BL_REV_ID_REG,
 148:Core/Src/bno055.c ****                                                &data_u8,
 149:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 150:Core/Src/bno055.c ****     p_bno055->bl_rev_id = data_u8;
 178              		.loc 1 150 5 is_stmt 1 view .LVU52
 179              		.loc 1 150 13 is_stmt 0 view .LVU53
 180 00ac 2068     		ldr	r0, [r4]
 181              		.loc 1 150 25 view .LVU54
 182 00ae 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 183 00b2 0372     		strb	r3, [r0, #8]
 151:Core/Src/bno055.c **** 
 152:Core/Src/bno055.c ****     /* Read the software revision id from page
 153:Core/Src/bno055.c ****      * zero 0x04 and 0x05 register( 2 bytes of data)*/
 154:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 184              		.loc 1 154 5 is_stmt 1 view .LVU55
 185              		.loc 1 154 25 is_stmt 0 view .LVU56
 186 00b4 0669     		ldr	r6, [r0, #16]
 187              		.loc 1 154 17 view .LVU57
 188 00b6 0223     		movs	r3, #2
 189 00b8 01AA     		add	r2, sp, #4
ARM GAS  /tmp/ccOloYeZ.s 			page 7


 190 00ba 0421     		movs	r1, #4
 191 00bc 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 192 00be B047     		blx	r6
 193              	.LVL19:
 194              		.loc 1 154 14 view .LVU58
 195 00c0 55FA80F5 		uxtab	r5, r5, r0
 196              	.LVL20:
 197              		.loc 1 154 14 view .LVU59
 198 00c4 EDB2     		uxtb	r5, r5
 199              	.LVL21:
 155:Core/Src/bno055.c ****                                                BNO055_SW_REV_ID_LSB_REG,
 156:Core/Src/bno055.c ****                                                a_SW_ID_u8,
 157:Core/Src/bno055.c ****                                                BNO055_LSB_MSB_READ_LENGTH);
 158:Core/Src/bno055.c ****     a_SW_ID_u8[BNO055_SW_ID_LSB] = BNO055_GET_BITSLICE(a_SW_ID_u8[BNO055_SW_ID_LSB], BNO055_SW_REV_
 200              		.loc 1 158 5 is_stmt 1 view .LVU60
 201              		.loc 1 158 36 is_stmt 0 view .LVU61
 202 00c6 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 159:Core/Src/bno055.c ****     p_bno055->sw_rev_id =
 203              		.loc 1 159 5 is_stmt 1 view .LVU62
 160:Core/Src/bno055.c ****         (u16)((((u32)((u8)a_SW_ID_u8[BNO055_SW_ID_MSB])) << BNO055_SHIFT_EIGHT_BITS) | (a_SW_ID_u8[
 204              		.loc 1 160 37 is_stmt 0 view .LVU63
 205 00ca 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 159:Core/Src/bno055.c ****     p_bno055->sw_rev_id =
 206              		.loc 1 159 13 view .LVU64
 207 00ce 2068     		ldr	r0, [r4]
 208              		.loc 1 160 9 view .LVU65
 209 00d0 43EA0223 		orr	r3, r3, r2, lsl #8
 159:Core/Src/bno055.c ****     p_bno055->sw_rev_id =
 210              		.loc 1 159 25 view .LVU66
 211 00d4 4380     		strh	r3, [r0, #2]	@ movhi
 161:Core/Src/bno055.c **** 
 162:Core/Src/bno055.c ****     /* Read the page id from the register 0x07*/
 163:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 212              		.loc 1 163 5 is_stmt 1 view .LVU67
 213              		.loc 1 163 25 is_stmt 0 view .LVU68
 214 00d6 0669     		ldr	r6, [r0, #16]
 215              		.loc 1 163 17 view .LVU69
 216 00d8 0123     		movs	r3, #1
 217 00da 0DF10702 		add	r2, sp, #7
 218 00de 0721     		movs	r1, #7
 219 00e0 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 220 00e2 B047     		blx	r6
 221              	.LVL22:
 222              		.loc 1 163 14 view .LVU70
 223 00e4 55FA80F0 		uxtab	r0, r5, r0
 224              	.LVL23:
 164:Core/Src/bno055.c ****                                                BNO055_PAGE_ID_REG,
 165:Core/Src/bno055.c ****                                                &data_u8,
 166:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 167:Core/Src/bno055.c ****     p_bno055->page_id = data_u8;
 225              		.loc 1 167 5 is_stmt 1 view .LVU71
 226              		.loc 1 167 13 is_stmt 0 view .LVU72
 227 00e8 2368     		ldr	r3, [r4]
 228              		.loc 1 167 23 view .LVU73
 229 00ea 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 230 00ee 1A71     		strb	r2, [r3, #4]
 168:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 8


 169:Core/Src/bno055.c ****     return com_rslt;
 231              		.loc 1 169 5 is_stmt 1 view .LVU74
 170:Core/Src/bno055.c **** }
 232              		.loc 1 170 1 is_stmt 0 view .LVU75
 233 00f0 40B2     		sxtb	r0, r0
 234              		.loc 1 170 1 view .LVU76
 235 00f2 03B0     		add	sp, sp, #12
 236              		.cfi_def_cfa_offset 20
 237              		@ sp needed
 238 00f4 F0BD     		pop	{r4, r5, r6, r7, pc}
 239              	.L4:
 240 00f6 00BF     		.align	2
 241              	.L3:
 242 00f8 00000000 		.word	p_bno055
 243              		.cfi_endproc
 244              	.LFE0:
 246              		.section	.text.bno055_write_register,"ax",%progbits
 247              		.align	1
 248              		.global	bno055_write_register
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	bno055_write_register:
 254              	.LVL24:
 255              	.LFB1:
 171:Core/Src/bno055.c **** 
 172:Core/Src/bno055.c **** /*!
 173:Core/Src/bno055.c ****  *  @brief
 174:Core/Src/bno055.c ****  *  This API gives data to the given register and
 175:Core/Src/bno055.c ****  *  the data is written in the corresponding register address
 176:Core/Src/bno055.c ****  *
 177:Core/Src/bno055.c ****  *  @param addr_u8 : Address of the register
 178:Core/Src/bno055.c ****  *  @param data_u8 : Data to be written to the register
 179:Core/Src/bno055.c ****  *  @param len_u8  : Length of the Data
 180:Core/Src/bno055.c ****  *
 181:Core/Src/bno055.c ****  *  @return results of bus communication function
 182:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 183:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 184:Core/Src/bno055.c ****  *
 185:Core/Src/bno055.c ****  *
 186:Core/Src/bno055.c ****  */
 187:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_register(u8 addr_u8, u8 *data_u8, u8 len_u8)
 188:Core/Src/bno055.c **** {
 256              		.loc 1 188 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		.loc 1 188 1 is_stmt 0 view .LVU78
 261 0000 38B5     		push	{r3, r4, r5, lr}
 262              		.cfi_def_cfa_offset 16
 263              		.cfi_offset 3, -16
 264              		.cfi_offset 4, -12
 265              		.cfi_offset 5, -8
 266              		.cfi_offset 14, -4
 267 0002 1346     		mov	r3, r2
 189:Core/Src/bno055.c ****     /* Variable used to return value of
 190:Core/Src/bno055.c ****      * communication routine*/
ARM GAS  /tmp/ccOloYeZ.s 			page 9


 191:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 268              		.loc 1 191 5 is_stmt 1 view .LVU79
 269              	.LVL25:
 192:Core/Src/bno055.c **** 
 193:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 194:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 270              		.loc 1 194 5 view .LVU80
 271              		.loc 1 194 18 is_stmt 0 view .LVU81
 272 0004 054A     		ldr	r2, .L9
 273              	.LVL26:
 274              		.loc 1 194 18 view .LVU82
 275 0006 1468     		ldr	r4, [r2]
 276              		.loc 1 194 8 view .LVU83
 277 0008 2CB1     		cbz	r4, .L7
 195:Core/Src/bno055.c ****     {
 196:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 197:Core/Src/bno055.c ****     }
 198:Core/Src/bno055.c ****     else
 199:Core/Src/bno055.c ****     {
 200:Core/Src/bno055.c ****         /* Write the values of respective given register */
 201:Core/Src/bno055.c ****         com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr, addr_u8, data_u8, len_u8);
 278              		.loc 1 201 9 is_stmt 1 view .LVU84
 279              		.loc 1 201 28 is_stmt 0 view .LVU85
 280 000a E568     		ldr	r5, [r4, #12]
 281              		.loc 1 201 20 view .LVU86
 282 000c 0A46     		mov	r2, r1
 283 000e 0146     		mov	r1, r0
 284              	.LVL27:
 285              		.loc 1 201 20 view .LVU87
 286 0010 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 287              	.LVL28:
 288              		.loc 1 201 20 view .LVU88
 289 0012 A847     		blx	r5
 290              	.LVL29:
 202:Core/Src/bno055.c ****     }
 203:Core/Src/bno055.c **** 
 204:Core/Src/bno055.c ****     return com_rslt;
 291              		.loc 1 204 5 is_stmt 1 view .LVU89
 292              	.L6:
 205:Core/Src/bno055.c **** }
 293              		.loc 1 205 1 is_stmt 0 view .LVU90
 294 0014 38BD     		pop	{r3, r4, r5, pc}
 295              	.LVL30:
 296              	.L7:
 196:Core/Src/bno055.c ****     }
 297              		.loc 1 196 16 view .LVU91
 298 0016 6FF07E00 		mvn	r0, #126
 299              	.LVL31:
 196:Core/Src/bno055.c ****     }
 300              		.loc 1 196 16 view .LVU92
 301 001a FBE7     		b	.L6
 302              	.L10:
 303              		.align	2
 304              	.L9:
 305 001c 00000000 		.word	p_bno055
 306              		.cfi_endproc
 307              	.LFE1:
ARM GAS  /tmp/ccOloYeZ.s 			page 10


 309              		.section	.text.bno055_read_register,"ax",%progbits
 310              		.align	1
 311              		.global	bno055_read_register
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 316              	bno055_read_register:
 317              	.LVL32:
 318              	.LFB2:
 206:Core/Src/bno055.c **** 
 207:Core/Src/bno055.c **** /*!
 208:Core/Src/bno055.c ****  *  @brief This API reads the data from
 209:Core/Src/bno055.c ****  *  the given register address
 210:Core/Src/bno055.c ****  *
 211:Core/Src/bno055.c ****  *  @param addr_u8 : Address of the register
 212:Core/Src/bno055.c ****  *  @param data_u8 : address of the variable,
 213:Core/Src/bno055.c ****  *  read value will be kept
 214:Core/Src/bno055.c ****  *  @param len_u8  : Length of the data
 215:Core/Src/bno055.c ****  *
 216:Core/Src/bno055.c ****  *
 217:Core/Src/bno055.c ****  *  @return results of bus communication function
 218:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 219:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 220:Core/Src/bno055.c ****  *
 221:Core/Src/bno055.c ****  */
 222:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_register(u8 addr_u8, u8 *data_u8, u8 len_u8)
 223:Core/Src/bno055.c **** {
 319              		.loc 1 223 1 is_stmt 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              		.loc 1 223 1 is_stmt 0 view .LVU94
 324 0000 38B5     		push	{r3, r4, r5, lr}
 325              		.cfi_def_cfa_offset 16
 326              		.cfi_offset 3, -16
 327              		.cfi_offset 4, -12
 328              		.cfi_offset 5, -8
 329              		.cfi_offset 14, -4
 330 0002 1346     		mov	r3, r2
 224:Core/Src/bno055.c ****     /* Variable used to return value of
 225:Core/Src/bno055.c ****      * communication routine*/
 226:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 331              		.loc 1 226 5 is_stmt 1 view .LVU95
 332              	.LVL33:
 227:Core/Src/bno055.c **** 
 228:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 229:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 333              		.loc 1 229 5 view .LVU96
 334              		.loc 1 229 18 is_stmt 0 view .LVU97
 335 0004 054A     		ldr	r2, .L15
 336              	.LVL34:
 337              		.loc 1 229 18 view .LVU98
 338 0006 1468     		ldr	r4, [r2]
 339              		.loc 1 229 8 view .LVU99
 340 0008 2CB1     		cbz	r4, .L13
 230:Core/Src/bno055.c ****     {
 231:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
ARM GAS  /tmp/ccOloYeZ.s 			page 11


 232:Core/Src/bno055.c ****     }
 233:Core/Src/bno055.c ****     else
 234:Core/Src/bno055.c ****     {
 235:Core/Src/bno055.c ****         /* Read the value from given register*/
 236:Core/Src/bno055.c ****         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr, addr_u8, data_u8, len_u8);
 341              		.loc 1 236 9 is_stmt 1 view .LVU100
 342              		.loc 1 236 28 is_stmt 0 view .LVU101
 343 000a 2569     		ldr	r5, [r4, #16]
 344              		.loc 1 236 20 view .LVU102
 345 000c 0A46     		mov	r2, r1
 346 000e 0146     		mov	r1, r0
 347              	.LVL35:
 348              		.loc 1 236 20 view .LVU103
 349 0010 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 350              	.LVL36:
 351              		.loc 1 236 20 view .LVU104
 352 0012 A847     		blx	r5
 353              	.LVL37:
 237:Core/Src/bno055.c ****     }
 238:Core/Src/bno055.c **** 
 239:Core/Src/bno055.c ****     return com_rslt;
 354              		.loc 1 239 5 is_stmt 1 view .LVU105
 355              	.L12:
 240:Core/Src/bno055.c **** }
 356              		.loc 1 240 1 is_stmt 0 view .LVU106
 357 0014 38BD     		pop	{r3, r4, r5, pc}
 358              	.LVL38:
 359              	.L13:
 231:Core/Src/bno055.c ****     }
 360              		.loc 1 231 16 view .LVU107
 361 0016 6FF07E00 		mvn	r0, #126
 362              	.LVL39:
 231:Core/Src/bno055.c ****     }
 363              		.loc 1 231 16 view .LVU108
 364 001a FBE7     		b	.L12
 365              	.L16:
 366              		.align	2
 367              	.L15:
 368 001c 00000000 		.word	p_bno055
 369              		.cfi_endproc
 370              	.LFE2:
 372              		.section	.text.bno055_read_page_id,"ax",%progbits
 373              		.align	1
 374              		.global	bno055_read_page_id
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 379              	bno055_read_page_id:
 380              	.LVL40:
 381              	.LFB5:
 241:Core/Src/bno055.c **** 
 242:Core/Src/bno055.c **** /*!
 243:Core/Src/bno055.c ****  *  @brief This API reads chip id
 244:Core/Src/bno055.c ****  *  from register 0x00 it is a byte of data
 245:Core/Src/bno055.c ****  *
 246:Core/Src/bno055.c ****  *
 247:Core/Src/bno055.c ****  *  @param chip_id_u8 : The chip id value 0xA0
ARM GAS  /tmp/ccOloYeZ.s 			page 12


 248:Core/Src/bno055.c ****  *
 249:Core/Src/bno055.c ****  *  @return results of bus communication function
 250:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 251:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 252:Core/Src/bno055.c ****  */
 253:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_chip_id(u8 *chip_id_u8)
 254:Core/Src/bno055.c **** {
 255:Core/Src/bno055.c ****     /* Variable used to return value of
 256:Core/Src/bno055.c ****      * communication routine*/
 257:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 258:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 259:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 260:Core/Src/bno055.c **** 
 261:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 262:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 263:Core/Src/bno055.c ****     {
 264:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 265:Core/Src/bno055.c ****     }
 266:Core/Src/bno055.c ****     else
 267:Core/Src/bno055.c ****     {
 268:Core/Src/bno055.c ****         /*condition check for page, chip id is
 269:Core/Src/bno055.c ****          * available in the page zero*/
 270:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 271:Core/Src/bno055.c ****         {
 272:Core/Src/bno055.c ****             /* Write the page zero*/
 273:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 274:Core/Src/bno055.c ****         }
 275:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 276:Core/Src/bno055.c ****         {
 277:Core/Src/bno055.c ****             /* Read the chip id*/
 278:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 279:Core/Src/bno055.c ****                                                       BNO055_CHIP_ID_REG,
 280:Core/Src/bno055.c ****                                                       &data_u8,
 281:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 282:Core/Src/bno055.c ****             *chip_id_u8 = data_u8;
 283:Core/Src/bno055.c ****         }
 284:Core/Src/bno055.c ****         else
 285:Core/Src/bno055.c ****         {
 286:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 287:Core/Src/bno055.c ****         }
 288:Core/Src/bno055.c ****     }
 289:Core/Src/bno055.c **** 
 290:Core/Src/bno055.c ****     return com_rslt;
 291:Core/Src/bno055.c **** }
 292:Core/Src/bno055.c **** 
 293:Core/Src/bno055.c **** /*!
 294:Core/Src/bno055.c ****  *  @brief This API reads software revision id
 295:Core/Src/bno055.c ****  *  from register 0x04 and 0x05 it is a two byte of data
 296:Core/Src/bno055.c ****  *
 297:Core/Src/bno055.c ****  *  @param sw_id_u8 : The SW revision id
 298:Core/Src/bno055.c ****  *
 299:Core/Src/bno055.c ****  *  @return results of bus communication function
 300:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 301:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 302:Core/Src/bno055.c ****  *
 303:Core/Src/bno055.c ****  *
 304:Core/Src/bno055.c ****  */
ARM GAS  /tmp/ccOloYeZ.s 			page 13


 305:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_sw_rev_id(u16 *sw_id_u8)
 306:Core/Src/bno055.c **** {
 307:Core/Src/bno055.c ****     /* Variable used to return value of
 308:Core/Src/bno055.c ****      * communication routine*/
 309:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 310:Core/Src/bno055.c **** 
 311:Core/Src/bno055.c ****     /* array having the software revision id
 312:Core/Src/bno055.c ****      * data_u8[0] - LSB
 313:Core/Src/bno055.c ****      * data_u8[1] - MSB*/
 314:Core/Src/bno055.c ****     u8 data_u8[BNO055_REV_ID_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 315:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 316:Core/Src/bno055.c **** 
 317:Core/Src/bno055.c ****     /* Check the struct  p_bno055 is empty*/
 318:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 319:Core/Src/bno055.c ****     {
 320:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 321:Core/Src/bno055.c ****     }
 322:Core/Src/bno055.c ****     else
 323:Core/Src/bno055.c ****     {
 324:Core/Src/bno055.c ****         /*condition check for page, chip id is
 325:Core/Src/bno055.c ****          * available in the page zero*/
 326:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 327:Core/Src/bno055.c ****         {
 328:Core/Src/bno055.c ****             /* Write the page zero*/
 329:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 330:Core/Src/bno055.c ****         }
 331:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 332:Core/Src/bno055.c ****         {
 333:Core/Src/bno055.c ****             /* Read the two byte value of software
 334:Core/Src/bno055.c ****              * revision id*/
 335:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 336:Core/Src/bno055.c ****                                                       BNO055_SW_REV_ID_LSB_REG,
 337:Core/Src/bno055.c ****                                                       data_u8,
 338:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
 339:Core/Src/bno055.c ****             data_u8[BNO055_SW_ID_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SW_ID_LSB], BNO055_SW_RE
 340:Core/Src/bno055.c ****             *sw_id_u8 =
 341:Core/Src/bno055.c ****                 (u16)((((u32)((u8)data_u8[BNO055_SW_ID_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 342:Core/Src/bno055.c ****                       (data_u8[BNO055_SW_ID_LSB]));
 343:Core/Src/bno055.c ****         }
 344:Core/Src/bno055.c ****         else
 345:Core/Src/bno055.c ****         {
 346:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 347:Core/Src/bno055.c ****         }
 348:Core/Src/bno055.c ****     }
 349:Core/Src/bno055.c **** 
 350:Core/Src/bno055.c ****     return com_rslt;
 351:Core/Src/bno055.c **** }
 352:Core/Src/bno055.c **** 
 353:Core/Src/bno055.c **** /*!
 354:Core/Src/bno055.c ****  *  @brief This API reads page id
 355:Core/Src/bno055.c ****  *  from register 0x07 it is a byte of data
 356:Core/Src/bno055.c ****  *
 357:Core/Src/bno055.c ****  *
 358:Core/Src/bno055.c ****  *  @param page_id_u8 : The value of page id
 359:Core/Src/bno055.c ****  *
 360:Core/Src/bno055.c ****  *  BNO055_PAGE_ZERO -> 0x00
 361:Core/Src/bno055.c ****  *  BNO055_PAGE_ONE  -> 0x01
ARM GAS  /tmp/ccOloYeZ.s 			page 14


 362:Core/Src/bno055.c ****  *
 363:Core/Src/bno055.c ****  *  @return results of bus communication function
 364:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 365:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 366:Core/Src/bno055.c ****  *
 367:Core/Src/bno055.c ****  *
 368:Core/Src/bno055.c ****  */
 369:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_page_id(u8 *page_id_u8)
 370:Core/Src/bno055.c **** {
 382              		.loc 1 370 1 is_stmt 1 view -0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 8
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		.loc 1 370 1 is_stmt 0 view .LVU110
 387 0000 70B5     		push	{r4, r5, r6, lr}
 388              		.cfi_def_cfa_offset 16
 389              		.cfi_offset 4, -16
 390              		.cfi_offset 5, -12
 391              		.cfi_offset 6, -8
 392              		.cfi_offset 14, -4
 393 0002 82B0     		sub	sp, sp, #8
 394              		.cfi_def_cfa_offset 24
 371:Core/Src/bno055.c ****     /* Variable used to return value of
 372:Core/Src/bno055.c ****      * communication routine*/
 373:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 395              		.loc 1 373 5 is_stmt 1 view .LVU111
 396              	.LVL41:
 374:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 397              		.loc 1 374 5 view .LVU112
 398              		.loc 1 374 8 is_stmt 0 view .LVU113
 399 0004 0023     		movs	r3, #0
 400 0006 8DF80730 		strb	r3, [sp, #7]
 375:Core/Src/bno055.c **** 
 376:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 377:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 401              		.loc 1 377 5 is_stmt 1 view .LVU114
 402              		.loc 1 377 18 is_stmt 0 view .LVU115
 403 000a 0D4B     		ldr	r3, .L22
 404 000c 1C68     		ldr	r4, [r3]
 405              		.loc 1 377 8 view .LVU116
 406 000e 84B1     		cbz	r4, .L19
 407 0010 0546     		mov	r5, r0
 378:Core/Src/bno055.c ****     {
 379:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 380:Core/Src/bno055.c ****     }
 381:Core/Src/bno055.c ****     else
 382:Core/Src/bno055.c ****     {
 383:Core/Src/bno055.c ****         /* Read the page id form 0x07*/
 384:Core/Src/bno055.c ****         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 408              		.loc 1 384 9 is_stmt 1 view .LVU117
 409              		.loc 1 384 28 is_stmt 0 view .LVU118
 410 0012 2669     		ldr	r6, [r4, #16]
 411              		.loc 1 384 20 view .LVU119
 412 0014 0123     		movs	r3, #1
 413 0016 0DF10702 		add	r2, sp, #7
 414 001a 0721     		movs	r1, #7
 415 001c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccOloYeZ.s 			page 15


 416              	.LVL42:
 417              		.loc 1 384 20 view .LVU120
 418 001e B047     		blx	r6
 419              	.LVL43:
 385:Core/Src/bno055.c ****                                                   BNO055_PAGE_ID_REG,
 386:Core/Src/bno055.c ****                                                   &data_u8,
 387:Core/Src/bno055.c ****                                                   BNO055_GEN_READ_WRITE_LENGTH);
 388:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 420              		.loc 1 388 9 is_stmt 1 view .LVU121
 421              		.loc 1 388 12 is_stmt 0 view .LVU122
 422 0020 50B9     		cbnz	r0, .L20
 389:Core/Src/bno055.c ****         {
 390:Core/Src/bno055.c ****             data_u8 = BNO055_GET_BITSLICE(data_u8, BNO055_PAGE_ID);
 423              		.loc 1 390 13 is_stmt 1 view .LVU123
 424              		.loc 1 390 21 is_stmt 0 view .LVU124
 425 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 391:Core/Src/bno055.c ****             *page_id_u8 = data_u8;
 426              		.loc 1 391 13 is_stmt 1 view .LVU125
 427              		.loc 1 391 25 is_stmt 0 view .LVU126
 428 0026 2B70     		strb	r3, [r5]
 392:Core/Src/bno055.c ****             p_bno055->page_id = data_u8;
 429              		.loc 1 392 13 is_stmt 1 view .LVU127
 430              		.loc 1 392 21 is_stmt 0 view .LVU128
 431 0028 054A     		ldr	r2, .L22
 432 002a 1268     		ldr	r2, [r2]
 433              		.loc 1 392 31 view .LVU129
 434 002c 1371     		strb	r3, [r2, #4]
 435              	.LVL44:
 436              	.L18:
 393:Core/Src/bno055.c ****         }
 394:Core/Src/bno055.c ****         else
 395:Core/Src/bno055.c ****         {
 396:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 397:Core/Src/bno055.c ****         }
 398:Core/Src/bno055.c ****     }
 399:Core/Src/bno055.c **** 
 400:Core/Src/bno055.c ****     return com_rslt;
 401:Core/Src/bno055.c **** }
 437              		.loc 1 401 1 view .LVU130
 438 002e 02B0     		add	sp, sp, #8
 439              		.cfi_remember_state
 440              		.cfi_def_cfa_offset 16
 441              		@ sp needed
 442 0030 70BD     		pop	{r4, r5, r6, pc}
 443              	.LVL45:
 444              	.L19:
 445              		.cfi_restore_state
 379:Core/Src/bno055.c ****     }
 446              		.loc 1 379 16 view .LVU131
 447 0032 6FF07E00 		mvn	r0, #126
 448              	.LVL46:
 379:Core/Src/bno055.c ****     }
 449              		.loc 1 379 16 view .LVU132
 450 0036 FAE7     		b	.L18
 451              	.LVL47:
 452              	.L20:
 396:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 16


 453              		.loc 1 396 22 view .LVU133
 454 0038 4FF0FF30 		mov	r0, #-1
 455              	.LVL48:
 396:Core/Src/bno055.c ****         }
 456              		.loc 1 396 22 view .LVU134
 457 003c F7E7     		b	.L18
 458              	.L23:
 459 003e 00BF     		.align	2
 460              	.L22:
 461 0040 00000000 		.word	p_bno055
 462              		.cfi_endproc
 463              	.LFE5:
 465              		.section	.text.bno055_write_page_id,"ax",%progbits
 466              		.align	1
 467              		.global	bno055_write_page_id
 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 472              	bno055_write_page_id:
 473              	.LVL49:
 474              	.LFB6:
 402:Core/Src/bno055.c **** 
 403:Core/Src/bno055.c **** /*!
 404:Core/Src/bno055.c ****  *  @brief This API used to write
 405:Core/Src/bno055.c ****  *  the page id register 0x07
 406:Core/Src/bno055.c ****  *
 407:Core/Src/bno055.c ****  *  @param page_id_u8 : The value of page id
 408:Core/Src/bno055.c ****  *
 409:Core/Src/bno055.c ****  *  BNO055_PAGE_ZERO -> 0x00
 410:Core/Src/bno055.c ****  *  BNO055_PAGE_ONE  -> 0x01
 411:Core/Src/bno055.c ****  *
 412:Core/Src/bno055.c ****  *  @return results of bus communication function
 413:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 414:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 415:Core/Src/bno055.c ****  *
 416:Core/Src/bno055.c ****  *
 417:Core/Src/bno055.c ****  */
 418:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_page_id(u8 page_id_u8)
 419:Core/Src/bno055.c **** {
 475              		.loc 1 419 1 is_stmt 1 view -0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 8
 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479              		.loc 1 419 1 is_stmt 0 view .LVU136
 480 0000 70B5     		push	{r4, r5, r6, lr}
 481              		.cfi_def_cfa_offset 16
 482              		.cfi_offset 4, -16
 483              		.cfi_offset 5, -12
 484              		.cfi_offset 6, -8
 485              		.cfi_offset 14, -4
 486 0002 82B0     		sub	sp, sp, #8
 487              		.cfi_def_cfa_offset 24
 488 0004 0446     		mov	r4, r0
 420:Core/Src/bno055.c ****     /* Variable used to return value of
 421:Core/Src/bno055.c ****      * communication routine*/
 422:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 489              		.loc 1 422 5 is_stmt 1 view .LVU137
ARM GAS  /tmp/ccOloYeZ.s 			page 17


 490              	.LVL50:
 423:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 491              		.loc 1 423 5 view .LVU138
 492              		.loc 1 423 8 is_stmt 0 view .LVU139
 493 0006 0023     		movs	r3, #0
 494 0008 8DF80730 		strb	r3, [sp, #7]
 424:Core/Src/bno055.c **** 
 425:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 426:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 495              		.loc 1 426 5 is_stmt 1 view .LVU140
 496              		.loc 1 426 18 is_stmt 0 view .LVU141
 497 000c 124B     		ldr	r3, .L29
 498 000e 1868     		ldr	r0, [r3]
 499              	.LVL51:
 500              		.loc 1 426 8 view .LVU142
 501 0010 E0B1     		cbz	r0, .L26
 427:Core/Src/bno055.c ****     {
 428:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 429:Core/Src/bno055.c ****     }
 430:Core/Src/bno055.c ****     else
 431:Core/Src/bno055.c ****     {
 432:Core/Src/bno055.c ****         /* Read the current page*/
 433:Core/Src/bno055.c ****         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 502              		.loc 1 433 9 is_stmt 1 view .LVU143
 503              		.loc 1 433 28 is_stmt 0 view .LVU144
 504 0012 0569     		ldr	r5, [r0, #16]
 505              		.loc 1 433 20 view .LVU145
 506 0014 0123     		movs	r3, #1
 507 0016 0DF10702 		add	r2, sp, #7
 508 001a 0721     		movs	r1, #7
 509 001c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 510 001e A847     		blx	r5
 511              	.LVL52:
 434:Core/Src/bno055.c ****                                                   BNO055_PAGE_ID_REG,
 435:Core/Src/bno055.c ****                                                   &data_u8r,
 436:Core/Src/bno055.c ****                                                   BNO055_GEN_READ_WRITE_LENGTH);
 437:Core/Src/bno055.c **** 
 438:Core/Src/bno055.c ****         /* Check condition for communication BNO055_SUCCESS*/
 439:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 512              		.loc 1 439 9 is_stmt 1 view .LVU146
 513              		.loc 1 439 12 is_stmt 0 view .LVU147
 514 0020 0546     		mov	r5, r0
 515 0022 B0B9     		cbnz	r0, .L27
 440:Core/Src/bno055.c ****         {
 441:Core/Src/bno055.c ****             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_PAGE_ID, page_id_u8);
 516              		.loc 1 441 13 is_stmt 1 view .LVU148
 517              		.loc 1 441 22 is_stmt 0 view .LVU149
 518 0024 8DF80740 		strb	r4, [sp, #7]
 442:Core/Src/bno055.c **** 
 443:Core/Src/bno055.c ****             /* Write the page id*/
 444:Core/Src/bno055.c ****             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 519              		.loc 1 444 13 is_stmt 1 view .LVU150
 520              		.loc 1 444 33 is_stmt 0 view .LVU151
 521 0028 0B4B     		ldr	r3, .L29
 522 002a 1868     		ldr	r0, [r3]
 523              	.LVL53:
 524              		.loc 1 444 33 view .LVU152
ARM GAS  /tmp/ccOloYeZ.s 			page 18


 525 002c C668     		ldr	r6, [r0, #12]
 526              		.loc 1 444 25 view .LVU153
 527 002e 0123     		movs	r3, #1
 528 0030 0DF10702 		add	r2, sp, #7
 529 0034 0721     		movs	r1, #7
 530 0036 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 531 0038 B047     		blx	r6
 532              	.LVL54:
 533              		.loc 1 444 22 view .LVU154
 534 003a 55FA80F3 		uxtab	r3, r5, r0
 535 003e 58B2     		sxtb	r0, r3
 536              	.LVL55:
 445:Core/Src/bno055.c ****                                                         BNO055_PAGE_ID_REG,
 446:Core/Src/bno055.c ****                                                         &data_u8r,
 447:Core/Src/bno055.c ****                                                         BNO055_GEN_READ_WRITE_LENGTH);
 448:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 537              		.loc 1 448 13 is_stmt 1 view .LVU155
 538              		.loc 1 448 16 is_stmt 0 view .LVU156
 539 0040 10B9     		cbnz	r0, .L25
 449:Core/Src/bno055.c ****             {
 450:Core/Src/bno055.c ****                 p_bno055->page_id = page_id_u8;
 540              		.loc 1 450 17 is_stmt 1 view .LVU157
 541              		.loc 1 450 25 is_stmt 0 view .LVU158
 542 0042 054B     		ldr	r3, .L29
 543 0044 1B68     		ldr	r3, [r3]
 544              		.loc 1 450 35 view .LVU159
 545 0046 1C71     		strb	r4, [r3, #4]
 546              	.LVL56:
 547              	.L25:
 451:Core/Src/bno055.c ****             }
 452:Core/Src/bno055.c ****         }
 453:Core/Src/bno055.c ****         else
 454:Core/Src/bno055.c ****         {
 455:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 456:Core/Src/bno055.c ****         }
 457:Core/Src/bno055.c ****     }
 458:Core/Src/bno055.c **** 
 459:Core/Src/bno055.c ****     return com_rslt;
 460:Core/Src/bno055.c **** }
 548              		.loc 1 460 1 view .LVU160
 549 0048 02B0     		add	sp, sp, #8
 550              		.cfi_remember_state
 551              		.cfi_def_cfa_offset 16
 552              		@ sp needed
 553 004a 70BD     		pop	{r4, r5, r6, pc}
 554              	.LVL57:
 555              	.L26:
 556              		.cfi_restore_state
 428:Core/Src/bno055.c ****     }
 557              		.loc 1 428 16 view .LVU161
 558 004c 6FF07E00 		mvn	r0, #126
 559 0050 FAE7     		b	.L25
 560              	.LVL58:
 561              	.L27:
 455:Core/Src/bno055.c ****         }
 562              		.loc 1 455 22 view .LVU162
 563 0052 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccOloYeZ.s 			page 19


 564              	.LVL59:
 455:Core/Src/bno055.c ****         }
 565              		.loc 1 455 22 view .LVU163
 566 0056 F7E7     		b	.L25
 567              	.L30:
 568              		.align	2
 569              	.L29:
 570 0058 00000000 		.word	p_bno055
 571              		.cfi_endproc
 572              	.LFE6:
 574              		.section	.text.bno055_read_chip_id,"ax",%progbits
 575              		.align	1
 576              		.global	bno055_read_chip_id
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 581              	bno055_read_chip_id:
 582              	.LVL60:
 583              	.LFB3:
 254:Core/Src/bno055.c ****     /* Variable used to return value of
 584              		.loc 1 254 1 is_stmt 1 view -0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 8
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 254:Core/Src/bno055.c ****     /* Variable used to return value of
 588              		.loc 1 254 1 is_stmt 0 view .LVU165
 589 0000 70B5     		push	{r4, r5, r6, lr}
 590              		.cfi_def_cfa_offset 16
 591              		.cfi_offset 4, -16
 592              		.cfi_offset 5, -12
 593              		.cfi_offset 6, -8
 594              		.cfi_offset 14, -4
 595 0002 82B0     		sub	sp, sp, #8
 596              		.cfi_def_cfa_offset 24
 257:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 597              		.loc 1 257 5 is_stmt 1 view .LVU166
 598              	.LVL61:
 258:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 599              		.loc 1 258 5 view .LVU167
 258:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 600              		.loc 1 258 8 is_stmt 0 view .LVU168
 601 0004 0023     		movs	r3, #0
 602 0006 8DF80730 		strb	r3, [sp, #7]
 259:Core/Src/bno055.c **** 
 603              		.loc 1 259 5 is_stmt 1 view .LVU169
 604              	.LVL62:
 262:Core/Src/bno055.c ****     {
 605              		.loc 1 262 5 view .LVU170
 262:Core/Src/bno055.c ****     {
 606              		.loc 1 262 18 is_stmt 0 view .LVU171
 607 000a 124B     		ldr	r3, .L39
 608 000c 1B68     		ldr	r3, [r3]
 262:Core/Src/bno055.c ****     {
 609              		.loc 1 262 8 view .LVU172
 610 000e D3B1     		cbz	r3, .L35
 611 0010 0546     		mov	r5, r0
 270:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccOloYeZ.s 			page 20


 612              		.loc 1 270 9 is_stmt 1 view .LVU173
 270:Core/Src/bno055.c ****         {
 613              		.loc 1 270 21 is_stmt 0 view .LVU174
 614 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 270:Core/Src/bno055.c ****         {
 615              		.loc 1 270 12 view .LVU175
 616 0014 8BB9     		cbnz	r3, .L38
 617              	.LVL63:
 618              	.L33:
 275:Core/Src/bno055.c ****         {
 619              		.loc 1 275 53 discriminator 1 view .LVU176
 620 0016 0F4B     		ldr	r3, .L39
 621 0018 1B68     		ldr	r3, [r3]
 622 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 275:Core/Src/bno055.c ****         {
 623              		.loc 1 275 41 discriminator 1 view .LVU177
 624 001c B3B9     		cbnz	r3, .L36
 625              	.L34:
 278:Core/Src/bno055.c ****                                                       BNO055_CHIP_ID_REG,
 626              		.loc 1 278 13 is_stmt 1 view .LVU178
 278:Core/Src/bno055.c ****                                                       BNO055_CHIP_ID_REG,
 627              		.loc 1 278 32 is_stmt 0 view .LVU179
 628 001e 0D4B     		ldr	r3, .L39
 629 0020 1C68     		ldr	r4, [r3]
 630 0022 2669     		ldr	r6, [r4, #16]
 278:Core/Src/bno055.c ****                                                       BNO055_CHIP_ID_REG,
 631              		.loc 1 278 24 view .LVU180
 632 0024 0123     		movs	r3, #1
 633 0026 0DF10702 		add	r2, sp, #7
 634 002a 0021     		movs	r1, #0
 635 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 636 002e B047     		blx	r6
 637              	.LVL64:
 282:Core/Src/bno055.c ****         }
 638              		.loc 1 282 13 is_stmt 1 view .LVU181
 282:Core/Src/bno055.c ****         }
 639              		.loc 1 282 25 is_stmt 0 view .LVU182
 640 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 641 0034 2B70     		strb	r3, [r5]
 642              	.LVL65:
 643              	.L32:
 291:Core/Src/bno055.c **** 
 644              		.loc 1 291 1 view .LVU183
 645 0036 02B0     		add	sp, sp, #8
 646              		.cfi_remember_state
 647              		.cfi_def_cfa_offset 16
 648              		@ sp needed
 649 0038 70BD     		pop	{r4, r5, r6, pc}
 650              	.LVL66:
 651              	.L38:
 652              		.cfi_restore_state
 273:Core/Src/bno055.c ****         }
 653              		.loc 1 273 13 is_stmt 1 view .LVU184
 273:Core/Src/bno055.c ****         }
 654              		.loc 1 273 23 is_stmt 0 view .LVU185
 655 003a 0020     		movs	r0, #0
 656              	.LVL67:
ARM GAS  /tmp/ccOloYeZ.s 			page 21


 273:Core/Src/bno055.c ****         }
 657              		.loc 1 273 23 view .LVU186
 658 003c FFF7FEFF 		bl	bno055_write_page_id
 659              	.LVL68:
 275:Core/Src/bno055.c ****         {
 660              		.loc 1 275 9 is_stmt 1 view .LVU187
 275:Core/Src/bno055.c ****         {
 661              		.loc 1 275 12 is_stmt 0 view .LVU188
 662 0040 0028     		cmp	r0, #0
 663 0042 ECD0     		beq	.L34
 664 0044 E7E7     		b	.L33
 665              	.LVL69:
 666              	.L35:
 264:Core/Src/bno055.c ****     }
 667              		.loc 1 264 16 view .LVU189
 668 0046 6FF07E00 		mvn	r0, #126
 669              	.LVL70:
 264:Core/Src/bno055.c ****     }
 670              		.loc 1 264 16 view .LVU190
 671 004a F4E7     		b	.L32
 672              	.LVL71:
 673              	.L36:
 286:Core/Src/bno055.c ****         }
 674              		.loc 1 286 22 view .LVU191
 675 004c 4FF0FF30 		mov	r0, #-1
 676 0050 F1E7     		b	.L32
 677              	.L40:
 678 0052 00BF     		.align	2
 679              	.L39:
 680 0054 00000000 		.word	p_bno055
 681              		.cfi_endproc
 682              	.LFE3:
 684              		.section	.text.bno055_read_sw_rev_id,"ax",%progbits
 685              		.align	1
 686              		.global	bno055_read_sw_rev_id
 687              		.syntax unified
 688              		.thumb
 689              		.thumb_func
 691              	bno055_read_sw_rev_id:
 692              	.LVL72:
 693              	.LFB4:
 306:Core/Src/bno055.c ****     /* Variable used to return value of
 694              		.loc 1 306 1 is_stmt 1 view -0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 8
 697              		@ frame_needed = 0, uses_anonymous_args = 0
 306:Core/Src/bno055.c ****     /* Variable used to return value of
 698              		.loc 1 306 1 is_stmt 0 view .LVU193
 699 0000 30B5     		push	{r4, r5, lr}
 700              		.cfi_def_cfa_offset 12
 701              		.cfi_offset 4, -12
 702              		.cfi_offset 5, -8
 703              		.cfi_offset 14, -4
 704 0002 83B0     		sub	sp, sp, #12
 705              		.cfi_def_cfa_offset 24
 309:Core/Src/bno055.c **** 
 706              		.loc 1 309 5 is_stmt 1 view .LVU194
ARM GAS  /tmp/ccOloYeZ.s 			page 22


 707              	.LVL73:
 314:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 708              		.loc 1 314 5 view .LVU195
 314:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 709              		.loc 1 314 8 is_stmt 0 view .LVU196
 710 0004 0023     		movs	r3, #0
 711 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 315:Core/Src/bno055.c **** 
 712              		.loc 1 315 5 is_stmt 1 view .LVU197
 713              	.LVL74:
 318:Core/Src/bno055.c ****     {
 714              		.loc 1 318 5 view .LVU198
 318:Core/Src/bno055.c ****     {
 715              		.loc 1 318 18 is_stmt 0 view .LVU199
 716 000a 134B     		ldr	r3, .L49
 717 000c 1B68     		ldr	r3, [r3]
 318:Core/Src/bno055.c ****     {
 718              		.loc 1 318 8 view .LVU200
 719 000e EBB1     		cbz	r3, .L45
 720 0010 0446     		mov	r4, r0
 326:Core/Src/bno055.c ****         {
 721              		.loc 1 326 9 is_stmt 1 view .LVU201
 326:Core/Src/bno055.c ****         {
 722              		.loc 1 326 21 is_stmt 0 view .LVU202
 723 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 326:Core/Src/bno055.c ****         {
 724              		.loc 1 326 12 view .LVU203
 725 0014 A3B9     		cbnz	r3, .L48
 726              	.LVL75:
 727              	.L43:
 331:Core/Src/bno055.c ****         {
 728              		.loc 1 331 53 discriminator 1 view .LVU204
 729 0016 104B     		ldr	r3, .L49
 730 0018 1B68     		ldr	r3, [r3]
 731 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 331:Core/Src/bno055.c ****         {
 732              		.loc 1 331 41 discriminator 1 view .LVU205
 733 001c CBB9     		cbnz	r3, .L46
 734              	.L44:
 335:Core/Src/bno055.c ****                                                       BNO055_SW_REV_ID_LSB_REG,
 735              		.loc 1 335 13 is_stmt 1 view .LVU206
 335:Core/Src/bno055.c ****                                                       BNO055_SW_REV_ID_LSB_REG,
 736              		.loc 1 335 32 is_stmt 0 view .LVU207
 737 001e 0E4B     		ldr	r3, .L49
 738 0020 1868     		ldr	r0, [r3]
 739 0022 0569     		ldr	r5, [r0, #16]
 335:Core/Src/bno055.c ****                                                       BNO055_SW_REV_ID_LSB_REG,
 740              		.loc 1 335 24 view .LVU208
 741 0024 0223     		movs	r3, #2
 742 0026 01AA     		add	r2, sp, #4
 743 0028 0421     		movs	r1, #4
 744 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 745 002c A847     		blx	r5
 746              	.LVL76:
 339:Core/Src/bno055.c ****             *sw_id_u8 =
 747              		.loc 1 339 13 is_stmt 1 view .LVU209
 339:Core/Src/bno055.c ****             *sw_id_u8 =
ARM GAS  /tmp/ccOloYeZ.s 			page 23


 748              		.loc 1 339 41 is_stmt 0 view .LVU210
 749 002e 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 340:Core/Src/bno055.c ****                 (u16)((((u32)((u8)data_u8[BNO055_SW_ID_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 750              		.loc 1 340 13 is_stmt 1 view .LVU211
 341:Core/Src/bno055.c ****                       (data_u8[BNO055_SW_ID_LSB]));
 751              		.loc 1 341 42 is_stmt 0 view .LVU212
 752 0032 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 341:Core/Src/bno055.c ****                       (data_u8[BNO055_SW_ID_LSB]));
 753              		.loc 1 341 17 view .LVU213
 754 0036 43EA0223 		orr	r3, r3, r2, lsl #8
 340:Core/Src/bno055.c ****                 (u16)((((u32)((u8)data_u8[BNO055_SW_ID_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 755              		.loc 1 340 23 view .LVU214
 756 003a 2380     		strh	r3, [r4]	@ movhi
 757              	.LVL77:
 758              	.L42:
 351:Core/Src/bno055.c **** 
 759              		.loc 1 351 1 view .LVU215
 760 003c 03B0     		add	sp, sp, #12
 761              		.cfi_remember_state
 762              		.cfi_def_cfa_offset 12
 763              		@ sp needed
 764 003e 30BD     		pop	{r4, r5, pc}
 765              	.LVL78:
 766              	.L48:
 767              		.cfi_restore_state
 329:Core/Src/bno055.c ****         }
 768              		.loc 1 329 13 is_stmt 1 view .LVU216
 329:Core/Src/bno055.c ****         }
 769              		.loc 1 329 23 is_stmt 0 view .LVU217
 770 0040 0020     		movs	r0, #0
 771              	.LVL79:
 329:Core/Src/bno055.c ****         }
 772              		.loc 1 329 23 view .LVU218
 773 0042 FFF7FEFF 		bl	bno055_write_page_id
 774              	.LVL80:
 331:Core/Src/bno055.c ****         {
 775              		.loc 1 331 9 is_stmt 1 view .LVU219
 331:Core/Src/bno055.c ****         {
 776              		.loc 1 331 12 is_stmt 0 view .LVU220
 777 0046 0028     		cmp	r0, #0
 778 0048 E9D0     		beq	.L44
 779 004a E4E7     		b	.L43
 780              	.LVL81:
 781              	.L45:
 320:Core/Src/bno055.c ****     }
 782              		.loc 1 320 16 view .LVU221
 783 004c 6FF07E00 		mvn	r0, #126
 784              	.LVL82:
 320:Core/Src/bno055.c ****     }
 785              		.loc 1 320 16 view .LVU222
 786 0050 F4E7     		b	.L42
 787              	.LVL83:
 788              	.L46:
 346:Core/Src/bno055.c ****         }
 789              		.loc 1 346 22 view .LVU223
 790 0052 4FF0FF30 		mov	r0, #-1
 791 0056 F1E7     		b	.L42
ARM GAS  /tmp/ccOloYeZ.s 			page 24


 792              	.L50:
 793              		.align	2
 794              	.L49:
 795 0058 00000000 		.word	p_bno055
 796              		.cfi_endproc
 797              	.LFE4:
 799              		.section	.text.bno055_read_accel_rev_id,"ax",%progbits
 800              		.align	1
 801              		.global	bno055_read_accel_rev_id
 802              		.syntax unified
 803              		.thumb
 804              		.thumb_func
 806              	bno055_read_accel_rev_id:
 807              	.LVL84:
 808              	.LFB7:
 461:Core/Src/bno055.c **** 
 462:Core/Src/bno055.c **** /*!
 463:Core/Src/bno055.c ****  *  @brief This API reads accel revision id
 464:Core/Src/bno055.c ****  *  from register 0x01 it is a byte of value
 465:Core/Src/bno055.c ****  *
 466:Core/Src/bno055.c ****  *  @param accel_rev_id_u8 : The accel revision id 0xFB
 467:Core/Src/bno055.c ****  *
 468:Core/Src/bno055.c ****  *  @return results of bus communication function
 469:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 470:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 471:Core/Src/bno055.c ****  *
 472:Core/Src/bno055.c ****  *
 473:Core/Src/bno055.c ****  */
 474:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_rev_id(u8 *accel_rev_id_u8)
 475:Core/Src/bno055.c **** {
 809              		.loc 1 475 1 is_stmt 1 view -0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 8
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              		.loc 1 475 1 is_stmt 0 view .LVU225
 814 0000 70B5     		push	{r4, r5, r6, lr}
 815              		.cfi_def_cfa_offset 16
 816              		.cfi_offset 4, -16
 817              		.cfi_offset 5, -12
 818              		.cfi_offset 6, -8
 819              		.cfi_offset 14, -4
 820 0002 82B0     		sub	sp, sp, #8
 821              		.cfi_def_cfa_offset 24
 476:Core/Src/bno055.c ****     /* Variable used to return value of
 477:Core/Src/bno055.c ****      * communication routine*/
 478:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 822              		.loc 1 478 5 is_stmt 1 view .LVU226
 823              	.LVL85:
 479:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 824              		.loc 1 479 5 view .LVU227
 825              		.loc 1 479 8 is_stmt 0 view .LVU228
 826 0004 0023     		movs	r3, #0
 827 0006 8DF80730 		strb	r3, [sp, #7]
 480:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 828              		.loc 1 480 5 is_stmt 1 view .LVU229
 829              	.LVL86:
 481:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 25


 482:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 483:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 830              		.loc 1 483 5 view .LVU230
 831              		.loc 1 483 18 is_stmt 0 view .LVU231
 832 000a 124B     		ldr	r3, .L59
 833 000c 1B68     		ldr	r3, [r3]
 834              		.loc 1 483 8 view .LVU232
 835 000e D3B1     		cbz	r3, .L55
 836 0010 0546     		mov	r5, r0
 484:Core/Src/bno055.c ****     {
 485:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 486:Core/Src/bno055.c ****     }
 487:Core/Src/bno055.c ****     else
 488:Core/Src/bno055.c ****     {
 489:Core/Src/bno055.c ****         /*condition check for page, chip id is
 490:Core/Src/bno055.c ****          * available in the page zero*/
 491:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 837              		.loc 1 491 9 is_stmt 1 view .LVU233
 838              		.loc 1 491 21 is_stmt 0 view .LVU234
 839 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 840              		.loc 1 491 12 view .LVU235
 841 0014 8BB9     		cbnz	r3, .L58
 842              	.LVL87:
 843              	.L53:
 492:Core/Src/bno055.c ****         {
 493:Core/Src/bno055.c ****             /* Write the page zero*/
 494:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 495:Core/Src/bno055.c ****         }
 496:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 844              		.loc 1 496 53 discriminator 1 view .LVU236
 845 0016 0F4B     		ldr	r3, .L59
 846 0018 1B68     		ldr	r3, [r3]
 847 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 848              		.loc 1 496 41 discriminator 1 view .LVU237
 849 001c B3B9     		cbnz	r3, .L56
 850              	.L54:
 497:Core/Src/bno055.c ****         {
 498:Core/Src/bno055.c ****             /* Read the accel revision id */
 499:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 851              		.loc 1 499 13 is_stmt 1 view .LVU238
 852              		.loc 1 499 32 is_stmt 0 view .LVU239
 853 001e 0D4B     		ldr	r3, .L59
 854 0020 1C68     		ldr	r4, [r3]
 855 0022 2669     		ldr	r6, [r4, #16]
 856              		.loc 1 499 24 view .LVU240
 857 0024 0123     		movs	r3, #1
 858 0026 0DF10702 		add	r2, sp, #7
 859 002a 1946     		mov	r1, r3
 860 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 861 002e B047     		blx	r6
 862              	.LVL88:
 500:Core/Src/bno055.c ****                                                       BNO055_ACCEL_REV_ID_REG,
 501:Core/Src/bno055.c ****                                                       &data_u8,
 502:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 503:Core/Src/bno055.c ****             *accel_rev_id_u8 = data_u8;
 863              		.loc 1 503 13 is_stmt 1 view .LVU241
 864              		.loc 1 503 30 is_stmt 0 view .LVU242
ARM GAS  /tmp/ccOloYeZ.s 			page 26


 865 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 866 0034 2B70     		strb	r3, [r5]
 867              	.LVL89:
 868              	.L52:
 504:Core/Src/bno055.c ****         }
 505:Core/Src/bno055.c ****         else
 506:Core/Src/bno055.c ****         {
 507:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 508:Core/Src/bno055.c ****         }
 509:Core/Src/bno055.c ****     }
 510:Core/Src/bno055.c **** 
 511:Core/Src/bno055.c ****     return com_rslt;
 512:Core/Src/bno055.c **** }
 869              		.loc 1 512 1 view .LVU243
 870 0036 02B0     		add	sp, sp, #8
 871              		.cfi_remember_state
 872              		.cfi_def_cfa_offset 16
 873              		@ sp needed
 874 0038 70BD     		pop	{r4, r5, r6, pc}
 875              	.LVL90:
 876              	.L58:
 877              		.cfi_restore_state
 494:Core/Src/bno055.c ****         }
 878              		.loc 1 494 13 is_stmt 1 view .LVU244
 494:Core/Src/bno055.c ****         }
 879              		.loc 1 494 23 is_stmt 0 view .LVU245
 880 003a 0020     		movs	r0, #0
 881              	.LVL91:
 494:Core/Src/bno055.c ****         }
 882              		.loc 1 494 23 view .LVU246
 883 003c FFF7FEFF 		bl	bno055_write_page_id
 884              	.LVL92:
 496:Core/Src/bno055.c ****         {
 885              		.loc 1 496 9 is_stmt 1 view .LVU247
 496:Core/Src/bno055.c ****         {
 886              		.loc 1 496 12 is_stmt 0 view .LVU248
 887 0040 0028     		cmp	r0, #0
 888 0042 ECD0     		beq	.L54
 889 0044 E7E7     		b	.L53
 890              	.LVL93:
 891              	.L55:
 485:Core/Src/bno055.c ****     }
 892              		.loc 1 485 16 view .LVU249
 893 0046 6FF07E00 		mvn	r0, #126
 894              	.LVL94:
 485:Core/Src/bno055.c ****     }
 895              		.loc 1 485 16 view .LVU250
 896 004a F4E7     		b	.L52
 897              	.LVL95:
 898              	.L56:
 507:Core/Src/bno055.c ****         }
 899              		.loc 1 507 22 view .LVU251
 900 004c 4FF0FF30 		mov	r0, #-1
 901 0050 F1E7     		b	.L52
 902              	.L60:
 903 0052 00BF     		.align	2
 904              	.L59:
ARM GAS  /tmp/ccOloYeZ.s 			page 27


 905 0054 00000000 		.word	p_bno055
 906              		.cfi_endproc
 907              	.LFE7:
 909              		.section	.text.bno055_read_mag_rev_id,"ax",%progbits
 910              		.align	1
 911              		.global	bno055_read_mag_rev_id
 912              		.syntax unified
 913              		.thumb
 914              		.thumb_func
 916              	bno055_read_mag_rev_id:
 917              	.LVL96:
 918              	.LFB8:
 513:Core/Src/bno055.c **** 
 514:Core/Src/bno055.c **** /*!
 515:Core/Src/bno055.c ****  *  @brief This API reads mag revision id
 516:Core/Src/bno055.c ****  *  from register 0x02 it is a byte of value
 517:Core/Src/bno055.c ****  *
 518:Core/Src/bno055.c ****  *  @param mag_rev_id_u8 : The mag revision id 0x32
 519:Core/Src/bno055.c ****  *
 520:Core/Src/bno055.c ****  *  @return results of bus communication function
 521:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 522:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 523:Core/Src/bno055.c ****  *
 524:Core/Src/bno055.c ****  *
 525:Core/Src/bno055.c ****  */
 526:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_rev_id(u8 *mag_rev_id_u8)
 527:Core/Src/bno055.c **** {
 919              		.loc 1 527 1 is_stmt 1 view -0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 8
 922              		@ frame_needed = 0, uses_anonymous_args = 0
 923              		.loc 1 527 1 is_stmt 0 view .LVU253
 924 0000 70B5     		push	{r4, r5, r6, lr}
 925              		.cfi_def_cfa_offset 16
 926              		.cfi_offset 4, -16
 927              		.cfi_offset 5, -12
 928              		.cfi_offset 6, -8
 929              		.cfi_offset 14, -4
 930 0002 82B0     		sub	sp, sp, #8
 931              		.cfi_def_cfa_offset 24
 528:Core/Src/bno055.c ****     /* Variable used to return value of
 529:Core/Src/bno055.c ****      * communication routine*/
 530:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 932              		.loc 1 530 5 is_stmt 1 view .LVU254
 933              	.LVL97:
 531:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 934              		.loc 1 531 5 view .LVU255
 935              		.loc 1 531 8 is_stmt 0 view .LVU256
 936 0004 0023     		movs	r3, #0
 937 0006 8DF80730 		strb	r3, [sp, #7]
 532:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 938              		.loc 1 532 5 is_stmt 1 view .LVU257
 939              	.LVL98:
 533:Core/Src/bno055.c **** 
 534:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 535:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 940              		.loc 1 535 5 view .LVU258
ARM GAS  /tmp/ccOloYeZ.s 			page 28


 941              		.loc 1 535 18 is_stmt 0 view .LVU259
 942 000a 124B     		ldr	r3, .L69
 943 000c 1B68     		ldr	r3, [r3]
 944              		.loc 1 535 8 view .LVU260
 945 000e D3B1     		cbz	r3, .L65
 946 0010 0546     		mov	r5, r0
 536:Core/Src/bno055.c ****     {
 537:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 538:Core/Src/bno055.c ****     }
 539:Core/Src/bno055.c ****     else
 540:Core/Src/bno055.c ****     {
 541:Core/Src/bno055.c ****         /*condition check for page, chip id is
 542:Core/Src/bno055.c ****          * available in the page zero*/
 543:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 947              		.loc 1 543 9 is_stmt 1 view .LVU261
 948              		.loc 1 543 21 is_stmt 0 view .LVU262
 949 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 950              		.loc 1 543 12 view .LVU263
 951 0014 8BB9     		cbnz	r3, .L68
 952              	.LVL99:
 953              	.L63:
 544:Core/Src/bno055.c ****         {
 545:Core/Src/bno055.c ****             /* Write the page zero*/
 546:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 547:Core/Src/bno055.c ****         }
 548:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 954              		.loc 1 548 53 discriminator 1 view .LVU264
 955 0016 0F4B     		ldr	r3, .L69
 956 0018 1B68     		ldr	r3, [r3]
 957 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 958              		.loc 1 548 41 discriminator 1 view .LVU265
 959 001c B3B9     		cbnz	r3, .L66
 960              	.L64:
 549:Core/Src/bno055.c ****         {
 550:Core/Src/bno055.c ****             /* Read the mag revision id */
 551:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 961              		.loc 1 551 13 is_stmt 1 view .LVU266
 962              		.loc 1 551 32 is_stmt 0 view .LVU267
 963 001e 0D4B     		ldr	r3, .L69
 964 0020 1C68     		ldr	r4, [r3]
 965 0022 2669     		ldr	r6, [r4, #16]
 966              		.loc 1 551 24 view .LVU268
 967 0024 0123     		movs	r3, #1
 968 0026 0DF10702 		add	r2, sp, #7
 969 002a 0221     		movs	r1, #2
 970 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 971 002e B047     		blx	r6
 972              	.LVL100:
 552:Core/Src/bno055.c ****                                                       BNO055_MAG_REV_ID_REG,
 553:Core/Src/bno055.c ****                                                       &data_u8,
 554:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 555:Core/Src/bno055.c ****             *mag_rev_id_u8 = data_u8;
 973              		.loc 1 555 13 is_stmt 1 view .LVU269
 974              		.loc 1 555 28 is_stmt 0 view .LVU270
 975 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 976 0034 2B70     		strb	r3, [r5]
 977              	.LVL101:
ARM GAS  /tmp/ccOloYeZ.s 			page 29


 978              	.L62:
 556:Core/Src/bno055.c ****         }
 557:Core/Src/bno055.c ****         else
 558:Core/Src/bno055.c ****         {
 559:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 560:Core/Src/bno055.c ****         }
 561:Core/Src/bno055.c ****     }
 562:Core/Src/bno055.c **** 
 563:Core/Src/bno055.c ****     return com_rslt;
 564:Core/Src/bno055.c **** }
 979              		.loc 1 564 1 view .LVU271
 980 0036 02B0     		add	sp, sp, #8
 981              		.cfi_remember_state
 982              		.cfi_def_cfa_offset 16
 983              		@ sp needed
 984 0038 70BD     		pop	{r4, r5, r6, pc}
 985              	.LVL102:
 986              	.L68:
 987              		.cfi_restore_state
 546:Core/Src/bno055.c ****         }
 988              		.loc 1 546 13 is_stmt 1 view .LVU272
 546:Core/Src/bno055.c ****         }
 989              		.loc 1 546 23 is_stmt 0 view .LVU273
 990 003a 0020     		movs	r0, #0
 991              	.LVL103:
 546:Core/Src/bno055.c ****         }
 992              		.loc 1 546 23 view .LVU274
 993 003c FFF7FEFF 		bl	bno055_write_page_id
 994              	.LVL104:
 548:Core/Src/bno055.c ****         {
 995              		.loc 1 548 9 is_stmt 1 view .LVU275
 548:Core/Src/bno055.c ****         {
 996              		.loc 1 548 12 is_stmt 0 view .LVU276
 997 0040 0028     		cmp	r0, #0
 998 0042 ECD0     		beq	.L64
 999 0044 E7E7     		b	.L63
 1000              	.LVL105:
 1001              	.L65:
 537:Core/Src/bno055.c ****     }
 1002              		.loc 1 537 16 view .LVU277
 1003 0046 6FF07E00 		mvn	r0, #126
 1004              	.LVL106:
 537:Core/Src/bno055.c ****     }
 1005              		.loc 1 537 16 view .LVU278
 1006 004a F4E7     		b	.L62
 1007              	.LVL107:
 1008              	.L66:
 559:Core/Src/bno055.c ****         }
 1009              		.loc 1 559 22 view .LVU279
 1010 004c 4FF0FF30 		mov	r0, #-1
 1011 0050 F1E7     		b	.L62
 1012              	.L70:
 1013 0052 00BF     		.align	2
 1014              	.L69:
 1015 0054 00000000 		.word	p_bno055
 1016              		.cfi_endproc
 1017              	.LFE8:
ARM GAS  /tmp/ccOloYeZ.s 			page 30


 1019              		.section	.text.bno055_read_gyro_rev_id,"ax",%progbits
 1020              		.align	1
 1021              		.global	bno055_read_gyro_rev_id
 1022              		.syntax unified
 1023              		.thumb
 1024              		.thumb_func
 1026              	bno055_read_gyro_rev_id:
 1027              	.LVL108:
 1028              	.LFB9:
 565:Core/Src/bno055.c **** 
 566:Core/Src/bno055.c **** /*!
 567:Core/Src/bno055.c ****  *  @brief This API reads gyro revision id
 568:Core/Src/bno055.c ****  *  from register 0x03 it is a byte of value
 569:Core/Src/bno055.c ****  *
 570:Core/Src/bno055.c ****  *  @param gyro_rev_id_u8 : The gyro revision id 0xF0
 571:Core/Src/bno055.c ****  *
 572:Core/Src/bno055.c ****  *
 573:Core/Src/bno055.c ****  *
 574:Core/Src/bno055.c ****  *  @return results of bus communication function
 575:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 576:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 577:Core/Src/bno055.c ****  *
 578:Core/Src/bno055.c ****  *
 579:Core/Src/bno055.c ****  */
 580:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_rev_id(u8 *gyro_rev_id_u8)
 581:Core/Src/bno055.c **** {
 1029              		.loc 1 581 1 is_stmt 1 view -0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 8
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033              		.loc 1 581 1 is_stmt 0 view .LVU281
 1034 0000 70B5     		push	{r4, r5, r6, lr}
 1035              		.cfi_def_cfa_offset 16
 1036              		.cfi_offset 4, -16
 1037              		.cfi_offset 5, -12
 1038              		.cfi_offset 6, -8
 1039              		.cfi_offset 14, -4
 1040 0002 82B0     		sub	sp, sp, #8
 1041              		.cfi_def_cfa_offset 24
 582:Core/Src/bno055.c ****     /* Variable used to return value of
 583:Core/Src/bno055.c ****      * communication routine*/
 584:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1042              		.loc 1 584 5 is_stmt 1 view .LVU282
 1043              	.LVL109:
 585:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 1044              		.loc 1 585 5 view .LVU283
 1045              		.loc 1 585 8 is_stmt 0 view .LVU284
 1046 0004 0023     		movs	r3, #0
 1047 0006 8DF80730 		strb	r3, [sp, #7]
 586:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1048              		.loc 1 586 5 is_stmt 1 view .LVU285
 1049              	.LVL110:
 587:Core/Src/bno055.c **** 
 588:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 589:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1050              		.loc 1 589 5 view .LVU286
 1051              		.loc 1 589 18 is_stmt 0 view .LVU287
ARM GAS  /tmp/ccOloYeZ.s 			page 31


 1052 000a 124B     		ldr	r3, .L79
 1053 000c 1B68     		ldr	r3, [r3]
 1054              		.loc 1 589 8 view .LVU288
 1055 000e D3B1     		cbz	r3, .L75
 1056 0010 0546     		mov	r5, r0
 590:Core/Src/bno055.c ****     {
 591:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 592:Core/Src/bno055.c ****     }
 593:Core/Src/bno055.c ****     else
 594:Core/Src/bno055.c ****     {
 595:Core/Src/bno055.c ****         /*condition check for page, chip id is
 596:Core/Src/bno055.c ****          * available in the page zero*/
 597:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1057              		.loc 1 597 9 is_stmt 1 view .LVU289
 1058              		.loc 1 597 21 is_stmt 0 view .LVU290
 1059 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1060              		.loc 1 597 12 view .LVU291
 1061 0014 8BB9     		cbnz	r3, .L78
 1062              	.LVL111:
 1063              	.L73:
 598:Core/Src/bno055.c ****         {
 599:Core/Src/bno055.c ****             /* Write the page zero*/
 600:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 601:Core/Src/bno055.c ****         }
 602:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1064              		.loc 1 602 53 discriminator 1 view .LVU292
 1065 0016 0F4B     		ldr	r3, .L79
 1066 0018 1B68     		ldr	r3, [r3]
 1067 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1068              		.loc 1 602 41 discriminator 1 view .LVU293
 1069 001c B3B9     		cbnz	r3, .L76
 1070              	.L74:
 603:Core/Src/bno055.c ****         {
 604:Core/Src/bno055.c ****             /* Read the gyro revision id */
 605:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1071              		.loc 1 605 13 is_stmt 1 view .LVU294
 1072              		.loc 1 605 32 is_stmt 0 view .LVU295
 1073 001e 0D4B     		ldr	r3, .L79
 1074 0020 1C68     		ldr	r4, [r3]
 1075 0022 2669     		ldr	r6, [r4, #16]
 1076              		.loc 1 605 24 view .LVU296
 1077 0024 0123     		movs	r3, #1
 1078 0026 0DF10702 		add	r2, sp, #7
 1079 002a 0321     		movs	r1, #3
 1080 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 1081 002e B047     		blx	r6
 1082              	.LVL112:
 606:Core/Src/bno055.c ****                                                       BNO055_GYRO_REV_ID_REG,
 607:Core/Src/bno055.c ****                                                       &data_u8,
 608:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 609:Core/Src/bno055.c ****             *gyro_rev_id_u8 = data_u8;
 1083              		.loc 1 609 13 is_stmt 1 view .LVU297
 1084              		.loc 1 609 29 is_stmt 0 view .LVU298
 1085 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1086 0034 2B70     		strb	r3, [r5]
 1087              	.LVL113:
 1088              	.L72:
ARM GAS  /tmp/ccOloYeZ.s 			page 32


 610:Core/Src/bno055.c ****         }
 611:Core/Src/bno055.c ****         else
 612:Core/Src/bno055.c ****         {
 613:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 614:Core/Src/bno055.c ****         }
 615:Core/Src/bno055.c ****     }
 616:Core/Src/bno055.c **** 
 617:Core/Src/bno055.c ****     return com_rslt;
 618:Core/Src/bno055.c **** }
 1089              		.loc 1 618 1 view .LVU299
 1090 0036 02B0     		add	sp, sp, #8
 1091              		.cfi_remember_state
 1092              		.cfi_def_cfa_offset 16
 1093              		@ sp needed
 1094 0038 70BD     		pop	{r4, r5, r6, pc}
 1095              	.LVL114:
 1096              	.L78:
 1097              		.cfi_restore_state
 600:Core/Src/bno055.c ****         }
 1098              		.loc 1 600 13 is_stmt 1 view .LVU300
 600:Core/Src/bno055.c ****         }
 1099              		.loc 1 600 23 is_stmt 0 view .LVU301
 1100 003a 0020     		movs	r0, #0
 1101              	.LVL115:
 600:Core/Src/bno055.c ****         }
 1102              		.loc 1 600 23 view .LVU302
 1103 003c FFF7FEFF 		bl	bno055_write_page_id
 1104              	.LVL116:
 602:Core/Src/bno055.c ****         {
 1105              		.loc 1 602 9 is_stmt 1 view .LVU303
 602:Core/Src/bno055.c ****         {
 1106              		.loc 1 602 12 is_stmt 0 view .LVU304
 1107 0040 0028     		cmp	r0, #0
 1108 0042 ECD0     		beq	.L74
 1109 0044 E7E7     		b	.L73
 1110              	.LVL117:
 1111              	.L75:
 591:Core/Src/bno055.c ****     }
 1112              		.loc 1 591 16 view .LVU305
 1113 0046 6FF07E00 		mvn	r0, #126
 1114              	.LVL118:
 591:Core/Src/bno055.c ****     }
 1115              		.loc 1 591 16 view .LVU306
 1116 004a F4E7     		b	.L72
 1117              	.LVL119:
 1118              	.L76:
 613:Core/Src/bno055.c ****         }
 1119              		.loc 1 613 22 view .LVU307
 1120 004c 4FF0FF30 		mov	r0, #-1
 1121 0050 F1E7     		b	.L72
 1122              	.L80:
 1123 0052 00BF     		.align	2
 1124              	.L79:
 1125 0054 00000000 		.word	p_bno055
 1126              		.cfi_endproc
 1127              	.LFE9:
 1129              		.section	.text.bno055_read_bl_rev_id,"ax",%progbits
ARM GAS  /tmp/ccOloYeZ.s 			page 33


 1130              		.align	1
 1131              		.global	bno055_read_bl_rev_id
 1132              		.syntax unified
 1133              		.thumb
 1134              		.thumb_func
 1136              	bno055_read_bl_rev_id:
 1137              	.LVL120:
 1138              	.LFB10:
 619:Core/Src/bno055.c **** 
 620:Core/Src/bno055.c **** /*!
 621:Core/Src/bno055.c ****  *  @brief This API used to read boot loader revision id
 622:Core/Src/bno055.c ****  *  from register 0x06 it is a byte of value
 623:Core/Src/bno055.c ****  *
 624:Core/Src/bno055.c ****  *  @param bl_rev_id_u8 : The boot loader revision id
 625:Core/Src/bno055.c ****  *
 626:Core/Src/bno055.c ****  *
 627:Core/Src/bno055.c ****  *  @return results of bus communication function
 628:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 629:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 630:Core/Src/bno055.c ****  *
 631:Core/Src/bno055.c ****  *
 632:Core/Src/bno055.c ****  */
 633:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_bl_rev_id(u8 *bl_rev_id_u8)
 634:Core/Src/bno055.c **** {
 1139              		.loc 1 634 1 is_stmt 1 view -0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 8
 1142              		@ frame_needed = 0, uses_anonymous_args = 0
 1143              		.loc 1 634 1 is_stmt 0 view .LVU309
 1144 0000 70B5     		push	{r4, r5, r6, lr}
 1145              		.cfi_def_cfa_offset 16
 1146              		.cfi_offset 4, -16
 1147              		.cfi_offset 5, -12
 1148              		.cfi_offset 6, -8
 1149              		.cfi_offset 14, -4
 1150 0002 82B0     		sub	sp, sp, #8
 1151              		.cfi_def_cfa_offset 24
 635:Core/Src/bno055.c ****     /* Variable used to return value of
 636:Core/Src/bno055.c ****      * communication routine*/
 637:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1152              		.loc 1 637 5 is_stmt 1 view .LVU310
 1153              	.LVL121:
 638:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 1154              		.loc 1 638 5 view .LVU311
 1155              		.loc 1 638 8 is_stmt 0 view .LVU312
 1156 0004 0023     		movs	r3, #0
 1157 0006 8DF80730 		strb	r3, [sp, #7]
 639:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1158              		.loc 1 639 5 is_stmt 1 view .LVU313
 1159              	.LVL122:
 640:Core/Src/bno055.c **** 
 641:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 642:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1160              		.loc 1 642 5 view .LVU314
 1161              		.loc 1 642 18 is_stmt 0 view .LVU315
 1162 000a 124B     		ldr	r3, .L89
 1163 000c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccOloYeZ.s 			page 34


 1164              		.loc 1 642 8 view .LVU316
 1165 000e D3B1     		cbz	r3, .L85
 1166 0010 0546     		mov	r5, r0
 643:Core/Src/bno055.c ****     {
 644:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 645:Core/Src/bno055.c ****     }
 646:Core/Src/bno055.c ****     else
 647:Core/Src/bno055.c ****     {
 648:Core/Src/bno055.c ****         /*condition check for page, chip id is
 649:Core/Src/bno055.c ****          * available in the page zero*/
 650:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1167              		.loc 1 650 9 is_stmt 1 view .LVU317
 1168              		.loc 1 650 21 is_stmt 0 view .LVU318
 1169 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1170              		.loc 1 650 12 view .LVU319
 1171 0014 8BB9     		cbnz	r3, .L88
 1172              	.LVL123:
 1173              	.L83:
 651:Core/Src/bno055.c ****         {
 652:Core/Src/bno055.c ****             /* Write the page zero*/
 653:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 654:Core/Src/bno055.c ****         }
 655:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1174              		.loc 1 655 53 discriminator 1 view .LVU320
 1175 0016 0F4B     		ldr	r3, .L89
 1176 0018 1B68     		ldr	r3, [r3]
 1177 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1178              		.loc 1 655 41 discriminator 1 view .LVU321
 1179 001c B3B9     		cbnz	r3, .L86
 1180              	.L84:
 656:Core/Src/bno055.c ****         {
 657:Core/Src/bno055.c ****             /* Read the boot loader revision id */
 658:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1181              		.loc 1 658 13 is_stmt 1 view .LVU322
 1182              		.loc 1 658 32 is_stmt 0 view .LVU323
 1183 001e 0D4B     		ldr	r3, .L89
 1184 0020 1C68     		ldr	r4, [r3]
 1185 0022 2669     		ldr	r6, [r4, #16]
 1186              		.loc 1 658 24 view .LVU324
 1187 0024 0123     		movs	r3, #1
 1188 0026 0DF10702 		add	r2, sp, #7
 1189 002a 0621     		movs	r1, #6
 1190 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 1191 002e B047     		blx	r6
 1192              	.LVL124:
 659:Core/Src/bno055.c ****                                                       BNO055_BL_REV_ID_REG,
 660:Core/Src/bno055.c ****                                                       &data_u8,
 661:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 662:Core/Src/bno055.c ****             *bl_rev_id_u8 = data_u8;
 1193              		.loc 1 662 13 is_stmt 1 view .LVU325
 1194              		.loc 1 662 27 is_stmt 0 view .LVU326
 1195 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1196 0034 2B70     		strb	r3, [r5]
 1197              	.LVL125:
 1198              	.L82:
 663:Core/Src/bno055.c ****         }
 664:Core/Src/bno055.c ****         else
ARM GAS  /tmp/ccOloYeZ.s 			page 35


 665:Core/Src/bno055.c ****         {
 666:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 667:Core/Src/bno055.c ****         }
 668:Core/Src/bno055.c ****     }
 669:Core/Src/bno055.c **** 
 670:Core/Src/bno055.c ****     return com_rslt;
 671:Core/Src/bno055.c **** }
 1199              		.loc 1 671 1 view .LVU327
 1200 0036 02B0     		add	sp, sp, #8
 1201              		.cfi_remember_state
 1202              		.cfi_def_cfa_offset 16
 1203              		@ sp needed
 1204 0038 70BD     		pop	{r4, r5, r6, pc}
 1205              	.LVL126:
 1206              	.L88:
 1207              		.cfi_restore_state
 653:Core/Src/bno055.c ****         }
 1208              		.loc 1 653 13 is_stmt 1 view .LVU328
 653:Core/Src/bno055.c ****         }
 1209              		.loc 1 653 23 is_stmt 0 view .LVU329
 1210 003a 0020     		movs	r0, #0
 1211              	.LVL127:
 653:Core/Src/bno055.c ****         }
 1212              		.loc 1 653 23 view .LVU330
 1213 003c FFF7FEFF 		bl	bno055_write_page_id
 1214              	.LVL128:
 655:Core/Src/bno055.c ****         {
 1215              		.loc 1 655 9 is_stmt 1 view .LVU331
 655:Core/Src/bno055.c ****         {
 1216              		.loc 1 655 12 is_stmt 0 view .LVU332
 1217 0040 0028     		cmp	r0, #0
 1218 0042 ECD0     		beq	.L84
 1219 0044 E7E7     		b	.L83
 1220              	.LVL129:
 1221              	.L85:
 644:Core/Src/bno055.c ****     }
 1222              		.loc 1 644 16 view .LVU333
 1223 0046 6FF07E00 		mvn	r0, #126
 1224              	.LVL130:
 644:Core/Src/bno055.c ****     }
 1225              		.loc 1 644 16 view .LVU334
 1226 004a F4E7     		b	.L82
 1227              	.LVL131:
 1228              	.L86:
 666:Core/Src/bno055.c ****         }
 1229              		.loc 1 666 22 view .LVU335
 1230 004c 4FF0FF30 		mov	r0, #-1
 1231 0050 F1E7     		b	.L82
 1232              	.L90:
 1233 0052 00BF     		.align	2
 1234              	.L89:
 1235 0054 00000000 		.word	p_bno055
 1236              		.cfi_endproc
 1237              	.LFE10:
 1239              		.section	.text.bno055_read_accel_x,"ax",%progbits
 1240              		.align	1
 1241              		.global	bno055_read_accel_x
ARM GAS  /tmp/ccOloYeZ.s 			page 36


 1242              		.syntax unified
 1243              		.thumb
 1244              		.thumb_func
 1246              	bno055_read_accel_x:
 1247              	.LVL132:
 1248              	.LFB11:
 672:Core/Src/bno055.c **** 
 673:Core/Src/bno055.c **** /*!
 674:Core/Src/bno055.c ****  *  @brief This API reads acceleration data X values
 675:Core/Src/bno055.c ****  *  from register 0x08 and 0x09 it is a two byte data
 676:Core/Src/bno055.c ****  *
 677:Core/Src/bno055.c ****  *
 678:Core/Src/bno055.c ****  *
 679:Core/Src/bno055.c ****  *
 680:Core/Src/bno055.c ****  *  @param accel_x_s16 : The X raw data
 681:Core/Src/bno055.c ****  *
 682:Core/Src/bno055.c ****  *
 683:Core/Src/bno055.c ****  *
 684:Core/Src/bno055.c ****  *  @return results of bus communication function
 685:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 686:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 687:Core/Src/bno055.c ****  *
 688:Core/Src/bno055.c ****  *
 689:Core/Src/bno055.c ****  */
 690:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_x(s16 *accel_x_s16)
 691:Core/Src/bno055.c **** {
 1249              		.loc 1 691 1 is_stmt 1 view -0
 1250              		.cfi_startproc
 1251              		@ args = 0, pretend = 0, frame = 8
 1252              		@ frame_needed = 0, uses_anonymous_args = 0
 1253              		.loc 1 691 1 is_stmt 0 view .LVU337
 1254 0000 30B5     		push	{r4, r5, lr}
 1255              		.cfi_def_cfa_offset 12
 1256              		.cfi_offset 4, -12
 1257              		.cfi_offset 5, -8
 1258              		.cfi_offset 14, -4
 1259 0002 83B0     		sub	sp, sp, #12
 1260              		.cfi_def_cfa_offset 24
 692:Core/Src/bno055.c ****     /* Variable used to return value of
 693:Core/Src/bno055.c ****      * communication routine*/
 694:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1261              		.loc 1 694 5 is_stmt 1 view .LVU338
 1262              	.LVL133:
 695:Core/Src/bno055.c **** 
 696:Core/Src/bno055.c ****     /* Array holding the accel x value
 697:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - x-LSB
 698:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - x-MSB
 699:Core/Src/bno055.c ****      */
 700:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1263              		.loc 1 700 5 view .LVU339
 1264              		.loc 1 700 8 is_stmt 0 view .LVU340
 1265 0004 0023     		movs	r3, #0
 1266 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 701:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1267              		.loc 1 701 5 is_stmt 1 view .LVU341
 1268              	.LVL134:
 702:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 37


 703:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 704:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1269              		.loc 1 704 5 view .LVU342
 1270              		.loc 1 704 18 is_stmt 0 view .LVU343
 1271 000a 134B     		ldr	r3, .L99
 1272 000c 1B68     		ldr	r3, [r3]
 1273              		.loc 1 704 8 view .LVU344
 1274 000e EBB1     		cbz	r3, .L95
 1275 0010 0446     		mov	r4, r0
 705:Core/Src/bno055.c ****     {
 706:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 707:Core/Src/bno055.c ****     }
 708:Core/Src/bno055.c ****     else
 709:Core/Src/bno055.c ****     {
 710:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1276              		.loc 1 710 9 is_stmt 1 view .LVU345
 1277              		.loc 1 710 21 is_stmt 0 view .LVU346
 1278 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1279              		.loc 1 710 12 view .LVU347
 1280 0014 A3B9     		cbnz	r3, .L98
 1281              	.LVL135:
 1282              	.L93:
 711:Core/Src/bno055.c ****         {
 712:Core/Src/bno055.c ****             /* Write the page zero*/
 713:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 714:Core/Src/bno055.c ****         }
 715:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1283              		.loc 1 715 53 discriminator 1 view .LVU348
 1284 0016 104B     		ldr	r3, .L99
 1285 0018 1B68     		ldr	r3, [r3]
 1286 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1287              		.loc 1 715 41 discriminator 1 view .LVU349
 1288 001c CBB9     		cbnz	r3, .L96
 1289              	.L94:
 716:Core/Src/bno055.c ****         {
 717:Core/Src/bno055.c ****             /* Read the accel x axis two byte value*/
 718:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1290              		.loc 1 718 13 is_stmt 1 view .LVU350
 1291              		.loc 1 718 32 is_stmt 0 view .LVU351
 1292 001e 0E4B     		ldr	r3, .L99
 1293 0020 1868     		ldr	r0, [r3]
 1294 0022 0569     		ldr	r5, [r0, #16]
 1295              		.loc 1 718 24 view .LVU352
 1296 0024 0223     		movs	r3, #2
 1297 0026 01AA     		add	r2, sp, #4
 1298 0028 0821     		movs	r1, #8
 1299 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1300 002c A847     		blx	r5
 1301              	.LVL136:
 719:Core/Src/bno055.c ****                                                       BNO055_ACCEL_DATA_X_LSB_VALUEX_REG,
 720:Core/Src/bno055.c ****                                                       data_u8,
 721:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
 722:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1302              		.loc 1 722 13 is_stmt 1 view .LVU353
 723:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_X_LSB_VALUEX);
 724:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1303              		.loc 1 724 13 view .LVU354
ARM GAS  /tmp/ccOloYeZ.s 			page 38


 725:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_X_MSB_VALUEX);
 726:Core/Src/bno055.c ****             *accel_x_s16 =
 1304              		.loc 1 726 13 view .LVU355
 727:Core/Src/bno055.c ****                 (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_DATA_MSB])) << (BNO055_SHIFT_EIGHT_BITS)) |
 1305              		.loc 1 727 30 is_stmt 0 view .LVU356
 1306 002e 9DF90520 		ldrsb	r2, [sp, #5]
 728:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1307              		.loc 1 728 31 view .LVU357
 1308 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 727:Core/Src/bno055.c ****                 (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_DATA_MSB])) << (BNO055_SHIFT_EIGHT_BITS)) |
 1309              		.loc 1 727 17 view .LVU358
 1310 0036 43EA0223 		orr	r3, r3, r2, lsl #8
 726:Core/Src/bno055.c ****                 (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_DATA_MSB])) << (BNO055_SHIFT_EIGHT_BITS)) |
 1311              		.loc 1 726 26 view .LVU359
 1312 003a 2380     		strh	r3, [r4]	@ movhi
 1313              	.LVL137:
 1314              	.L92:
 729:Core/Src/bno055.c ****         }
 730:Core/Src/bno055.c ****         else
 731:Core/Src/bno055.c ****         {
 732:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 733:Core/Src/bno055.c ****         }
 734:Core/Src/bno055.c ****     }
 735:Core/Src/bno055.c **** 
 736:Core/Src/bno055.c ****     return com_rslt;
 737:Core/Src/bno055.c **** }
 1315              		.loc 1 737 1 view .LVU360
 1316 003c 03B0     		add	sp, sp, #12
 1317              		.cfi_remember_state
 1318              		.cfi_def_cfa_offset 12
 1319              		@ sp needed
 1320 003e 30BD     		pop	{r4, r5, pc}
 1321              	.LVL138:
 1322              	.L98:
 1323              		.cfi_restore_state
 713:Core/Src/bno055.c ****         }
 1324              		.loc 1 713 13 is_stmt 1 view .LVU361
 713:Core/Src/bno055.c ****         }
 1325              		.loc 1 713 23 is_stmt 0 view .LVU362
 1326 0040 0020     		movs	r0, #0
 1327              	.LVL139:
 713:Core/Src/bno055.c ****         }
 1328              		.loc 1 713 23 view .LVU363
 1329 0042 FFF7FEFF 		bl	bno055_write_page_id
 1330              	.LVL140:
 715:Core/Src/bno055.c ****         {
 1331              		.loc 1 715 9 is_stmt 1 view .LVU364
 715:Core/Src/bno055.c ****         {
 1332              		.loc 1 715 12 is_stmt 0 view .LVU365
 1333 0046 0028     		cmp	r0, #0
 1334 0048 E9D0     		beq	.L94
 1335 004a E4E7     		b	.L93
 1336              	.LVL141:
 1337              	.L95:
 706:Core/Src/bno055.c ****     }
 1338              		.loc 1 706 16 view .LVU366
 1339 004c 6FF07E00 		mvn	r0, #126
ARM GAS  /tmp/ccOloYeZ.s 			page 39


 1340              	.LVL142:
 706:Core/Src/bno055.c ****     }
 1341              		.loc 1 706 16 view .LVU367
 1342 0050 F4E7     		b	.L92
 1343              	.LVL143:
 1344              	.L96:
 732:Core/Src/bno055.c ****         }
 1345              		.loc 1 732 22 view .LVU368
 1346 0052 4FF0FF30 		mov	r0, #-1
 1347 0056 F1E7     		b	.L92
 1348              	.L100:
 1349              		.align	2
 1350              	.L99:
 1351 0058 00000000 		.word	p_bno055
 1352              		.cfi_endproc
 1353              	.LFE11:
 1355              		.section	.text.bno055_read_accel_y,"ax",%progbits
 1356              		.align	1
 1357              		.global	bno055_read_accel_y
 1358              		.syntax unified
 1359              		.thumb
 1360              		.thumb_func
 1362              	bno055_read_accel_y:
 1363              	.LVL144:
 1364              	.LFB12:
 738:Core/Src/bno055.c **** 
 739:Core/Src/bno055.c **** /*!
 740:Core/Src/bno055.c ****  *  @brief This API reads acceleration data Y values
 741:Core/Src/bno055.c ****  *  from register 0x0A and 0x0B it is a two byte data
 742:Core/Src/bno055.c ****  *
 743:Core/Src/bno055.c ****  *
 744:Core/Src/bno055.c ****  *
 745:Core/Src/bno055.c ****  *
 746:Core/Src/bno055.c ****  *  @param accel_y_s16 : The Y raw data
 747:Core/Src/bno055.c ****  *
 748:Core/Src/bno055.c ****  *
 749:Core/Src/bno055.c ****  *
 750:Core/Src/bno055.c ****  *  @return results of bus communication function
 751:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 752:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 753:Core/Src/bno055.c ****  *
 754:Core/Src/bno055.c ****  *
 755:Core/Src/bno055.c ****  */
 756:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_y(s16 *accel_y_s16)
 757:Core/Src/bno055.c **** {
 1365              		.loc 1 757 1 is_stmt 1 view -0
 1366              		.cfi_startproc
 1367              		@ args = 0, pretend = 0, frame = 8
 1368              		@ frame_needed = 0, uses_anonymous_args = 0
 1369              		.loc 1 757 1 is_stmt 0 view .LVU370
 1370 0000 30B5     		push	{r4, r5, lr}
 1371              		.cfi_def_cfa_offset 12
 1372              		.cfi_offset 4, -12
 1373              		.cfi_offset 5, -8
 1374              		.cfi_offset 14, -4
 1375 0002 83B0     		sub	sp, sp, #12
 1376              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccOloYeZ.s 			page 40


 758:Core/Src/bno055.c ****     /* Variable used to return value of
 759:Core/Src/bno055.c ****      * communication routine*/
 760:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1377              		.loc 1 760 5 is_stmt 1 view .LVU371
 1378              	.LVL145:
 761:Core/Src/bno055.c **** 
 762:Core/Src/bno055.c ****     /* Array holding the accel y value
 763:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - y-LSB
 764:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - y-MSB
 765:Core/Src/bno055.c ****      */
 766:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1379              		.loc 1 766 5 view .LVU372
 1380              		.loc 1 766 8 is_stmt 0 view .LVU373
 1381 0004 0023     		movs	r3, #0
 1382 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 767:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1383              		.loc 1 767 5 is_stmt 1 view .LVU374
 1384              	.LVL146:
 768:Core/Src/bno055.c **** 
 769:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 770:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1385              		.loc 1 770 5 view .LVU375
 1386              		.loc 1 770 18 is_stmt 0 view .LVU376
 1387 000a 134B     		ldr	r3, .L109
 1388 000c 1B68     		ldr	r3, [r3]
 1389              		.loc 1 770 8 view .LVU377
 1390 000e EBB1     		cbz	r3, .L105
 1391 0010 0446     		mov	r4, r0
 771:Core/Src/bno055.c ****     {
 772:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 773:Core/Src/bno055.c ****     }
 774:Core/Src/bno055.c ****     else
 775:Core/Src/bno055.c ****     {
 776:Core/Src/bno055.c ****         /*condition check for page, chip id is
 777:Core/Src/bno055.c ****          * available in the page zero*/
 778:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1392              		.loc 1 778 9 is_stmt 1 view .LVU378
 1393              		.loc 1 778 21 is_stmt 0 view .LVU379
 1394 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1395              		.loc 1 778 12 view .LVU380
 1396 0014 A3B9     		cbnz	r3, .L108
 1397              	.LVL147:
 1398              	.L103:
 779:Core/Src/bno055.c ****         {
 780:Core/Src/bno055.c ****             /* Write the page zero*/
 781:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 782:Core/Src/bno055.c ****         }
 783:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1399              		.loc 1 783 53 discriminator 1 view .LVU381
 1400 0016 104B     		ldr	r3, .L109
 1401 0018 1B68     		ldr	r3, [r3]
 1402 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1403              		.loc 1 783 41 discriminator 1 view .LVU382
 1404 001c CBB9     		cbnz	r3, .L106
 1405              	.L104:
 784:Core/Src/bno055.c ****         {
 785:Core/Src/bno055.c ****             /* Read the accel y axis two byte value*/
ARM GAS  /tmp/ccOloYeZ.s 			page 41


 786:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1406              		.loc 1 786 13 is_stmt 1 view .LVU383
 1407              		.loc 1 786 32 is_stmt 0 view .LVU384
 1408 001e 0E4B     		ldr	r3, .L109
 1409 0020 1868     		ldr	r0, [r3]
 1410 0022 0569     		ldr	r5, [r0, #16]
 1411              		.loc 1 786 24 view .LVU385
 1412 0024 0223     		movs	r3, #2
 1413 0026 01AA     		add	r2, sp, #4
 1414 0028 0A21     		movs	r1, #10
 1415 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1416 002c A847     		blx	r5
 1417              	.LVL148:
 787:Core/Src/bno055.c ****                                                       BNO055_ACCEL_DATA_Y_LSB_VALUEY_REG,
 788:Core/Src/bno055.c ****                                                       data_u8,
 789:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
 790:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1418              		.loc 1 790 13 is_stmt 1 view .LVU386
 791:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_Y_LSB_VALUEY);
 792:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1419              		.loc 1 792 13 view .LVU387
 793:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_Y_MSB_VALUEY);
 794:Core/Src/bno055.c ****             *accel_y_s16 =
 1420              		.loc 1 794 13 view .LVU388
 795:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1421              		.loc 1 795 31 is_stmt 0 view .LVU389
 1422 002e 9DF90520 		ldrsb	r2, [sp, #5]
 796:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1423              		.loc 1 796 31 view .LVU390
 1424 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 795:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1425              		.loc 1 795 17 view .LVU391
 1426 0036 43EA0223 		orr	r3, r3, r2, lsl #8
 794:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1427              		.loc 1 794 26 view .LVU392
 1428 003a 2380     		strh	r3, [r4]	@ movhi
 1429              	.LVL149:
 1430              	.L102:
 797:Core/Src/bno055.c ****         }
 798:Core/Src/bno055.c ****         else
 799:Core/Src/bno055.c ****         {
 800:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 801:Core/Src/bno055.c ****         }
 802:Core/Src/bno055.c ****     }
 803:Core/Src/bno055.c **** 
 804:Core/Src/bno055.c ****     return com_rslt;
 805:Core/Src/bno055.c **** }
 1431              		.loc 1 805 1 view .LVU393
 1432 003c 03B0     		add	sp, sp, #12
 1433              		.cfi_remember_state
 1434              		.cfi_def_cfa_offset 12
 1435              		@ sp needed
 1436 003e 30BD     		pop	{r4, r5, pc}
 1437              	.LVL150:
 1438              	.L108:
 1439              		.cfi_restore_state
 781:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 42


 1440              		.loc 1 781 13 is_stmt 1 view .LVU394
 781:Core/Src/bno055.c ****         }
 1441              		.loc 1 781 23 is_stmt 0 view .LVU395
 1442 0040 0020     		movs	r0, #0
 1443              	.LVL151:
 781:Core/Src/bno055.c ****         }
 1444              		.loc 1 781 23 view .LVU396
 1445 0042 FFF7FEFF 		bl	bno055_write_page_id
 1446              	.LVL152:
 783:Core/Src/bno055.c ****         {
 1447              		.loc 1 783 9 is_stmt 1 view .LVU397
 783:Core/Src/bno055.c ****         {
 1448              		.loc 1 783 12 is_stmt 0 view .LVU398
 1449 0046 0028     		cmp	r0, #0
 1450 0048 E9D0     		beq	.L104
 1451 004a E4E7     		b	.L103
 1452              	.LVL153:
 1453              	.L105:
 772:Core/Src/bno055.c ****     }
 1454              		.loc 1 772 16 view .LVU399
 1455 004c 6FF07E00 		mvn	r0, #126
 1456              	.LVL154:
 772:Core/Src/bno055.c ****     }
 1457              		.loc 1 772 16 view .LVU400
 1458 0050 F4E7     		b	.L102
 1459              	.LVL155:
 1460              	.L106:
 800:Core/Src/bno055.c ****         }
 1461              		.loc 1 800 22 view .LVU401
 1462 0052 4FF0FF30 		mov	r0, #-1
 1463 0056 F1E7     		b	.L102
 1464              	.L110:
 1465              		.align	2
 1466              	.L109:
 1467 0058 00000000 		.word	p_bno055
 1468              		.cfi_endproc
 1469              	.LFE12:
 1471              		.section	.text.bno055_read_accel_z,"ax",%progbits
 1472              		.align	1
 1473              		.global	bno055_read_accel_z
 1474              		.syntax unified
 1475              		.thumb
 1476              		.thumb_func
 1478              	bno055_read_accel_z:
 1479              	.LVL156:
 1480              	.LFB13:
 806:Core/Src/bno055.c **** 
 807:Core/Src/bno055.c **** /*!
 808:Core/Src/bno055.c ****  *  @brief This API reads acceleration data z values
 809:Core/Src/bno055.c ****  *  from register 0x0C and 0x0D it is a two byte data
 810:Core/Src/bno055.c ****  *
 811:Core/Src/bno055.c ****  *
 812:Core/Src/bno055.c ****  *
 813:Core/Src/bno055.c ****  *
 814:Core/Src/bno055.c ****  *  @param accel_z_s16 : The z raw data
 815:Core/Src/bno055.c ****  *
 816:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 43


 817:Core/Src/bno055.c ****  *
 818:Core/Src/bno055.c ****  *  @return results of bus communication function
 819:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 820:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 821:Core/Src/bno055.c ****  *
 822:Core/Src/bno055.c ****  *
 823:Core/Src/bno055.c ****  */
 824:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_z(s16 *accel_z_s16)
 825:Core/Src/bno055.c **** {
 1481              		.loc 1 825 1 is_stmt 1 view -0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 8
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 1485              		.loc 1 825 1 is_stmt 0 view .LVU403
 1486 0000 30B5     		push	{r4, r5, lr}
 1487              		.cfi_def_cfa_offset 12
 1488              		.cfi_offset 4, -12
 1489              		.cfi_offset 5, -8
 1490              		.cfi_offset 14, -4
 1491 0002 83B0     		sub	sp, sp, #12
 1492              		.cfi_def_cfa_offset 24
 826:Core/Src/bno055.c ****     /* Variable used to return value of
 827:Core/Src/bno055.c ****      * communication routine*/
 828:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1493              		.loc 1 828 5 is_stmt 1 view .LVU404
 1494              	.LVL157:
 829:Core/Src/bno055.c **** 
 830:Core/Src/bno055.c ****     /* Array holding the accel z value
 831:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - z-LSB
 832:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - z-MSB
 833:Core/Src/bno055.c ****      */
 834:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1495              		.loc 1 834 5 view .LVU405
 1496              		.loc 1 834 8 is_stmt 0 view .LVU406
 1497 0004 0023     		movs	r3, #0
 1498 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 835:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1499              		.loc 1 835 5 is_stmt 1 view .LVU407
 1500              	.LVL158:
 836:Core/Src/bno055.c **** 
 837:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 838:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1501              		.loc 1 838 5 view .LVU408
 1502              		.loc 1 838 18 is_stmt 0 view .LVU409
 1503 000a 134B     		ldr	r3, .L119
 1504 000c 1B68     		ldr	r3, [r3]
 1505              		.loc 1 838 8 view .LVU410
 1506 000e EBB1     		cbz	r3, .L115
 1507 0010 0446     		mov	r4, r0
 839:Core/Src/bno055.c ****     {
 840:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 841:Core/Src/bno055.c ****     }
 842:Core/Src/bno055.c ****     else
 843:Core/Src/bno055.c ****     {
 844:Core/Src/bno055.c ****         /*condition check for page, chip id is
 845:Core/Src/bno055.c ****          * available in the page zero*/
 846:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
ARM GAS  /tmp/ccOloYeZ.s 			page 44


 1508              		.loc 1 846 9 is_stmt 1 view .LVU411
 1509              		.loc 1 846 21 is_stmt 0 view .LVU412
 1510 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1511              		.loc 1 846 12 view .LVU413
 1512 0014 A3B9     		cbnz	r3, .L118
 1513              	.LVL159:
 1514              	.L113:
 847:Core/Src/bno055.c ****         {
 848:Core/Src/bno055.c ****             /* Write the page zero*/
 849:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 850:Core/Src/bno055.c ****         }
 851:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1515              		.loc 1 851 53 discriminator 1 view .LVU414
 1516 0016 104B     		ldr	r3, .L119
 1517 0018 1B68     		ldr	r3, [r3]
 1518 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1519              		.loc 1 851 41 discriminator 1 view .LVU415
 1520 001c CBB9     		cbnz	r3, .L116
 1521              	.L114:
 852:Core/Src/bno055.c ****         {
 853:Core/Src/bno055.c ****             /* Read the accel z axis two byte value*/
 854:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1522              		.loc 1 854 13 is_stmt 1 view .LVU416
 1523              		.loc 1 854 32 is_stmt 0 view .LVU417
 1524 001e 0E4B     		ldr	r3, .L119
 1525 0020 1868     		ldr	r0, [r3]
 1526 0022 0569     		ldr	r5, [r0, #16]
 1527              		.loc 1 854 24 view .LVU418
 1528 0024 0223     		movs	r3, #2
 1529 0026 01AA     		add	r2, sp, #4
 1530 0028 0C21     		movs	r1, #12
 1531 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1532 002c A847     		blx	r5
 1533              	.LVL160:
 855:Core/Src/bno055.c ****                                                       BNO055_ACCEL_DATA_Z_LSB_VALUEZ_REG,
 856:Core/Src/bno055.c ****                                                       data_u8,
 857:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
 858:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1534              		.loc 1 858 13 is_stmt 1 view .LVU419
 859:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_Z_LSB_VALUEZ);
 860:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1535              		.loc 1 860 13 view .LVU420
 861:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_Z_MSB_VALUEZ);
 862:Core/Src/bno055.c ****             *accel_z_s16 =
 1536              		.loc 1 862 13 view .LVU421
 863:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1537              		.loc 1 863 31 is_stmt 0 view .LVU422
 1538 002e 9DF90520 		ldrsb	r2, [sp, #5]
 864:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1539              		.loc 1 864 31 view .LVU423
 1540 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 863:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1541              		.loc 1 863 17 view .LVU424
 1542 0036 43EA0223 		orr	r3, r3, r2, lsl #8
 862:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1543              		.loc 1 862 26 view .LVU425
 1544 003a 2380     		strh	r3, [r4]	@ movhi
ARM GAS  /tmp/ccOloYeZ.s 			page 45


 1545              	.LVL161:
 1546              	.L112:
 865:Core/Src/bno055.c ****         }
 866:Core/Src/bno055.c ****         else
 867:Core/Src/bno055.c ****         {
 868:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 869:Core/Src/bno055.c ****         }
 870:Core/Src/bno055.c ****     }
 871:Core/Src/bno055.c **** 
 872:Core/Src/bno055.c ****     return com_rslt;
 873:Core/Src/bno055.c **** }
 1547              		.loc 1 873 1 view .LVU426
 1548 003c 03B0     		add	sp, sp, #12
 1549              		.cfi_remember_state
 1550              		.cfi_def_cfa_offset 12
 1551              		@ sp needed
 1552 003e 30BD     		pop	{r4, r5, pc}
 1553              	.LVL162:
 1554              	.L118:
 1555              		.cfi_restore_state
 849:Core/Src/bno055.c ****         }
 1556              		.loc 1 849 13 is_stmt 1 view .LVU427
 849:Core/Src/bno055.c ****         }
 1557              		.loc 1 849 23 is_stmt 0 view .LVU428
 1558 0040 0020     		movs	r0, #0
 1559              	.LVL163:
 849:Core/Src/bno055.c ****         }
 1560              		.loc 1 849 23 view .LVU429
 1561 0042 FFF7FEFF 		bl	bno055_write_page_id
 1562              	.LVL164:
 851:Core/Src/bno055.c ****         {
 1563              		.loc 1 851 9 is_stmt 1 view .LVU430
 851:Core/Src/bno055.c ****         {
 1564              		.loc 1 851 12 is_stmt 0 view .LVU431
 1565 0046 0028     		cmp	r0, #0
 1566 0048 E9D0     		beq	.L114
 1567 004a E4E7     		b	.L113
 1568              	.LVL165:
 1569              	.L115:
 840:Core/Src/bno055.c ****     }
 1570              		.loc 1 840 16 view .LVU432
 1571 004c 6FF07E00 		mvn	r0, #126
 1572              	.LVL166:
 840:Core/Src/bno055.c ****     }
 1573              		.loc 1 840 16 view .LVU433
 1574 0050 F4E7     		b	.L112
 1575              	.LVL167:
 1576              	.L116:
 868:Core/Src/bno055.c ****         }
 1577              		.loc 1 868 22 view .LVU434
 1578 0052 4FF0FF30 		mov	r0, #-1
 1579 0056 F1E7     		b	.L112
 1580              	.L120:
 1581              		.align	2
 1582              	.L119:
 1583 0058 00000000 		.word	p_bno055
 1584              		.cfi_endproc
ARM GAS  /tmp/ccOloYeZ.s 			page 46


 1585              	.LFE13:
 1587              		.section	.text.bno055_read_accel_xyz,"ax",%progbits
 1588              		.align	1
 1589              		.global	bno055_read_accel_xyz
 1590              		.syntax unified
 1591              		.thumb
 1592              		.thumb_func
 1594              	bno055_read_accel_xyz:
 1595              	.LVL168:
 1596              	.LFB14:
 874:Core/Src/bno055.c **** 
 875:Core/Src/bno055.c **** /*!
 876:Core/Src/bno055.c ****  *  @brief This API reads acceleration data xyz values
 877:Core/Src/bno055.c ****  *  from register 0x08 to 0x0D it is a six byte data
 878:Core/Src/bno055.c ****  *
 879:Core/Src/bno055.c ****  *
 880:Core/Src/bno055.c ****  *  @param accel : The value of accel xyz data
 881:Core/Src/bno055.c ****  *
 882:Core/Src/bno055.c ****  *  Parameter |    result
 883:Core/Src/bno055.c ****  *  --------- | -----------------
 884:Core/Src/bno055.c ****  *   x        | The accel x data
 885:Core/Src/bno055.c ****  *   y        | The accel y data
 886:Core/Src/bno055.c ****  *   z        | The accel z data
 887:Core/Src/bno055.c ****  *
 888:Core/Src/bno055.c ****  *
 889:Core/Src/bno055.c ****  *
 890:Core/Src/bno055.c ****  *  @return results of bus communication function
 891:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 892:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 893:Core/Src/bno055.c ****  *
 894:Core/Src/bno055.c ****  */
 895:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_xyz(struct bno055_accel_t *accel)
 896:Core/Src/bno055.c **** {
 1597              		.loc 1 896 1 is_stmt 1 view -0
 1598              		.cfi_startproc
 1599              		@ args = 0, pretend = 0, frame = 8
 1600              		@ frame_needed = 0, uses_anonymous_args = 0
 1601              		.loc 1 896 1 is_stmt 0 view .LVU436
 1602 0000 30B5     		push	{r4, r5, lr}
 1603              		.cfi_def_cfa_offset 12
 1604              		.cfi_offset 4, -12
 1605              		.cfi_offset 5, -8
 1606              		.cfi_offset 14, -4
 1607 0002 83B0     		sub	sp, sp, #12
 1608              		.cfi_def_cfa_offset 24
 1609 0004 0446     		mov	r4, r0
 897:Core/Src/bno055.c ****     /* Variable used to return value of
 898:Core/Src/bno055.c ****      * communication routine*/
 899:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1610              		.loc 1 899 5 is_stmt 1 view .LVU437
 1611              	.LVL169:
 900:Core/Src/bno055.c **** 
 901:Core/Src/bno055.c ****     /* Array holding the accel xyz value
 902:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
 903:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
 904:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
 905:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
ARM GAS  /tmp/ccOloYeZ.s 			page 47


 906:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
 907:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
 908:Core/Src/bno055.c ****      */
 909:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_XYZ_DATA_SIZE] = {
 1612              		.loc 1 909 5 view .LVU438
 1613              		.loc 1 909 8 is_stmt 0 view .LVU439
 1614 0006 1D4B     		ldr	r3, .L129
 1615 0008 93E80300 		ldm	r3, {r0, r1}
 1616              	.LVL170:
 1617              		.loc 1 909 8 view .LVU440
 1618 000c 0090     		str	r0, [sp]
 1619 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
 910:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
 911:Core/Src/bno055.c ****     };
 912:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1620              		.loc 1 912 5 is_stmt 1 view .LVU441
 1621              	.LVL171:
 913:Core/Src/bno055.c **** 
 914:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 915:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1622              		.loc 1 915 5 view .LVU442
 1623              		.loc 1 915 18 is_stmt 0 view .LVU443
 1624 0012 1B4B     		ldr	r3, .L129+4
 1625 0014 1B68     		ldr	r3, [r3]
 1626              		.loc 1 915 8 view .LVU444
 1627 0016 53B3     		cbz	r3, .L125
 916:Core/Src/bno055.c ****     {
 917:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 918:Core/Src/bno055.c ****     }
 919:Core/Src/bno055.c ****     else
 920:Core/Src/bno055.c ****     {
 921:Core/Src/bno055.c ****         /*condition check for page, chip id is
 922:Core/Src/bno055.c ****          * available in the page zero*/
 923:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1628              		.loc 1 923 9 is_stmt 1 view .LVU445
 1629              		.loc 1 923 21 is_stmt 0 view .LVU446
 1630 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1631              		.loc 1 923 12 view .LVU447
 1632 001a 13BB     		cbnz	r3, .L128
 1633              	.LVL172:
 1634              	.L123:
 924:Core/Src/bno055.c ****         {
 925:Core/Src/bno055.c ****             /* Write the page zero*/
 926:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 927:Core/Src/bno055.c ****         }
 928:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1635              		.loc 1 928 53 discriminator 1 view .LVU448
 1636 001c 184B     		ldr	r3, .L129+4
 1637 001e 1B68     		ldr	r3, [r3]
 1638 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1639              		.loc 1 928 41 discriminator 1 view .LVU449
 1640 0022 3BBB     		cbnz	r3, .L126
 1641              	.L124:
 929:Core/Src/bno055.c ****         {
 930:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1642              		.loc 1 930 13 is_stmt 1 view .LVU450
 1643              		.loc 1 930 32 is_stmt 0 view .LVU451
ARM GAS  /tmp/ccOloYeZ.s 			page 48


 1644 0024 164B     		ldr	r3, .L129+4
 1645 0026 1868     		ldr	r0, [r3]
 1646 0028 0569     		ldr	r5, [r0, #16]
 1647              		.loc 1 930 24 view .LVU452
 1648 002a 0623     		movs	r3, #6
 1649 002c 6A46     		mov	r2, sp
 1650 002e 0821     		movs	r1, #8
 1651 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1652 0032 A847     		blx	r5
 1653              	.LVL173:
 931:Core/Src/bno055.c ****                                                       BNO055_ACCEL_DATA_X_LSB_VALUEX_REG,
 932:Core/Src/bno055.c ****                                                       data_u8,
 933:Core/Src/bno055.c ****                                                       BNO055_ACCEL_XYZ_DATA_SIZE);
 934:Core/Src/bno055.c **** 
 935:Core/Src/bno055.c ****             /* Data X*/
 936:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1654              		.loc 1 936 13 is_stmt 1 view .LVU453
 937:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_X_LSB_VAL
 938:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1655              		.loc 1 938 13 view .LVU454
 939:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_X_MSB_VAL
 940:Core/Src/bno055.c ****             accel->x =
 1656              		.loc 1 940 13 view .LVU455
 941:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1657              		.loc 1 941 31 is_stmt 0 view .LVU456
 1658 0034 9DF90120 		ldrsb	r2, [sp, #1]
 942:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 1659              		.loc 1 942 31 view .LVU457
 1660 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 941:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1661              		.loc 1 941 17 view .LVU458
 1662 003c 43EA0223 		orr	r3, r3, r2, lsl #8
 940:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1663              		.loc 1 940 22 view .LVU459
 1664 0040 2380     		strh	r3, [r4]	@ movhi
 943:Core/Src/bno055.c **** 
 944:Core/Src/bno055.c ****             /* Data Y*/
 945:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1665              		.loc 1 945 13 is_stmt 1 view .LVU460
 946:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_Y_LSB_VAL
 947:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1666              		.loc 1 947 13 view .LVU461
 948:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_Y_MSB_VAL
 949:Core/Src/bno055.c ****             accel->y =
 1667              		.loc 1 949 13 view .LVU462
 950:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1668              		.loc 1 950 31 is_stmt 0 view .LVU463
 1669 0042 9DF90320 		ldrsb	r2, [sp, #3]
 951:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 1670              		.loc 1 951 31 view .LVU464
 1671 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
 950:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1672              		.loc 1 950 17 view .LVU465
 1673 004a 43EA0223 		orr	r3, r3, r2, lsl #8
 949:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1674              		.loc 1 949 22 view .LVU466
 1675 004e 6380     		strh	r3, [r4, #2]	@ movhi
ARM GAS  /tmp/ccOloYeZ.s 			page 49


 952:Core/Src/bno055.c **** 
 953:Core/Src/bno055.c ****             /* Data Z*/
 954:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1676              		.loc 1 954 13 is_stmt 1 view .LVU467
 955:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_Z_LSB_VAL
 956:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1677              		.loc 1 956 13 view .LVU468
 957:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_Z_MSB_VAL
 958:Core/Src/bno055.c ****             accel->z =
 1678              		.loc 1 958 13 view .LVU469
 959:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1679              		.loc 1 959 31 is_stmt 0 view .LVU470
 1680 0050 9DF90520 		ldrsb	r2, [sp, #5]
 960:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 1681              		.loc 1 960 31 view .LVU471
 1682 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 959:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1683              		.loc 1 959 17 view .LVU472
 1684 0058 43EA0223 		orr	r3, r3, r2, lsl #8
 958:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1685              		.loc 1 958 22 view .LVU473
 1686 005c A380     		strh	r3, [r4, #4]	@ movhi
 1687              	.LVL174:
 1688              	.L122:
 961:Core/Src/bno055.c ****         }
 962:Core/Src/bno055.c ****         else
 963:Core/Src/bno055.c ****         {
 964:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 965:Core/Src/bno055.c ****         }
 966:Core/Src/bno055.c ****     }
 967:Core/Src/bno055.c **** 
 968:Core/Src/bno055.c ****     return com_rslt;
 969:Core/Src/bno055.c **** }
 1689              		.loc 1 969 1 view .LVU474
 1690 005e 03B0     		add	sp, sp, #12
 1691              		.cfi_remember_state
 1692              		.cfi_def_cfa_offset 12
 1693              		@ sp needed
 1694 0060 30BD     		pop	{r4, r5, pc}
 1695              	.LVL175:
 1696              	.L128:
 1697              		.cfi_restore_state
 926:Core/Src/bno055.c ****         }
 1698              		.loc 1 926 13 is_stmt 1 view .LVU475
 926:Core/Src/bno055.c ****         }
 1699              		.loc 1 926 23 is_stmt 0 view .LVU476
 1700 0062 0020     		movs	r0, #0
 1701 0064 FFF7FEFF 		bl	bno055_write_page_id
 1702              	.LVL176:
 928:Core/Src/bno055.c ****         {
 1703              		.loc 1 928 9 is_stmt 1 view .LVU477
 928:Core/Src/bno055.c ****         {
 1704              		.loc 1 928 12 is_stmt 0 view .LVU478
 1705 0068 0028     		cmp	r0, #0
 1706 006a DBD0     		beq	.L124
 1707 006c D6E7     		b	.L123
 1708              	.LVL177:
ARM GAS  /tmp/ccOloYeZ.s 			page 50


 1709              	.L125:
 917:Core/Src/bno055.c ****     }
 1710              		.loc 1 917 16 view .LVU479
 1711 006e 6FF07E00 		mvn	r0, #126
 1712 0072 F4E7     		b	.L122
 1713              	.LVL178:
 1714              	.L126:
 964:Core/Src/bno055.c ****         }
 1715              		.loc 1 964 22 view .LVU480
 1716 0074 4FF0FF30 		mov	r0, #-1
 1717 0078 F1E7     		b	.L122
 1718              	.L130:
 1719 007a 00BF     		.align	2
 1720              	.L129:
 1721 007c 00000000 		.word	.LANCHOR0
 1722 0080 00000000 		.word	p_bno055
 1723              		.cfi_endproc
 1724              	.LFE14:
 1726              		.section	.text.bno055_read_mag_x,"ax",%progbits
 1727              		.align	1
 1728              		.global	bno055_read_mag_x
 1729              		.syntax unified
 1730              		.thumb
 1731              		.thumb_func
 1733              	bno055_read_mag_x:
 1734              	.LVL179:
 1735              	.LFB15:
 970:Core/Src/bno055.c **** 
 971:Core/Src/bno055.c **** /*!
 972:Core/Src/bno055.c ****  *  @brief This API reads mag data x values
 973:Core/Src/bno055.c ****  *  from register 0x0E and 0x0F it is a two byte data
 974:Core/Src/bno055.c ****  *
 975:Core/Src/bno055.c ****  *
 976:Core/Src/bno055.c ****  *
 977:Core/Src/bno055.c ****  *
 978:Core/Src/bno055.c ****  *  @param mag_x_s16 : The x raw data
 979:Core/Src/bno055.c ****  *
 980:Core/Src/bno055.c ****  *
 981:Core/Src/bno055.c ****  *
 982:Core/Src/bno055.c ****  *  @return results of bus communication function
 983:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 984:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 985:Core/Src/bno055.c ****  *
 986:Core/Src/bno055.c ****  *
 987:Core/Src/bno055.c ****  *
 988:Core/Src/bno055.c ****  */
 989:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_x(s16 *mag_x_s16)
 990:Core/Src/bno055.c **** {
 1736              		.loc 1 990 1 is_stmt 1 view -0
 1737              		.cfi_startproc
 1738              		@ args = 0, pretend = 0, frame = 8
 1739              		@ frame_needed = 0, uses_anonymous_args = 0
 1740              		.loc 1 990 1 is_stmt 0 view .LVU482
 1741 0000 30B5     		push	{r4, r5, lr}
 1742              		.cfi_def_cfa_offset 12
 1743              		.cfi_offset 4, -12
 1744              		.cfi_offset 5, -8
ARM GAS  /tmp/ccOloYeZ.s 			page 51


 1745              		.cfi_offset 14, -4
 1746 0002 83B0     		sub	sp, sp, #12
 1747              		.cfi_def_cfa_offset 24
 991:Core/Src/bno055.c ****     /* Variable used to return value of
 992:Core/Src/bno055.c ****      * communication routine*/
 993:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1748              		.loc 1 993 5 is_stmt 1 view .LVU483
 1749              	.LVL180:
 994:Core/Src/bno055.c **** 
 995:Core/Src/bno055.c ****     /* Array holding the mag x value
 996:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - x->LSB
 997:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - x->MSB
 998:Core/Src/bno055.c ****      */
 999:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1750              		.loc 1 999 5 view .LVU484
 1751              		.loc 1 999 8 is_stmt 0 view .LVU485
 1752 0004 0023     		movs	r3, #0
 1753 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1000:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1754              		.loc 1 1000 5 is_stmt 1 view .LVU486
 1755              	.LVL181:
1001:Core/Src/bno055.c **** 
1002:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1003:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1756              		.loc 1 1003 5 view .LVU487
 1757              		.loc 1 1003 18 is_stmt 0 view .LVU488
 1758 000a 134B     		ldr	r3, .L139
 1759 000c 1B68     		ldr	r3, [r3]
 1760              		.loc 1 1003 8 view .LVU489
 1761 000e EBB1     		cbz	r3, .L135
 1762 0010 0446     		mov	r4, r0
1004:Core/Src/bno055.c ****     {
1005:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1006:Core/Src/bno055.c ****     }
1007:Core/Src/bno055.c ****     else
1008:Core/Src/bno055.c ****     {
1009:Core/Src/bno055.c ****         /*condition check for page, chip id is
1010:Core/Src/bno055.c ****          * available in the page zero*/
1011:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1763              		.loc 1 1011 9 is_stmt 1 view .LVU490
 1764              		.loc 1 1011 21 is_stmt 0 view .LVU491
 1765 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1766              		.loc 1 1011 12 view .LVU492
 1767 0014 A3B9     		cbnz	r3, .L138
 1768              	.LVL182:
 1769              	.L133:
1012:Core/Src/bno055.c ****         {
1013:Core/Src/bno055.c ****             /* Write the page zero*/
1014:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1015:Core/Src/bno055.c ****         }
1016:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1770              		.loc 1 1016 53 discriminator 1 view .LVU493
 1771 0016 104B     		ldr	r3, .L139
 1772 0018 1B68     		ldr	r3, [r3]
 1773 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1774              		.loc 1 1016 41 discriminator 1 view .LVU494
 1775 001c CBB9     		cbnz	r3, .L136
ARM GAS  /tmp/ccOloYeZ.s 			page 52


 1776              	.L134:
1017:Core/Src/bno055.c ****         {
1018:Core/Src/bno055.c ****             /*Read the mag x two bytes of data */
1019:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1777              		.loc 1 1019 13 is_stmt 1 view .LVU495
 1778              		.loc 1 1019 32 is_stmt 0 view .LVU496
 1779 001e 0E4B     		ldr	r3, .L139
 1780 0020 1868     		ldr	r0, [r3]
 1781 0022 0569     		ldr	r5, [r0, #16]
 1782              		.loc 1 1019 24 view .LVU497
 1783 0024 0223     		movs	r3, #2
 1784 0026 01AA     		add	r2, sp, #4
 1785 0028 0E21     		movs	r1, #14
 1786 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1787 002c A847     		blx	r5
 1788              	.LVL183:
1020:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_X_LSB_VALUEX_REG,
1021:Core/Src/bno055.c ****                                                       data_u8,
1022:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1023:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1789              		.loc 1 1023 13 is_stmt 1 view .LVU498
1024:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_X_LSB_VALUEX);
1025:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1790              		.loc 1 1025 13 view .LVU499
1026:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_X_MSB_VALUEX);
1027:Core/Src/bno055.c ****             *mag_x_s16 =
 1791              		.loc 1 1027 13 view .LVU500
1028:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1792              		.loc 1 1028 31 is_stmt 0 view .LVU501
 1793 002e 9DF90520 		ldrsb	r2, [sp, #5]
1029:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1794              		.loc 1 1029 31 view .LVU502
 1795 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1028:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1796              		.loc 1 1028 17 view .LVU503
 1797 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1027:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1798              		.loc 1 1027 24 view .LVU504
 1799 003a 2380     		strh	r3, [r4]	@ movhi
 1800              	.LVL184:
 1801              	.L132:
1030:Core/Src/bno055.c ****         }
1031:Core/Src/bno055.c ****         else
1032:Core/Src/bno055.c ****         {
1033:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1034:Core/Src/bno055.c ****         }
1035:Core/Src/bno055.c ****     }
1036:Core/Src/bno055.c **** 
1037:Core/Src/bno055.c ****     return com_rslt;
1038:Core/Src/bno055.c **** }
 1802              		.loc 1 1038 1 view .LVU505
 1803 003c 03B0     		add	sp, sp, #12
 1804              		.cfi_remember_state
 1805              		.cfi_def_cfa_offset 12
 1806              		@ sp needed
 1807 003e 30BD     		pop	{r4, r5, pc}
 1808              	.LVL185:
ARM GAS  /tmp/ccOloYeZ.s 			page 53


 1809              	.L138:
 1810              		.cfi_restore_state
1014:Core/Src/bno055.c ****         }
 1811              		.loc 1 1014 13 is_stmt 1 view .LVU506
1014:Core/Src/bno055.c ****         }
 1812              		.loc 1 1014 23 is_stmt 0 view .LVU507
 1813 0040 0020     		movs	r0, #0
 1814              	.LVL186:
1014:Core/Src/bno055.c ****         }
 1815              		.loc 1 1014 23 view .LVU508
 1816 0042 FFF7FEFF 		bl	bno055_write_page_id
 1817              	.LVL187:
1016:Core/Src/bno055.c ****         {
 1818              		.loc 1 1016 9 is_stmt 1 view .LVU509
1016:Core/Src/bno055.c ****         {
 1819              		.loc 1 1016 12 is_stmt 0 view .LVU510
 1820 0046 0028     		cmp	r0, #0
 1821 0048 E9D0     		beq	.L134
 1822 004a E4E7     		b	.L133
 1823              	.LVL188:
 1824              	.L135:
1005:Core/Src/bno055.c ****     }
 1825              		.loc 1 1005 16 view .LVU511
 1826 004c 6FF07E00 		mvn	r0, #126
 1827              	.LVL189:
1005:Core/Src/bno055.c ****     }
 1828              		.loc 1 1005 16 view .LVU512
 1829 0050 F4E7     		b	.L132
 1830              	.LVL190:
 1831              	.L136:
1033:Core/Src/bno055.c ****         }
 1832              		.loc 1 1033 22 view .LVU513
 1833 0052 4FF0FF30 		mov	r0, #-1
 1834 0056 F1E7     		b	.L132
 1835              	.L140:
 1836              		.align	2
 1837              	.L139:
 1838 0058 00000000 		.word	p_bno055
 1839              		.cfi_endproc
 1840              	.LFE15:
 1842              		.section	.text.bno055_read_mag_y,"ax",%progbits
 1843              		.align	1
 1844              		.global	bno055_read_mag_y
 1845              		.syntax unified
 1846              		.thumb
 1847              		.thumb_func
 1849              	bno055_read_mag_y:
 1850              	.LVL191:
 1851              	.LFB16:
1039:Core/Src/bno055.c **** 
1040:Core/Src/bno055.c **** /*!
1041:Core/Src/bno055.c ****  *  @brief This API reads mag data y values
1042:Core/Src/bno055.c ****  *  from register 0x10 and 0x11 it is a two byte data
1043:Core/Src/bno055.c ****  *
1044:Core/Src/bno055.c ****  *
1045:Core/Src/bno055.c ****  *
1046:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 54


1047:Core/Src/bno055.c ****  *  @param mag_y_s16 : The y raw data
1048:Core/Src/bno055.c ****  *
1049:Core/Src/bno055.c ****  *
1050:Core/Src/bno055.c ****  *
1051:Core/Src/bno055.c ****  *  @return results of bus communication function
1052:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1053:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1054:Core/Src/bno055.c ****  *
1055:Core/Src/bno055.c ****  *
1056:Core/Src/bno055.c ****  */
1057:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_y(s16 *mag_y_s16)
1058:Core/Src/bno055.c **** {
 1852              		.loc 1 1058 1 is_stmt 1 view -0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 8
 1855              		@ frame_needed = 0, uses_anonymous_args = 0
 1856              		.loc 1 1058 1 is_stmt 0 view .LVU515
 1857 0000 30B5     		push	{r4, r5, lr}
 1858              		.cfi_def_cfa_offset 12
 1859              		.cfi_offset 4, -12
 1860              		.cfi_offset 5, -8
 1861              		.cfi_offset 14, -4
 1862 0002 83B0     		sub	sp, sp, #12
 1863              		.cfi_def_cfa_offset 24
1059:Core/Src/bno055.c ****     /* Variable used to return value of
1060:Core/Src/bno055.c ****      * communication routine*/
1061:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1864              		.loc 1 1061 5 is_stmt 1 view .LVU516
 1865              	.LVL192:
1062:Core/Src/bno055.c **** 
1063:Core/Src/bno055.c ****     /* Array holding the mag y value
1064:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - y->LSB
1065:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - y->MSB
1066:Core/Src/bno055.c ****      */
1067:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1866              		.loc 1 1067 5 view .LVU517
 1867              		.loc 1 1067 8 is_stmt 0 view .LVU518
 1868 0004 0023     		movs	r3, #0
 1869 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1068:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1870              		.loc 1 1068 5 is_stmt 1 view .LVU519
 1871              	.LVL193:
1069:Core/Src/bno055.c **** 
1070:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1071:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1872              		.loc 1 1071 5 view .LVU520
 1873              		.loc 1 1071 18 is_stmt 0 view .LVU521
 1874 000a 134B     		ldr	r3, .L149
 1875 000c 1B68     		ldr	r3, [r3]
 1876              		.loc 1 1071 8 view .LVU522
 1877 000e EBB1     		cbz	r3, .L145
 1878 0010 0446     		mov	r4, r0
1072:Core/Src/bno055.c ****     {
1073:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1074:Core/Src/bno055.c ****     }
1075:Core/Src/bno055.c ****     else
1076:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 55


1077:Core/Src/bno055.c ****         /*condition check for page, chip id is
1078:Core/Src/bno055.c ****          * available in the page zero*/
1079:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1879              		.loc 1 1079 9 is_stmt 1 view .LVU523
 1880              		.loc 1 1079 21 is_stmt 0 view .LVU524
 1881 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1882              		.loc 1 1079 12 view .LVU525
 1883 0014 A3B9     		cbnz	r3, .L148
 1884              	.LVL194:
 1885              	.L143:
1080:Core/Src/bno055.c ****         {
1081:Core/Src/bno055.c ****             /* Write the page zero*/
1082:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1083:Core/Src/bno055.c ****         }
1084:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1886              		.loc 1 1084 53 discriminator 1 view .LVU526
 1887 0016 104B     		ldr	r3, .L149
 1888 0018 1B68     		ldr	r3, [r3]
 1889 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1890              		.loc 1 1084 41 discriminator 1 view .LVU527
 1891 001c CBB9     		cbnz	r3, .L146
 1892              	.L144:
1085:Core/Src/bno055.c ****         {
1086:Core/Src/bno055.c ****             /*Read the mag y two bytes of data */
1087:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1893              		.loc 1 1087 13 is_stmt 1 view .LVU528
 1894              		.loc 1 1087 32 is_stmt 0 view .LVU529
 1895 001e 0E4B     		ldr	r3, .L149
 1896 0020 1868     		ldr	r0, [r3]
 1897 0022 0569     		ldr	r5, [r0, #16]
 1898              		.loc 1 1087 24 view .LVU530
 1899 0024 0223     		movs	r3, #2
 1900 0026 01AA     		add	r2, sp, #4
 1901 0028 1021     		movs	r1, #16
 1902 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1903 002c A847     		blx	r5
 1904              	.LVL195:
1088:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_Y_LSB_VALUEY_REG,
1089:Core/Src/bno055.c ****                                                       data_u8,
1090:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1091:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1905              		.loc 1 1091 13 is_stmt 1 view .LVU531
1092:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_Y_LSB_VALUEY);
1093:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1906              		.loc 1 1093 13 view .LVU532
1094:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_Y_MSB_VALUEY);
1095:Core/Src/bno055.c ****             *mag_y_s16 =
 1907              		.loc 1 1095 13 view .LVU533
1096:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1908              		.loc 1 1096 31 is_stmt 0 view .LVU534
 1909 002e 9DF90520 		ldrsb	r2, [sp, #5]
1097:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1910              		.loc 1 1097 31 view .LVU535
 1911 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1096:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1912              		.loc 1 1096 17 view .LVU536
 1913 0036 43EA0223 		orr	r3, r3, r2, lsl #8
ARM GAS  /tmp/ccOloYeZ.s 			page 56


1095:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1914              		.loc 1 1095 24 view .LVU537
 1915 003a 2380     		strh	r3, [r4]	@ movhi
 1916              	.LVL196:
 1917              	.L142:
1098:Core/Src/bno055.c ****         }
1099:Core/Src/bno055.c ****         else
1100:Core/Src/bno055.c ****         {
1101:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1102:Core/Src/bno055.c ****         }
1103:Core/Src/bno055.c ****     }
1104:Core/Src/bno055.c **** 
1105:Core/Src/bno055.c ****     return com_rslt;
1106:Core/Src/bno055.c **** }
 1918              		.loc 1 1106 1 view .LVU538
 1919 003c 03B0     		add	sp, sp, #12
 1920              		.cfi_remember_state
 1921              		.cfi_def_cfa_offset 12
 1922              		@ sp needed
 1923 003e 30BD     		pop	{r4, r5, pc}
 1924              	.LVL197:
 1925              	.L148:
 1926              		.cfi_restore_state
1082:Core/Src/bno055.c ****         }
 1927              		.loc 1 1082 13 is_stmt 1 view .LVU539
1082:Core/Src/bno055.c ****         }
 1928              		.loc 1 1082 23 is_stmt 0 view .LVU540
 1929 0040 0020     		movs	r0, #0
 1930              	.LVL198:
1082:Core/Src/bno055.c ****         }
 1931              		.loc 1 1082 23 view .LVU541
 1932 0042 FFF7FEFF 		bl	bno055_write_page_id
 1933              	.LVL199:
1084:Core/Src/bno055.c ****         {
 1934              		.loc 1 1084 9 is_stmt 1 view .LVU542
1084:Core/Src/bno055.c ****         {
 1935              		.loc 1 1084 12 is_stmt 0 view .LVU543
 1936 0046 0028     		cmp	r0, #0
 1937 0048 E9D0     		beq	.L144
 1938 004a E4E7     		b	.L143
 1939              	.LVL200:
 1940              	.L145:
1073:Core/Src/bno055.c ****     }
 1941              		.loc 1 1073 16 view .LVU544
 1942 004c 6FF07E00 		mvn	r0, #126
 1943              	.LVL201:
1073:Core/Src/bno055.c ****     }
 1944              		.loc 1 1073 16 view .LVU545
 1945 0050 F4E7     		b	.L142
 1946              	.LVL202:
 1947              	.L146:
1101:Core/Src/bno055.c ****         }
 1948              		.loc 1 1101 22 view .LVU546
 1949 0052 4FF0FF30 		mov	r0, #-1
 1950 0056 F1E7     		b	.L142
 1951              	.L150:
 1952              		.align	2
ARM GAS  /tmp/ccOloYeZ.s 			page 57


 1953              	.L149:
 1954 0058 00000000 		.word	p_bno055
 1955              		.cfi_endproc
 1956              	.LFE16:
 1958              		.section	.text.bno055_read_mag_z,"ax",%progbits
 1959              		.align	1
 1960              		.global	bno055_read_mag_z
 1961              		.syntax unified
 1962              		.thumb
 1963              		.thumb_func
 1965              	bno055_read_mag_z:
 1966              	.LVL203:
 1967              	.LFB17:
1107:Core/Src/bno055.c **** 
1108:Core/Src/bno055.c **** /*!
1109:Core/Src/bno055.c ****  *  @brief This API reads mag data z values
1110:Core/Src/bno055.c ****  *  from register 0x12 and 0x13 it is a two byte data
1111:Core/Src/bno055.c ****  *
1112:Core/Src/bno055.c ****  *
1113:Core/Src/bno055.c ****  *
1114:Core/Src/bno055.c ****  *
1115:Core/Src/bno055.c ****  *  @param mag_z_s16 : The z raw data
1116:Core/Src/bno055.c ****  *
1117:Core/Src/bno055.c ****  *
1118:Core/Src/bno055.c ****  *
1119:Core/Src/bno055.c ****  *  @return results of bus communication function
1120:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1121:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1122:Core/Src/bno055.c ****  *
1123:Core/Src/bno055.c ****  *
1124:Core/Src/bno055.c ****  *
1125:Core/Src/bno055.c ****  */
1126:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_z(s16 *mag_z_s16)
1127:Core/Src/bno055.c **** {
 1968              		.loc 1 1127 1 is_stmt 1 view -0
 1969              		.cfi_startproc
 1970              		@ args = 0, pretend = 0, frame = 8
 1971              		@ frame_needed = 0, uses_anonymous_args = 0
 1972              		.loc 1 1127 1 is_stmt 0 view .LVU548
 1973 0000 30B5     		push	{r4, r5, lr}
 1974              		.cfi_def_cfa_offset 12
 1975              		.cfi_offset 4, -12
 1976              		.cfi_offset 5, -8
 1977              		.cfi_offset 14, -4
 1978 0002 83B0     		sub	sp, sp, #12
 1979              		.cfi_def_cfa_offset 24
1128:Core/Src/bno055.c ****     /* Variable used to return value of
1129:Core/Src/bno055.c ****      * communication routine*/
1130:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1980              		.loc 1 1130 5 is_stmt 1 view .LVU549
 1981              	.LVL204:
1131:Core/Src/bno055.c **** 
1132:Core/Src/bno055.c ****     /* Array holding the mag z value
1133:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - z->LSB
1134:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - z->MSB
1135:Core/Src/bno055.c ****      */
1136:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
ARM GAS  /tmp/ccOloYeZ.s 			page 58


 1982              		.loc 1 1136 5 view .LVU550
 1983              		.loc 1 1136 8 is_stmt 0 view .LVU551
 1984 0004 0023     		movs	r3, #0
 1985 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1137:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1986              		.loc 1 1137 5 is_stmt 1 view .LVU552
 1987              	.LVL205:
1138:Core/Src/bno055.c **** 
1139:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1140:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1988              		.loc 1 1140 5 view .LVU553
 1989              		.loc 1 1140 18 is_stmt 0 view .LVU554
 1990 000a 134B     		ldr	r3, .L159
 1991 000c 1B68     		ldr	r3, [r3]
 1992              		.loc 1 1140 8 view .LVU555
 1993 000e EBB1     		cbz	r3, .L155
 1994 0010 0446     		mov	r4, r0
1141:Core/Src/bno055.c ****     {
1142:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1143:Core/Src/bno055.c ****     }
1144:Core/Src/bno055.c ****     else
1145:Core/Src/bno055.c ****     {
1146:Core/Src/bno055.c ****         /*condition check for page, chip id is
1147:Core/Src/bno055.c ****          * available in the page zero*/
1148:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1995              		.loc 1 1148 9 is_stmt 1 view .LVU556
 1996              		.loc 1 1148 21 is_stmt 0 view .LVU557
 1997 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1998              		.loc 1 1148 12 view .LVU558
 1999 0014 A3B9     		cbnz	r3, .L158
 2000              	.LVL206:
 2001              	.L153:
1149:Core/Src/bno055.c ****         {
1150:Core/Src/bno055.c ****             /* Write the page zero*/
1151:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1152:Core/Src/bno055.c ****         }
1153:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2002              		.loc 1 1153 53 discriminator 1 view .LVU559
 2003 0016 104B     		ldr	r3, .L159
 2004 0018 1B68     		ldr	r3, [r3]
 2005 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2006              		.loc 1 1153 41 discriminator 1 view .LVU560
 2007 001c CBB9     		cbnz	r3, .L156
 2008              	.L154:
1154:Core/Src/bno055.c ****         {
1155:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2009              		.loc 1 1155 13 is_stmt 1 view .LVU561
 2010              		.loc 1 1155 32 is_stmt 0 view .LVU562
 2011 001e 0E4B     		ldr	r3, .L159
 2012 0020 1868     		ldr	r0, [r3]
 2013 0022 0569     		ldr	r5, [r0, #16]
 2014              		.loc 1 1155 24 view .LVU563
 2015 0024 0223     		movs	r3, #2
 2016 0026 01AA     		add	r2, sp, #4
 2017 0028 1221     		movs	r1, #18
 2018 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2019 002c A847     		blx	r5
ARM GAS  /tmp/ccOloYeZ.s 			page 59


 2020              	.LVL207:
1156:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_Z_LSB_VALUEZ_REG,
1157:Core/Src/bno055.c ****                                                       data_u8,
1158:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1159:Core/Src/bno055.c **** 
1160:Core/Src/bno055.c ****             /*Read the mag z two bytes of data */
1161:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 2021              		.loc 1 1161 13 is_stmt 1 view .LVU564
1162:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_Z_LSB_VALUEZ);
1163:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 2022              		.loc 1 1163 13 view .LVU565
1164:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_Z_MSB_VALUEZ);
1165:Core/Src/bno055.c ****             *mag_z_s16 =
 2023              		.loc 1 1165 13 view .LVU566
1166:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2024              		.loc 1 1166 31 is_stmt 0 view .LVU567
 2025 002e 9DF90520 		ldrsb	r2, [sp, #5]
1167:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 2026              		.loc 1 1167 31 view .LVU568
 2027 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1166:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2028              		.loc 1 1166 17 view .LVU569
 2029 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1165:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2030              		.loc 1 1165 24 view .LVU570
 2031 003a 2380     		strh	r3, [r4]	@ movhi
 2032              	.LVL208:
 2033              	.L152:
1168:Core/Src/bno055.c ****         }
1169:Core/Src/bno055.c ****         else
1170:Core/Src/bno055.c ****         {
1171:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1172:Core/Src/bno055.c ****         }
1173:Core/Src/bno055.c ****     }
1174:Core/Src/bno055.c **** 
1175:Core/Src/bno055.c ****     return com_rslt;
1176:Core/Src/bno055.c **** }
 2034              		.loc 1 1176 1 view .LVU571
 2035 003c 03B0     		add	sp, sp, #12
 2036              		.cfi_remember_state
 2037              		.cfi_def_cfa_offset 12
 2038              		@ sp needed
 2039 003e 30BD     		pop	{r4, r5, pc}
 2040              	.LVL209:
 2041              	.L158:
 2042              		.cfi_restore_state
1151:Core/Src/bno055.c ****         }
 2043              		.loc 1 1151 13 is_stmt 1 view .LVU572
1151:Core/Src/bno055.c ****         }
 2044              		.loc 1 1151 23 is_stmt 0 view .LVU573
 2045 0040 0020     		movs	r0, #0
 2046              	.LVL210:
1151:Core/Src/bno055.c ****         }
 2047              		.loc 1 1151 23 view .LVU574
 2048 0042 FFF7FEFF 		bl	bno055_write_page_id
 2049              	.LVL211:
1153:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccOloYeZ.s 			page 60


 2050              		.loc 1 1153 9 is_stmt 1 view .LVU575
1153:Core/Src/bno055.c ****         {
 2051              		.loc 1 1153 12 is_stmt 0 view .LVU576
 2052 0046 0028     		cmp	r0, #0
 2053 0048 E9D0     		beq	.L154
 2054 004a E4E7     		b	.L153
 2055              	.LVL212:
 2056              	.L155:
1142:Core/Src/bno055.c ****     }
 2057              		.loc 1 1142 16 view .LVU577
 2058 004c 6FF07E00 		mvn	r0, #126
 2059              	.LVL213:
1142:Core/Src/bno055.c ****     }
 2060              		.loc 1 1142 16 view .LVU578
 2061 0050 F4E7     		b	.L152
 2062              	.LVL214:
 2063              	.L156:
1171:Core/Src/bno055.c ****         }
 2064              		.loc 1 1171 22 view .LVU579
 2065 0052 4FF0FF30 		mov	r0, #-1
 2066 0056 F1E7     		b	.L152
 2067              	.L160:
 2068              		.align	2
 2069              	.L159:
 2070 0058 00000000 		.word	p_bno055
 2071              		.cfi_endproc
 2072              	.LFE17:
 2074              		.section	.text.bno055_read_mag_xyz,"ax",%progbits
 2075              		.align	1
 2076              		.global	bno055_read_mag_xyz
 2077              		.syntax unified
 2078              		.thumb
 2079              		.thumb_func
 2081              	bno055_read_mag_xyz:
 2082              	.LVL215:
 2083              	.LFB18:
1177:Core/Src/bno055.c **** 
1178:Core/Src/bno055.c **** /*!
1179:Core/Src/bno055.c ****  *  @brief This API reads mag data xyz values
1180:Core/Src/bno055.c ****  *  from register 0x0E to 0x13 it is a six byte data
1181:Core/Src/bno055.c ****  *
1182:Core/Src/bno055.c ****  *
1183:Core/Src/bno055.c ****  *  @param mag : The mag xyz values
1184:Core/Src/bno055.c ****  *
1185:Core/Src/bno055.c ****  *  Parameter |    result
1186:Core/Src/bno055.c ****  *  --------- | -----------------
1187:Core/Src/bno055.c ****  *   x        | The mag x data
1188:Core/Src/bno055.c ****  *   y        | The mag y data
1189:Core/Src/bno055.c ****  *   z        | The mag z data
1190:Core/Src/bno055.c ****  *
1191:Core/Src/bno055.c ****  *
1192:Core/Src/bno055.c ****  *
1193:Core/Src/bno055.c ****  *  @return results of bus communication function
1194:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1195:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1196:Core/Src/bno055.c ****  *
1197:Core/Src/bno055.c ****  */
ARM GAS  /tmp/ccOloYeZ.s 			page 61


1198:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_xyz(struct bno055_mag_t *mag)
1199:Core/Src/bno055.c **** {
 2084              		.loc 1 1199 1 is_stmt 1 view -0
 2085              		.cfi_startproc
 2086              		@ args = 0, pretend = 0, frame = 8
 2087              		@ frame_needed = 0, uses_anonymous_args = 0
 2088              		.loc 1 1199 1 is_stmt 0 view .LVU581
 2089 0000 30B5     		push	{r4, r5, lr}
 2090              		.cfi_def_cfa_offset 12
 2091              		.cfi_offset 4, -12
 2092              		.cfi_offset 5, -8
 2093              		.cfi_offset 14, -4
 2094 0002 83B0     		sub	sp, sp, #12
 2095              		.cfi_def_cfa_offset 24
 2096 0004 0446     		mov	r4, r0
1200:Core/Src/bno055.c ****     /* Variable used to return value of
1201:Core/Src/bno055.c ****      * communication routine*/
1202:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2097              		.loc 1 1202 5 is_stmt 1 view .LVU582
 2098              	.LVL216:
1203:Core/Src/bno055.c **** 
1204:Core/Src/bno055.c ****     /* Array holding the mag xyz value
1205:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
1206:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
1207:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
1208:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
1209:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
1210:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
1211:Core/Src/bno055.c ****      */
1212:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_XYZ_DATA_SIZE] = {
 2099              		.loc 1 1212 5 view .LVU583
 2100              		.loc 1 1212 8 is_stmt 0 view .LVU584
 2101 0006 1D4B     		ldr	r3, .L169
 2102 0008 93E80300 		ldm	r3, {r0, r1}
 2103              	.LVL217:
 2104              		.loc 1 1212 8 view .LVU585
 2105 000c 0090     		str	r0, [sp]
 2106 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
1213:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
1214:Core/Src/bno055.c ****     };
1215:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2107              		.loc 1 1215 5 is_stmt 1 view .LVU586
 2108              	.LVL218:
1216:Core/Src/bno055.c **** 
1217:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1218:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2109              		.loc 1 1218 5 view .LVU587
 2110              		.loc 1 1218 18 is_stmt 0 view .LVU588
 2111 0012 1B4B     		ldr	r3, .L169+4
 2112 0014 1B68     		ldr	r3, [r3]
 2113              		.loc 1 1218 8 view .LVU589
 2114 0016 53B3     		cbz	r3, .L165
1219:Core/Src/bno055.c ****     {
1220:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1221:Core/Src/bno055.c ****     }
1222:Core/Src/bno055.c ****     else
1223:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 62


1224:Core/Src/bno055.c ****         /*condition check for page, chip id is
1225:Core/Src/bno055.c ****          * available in the page zero*/
1226:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2115              		.loc 1 1226 9 is_stmt 1 view .LVU590
 2116              		.loc 1 1226 21 is_stmt 0 view .LVU591
 2117 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2118              		.loc 1 1226 12 view .LVU592
 2119 001a 13BB     		cbnz	r3, .L168
 2120              	.LVL219:
 2121              	.L163:
1227:Core/Src/bno055.c ****         {
1228:Core/Src/bno055.c ****             /* Write the page zero*/
1229:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1230:Core/Src/bno055.c ****         }
1231:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2122              		.loc 1 1231 53 discriminator 1 view .LVU593
 2123 001c 184B     		ldr	r3, .L169+4
 2124 001e 1B68     		ldr	r3, [r3]
 2125 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2126              		.loc 1 1231 41 discriminator 1 view .LVU594
 2127 0022 3BBB     		cbnz	r3, .L166
 2128              	.L164:
1232:Core/Src/bno055.c ****         {
1233:Core/Src/bno055.c ****             /*Read the six byte value of mag xyz*/
1234:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2129              		.loc 1 1234 13 is_stmt 1 view .LVU595
 2130              		.loc 1 1234 32 is_stmt 0 view .LVU596
 2131 0024 164B     		ldr	r3, .L169+4
 2132 0026 1868     		ldr	r0, [r3]
 2133 0028 0569     		ldr	r5, [r0, #16]
 2134              		.loc 1 1234 24 view .LVU597
 2135 002a 0623     		movs	r3, #6
 2136 002c 6A46     		mov	r2, sp
 2137 002e 0E21     		movs	r1, #14
 2138 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2139 0032 A847     		blx	r5
 2140              	.LVL220:
1235:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_X_LSB_VALUEX_REG,
1236:Core/Src/bno055.c ****                                                       data_u8,
1237:Core/Src/bno055.c ****                                                       BNO055_MAG_XYZ_DATA_SIZE);
1238:Core/Src/bno055.c **** 
1239:Core/Src/bno055.c ****             /* Data X*/
1240:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2141              		.loc 1 1240 13 is_stmt 1 view .LVU598
1241:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_X_LSB_VALUE
1242:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2142              		.loc 1 1242 13 view .LVU599
1243:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_X_MSB_VALUE
1244:Core/Src/bno055.c ****             mag->x =
 2143              		.loc 1 1244 13 view .LVU600
1245:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2144              		.loc 1 1245 31 is_stmt 0 view .LVU601
 2145 0034 9DF90120 		ldrsb	r2, [sp, #1]
1246:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 2146              		.loc 1 1246 31 view .LVU602
 2147 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
1245:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
ARM GAS  /tmp/ccOloYeZ.s 			page 63


 2148              		.loc 1 1245 17 view .LVU603
 2149 003c 43EA0223 		orr	r3, r3, r2, lsl #8
1244:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2150              		.loc 1 1244 20 view .LVU604
 2151 0040 2380     		strh	r3, [r4]	@ movhi
1247:Core/Src/bno055.c **** 
1248:Core/Src/bno055.c ****             /* Data Y*/
1249:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2152              		.loc 1 1249 13 is_stmt 1 view .LVU605
1250:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_Y_LSB_VALUE
1251:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2153              		.loc 1 1251 13 view .LVU606
1252:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_Y_MSB_VALUE
1253:Core/Src/bno055.c ****             mag->y =
 2154              		.loc 1 1253 13 view .LVU607
1254:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2155              		.loc 1 1254 31 is_stmt 0 view .LVU608
 2156 0042 9DF90320 		ldrsb	r2, [sp, #3]
1255:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 2157              		.loc 1 1255 31 view .LVU609
 2158 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
1254:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2159              		.loc 1 1254 17 view .LVU610
 2160 004a 43EA0223 		orr	r3, r3, r2, lsl #8
1253:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2161              		.loc 1 1253 20 view .LVU611
 2162 004e 6380     		strh	r3, [r4, #2]	@ movhi
1256:Core/Src/bno055.c **** 
1257:Core/Src/bno055.c ****             /* Data Z*/
1258:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2163              		.loc 1 1258 13 is_stmt 1 view .LVU612
1259:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_Z_LSB_VALUE
1260:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2164              		.loc 1 1260 13 view .LVU613
1261:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_Z_MSB_VALUE
1262:Core/Src/bno055.c ****             mag->z =
 2165              		.loc 1 1262 13 view .LVU614
1263:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2166              		.loc 1 1263 31 is_stmt 0 view .LVU615
 2167 0050 9DF90520 		ldrsb	r2, [sp, #5]
1264:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 2168              		.loc 1 1264 31 view .LVU616
 2169 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1263:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2170              		.loc 1 1263 17 view .LVU617
 2171 0058 43EA0223 		orr	r3, r3, r2, lsl #8
1262:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2172              		.loc 1 1262 20 view .LVU618
 2173 005c A380     		strh	r3, [r4, #4]	@ movhi
 2174              	.LVL221:
 2175              	.L162:
1265:Core/Src/bno055.c ****         }
1266:Core/Src/bno055.c ****         else
1267:Core/Src/bno055.c ****         {
1268:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1269:Core/Src/bno055.c ****         }
1270:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccOloYeZ.s 			page 64


1271:Core/Src/bno055.c **** 
1272:Core/Src/bno055.c ****     return com_rslt;
1273:Core/Src/bno055.c **** }
 2176              		.loc 1 1273 1 view .LVU619
 2177 005e 03B0     		add	sp, sp, #12
 2178              		.cfi_remember_state
 2179              		.cfi_def_cfa_offset 12
 2180              		@ sp needed
 2181 0060 30BD     		pop	{r4, r5, pc}
 2182              	.LVL222:
 2183              	.L168:
 2184              		.cfi_restore_state
1229:Core/Src/bno055.c ****         }
 2185              		.loc 1 1229 13 is_stmt 1 view .LVU620
1229:Core/Src/bno055.c ****         }
 2186              		.loc 1 1229 23 is_stmt 0 view .LVU621
 2187 0062 0020     		movs	r0, #0
 2188 0064 FFF7FEFF 		bl	bno055_write_page_id
 2189              	.LVL223:
1231:Core/Src/bno055.c ****         {
 2190              		.loc 1 1231 9 is_stmt 1 view .LVU622
1231:Core/Src/bno055.c ****         {
 2191              		.loc 1 1231 12 is_stmt 0 view .LVU623
 2192 0068 0028     		cmp	r0, #0
 2193 006a DBD0     		beq	.L164
 2194 006c D6E7     		b	.L163
 2195              	.LVL224:
 2196              	.L165:
1220:Core/Src/bno055.c ****     }
 2197              		.loc 1 1220 16 view .LVU624
 2198 006e 6FF07E00 		mvn	r0, #126
 2199 0072 F4E7     		b	.L162
 2200              	.LVL225:
 2201              	.L166:
1268:Core/Src/bno055.c ****         }
 2202              		.loc 1 1268 22 view .LVU625
 2203 0074 4FF0FF30 		mov	r0, #-1
 2204 0078 F1E7     		b	.L162
 2205              	.L170:
 2206 007a 00BF     		.align	2
 2207              	.L169:
 2208 007c 00000000 		.word	.LANCHOR0
 2209 0080 00000000 		.word	p_bno055
 2210              		.cfi_endproc
 2211              	.LFE18:
 2213              		.section	.text.bno055_read_gyro_x,"ax",%progbits
 2214              		.align	1
 2215              		.global	bno055_read_gyro_x
 2216              		.syntax unified
 2217              		.thumb
 2218              		.thumb_func
 2220              	bno055_read_gyro_x:
 2221              	.LVL226:
 2222              	.LFB19:
1274:Core/Src/bno055.c **** 
1275:Core/Src/bno055.c **** /*!
1276:Core/Src/bno055.c ****  *  @brief This API reads gyro data x values
ARM GAS  /tmp/ccOloYeZ.s 			page 65


1277:Core/Src/bno055.c ****  *  from register 0x14 and 0x15 it is a two byte data
1278:Core/Src/bno055.c ****  *
1279:Core/Src/bno055.c ****  *
1280:Core/Src/bno055.c ****  *
1281:Core/Src/bno055.c ****  *
1282:Core/Src/bno055.c ****  *  @param gyro_x_s16 : The x raw data
1283:Core/Src/bno055.c ****  *
1284:Core/Src/bno055.c ****  *
1285:Core/Src/bno055.c ****  *
1286:Core/Src/bno055.c ****  *  @return results of bus communication function
1287:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1288:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1289:Core/Src/bno055.c ****  *
1290:Core/Src/bno055.c ****  *
1291:Core/Src/bno055.c ****  */
1292:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_x(s16 *gyro_x_s16)
1293:Core/Src/bno055.c **** {
 2223              		.loc 1 1293 1 is_stmt 1 view -0
 2224              		.cfi_startproc
 2225              		@ args = 0, pretend = 0, frame = 8
 2226              		@ frame_needed = 0, uses_anonymous_args = 0
 2227              		.loc 1 1293 1 is_stmt 0 view .LVU627
 2228 0000 30B5     		push	{r4, r5, lr}
 2229              		.cfi_def_cfa_offset 12
 2230              		.cfi_offset 4, -12
 2231              		.cfi_offset 5, -8
 2232              		.cfi_offset 14, -4
 2233 0002 83B0     		sub	sp, sp, #12
 2234              		.cfi_def_cfa_offset 24
1294:Core/Src/bno055.c ****     /* Variable used to return value of
1295:Core/Src/bno055.c ****      * communication routine*/
1296:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2235              		.loc 1 1296 5 is_stmt 1 view .LVU628
 2236              	.LVL227:
1297:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2237              		.loc 1 1297 5 view .LVU629
 2238              		.loc 1 1297 8 is_stmt 0 view .LVU630
 2239 0004 0023     		movs	r3, #0
 2240 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1298:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2241              		.loc 1 1298 5 is_stmt 1 view .LVU631
 2242              	.LVL228:
1299:Core/Src/bno055.c **** 
1300:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1301:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2243              		.loc 1 1301 5 view .LVU632
 2244              		.loc 1 1301 18 is_stmt 0 view .LVU633
 2245 000a 134B     		ldr	r3, .L179
 2246 000c 1B68     		ldr	r3, [r3]
 2247              		.loc 1 1301 8 view .LVU634
 2248 000e EBB1     		cbz	r3, .L175
 2249 0010 0446     		mov	r4, r0
1302:Core/Src/bno055.c ****     {
1303:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1304:Core/Src/bno055.c ****     }
1305:Core/Src/bno055.c ****     else
1306:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 66


1307:Core/Src/bno055.c ****         /*condition check for page, chip id is
1308:Core/Src/bno055.c ****          * available in the page zero*/
1309:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2250              		.loc 1 1309 9 is_stmt 1 view .LVU635
 2251              		.loc 1 1309 21 is_stmt 0 view .LVU636
 2252 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2253              		.loc 1 1309 12 view .LVU637
 2254 0014 A3B9     		cbnz	r3, .L178
 2255              	.LVL229:
 2256              	.L173:
1310:Core/Src/bno055.c ****         {
1311:Core/Src/bno055.c ****             /* Write the page zero*/
1312:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1313:Core/Src/bno055.c ****         }
1314:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2257              		.loc 1 1314 53 discriminator 1 view .LVU638
 2258 0016 104B     		ldr	r3, .L179
 2259 0018 1B68     		ldr	r3, [r3]
 2260 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2261              		.loc 1 1314 41 discriminator 1 view .LVU639
 2262 001c CBB9     		cbnz	r3, .L176
 2263              	.L174:
1315:Core/Src/bno055.c ****         {
1316:Core/Src/bno055.c ****             /* Read the gyro 16 bit x value*/
1317:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2264              		.loc 1 1317 13 is_stmt 1 view .LVU640
 2265              		.loc 1 1317 32 is_stmt 0 view .LVU641
 2266 001e 0E4B     		ldr	r3, .L179
 2267 0020 1868     		ldr	r0, [r3]
 2268 0022 0569     		ldr	r5, [r0, #16]
 2269              		.loc 1 1317 24 view .LVU642
 2270 0024 0223     		movs	r3, #2
 2271 0026 01AA     		add	r2, sp, #4
 2272 0028 1421     		movs	r1, #20
 2273 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2274 002c A847     		blx	r5
 2275              	.LVL230:
1318:Core/Src/bno055.c ****                                                       BNO055_GYRO_DATA_X_LSB_VALUEX_REG,
1319:Core/Src/bno055.c ****                                                       data_u8,
1320:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1321:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 2276              		.loc 1 1321 13 is_stmt 1 view .LVU643
1322:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_X_LSB_VALUEX);
1323:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 2277              		.loc 1 1323 13 view .LVU644
1324:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_X_MSB_VALUEX);
1325:Core/Src/bno055.c ****             *gyro_x_s16 =
 2278              		.loc 1 1325 13 view .LVU645
1326:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2279              		.loc 1 1326 31 is_stmt 0 view .LVU646
 2280 002e 9DF90520 		ldrsb	r2, [sp, #5]
1327:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 2281              		.loc 1 1327 31 view .LVU647
 2282 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1326:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2283              		.loc 1 1326 17 view .LVU648
 2284 0036 43EA0223 		orr	r3, r3, r2, lsl #8
ARM GAS  /tmp/ccOloYeZ.s 			page 67


1325:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2285              		.loc 1 1325 25 view .LVU649
 2286 003a 2380     		strh	r3, [r4]	@ movhi
 2287              	.LVL231:
 2288              	.L172:
1328:Core/Src/bno055.c ****         }
1329:Core/Src/bno055.c ****         else
1330:Core/Src/bno055.c ****         {
1331:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1332:Core/Src/bno055.c ****         }
1333:Core/Src/bno055.c ****     }
1334:Core/Src/bno055.c **** 
1335:Core/Src/bno055.c ****     return com_rslt;
1336:Core/Src/bno055.c **** }
 2289              		.loc 1 1336 1 view .LVU650
 2290 003c 03B0     		add	sp, sp, #12
 2291              		.cfi_remember_state
 2292              		.cfi_def_cfa_offset 12
 2293              		@ sp needed
 2294 003e 30BD     		pop	{r4, r5, pc}
 2295              	.LVL232:
 2296              	.L178:
 2297              		.cfi_restore_state
1312:Core/Src/bno055.c ****         }
 2298              		.loc 1 1312 13 is_stmt 1 view .LVU651
1312:Core/Src/bno055.c ****         }
 2299              		.loc 1 1312 23 is_stmt 0 view .LVU652
 2300 0040 0020     		movs	r0, #0
 2301              	.LVL233:
1312:Core/Src/bno055.c ****         }
 2302              		.loc 1 1312 23 view .LVU653
 2303 0042 FFF7FEFF 		bl	bno055_write_page_id
 2304              	.LVL234:
1314:Core/Src/bno055.c ****         {
 2305              		.loc 1 1314 9 is_stmt 1 view .LVU654
1314:Core/Src/bno055.c ****         {
 2306              		.loc 1 1314 12 is_stmt 0 view .LVU655
 2307 0046 0028     		cmp	r0, #0
 2308 0048 E9D0     		beq	.L174
 2309 004a E4E7     		b	.L173
 2310              	.LVL235:
 2311              	.L175:
1303:Core/Src/bno055.c ****     }
 2312              		.loc 1 1303 16 view .LVU656
 2313 004c 6FF07E00 		mvn	r0, #126
 2314              	.LVL236:
1303:Core/Src/bno055.c ****     }
 2315              		.loc 1 1303 16 view .LVU657
 2316 0050 F4E7     		b	.L172
 2317              	.LVL237:
 2318              	.L176:
1331:Core/Src/bno055.c ****         }
 2319              		.loc 1 1331 22 view .LVU658
 2320 0052 4FF0FF30 		mov	r0, #-1
 2321 0056 F1E7     		b	.L172
 2322              	.L180:
 2323              		.align	2
ARM GAS  /tmp/ccOloYeZ.s 			page 68


 2324              	.L179:
 2325 0058 00000000 		.word	p_bno055
 2326              		.cfi_endproc
 2327              	.LFE19:
 2329              		.section	.text.bno055_read_gyro_y,"ax",%progbits
 2330              		.align	1
 2331              		.global	bno055_read_gyro_y
 2332              		.syntax unified
 2333              		.thumb
 2334              		.thumb_func
 2336              	bno055_read_gyro_y:
 2337              	.LVL238:
 2338              	.LFB20:
1337:Core/Src/bno055.c **** 
1338:Core/Src/bno055.c **** /*!
1339:Core/Src/bno055.c ****  *  @brief This API reads gyro data y values
1340:Core/Src/bno055.c ****  *  from register 0x16 and 0x17 it is a two byte data
1341:Core/Src/bno055.c ****  *
1342:Core/Src/bno055.c ****  *
1343:Core/Src/bno055.c ****  *
1344:Core/Src/bno055.c ****  *
1345:Core/Src/bno055.c ****  *  @param gyro_y_s16 : The y raw data
1346:Core/Src/bno055.c ****  *
1347:Core/Src/bno055.c ****  *
1348:Core/Src/bno055.c ****  *
1349:Core/Src/bno055.c ****  *  @return results of bus communication function
1350:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1351:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1352:Core/Src/bno055.c ****  *
1353:Core/Src/bno055.c ****  *
1354:Core/Src/bno055.c ****  */
1355:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_y(s16 *gyro_y_s16)
1356:Core/Src/bno055.c **** {
 2339              		.loc 1 1356 1 is_stmt 1 view -0
 2340              		.cfi_startproc
 2341              		@ args = 0, pretend = 0, frame = 8
 2342              		@ frame_needed = 0, uses_anonymous_args = 0
 2343              		.loc 1 1356 1 is_stmt 0 view .LVU660
 2344 0000 30B5     		push	{r4, r5, lr}
 2345              		.cfi_def_cfa_offset 12
 2346              		.cfi_offset 4, -12
 2347              		.cfi_offset 5, -8
 2348              		.cfi_offset 14, -4
 2349 0002 83B0     		sub	sp, sp, #12
 2350              		.cfi_def_cfa_offset 24
1357:Core/Src/bno055.c ****     /* Variable used to return value of
1358:Core/Src/bno055.c ****      * communication routine*/
1359:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2351              		.loc 1 1359 5 is_stmt 1 view .LVU661
 2352              	.LVL239:
1360:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2353              		.loc 1 1360 5 view .LVU662
 2354              		.loc 1 1360 8 is_stmt 0 view .LVU663
 2355 0004 0023     		movs	r3, #0
 2356 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1361:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2357              		.loc 1 1361 5 is_stmt 1 view .LVU664
ARM GAS  /tmp/ccOloYeZ.s 			page 69


 2358              	.LVL240:
1362:Core/Src/bno055.c **** 
1363:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1364:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2359              		.loc 1 1364 5 view .LVU665
 2360              		.loc 1 1364 18 is_stmt 0 view .LVU666
 2361 000a 134B     		ldr	r3, .L189
 2362 000c 1B68     		ldr	r3, [r3]
 2363              		.loc 1 1364 8 view .LVU667
 2364 000e EBB1     		cbz	r3, .L185
 2365 0010 0446     		mov	r4, r0
1365:Core/Src/bno055.c ****     {
1366:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1367:Core/Src/bno055.c ****     }
1368:Core/Src/bno055.c ****     else
1369:Core/Src/bno055.c ****     {
1370:Core/Src/bno055.c ****         /*condition check for page, chip id is
1371:Core/Src/bno055.c ****          * available in the page zero*/
1372:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2366              		.loc 1 1372 9 is_stmt 1 view .LVU668
 2367              		.loc 1 1372 21 is_stmt 0 view .LVU669
 2368 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2369              		.loc 1 1372 12 view .LVU670
 2370 0014 A3B9     		cbnz	r3, .L188
 2371              	.LVL241:
 2372              	.L183:
1373:Core/Src/bno055.c ****         {
1374:Core/Src/bno055.c ****             /* Write the page zero*/
1375:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1376:Core/Src/bno055.c ****         }
1377:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2373              		.loc 1 1377 53 discriminator 1 view .LVU671
 2374 0016 104B     		ldr	r3, .L189
 2375 0018 1B68     		ldr	r3, [r3]
 2376 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2377              		.loc 1 1377 41 discriminator 1 view .LVU672
 2378 001c CBB9     		cbnz	r3, .L186
 2379              	.L184:
1378:Core/Src/bno055.c ****         {
1379:Core/Src/bno055.c ****             /* Read the value of gyro y */
1380:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2380              		.loc 1 1380 13 is_stmt 1 view .LVU673
 2381              		.loc 1 1380 32 is_stmt 0 view .LVU674
 2382 001e 0E4B     		ldr	r3, .L189
 2383 0020 1868     		ldr	r0, [r3]
 2384 0022 0569     		ldr	r5, [r0, #16]
 2385              		.loc 1 1380 24 view .LVU675
 2386 0024 0223     		movs	r3, #2
 2387 0026 01AA     		add	r2, sp, #4
 2388 0028 1621     		movs	r1, #22
 2389 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2390 002c A847     		blx	r5
 2391              	.LVL242:
1381:Core/Src/bno055.c ****                                                       BNO055_GYRO_DATA_Y_LSB_VALUEY_REG,
1382:Core/Src/bno055.c ****                                                       data_u8,
1383:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1384:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
ARM GAS  /tmp/ccOloYeZ.s 			page 70


 2392              		.loc 1 1384 13 is_stmt 1 view .LVU676
1385:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_Y_LSB_VALUEY);
1386:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 2393              		.loc 1 1386 13 view .LVU677
1387:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_Y_MSB_VALUEY);
1388:Core/Src/bno055.c ****             *gyro_y_s16 =
 2394              		.loc 1 1388 13 view .LVU678
1389:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2395              		.loc 1 1389 31 is_stmt 0 view .LVU679
 2396 002e 9DF90520 		ldrsb	r2, [sp, #5]
1390:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 2397              		.loc 1 1390 31 view .LVU680
 2398 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1389:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2399              		.loc 1 1389 17 view .LVU681
 2400 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1388:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2401              		.loc 1 1388 25 view .LVU682
 2402 003a 2380     		strh	r3, [r4]	@ movhi
 2403              	.LVL243:
 2404              	.L182:
1391:Core/Src/bno055.c ****         }
1392:Core/Src/bno055.c ****         else
1393:Core/Src/bno055.c ****         {
1394:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1395:Core/Src/bno055.c ****         }
1396:Core/Src/bno055.c ****     }
1397:Core/Src/bno055.c **** 
1398:Core/Src/bno055.c ****     return com_rslt;
1399:Core/Src/bno055.c **** }
 2405              		.loc 1 1399 1 view .LVU683
 2406 003c 03B0     		add	sp, sp, #12
 2407              		.cfi_remember_state
 2408              		.cfi_def_cfa_offset 12
 2409              		@ sp needed
 2410 003e 30BD     		pop	{r4, r5, pc}
 2411              	.LVL244:
 2412              	.L188:
 2413              		.cfi_restore_state
1375:Core/Src/bno055.c ****         }
 2414              		.loc 1 1375 13 is_stmt 1 view .LVU684
1375:Core/Src/bno055.c ****         }
 2415              		.loc 1 1375 23 is_stmt 0 view .LVU685
 2416 0040 0020     		movs	r0, #0
 2417              	.LVL245:
1375:Core/Src/bno055.c ****         }
 2418              		.loc 1 1375 23 view .LVU686
 2419 0042 FFF7FEFF 		bl	bno055_write_page_id
 2420              	.LVL246:
1377:Core/Src/bno055.c ****         {
 2421              		.loc 1 1377 9 is_stmt 1 view .LVU687
1377:Core/Src/bno055.c ****         {
 2422              		.loc 1 1377 12 is_stmt 0 view .LVU688
 2423 0046 0028     		cmp	r0, #0
 2424 0048 E9D0     		beq	.L184
 2425 004a E4E7     		b	.L183
 2426              	.LVL247:
ARM GAS  /tmp/ccOloYeZ.s 			page 71


 2427              	.L185:
1366:Core/Src/bno055.c ****     }
 2428              		.loc 1 1366 16 view .LVU689
 2429 004c 6FF07E00 		mvn	r0, #126
 2430              	.LVL248:
1366:Core/Src/bno055.c ****     }
 2431              		.loc 1 1366 16 view .LVU690
 2432 0050 F4E7     		b	.L182
 2433              	.LVL249:
 2434              	.L186:
1394:Core/Src/bno055.c ****         }
 2435              		.loc 1 1394 22 view .LVU691
 2436 0052 4FF0FF30 		mov	r0, #-1
 2437 0056 F1E7     		b	.L182
 2438              	.L190:
 2439              		.align	2
 2440              	.L189:
 2441 0058 00000000 		.word	p_bno055
 2442              		.cfi_endproc
 2443              	.LFE20:
 2445              		.section	.text.bno055_read_gyro_z,"ax",%progbits
 2446              		.align	1
 2447              		.global	bno055_read_gyro_z
 2448              		.syntax unified
 2449              		.thumb
 2450              		.thumb_func
 2452              	bno055_read_gyro_z:
 2453              	.LVL250:
 2454              	.LFB21:
1400:Core/Src/bno055.c **** 
1401:Core/Src/bno055.c **** /*!
1402:Core/Src/bno055.c ****  *  @brief This API reads gyro data z values
1403:Core/Src/bno055.c ****  *  from register 0x18 and 0x19 it is a two byte data
1404:Core/Src/bno055.c ****  *
1405:Core/Src/bno055.c ****  *  @param gyro_z_s16 : The z raw data
1406:Core/Src/bno055.c ****  *
1407:Core/Src/bno055.c ****  *  @return results of bus communication function
1408:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1409:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1410:Core/Src/bno055.c ****  *
1411:Core/Src/bno055.c ****  *
1412:Core/Src/bno055.c ****  */
1413:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_z(s16 *gyro_z_s16)
1414:Core/Src/bno055.c **** {
 2455              		.loc 1 1414 1 is_stmt 1 view -0
 2456              		.cfi_startproc
 2457              		@ args = 0, pretend = 0, frame = 8
 2458              		@ frame_needed = 0, uses_anonymous_args = 0
 2459              		.loc 1 1414 1 is_stmt 0 view .LVU693
 2460 0000 30B5     		push	{r4, r5, lr}
 2461              		.cfi_def_cfa_offset 12
 2462              		.cfi_offset 4, -12
 2463              		.cfi_offset 5, -8
 2464              		.cfi_offset 14, -4
 2465 0002 83B0     		sub	sp, sp, #12
 2466              		.cfi_def_cfa_offset 24
1415:Core/Src/bno055.c ****     /* Variable used to return value of
ARM GAS  /tmp/ccOloYeZ.s 			page 72


1416:Core/Src/bno055.c ****      * communication routine*/
1417:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2467              		.loc 1 1417 5 is_stmt 1 view .LVU694
 2468              	.LVL251:
1418:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2469              		.loc 1 1418 5 view .LVU695
 2470              		.loc 1 1418 8 is_stmt 0 view .LVU696
 2471 0004 0023     		movs	r3, #0
 2472 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1419:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2473              		.loc 1 1419 5 is_stmt 1 view .LVU697
 2474              	.LVL252:
1420:Core/Src/bno055.c **** 
1421:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1422:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2475              		.loc 1 1422 5 view .LVU698
 2476              		.loc 1 1422 18 is_stmt 0 view .LVU699
 2477 000a 134B     		ldr	r3, .L199
 2478 000c 1B68     		ldr	r3, [r3]
 2479              		.loc 1 1422 8 view .LVU700
 2480 000e EBB1     		cbz	r3, .L195
 2481 0010 0446     		mov	r4, r0
1423:Core/Src/bno055.c ****     {
1424:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1425:Core/Src/bno055.c ****     }
1426:Core/Src/bno055.c ****     else
1427:Core/Src/bno055.c ****     {
1428:Core/Src/bno055.c ****         /*condition check for page, chip id is
1429:Core/Src/bno055.c ****          * available in the page zero*/
1430:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2482              		.loc 1 1430 9 is_stmt 1 view .LVU701
 2483              		.loc 1 1430 21 is_stmt 0 view .LVU702
 2484 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2485              		.loc 1 1430 12 view .LVU703
 2486 0014 A3B9     		cbnz	r3, .L198
 2487              	.LVL253:
 2488              	.L193:
1431:Core/Src/bno055.c ****         {
1432:Core/Src/bno055.c ****             /* Write the page zero*/
1433:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1434:Core/Src/bno055.c ****         }
1435:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2489              		.loc 1 1435 53 discriminator 1 view .LVU704
 2490 0016 104B     		ldr	r3, .L199
 2491 0018 1B68     		ldr	r3, [r3]
 2492 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2493              		.loc 1 1435 41 discriminator 1 view .LVU705
 2494 001c CBB9     		cbnz	r3, .L196
 2495              	.L194:
1436:Core/Src/bno055.c ****         {
1437:Core/Src/bno055.c ****             /* Read the gyro z 16 bit value*/
1438:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2496              		.loc 1 1438 13 is_stmt 1 view .LVU706
 2497              		.loc 1 1438 32 is_stmt 0 view .LVU707
 2498 001e 0E4B     		ldr	r3, .L199
 2499 0020 1868     		ldr	r0, [r3]
 2500 0022 0569     		ldr	r5, [r0, #16]
ARM GAS  /tmp/ccOloYeZ.s 			page 73


 2501              		.loc 1 1438 24 view .LVU708
 2502 0024 0223     		movs	r3, #2
 2503 0026 01AA     		add	r2, sp, #4
 2504 0028 1821     		movs	r1, #24
 2505 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2506 002c A847     		blx	r5
 2507              	.LVL254:
1439:Core/Src/bno055.c ****                                                       BNO055_GYRO_DATA_Z_LSB_VALUEZ_REG,
1440:Core/Src/bno055.c ****                                                       data_u8,
1441:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1442:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 2508              		.loc 1 1442 13 is_stmt 1 view .LVU709
1443:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_Z_LSB_VALUEZ);
1444:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 2509              		.loc 1 1444 13 view .LVU710
1445:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_Z_MSB_VALUEZ);
1446:Core/Src/bno055.c ****             *gyro_z_s16 =
 2510              		.loc 1 1446 13 view .LVU711
1447:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2511              		.loc 1 1447 31 is_stmt 0 view .LVU712
 2512 002e 9DF90520 		ldrsb	r2, [sp, #5]
1448:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 2513              		.loc 1 1448 31 view .LVU713
 2514 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1447:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2515              		.loc 1 1447 17 view .LVU714
 2516 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1446:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2517              		.loc 1 1446 25 view .LVU715
 2518 003a 2380     		strh	r3, [r4]	@ movhi
 2519              	.LVL255:
 2520              	.L192:
1449:Core/Src/bno055.c ****         }
1450:Core/Src/bno055.c ****         else
1451:Core/Src/bno055.c ****         {
1452:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1453:Core/Src/bno055.c ****         }
1454:Core/Src/bno055.c ****     }
1455:Core/Src/bno055.c **** 
1456:Core/Src/bno055.c ****     return com_rslt;
1457:Core/Src/bno055.c **** }
 2521              		.loc 1 1457 1 view .LVU716
 2522 003c 03B0     		add	sp, sp, #12
 2523              		.cfi_remember_state
 2524              		.cfi_def_cfa_offset 12
 2525              		@ sp needed
 2526 003e 30BD     		pop	{r4, r5, pc}
 2527              	.LVL256:
 2528              	.L198:
 2529              		.cfi_restore_state
1433:Core/Src/bno055.c ****         }
 2530              		.loc 1 1433 13 is_stmt 1 view .LVU717
1433:Core/Src/bno055.c ****         }
 2531              		.loc 1 1433 23 is_stmt 0 view .LVU718
 2532 0040 0020     		movs	r0, #0
 2533              	.LVL257:
1433:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 74


 2534              		.loc 1 1433 23 view .LVU719
 2535 0042 FFF7FEFF 		bl	bno055_write_page_id
 2536              	.LVL258:
1435:Core/Src/bno055.c ****         {
 2537              		.loc 1 1435 9 is_stmt 1 view .LVU720
1435:Core/Src/bno055.c ****         {
 2538              		.loc 1 1435 12 is_stmt 0 view .LVU721
 2539 0046 0028     		cmp	r0, #0
 2540 0048 E9D0     		beq	.L194
 2541 004a E4E7     		b	.L193
 2542              	.LVL259:
 2543              	.L195:
1424:Core/Src/bno055.c ****     }
 2544              		.loc 1 1424 16 view .LVU722
 2545 004c 6FF07E00 		mvn	r0, #126
 2546              	.LVL260:
1424:Core/Src/bno055.c ****     }
 2547              		.loc 1 1424 16 view .LVU723
 2548 0050 F4E7     		b	.L192
 2549              	.LVL261:
 2550              	.L196:
1452:Core/Src/bno055.c ****         }
 2551              		.loc 1 1452 22 view .LVU724
 2552 0052 4FF0FF30 		mov	r0, #-1
 2553 0056 F1E7     		b	.L192
 2554              	.L200:
 2555              		.align	2
 2556              	.L199:
 2557 0058 00000000 		.word	p_bno055
 2558              		.cfi_endproc
 2559              	.LFE21:
 2561              		.section	.text.bno055_read_gyro_xyz,"ax",%progbits
 2562              		.align	1
 2563              		.global	bno055_read_gyro_xyz
 2564              		.syntax unified
 2565              		.thumb
 2566              		.thumb_func
 2568              	bno055_read_gyro_xyz:
 2569              	.LVL262:
 2570              	.LFB22:
1458:Core/Src/bno055.c **** 
1459:Core/Src/bno055.c **** /*!
1460:Core/Src/bno055.c ****  *  @brief This API reads gyro data xyz values
1461:Core/Src/bno055.c ****  *  from register 0x14 to 0x19 it is a six byte data
1462:Core/Src/bno055.c ****  *
1463:Core/Src/bno055.c ****  *
1464:Core/Src/bno055.c ****  *  @param gyro : The value of gyro xyz data's
1465:Core/Src/bno055.c ****  *
1466:Core/Src/bno055.c ****  *  Parameter |    result
1467:Core/Src/bno055.c ****  *  --------- | -----------------
1468:Core/Src/bno055.c ****  *   x        | The gyro x data
1469:Core/Src/bno055.c ****  *   y        | The gyro y data
1470:Core/Src/bno055.c ****  *   z        | The gyro z data
1471:Core/Src/bno055.c ****  *
1472:Core/Src/bno055.c ****  *
1473:Core/Src/bno055.c ****  *
1474:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/ccOloYeZ.s 			page 75


1475:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1476:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1477:Core/Src/bno055.c ****  *
1478:Core/Src/bno055.c ****  */
1479:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_xyz(struct bno055_gyro_t *gyro)
1480:Core/Src/bno055.c **** {
 2571              		.loc 1 1480 1 is_stmt 1 view -0
 2572              		.cfi_startproc
 2573              		@ args = 0, pretend = 0, frame = 8
 2574              		@ frame_needed = 0, uses_anonymous_args = 0
 2575              		.loc 1 1480 1 is_stmt 0 view .LVU726
 2576 0000 30B5     		push	{r4, r5, lr}
 2577              		.cfi_def_cfa_offset 12
 2578              		.cfi_offset 4, -12
 2579              		.cfi_offset 5, -8
 2580              		.cfi_offset 14, -4
 2581 0002 83B0     		sub	sp, sp, #12
 2582              		.cfi_def_cfa_offset 24
 2583 0004 0446     		mov	r4, r0
1481:Core/Src/bno055.c ****     /* Variable used to return value of
1482:Core/Src/bno055.c ****      * communication routine*/
1483:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2584              		.loc 1 1483 5 is_stmt 1 view .LVU727
 2585              	.LVL263:
1484:Core/Src/bno055.c **** 
1485:Core/Src/bno055.c ****     /* Array holding the gyro xyz value
1486:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
1487:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
1488:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
1489:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
1490:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
1491:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
1492:Core/Src/bno055.c ****      */
1493:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_XYZ_DATA_SIZE] = {
 2586              		.loc 1 1493 5 view .LVU728
 2587              		.loc 1 1493 8 is_stmt 0 view .LVU729
 2588 0006 1D4B     		ldr	r3, .L209
 2589 0008 93E80300 		ldm	r3, {r0, r1}
 2590              	.LVL264:
 2591              		.loc 1 1493 8 view .LVU730
 2592 000c 0090     		str	r0, [sp]
 2593 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
1494:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
1495:Core/Src/bno055.c ****     };
1496:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2594              		.loc 1 1496 5 is_stmt 1 view .LVU731
 2595              	.LVL265:
1497:Core/Src/bno055.c **** 
1498:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1499:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2596              		.loc 1 1499 5 view .LVU732
 2597              		.loc 1 1499 18 is_stmt 0 view .LVU733
 2598 0012 1B4B     		ldr	r3, .L209+4
 2599 0014 1B68     		ldr	r3, [r3]
 2600              		.loc 1 1499 8 view .LVU734
 2601 0016 53B3     		cbz	r3, .L205
1500:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 76


1501:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1502:Core/Src/bno055.c ****     }
1503:Core/Src/bno055.c ****     else
1504:Core/Src/bno055.c ****     {
1505:Core/Src/bno055.c ****         /*condition check for page, chip id is
1506:Core/Src/bno055.c ****          * available in the page zero*/
1507:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2602              		.loc 1 1507 9 is_stmt 1 view .LVU735
 2603              		.loc 1 1507 21 is_stmt 0 view .LVU736
 2604 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2605              		.loc 1 1507 12 view .LVU737
 2606 001a 13BB     		cbnz	r3, .L208
 2607              	.LVL266:
 2608              	.L203:
1508:Core/Src/bno055.c ****         {
1509:Core/Src/bno055.c ****             /* Write the page zero*/
1510:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1511:Core/Src/bno055.c ****         }
1512:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2609              		.loc 1 1512 53 discriminator 1 view .LVU738
 2610 001c 184B     		ldr	r3, .L209+4
 2611 001e 1B68     		ldr	r3, [r3]
 2612 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2613              		.loc 1 1512 41 discriminator 1 view .LVU739
 2614 0022 3BBB     		cbnz	r3, .L206
 2615              	.L204:
1513:Core/Src/bno055.c ****         {
1514:Core/Src/bno055.c ****             /* Read the six bytes data of gyro xyz*/
1515:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2616              		.loc 1 1515 13 is_stmt 1 view .LVU740
 2617              		.loc 1 1515 32 is_stmt 0 view .LVU741
 2618 0024 164B     		ldr	r3, .L209+4
 2619 0026 1868     		ldr	r0, [r3]
 2620 0028 0569     		ldr	r5, [r0, #16]
 2621              		.loc 1 1515 24 view .LVU742
 2622 002a 0623     		movs	r3, #6
 2623 002c 6A46     		mov	r2, sp
 2624 002e 1421     		movs	r1, #20
 2625 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2626 0032 A847     		blx	r5
 2627              	.LVL267:
1516:Core/Src/bno055.c ****                                                       BNO055_GYRO_DATA_X_LSB_VALUEX_REG,
1517:Core/Src/bno055.c ****                                                       data_u8,
1518:Core/Src/bno055.c ****                                                       BNO055_GYRO_XYZ_DATA_SIZE);
1519:Core/Src/bno055.c **** 
1520:Core/Src/bno055.c ****             /* Data x*/
1521:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2628              		.loc 1 1521 13 is_stmt 1 view .LVU743
1522:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_X_LSB_VALU
1523:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2629              		.loc 1 1523 13 view .LVU744
1524:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_X_MSB_VALU
1525:Core/Src/bno055.c ****             gyro->x =
 2630              		.loc 1 1525 13 view .LVU745
1526:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2631              		.loc 1 1526 31 is_stmt 0 view .LVU746
 2632 0034 9DF90120 		ldrsb	r2, [sp, #1]
ARM GAS  /tmp/ccOloYeZ.s 			page 77


1527:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 2633              		.loc 1 1527 31 view .LVU747
 2634 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
1526:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2635              		.loc 1 1526 17 view .LVU748
 2636 003c 43EA0223 		orr	r3, r3, r2, lsl #8
1525:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2637              		.loc 1 1525 21 view .LVU749
 2638 0040 2380     		strh	r3, [r4]	@ movhi
1528:Core/Src/bno055.c **** 
1529:Core/Src/bno055.c ****             /* Data y*/
1530:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2639              		.loc 1 1530 13 is_stmt 1 view .LVU750
1531:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_Y_LSB_VALU
1532:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2640              		.loc 1 1532 13 view .LVU751
1533:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_Y_MSB_VALU
1534:Core/Src/bno055.c ****             gyro->y =
 2641              		.loc 1 1534 13 view .LVU752
1535:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2642              		.loc 1 1535 31 is_stmt 0 view .LVU753
 2643 0042 9DF90320 		ldrsb	r2, [sp, #3]
1536:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 2644              		.loc 1 1536 31 view .LVU754
 2645 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
1535:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2646              		.loc 1 1535 17 view .LVU755
 2647 004a 43EA0223 		orr	r3, r3, r2, lsl #8
1534:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2648              		.loc 1 1534 21 view .LVU756
 2649 004e 6380     		strh	r3, [r4, #2]	@ movhi
1537:Core/Src/bno055.c **** 
1538:Core/Src/bno055.c ****             /* Data z*/
1539:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2650              		.loc 1 1539 13 is_stmt 1 view .LVU757
1540:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_Z_LSB_VALU
1541:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2651              		.loc 1 1541 13 view .LVU758
1542:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_Z_MSB_VALU
1543:Core/Src/bno055.c ****             gyro->z =
 2652              		.loc 1 1543 13 view .LVU759
1544:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2653              		.loc 1 1544 31 is_stmt 0 view .LVU760
 2654 0050 9DF90520 		ldrsb	r2, [sp, #5]
1545:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 2655              		.loc 1 1545 31 view .LVU761
 2656 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1544:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2657              		.loc 1 1544 17 view .LVU762
 2658 0058 43EA0223 		orr	r3, r3, r2, lsl #8
1543:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2659              		.loc 1 1543 21 view .LVU763
 2660 005c A380     		strh	r3, [r4, #4]	@ movhi
 2661              	.LVL268:
 2662              	.L202:
1546:Core/Src/bno055.c ****         }
1547:Core/Src/bno055.c ****         else
ARM GAS  /tmp/ccOloYeZ.s 			page 78


1548:Core/Src/bno055.c ****         {
1549:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1550:Core/Src/bno055.c ****         }
1551:Core/Src/bno055.c ****     }
1552:Core/Src/bno055.c **** 
1553:Core/Src/bno055.c ****     return com_rslt;
1554:Core/Src/bno055.c **** }
 2663              		.loc 1 1554 1 view .LVU764
 2664 005e 03B0     		add	sp, sp, #12
 2665              		.cfi_remember_state
 2666              		.cfi_def_cfa_offset 12
 2667              		@ sp needed
 2668 0060 30BD     		pop	{r4, r5, pc}
 2669              	.LVL269:
 2670              	.L208:
 2671              		.cfi_restore_state
1510:Core/Src/bno055.c ****         }
 2672              		.loc 1 1510 13 is_stmt 1 view .LVU765
1510:Core/Src/bno055.c ****         }
 2673              		.loc 1 1510 23 is_stmt 0 view .LVU766
 2674 0062 0020     		movs	r0, #0
 2675 0064 FFF7FEFF 		bl	bno055_write_page_id
 2676              	.LVL270:
1512:Core/Src/bno055.c ****         {
 2677              		.loc 1 1512 9 is_stmt 1 view .LVU767
1512:Core/Src/bno055.c ****         {
 2678              		.loc 1 1512 12 is_stmt 0 view .LVU768
 2679 0068 0028     		cmp	r0, #0
 2680 006a DBD0     		beq	.L204
 2681 006c D6E7     		b	.L203
 2682              	.LVL271:
 2683              	.L205:
1501:Core/Src/bno055.c ****     }
 2684              		.loc 1 1501 16 view .LVU769
 2685 006e 6FF07E00 		mvn	r0, #126
 2686 0072 F4E7     		b	.L202
 2687              	.LVL272:
 2688              	.L206:
1549:Core/Src/bno055.c ****         }
 2689              		.loc 1 1549 22 view .LVU770
 2690 0074 4FF0FF30 		mov	r0, #-1
 2691 0078 F1E7     		b	.L202
 2692              	.L210:
 2693 007a 00BF     		.align	2
 2694              	.L209:
 2695 007c 00000000 		.word	.LANCHOR0
 2696 0080 00000000 		.word	p_bno055
 2697              		.cfi_endproc
 2698              	.LFE22:
 2700              		.section	.text.bno055_read_euler_h,"ax",%progbits
 2701              		.align	1
 2702              		.global	bno055_read_euler_h
 2703              		.syntax unified
 2704              		.thumb
 2705              		.thumb_func
 2707              	bno055_read_euler_h:
 2708              	.LVL273:
ARM GAS  /tmp/ccOloYeZ.s 			page 79


 2709              	.LFB23:
1555:Core/Src/bno055.c **** 
1556:Core/Src/bno055.c **** /*!
1557:Core/Src/bno055.c ****  *  @brief This API reads gyro data z values
1558:Core/Src/bno055.c ****  *  from register 0x1A and 0x1B it is a two byte data
1559:Core/Src/bno055.c ****  *
1560:Core/Src/bno055.c ****  *  @param euler_h_s16 : The raw h data
1561:Core/Src/bno055.c ****  *
1562:Core/Src/bno055.c ****  *  @return results of bus communication function
1563:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1564:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1565:Core/Src/bno055.c ****  *
1566:Core/Src/bno055.c ****  */
1567:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_euler_h(s16 *euler_h_s16)
1568:Core/Src/bno055.c **** {
 2710              		.loc 1 1568 1 is_stmt 1 view -0
 2711              		.cfi_startproc
 2712              		@ args = 0, pretend = 0, frame = 8
 2713              		@ frame_needed = 0, uses_anonymous_args = 0
 2714              		.loc 1 1568 1 is_stmt 0 view .LVU772
 2715 0000 30B5     		push	{r4, r5, lr}
 2716              		.cfi_def_cfa_offset 12
 2717              		.cfi_offset 4, -12
 2718              		.cfi_offset 5, -8
 2719              		.cfi_offset 14, -4
 2720 0002 83B0     		sub	sp, sp, #12
 2721              		.cfi_def_cfa_offset 24
1569:Core/Src/bno055.c ****     /* Variable used to return value of
1570:Core/Src/bno055.c ****      * communication routine*/
1571:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2722              		.loc 1 1571 5 is_stmt 1 view .LVU773
 2723              	.LVL274:
1572:Core/Src/bno055.c **** 
1573:Core/Src/bno055.c ****     /* Array holding the Euler h value
1574:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_LSB] - h->LSB
1575:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_MSB] - h->MSB
1576:Core/Src/bno055.c ****      */
1577:Core/Src/bno055.c ****     u8 data_u8[BNO055_EULER_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2724              		.loc 1 1577 5 view .LVU774
 2725              		.loc 1 1577 8 is_stmt 0 view .LVU775
 2726 0004 0023     		movs	r3, #0
 2727 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1578:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2728              		.loc 1 1578 5 is_stmt 1 view .LVU776
 2729              	.LVL275:
1579:Core/Src/bno055.c **** 
1580:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1581:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2730              		.loc 1 1581 5 view .LVU777
 2731              		.loc 1 1581 18 is_stmt 0 view .LVU778
 2732 000a 134B     		ldr	r3, .L219
 2733 000c 1B68     		ldr	r3, [r3]
 2734              		.loc 1 1581 8 view .LVU779
 2735 000e EBB1     		cbz	r3, .L215
 2736 0010 0446     		mov	r4, r0
1582:Core/Src/bno055.c ****     {
1583:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
ARM GAS  /tmp/ccOloYeZ.s 			page 80


1584:Core/Src/bno055.c ****     }
1585:Core/Src/bno055.c ****     else
1586:Core/Src/bno055.c ****     {
1587:Core/Src/bno055.c ****         /*condition check for page, chip id is
1588:Core/Src/bno055.c ****          * available in the page zero*/
1589:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2737              		.loc 1 1589 9 is_stmt 1 view .LVU780
 2738              		.loc 1 1589 21 is_stmt 0 view .LVU781
 2739 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2740              		.loc 1 1589 12 view .LVU782
 2741 0014 A3B9     		cbnz	r3, .L218
 2742              	.LVL276:
 2743              	.L213:
1590:Core/Src/bno055.c ****         {
1591:Core/Src/bno055.c ****             /* Write the page zero*/
1592:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1593:Core/Src/bno055.c ****         }
1594:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2744              		.loc 1 1594 53 discriminator 1 view .LVU783
 2745 0016 104B     		ldr	r3, .L219
 2746 0018 1B68     		ldr	r3, [r3]
 2747 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2748              		.loc 1 1594 41 discriminator 1 view .LVU784
 2749 001c CBB9     		cbnz	r3, .L216
 2750              	.L214:
1595:Core/Src/bno055.c ****         {
1596:Core/Src/bno055.c ****             /* Read the eulre heading data*/
1597:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2751              		.loc 1 1597 13 is_stmt 1 view .LVU785
 2752              		.loc 1 1597 32 is_stmt 0 view .LVU786
 2753 001e 0E4B     		ldr	r3, .L219
 2754 0020 1868     		ldr	r0, [r3]
 2755 0022 0569     		ldr	r5, [r0, #16]
 2756              		.loc 1 1597 24 view .LVU787
 2757 0024 0223     		movs	r3, #2
 2758 0026 01AA     		add	r2, sp, #4
 2759 0028 1A21     		movs	r1, #26
 2760 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2761 002c A847     		blx	r5
 2762              	.LVL277:
1598:Core/Src/bno055.c ****                                                       BNO055_EULER_H_LSB_VALUEH_REG,
1599:Core/Src/bno055.c ****                                                       data_u8,
1600:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1601:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2763              		.loc 1 1601 13 is_stmt 1 view .LVU788
1602:Core/Src/bno055.c ****                                                                         BNO055_EULER_H_LSB_VALUEH);
1603:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2764              		.loc 1 1603 13 view .LVU789
1604:Core/Src/bno055.c ****                                                                         BNO055_EULER_H_MSB_VALUEH);
1605:Core/Src/bno055.c ****             *euler_h_s16 =
 2765              		.loc 1 1605 13 view .LVU790
1606:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2766              		.loc 1 1606 31 is_stmt 0 view .LVU791
 2767 002e 9DF90520 		ldrsb	r2, [sp, #5]
1607:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_LSB]));
 2768              		.loc 1 1607 31 view .LVU792
 2769 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccOloYeZ.s 			page 81


1606:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2770              		.loc 1 1606 17 view .LVU793
 2771 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1605:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2772              		.loc 1 1605 26 view .LVU794
 2773 003a 2380     		strh	r3, [r4]	@ movhi
 2774              	.LVL278:
 2775              	.L212:
1608:Core/Src/bno055.c ****         }
1609:Core/Src/bno055.c ****         else
1610:Core/Src/bno055.c ****         {
1611:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1612:Core/Src/bno055.c ****         }
1613:Core/Src/bno055.c ****     }
1614:Core/Src/bno055.c **** 
1615:Core/Src/bno055.c ****     return com_rslt;
1616:Core/Src/bno055.c **** }
 2776              		.loc 1 1616 1 view .LVU795
 2777 003c 03B0     		add	sp, sp, #12
 2778              		.cfi_remember_state
 2779              		.cfi_def_cfa_offset 12
 2780              		@ sp needed
 2781 003e 30BD     		pop	{r4, r5, pc}
 2782              	.LVL279:
 2783              	.L218:
 2784              		.cfi_restore_state
1592:Core/Src/bno055.c ****         }
 2785              		.loc 1 1592 13 is_stmt 1 view .LVU796
1592:Core/Src/bno055.c ****         }
 2786              		.loc 1 1592 23 is_stmt 0 view .LVU797
 2787 0040 0020     		movs	r0, #0
 2788              	.LVL280:
1592:Core/Src/bno055.c ****         }
 2789              		.loc 1 1592 23 view .LVU798
 2790 0042 FFF7FEFF 		bl	bno055_write_page_id
 2791              	.LVL281:
1594:Core/Src/bno055.c ****         {
 2792              		.loc 1 1594 9 is_stmt 1 view .LVU799
1594:Core/Src/bno055.c ****         {
 2793              		.loc 1 1594 12 is_stmt 0 view .LVU800
 2794 0046 0028     		cmp	r0, #0
 2795 0048 E9D0     		beq	.L214
 2796 004a E4E7     		b	.L213
 2797              	.LVL282:
 2798              	.L215:
1583:Core/Src/bno055.c ****     }
 2799              		.loc 1 1583 16 view .LVU801
 2800 004c 6FF07E00 		mvn	r0, #126
 2801              	.LVL283:
1583:Core/Src/bno055.c ****     }
 2802              		.loc 1 1583 16 view .LVU802
 2803 0050 F4E7     		b	.L212
 2804              	.LVL284:
 2805              	.L216:
1611:Core/Src/bno055.c ****         }
 2806              		.loc 1 1611 22 view .LVU803
 2807 0052 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccOloYeZ.s 			page 82


 2808 0056 F1E7     		b	.L212
 2809              	.L220:
 2810              		.align	2
 2811              	.L219:
 2812 0058 00000000 		.word	p_bno055
 2813              		.cfi_endproc
 2814              	.LFE23:
 2816              		.section	.text.bno055_read_euler_r,"ax",%progbits
 2817              		.align	1
 2818              		.global	bno055_read_euler_r
 2819              		.syntax unified
 2820              		.thumb
 2821              		.thumb_func
 2823              	bno055_read_euler_r:
 2824              	.LVL285:
 2825              	.LFB24:
1617:Core/Src/bno055.c **** 
1618:Core/Src/bno055.c **** /*!
1619:Core/Src/bno055.c ****  *  @brief This API reads Euler data r values
1620:Core/Src/bno055.c ****  *  from register 0x1C and 0x1D it is a two byte data
1621:Core/Src/bno055.c ****  *
1622:Core/Src/bno055.c ****  *  @param euler_r_s16 : The raw r data
1623:Core/Src/bno055.c ****  *
1624:Core/Src/bno055.c ****  *  @return results of bus communication function
1625:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1626:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1627:Core/Src/bno055.c ****  *
1628:Core/Src/bno055.c ****  */
1629:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_euler_r(s16 *euler_r_s16)
1630:Core/Src/bno055.c **** {
 2826              		.loc 1 1630 1 is_stmt 1 view -0
 2827              		.cfi_startproc
 2828              		@ args = 0, pretend = 0, frame = 8
 2829              		@ frame_needed = 0, uses_anonymous_args = 0
 2830              		.loc 1 1630 1 is_stmt 0 view .LVU805
 2831 0000 30B5     		push	{r4, r5, lr}
 2832              		.cfi_def_cfa_offset 12
 2833              		.cfi_offset 4, -12
 2834              		.cfi_offset 5, -8
 2835              		.cfi_offset 14, -4
 2836 0002 83B0     		sub	sp, sp, #12
 2837              		.cfi_def_cfa_offset 24
1631:Core/Src/bno055.c ****     /* Variable used to return value of
1632:Core/Src/bno055.c ****      * communication routine*/
1633:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2838              		.loc 1 1633 5 is_stmt 1 view .LVU806
 2839              	.LVL286:
1634:Core/Src/bno055.c **** 
1635:Core/Src/bno055.c ****     /* Array holding the Euler r value
1636:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_LSB] - r->LSB
1637:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_MSB] - r->MSB
1638:Core/Src/bno055.c ****      */
1639:Core/Src/bno055.c ****     u8 data_u8[BNO055_EULER_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2840              		.loc 1 1639 5 view .LVU807
 2841              		.loc 1 1639 8 is_stmt 0 view .LVU808
 2842 0004 0023     		movs	r3, #0
 2843 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
ARM GAS  /tmp/ccOloYeZ.s 			page 83


1640:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2844              		.loc 1 1640 5 is_stmt 1 view .LVU809
 2845              	.LVL287:
1641:Core/Src/bno055.c **** 
1642:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1643:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2846              		.loc 1 1643 5 view .LVU810
 2847              		.loc 1 1643 18 is_stmt 0 view .LVU811
 2848 000a 134B     		ldr	r3, .L229
 2849 000c 1B68     		ldr	r3, [r3]
 2850              		.loc 1 1643 8 view .LVU812
 2851 000e EBB1     		cbz	r3, .L225
 2852 0010 0446     		mov	r4, r0
1644:Core/Src/bno055.c ****     {
1645:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1646:Core/Src/bno055.c ****     }
1647:Core/Src/bno055.c ****     else
1648:Core/Src/bno055.c ****     {
1649:Core/Src/bno055.c ****         /*condition check for page, chip id is
1650:Core/Src/bno055.c ****          * available in the page zero*/
1651:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2853              		.loc 1 1651 9 is_stmt 1 view .LVU813
 2854              		.loc 1 1651 21 is_stmt 0 view .LVU814
 2855 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2856              		.loc 1 1651 12 view .LVU815
 2857 0014 A3B9     		cbnz	r3, .L228
 2858              	.LVL288:
 2859              	.L223:
1652:Core/Src/bno055.c ****         {
1653:Core/Src/bno055.c ****             /* Write the page zero*/
1654:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1655:Core/Src/bno055.c ****         }
1656:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2860              		.loc 1 1656 53 discriminator 1 view .LVU816
 2861 0016 104B     		ldr	r3, .L229
 2862 0018 1B68     		ldr	r3, [r3]
 2863 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2864              		.loc 1 1656 41 discriminator 1 view .LVU817
 2865 001c CBB9     		cbnz	r3, .L226
 2866              	.L224:
1657:Core/Src/bno055.c ****         {
1658:Core/Src/bno055.c ****             /* Read the Euler roll data*/
1659:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2867              		.loc 1 1659 13 is_stmt 1 view .LVU818
 2868              		.loc 1 1659 32 is_stmt 0 view .LVU819
 2869 001e 0E4B     		ldr	r3, .L229
 2870 0020 1868     		ldr	r0, [r3]
 2871 0022 0569     		ldr	r5, [r0, #16]
 2872              		.loc 1 1659 24 view .LVU820
 2873 0024 0223     		movs	r3, #2
 2874 0026 01AA     		add	r2, sp, #4
 2875 0028 1C21     		movs	r1, #28
 2876 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2877 002c A847     		blx	r5
 2878              	.LVL289:
1660:Core/Src/bno055.c ****                                                       BNO055_EULER_R_LSB_VALUER_REG,
1661:Core/Src/bno055.c ****                                                       data_u8,
ARM GAS  /tmp/ccOloYeZ.s 			page 84


1662:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1663:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2879              		.loc 1 1663 13 is_stmt 1 view .LVU821
1664:Core/Src/bno055.c ****                                                                         BNO055_EULER_R_LSB_VALUER);
1665:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2880              		.loc 1 1665 13 view .LVU822
1666:Core/Src/bno055.c ****                                                                         BNO055_EULER_R_MSB_VALUER);
1667:Core/Src/bno055.c ****             *euler_r_s16 =
 2881              		.loc 1 1667 13 view .LVU823
1668:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2882              		.loc 1 1668 31 is_stmt 0 view .LVU824
 2883 002e 9DF90520 		ldrsb	r2, [sp, #5]
1669:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_LSB]));
 2884              		.loc 1 1669 31 view .LVU825
 2885 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1668:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2886              		.loc 1 1668 17 view .LVU826
 2887 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1667:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2888              		.loc 1 1667 26 view .LVU827
 2889 003a 2380     		strh	r3, [r4]	@ movhi
 2890              	.LVL290:
 2891              	.L222:
1670:Core/Src/bno055.c ****         }
1671:Core/Src/bno055.c ****         else
1672:Core/Src/bno055.c ****         {
1673:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1674:Core/Src/bno055.c ****         }
1675:Core/Src/bno055.c ****     }
1676:Core/Src/bno055.c **** 
1677:Core/Src/bno055.c ****     return com_rslt;
1678:Core/Src/bno055.c **** }
 2892              		.loc 1 1678 1 view .LVU828
 2893 003c 03B0     		add	sp, sp, #12
 2894              		.cfi_remember_state
 2895              		.cfi_def_cfa_offset 12
 2896              		@ sp needed
 2897 003e 30BD     		pop	{r4, r5, pc}
 2898              	.LVL291:
 2899              	.L228:
 2900              		.cfi_restore_state
1654:Core/Src/bno055.c ****         }
 2901              		.loc 1 1654 13 is_stmt 1 view .LVU829
1654:Core/Src/bno055.c ****         }
 2902              		.loc 1 1654 23 is_stmt 0 view .LVU830
 2903 0040 0020     		movs	r0, #0
 2904              	.LVL292:
1654:Core/Src/bno055.c ****         }
 2905              		.loc 1 1654 23 view .LVU831
 2906 0042 FFF7FEFF 		bl	bno055_write_page_id
 2907              	.LVL293:
1656:Core/Src/bno055.c ****         {
 2908              		.loc 1 1656 9 is_stmt 1 view .LVU832
1656:Core/Src/bno055.c ****         {
 2909              		.loc 1 1656 12 is_stmt 0 view .LVU833
 2910 0046 0028     		cmp	r0, #0
 2911 0048 E9D0     		beq	.L224
ARM GAS  /tmp/ccOloYeZ.s 			page 85


 2912 004a E4E7     		b	.L223
 2913              	.LVL294:
 2914              	.L225:
1645:Core/Src/bno055.c ****     }
 2915              		.loc 1 1645 16 view .LVU834
 2916 004c 6FF07E00 		mvn	r0, #126
 2917              	.LVL295:
1645:Core/Src/bno055.c ****     }
 2918              		.loc 1 1645 16 view .LVU835
 2919 0050 F4E7     		b	.L222
 2920              	.LVL296:
 2921              	.L226:
1673:Core/Src/bno055.c ****         }
 2922              		.loc 1 1673 22 view .LVU836
 2923 0052 4FF0FF30 		mov	r0, #-1
 2924 0056 F1E7     		b	.L222
 2925              	.L230:
 2926              		.align	2
 2927              	.L229:
 2928 0058 00000000 		.word	p_bno055
 2929              		.cfi_endproc
 2930              	.LFE24:
 2932              		.section	.text.bno055_read_euler_p,"ax",%progbits
 2933              		.align	1
 2934              		.global	bno055_read_euler_p
 2935              		.syntax unified
 2936              		.thumb
 2937              		.thumb_func
 2939              	bno055_read_euler_p:
 2940              	.LVL297:
 2941              	.LFB25:
1679:Core/Src/bno055.c **** 
1680:Core/Src/bno055.c **** /*!
1681:Core/Src/bno055.c ****  *  @brief This API reads Euler data p values
1682:Core/Src/bno055.c ****  *  from register 0x1E and 0x1F it is a two byte data
1683:Core/Src/bno055.c ****  *
1684:Core/Src/bno055.c ****  *  @param euler_p_s16 : The raw p data
1685:Core/Src/bno055.c ****  *
1686:Core/Src/bno055.c ****  *  @return results of bus communication function
1687:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1688:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1689:Core/Src/bno055.c ****  *
1690:Core/Src/bno055.c ****  *
1691:Core/Src/bno055.c ****  */
1692:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_euler_p(s16 *euler_p_s16)
1693:Core/Src/bno055.c **** {
 2942              		.loc 1 1693 1 is_stmt 1 view -0
 2943              		.cfi_startproc
 2944              		@ args = 0, pretend = 0, frame = 8
 2945              		@ frame_needed = 0, uses_anonymous_args = 0
 2946              		.loc 1 1693 1 is_stmt 0 view .LVU838
 2947 0000 30B5     		push	{r4, r5, lr}
 2948              		.cfi_def_cfa_offset 12
 2949              		.cfi_offset 4, -12
 2950              		.cfi_offset 5, -8
 2951              		.cfi_offset 14, -4
 2952 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccOloYeZ.s 			page 86


 2953              		.cfi_def_cfa_offset 24
1694:Core/Src/bno055.c ****     /* Variable used to return value of
1695:Core/Src/bno055.c ****      * communication routine*/
1696:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2954              		.loc 1 1696 5 is_stmt 1 view .LVU839
 2955              	.LVL298:
1697:Core/Src/bno055.c **** 
1698:Core/Src/bno055.c ****     /* Array holding the Euler p value
1699:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_LSB] - p->LSB
1700:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_MSB] - p->MSB
1701:Core/Src/bno055.c ****      */
1702:Core/Src/bno055.c ****     u8 data_u8[BNO055_EULER_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2956              		.loc 1 1702 5 view .LVU840
 2957              		.loc 1 1702 8 is_stmt 0 view .LVU841
 2958 0004 0023     		movs	r3, #0
 2959 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1703:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2960              		.loc 1 1703 5 is_stmt 1 view .LVU842
 2961              	.LVL299:
1704:Core/Src/bno055.c **** 
1705:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1706:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2962              		.loc 1 1706 5 view .LVU843
 2963              		.loc 1 1706 18 is_stmt 0 view .LVU844
 2964 000a 134B     		ldr	r3, .L239
 2965 000c 1B68     		ldr	r3, [r3]
 2966              		.loc 1 1706 8 view .LVU845
 2967 000e EBB1     		cbz	r3, .L235
 2968 0010 0446     		mov	r4, r0
1707:Core/Src/bno055.c ****     {
1708:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1709:Core/Src/bno055.c ****     }
1710:Core/Src/bno055.c ****     else
1711:Core/Src/bno055.c ****     {
1712:Core/Src/bno055.c ****         /*condition check for page, chip id is
1713:Core/Src/bno055.c ****          * available in the page zero*/
1714:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2969              		.loc 1 1714 9 is_stmt 1 view .LVU846
 2970              		.loc 1 1714 21 is_stmt 0 view .LVU847
 2971 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2972              		.loc 1 1714 12 view .LVU848
 2973 0014 A3B9     		cbnz	r3, .L238
 2974              	.LVL300:
 2975              	.L233:
1715:Core/Src/bno055.c ****         {
1716:Core/Src/bno055.c ****             /* Write the page zero*/
1717:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1718:Core/Src/bno055.c ****         }
1719:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2976              		.loc 1 1719 53 discriminator 1 view .LVU849
 2977 0016 104B     		ldr	r3, .L239
 2978 0018 1B68     		ldr	r3, [r3]
 2979 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2980              		.loc 1 1719 41 discriminator 1 view .LVU850
 2981 001c CBB9     		cbnz	r3, .L236
 2982              	.L234:
1720:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccOloYeZ.s 			page 87


1721:Core/Src/bno055.c ****             /* Read the Euler p data*/
1722:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2983              		.loc 1 1722 13 is_stmt 1 view .LVU851
 2984              		.loc 1 1722 32 is_stmt 0 view .LVU852
 2985 001e 0E4B     		ldr	r3, .L239
 2986 0020 1868     		ldr	r0, [r3]
 2987 0022 0569     		ldr	r5, [r0, #16]
 2988              		.loc 1 1722 24 view .LVU853
 2989 0024 0223     		movs	r3, #2
 2990 0026 01AA     		add	r2, sp, #4
 2991 0028 1E21     		movs	r1, #30
 2992 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2993 002c A847     		blx	r5
 2994              	.LVL301:
1723:Core/Src/bno055.c ****                                                       BNO055_EULER_P_LSB_VALUEP_REG,
1724:Core/Src/bno055.c ****                                                       data_u8,
1725:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1726:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2995              		.loc 1 1726 13 is_stmt 1 view .LVU854
1727:Core/Src/bno055.c ****                                                                         BNO055_EULER_P_LSB_VALUEP);
1728:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2996              		.loc 1 1728 13 view .LVU855
1729:Core/Src/bno055.c ****                                                                         BNO055_EULER_P_MSB_VALUEP);
1730:Core/Src/bno055.c ****             *euler_p_s16 =
 2997              		.loc 1 1730 13 view .LVU856
1731:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2998              		.loc 1 1731 31 is_stmt 0 view .LVU857
 2999 002e 9DF90520 		ldrsb	r2, [sp, #5]
1732:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_LSB]));
 3000              		.loc 1 1732 31 view .LVU858
 3001 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1731:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 3002              		.loc 1 1731 17 view .LVU859
 3003 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1730:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 3004              		.loc 1 1730 26 view .LVU860
 3005 003a 2380     		strh	r3, [r4]	@ movhi
 3006              	.LVL302:
 3007              	.L232:
1733:Core/Src/bno055.c ****         }
1734:Core/Src/bno055.c ****         else
1735:Core/Src/bno055.c ****         {
1736:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1737:Core/Src/bno055.c ****         }
1738:Core/Src/bno055.c ****     }
1739:Core/Src/bno055.c **** 
1740:Core/Src/bno055.c ****     return com_rslt;
1741:Core/Src/bno055.c **** }
 3008              		.loc 1 1741 1 view .LVU861
 3009 003c 03B0     		add	sp, sp, #12
 3010              		.cfi_remember_state
 3011              		.cfi_def_cfa_offset 12
 3012              		@ sp needed
 3013 003e 30BD     		pop	{r4, r5, pc}
 3014              	.LVL303:
 3015              	.L238:
 3016              		.cfi_restore_state
ARM GAS  /tmp/ccOloYeZ.s 			page 88


1717:Core/Src/bno055.c ****         }
 3017              		.loc 1 1717 13 is_stmt 1 view .LVU862
1717:Core/Src/bno055.c ****         }
 3018              		.loc 1 1717 23 is_stmt 0 view .LVU863
 3019 0040 0020     		movs	r0, #0
 3020              	.LVL304:
1717:Core/Src/bno055.c ****         }
 3021              		.loc 1 1717 23 view .LVU864
 3022 0042 FFF7FEFF 		bl	bno055_write_page_id
 3023              	.LVL305:
1719:Core/Src/bno055.c ****         {
 3024              		.loc 1 1719 9 is_stmt 1 view .LVU865
1719:Core/Src/bno055.c ****         {
 3025              		.loc 1 1719 12 is_stmt 0 view .LVU866
 3026 0046 0028     		cmp	r0, #0
 3027 0048 E9D0     		beq	.L234
 3028 004a E4E7     		b	.L233
 3029              	.LVL306:
 3030              	.L235:
1708:Core/Src/bno055.c ****     }
 3031              		.loc 1 1708 16 view .LVU867
 3032 004c 6FF07E00 		mvn	r0, #126
 3033              	.LVL307:
1708:Core/Src/bno055.c ****     }
 3034              		.loc 1 1708 16 view .LVU868
 3035 0050 F4E7     		b	.L232
 3036              	.LVL308:
 3037              	.L236:
1736:Core/Src/bno055.c ****         }
 3038              		.loc 1 1736 22 view .LVU869
 3039 0052 4FF0FF30 		mov	r0, #-1
 3040 0056 F1E7     		b	.L232
 3041              	.L240:
 3042              		.align	2
 3043              	.L239:
 3044 0058 00000000 		.word	p_bno055
 3045              		.cfi_endproc
 3046              	.LFE25:
 3048              		.section	.text.bno055_read_euler_hrp,"ax",%progbits
 3049              		.align	1
 3050              		.global	bno055_read_euler_hrp
 3051              		.syntax unified
 3052              		.thumb
 3053              		.thumb_func
 3055              	bno055_read_euler_hrp:
 3056              	.LVL309:
 3057              	.LFB26:
1742:Core/Src/bno055.c **** 
1743:Core/Src/bno055.c **** /*!
1744:Core/Src/bno055.c ****  *  @brief This API reads Euler data hrp values
1745:Core/Src/bno055.c ****  *  from register 0x1A to 0x1F it is a six byte data
1746:Core/Src/bno055.c ****  *
1747:Core/Src/bno055.c ****  *
1748:Core/Src/bno055.c ****  *  @param euler : The Euler hrp data's
1749:Core/Src/bno055.c ****  *
1750:Core/Src/bno055.c ****  *  Parameter |    result
1751:Core/Src/bno055.c ****  *  --------- | -----------------
ARM GAS  /tmp/ccOloYeZ.s 			page 89


1752:Core/Src/bno055.c ****  *   h        | The Euler h data
1753:Core/Src/bno055.c ****  *   r        | The Euler r data
1754:Core/Src/bno055.c ****  *   p        | The Euler p data
1755:Core/Src/bno055.c ****  *
1756:Core/Src/bno055.c ****  *
1757:Core/Src/bno055.c ****  *  @return results of bus communication function
1758:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1759:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1760:Core/Src/bno055.c ****  *
1761:Core/Src/bno055.c ****  */
1762:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_euler_hrp(struct bno055_euler_t *euler)
1763:Core/Src/bno055.c **** {
 3058              		.loc 1 1763 1 is_stmt 1 view -0
 3059              		.cfi_startproc
 3060              		@ args = 0, pretend = 0, frame = 8
 3061              		@ frame_needed = 0, uses_anonymous_args = 0
 3062              		.loc 1 1763 1 is_stmt 0 view .LVU871
 3063 0000 30B5     		push	{r4, r5, lr}
 3064              		.cfi_def_cfa_offset 12
 3065              		.cfi_offset 4, -12
 3066              		.cfi_offset 5, -8
 3067              		.cfi_offset 14, -4
 3068 0002 83B0     		sub	sp, sp, #12
 3069              		.cfi_def_cfa_offset 24
 3070 0004 0446     		mov	r4, r0
1764:Core/Src/bno055.c ****     /* Variable used to return value of
1765:Core/Src/bno055.c ****      * communication routine*/
1766:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3071              		.loc 1 1766 5 is_stmt 1 view .LVU872
 3072              	.LVL310:
1767:Core/Src/bno055.c **** 
1768:Core/Src/bno055.c ****     /* Array holding the Euler hrp value
1769:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_LSB] - h->LSB
1770:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB] - h->MSB
1771:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_LSB] - r->MSB
1772:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB] - r->MSB
1773:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_LSB] - p->MSB
1774:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB] - p->MSB
1775:Core/Src/bno055.c ****      */
1776:Core/Src/bno055.c ****     u8 data_u8[BNO055_EULER_HRP_DATA_SIZE] = {
 3073              		.loc 1 1776 5 view .LVU873
 3074              		.loc 1 1776 8 is_stmt 0 view .LVU874
 3075 0006 1D4B     		ldr	r3, .L249
 3076 0008 93E80300 		ldm	r3, {r0, r1}
 3077              	.LVL311:
 3078              		.loc 1 1776 8 view .LVU875
 3079 000c 0090     		str	r0, [sp]
 3080 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
1777:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
1778:Core/Src/bno055.c ****     };
1779:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3081              		.loc 1 1779 5 is_stmt 1 view .LVU876
 3082              	.LVL312:
1780:Core/Src/bno055.c **** 
1781:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1782:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3083              		.loc 1 1782 5 view .LVU877
ARM GAS  /tmp/ccOloYeZ.s 			page 90


 3084              		.loc 1 1782 18 is_stmt 0 view .LVU878
 3085 0012 1B4B     		ldr	r3, .L249+4
 3086 0014 1B68     		ldr	r3, [r3]
 3087              		.loc 1 1782 8 view .LVU879
 3088 0016 53B3     		cbz	r3, .L245
1783:Core/Src/bno055.c ****     {
1784:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1785:Core/Src/bno055.c ****     }
1786:Core/Src/bno055.c ****     else
1787:Core/Src/bno055.c ****     {
1788:Core/Src/bno055.c ****         /*condition check for page, chip id is
1789:Core/Src/bno055.c ****          * available in the page zero*/
1790:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3089              		.loc 1 1790 9 is_stmt 1 view .LVU880
 3090              		.loc 1 1790 21 is_stmt 0 view .LVU881
 3091 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3092              		.loc 1 1790 12 view .LVU882
 3093 001a 13BB     		cbnz	r3, .L248
 3094              	.LVL313:
 3095              	.L243:
1791:Core/Src/bno055.c ****         {
1792:Core/Src/bno055.c ****             /* Write the page zero*/
1793:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1794:Core/Src/bno055.c ****         }
1795:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3096              		.loc 1 1795 53 discriminator 1 view .LVU883
 3097 001c 184B     		ldr	r3, .L249+4
 3098 001e 1B68     		ldr	r3, [r3]
 3099 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3100              		.loc 1 1795 41 discriminator 1 view .LVU884
 3101 0022 3BBB     		cbnz	r3, .L246
 3102              	.L244:
1796:Core/Src/bno055.c ****         {
1797:Core/Src/bno055.c ****             /* Read the six byte of Euler hrp data*/
1798:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3103              		.loc 1 1798 13 is_stmt 1 view .LVU885
 3104              		.loc 1 1798 32 is_stmt 0 view .LVU886
 3105 0024 164B     		ldr	r3, .L249+4
 3106 0026 1868     		ldr	r0, [r3]
 3107 0028 0569     		ldr	r5, [r0, #16]
 3108              		.loc 1 1798 24 view .LVU887
 3109 002a 0623     		movs	r3, #6
 3110 002c 6A46     		mov	r2, sp
 3111 002e 1A21     		movs	r1, #26
 3112 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3113 0032 A847     		blx	r5
 3114              	.LVL314:
1799:Core/Src/bno055.c ****                                                       BNO055_EULER_H_LSB_VALUEH_REG,
1800:Core/Src/bno055.c ****                                                       data_u8,
1801:Core/Src/bno055.c ****                                                       BNO055_EULER_HRP_DATA_SIZE);
1802:Core/Src/bno055.c **** 
1803:Core/Src/bno055.c ****             /* Data h*/
1804:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_LSB] = BNO055_GET_BITSLICE(
 3115              		.loc 1 1804 13 is_stmt 1 view .LVU888
1805:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_LSB],
1806:Core/Src/bno055.c ****                 BNO055_EULER_H_LSB_VALUEH);
1807:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB] = BNO055_GET_BITSLICE(
ARM GAS  /tmp/ccOloYeZ.s 			page 91


 3116              		.loc 1 1807 13 view .LVU889
1808:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB],
1809:Core/Src/bno055.c ****                 BNO055_EULER_H_MSB_VALUEH);
1810:Core/Src/bno055.c ****             euler->h =
 3117              		.loc 1 1810 13 view .LVU890
1811:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB])) << BNO055_SHIFT_EIG
 3118              		.loc 1 1811 31 is_stmt 0 view .LVU891
 3119 0034 9DF90120 		ldrsb	r2, [sp, #1]
1812:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_LSB]));
 3120              		.loc 1 1812 31 view .LVU892
 3121 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
1811:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB])) << BNO055_SHIFT_EIG
 3122              		.loc 1 1811 17 view .LVU893
 3123 003c 43EA0223 		orr	r3, r3, r2, lsl #8
1810:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB])) << BNO055_SHIFT_EIG
 3124              		.loc 1 1810 22 view .LVU894
 3125 0040 2380     		strh	r3, [r4]	@ movhi
1813:Core/Src/bno055.c **** 
1814:Core/Src/bno055.c ****             /* Data r*/
1815:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_LSB] = BNO055_GET_BITSLICE(
 3126              		.loc 1 1815 13 is_stmt 1 view .LVU895
1816:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_LSB],
1817:Core/Src/bno055.c ****                 BNO055_EULER_R_LSB_VALUER);
1818:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB] = BNO055_GET_BITSLICE(
 3127              		.loc 1 1818 13 view .LVU896
1819:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB],
1820:Core/Src/bno055.c ****                 BNO055_EULER_R_MSB_VALUER);
1821:Core/Src/bno055.c ****             euler->r =
 3128              		.loc 1 1821 13 view .LVU897
1822:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB])) << BNO055_SHIFT_EIG
 3129              		.loc 1 1822 31 is_stmt 0 view .LVU898
 3130 0042 9DF90320 		ldrsb	r2, [sp, #3]
1823:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_LSB]));
 3131              		.loc 1 1823 31 view .LVU899
 3132 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
1822:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB])) << BNO055_SHIFT_EIG
 3133              		.loc 1 1822 17 view .LVU900
 3134 004a 43EA0223 		orr	r3, r3, r2, lsl #8
1821:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB])) << BNO055_SHIFT_EIG
 3135              		.loc 1 1821 22 view .LVU901
 3136 004e 6380     		strh	r3, [r4, #2]	@ movhi
1824:Core/Src/bno055.c **** 
1825:Core/Src/bno055.c ****             /* Data p*/
1826:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_LSB] = BNO055_GET_BITSLICE(
 3137              		.loc 1 1826 13 is_stmt 1 view .LVU902
1827:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_LSB],
1828:Core/Src/bno055.c ****                 BNO055_EULER_P_LSB_VALUEP);
1829:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB] = BNO055_GET_BITSLICE(
 3138              		.loc 1 1829 13 view .LVU903
1830:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB],
1831:Core/Src/bno055.c ****                 BNO055_EULER_P_MSB_VALUEP);
1832:Core/Src/bno055.c ****             euler->p =
 3139              		.loc 1 1832 13 view .LVU904
1833:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB])) << BNO055_SHIFT_EIG
 3140              		.loc 1 1833 31 is_stmt 0 view .LVU905
 3141 0050 9DF90520 		ldrsb	r2, [sp, #5]
1834:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_LSB]));
ARM GAS  /tmp/ccOloYeZ.s 			page 92


 3142              		.loc 1 1834 31 view .LVU906
 3143 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1833:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB])) << BNO055_SHIFT_EIG
 3144              		.loc 1 1833 17 view .LVU907
 3145 0058 43EA0223 		orr	r3, r3, r2, lsl #8
1832:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB])) << BNO055_SHIFT_EIG
 3146              		.loc 1 1832 22 view .LVU908
 3147 005c A380     		strh	r3, [r4, #4]	@ movhi
 3148              	.LVL315:
 3149              	.L242:
1835:Core/Src/bno055.c ****         }
1836:Core/Src/bno055.c ****         else
1837:Core/Src/bno055.c ****         {
1838:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1839:Core/Src/bno055.c ****         }
1840:Core/Src/bno055.c ****     }
1841:Core/Src/bno055.c **** 
1842:Core/Src/bno055.c ****     return com_rslt;
1843:Core/Src/bno055.c **** }
 3150              		.loc 1 1843 1 view .LVU909
 3151 005e 03B0     		add	sp, sp, #12
 3152              		.cfi_remember_state
 3153              		.cfi_def_cfa_offset 12
 3154              		@ sp needed
 3155 0060 30BD     		pop	{r4, r5, pc}
 3156              	.LVL316:
 3157              	.L248:
 3158              		.cfi_restore_state
1793:Core/Src/bno055.c ****         }
 3159              		.loc 1 1793 13 is_stmt 1 view .LVU910
1793:Core/Src/bno055.c ****         }
 3160              		.loc 1 1793 23 is_stmt 0 view .LVU911
 3161 0062 0020     		movs	r0, #0
 3162 0064 FFF7FEFF 		bl	bno055_write_page_id
 3163              	.LVL317:
1795:Core/Src/bno055.c ****         {
 3164              		.loc 1 1795 9 is_stmt 1 view .LVU912
1795:Core/Src/bno055.c ****         {
 3165              		.loc 1 1795 12 is_stmt 0 view .LVU913
 3166 0068 0028     		cmp	r0, #0
 3167 006a DBD0     		beq	.L244
 3168 006c D6E7     		b	.L243
 3169              	.LVL318:
 3170              	.L245:
1784:Core/Src/bno055.c ****     }
 3171              		.loc 1 1784 16 view .LVU914
 3172 006e 6FF07E00 		mvn	r0, #126
 3173 0072 F4E7     		b	.L242
 3174              	.LVL319:
 3175              	.L246:
1838:Core/Src/bno055.c ****         }
 3176              		.loc 1 1838 22 view .LVU915
 3177 0074 4FF0FF30 		mov	r0, #-1
 3178 0078 F1E7     		b	.L242
 3179              	.L250:
 3180 007a 00BF     		.align	2
 3181              	.L249:
ARM GAS  /tmp/ccOloYeZ.s 			page 93


 3182 007c 00000000 		.word	.LANCHOR0
 3183 0080 00000000 		.word	p_bno055
 3184              		.cfi_endproc
 3185              	.LFE26:
 3187              		.section	.text.bno055_read_quaternion_w,"ax",%progbits
 3188              		.align	1
 3189              		.global	bno055_read_quaternion_w
 3190              		.syntax unified
 3191              		.thumb
 3192              		.thumb_func
 3194              	bno055_read_quaternion_w:
 3195              	.LVL320:
 3196              	.LFB27:
1844:Core/Src/bno055.c **** 
1845:Core/Src/bno055.c **** /*!
1846:Core/Src/bno055.c ****  *  @brief This API reads quaternion data w values
1847:Core/Src/bno055.c ****  *  from register 0x20 and 0x21 it is a two byte data
1848:Core/Src/bno055.c ****  *
1849:Core/Src/bno055.c ****  *  @param quaternion_w_s16 : The raw w data
1850:Core/Src/bno055.c ****  *
1851:Core/Src/bno055.c ****  *  @return results of bus communication function
1852:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1853:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1854:Core/Src/bno055.c ****  *
1855:Core/Src/bno055.c ****  *
1856:Core/Src/bno055.c ****  */
1857:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_w(s16 *quaternion_w_s16)
1858:Core/Src/bno055.c **** {
 3197              		.loc 1 1858 1 is_stmt 1 view -0
 3198              		.cfi_startproc
 3199              		@ args = 0, pretend = 0, frame = 8
 3200              		@ frame_needed = 0, uses_anonymous_args = 0
 3201              		.loc 1 1858 1 is_stmt 0 view .LVU917
 3202 0000 30B5     		push	{r4, r5, lr}
 3203              		.cfi_def_cfa_offset 12
 3204              		.cfi_offset 4, -12
 3205              		.cfi_offset 5, -8
 3206              		.cfi_offset 14, -4
 3207 0002 83B0     		sub	sp, sp, #12
 3208              		.cfi_def_cfa_offset 24
1859:Core/Src/bno055.c ****     /* Variable used to return value of
1860:Core/Src/bno055.c ****      * communication routine*/
1861:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3209              		.loc 1 1861 5 is_stmt 1 view .LVU918
 3210              	.LVL321:
1862:Core/Src/bno055.c **** 
1863:Core/Src/bno055.c ****     /* Array holding the Quaternion w value
1864:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] - w->LSB
1865:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] - w->MSB
1866:Core/Src/bno055.c ****      */
1867:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3211              		.loc 1 1867 5 view .LVU919
 3212              		.loc 1 1867 8 is_stmt 0 view .LVU920
 3213 0004 0023     		movs	r3, #0
 3214 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1868:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3215              		.loc 1 1868 5 is_stmt 1 view .LVU921
ARM GAS  /tmp/ccOloYeZ.s 			page 94


 3216              	.LVL322:
1869:Core/Src/bno055.c **** 
1870:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1871:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3217              		.loc 1 1871 5 view .LVU922
 3218              		.loc 1 1871 18 is_stmt 0 view .LVU923
 3219 000a 134B     		ldr	r3, .L259
 3220 000c 1B68     		ldr	r3, [r3]
 3221              		.loc 1 1871 8 view .LVU924
 3222 000e EBB1     		cbz	r3, .L255
 3223 0010 0446     		mov	r4, r0
1872:Core/Src/bno055.c ****     {
1873:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1874:Core/Src/bno055.c ****     }
1875:Core/Src/bno055.c ****     else
1876:Core/Src/bno055.c ****     {
1877:Core/Src/bno055.c ****         /*condition check for page, chip id is
1878:Core/Src/bno055.c ****          * available in the page zero*/
1879:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3224              		.loc 1 1879 9 is_stmt 1 view .LVU925
 3225              		.loc 1 1879 21 is_stmt 0 view .LVU926
 3226 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3227              		.loc 1 1879 12 view .LVU927
 3228 0014 A3B9     		cbnz	r3, .L258
 3229              	.LVL323:
 3230              	.L253:
1880:Core/Src/bno055.c ****         {
1881:Core/Src/bno055.c ****             /* Write the page zero*/
1882:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1883:Core/Src/bno055.c ****         }
1884:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3231              		.loc 1 1884 53 discriminator 1 view .LVU928
 3232 0016 104B     		ldr	r3, .L259
 3233 0018 1B68     		ldr	r3, [r3]
 3234 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3235              		.loc 1 1884 41 discriminator 1 view .LVU929
 3236 001c CBB9     		cbnz	r3, .L256
 3237              	.L254:
1885:Core/Src/bno055.c ****         {
1886:Core/Src/bno055.c ****             /* Read the two byte value
1887:Core/Src/bno055.c ****              * of quaternion w data*/
1888:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3238              		.loc 1 1888 13 is_stmt 1 view .LVU930
 3239              		.loc 1 1888 32 is_stmt 0 view .LVU931
 3240 001e 0E4B     		ldr	r3, .L259
 3241 0020 1868     		ldr	r0, [r3]
 3242 0022 0569     		ldr	r5, [r0, #16]
 3243              		.loc 1 1888 24 view .LVU932
 3244 0024 0223     		movs	r3, #2
 3245 0026 01AA     		add	r2, sp, #4
 3246 0028 2021     		movs	r1, #32
 3247 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3248 002c A847     		blx	r5
 3249              	.LVL324:
1889:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_W_LSB_VALUEW_REG,
1890:Core/Src/bno055.c ****                                                       data_u8,
1891:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
ARM GAS  /tmp/ccOloYeZ.s 			page 95


1892:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3250              		.loc 1 1892 13 is_stmt 1 view .LVU933
1893:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
1894:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3251              		.loc 1 1894 13 view .LVU934
1895:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
1896:Core/Src/bno055.c ****             *quaternion_w_s16 =
 3252              		.loc 1 1896 13 view .LVU935
1897:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3253              		.loc 1 1897 31 is_stmt 0 view .LVU936
 3254 002e 9DF90520 		ldrsb	r2, [sp, #5]
1898:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB]));
 3255              		.loc 1 1898 31 view .LVU937
 3256 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1897:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3257              		.loc 1 1897 17 view .LVU938
 3258 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1896:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3259              		.loc 1 1896 31 view .LVU939
 3260 003a 2380     		strh	r3, [r4]	@ movhi
 3261              	.LVL325:
 3262              	.L252:
1899:Core/Src/bno055.c ****         }
1900:Core/Src/bno055.c ****         else
1901:Core/Src/bno055.c ****         {
1902:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1903:Core/Src/bno055.c ****         }
1904:Core/Src/bno055.c ****     }
1905:Core/Src/bno055.c **** 
1906:Core/Src/bno055.c ****     return com_rslt;
1907:Core/Src/bno055.c **** }
 3263              		.loc 1 1907 1 view .LVU940
 3264 003c 03B0     		add	sp, sp, #12
 3265              		.cfi_remember_state
 3266              		.cfi_def_cfa_offset 12
 3267              		@ sp needed
 3268 003e 30BD     		pop	{r4, r5, pc}
 3269              	.LVL326:
 3270              	.L258:
 3271              		.cfi_restore_state
1882:Core/Src/bno055.c ****         }
 3272              		.loc 1 1882 13 is_stmt 1 view .LVU941
1882:Core/Src/bno055.c ****         }
 3273              		.loc 1 1882 23 is_stmt 0 view .LVU942
 3274 0040 0020     		movs	r0, #0
 3275              	.LVL327:
1882:Core/Src/bno055.c ****         }
 3276              		.loc 1 1882 23 view .LVU943
 3277 0042 FFF7FEFF 		bl	bno055_write_page_id
 3278              	.LVL328:
1884:Core/Src/bno055.c ****         {
 3279              		.loc 1 1884 9 is_stmt 1 view .LVU944
1884:Core/Src/bno055.c ****         {
 3280              		.loc 1 1884 12 is_stmt 0 view .LVU945
 3281 0046 0028     		cmp	r0, #0
 3282 0048 E9D0     		beq	.L254
 3283 004a E4E7     		b	.L253
ARM GAS  /tmp/ccOloYeZ.s 			page 96


 3284              	.LVL329:
 3285              	.L255:
1873:Core/Src/bno055.c ****     }
 3286              		.loc 1 1873 16 view .LVU946
 3287 004c 6FF07E00 		mvn	r0, #126
 3288              	.LVL330:
1873:Core/Src/bno055.c ****     }
 3289              		.loc 1 1873 16 view .LVU947
 3290 0050 F4E7     		b	.L252
 3291              	.LVL331:
 3292              	.L256:
1902:Core/Src/bno055.c ****         }
 3293              		.loc 1 1902 22 view .LVU948
 3294 0052 4FF0FF30 		mov	r0, #-1
 3295 0056 F1E7     		b	.L252
 3296              	.L260:
 3297              		.align	2
 3298              	.L259:
 3299 0058 00000000 		.word	p_bno055
 3300              		.cfi_endproc
 3301              	.LFE27:
 3303              		.section	.text.bno055_read_quaternion_x,"ax",%progbits
 3304              		.align	1
 3305              		.global	bno055_read_quaternion_x
 3306              		.syntax unified
 3307              		.thumb
 3308              		.thumb_func
 3310              	bno055_read_quaternion_x:
 3311              	.LVL332:
 3312              	.LFB28:
1908:Core/Src/bno055.c **** 
1909:Core/Src/bno055.c **** /*!
1910:Core/Src/bno055.c ****  *  @brief This API reads quaternion data x values
1911:Core/Src/bno055.c ****  *  from register 0x22 and 0x23 it is a two byte data
1912:Core/Src/bno055.c ****  *
1913:Core/Src/bno055.c ****  *  @param quaternion_x_s16 : The raw x data
1914:Core/Src/bno055.c ****  *
1915:Core/Src/bno055.c ****  *  @return results of bus communication function
1916:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1917:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1918:Core/Src/bno055.c ****  *
1919:Core/Src/bno055.c ****  *
1920:Core/Src/bno055.c ****  */
1921:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_x(s16 *quaternion_x_s16)
1922:Core/Src/bno055.c **** {
 3313              		.loc 1 1922 1 is_stmt 1 view -0
 3314              		.cfi_startproc
 3315              		@ args = 0, pretend = 0, frame = 8
 3316              		@ frame_needed = 0, uses_anonymous_args = 0
 3317              		.loc 1 1922 1 is_stmt 0 view .LVU950
 3318 0000 30B5     		push	{r4, r5, lr}
 3319              		.cfi_def_cfa_offset 12
 3320              		.cfi_offset 4, -12
 3321              		.cfi_offset 5, -8
 3322              		.cfi_offset 14, -4
 3323 0002 83B0     		sub	sp, sp, #12
 3324              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccOloYeZ.s 			page 97


1923:Core/Src/bno055.c ****     /* Variable used to return value of
1924:Core/Src/bno055.c ****      * communication routine*/
1925:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3325              		.loc 1 1925 5 is_stmt 1 view .LVU951
 3326              	.LVL333:
1926:Core/Src/bno055.c **** 
1927:Core/Src/bno055.c ****     /* Array holding the quaternion x value
1928:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] - x->LSB
1929:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] - x->MSB
1930:Core/Src/bno055.c ****      */
1931:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3327              		.loc 1 1931 5 view .LVU952
 3328              		.loc 1 1931 8 is_stmt 0 view .LVU953
 3329 0004 0023     		movs	r3, #0
 3330 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1932:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3331              		.loc 1 1932 5 is_stmt 1 view .LVU954
 3332              	.LVL334:
1933:Core/Src/bno055.c **** 
1934:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1935:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3333              		.loc 1 1935 5 view .LVU955
 3334              		.loc 1 1935 18 is_stmt 0 view .LVU956
 3335 000a 134B     		ldr	r3, .L269
 3336 000c 1B68     		ldr	r3, [r3]
 3337              		.loc 1 1935 8 view .LVU957
 3338 000e EBB1     		cbz	r3, .L265
 3339 0010 0446     		mov	r4, r0
1936:Core/Src/bno055.c ****     {
1937:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1938:Core/Src/bno055.c ****     }
1939:Core/Src/bno055.c ****     else
1940:Core/Src/bno055.c ****     {
1941:Core/Src/bno055.c ****         /*condition check for page, chip id is
1942:Core/Src/bno055.c ****          * available in the page zero*/
1943:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3340              		.loc 1 1943 9 is_stmt 1 view .LVU958
 3341              		.loc 1 1943 21 is_stmt 0 view .LVU959
 3342 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3343              		.loc 1 1943 12 view .LVU960
 3344 0014 A3B9     		cbnz	r3, .L268
 3345              	.LVL335:
 3346              	.L263:
1944:Core/Src/bno055.c ****         {
1945:Core/Src/bno055.c ****             /* Write the page zero*/
1946:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1947:Core/Src/bno055.c ****         }
1948:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3347              		.loc 1 1948 53 discriminator 1 view .LVU961
 3348 0016 104B     		ldr	r3, .L269
 3349 0018 1B68     		ldr	r3, [r3]
 3350 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3351              		.loc 1 1948 41 discriminator 1 view .LVU962
 3352 001c CBB9     		cbnz	r3, .L266
 3353              	.L264:
1949:Core/Src/bno055.c ****         {
1950:Core/Src/bno055.c ****             /* Read the two byte value
ARM GAS  /tmp/ccOloYeZ.s 			page 98


1951:Core/Src/bno055.c ****              * of quaternion x data*/
1952:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3354              		.loc 1 1952 13 is_stmt 1 view .LVU963
 3355              		.loc 1 1952 32 is_stmt 0 view .LVU964
 3356 001e 0E4B     		ldr	r3, .L269
 3357 0020 1868     		ldr	r0, [r3]
 3358 0022 0569     		ldr	r5, [r0, #16]
 3359              		.loc 1 1952 24 view .LVU965
 3360 0024 0223     		movs	r3, #2
 3361 0026 01AA     		add	r2, sp, #4
 3362 0028 2221     		movs	r1, #34
 3363 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3364 002c A847     		blx	r5
 3365              	.LVL336:
1953:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_X_LSB_VALUEX_REG,
1954:Core/Src/bno055.c ****                                                       data_u8,
1955:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1956:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3366              		.loc 1 1956 13 is_stmt 1 view .LVU966
1957:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
1958:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3367              		.loc 1 1958 13 view .LVU967
1959:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
1960:Core/Src/bno055.c ****             *quaternion_x_s16 =
 3368              		.loc 1 1960 13 view .LVU968
1961:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3369              		.loc 1 1961 31 is_stmt 0 view .LVU969
 3370 002e 9DF90520 		ldrsb	r2, [sp, #5]
1962:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB]));
 3371              		.loc 1 1962 31 view .LVU970
 3372 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1961:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3373              		.loc 1 1961 17 view .LVU971
 3374 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1960:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3375              		.loc 1 1960 31 view .LVU972
 3376 003a 2380     		strh	r3, [r4]	@ movhi
 3377              	.LVL337:
 3378              	.L262:
1963:Core/Src/bno055.c ****         }
1964:Core/Src/bno055.c ****         else
1965:Core/Src/bno055.c ****         {
1966:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1967:Core/Src/bno055.c ****         }
1968:Core/Src/bno055.c ****     }
1969:Core/Src/bno055.c **** 
1970:Core/Src/bno055.c ****     return com_rslt;
1971:Core/Src/bno055.c **** }
 3379              		.loc 1 1971 1 view .LVU973
 3380 003c 03B0     		add	sp, sp, #12
 3381              		.cfi_remember_state
 3382              		.cfi_def_cfa_offset 12
 3383              		@ sp needed
 3384 003e 30BD     		pop	{r4, r5, pc}
 3385              	.LVL338:
 3386              	.L268:
 3387              		.cfi_restore_state
ARM GAS  /tmp/ccOloYeZ.s 			page 99


1946:Core/Src/bno055.c ****         }
 3388              		.loc 1 1946 13 is_stmt 1 view .LVU974
1946:Core/Src/bno055.c ****         }
 3389              		.loc 1 1946 23 is_stmt 0 view .LVU975
 3390 0040 0020     		movs	r0, #0
 3391              	.LVL339:
1946:Core/Src/bno055.c ****         }
 3392              		.loc 1 1946 23 view .LVU976
 3393 0042 FFF7FEFF 		bl	bno055_write_page_id
 3394              	.LVL340:
1948:Core/Src/bno055.c ****         {
 3395              		.loc 1 1948 9 is_stmt 1 view .LVU977
1948:Core/Src/bno055.c ****         {
 3396              		.loc 1 1948 12 is_stmt 0 view .LVU978
 3397 0046 0028     		cmp	r0, #0
 3398 0048 E9D0     		beq	.L264
 3399 004a E4E7     		b	.L263
 3400              	.LVL341:
 3401              	.L265:
1937:Core/Src/bno055.c ****     }
 3402              		.loc 1 1937 16 view .LVU979
 3403 004c 6FF07E00 		mvn	r0, #126
 3404              	.LVL342:
1937:Core/Src/bno055.c ****     }
 3405              		.loc 1 1937 16 view .LVU980
 3406 0050 F4E7     		b	.L262
 3407              	.LVL343:
 3408              	.L266:
1966:Core/Src/bno055.c ****         }
 3409              		.loc 1 1966 22 view .LVU981
 3410 0052 4FF0FF30 		mov	r0, #-1
 3411 0056 F1E7     		b	.L262
 3412              	.L270:
 3413              		.align	2
 3414              	.L269:
 3415 0058 00000000 		.word	p_bno055
 3416              		.cfi_endproc
 3417              	.LFE28:
 3419              		.section	.text.bno055_read_quaternion_y,"ax",%progbits
 3420              		.align	1
 3421              		.global	bno055_read_quaternion_y
 3422              		.syntax unified
 3423              		.thumb
 3424              		.thumb_func
 3426              	bno055_read_quaternion_y:
 3427              	.LVL344:
 3428              	.LFB29:
1972:Core/Src/bno055.c **** 
1973:Core/Src/bno055.c **** /*!
1974:Core/Src/bno055.c ****  *  @brief This API reads quaternion data y values
1975:Core/Src/bno055.c ****  *  from register 0x24 and 0x25 it is a two byte data
1976:Core/Src/bno055.c ****  *
1977:Core/Src/bno055.c ****  *  @param quaternion_y_s16 : The raw y data
1978:Core/Src/bno055.c ****  *
1979:Core/Src/bno055.c ****  *  @return results of bus communication function
1980:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1981:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
ARM GAS  /tmp/ccOloYeZ.s 			page 100


1982:Core/Src/bno055.c ****  *
1983:Core/Src/bno055.c ****  *
1984:Core/Src/bno055.c ****  */
1985:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_y(s16 *quaternion_y_s16)
1986:Core/Src/bno055.c **** {
 3429              		.loc 1 1986 1 is_stmt 1 view -0
 3430              		.cfi_startproc
 3431              		@ args = 0, pretend = 0, frame = 8
 3432              		@ frame_needed = 0, uses_anonymous_args = 0
 3433              		.loc 1 1986 1 is_stmt 0 view .LVU983
 3434 0000 30B5     		push	{r4, r5, lr}
 3435              		.cfi_def_cfa_offset 12
 3436              		.cfi_offset 4, -12
 3437              		.cfi_offset 5, -8
 3438              		.cfi_offset 14, -4
 3439 0002 83B0     		sub	sp, sp, #12
 3440              		.cfi_def_cfa_offset 24
1987:Core/Src/bno055.c ****     /* Variable used to return value of
1988:Core/Src/bno055.c ****      * communication routine*/
1989:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3441              		.loc 1 1989 5 is_stmt 1 view .LVU984
 3442              	.LVL345:
1990:Core/Src/bno055.c **** 
1991:Core/Src/bno055.c ****     /* Array holding the quaternion y value
1992:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] - y->LSB
1993:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] - y->MSB
1994:Core/Src/bno055.c ****      */
1995:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3443              		.loc 1 1995 5 view .LVU985
 3444              		.loc 1 1995 8 is_stmt 0 view .LVU986
 3445 0004 0023     		movs	r3, #0
 3446 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1996:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3447              		.loc 1 1996 5 is_stmt 1 view .LVU987
 3448              	.LVL346:
1997:Core/Src/bno055.c **** 
1998:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1999:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3449              		.loc 1 1999 5 view .LVU988
 3450              		.loc 1 1999 18 is_stmt 0 view .LVU989
 3451 000a 134B     		ldr	r3, .L279
 3452 000c 1B68     		ldr	r3, [r3]
 3453              		.loc 1 1999 8 view .LVU990
 3454 000e EBB1     		cbz	r3, .L275
 3455 0010 0446     		mov	r4, r0
2000:Core/Src/bno055.c ****     {
2001:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2002:Core/Src/bno055.c ****     }
2003:Core/Src/bno055.c ****     else
2004:Core/Src/bno055.c ****     {
2005:Core/Src/bno055.c ****         /*condition check for page, chip id is
2006:Core/Src/bno055.c ****          * available in the page zero*/
2007:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3456              		.loc 1 2007 9 is_stmt 1 view .LVU991
 3457              		.loc 1 2007 21 is_stmt 0 view .LVU992
 3458 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3459              		.loc 1 2007 12 view .LVU993
ARM GAS  /tmp/ccOloYeZ.s 			page 101


 3460 0014 A3B9     		cbnz	r3, .L278
 3461              	.LVL347:
 3462              	.L273:
2008:Core/Src/bno055.c ****         {
2009:Core/Src/bno055.c ****             /* Write the page zero*/
2010:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2011:Core/Src/bno055.c ****         }
2012:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3463              		.loc 1 2012 53 discriminator 1 view .LVU994
 3464 0016 104B     		ldr	r3, .L279
 3465 0018 1B68     		ldr	r3, [r3]
 3466 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3467              		.loc 1 2012 41 discriminator 1 view .LVU995
 3468 001c CBB9     		cbnz	r3, .L276
 3469              	.L274:
2013:Core/Src/bno055.c ****         {
2014:Core/Src/bno055.c ****             /* Read the two byte value
2015:Core/Src/bno055.c ****              * of quaternion y data*/
2016:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3470              		.loc 1 2016 13 is_stmt 1 view .LVU996
 3471              		.loc 1 2016 32 is_stmt 0 view .LVU997
 3472 001e 0E4B     		ldr	r3, .L279
 3473 0020 1868     		ldr	r0, [r3]
 3474 0022 0569     		ldr	r5, [r0, #16]
 3475              		.loc 1 2016 24 view .LVU998
 3476 0024 0223     		movs	r3, #2
 3477 0026 01AA     		add	r2, sp, #4
 3478 0028 2421     		movs	r1, #36
 3479 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3480 002c A847     		blx	r5
 3481              	.LVL348:
2017:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_Y_LSB_VALUEY_REG,
2018:Core/Src/bno055.c ****                                                       data_u8,
2019:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2020:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3482              		.loc 1 2020 13 is_stmt 1 view .LVU999
2021:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
2022:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3483              		.loc 1 2022 13 view .LVU1000
2023:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
2024:Core/Src/bno055.c ****             *quaternion_y_s16 =
 3484              		.loc 1 2024 13 view .LVU1001
2025:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3485              		.loc 1 2025 31 is_stmt 0 view .LVU1002
 3486 002e 9DF90520 		ldrsb	r2, [sp, #5]
2026:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB]));
 3487              		.loc 1 2026 31 view .LVU1003
 3488 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2025:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3489              		.loc 1 2025 17 view .LVU1004
 3490 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2024:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3491              		.loc 1 2024 31 view .LVU1005
 3492 003a 2380     		strh	r3, [r4]	@ movhi
 3493              	.LVL349:
 3494              	.L272:
2027:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 102


2028:Core/Src/bno055.c ****         else
2029:Core/Src/bno055.c ****         {
2030:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2031:Core/Src/bno055.c ****         }
2032:Core/Src/bno055.c ****     }
2033:Core/Src/bno055.c **** 
2034:Core/Src/bno055.c ****     return com_rslt;
2035:Core/Src/bno055.c **** }
 3495              		.loc 1 2035 1 view .LVU1006
 3496 003c 03B0     		add	sp, sp, #12
 3497              		.cfi_remember_state
 3498              		.cfi_def_cfa_offset 12
 3499              		@ sp needed
 3500 003e 30BD     		pop	{r4, r5, pc}
 3501              	.LVL350:
 3502              	.L278:
 3503              		.cfi_restore_state
2010:Core/Src/bno055.c ****         }
 3504              		.loc 1 2010 13 is_stmt 1 view .LVU1007
2010:Core/Src/bno055.c ****         }
 3505              		.loc 1 2010 23 is_stmt 0 view .LVU1008
 3506 0040 0020     		movs	r0, #0
 3507              	.LVL351:
2010:Core/Src/bno055.c ****         }
 3508              		.loc 1 2010 23 view .LVU1009
 3509 0042 FFF7FEFF 		bl	bno055_write_page_id
 3510              	.LVL352:
2012:Core/Src/bno055.c ****         {
 3511              		.loc 1 2012 9 is_stmt 1 view .LVU1010
2012:Core/Src/bno055.c ****         {
 3512              		.loc 1 2012 12 is_stmt 0 view .LVU1011
 3513 0046 0028     		cmp	r0, #0
 3514 0048 E9D0     		beq	.L274
 3515 004a E4E7     		b	.L273
 3516              	.LVL353:
 3517              	.L275:
2001:Core/Src/bno055.c ****     }
 3518              		.loc 1 2001 16 view .LVU1012
 3519 004c 6FF07E00 		mvn	r0, #126
 3520              	.LVL354:
2001:Core/Src/bno055.c ****     }
 3521              		.loc 1 2001 16 view .LVU1013
 3522 0050 F4E7     		b	.L272
 3523              	.LVL355:
 3524              	.L276:
2030:Core/Src/bno055.c ****         }
 3525              		.loc 1 2030 22 view .LVU1014
 3526 0052 4FF0FF30 		mov	r0, #-1
 3527 0056 F1E7     		b	.L272
 3528              	.L280:
 3529              		.align	2
 3530              	.L279:
 3531 0058 00000000 		.word	p_bno055
 3532              		.cfi_endproc
 3533              	.LFE29:
 3535              		.section	.text.bno055_read_quaternion_z,"ax",%progbits
 3536              		.align	1
ARM GAS  /tmp/ccOloYeZ.s 			page 103


 3537              		.global	bno055_read_quaternion_z
 3538              		.syntax unified
 3539              		.thumb
 3540              		.thumb_func
 3542              	bno055_read_quaternion_z:
 3543              	.LVL356:
 3544              	.LFB30:
2036:Core/Src/bno055.c **** 
2037:Core/Src/bno055.c **** /*!
2038:Core/Src/bno055.c ****  *  @brief This API reads quaternion data z values
2039:Core/Src/bno055.c ****  *  from register 0x26 and 0x27 it is a two byte data
2040:Core/Src/bno055.c ****  *
2041:Core/Src/bno055.c ****  *  @param quaternion_z_s16 : The raw z data
2042:Core/Src/bno055.c ****  *
2043:Core/Src/bno055.c ****  *  @return results of bus communication function
2044:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2045:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2046:Core/Src/bno055.c ****  *
2047:Core/Src/bno055.c ****  *
2048:Core/Src/bno055.c ****  */
2049:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_z(s16 *quaternion_z_s16)
2050:Core/Src/bno055.c **** {
 3545              		.loc 1 2050 1 is_stmt 1 view -0
 3546              		.cfi_startproc
 3547              		@ args = 0, pretend = 0, frame = 8
 3548              		@ frame_needed = 0, uses_anonymous_args = 0
 3549              		.loc 1 2050 1 is_stmt 0 view .LVU1016
 3550 0000 30B5     		push	{r4, r5, lr}
 3551              		.cfi_def_cfa_offset 12
 3552              		.cfi_offset 4, -12
 3553              		.cfi_offset 5, -8
 3554              		.cfi_offset 14, -4
 3555 0002 83B0     		sub	sp, sp, #12
 3556              		.cfi_def_cfa_offset 24
2051:Core/Src/bno055.c ****     /* Variable used to return value of
2052:Core/Src/bno055.c ****      * communication routine*/
2053:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3557              		.loc 1 2053 5 is_stmt 1 view .LVU1017
 3558              	.LVL357:
2054:Core/Src/bno055.c **** 
2055:Core/Src/bno055.c ****     /* Array holding the quaternion z value
2056:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] - z->LSB
2057:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] - z->MSB
2058:Core/Src/bno055.c ****      */
2059:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3559              		.loc 1 2059 5 view .LVU1018
 3560              		.loc 1 2059 8 is_stmt 0 view .LVU1019
 3561 0004 0023     		movs	r3, #0
 3562 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2060:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3563              		.loc 1 2060 5 is_stmt 1 view .LVU1020
 3564              	.LVL358:
2061:Core/Src/bno055.c **** 
2062:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2063:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3565              		.loc 1 2063 5 view .LVU1021
 3566              		.loc 1 2063 18 is_stmt 0 view .LVU1022
ARM GAS  /tmp/ccOloYeZ.s 			page 104


 3567 000a 134B     		ldr	r3, .L289
 3568 000c 1B68     		ldr	r3, [r3]
 3569              		.loc 1 2063 8 view .LVU1023
 3570 000e EBB1     		cbz	r3, .L285
 3571 0010 0446     		mov	r4, r0
2064:Core/Src/bno055.c ****     {
2065:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2066:Core/Src/bno055.c ****     }
2067:Core/Src/bno055.c ****     else
2068:Core/Src/bno055.c ****     {
2069:Core/Src/bno055.c ****         /*condition check for page, chip id is
2070:Core/Src/bno055.c ****          * available in the page zero*/
2071:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3572              		.loc 1 2071 9 is_stmt 1 view .LVU1024
 3573              		.loc 1 2071 21 is_stmt 0 view .LVU1025
 3574 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3575              		.loc 1 2071 12 view .LVU1026
 3576 0014 A3B9     		cbnz	r3, .L288
 3577              	.LVL359:
 3578              	.L283:
2072:Core/Src/bno055.c ****         {
2073:Core/Src/bno055.c ****             /* Write the page zero*/
2074:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2075:Core/Src/bno055.c ****         }
2076:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3579              		.loc 1 2076 53 discriminator 1 view .LVU1027
 3580 0016 104B     		ldr	r3, .L289
 3581 0018 1B68     		ldr	r3, [r3]
 3582 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3583              		.loc 1 2076 41 discriminator 1 view .LVU1028
 3584 001c CBB9     		cbnz	r3, .L286
 3585              	.L284:
2077:Core/Src/bno055.c ****         {
2078:Core/Src/bno055.c ****             /* Read the two byte value
2079:Core/Src/bno055.c ****              * of quaternion z data*/
2080:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3586              		.loc 1 2080 13 is_stmt 1 view .LVU1029
 3587              		.loc 1 2080 32 is_stmt 0 view .LVU1030
 3588 001e 0E4B     		ldr	r3, .L289
 3589 0020 1868     		ldr	r0, [r3]
 3590 0022 0569     		ldr	r5, [r0, #16]
 3591              		.loc 1 2080 24 view .LVU1031
 3592 0024 0223     		movs	r3, #2
 3593 0026 01AA     		add	r2, sp, #4
 3594 0028 2621     		movs	r1, #38
 3595 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3596 002c A847     		blx	r5
 3597              	.LVL360:
2081:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_Z_LSB_VALUEZ_REG,
2082:Core/Src/bno055.c ****                                                       data_u8,
2083:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2084:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3598              		.loc 1 2084 13 is_stmt 1 view .LVU1032
2085:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
2086:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3599              		.loc 1 2086 13 view .LVU1033
2087:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
ARM GAS  /tmp/ccOloYeZ.s 			page 105


2088:Core/Src/bno055.c ****             *quaternion_z_s16 =
 3600              		.loc 1 2088 13 view .LVU1034
2089:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3601              		.loc 1 2089 31 is_stmt 0 view .LVU1035
 3602 002e 9DF90520 		ldrsb	r2, [sp, #5]
2090:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB]));
 3603              		.loc 1 2090 31 view .LVU1036
 3604 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2089:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3605              		.loc 1 2089 17 view .LVU1037
 3606 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2088:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3607              		.loc 1 2088 31 view .LVU1038
 3608 003a 2380     		strh	r3, [r4]	@ movhi
 3609              	.LVL361:
 3610              	.L282:
2091:Core/Src/bno055.c ****         }
2092:Core/Src/bno055.c ****         else
2093:Core/Src/bno055.c ****         {
2094:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2095:Core/Src/bno055.c ****         }
2096:Core/Src/bno055.c ****     }
2097:Core/Src/bno055.c **** 
2098:Core/Src/bno055.c ****     return com_rslt;
2099:Core/Src/bno055.c **** }
 3611              		.loc 1 2099 1 view .LVU1039
 3612 003c 03B0     		add	sp, sp, #12
 3613              		.cfi_remember_state
 3614              		.cfi_def_cfa_offset 12
 3615              		@ sp needed
 3616 003e 30BD     		pop	{r4, r5, pc}
 3617              	.LVL362:
 3618              	.L288:
 3619              		.cfi_restore_state
2074:Core/Src/bno055.c ****         }
 3620              		.loc 1 2074 13 is_stmt 1 view .LVU1040
2074:Core/Src/bno055.c ****         }
 3621              		.loc 1 2074 23 is_stmt 0 view .LVU1041
 3622 0040 0020     		movs	r0, #0
 3623              	.LVL363:
2074:Core/Src/bno055.c ****         }
 3624              		.loc 1 2074 23 view .LVU1042
 3625 0042 FFF7FEFF 		bl	bno055_write_page_id
 3626              	.LVL364:
2076:Core/Src/bno055.c ****         {
 3627              		.loc 1 2076 9 is_stmt 1 view .LVU1043
2076:Core/Src/bno055.c ****         {
 3628              		.loc 1 2076 12 is_stmt 0 view .LVU1044
 3629 0046 0028     		cmp	r0, #0
 3630 0048 E9D0     		beq	.L284
 3631 004a E4E7     		b	.L283
 3632              	.LVL365:
 3633              	.L285:
2065:Core/Src/bno055.c ****     }
 3634              		.loc 1 2065 16 view .LVU1045
 3635 004c 6FF07E00 		mvn	r0, #126
 3636              	.LVL366:
ARM GAS  /tmp/ccOloYeZ.s 			page 106


2065:Core/Src/bno055.c ****     }
 3637              		.loc 1 2065 16 view .LVU1046
 3638 0050 F4E7     		b	.L282
 3639              	.LVL367:
 3640              	.L286:
2094:Core/Src/bno055.c ****         }
 3641              		.loc 1 2094 22 view .LVU1047
 3642 0052 4FF0FF30 		mov	r0, #-1
 3643 0056 F1E7     		b	.L282
 3644              	.L290:
 3645              		.align	2
 3646              	.L289:
 3647 0058 00000000 		.word	p_bno055
 3648              		.cfi_endproc
 3649              	.LFE30:
 3651              		.section	.text.bno055_read_quaternion_wxyz,"ax",%progbits
 3652              		.align	1
 3653              		.global	bno055_read_quaternion_wxyz
 3654              		.syntax unified
 3655              		.thumb
 3656              		.thumb_func
 3658              	bno055_read_quaternion_wxyz:
 3659              	.LVL368:
 3660              	.LFB31:
2100:Core/Src/bno055.c **** 
2101:Core/Src/bno055.c **** /*!
2102:Core/Src/bno055.c ****  *  @brief This API reads Quaternion data wxyz values
2103:Core/Src/bno055.c ****  *  from register 0x20 to 0x27 it is a six byte data
2104:Core/Src/bno055.c ****  *
2105:Core/Src/bno055.c ****  *
2106:Core/Src/bno055.c ****  *  @param quaternion : The value of quaternion wxyz data's
2107:Core/Src/bno055.c ****  *
2108:Core/Src/bno055.c ****  *  Parameter |    result
2109:Core/Src/bno055.c ****  *  --------- | -----------------
2110:Core/Src/bno055.c ****  *   w        | The quaternion w data
2111:Core/Src/bno055.c ****  *   x        | The quaternion x data
2112:Core/Src/bno055.c ****  *   y        | The quaternion y data
2113:Core/Src/bno055.c ****  *   z        | The quaternion z data
2114:Core/Src/bno055.c ****  *
2115:Core/Src/bno055.c ****  *
2116:Core/Src/bno055.c ****  *
2117:Core/Src/bno055.c ****  *  @return results of bus communication function
2118:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2119:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2120:Core/Src/bno055.c ****  *
2121:Core/Src/bno055.c ****  */
2122:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_wxyz(struct bno055_quaternion_t *quaternion)
2123:Core/Src/bno055.c **** {
 3661              		.loc 1 2123 1 is_stmt 1 view -0
 3662              		.cfi_startproc
 3663              		@ args = 0, pretend = 0, frame = 8
 3664              		@ frame_needed = 0, uses_anonymous_args = 0
 3665              		.loc 1 2123 1 is_stmt 0 view .LVU1049
 3666 0000 30B5     		push	{r4, r5, lr}
 3667              		.cfi_def_cfa_offset 12
 3668              		.cfi_offset 4, -12
 3669              		.cfi_offset 5, -8
ARM GAS  /tmp/ccOloYeZ.s 			page 107


 3670              		.cfi_offset 14, -4
 3671 0002 83B0     		sub	sp, sp, #12
 3672              		.cfi_def_cfa_offset 24
 3673 0004 0446     		mov	r4, r0
2124:Core/Src/bno055.c ****     /* Variable used to return value of
2125:Core/Src/bno055.c ****      * communication routine*/
2126:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3674              		.loc 1 2126 5 is_stmt 1 view .LVU1050
 3675              	.LVL369:
2127:Core/Src/bno055.c **** 
2128:Core/Src/bno055.c ****     /* Array holding the quaternion wxyz value
2129:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_LSB] - w->LSB
2130:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB] - w->MSB
2131:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_LSB] - x->LSB
2132:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB] - x->MSB
2133:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_LSB] - y->MSB
2134:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB] - y->MSB
2135:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_LSB] - z->MSB
2136:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB] - z->MSB
2137:Core/Src/bno055.c ****      */
2138:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_WXYZ_DATA_SIZE] = {
 3676              		.loc 1 2138 5 view .LVU1051
 3677              		.loc 1 2138 8 is_stmt 0 view .LVU1052
 3678 0006 214B     		ldr	r3, .L299
 3679 0008 93E80300 		ldm	r3, {r0, r1}
 3680              	.LVL370:
 3681              		.loc 1 2138 8 view .LVU1053
 3682 000c 02AB     		add	r3, sp, #8
 3683 000e 03E90300 		stmdb	r3, {r0, r1}
2139:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
2140:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
2141:Core/Src/bno055.c ****     };
2142:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3684              		.loc 1 2142 5 is_stmt 1 view .LVU1054
 3685              	.LVL371:
2143:Core/Src/bno055.c **** 
2144:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2145:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3686              		.loc 1 2145 5 view .LVU1055
 3687              		.loc 1 2145 18 is_stmt 0 view .LVU1056
 3688 0012 1F4B     		ldr	r3, .L299+4
 3689 0014 1B68     		ldr	r3, [r3]
 3690              		.loc 1 2145 8 view .LVU1057
 3691 0016 002B     		cmp	r3, #0
 3692 0018 31D0     		beq	.L295
2146:Core/Src/bno055.c ****     {
2147:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2148:Core/Src/bno055.c ****     }
2149:Core/Src/bno055.c ****     else
2150:Core/Src/bno055.c ****     {
2151:Core/Src/bno055.c ****         /*condition check for page, chip id is
2152:Core/Src/bno055.c ****          * available in the page zero*/
2153:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3693              		.loc 1 2153 9 is_stmt 1 view .LVU1058
 3694              		.loc 1 2153 21 is_stmt 0 view .LVU1059
 3695 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3696              		.loc 1 2153 12 view .LVU1060
ARM GAS  /tmp/ccOloYeZ.s 			page 108


 3697 001c 4BBB     		cbnz	r3, .L298
 3698              	.LVL372:
 3699              	.L293:
2154:Core/Src/bno055.c ****         {
2155:Core/Src/bno055.c ****             /* Write the page zero*/
2156:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2157:Core/Src/bno055.c ****         }
2158:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3700              		.loc 1 2158 53 discriminator 1 view .LVU1061
 3701 001e 1C4B     		ldr	r3, .L299+4
 3702 0020 1B68     		ldr	r3, [r3]
 3703 0022 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3704              		.loc 1 2158 41 discriminator 1 view .LVU1062
 3705 0024 73BB     		cbnz	r3, .L296
 3706              	.L294:
2159:Core/Src/bno055.c ****         {
2160:Core/Src/bno055.c ****             /* Read the eight byte value
2161:Core/Src/bno055.c ****              * of quaternion wxyz data*/
2162:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3707              		.loc 1 2162 13 is_stmt 1 view .LVU1063
 3708              		.loc 1 2162 32 is_stmt 0 view .LVU1064
 3709 0026 1A4B     		ldr	r3, .L299+4
 3710 0028 1868     		ldr	r0, [r3]
 3711 002a 0569     		ldr	r5, [r0, #16]
 3712              		.loc 1 2162 24 view .LVU1065
 3713 002c 0823     		movs	r3, #8
 3714 002e 6A46     		mov	r2, sp
 3715 0030 2021     		movs	r1, #32
 3716 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3717 0034 A847     		blx	r5
 3718              	.LVL373:
2163:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_W_LSB_VALUEW_REG,
2164:Core/Src/bno055.c ****                                                       data_u8,
2165:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_WXYZ_DATA_SIZE);
2166:Core/Src/bno055.c **** 
2167:Core/Src/bno055.c ****             /* Data W*/
2168:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_LSB] =
 3719              		.loc 1 2168 13 is_stmt 1 view .LVU1066
2169:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_LSB],
2170:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_W_LSB_VALUEW);
2171:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB] =
 3720              		.loc 1 2171 13 view .LVU1067
2172:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB],
2173:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_W_MSB_VALUEW);
2174:Core/Src/bno055.c ****             quaternion->w =
 3721              		.loc 1 2174 13 view .LVU1068
2175:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB])) << BNO055_SHI
 3722              		.loc 1 2175 31 is_stmt 0 view .LVU1069
 3723 0036 9DF90120 		ldrsb	r2, [sp, #1]
2176:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_LSB]));
 3724              		.loc 1 2176 31 view .LVU1070
 3725 003a 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
2175:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB])) << BNO055_SHI
 3726              		.loc 1 2175 17 view .LVU1071
 3727 003e 43EA0223 		orr	r3, r3, r2, lsl #8
2174:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB])) << BNO055_SHI
 3728              		.loc 1 2174 27 view .LVU1072
ARM GAS  /tmp/ccOloYeZ.s 			page 109


 3729 0042 2380     		strh	r3, [r4]	@ movhi
2177:Core/Src/bno055.c **** 
2178:Core/Src/bno055.c ****             /* Data X*/
2179:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_LSB] =
 3730              		.loc 1 2179 13 is_stmt 1 view .LVU1073
2180:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_LSB],
2181:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_X_LSB_VALUEX);
2182:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB] =
 3731              		.loc 1 2182 13 view .LVU1074
2183:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB],
2184:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_X_MSB_VALUEX);
2185:Core/Src/bno055.c ****             quaternion->x =
 3732              		.loc 1 2185 13 view .LVU1075
2186:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB])) << BNO055_SHI
 3733              		.loc 1 2186 31 is_stmt 0 view .LVU1076
 3734 0044 9DF90320 		ldrsb	r2, [sp, #3]
2187:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_LSB]));
 3735              		.loc 1 2187 31 view .LVU1077
 3736 0048 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
2186:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB])) << BNO055_SHI
 3737              		.loc 1 2186 17 view .LVU1078
 3738 004c 43EA0223 		orr	r3, r3, r2, lsl #8
2185:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB])) << BNO055_SHI
 3739              		.loc 1 2185 27 view .LVU1079
 3740 0050 6380     		strh	r3, [r4, #2]	@ movhi
2188:Core/Src/bno055.c **** 
2189:Core/Src/bno055.c ****             /* Data Y*/
2190:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_LSB] =
 3741              		.loc 1 2190 13 is_stmt 1 view .LVU1080
2191:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_LSB],
2192:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_Y_LSB_VALUEY);
2193:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB] =
 3742              		.loc 1 2193 13 view .LVU1081
2194:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB],
2195:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_Y_MSB_VALUEY);
2196:Core/Src/bno055.c ****             quaternion->y =
 3743              		.loc 1 2196 13 view .LVU1082
2197:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB])) << BNO055_SHI
 3744              		.loc 1 2197 31 is_stmt 0 view .LVU1083
 3745 0052 9DF90520 		ldrsb	r2, [sp, #5]
2198:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_LSB]));
 3746              		.loc 1 2198 31 view .LVU1084
 3747 0056 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2197:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB])) << BNO055_SHI
 3748              		.loc 1 2197 17 view .LVU1085
 3749 005a 43EA0223 		orr	r3, r3, r2, lsl #8
2196:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB])) << BNO055_SHI
 3750              		.loc 1 2196 27 view .LVU1086
 3751 005e A380     		strh	r3, [r4, #4]	@ movhi
2199:Core/Src/bno055.c **** 
2200:Core/Src/bno055.c ****             /* Data Z*/
2201:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_LSB] =
 3752              		.loc 1 2201 13 is_stmt 1 view .LVU1087
2202:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_LSB],
2203:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_Z_LSB_VALUEZ);
2204:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB] =
 3753              		.loc 1 2204 13 view .LVU1088
ARM GAS  /tmp/ccOloYeZ.s 			page 110


2205:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB],
2206:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_Z_MSB_VALUEZ);
2207:Core/Src/bno055.c ****             quaternion->z =
 3754              		.loc 1 2207 13 view .LVU1089
2208:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB])) << BNO055_SHI
 3755              		.loc 1 2208 31 is_stmt 0 view .LVU1090
 3756 0060 9DF90720 		ldrsb	r2, [sp, #7]
2209:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_LSB]));
 3757              		.loc 1 2209 31 view .LVU1091
 3758 0064 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
2208:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB])) << BNO055_SHI
 3759              		.loc 1 2208 17 view .LVU1092
 3760 0068 43EA0223 		orr	r3, r3, r2, lsl #8
2207:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB])) << BNO055_SHI
 3761              		.loc 1 2207 27 view .LVU1093
 3762 006c E380     		strh	r3, [r4, #6]	@ movhi
 3763              	.LVL374:
 3764              	.L292:
2210:Core/Src/bno055.c ****         }
2211:Core/Src/bno055.c ****         else
2212:Core/Src/bno055.c ****         {
2213:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2214:Core/Src/bno055.c ****         }
2215:Core/Src/bno055.c ****     }
2216:Core/Src/bno055.c **** 
2217:Core/Src/bno055.c ****     return com_rslt;
2218:Core/Src/bno055.c **** }
 3765              		.loc 1 2218 1 view .LVU1094
 3766 006e 03B0     		add	sp, sp, #12
 3767              		.cfi_remember_state
 3768              		.cfi_def_cfa_offset 12
 3769              		@ sp needed
 3770 0070 30BD     		pop	{r4, r5, pc}
 3771              	.LVL375:
 3772              	.L298:
 3773              		.cfi_restore_state
2156:Core/Src/bno055.c ****         }
 3774              		.loc 1 2156 13 is_stmt 1 view .LVU1095
2156:Core/Src/bno055.c ****         }
 3775              		.loc 1 2156 23 is_stmt 0 view .LVU1096
 3776 0072 0020     		movs	r0, #0
 3777 0074 FFF7FEFF 		bl	bno055_write_page_id
 3778              	.LVL376:
2158:Core/Src/bno055.c ****         {
 3779              		.loc 1 2158 9 is_stmt 1 view .LVU1097
2158:Core/Src/bno055.c ****         {
 3780              		.loc 1 2158 12 is_stmt 0 view .LVU1098
 3781 0078 0028     		cmp	r0, #0
 3782 007a D4D0     		beq	.L294
 3783 007c CFE7     		b	.L293
 3784              	.LVL377:
 3785              	.L295:
2147:Core/Src/bno055.c ****     }
 3786              		.loc 1 2147 16 view .LVU1099
 3787 007e 6FF07E00 		mvn	r0, #126
 3788 0082 F4E7     		b	.L292
 3789              	.LVL378:
ARM GAS  /tmp/ccOloYeZ.s 			page 111


 3790              	.L296:
2213:Core/Src/bno055.c ****         }
 3791              		.loc 1 2213 22 view .LVU1100
 3792 0084 4FF0FF30 		mov	r0, #-1
 3793 0088 F1E7     		b	.L292
 3794              	.L300:
 3795 008a 00BF     		.align	2
 3796              	.L299:
 3797 008c 08000000 		.word	.LANCHOR0+8
 3798 0090 00000000 		.word	p_bno055
 3799              		.cfi_endproc
 3800              	.LFE31:
 3802              		.section	.text.bno055_read_linear_accel_x,"ax",%progbits
 3803              		.align	1
 3804              		.global	bno055_read_linear_accel_x
 3805              		.syntax unified
 3806              		.thumb
 3807              		.thumb_func
 3809              	bno055_read_linear_accel_x:
 3810              	.LVL379:
 3811              	.LFB32:
2219:Core/Src/bno055.c **** 
2220:Core/Src/bno055.c **** /*!
2221:Core/Src/bno055.c ****  *  @brief This API reads Linear accel data x values
2222:Core/Src/bno055.c ****  *  from register 0x29 and 0x2A it is a two byte data
2223:Core/Src/bno055.c ****  *
2224:Core/Src/bno055.c ****  *  @param linear_accel_x_s16 : The raw x data
2225:Core/Src/bno055.c ****  *
2226:Core/Src/bno055.c ****  *  @return results of bus communication function
2227:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2228:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2229:Core/Src/bno055.c ****  *
2230:Core/Src/bno055.c ****  *
2231:Core/Src/bno055.c ****  */
2232:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_linear_accel_x(s16 *linear_accel_x_s16)
2233:Core/Src/bno055.c **** {
 3812              		.loc 1 2233 1 is_stmt 1 view -0
 3813              		.cfi_startproc
 3814              		@ args = 0, pretend = 0, frame = 8
 3815              		@ frame_needed = 0, uses_anonymous_args = 0
 3816              		.loc 1 2233 1 is_stmt 0 view .LVU1102
 3817 0000 30B5     		push	{r4, r5, lr}
 3818              		.cfi_def_cfa_offset 12
 3819              		.cfi_offset 4, -12
 3820              		.cfi_offset 5, -8
 3821              		.cfi_offset 14, -4
 3822 0002 83B0     		sub	sp, sp, #12
 3823              		.cfi_def_cfa_offset 24
2234:Core/Src/bno055.c ****     /* Variable used to return value of
2235:Core/Src/bno055.c ****      * communication routine*/
2236:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3824              		.loc 1 2236 5 is_stmt 1 view .LVU1103
 3825              	.LVL380:
2237:Core/Src/bno055.c **** 
2238:Core/Src/bno055.c ****     /* Array holding the linear accel x value
2239:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - x->LSB
2240:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - x->MSB
ARM GAS  /tmp/ccOloYeZ.s 			page 112


2241:Core/Src/bno055.c ****      */
2242:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3826              		.loc 1 2242 5 view .LVU1104
 3827              		.loc 1 2242 8 is_stmt 0 view .LVU1105
 3828 0004 0023     		movs	r3, #0
 3829 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2243:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3830              		.loc 1 2243 5 is_stmt 1 view .LVU1106
 3831              	.LVL381:
2244:Core/Src/bno055.c **** 
2245:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2246:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3832              		.loc 1 2246 5 view .LVU1107
 3833              		.loc 1 2246 18 is_stmt 0 view .LVU1108
 3834 000a 134B     		ldr	r3, .L309
 3835 000c 1B68     		ldr	r3, [r3]
 3836              		.loc 1 2246 8 view .LVU1109
 3837 000e EBB1     		cbz	r3, .L305
 3838 0010 0446     		mov	r4, r0
2247:Core/Src/bno055.c ****     {
2248:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2249:Core/Src/bno055.c ****     }
2250:Core/Src/bno055.c ****     else
2251:Core/Src/bno055.c ****     {
2252:Core/Src/bno055.c ****         /*condition check for page, chip id is
2253:Core/Src/bno055.c ****          * available in the page zero*/
2254:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3839              		.loc 1 2254 9 is_stmt 1 view .LVU1110
 3840              		.loc 1 2254 21 is_stmt 0 view .LVU1111
 3841 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3842              		.loc 1 2254 12 view .LVU1112
 3843 0014 A3B9     		cbnz	r3, .L308
 3844              	.LVL382:
 3845              	.L303:
2255:Core/Src/bno055.c ****         {
2256:Core/Src/bno055.c ****             /* Write the page zero*/
2257:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2258:Core/Src/bno055.c ****         }
2259:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3846              		.loc 1 2259 53 discriminator 1 view .LVU1113
 3847 0016 104B     		ldr	r3, .L309
 3848 0018 1B68     		ldr	r3, [r3]
 3849 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3850              		.loc 1 2259 41 discriminator 1 view .LVU1114
 3851 001c CBB9     		cbnz	r3, .L306
 3852              	.L304:
2260:Core/Src/bno055.c ****         {
2261:Core/Src/bno055.c ****             /* Read the two byte value
2262:Core/Src/bno055.c ****             * of linear accel x data*/
2263:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3853              		.loc 1 2263 13 is_stmt 1 view .LVU1115
 3854              		.loc 1 2263 32 is_stmt 0 view .LVU1116
 3855 001e 0E4B     		ldr	r3, .L309
 3856 0020 1868     		ldr	r0, [r3]
 3857 0022 0569     		ldr	r5, [r0, #16]
 3858              		.loc 1 2263 24 view .LVU1117
 3859 0024 0223     		movs	r3, #2
ARM GAS  /tmp/ccOloYeZ.s 			page 113


 3860 0026 01AA     		add	r2, sp, #4
 3861 0028 2821     		movs	r1, #40
 3862 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3863 002c A847     		blx	r5
 3864              	.LVL383:
2264:Core/Src/bno055.c ****                                                       BNO055_LINEAR_ACCEL_DATA_X_LSB_VALUEX_REG,
2265:Core/Src/bno055.c ****                                                       data_u8,
2266:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2267:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 3865              		.loc 1 2267 13 is_stmt 1 view .LVU1118
2268:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_X_LSB_VA
2269:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 3866              		.loc 1 2269 13 view .LVU1119
2270:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_X_MSB_VA
2271:Core/Src/bno055.c ****             *linear_accel_x_s16 =
 3867              		.loc 1 2271 13 view .LVU1120
2272:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 3868              		.loc 1 2272 31 is_stmt 0 view .LVU1121
 3869 002e 9DF90520 		ldrsb	r2, [sp, #5]
2273:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 3870              		.loc 1 2273 31 view .LVU1122
 3871 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2272:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 3872              		.loc 1 2272 17 view .LVU1123
 3873 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2271:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 3874              		.loc 1 2271 33 view .LVU1124
 3875 003a 2380     		strh	r3, [r4]	@ movhi
 3876              	.LVL384:
 3877              	.L302:
2274:Core/Src/bno055.c ****         }
2275:Core/Src/bno055.c ****         else
2276:Core/Src/bno055.c ****         {
2277:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2278:Core/Src/bno055.c ****         }
2279:Core/Src/bno055.c ****     }
2280:Core/Src/bno055.c **** 
2281:Core/Src/bno055.c ****     return com_rslt;
2282:Core/Src/bno055.c **** }
 3878              		.loc 1 2282 1 view .LVU1125
 3879 003c 03B0     		add	sp, sp, #12
 3880              		.cfi_remember_state
 3881              		.cfi_def_cfa_offset 12
 3882              		@ sp needed
 3883 003e 30BD     		pop	{r4, r5, pc}
 3884              	.LVL385:
 3885              	.L308:
 3886              		.cfi_restore_state
2257:Core/Src/bno055.c ****         }
 3887              		.loc 1 2257 13 is_stmt 1 view .LVU1126
2257:Core/Src/bno055.c ****         }
 3888              		.loc 1 2257 23 is_stmt 0 view .LVU1127
 3889 0040 0020     		movs	r0, #0
 3890              	.LVL386:
2257:Core/Src/bno055.c ****         }
 3891              		.loc 1 2257 23 view .LVU1128
 3892 0042 FFF7FEFF 		bl	bno055_write_page_id
ARM GAS  /tmp/ccOloYeZ.s 			page 114


 3893              	.LVL387:
2259:Core/Src/bno055.c ****         {
 3894              		.loc 1 2259 9 is_stmt 1 view .LVU1129
2259:Core/Src/bno055.c ****         {
 3895              		.loc 1 2259 12 is_stmt 0 view .LVU1130
 3896 0046 0028     		cmp	r0, #0
 3897 0048 E9D0     		beq	.L304
 3898 004a E4E7     		b	.L303
 3899              	.LVL388:
 3900              	.L305:
2248:Core/Src/bno055.c ****     }
 3901              		.loc 1 2248 16 view .LVU1131
 3902 004c 6FF07E00 		mvn	r0, #126
 3903              	.LVL389:
2248:Core/Src/bno055.c ****     }
 3904              		.loc 1 2248 16 view .LVU1132
 3905 0050 F4E7     		b	.L302
 3906              	.LVL390:
 3907              	.L306:
2277:Core/Src/bno055.c ****         }
 3908              		.loc 1 2277 22 view .LVU1133
 3909 0052 4FF0FF30 		mov	r0, #-1
 3910 0056 F1E7     		b	.L302
 3911              	.L310:
 3912              		.align	2
 3913              	.L309:
 3914 0058 00000000 		.word	p_bno055
 3915              		.cfi_endproc
 3916              	.LFE32:
 3918              		.section	.text.bno055_read_linear_accel_y,"ax",%progbits
 3919              		.align	1
 3920              		.global	bno055_read_linear_accel_y
 3921              		.syntax unified
 3922              		.thumb
 3923              		.thumb_func
 3925              	bno055_read_linear_accel_y:
 3926              	.LVL391:
 3927              	.LFB33:
2283:Core/Src/bno055.c **** 
2284:Core/Src/bno055.c **** /*!
2285:Core/Src/bno055.c ****  *  @brief This API reads Linear accel data x values
2286:Core/Src/bno055.c ****  *  from register 0x2B and 0x2C it is a two byte data
2287:Core/Src/bno055.c ****  *
2288:Core/Src/bno055.c ****  *  @param linear_accel_y_s16 : The raw y data
2289:Core/Src/bno055.c ****  *
2290:Core/Src/bno055.c ****  *  @return results of bus communication function
2291:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2292:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2293:Core/Src/bno055.c ****  *
2294:Core/Src/bno055.c ****  *
2295:Core/Src/bno055.c ****  */
2296:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_linear_accel_y(s16 *linear_accel_y_s16)
2297:Core/Src/bno055.c **** {
 3928              		.loc 1 2297 1 is_stmt 1 view -0
 3929              		.cfi_startproc
 3930              		@ args = 0, pretend = 0, frame = 8
 3931              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccOloYeZ.s 			page 115


 3932              		.loc 1 2297 1 is_stmt 0 view .LVU1135
 3933 0000 30B5     		push	{r4, r5, lr}
 3934              		.cfi_def_cfa_offset 12
 3935              		.cfi_offset 4, -12
 3936              		.cfi_offset 5, -8
 3937              		.cfi_offset 14, -4
 3938 0002 83B0     		sub	sp, sp, #12
 3939              		.cfi_def_cfa_offset 24
2298:Core/Src/bno055.c ****     /* Variable used to return value of
2299:Core/Src/bno055.c ****      * communication routine*/
2300:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3940              		.loc 1 2300 5 is_stmt 1 view .LVU1136
 3941              	.LVL392:
2301:Core/Src/bno055.c **** 
2302:Core/Src/bno055.c ****     /* Array holding the linear accel y value
2303:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - y->LSB
2304:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - y->MSB
2305:Core/Src/bno055.c ****      */
2306:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3942              		.loc 1 2306 5 view .LVU1137
 3943              		.loc 1 2306 8 is_stmt 0 view .LVU1138
 3944 0004 0023     		movs	r3, #0
 3945 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2307:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3946              		.loc 1 2307 5 is_stmt 1 view .LVU1139
 3947              	.LVL393:
2308:Core/Src/bno055.c **** 
2309:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2310:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3948              		.loc 1 2310 5 view .LVU1140
 3949              		.loc 1 2310 18 is_stmt 0 view .LVU1141
 3950 000a 134B     		ldr	r3, .L319
 3951 000c 1B68     		ldr	r3, [r3]
 3952              		.loc 1 2310 8 view .LVU1142
 3953 000e EBB1     		cbz	r3, .L315
 3954 0010 0446     		mov	r4, r0
2311:Core/Src/bno055.c ****     {
2312:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2313:Core/Src/bno055.c ****     }
2314:Core/Src/bno055.c ****     else
2315:Core/Src/bno055.c ****     {
2316:Core/Src/bno055.c ****         /*condition check for page, chip id is
2317:Core/Src/bno055.c ****          * available in the page zero*/
2318:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3955              		.loc 1 2318 9 is_stmt 1 view .LVU1143
 3956              		.loc 1 2318 21 is_stmt 0 view .LVU1144
 3957 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3958              		.loc 1 2318 12 view .LVU1145
 3959 0014 A3B9     		cbnz	r3, .L318
 3960              	.LVL394:
 3961              	.L313:
2319:Core/Src/bno055.c ****         {
2320:Core/Src/bno055.c ****             /* Write the page zero*/
2321:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2322:Core/Src/bno055.c ****         }
2323:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3962              		.loc 1 2323 53 discriminator 1 view .LVU1146
ARM GAS  /tmp/ccOloYeZ.s 			page 116


 3963 0016 104B     		ldr	r3, .L319
 3964 0018 1B68     		ldr	r3, [r3]
 3965 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3966              		.loc 1 2323 41 discriminator 1 view .LVU1147
 3967 001c CBB9     		cbnz	r3, .L316
 3968              	.L314:
2324:Core/Src/bno055.c ****         {
2325:Core/Src/bno055.c ****             /* Read the two byte value
2326:Core/Src/bno055.c ****             * of linear accel y data*/
2327:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3969              		.loc 1 2327 13 is_stmt 1 view .LVU1148
 3970              		.loc 1 2327 32 is_stmt 0 view .LVU1149
 3971 001e 0E4B     		ldr	r3, .L319
 3972 0020 1868     		ldr	r0, [r3]
 3973 0022 0569     		ldr	r5, [r0, #16]
 3974              		.loc 1 2327 24 view .LVU1150
 3975 0024 0223     		movs	r3, #2
 3976 0026 01AA     		add	r2, sp, #4
 3977 0028 2A21     		movs	r1, #42
 3978 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3979 002c A847     		blx	r5
 3980              	.LVL395:
2328:Core/Src/bno055.c ****                                                       BNO055_LINEAR_ACCEL_DATA_Y_LSB_VALUEY_REG,
2329:Core/Src/bno055.c ****                                                       data_u8,
2330:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2331:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 3981              		.loc 1 2331 13 is_stmt 1 view .LVU1151
2332:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_Y_LSB_VA
2333:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 3982              		.loc 1 2333 13 view .LVU1152
2334:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_Y_MSB_VA
2335:Core/Src/bno055.c ****             *linear_accel_y_s16 =
 3983              		.loc 1 2335 13 view .LVU1153
2336:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 3984              		.loc 1 2336 31 is_stmt 0 view .LVU1154
 3985 002e 9DF90520 		ldrsb	r2, [sp, #5]
2337:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 3986              		.loc 1 2337 31 view .LVU1155
 3987 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2336:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 3988              		.loc 1 2336 17 view .LVU1156
 3989 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2335:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 3990              		.loc 1 2335 33 view .LVU1157
 3991 003a 2380     		strh	r3, [r4]	@ movhi
 3992              	.LVL396:
 3993              	.L312:
2338:Core/Src/bno055.c ****         }
2339:Core/Src/bno055.c ****         else
2340:Core/Src/bno055.c ****         {
2341:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2342:Core/Src/bno055.c ****         }
2343:Core/Src/bno055.c ****     }
2344:Core/Src/bno055.c **** 
2345:Core/Src/bno055.c ****     return com_rslt;
2346:Core/Src/bno055.c **** }
 3994              		.loc 1 2346 1 view .LVU1158
ARM GAS  /tmp/ccOloYeZ.s 			page 117


 3995 003c 03B0     		add	sp, sp, #12
 3996              		.cfi_remember_state
 3997              		.cfi_def_cfa_offset 12
 3998              		@ sp needed
 3999 003e 30BD     		pop	{r4, r5, pc}
 4000              	.LVL397:
 4001              	.L318:
 4002              		.cfi_restore_state
2321:Core/Src/bno055.c ****         }
 4003              		.loc 1 2321 13 is_stmt 1 view .LVU1159
2321:Core/Src/bno055.c ****         }
 4004              		.loc 1 2321 23 is_stmt 0 view .LVU1160
 4005 0040 0020     		movs	r0, #0
 4006              	.LVL398:
2321:Core/Src/bno055.c ****         }
 4007              		.loc 1 2321 23 view .LVU1161
 4008 0042 FFF7FEFF 		bl	bno055_write_page_id
 4009              	.LVL399:
2323:Core/Src/bno055.c ****         {
 4010              		.loc 1 2323 9 is_stmt 1 view .LVU1162
2323:Core/Src/bno055.c ****         {
 4011              		.loc 1 2323 12 is_stmt 0 view .LVU1163
 4012 0046 0028     		cmp	r0, #0
 4013 0048 E9D0     		beq	.L314
 4014 004a E4E7     		b	.L313
 4015              	.LVL400:
 4016              	.L315:
2312:Core/Src/bno055.c ****     }
 4017              		.loc 1 2312 16 view .LVU1164
 4018 004c 6FF07E00 		mvn	r0, #126
 4019              	.LVL401:
2312:Core/Src/bno055.c ****     }
 4020              		.loc 1 2312 16 view .LVU1165
 4021 0050 F4E7     		b	.L312
 4022              	.LVL402:
 4023              	.L316:
2341:Core/Src/bno055.c ****         }
 4024              		.loc 1 2341 22 view .LVU1166
 4025 0052 4FF0FF30 		mov	r0, #-1
 4026 0056 F1E7     		b	.L312
 4027              	.L320:
 4028              		.align	2
 4029              	.L319:
 4030 0058 00000000 		.word	p_bno055
 4031              		.cfi_endproc
 4032              	.LFE33:
 4034              		.section	.text.bno055_read_linear_accel_z,"ax",%progbits
 4035              		.align	1
 4036              		.global	bno055_read_linear_accel_z
 4037              		.syntax unified
 4038              		.thumb
 4039              		.thumb_func
 4041              	bno055_read_linear_accel_z:
 4042              	.LVL403:
 4043              	.LFB34:
2347:Core/Src/bno055.c **** 
2348:Core/Src/bno055.c **** /*!
ARM GAS  /tmp/ccOloYeZ.s 			page 118


2349:Core/Src/bno055.c ****  *  @brief This API reads Linear accel data x values
2350:Core/Src/bno055.c ****  *  from register 0x2C and 0x2D it is a two byte data
2351:Core/Src/bno055.c ****  *
2352:Core/Src/bno055.c ****  *  @param linear_accel_z_s16 : The raw z data
2353:Core/Src/bno055.c ****  *
2354:Core/Src/bno055.c ****  *  @return results of bus communication function
2355:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2356:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2357:Core/Src/bno055.c ****  *
2358:Core/Src/bno055.c ****  *
2359:Core/Src/bno055.c ****  */
2360:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_linear_accel_z(s16 *linear_accel_z_s16)
2361:Core/Src/bno055.c **** {
 4044              		.loc 1 2361 1 is_stmt 1 view -0
 4045              		.cfi_startproc
 4046              		@ args = 0, pretend = 0, frame = 8
 4047              		@ frame_needed = 0, uses_anonymous_args = 0
 4048              		.loc 1 2361 1 is_stmt 0 view .LVU1168
 4049 0000 30B5     		push	{r4, r5, lr}
 4050              		.cfi_def_cfa_offset 12
 4051              		.cfi_offset 4, -12
 4052              		.cfi_offset 5, -8
 4053              		.cfi_offset 14, -4
 4054 0002 83B0     		sub	sp, sp, #12
 4055              		.cfi_def_cfa_offset 24
2362:Core/Src/bno055.c ****     /* Variable used to return value of
2363:Core/Src/bno055.c ****      * communication routine*/
2364:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4056              		.loc 1 2364 5 is_stmt 1 view .LVU1169
 4057              	.LVL404:
2365:Core/Src/bno055.c **** 
2366:Core/Src/bno055.c ****     /* Array holding the linear accel z value
2367:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - z->LSB
2368:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - z->MSB
2369:Core/Src/bno055.c ****      */
2370:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 4058              		.loc 1 2370 5 view .LVU1170
 4059              		.loc 1 2370 8 is_stmt 0 view .LVU1171
 4060 0004 0023     		movs	r3, #0
 4061 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2371:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4062              		.loc 1 2371 5 is_stmt 1 view .LVU1172
 4063              	.LVL405:
2372:Core/Src/bno055.c **** 
2373:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2374:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4064              		.loc 1 2374 5 view .LVU1173
 4065              		.loc 1 2374 18 is_stmt 0 view .LVU1174
 4066 000a 134B     		ldr	r3, .L329
 4067 000c 1B68     		ldr	r3, [r3]
 4068              		.loc 1 2374 8 view .LVU1175
 4069 000e EBB1     		cbz	r3, .L325
 4070 0010 0446     		mov	r4, r0
2375:Core/Src/bno055.c ****     {
2376:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2377:Core/Src/bno055.c ****     }
2378:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccOloYeZ.s 			page 119


2379:Core/Src/bno055.c ****     {
2380:Core/Src/bno055.c ****         /*condition check for page, chip id is
2381:Core/Src/bno055.c ****          * available in the page zero*/
2382:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4071              		.loc 1 2382 9 is_stmt 1 view .LVU1176
 4072              		.loc 1 2382 21 is_stmt 0 view .LVU1177
 4073 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4074              		.loc 1 2382 12 view .LVU1178
 4075 0014 A3B9     		cbnz	r3, .L328
 4076              	.LVL406:
 4077              	.L323:
2383:Core/Src/bno055.c ****         {
2384:Core/Src/bno055.c ****             /* Write the page zero*/
2385:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2386:Core/Src/bno055.c ****         }
2387:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4078              		.loc 1 2387 53 discriminator 1 view .LVU1179
 4079 0016 104B     		ldr	r3, .L329
 4080 0018 1B68     		ldr	r3, [r3]
 4081 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4082              		.loc 1 2387 41 discriminator 1 view .LVU1180
 4083 001c CBB9     		cbnz	r3, .L326
 4084              	.L324:
2388:Core/Src/bno055.c ****         {
2389:Core/Src/bno055.c ****             /* Read the two byte value
2390:Core/Src/bno055.c ****             * of linear accel z data*/
2391:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4085              		.loc 1 2391 13 is_stmt 1 view .LVU1181
 4086              		.loc 1 2391 32 is_stmt 0 view .LVU1182
 4087 001e 0E4B     		ldr	r3, .L329
 4088 0020 1868     		ldr	r0, [r3]
 4089 0022 0569     		ldr	r5, [r0, #16]
 4090              		.loc 1 2391 24 view .LVU1183
 4091 0024 0223     		movs	r3, #2
 4092 0026 01AA     		add	r2, sp, #4
 4093 0028 2C21     		movs	r1, #44
 4094 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4095 002c A847     		blx	r5
 4096              	.LVL407:
2392:Core/Src/bno055.c ****                                                       BNO055_LINEAR_ACCEL_DATA_Z_LSB_VALUEZ_REG,
2393:Core/Src/bno055.c ****                                                       data_u8,
2394:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2395:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4097              		.loc 1 2395 13 is_stmt 1 view .LVU1184
2396:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_Z_LSB_VA
2397:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 4098              		.loc 1 2397 13 view .LVU1185
2398:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_Z_MSB_VA
2399:Core/Src/bno055.c ****             *linear_accel_z_s16 =
 4099              		.loc 1 2399 13 view .LVU1186
2400:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4100              		.loc 1 2400 31 is_stmt 0 view .LVU1187
 4101 002e 9DF90520 		ldrsb	r2, [sp, #5]
2401:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4102              		.loc 1 2401 31 view .LVU1188
 4103 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2400:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
ARM GAS  /tmp/ccOloYeZ.s 			page 120


 4104              		.loc 1 2400 17 view .LVU1189
 4105 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2399:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4106              		.loc 1 2399 33 view .LVU1190
 4107 003a 2380     		strh	r3, [r4]	@ movhi
 4108              	.LVL408:
 4109              	.L322:
2402:Core/Src/bno055.c ****         }
2403:Core/Src/bno055.c ****         else
2404:Core/Src/bno055.c ****         {
2405:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2406:Core/Src/bno055.c ****         }
2407:Core/Src/bno055.c ****     }
2408:Core/Src/bno055.c **** 
2409:Core/Src/bno055.c ****     return com_rslt;
2410:Core/Src/bno055.c **** }
 4110              		.loc 1 2410 1 view .LVU1191
 4111 003c 03B0     		add	sp, sp, #12
 4112              		.cfi_remember_state
 4113              		.cfi_def_cfa_offset 12
 4114              		@ sp needed
 4115 003e 30BD     		pop	{r4, r5, pc}
 4116              	.LVL409:
 4117              	.L328:
 4118              		.cfi_restore_state
2385:Core/Src/bno055.c ****         }
 4119              		.loc 1 2385 13 is_stmt 1 view .LVU1192
2385:Core/Src/bno055.c ****         }
 4120              		.loc 1 2385 23 is_stmt 0 view .LVU1193
 4121 0040 0020     		movs	r0, #0
 4122              	.LVL410:
2385:Core/Src/bno055.c ****         }
 4123              		.loc 1 2385 23 view .LVU1194
 4124 0042 FFF7FEFF 		bl	bno055_write_page_id
 4125              	.LVL411:
2387:Core/Src/bno055.c ****         {
 4126              		.loc 1 2387 9 is_stmt 1 view .LVU1195
2387:Core/Src/bno055.c ****         {
 4127              		.loc 1 2387 12 is_stmt 0 view .LVU1196
 4128 0046 0028     		cmp	r0, #0
 4129 0048 E9D0     		beq	.L324
 4130 004a E4E7     		b	.L323
 4131              	.LVL412:
 4132              	.L325:
2376:Core/Src/bno055.c ****     }
 4133              		.loc 1 2376 16 view .LVU1197
 4134 004c 6FF07E00 		mvn	r0, #126
 4135              	.LVL413:
2376:Core/Src/bno055.c ****     }
 4136              		.loc 1 2376 16 view .LVU1198
 4137 0050 F4E7     		b	.L322
 4138              	.LVL414:
 4139              	.L326:
2405:Core/Src/bno055.c ****         }
 4140              		.loc 1 2405 22 view .LVU1199
 4141 0052 4FF0FF30 		mov	r0, #-1
 4142 0056 F1E7     		b	.L322
ARM GAS  /tmp/ccOloYeZ.s 			page 121


 4143              	.L330:
 4144              		.align	2
 4145              	.L329:
 4146 0058 00000000 		.word	p_bno055
 4147              		.cfi_endproc
 4148              	.LFE34:
 4150              		.section	.text.bno055_read_linear_accel_xyz,"ax",%progbits
 4151              		.align	1
 4152              		.global	bno055_read_linear_accel_xyz
 4153              		.syntax unified
 4154              		.thumb
 4155              		.thumb_func
 4157              	bno055_read_linear_accel_xyz:
 4158              	.LVL415:
 4159              	.LFB35:
2411:Core/Src/bno055.c **** 
2412:Core/Src/bno055.c **** /*!
2413:Core/Src/bno055.c ****  *  @brief This API reads Linear accel data xyz values
2414:Core/Src/bno055.c ****  *  from register 0x28 to 0x2D it is a six byte data
2415:Core/Src/bno055.c ****  *
2416:Core/Src/bno055.c ****  *
2417:Core/Src/bno055.c ****  *  @param linear_accel : The value of linear accel xyz data's
2418:Core/Src/bno055.c ****  *
2419:Core/Src/bno055.c ****  *  Parameter |    result
2420:Core/Src/bno055.c ****  *  --------- | -----------------
2421:Core/Src/bno055.c ****  *   x        | The linear accel x data
2422:Core/Src/bno055.c ****  *   y        | The linear accel y data
2423:Core/Src/bno055.c ****  *   z        | The linear accel z data
2424:Core/Src/bno055.c ****  *
2425:Core/Src/bno055.c ****  *
2426:Core/Src/bno055.c ****  *  @return results of bus communication function
2427:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2428:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2429:Core/Src/bno055.c ****  */
2430:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_linear_accel_xyz(struct bno055_linear_accel_t *linear_accel
2431:Core/Src/bno055.c **** {
 4160              		.loc 1 2431 1 is_stmt 1 view -0
 4161              		.cfi_startproc
 4162              		@ args = 0, pretend = 0, frame = 8
 4163              		@ frame_needed = 0, uses_anonymous_args = 0
 4164              		.loc 1 2431 1 is_stmt 0 view .LVU1201
 4165 0000 30B5     		push	{r4, r5, lr}
 4166              		.cfi_def_cfa_offset 12
 4167              		.cfi_offset 4, -12
 4168              		.cfi_offset 5, -8
 4169              		.cfi_offset 14, -4
 4170 0002 83B0     		sub	sp, sp, #12
 4171              		.cfi_def_cfa_offset 24
 4172 0004 0446     		mov	r4, r0
2432:Core/Src/bno055.c ****     /* Variable used to return value of
2433:Core/Src/bno055.c ****      * communication routine*/
2434:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4173              		.loc 1 2434 5 is_stmt 1 view .LVU1202
 4174              	.LVL416:
2435:Core/Src/bno055.c **** 
2436:Core/Src/bno055.c ****     /* Array holding the linear accel xyz value
2437:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
ARM GAS  /tmp/ccOloYeZ.s 			page 122


2438:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
2439:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
2440:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
2441:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
2442:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
2443:Core/Src/bno055.c ****      */
2444:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_XYZ_DATA_SIZE] = {
 4175              		.loc 1 2444 5 view .LVU1203
 4176              		.loc 1 2444 8 is_stmt 0 view .LVU1204
 4177 0006 1D4B     		ldr	r3, .L339
 4178 0008 93E80300 		ldm	r3, {r0, r1}
 4179              	.LVL417:
 4180              		.loc 1 2444 8 view .LVU1205
 4181 000c 0090     		str	r0, [sp]
 4182 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
2445:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
2446:Core/Src/bno055.c ****     };
2447:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4183              		.loc 1 2447 5 is_stmt 1 view .LVU1206
 4184              	.LVL418:
2448:Core/Src/bno055.c **** 
2449:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2450:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4185              		.loc 1 2450 5 view .LVU1207
 4186              		.loc 1 2450 18 is_stmt 0 view .LVU1208
 4187 0012 1B4B     		ldr	r3, .L339+4
 4188 0014 1B68     		ldr	r3, [r3]
 4189              		.loc 1 2450 8 view .LVU1209
 4190 0016 53B3     		cbz	r3, .L335
2451:Core/Src/bno055.c ****     {
2452:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2453:Core/Src/bno055.c ****     }
2454:Core/Src/bno055.c ****     else
2455:Core/Src/bno055.c ****     {
2456:Core/Src/bno055.c ****         /*condition check for page, chip id is
2457:Core/Src/bno055.c ****          * available in the page zero*/
2458:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4191              		.loc 1 2458 9 is_stmt 1 view .LVU1210
 4192              		.loc 1 2458 21 is_stmt 0 view .LVU1211
 4193 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4194              		.loc 1 2458 12 view .LVU1212
 4195 001a 13BB     		cbnz	r3, .L338
 4196              	.LVL419:
 4197              	.L333:
2459:Core/Src/bno055.c ****         {
2460:Core/Src/bno055.c ****             /* Write the page zero*/
2461:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2462:Core/Src/bno055.c ****         }
2463:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4198              		.loc 1 2463 53 discriminator 1 view .LVU1213
 4199 001c 184B     		ldr	r3, .L339+4
 4200 001e 1B68     		ldr	r3, [r3]
 4201 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4202              		.loc 1 2463 41 discriminator 1 view .LVU1214
 4203 0022 3BBB     		cbnz	r3, .L336
 4204              	.L334:
2464:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccOloYeZ.s 			page 123


2465:Core/Src/bno055.c ****             /* Read the six byte value
2466:Core/Src/bno055.c ****              *  of linear accel xyz data*/
2467:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4205              		.loc 1 2467 13 is_stmt 1 view .LVU1215
 4206              		.loc 1 2467 32 is_stmt 0 view .LVU1216
 4207 0024 164B     		ldr	r3, .L339+4
 4208 0026 1868     		ldr	r0, [r3]
 4209 0028 0569     		ldr	r5, [r0, #16]
 4210              		.loc 1 2467 24 view .LVU1217
 4211 002a 0623     		movs	r3, #6
 4212 002c 6A46     		mov	r2, sp
 4213 002e 2821     		movs	r1, #40
 4214 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4215 0032 A847     		blx	r5
 4216              	.LVL420:
2468:Core/Src/bno055.c ****                                                       BNO055_LINEAR_ACCEL_DATA_X_LSB_VALUEX_REG,
2469:Core/Src/bno055.c ****                                                       data_u8,
2470:Core/Src/bno055.c ****                                                       BNO055_ACCEL_XYZ_DATA_SIZE);
2471:Core/Src/bno055.c **** 
2472:Core/Src/bno055.c ****             /* Data x*/
2473:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4217              		.loc 1 2473 13 is_stmt 1 view .LVU1218
2474:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_X_
2475:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4218              		.loc 1 2475 13 view .LVU1219
2476:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_X_
2477:Core/Src/bno055.c ****             linear_accel->x =
 4219              		.loc 1 2477 13 view .LVU1220
2478:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4220              		.loc 1 2478 31 is_stmt 0 view .LVU1221
 4221 0034 9DF90120 		ldrsb	r2, [sp, #1]
2479:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 4222              		.loc 1 2479 31 view .LVU1222
 4223 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
2478:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4224              		.loc 1 2478 17 view .LVU1223
 4225 003c 43EA0223 		orr	r3, r3, r2, lsl #8
2477:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4226              		.loc 1 2477 29 view .LVU1224
 4227 0040 2380     		strh	r3, [r4]	@ movhi
2480:Core/Src/bno055.c **** 
2481:Core/Src/bno055.c ****             /* Data y*/
2482:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4228              		.loc 1 2482 13 is_stmt 1 view .LVU1225
2483:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_Y_
2484:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4229              		.loc 1 2484 13 view .LVU1226
2485:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_Y_
2486:Core/Src/bno055.c ****             linear_accel->y =
 4230              		.loc 1 2486 13 view .LVU1227
2487:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4231              		.loc 1 2487 31 is_stmt 0 view .LVU1228
 4232 0042 9DF90320 		ldrsb	r2, [sp, #3]
2488:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 4233              		.loc 1 2488 31 view .LVU1229
 4234 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
2487:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
ARM GAS  /tmp/ccOloYeZ.s 			page 124


 4235              		.loc 1 2487 17 view .LVU1230
 4236 004a 43EA0223 		orr	r3, r3, r2, lsl #8
2486:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4237              		.loc 1 2486 29 view .LVU1231
 4238 004e 6380     		strh	r3, [r4, #2]	@ movhi
2489:Core/Src/bno055.c **** 
2490:Core/Src/bno055.c ****             /* Data z*/
2491:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4239              		.loc 1 2491 13 is_stmt 1 view .LVU1232
2492:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_Z_
2493:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4240              		.loc 1 2493 13 view .LVU1233
2494:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_Z_
2495:Core/Src/bno055.c ****             linear_accel->z =
 4241              		.loc 1 2495 13 view .LVU1234
2496:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4242              		.loc 1 2496 31 is_stmt 0 view .LVU1235
 4243 0050 9DF90520 		ldrsb	r2, [sp, #5]
2497:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 4244              		.loc 1 2497 31 view .LVU1236
 4245 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2496:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4246              		.loc 1 2496 17 view .LVU1237
 4247 0058 43EA0223 		orr	r3, r3, r2, lsl #8
2495:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4248              		.loc 1 2495 29 view .LVU1238
 4249 005c A380     		strh	r3, [r4, #4]	@ movhi
 4250              	.LVL421:
 4251              	.L332:
2498:Core/Src/bno055.c ****         }
2499:Core/Src/bno055.c ****         else
2500:Core/Src/bno055.c ****         {
2501:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2502:Core/Src/bno055.c ****         }
2503:Core/Src/bno055.c ****     }
2504:Core/Src/bno055.c **** 
2505:Core/Src/bno055.c ****     return com_rslt;
2506:Core/Src/bno055.c **** }
 4252              		.loc 1 2506 1 view .LVU1239
 4253 005e 03B0     		add	sp, sp, #12
 4254              		.cfi_remember_state
 4255              		.cfi_def_cfa_offset 12
 4256              		@ sp needed
 4257 0060 30BD     		pop	{r4, r5, pc}
 4258              	.LVL422:
 4259              	.L338:
 4260              		.cfi_restore_state
2461:Core/Src/bno055.c ****         }
 4261              		.loc 1 2461 13 is_stmt 1 view .LVU1240
2461:Core/Src/bno055.c ****         }
 4262              		.loc 1 2461 23 is_stmt 0 view .LVU1241
 4263 0062 0020     		movs	r0, #0
 4264 0064 FFF7FEFF 		bl	bno055_write_page_id
 4265              	.LVL423:
2463:Core/Src/bno055.c ****         {
 4266              		.loc 1 2463 9 is_stmt 1 view .LVU1242
2463:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccOloYeZ.s 			page 125


 4267              		.loc 1 2463 12 is_stmt 0 view .LVU1243
 4268 0068 0028     		cmp	r0, #0
 4269 006a DBD0     		beq	.L334
 4270 006c D6E7     		b	.L333
 4271              	.LVL424:
 4272              	.L335:
2452:Core/Src/bno055.c ****     }
 4273              		.loc 1 2452 16 view .LVU1244
 4274 006e 6FF07E00 		mvn	r0, #126
 4275 0072 F4E7     		b	.L332
 4276              	.LVL425:
 4277              	.L336:
2501:Core/Src/bno055.c ****         }
 4278              		.loc 1 2501 22 view .LVU1245
 4279 0074 4FF0FF30 		mov	r0, #-1
 4280 0078 F1E7     		b	.L332
 4281              	.L340:
 4282 007a 00BF     		.align	2
 4283              	.L339:
 4284 007c 00000000 		.word	.LANCHOR0
 4285 0080 00000000 		.word	p_bno055
 4286              		.cfi_endproc
 4287              	.LFE35:
 4289              		.section	.text.bno055_read_gravity_x,"ax",%progbits
 4290              		.align	1
 4291              		.global	bno055_read_gravity_x
 4292              		.syntax unified
 4293              		.thumb
 4294              		.thumb_func
 4296              	bno055_read_gravity_x:
 4297              	.LVL426:
 4298              	.LFB36:
2507:Core/Src/bno055.c **** 
2508:Core/Src/bno055.c **** /*!
2509:Core/Src/bno055.c ****  *  @brief This API reads gravity data x values
2510:Core/Src/bno055.c ****  *  from register 0x2E and 0x2F it is a two byte data
2511:Core/Src/bno055.c ****  *
2512:Core/Src/bno055.c ****  *  @param gravity_x_s16 : The raw x data
2513:Core/Src/bno055.c ****  *
2514:Core/Src/bno055.c ****  *  @return results of bus communication function
2515:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2516:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2517:Core/Src/bno055.c ****  *
2518:Core/Src/bno055.c ****  *
2519:Core/Src/bno055.c ****  */
2520:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gravity_x(s16 *gravity_x_s16)
2521:Core/Src/bno055.c **** {
 4299              		.loc 1 2521 1 is_stmt 1 view -0
 4300              		.cfi_startproc
 4301              		@ args = 0, pretend = 0, frame = 8
 4302              		@ frame_needed = 0, uses_anonymous_args = 0
 4303              		.loc 1 2521 1 is_stmt 0 view .LVU1247
 4304 0000 30B5     		push	{r4, r5, lr}
 4305              		.cfi_def_cfa_offset 12
 4306              		.cfi_offset 4, -12
 4307              		.cfi_offset 5, -8
 4308              		.cfi_offset 14, -4
ARM GAS  /tmp/ccOloYeZ.s 			page 126


 4309 0002 83B0     		sub	sp, sp, #12
 4310              		.cfi_def_cfa_offset 24
2522:Core/Src/bno055.c ****     /* Variable used to return value of
2523:Core/Src/bno055.c ****      * communication routine*/
2524:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4311              		.loc 1 2524 5 is_stmt 1 view .LVU1248
 4312              	.LVL427:
2525:Core/Src/bno055.c **** 
2526:Core/Src/bno055.c ****     /* Array holding the gravity x value
2527:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - x->LSB
2528:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - x->MSB
2529:Core/Src/bno055.c ****      */
2530:Core/Src/bno055.c ****     u8 data_u8[BNO055_GRAVITY_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 4313              		.loc 1 2530 5 view .LVU1249
 4314              		.loc 1 2530 8 is_stmt 0 view .LVU1250
 4315 0004 0023     		movs	r3, #0
 4316 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2531:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4317              		.loc 1 2531 5 is_stmt 1 view .LVU1251
 4318              	.LVL428:
2532:Core/Src/bno055.c **** 
2533:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2534:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4319              		.loc 1 2534 5 view .LVU1252
 4320              		.loc 1 2534 18 is_stmt 0 view .LVU1253
 4321 000a 134B     		ldr	r3, .L349
 4322 000c 1B68     		ldr	r3, [r3]
 4323              		.loc 1 2534 8 view .LVU1254
 4324 000e EBB1     		cbz	r3, .L345
 4325 0010 0446     		mov	r4, r0
2535:Core/Src/bno055.c ****     {
2536:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2537:Core/Src/bno055.c ****     }
2538:Core/Src/bno055.c ****     else
2539:Core/Src/bno055.c ****     {
2540:Core/Src/bno055.c ****         /*condition check for page, chip id is
2541:Core/Src/bno055.c ****          * available in the page zero*/
2542:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4326              		.loc 1 2542 9 is_stmt 1 view .LVU1255
 4327              		.loc 1 2542 21 is_stmt 0 view .LVU1256
 4328 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4329              		.loc 1 2542 12 view .LVU1257
 4330 0014 A3B9     		cbnz	r3, .L348
 4331              	.LVL429:
 4332              	.L343:
2543:Core/Src/bno055.c ****         {
2544:Core/Src/bno055.c ****             /* Write the page zero*/
2545:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2546:Core/Src/bno055.c ****         }
2547:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4333              		.loc 1 2547 53 discriminator 1 view .LVU1258
 4334 0016 104B     		ldr	r3, .L349
 4335 0018 1B68     		ldr	r3, [r3]
 4336 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4337              		.loc 1 2547 41 discriminator 1 view .LVU1259
 4338 001c CBB9     		cbnz	r3, .L346
 4339              	.L344:
ARM GAS  /tmp/ccOloYeZ.s 			page 127


2548:Core/Src/bno055.c ****         {
2549:Core/Src/bno055.c ****             /* Read the two byte value
2550:Core/Src/bno055.c ****              * of gravity x data*/
2551:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4340              		.loc 1 2551 13 is_stmt 1 view .LVU1260
 4341              		.loc 1 2551 32 is_stmt 0 view .LVU1261
 4342 001e 0E4B     		ldr	r3, .L349
 4343 0020 1868     		ldr	r0, [r3]
 4344 0022 0569     		ldr	r5, [r0, #16]
 4345              		.loc 1 2551 24 view .LVU1262
 4346 0024 0223     		movs	r3, #2
 4347 0026 01AA     		add	r2, sp, #4
 4348 0028 2E21     		movs	r1, #46
 4349 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4350 002c A847     		blx	r5
 4351              	.LVL430:
2552:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_DATA_X_LSB_VALUEX_REG,
2553:Core/Src/bno055.c ****                                                       data_u8,
2554:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2555:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4352              		.loc 1 2555 13 is_stmt 1 view .LVU1263
2556:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_X_LSB_VALUEX)
2557:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 4353              		.loc 1 2557 13 view .LVU1264
2558:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_X_MSB_VALUEX)
2559:Core/Src/bno055.c ****             *gravity_x_s16 =
 4354              		.loc 1 2559 13 view .LVU1265
2560:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4355              		.loc 1 2560 31 is_stmt 0 view .LVU1266
 4356 002e 9DF90520 		ldrsb	r2, [sp, #5]
2561:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4357              		.loc 1 2561 31 view .LVU1267
 4358 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2560:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4359              		.loc 1 2560 17 view .LVU1268
 4360 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2559:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4361              		.loc 1 2559 28 view .LVU1269
 4362 003a 2380     		strh	r3, [r4]	@ movhi
 4363              	.LVL431:
 4364              	.L342:
2562:Core/Src/bno055.c ****         }
2563:Core/Src/bno055.c ****         else
2564:Core/Src/bno055.c ****         {
2565:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2566:Core/Src/bno055.c ****         }
2567:Core/Src/bno055.c ****     }
2568:Core/Src/bno055.c **** 
2569:Core/Src/bno055.c ****     return com_rslt;
2570:Core/Src/bno055.c **** }
 4365              		.loc 1 2570 1 view .LVU1270
 4366 003c 03B0     		add	sp, sp, #12
 4367              		.cfi_remember_state
 4368              		.cfi_def_cfa_offset 12
 4369              		@ sp needed
 4370 003e 30BD     		pop	{r4, r5, pc}
 4371              	.LVL432:
ARM GAS  /tmp/ccOloYeZ.s 			page 128


 4372              	.L348:
 4373              		.cfi_restore_state
2545:Core/Src/bno055.c ****         }
 4374              		.loc 1 2545 13 is_stmt 1 view .LVU1271
2545:Core/Src/bno055.c ****         }
 4375              		.loc 1 2545 23 is_stmt 0 view .LVU1272
 4376 0040 0020     		movs	r0, #0
 4377              	.LVL433:
2545:Core/Src/bno055.c ****         }
 4378              		.loc 1 2545 23 view .LVU1273
 4379 0042 FFF7FEFF 		bl	bno055_write_page_id
 4380              	.LVL434:
2547:Core/Src/bno055.c ****         {
 4381              		.loc 1 2547 9 is_stmt 1 view .LVU1274
2547:Core/Src/bno055.c ****         {
 4382              		.loc 1 2547 12 is_stmt 0 view .LVU1275
 4383 0046 0028     		cmp	r0, #0
 4384 0048 E9D0     		beq	.L344
 4385 004a E4E7     		b	.L343
 4386              	.LVL435:
 4387              	.L345:
2536:Core/Src/bno055.c ****     }
 4388              		.loc 1 2536 16 view .LVU1276
 4389 004c 6FF07E00 		mvn	r0, #126
 4390              	.LVL436:
2536:Core/Src/bno055.c ****     }
 4391              		.loc 1 2536 16 view .LVU1277
 4392 0050 F4E7     		b	.L342
 4393              	.LVL437:
 4394              	.L346:
2565:Core/Src/bno055.c ****         }
 4395              		.loc 1 2565 22 view .LVU1278
 4396 0052 4FF0FF30 		mov	r0, #-1
 4397 0056 F1E7     		b	.L342
 4398              	.L350:
 4399              		.align	2
 4400              	.L349:
 4401 0058 00000000 		.word	p_bno055
 4402              		.cfi_endproc
 4403              	.LFE36:
 4405              		.section	.text.bno055_read_gravity_y,"ax",%progbits
 4406              		.align	1
 4407              		.global	bno055_read_gravity_y
 4408              		.syntax unified
 4409              		.thumb
 4410              		.thumb_func
 4412              	bno055_read_gravity_y:
 4413              	.LVL438:
 4414              	.LFB37:
2571:Core/Src/bno055.c **** 
2572:Core/Src/bno055.c **** /*!
2573:Core/Src/bno055.c ****  *  @brief This API reads gravity data y values
2574:Core/Src/bno055.c ****  *  from register 0x30 and 0x31 it is a two byte data
2575:Core/Src/bno055.c ****  *
2576:Core/Src/bno055.c ****  *  @param gravity_y_s16 : The raw y data
2577:Core/Src/bno055.c ****  *
2578:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/ccOloYeZ.s 			page 129


2579:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2580:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2581:Core/Src/bno055.c ****  *
2582:Core/Src/bno055.c ****  *
2583:Core/Src/bno055.c ****  */
2584:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gravity_y(s16 *gravity_y_s16)
2585:Core/Src/bno055.c **** {
 4415              		.loc 1 2585 1 is_stmt 1 view -0
 4416              		.cfi_startproc
 4417              		@ args = 0, pretend = 0, frame = 8
 4418              		@ frame_needed = 0, uses_anonymous_args = 0
 4419              		.loc 1 2585 1 is_stmt 0 view .LVU1280
 4420 0000 30B5     		push	{r4, r5, lr}
 4421              		.cfi_def_cfa_offset 12
 4422              		.cfi_offset 4, -12
 4423              		.cfi_offset 5, -8
 4424              		.cfi_offset 14, -4
 4425 0002 83B0     		sub	sp, sp, #12
 4426              		.cfi_def_cfa_offset 24
2586:Core/Src/bno055.c ****     /* Variable used to return value of
2587:Core/Src/bno055.c ****      * communication routine*/
2588:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4427              		.loc 1 2588 5 is_stmt 1 view .LVU1281
 4428              	.LVL439:
2589:Core/Src/bno055.c **** 
2590:Core/Src/bno055.c ****     /* Array holding the gravity y value
2591:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - y->LSB
2592:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - y->MSB
2593:Core/Src/bno055.c ****      */
2594:Core/Src/bno055.c ****     u8 data_u8[BNO055_GRAVITY_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 4429              		.loc 1 2594 5 view .LVU1282
 4430              		.loc 1 2594 8 is_stmt 0 view .LVU1283
 4431 0004 0023     		movs	r3, #0
 4432 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2595:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4433              		.loc 1 2595 5 is_stmt 1 view .LVU1284
 4434              	.LVL440:
2596:Core/Src/bno055.c **** 
2597:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2598:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4435              		.loc 1 2598 5 view .LVU1285
 4436              		.loc 1 2598 18 is_stmt 0 view .LVU1286
 4437 000a 134B     		ldr	r3, .L359
 4438 000c 1B68     		ldr	r3, [r3]
 4439              		.loc 1 2598 8 view .LVU1287
 4440 000e EBB1     		cbz	r3, .L355
 4441 0010 0446     		mov	r4, r0
2599:Core/Src/bno055.c ****     {
2600:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2601:Core/Src/bno055.c ****     }
2602:Core/Src/bno055.c ****     else
2603:Core/Src/bno055.c ****     {
2604:Core/Src/bno055.c ****         /*condition check for page, chip id is
2605:Core/Src/bno055.c ****          * available in the page zero*/
2606:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4442              		.loc 1 2606 9 is_stmt 1 view .LVU1288
 4443              		.loc 1 2606 21 is_stmt 0 view .LVU1289
ARM GAS  /tmp/ccOloYeZ.s 			page 130


 4444 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4445              		.loc 1 2606 12 view .LVU1290
 4446 0014 A3B9     		cbnz	r3, .L358
 4447              	.LVL441:
 4448              	.L353:
2607:Core/Src/bno055.c ****         {
2608:Core/Src/bno055.c ****             /* Write the page zero*/
2609:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2610:Core/Src/bno055.c ****         }
2611:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4449              		.loc 1 2611 53 discriminator 1 view .LVU1291
 4450 0016 104B     		ldr	r3, .L359
 4451 0018 1B68     		ldr	r3, [r3]
 4452 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4453              		.loc 1 2611 41 discriminator 1 view .LVU1292
 4454 001c CBB9     		cbnz	r3, .L356
 4455              	.L354:
2612:Core/Src/bno055.c ****         {
2613:Core/Src/bno055.c ****             /* Read the two byte value
2614:Core/Src/bno055.c ****              * of gravity y data*/
2615:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4456              		.loc 1 2615 13 is_stmt 1 view .LVU1293
 4457              		.loc 1 2615 32 is_stmt 0 view .LVU1294
 4458 001e 0E4B     		ldr	r3, .L359
 4459 0020 1868     		ldr	r0, [r3]
 4460 0022 0569     		ldr	r5, [r0, #16]
 4461              		.loc 1 2615 24 view .LVU1295
 4462 0024 0223     		movs	r3, #2
 4463 0026 01AA     		add	r2, sp, #4
 4464 0028 3021     		movs	r1, #48
 4465 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4466 002c A847     		blx	r5
 4467              	.LVL442:
2616:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_DATA_Y_LSB_VALUEY_REG,
2617:Core/Src/bno055.c ****                                                       data_u8,
2618:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2619:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4468              		.loc 1 2619 13 is_stmt 1 view .LVU1296
2620:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_Y_LSB_VALUEY)
2621:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 4469              		.loc 1 2621 13 view .LVU1297
2622:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_Y_MSB_VALUEY)
2623:Core/Src/bno055.c ****             *gravity_y_s16 =
 4470              		.loc 1 2623 13 view .LVU1298
2624:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4471              		.loc 1 2624 31 is_stmt 0 view .LVU1299
 4472 002e 9DF90520 		ldrsb	r2, [sp, #5]
2625:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4473              		.loc 1 2625 31 view .LVU1300
 4474 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2624:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4475              		.loc 1 2624 17 view .LVU1301
 4476 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2623:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4477              		.loc 1 2623 28 view .LVU1302
 4478 003a 2380     		strh	r3, [r4]	@ movhi
 4479              	.LVL443:
ARM GAS  /tmp/ccOloYeZ.s 			page 131


 4480              	.L352:
2626:Core/Src/bno055.c ****         }
2627:Core/Src/bno055.c ****         else
2628:Core/Src/bno055.c ****         {
2629:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2630:Core/Src/bno055.c ****         }
2631:Core/Src/bno055.c ****     }
2632:Core/Src/bno055.c **** 
2633:Core/Src/bno055.c ****     return com_rslt;
2634:Core/Src/bno055.c **** }
 4481              		.loc 1 2634 1 view .LVU1303
 4482 003c 03B0     		add	sp, sp, #12
 4483              		.cfi_remember_state
 4484              		.cfi_def_cfa_offset 12
 4485              		@ sp needed
 4486 003e 30BD     		pop	{r4, r5, pc}
 4487              	.LVL444:
 4488              	.L358:
 4489              		.cfi_restore_state
2609:Core/Src/bno055.c ****         }
 4490              		.loc 1 2609 13 is_stmt 1 view .LVU1304
2609:Core/Src/bno055.c ****         }
 4491              		.loc 1 2609 23 is_stmt 0 view .LVU1305
 4492 0040 0020     		movs	r0, #0
 4493              	.LVL445:
2609:Core/Src/bno055.c ****         }
 4494              		.loc 1 2609 23 view .LVU1306
 4495 0042 FFF7FEFF 		bl	bno055_write_page_id
 4496              	.LVL446:
2611:Core/Src/bno055.c ****         {
 4497              		.loc 1 2611 9 is_stmt 1 view .LVU1307
2611:Core/Src/bno055.c ****         {
 4498              		.loc 1 2611 12 is_stmt 0 view .LVU1308
 4499 0046 0028     		cmp	r0, #0
 4500 0048 E9D0     		beq	.L354
 4501 004a E4E7     		b	.L353
 4502              	.LVL447:
 4503              	.L355:
2600:Core/Src/bno055.c ****     }
 4504              		.loc 1 2600 16 view .LVU1309
 4505 004c 6FF07E00 		mvn	r0, #126
 4506              	.LVL448:
2600:Core/Src/bno055.c ****     }
 4507              		.loc 1 2600 16 view .LVU1310
 4508 0050 F4E7     		b	.L352
 4509              	.LVL449:
 4510              	.L356:
2629:Core/Src/bno055.c ****         }
 4511              		.loc 1 2629 22 view .LVU1311
 4512 0052 4FF0FF30 		mov	r0, #-1
 4513 0056 F1E7     		b	.L352
 4514              	.L360:
 4515              		.align	2
 4516              	.L359:
 4517 0058 00000000 		.word	p_bno055
 4518              		.cfi_endproc
 4519              	.LFE37:
ARM GAS  /tmp/ccOloYeZ.s 			page 132


 4521              		.section	.text.bno055_read_gravity_z,"ax",%progbits
 4522              		.align	1
 4523              		.global	bno055_read_gravity_z
 4524              		.syntax unified
 4525              		.thumb
 4526              		.thumb_func
 4528              	bno055_read_gravity_z:
 4529              	.LVL450:
 4530              	.LFB38:
2635:Core/Src/bno055.c **** 
2636:Core/Src/bno055.c **** /*!
2637:Core/Src/bno055.c ****  *  @brief This API reads gravity data z values
2638:Core/Src/bno055.c ****  *  from register 0x32 and 0x33 it is a two byte data
2639:Core/Src/bno055.c ****  *
2640:Core/Src/bno055.c ****  *  @param gravity_z_s16 : The raw z data
2641:Core/Src/bno055.c ****  *
2642:Core/Src/bno055.c ****  *  @return results of bus communication function
2643:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2644:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2645:Core/Src/bno055.c ****  *
2646:Core/Src/bno055.c ****  *
2647:Core/Src/bno055.c ****  */
2648:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gravity_z(s16 *gravity_z_s16)
2649:Core/Src/bno055.c **** {
 4531              		.loc 1 2649 1 is_stmt 1 view -0
 4532              		.cfi_startproc
 4533              		@ args = 0, pretend = 0, frame = 8
 4534              		@ frame_needed = 0, uses_anonymous_args = 0
 4535              		.loc 1 2649 1 is_stmt 0 view .LVU1313
 4536 0000 30B5     		push	{r4, r5, lr}
 4537              		.cfi_def_cfa_offset 12
 4538              		.cfi_offset 4, -12
 4539              		.cfi_offset 5, -8
 4540              		.cfi_offset 14, -4
 4541 0002 83B0     		sub	sp, sp, #12
 4542              		.cfi_def_cfa_offset 24
2650:Core/Src/bno055.c ****     /* Variable used to return value of
2651:Core/Src/bno055.c ****      * communication routine*/
2652:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4543              		.loc 1 2652 5 is_stmt 1 view .LVU1314
 4544              	.LVL451:
2653:Core/Src/bno055.c **** 
2654:Core/Src/bno055.c ****     /* Array holding the gravity z value
2655:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - z->LSB
2656:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - z->MSB
2657:Core/Src/bno055.c ****      */
2658:Core/Src/bno055.c ****     u8 data_u8[BNO055_GRAVITY_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 4545              		.loc 1 2658 5 view .LVU1315
 4546              		.loc 1 2658 8 is_stmt 0 view .LVU1316
 4547 0004 0023     		movs	r3, #0
 4548 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2659:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4549              		.loc 1 2659 5 is_stmt 1 view .LVU1317
 4550              	.LVL452:
2660:Core/Src/bno055.c **** 
2661:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2662:Core/Src/bno055.c ****     if (p_bno055 == NULL)
ARM GAS  /tmp/ccOloYeZ.s 			page 133


 4551              		.loc 1 2662 5 view .LVU1318
 4552              		.loc 1 2662 18 is_stmt 0 view .LVU1319
 4553 000a 134B     		ldr	r3, .L369
 4554 000c 1B68     		ldr	r3, [r3]
 4555              		.loc 1 2662 8 view .LVU1320
 4556 000e EBB1     		cbz	r3, .L365
 4557 0010 0446     		mov	r4, r0
2663:Core/Src/bno055.c ****     {
2664:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2665:Core/Src/bno055.c ****     }
2666:Core/Src/bno055.c ****     else
2667:Core/Src/bno055.c ****     {
2668:Core/Src/bno055.c ****         /*condition check for page, chip id is
2669:Core/Src/bno055.c ****          * available in the page zero*/
2670:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4558              		.loc 1 2670 9 is_stmt 1 view .LVU1321
 4559              		.loc 1 2670 21 is_stmt 0 view .LVU1322
 4560 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4561              		.loc 1 2670 12 view .LVU1323
 4562 0014 A3B9     		cbnz	r3, .L368
 4563              	.LVL453:
 4564              	.L363:
2671:Core/Src/bno055.c ****         {
2672:Core/Src/bno055.c ****             /* Write the page zero*/
2673:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2674:Core/Src/bno055.c ****         }
2675:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4565              		.loc 1 2675 53 discriminator 1 view .LVU1324
 4566 0016 104B     		ldr	r3, .L369
 4567 0018 1B68     		ldr	r3, [r3]
 4568 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4569              		.loc 1 2675 41 discriminator 1 view .LVU1325
 4570 001c CBB9     		cbnz	r3, .L366
 4571              	.L364:
2676:Core/Src/bno055.c ****         {
2677:Core/Src/bno055.c ****             /* Read the two byte value
2678:Core/Src/bno055.c ****              * of gravity z data*/
2679:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4572              		.loc 1 2679 13 is_stmt 1 view .LVU1326
 4573              		.loc 1 2679 32 is_stmt 0 view .LVU1327
 4574 001e 0E4B     		ldr	r3, .L369
 4575 0020 1868     		ldr	r0, [r3]
 4576 0022 0569     		ldr	r5, [r0, #16]
 4577              		.loc 1 2679 24 view .LVU1328
 4578 0024 0223     		movs	r3, #2
 4579 0026 01AA     		add	r2, sp, #4
 4580 0028 3221     		movs	r1, #50
 4581 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4582 002c A847     		blx	r5
 4583              	.LVL454:
2680:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_DATA_Z_LSB_VALUEZ_REG,
2681:Core/Src/bno055.c ****                                                       data_u8,
2682:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2683:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4584              		.loc 1 2683 13 is_stmt 1 view .LVU1329
2684:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_Z_LSB_VALUEZ)
2685:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
ARM GAS  /tmp/ccOloYeZ.s 			page 134


 4585              		.loc 1 2685 13 view .LVU1330
2686:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_Z_MSB_VALUEZ)
2687:Core/Src/bno055.c ****             *gravity_z_s16 =
 4586              		.loc 1 2687 13 view .LVU1331
2688:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4587              		.loc 1 2688 31 is_stmt 0 view .LVU1332
 4588 002e 9DF90520 		ldrsb	r2, [sp, #5]
2689:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4589              		.loc 1 2689 31 view .LVU1333
 4590 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2688:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4591              		.loc 1 2688 17 view .LVU1334
 4592 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2687:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4593              		.loc 1 2687 28 view .LVU1335
 4594 003a 2380     		strh	r3, [r4]	@ movhi
 4595              	.LVL455:
 4596              	.L362:
2690:Core/Src/bno055.c ****         }
2691:Core/Src/bno055.c ****         else
2692:Core/Src/bno055.c ****         {
2693:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2694:Core/Src/bno055.c ****         }
2695:Core/Src/bno055.c ****     }
2696:Core/Src/bno055.c **** 
2697:Core/Src/bno055.c ****     return com_rslt;
2698:Core/Src/bno055.c **** }
 4597              		.loc 1 2698 1 view .LVU1336
 4598 003c 03B0     		add	sp, sp, #12
 4599              		.cfi_remember_state
 4600              		.cfi_def_cfa_offset 12
 4601              		@ sp needed
 4602 003e 30BD     		pop	{r4, r5, pc}
 4603              	.LVL456:
 4604              	.L368:
 4605              		.cfi_restore_state
2673:Core/Src/bno055.c ****         }
 4606              		.loc 1 2673 13 is_stmt 1 view .LVU1337
2673:Core/Src/bno055.c ****         }
 4607              		.loc 1 2673 23 is_stmt 0 view .LVU1338
 4608 0040 0020     		movs	r0, #0
 4609              	.LVL457:
2673:Core/Src/bno055.c ****         }
 4610              		.loc 1 2673 23 view .LVU1339
 4611 0042 FFF7FEFF 		bl	bno055_write_page_id
 4612              	.LVL458:
2675:Core/Src/bno055.c ****         {
 4613              		.loc 1 2675 9 is_stmt 1 view .LVU1340
2675:Core/Src/bno055.c ****         {
 4614              		.loc 1 2675 12 is_stmt 0 view .LVU1341
 4615 0046 0028     		cmp	r0, #0
 4616 0048 E9D0     		beq	.L364
 4617 004a E4E7     		b	.L363
 4618              	.LVL459:
 4619              	.L365:
2664:Core/Src/bno055.c ****     }
 4620              		.loc 1 2664 16 view .LVU1342
ARM GAS  /tmp/ccOloYeZ.s 			page 135


 4621 004c 6FF07E00 		mvn	r0, #126
 4622              	.LVL460:
2664:Core/Src/bno055.c ****     }
 4623              		.loc 1 2664 16 view .LVU1343
 4624 0050 F4E7     		b	.L362
 4625              	.LVL461:
 4626              	.L366:
2693:Core/Src/bno055.c ****         }
 4627              		.loc 1 2693 22 view .LVU1344
 4628 0052 4FF0FF30 		mov	r0, #-1
 4629 0056 F1E7     		b	.L362
 4630              	.L370:
 4631              		.align	2
 4632              	.L369:
 4633 0058 00000000 		.word	p_bno055
 4634              		.cfi_endproc
 4635              	.LFE38:
 4637              		.section	.text.bno055_read_gravity_xyz,"ax",%progbits
 4638              		.align	1
 4639              		.global	bno055_read_gravity_xyz
 4640              		.syntax unified
 4641              		.thumb
 4642              		.thumb_func
 4644              	bno055_read_gravity_xyz:
 4645              	.LVL462:
 4646              	.LFB39:
2699:Core/Src/bno055.c **** 
2700:Core/Src/bno055.c **** /*!
2701:Core/Src/bno055.c ****  *  @brief This API reads gravity data xyz values
2702:Core/Src/bno055.c ****  *  from register 0x2E to 0x33 it is a six byte data
2703:Core/Src/bno055.c ****  *
2704:Core/Src/bno055.c ****  *
2705:Core/Src/bno055.c ****  *  @param gravity : The value of gravity xyz data's
2706:Core/Src/bno055.c ****  *
2707:Core/Src/bno055.c ****  *  Parameter |    result
2708:Core/Src/bno055.c ****  *  --------- | -----------------
2709:Core/Src/bno055.c ****  *   x        | The gravity x data
2710:Core/Src/bno055.c ****  *   y        | The gravity y data
2711:Core/Src/bno055.c ****  *   z        | The gravity z data
2712:Core/Src/bno055.c ****  *
2713:Core/Src/bno055.c ****  *
2714:Core/Src/bno055.c ****  *  @return results of bus communication function
2715:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2716:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2717:Core/Src/bno055.c ****  *
2718:Core/Src/bno055.c ****  */
2719:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gravity_xyz(struct bno055_gravity_t *gravity)
2720:Core/Src/bno055.c **** {
 4647              		.loc 1 2720 1 is_stmt 1 view -0
 4648              		.cfi_startproc
 4649              		@ args = 0, pretend = 0, frame = 8
 4650              		@ frame_needed = 0, uses_anonymous_args = 0
 4651              		.loc 1 2720 1 is_stmt 0 view .LVU1346
 4652 0000 30B5     		push	{r4, r5, lr}
 4653              		.cfi_def_cfa_offset 12
 4654              		.cfi_offset 4, -12
 4655              		.cfi_offset 5, -8
ARM GAS  /tmp/ccOloYeZ.s 			page 136


 4656              		.cfi_offset 14, -4
 4657 0002 83B0     		sub	sp, sp, #12
 4658              		.cfi_def_cfa_offset 24
 4659 0004 0446     		mov	r4, r0
2721:Core/Src/bno055.c ****     /* Variable used to return value of
2722:Core/Src/bno055.c ****      * communication routine*/
2723:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4660              		.loc 1 2723 5 is_stmt 1 view .LVU1347
 4661              	.LVL463:
2724:Core/Src/bno055.c **** 
2725:Core/Src/bno055.c ****     /* Array holding the gravity xyz value
2726:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
2727:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
2728:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
2729:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
2730:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
2731:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
2732:Core/Src/bno055.c ****      */
2733:Core/Src/bno055.c ****     u8 data_u8[BNO055_GRAVITY_XYZ_DATA_SIZE] = {
 4662              		.loc 1 2733 5 view .LVU1348
 4663              		.loc 1 2733 8 is_stmt 0 view .LVU1349
 4664 0006 1D4B     		ldr	r3, .L379
 4665 0008 93E80300 		ldm	r3, {r0, r1}
 4666              	.LVL464:
 4667              		.loc 1 2733 8 view .LVU1350
 4668 000c 0090     		str	r0, [sp]
 4669 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
2734:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
2735:Core/Src/bno055.c ****     };
2736:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4670              		.loc 1 2736 5 is_stmt 1 view .LVU1351
 4671              	.LVL465:
2737:Core/Src/bno055.c **** 
2738:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2739:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4672              		.loc 1 2739 5 view .LVU1352
 4673              		.loc 1 2739 18 is_stmt 0 view .LVU1353
 4674 0012 1B4B     		ldr	r3, .L379+4
 4675 0014 1B68     		ldr	r3, [r3]
 4676              		.loc 1 2739 8 view .LVU1354
 4677 0016 53B3     		cbz	r3, .L375
2740:Core/Src/bno055.c ****     {
2741:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2742:Core/Src/bno055.c ****     }
2743:Core/Src/bno055.c ****     else
2744:Core/Src/bno055.c ****     {
2745:Core/Src/bno055.c ****         /*condition check for page, chip id is
2746:Core/Src/bno055.c ****          * available in the page zero*/
2747:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4678              		.loc 1 2747 9 is_stmt 1 view .LVU1355
 4679              		.loc 1 2747 21 is_stmt 0 view .LVU1356
 4680 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4681              		.loc 1 2747 12 view .LVU1357
 4682 001a 13BB     		cbnz	r3, .L378
 4683              	.LVL466:
 4684              	.L373:
2748:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccOloYeZ.s 			page 137


2749:Core/Src/bno055.c ****             /* Write the page zero*/
2750:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2751:Core/Src/bno055.c ****         }
2752:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4685              		.loc 1 2752 53 discriminator 1 view .LVU1358
 4686 001c 184B     		ldr	r3, .L379+4
 4687 001e 1B68     		ldr	r3, [r3]
 4688 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4689              		.loc 1 2752 41 discriminator 1 view .LVU1359
 4690 0022 3BBB     		cbnz	r3, .L376
 4691              	.L374:
2753:Core/Src/bno055.c ****         {
2754:Core/Src/bno055.c ****             /* Read the six byte value
2755:Core/Src/bno055.c ****              * of gravity xyz data*/
2756:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4692              		.loc 1 2756 13 is_stmt 1 view .LVU1360
 4693              		.loc 1 2756 32 is_stmt 0 view .LVU1361
 4694 0024 164B     		ldr	r3, .L379+4
 4695 0026 1868     		ldr	r0, [r3]
 4696 0028 0569     		ldr	r5, [r0, #16]
 4697              		.loc 1 2756 24 view .LVU1362
 4698 002a 0623     		movs	r3, #6
 4699 002c 6A46     		mov	r2, sp
 4700 002e 2E21     		movs	r1, #46
 4701 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4702 0032 A847     		blx	r5
 4703              	.LVL467:
2757:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_DATA_X_LSB_VALUEX_REG,
2758:Core/Src/bno055.c ****                                                       data_u8,
2759:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_XYZ_DATA_SIZE);
2760:Core/Src/bno055.c **** 
2761:Core/Src/bno055.c ****             /* Data x*/
2762:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4704              		.loc 1 2762 13 is_stmt 1 view .LVU1363
2763:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_X_LSB_V
2764:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4705              		.loc 1 2764 13 view .LVU1364
2765:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_X_MSB_V
2766:Core/Src/bno055.c ****             gravity->x =
 4706              		.loc 1 2766 13 view .LVU1365
2767:Core/Src/bno055.c ****                 (s16)(((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB]) << BNO055_SHIFT_EIGHT_BITS)
 4707              		.loc 1 2767 30 is_stmt 0 view .LVU1366
 4708 0034 9DF90120 		ldrsb	r2, [sp, #1]
2768:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 4709              		.loc 1 2768 31 view .LVU1367
 4710 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
2767:Core/Src/bno055.c ****                 (s16)(((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB]) << BNO055_SHIFT_EIGHT_BITS)
 4711              		.loc 1 2767 17 view .LVU1368
 4712 003c 43EA0223 		orr	r3, r3, r2, lsl #8
2766:Core/Src/bno055.c ****                 (s16)(((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB]) << BNO055_SHIFT_EIGHT_BITS)
 4713              		.loc 1 2766 24 view .LVU1369
 4714 0040 2380     		strh	r3, [r4]	@ movhi
2769:Core/Src/bno055.c **** 
2770:Core/Src/bno055.c ****             /* Data y*/
2771:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4715              		.loc 1 2771 13 is_stmt 1 view .LVU1370
2772:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_Y_LSB_V
ARM GAS  /tmp/ccOloYeZ.s 			page 138


2773:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4716              		.loc 1 2773 13 view .LVU1371
2774:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_Y_MSB_V
2775:Core/Src/bno055.c ****             gravity->y =
 4717              		.loc 1 2775 13 view .LVU1372
2776:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4718              		.loc 1 2776 31 is_stmt 0 view .LVU1373
 4719 0042 9DF90320 		ldrsb	r2, [sp, #3]
2777:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 4720              		.loc 1 2777 31 view .LVU1374
 4721 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
2776:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4722              		.loc 1 2776 17 view .LVU1375
 4723 004a 43EA0223 		orr	r3, r3, r2, lsl #8
2775:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4724              		.loc 1 2775 24 view .LVU1376
 4725 004e 6380     		strh	r3, [r4, #2]	@ movhi
2778:Core/Src/bno055.c **** 
2779:Core/Src/bno055.c ****             /* Data z*/
2780:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4726              		.loc 1 2780 13 is_stmt 1 view .LVU1377
2781:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_Z_LSB_V
2782:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4727              		.loc 1 2782 13 view .LVU1378
2783:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_Z_MSB_V
2784:Core/Src/bno055.c ****             gravity->z =
 4728              		.loc 1 2784 13 view .LVU1379
2785:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4729              		.loc 1 2785 31 is_stmt 0 view .LVU1380
 4730 0050 9DF90520 		ldrsb	r2, [sp, #5]
2786:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 4731              		.loc 1 2786 31 view .LVU1381
 4732 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2785:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4733              		.loc 1 2785 17 view .LVU1382
 4734 0058 43EA0223 		orr	r3, r3, r2, lsl #8
2784:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4735              		.loc 1 2784 24 view .LVU1383
 4736 005c A380     		strh	r3, [r4, #4]	@ movhi
 4737              	.LVL468:
 4738              	.L372:
2787:Core/Src/bno055.c ****         }
2788:Core/Src/bno055.c ****         else
2789:Core/Src/bno055.c ****         {
2790:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2791:Core/Src/bno055.c ****         }
2792:Core/Src/bno055.c ****     }
2793:Core/Src/bno055.c **** 
2794:Core/Src/bno055.c ****     return com_rslt;
2795:Core/Src/bno055.c **** }
 4739              		.loc 1 2795 1 view .LVU1384
 4740 005e 03B0     		add	sp, sp, #12
 4741              		.cfi_remember_state
 4742              		.cfi_def_cfa_offset 12
 4743              		@ sp needed
 4744 0060 30BD     		pop	{r4, r5, pc}
 4745              	.LVL469:
ARM GAS  /tmp/ccOloYeZ.s 			page 139


 4746              	.L378:
 4747              		.cfi_restore_state
2750:Core/Src/bno055.c ****         }
 4748              		.loc 1 2750 13 is_stmt 1 view .LVU1385
2750:Core/Src/bno055.c ****         }
 4749              		.loc 1 2750 23 is_stmt 0 view .LVU1386
 4750 0062 0020     		movs	r0, #0
 4751 0064 FFF7FEFF 		bl	bno055_write_page_id
 4752              	.LVL470:
2752:Core/Src/bno055.c ****         {
 4753              		.loc 1 2752 9 is_stmt 1 view .LVU1387
2752:Core/Src/bno055.c ****         {
 4754              		.loc 1 2752 12 is_stmt 0 view .LVU1388
 4755 0068 0028     		cmp	r0, #0
 4756 006a DBD0     		beq	.L374
 4757 006c D6E7     		b	.L373
 4758              	.LVL471:
 4759              	.L375:
2741:Core/Src/bno055.c ****     }
 4760              		.loc 1 2741 16 view .LVU1389
 4761 006e 6FF07E00 		mvn	r0, #126
 4762 0072 F4E7     		b	.L372
 4763              	.LVL472:
 4764              	.L376:
2790:Core/Src/bno055.c ****         }
 4765              		.loc 1 2790 22 view .LVU1390
 4766 0074 4FF0FF30 		mov	r0, #-1
 4767 0078 F1E7     		b	.L372
 4768              	.L380:
 4769 007a 00BF     		.align	2
 4770              	.L379:
 4771 007c 00000000 		.word	.LANCHOR0
 4772 0080 00000000 		.word	p_bno055
 4773              		.cfi_endproc
 4774              	.LFE39:
 4776              		.section	.text.bno055_read_temp_data,"ax",%progbits
 4777              		.align	1
 4778              		.global	bno055_read_temp_data
 4779              		.syntax unified
 4780              		.thumb
 4781              		.thumb_func
 4783              	bno055_read_temp_data:
 4784              	.LVL473:
 4785              	.LFB40:
2796:Core/Src/bno055.c **** 
2797:Core/Src/bno055.c **** /*!
2798:Core/Src/bno055.c ****  *  @brief This API reads temperature values
2799:Core/Src/bno055.c ****  *  from register 0x33 it is a byte data
2800:Core/Src/bno055.c ****  *
2801:Core/Src/bno055.c ****  *  @param temp_s8 : The raw temperature data
2802:Core/Src/bno055.c ****  *
2803:Core/Src/bno055.c ****  *  @return results of bus communication function
2804:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2805:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2806:Core/Src/bno055.c ****  *
2807:Core/Src/bno055.c ****  *
2808:Core/Src/bno055.c ****  */
ARM GAS  /tmp/ccOloYeZ.s 			page 140


2809:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_temp_data(s8 *temp_s8)
2810:Core/Src/bno055.c **** {
 4786              		.loc 1 2810 1 is_stmt 1 view -0
 4787              		.cfi_startproc
 4788              		@ args = 0, pretend = 0, frame = 8
 4789              		@ frame_needed = 0, uses_anonymous_args = 0
 4790              		.loc 1 2810 1 is_stmt 0 view .LVU1392
 4791 0000 70B5     		push	{r4, r5, r6, lr}
 4792              		.cfi_def_cfa_offset 16
 4793              		.cfi_offset 4, -16
 4794              		.cfi_offset 5, -12
 4795              		.cfi_offset 6, -8
 4796              		.cfi_offset 14, -4
 4797 0002 82B0     		sub	sp, sp, #8
 4798              		.cfi_def_cfa_offset 24
2811:Core/Src/bno055.c ****     /* Variable used to return value of
2812:Core/Src/bno055.c ****      * communication routine*/
2813:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4799              		.loc 1 2813 5 is_stmt 1 view .LVU1393
 4800              	.LVL474:
2814:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 4801              		.loc 1 2814 5 view .LVU1394
 4802              		.loc 1 2814 8 is_stmt 0 view .LVU1395
 4803 0004 0023     		movs	r3, #0
 4804 0006 8DF80730 		strb	r3, [sp, #7]
2815:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4805              		.loc 1 2815 5 is_stmt 1 view .LVU1396
 4806              	.LVL475:
2816:Core/Src/bno055.c **** 
2817:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2818:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4807              		.loc 1 2818 5 view .LVU1397
 4808              		.loc 1 2818 18 is_stmt 0 view .LVU1398
 4809 000a 124B     		ldr	r3, .L389
 4810 000c 1B68     		ldr	r3, [r3]
 4811              		.loc 1 2818 8 view .LVU1399
 4812 000e D3B1     		cbz	r3, .L385
 4813 0010 0546     		mov	r5, r0
2819:Core/Src/bno055.c ****     {
2820:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2821:Core/Src/bno055.c ****     }
2822:Core/Src/bno055.c ****     else
2823:Core/Src/bno055.c ****     {
2824:Core/Src/bno055.c ****         /*condition check for page, chip id is
2825:Core/Src/bno055.c ****          * available in the page zero*/
2826:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4814              		.loc 1 2826 9 is_stmt 1 view .LVU1400
 4815              		.loc 1 2826 21 is_stmt 0 view .LVU1401
 4816 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4817              		.loc 1 2826 12 view .LVU1402
 4818 0014 8BB9     		cbnz	r3, .L388
 4819              	.LVL476:
 4820              	.L383:
2827:Core/Src/bno055.c ****         {
2828:Core/Src/bno055.c ****             /* Write the page zero*/
2829:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2830:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 141


2831:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4821              		.loc 1 2831 53 discriminator 1 view .LVU1403
 4822 0016 0F4B     		ldr	r3, .L389
 4823 0018 1B68     		ldr	r3, [r3]
 4824 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4825              		.loc 1 2831 41 discriminator 1 view .LVU1404
 4826 001c B3B9     		cbnz	r3, .L386
 4827              	.L384:
2832:Core/Src/bno055.c ****         {
2833:Core/Src/bno055.c ****             /* Read the raw temperature data */
2834:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4828              		.loc 1 2834 13 is_stmt 1 view .LVU1405
 4829              		.loc 1 2834 32 is_stmt 0 view .LVU1406
 4830 001e 0D4B     		ldr	r3, .L389
 4831 0020 1C68     		ldr	r4, [r3]
 4832 0022 2669     		ldr	r6, [r4, #16]
 4833              		.loc 1 2834 24 view .LVU1407
 4834 0024 0123     		movs	r3, #1
 4835 0026 0DF10702 		add	r2, sp, #7
 4836 002a 3421     		movs	r1, #52
 4837 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 4838 002e B047     		blx	r6
 4839              	.LVL477:
2835:Core/Src/bno055.c ****                                                       BNO055_TEMP_REG,
2836:Core/Src/bno055.c ****                                                       &data_u8,
2837:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
2838:Core/Src/bno055.c ****             *temp_s8 = data_u8;
 4840              		.loc 1 2838 13 is_stmt 1 view .LVU1408
 4841              		.loc 1 2838 22 is_stmt 0 view .LVU1409
 4842 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 4843 0034 2B70     		strb	r3, [r5]
 4844              	.LVL478:
 4845              	.L382:
2839:Core/Src/bno055.c ****         }
2840:Core/Src/bno055.c ****         else
2841:Core/Src/bno055.c ****         {
2842:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2843:Core/Src/bno055.c ****         }
2844:Core/Src/bno055.c ****     }
2845:Core/Src/bno055.c **** 
2846:Core/Src/bno055.c ****     return com_rslt;
2847:Core/Src/bno055.c **** }
 4846              		.loc 1 2847 1 view .LVU1410
 4847 0036 02B0     		add	sp, sp, #8
 4848              		.cfi_remember_state
 4849              		.cfi_def_cfa_offset 16
 4850              		@ sp needed
 4851 0038 70BD     		pop	{r4, r5, r6, pc}
 4852              	.LVL479:
 4853              	.L388:
 4854              		.cfi_restore_state
2829:Core/Src/bno055.c ****         }
 4855              		.loc 1 2829 13 is_stmt 1 view .LVU1411
2829:Core/Src/bno055.c ****         }
 4856              		.loc 1 2829 23 is_stmt 0 view .LVU1412
 4857 003a 0020     		movs	r0, #0
 4858              	.LVL480:
ARM GAS  /tmp/ccOloYeZ.s 			page 142


2829:Core/Src/bno055.c ****         }
 4859              		.loc 1 2829 23 view .LVU1413
 4860 003c FFF7FEFF 		bl	bno055_write_page_id
 4861              	.LVL481:
2831:Core/Src/bno055.c ****         {
 4862              		.loc 1 2831 9 is_stmt 1 view .LVU1414
2831:Core/Src/bno055.c ****         {
 4863              		.loc 1 2831 12 is_stmt 0 view .LVU1415
 4864 0040 0028     		cmp	r0, #0
 4865 0042 ECD0     		beq	.L384
 4866 0044 E7E7     		b	.L383
 4867              	.LVL482:
 4868              	.L385:
2820:Core/Src/bno055.c ****     }
 4869              		.loc 1 2820 16 view .LVU1416
 4870 0046 6FF07E00 		mvn	r0, #126
 4871              	.LVL483:
2820:Core/Src/bno055.c ****     }
 4872              		.loc 1 2820 16 view .LVU1417
 4873 004a F4E7     		b	.L382
 4874              	.LVL484:
 4875              	.L386:
2842:Core/Src/bno055.c ****         }
 4876              		.loc 1 2842 22 view .LVU1418
 4877 004c 4FF0FF30 		mov	r0, #-1
 4878 0050 F1E7     		b	.L382
 4879              	.L390:
 4880 0052 00BF     		.align	2
 4881              	.L389:
 4882 0054 00000000 		.word	p_bno055
 4883              		.cfi_endproc
 4884              	.LFE40:
 4886              		.global	__aeabi_i2d
 4887              		.global	__aeabi_dmul
 4888              		.global	__aeabi_d2f
 4889              		.section	.text.bno055_convert_float_mag_x_uT,"ax",%progbits
 4890              		.align	1
 4891              		.global	bno055_convert_float_mag_x_uT
 4892              		.syntax unified
 4893              		.thumb
 4894              		.thumb_func
 4896              	bno055_convert_float_mag_x_uT:
 4897              	.LVL485:
 4898              	.LFB49:
2848:Core/Src/bno055.c **** #ifdef  BNO055_FLOAT_ENABLE
2849:Core/Src/bno055.c **** 
2850:Core/Src/bno055.c **** /*!
2851:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
2852:Core/Src/bno055.c ****  *  to meterpersecseq output as float
2853:Core/Src/bno055.c ****  *
2854:Core/Src/bno055.c ****  *  @param accel_x_f : The accel x meterpersecseq data
2855:Core/Src/bno055.c ****  *
2856:Core/Src/bno055.c ****  *
2857:Core/Src/bno055.c ****  *
2858:Core/Src/bno055.c ****  *  @return results of bus communication function
2859:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2860:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
ARM GAS  /tmp/ccOloYeZ.s 			page 143


2861:Core/Src/bno055.c ****  *
2862:Core/Src/bno055.c ****  *
2863:Core/Src/bno055.c ****  */
2864:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_x_msq(float *accel_x_f)
2865:Core/Src/bno055.c **** {
2866:Core/Src/bno055.c ****     /* Variable used to return value of
2867:Core/Src/bno055.c ****      * communication routine*/
2868:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
2869:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
2870:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
2871:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
2872:Core/Src/bno055.c **** 
2873:Core/Src/bno055.c ****     /* Read the current accel unit and set the
2874:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
2875:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
2876:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
2877:Core/Src/bno055.c ****     {
2878:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
2879:Core/Src/bno055.c ****     }
2880:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
2881:Core/Src/bno055.c ****     {
2882:Core/Src/bno055.c ****         /* Read the accel raw x data*/
2883:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_x(&reg_accel_x_s16);
2884:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
2885:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
2886:Core/Src/bno055.c ****         {
2887:Core/Src/bno055.c ****             /* Convert the raw accel x to m/s2*/
2888:Core/Src/bno055.c ****             data_f = (float)(reg_accel_x_s16 / BNO055_ACCEL_DIV_MSQ);
2889:Core/Src/bno055.c ****             *accel_x_f = data_f;
2890:Core/Src/bno055.c ****         }
2891:Core/Src/bno055.c ****         else
2892:Core/Src/bno055.c ****         {
2893:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2894:Core/Src/bno055.c ****         }
2895:Core/Src/bno055.c ****     }
2896:Core/Src/bno055.c ****     else
2897:Core/Src/bno055.c ****     {
2898:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
2899:Core/Src/bno055.c ****     }
2900:Core/Src/bno055.c **** 
2901:Core/Src/bno055.c ****     return com_rslt;
2902:Core/Src/bno055.c **** }
2903:Core/Src/bno055.c **** 
2904:Core/Src/bno055.c **** /*!
2905:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
2906:Core/Src/bno055.c ****  *  to millig output as float
2907:Core/Src/bno055.c ****  *
2908:Core/Src/bno055.c ****  *  @param accel_x_f : The accel x millig data
2909:Core/Src/bno055.c ****  *
2910:Core/Src/bno055.c ****  *
2911:Core/Src/bno055.c ****  *
2912:Core/Src/bno055.c ****  *  @return results of bus communication function
2913:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2914:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2915:Core/Src/bno055.c ****  *
2916:Core/Src/bno055.c ****  *
2917:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 144


2918:Core/Src/bno055.c ****  */
2919:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_x_mg(float *accel_x_f)
2920:Core/Src/bno055.c **** {
2921:Core/Src/bno055.c ****     /* Variable used to return value of
2922:Core/Src/bno055.c ****      * communication routine*/
2923:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
2924:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
2925:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
2926:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
2927:Core/Src/bno055.c **** 
2928:Core/Src/bno055.c ****     /* Read the current accel unit and set the
2929:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
2930:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
2931:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
2932:Core/Src/bno055.c ****     {
2933:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
2934:Core/Src/bno055.c ****     }
2935:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
2936:Core/Src/bno055.c ****     {
2937:Core/Src/bno055.c ****         /* Read the accel raw x data*/
2938:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_x(&reg_accel_x_s16);
2939:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
2940:Core/Src/bno055.c ****         {
2941:Core/Src/bno055.c ****             /* Convert the raw accel x to m/s2*/
2942:Core/Src/bno055.c ****             data_f = (float)(reg_accel_x_s16 / BNO055_ACCEL_DIV_MG);
2943:Core/Src/bno055.c ****             *accel_x_f = data_f;
2944:Core/Src/bno055.c ****         }
2945:Core/Src/bno055.c ****         else
2946:Core/Src/bno055.c ****         {
2947:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2948:Core/Src/bno055.c ****         }
2949:Core/Src/bno055.c ****     }
2950:Core/Src/bno055.c ****     else
2951:Core/Src/bno055.c ****     {
2952:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
2953:Core/Src/bno055.c ****     }
2954:Core/Src/bno055.c **** 
2955:Core/Src/bno055.c ****     return com_rslt;
2956:Core/Src/bno055.c **** }
2957:Core/Src/bno055.c **** 
2958:Core/Src/bno055.c **** /*!
2959:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
2960:Core/Src/bno055.c ****  *  to meterpersecseq output as float
2961:Core/Src/bno055.c ****  *
2962:Core/Src/bno055.c ****  *  @param accel_y_f : The accel y meterpersecseq data
2963:Core/Src/bno055.c ****  *
2964:Core/Src/bno055.c ****  *
2965:Core/Src/bno055.c ****  *
2966:Core/Src/bno055.c ****  *  @return results of bus communication function
2967:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2968:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2969:Core/Src/bno055.c ****  *
2970:Core/Src/bno055.c ****  *
2971:Core/Src/bno055.c ****  */
2972:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_y_msq(float *accel_y_f)
2973:Core/Src/bno055.c **** {
2974:Core/Src/bno055.c ****     /* Variable used to return value of
ARM GAS  /tmp/ccOloYeZ.s 			page 145


2975:Core/Src/bno055.c ****      * communication routine*/
2976:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
2977:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
2978:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
2979:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
2980:Core/Src/bno055.c **** 
2981:Core/Src/bno055.c ****     /* Read the current accel unit and set the
2982:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
2983:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
2984:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
2985:Core/Src/bno055.c ****     {
2986:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
2987:Core/Src/bno055.c ****     }
2988:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
2989:Core/Src/bno055.c ****     {
2990:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_y(&reg_accel_y_s16);
2991:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
2992:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
2993:Core/Src/bno055.c ****         {
2994:Core/Src/bno055.c ****             /* Convert the raw accel y to m/s2*/
2995:Core/Src/bno055.c ****             data_f = (float)(reg_accel_y_s16 / BNO055_ACCEL_DIV_MSQ);
2996:Core/Src/bno055.c ****             *accel_y_f = data_f;
2997:Core/Src/bno055.c ****         }
2998:Core/Src/bno055.c ****         else
2999:Core/Src/bno055.c ****         {
3000:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3001:Core/Src/bno055.c ****         }
3002:Core/Src/bno055.c ****     }
3003:Core/Src/bno055.c ****     else
3004:Core/Src/bno055.c ****     {
3005:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3006:Core/Src/bno055.c ****     }
3007:Core/Src/bno055.c **** 
3008:Core/Src/bno055.c ****     return com_rslt;
3009:Core/Src/bno055.c **** }
3010:Core/Src/bno055.c **** 
3011:Core/Src/bno055.c **** /*!
3012:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel y raw data
3013:Core/Src/bno055.c ****  *  to millig output as float
3014:Core/Src/bno055.c ****  *
3015:Core/Src/bno055.c ****  *  @param accel_y_f : The accel y millig data
3016:Core/Src/bno055.c ****  *
3017:Core/Src/bno055.c ****  *
3018:Core/Src/bno055.c ****  *
3019:Core/Src/bno055.c ****  *  @return results of bus communication function
3020:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3021:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3022:Core/Src/bno055.c ****  *
3023:Core/Src/bno055.c ****  */
3024:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_y_mg(float *accel_y_f)
3025:Core/Src/bno055.c **** {
3026:Core/Src/bno055.c ****     /* Variable used to return value of
3027:Core/Src/bno055.c ****      * communication routine*/
3028:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3029:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
3030:Core/Src/bno055.c ****     float data = BNO055_INIT_VALUE;
3031:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccOloYeZ.s 			page 146


3032:Core/Src/bno055.c **** 
3033:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3034:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
3035:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
3036:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
3037:Core/Src/bno055.c ****     {
3038:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
3039:Core/Src/bno055.c ****     }
3040:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3041:Core/Src/bno055.c ****     {
3042:Core/Src/bno055.c ****         /* Read the accel raw z data*/
3043:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_y(&reg_accel_y_s16);
3044:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3045:Core/Src/bno055.c ****         {
3046:Core/Src/bno055.c ****             /* Convert the raw accel z to mg*/
3047:Core/Src/bno055.c ****             data = (float)(reg_accel_y_s16 / BNO055_ACCEL_DIV_MG);
3048:Core/Src/bno055.c ****             *accel_y_f = data;
3049:Core/Src/bno055.c ****         }
3050:Core/Src/bno055.c ****         else
3051:Core/Src/bno055.c ****         {
3052:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3053:Core/Src/bno055.c ****         }
3054:Core/Src/bno055.c ****     }
3055:Core/Src/bno055.c ****     else
3056:Core/Src/bno055.c ****     {
3057:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3058:Core/Src/bno055.c ****     }
3059:Core/Src/bno055.c **** 
3060:Core/Src/bno055.c ****     return com_rslt;
3061:Core/Src/bno055.c **** }
3062:Core/Src/bno055.c **** 
3063:Core/Src/bno055.c **** /*!
3064:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel z raw data
3065:Core/Src/bno055.c ****  *  to meterpersecseq output as float
3066:Core/Src/bno055.c ****  *
3067:Core/Src/bno055.c ****  *  @param accel_z_f : The accel z meterpersecseq data
3068:Core/Src/bno055.c ****  *
3069:Core/Src/bno055.c ****  *
3070:Core/Src/bno055.c ****  *
3071:Core/Src/bno055.c ****  *  @return results of bus communication function
3072:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3073:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3074:Core/Src/bno055.c ****  *
3075:Core/Src/bno055.c ****  *
3076:Core/Src/bno055.c ****  */
3077:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_z_msq(float *accel_z_f)
3078:Core/Src/bno055.c **** {
3079:Core/Src/bno055.c ****     /* Variable used to return value of
3080:Core/Src/bno055.c ****      * communication routine*/
3081:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3082:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
3083:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3084:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
3085:Core/Src/bno055.c **** 
3086:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3087:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
3088:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
ARM GAS  /tmp/ccOloYeZ.s 			page 147


3089:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
3090:Core/Src/bno055.c ****     {
3091:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
3092:Core/Src/bno055.c ****     }
3093:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3094:Core/Src/bno055.c ****     {
3095:Core/Src/bno055.c ****         /* Read the accel raw z data*/
3096:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_z(&reg_accel_z_s16);
3097:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
3098:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3099:Core/Src/bno055.c ****         {
3100:Core/Src/bno055.c ****             /* Convert the raw accel z to m/s2*/
3101:Core/Src/bno055.c ****             data_f = (float)(reg_accel_z_s16 / BNO055_ACCEL_DIV_MSQ);
3102:Core/Src/bno055.c ****             *accel_z_f = data_f;
3103:Core/Src/bno055.c ****         }
3104:Core/Src/bno055.c ****         else
3105:Core/Src/bno055.c ****         {
3106:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3107:Core/Src/bno055.c ****         }
3108:Core/Src/bno055.c ****     }
3109:Core/Src/bno055.c ****     else
3110:Core/Src/bno055.c ****     {
3111:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3112:Core/Src/bno055.c ****     }
3113:Core/Src/bno055.c **** 
3114:Core/Src/bno055.c ****     return com_rslt;
3115:Core/Src/bno055.c **** }
3116:Core/Src/bno055.c **** 
3117:Core/Src/bno055.c **** /*!
3118:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel z raw data
3119:Core/Src/bno055.c ****  *  to millig output as float
3120:Core/Src/bno055.c ****  *
3121:Core/Src/bno055.c ****  *  @param accel_z_f : The accel z millig data
3122:Core/Src/bno055.c ****  *
3123:Core/Src/bno055.c ****  *
3124:Core/Src/bno055.c ****  *
3125:Core/Src/bno055.c ****  *  @return results of bus communication function
3126:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3127:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3128:Core/Src/bno055.c ****  *
3129:Core/Src/bno055.c ****  *
3130:Core/Src/bno055.c ****  */
3131:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_z_mg(float *accel_z_f)
3132:Core/Src/bno055.c **** {
3133:Core/Src/bno055.c ****     /* Variable used to return value of
3134:Core/Src/bno055.c ****      * communication routine*/
3135:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3136:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
3137:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3138:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
3139:Core/Src/bno055.c **** 
3140:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3141:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2 */
3142:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
3143:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
3144:Core/Src/bno055.c ****     {
3145:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
ARM GAS  /tmp/ccOloYeZ.s 			page 148


3146:Core/Src/bno055.c ****     }
3147:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3148:Core/Src/bno055.c ****     {
3149:Core/Src/bno055.c ****         /* Read the accel raw z data*/
3150:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_z(&reg_accel_z_s16);
3151:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3152:Core/Src/bno055.c ****         {
3153:Core/Src/bno055.c ****             /* Convert the raw accel x to mg*/
3154:Core/Src/bno055.c ****             data_f = (float)(reg_accel_z_s16 / BNO055_ACCEL_DIV_MG);
3155:Core/Src/bno055.c ****             *accel_z_f = data_f;
3156:Core/Src/bno055.c ****         }
3157:Core/Src/bno055.c ****         else
3158:Core/Src/bno055.c ****         {
3159:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3160:Core/Src/bno055.c ****         }
3161:Core/Src/bno055.c ****     }
3162:Core/Src/bno055.c ****     else
3163:Core/Src/bno055.c ****     {
3164:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3165:Core/Src/bno055.c ****     }
3166:Core/Src/bno055.c **** 
3167:Core/Src/bno055.c ****     return com_rslt;
3168:Core/Src/bno055.c **** }
3169:Core/Src/bno055.c **** 
3170:Core/Src/bno055.c **** /*!
3171:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel xyz raw data
3172:Core/Src/bno055.c ****  *  to meterpersecseq output as float
3173:Core/Src/bno055.c ****  *
3174:Core/Src/bno055.c ****  *  @param accel_xyz : The meterpersecseq data of accel xyz
3175:Core/Src/bno055.c ****  *
3176:Core/Src/bno055.c ****  *  Parameter |    result
3177:Core/Src/bno055.c ****  *  --------- | -----------------
3178:Core/Src/bno055.c ****  *   x        | meterpersecseq data of accel
3179:Core/Src/bno055.c ****  *   y        | meterpersecseq data of accel
3180:Core/Src/bno055.c ****  *   z        | meterpersecseq data of accel
3181:Core/Src/bno055.c ****  *
3182:Core/Src/bno055.c ****  *  @return results of bus communication function
3183:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3184:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3185:Core/Src/bno055.c ****  *
3186:Core/Src/bno055.c ****  *
3187:Core/Src/bno055.c ****  */
3188:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_xyz_msq(struct bno055_accel_float_t *accel_x
3189:Core/Src/bno055.c **** {
3190:Core/Src/bno055.c ****     /* Variable used to return value of
3191:Core/Src/bno055.c ****      * communication routine*/
3192:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3193:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
3194:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
3195:Core/Src/bno055.c **** 
3196:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3197:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
3198:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
3199:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
3200:Core/Src/bno055.c ****     {
3201:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
3202:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccOloYeZ.s 			page 149


3203:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3204:Core/Src/bno055.c ****     {
3205:Core/Src/bno055.c ****         /* Read the accel raw xyz data*/
3206:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_xyz(&reg_accel_xyz);
3207:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3208:Core/Src/bno055.c ****         {
3209:Core/Src/bno055.c ****             /* Convert the accel raw xyz to meterpersecseq*/
3210:Core/Src/bno055.c ****             accel_xyz->x = (float)(reg_accel_xyz.x / BNO055_ACCEL_DIV_MSQ);
3211:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
3212:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
3213:Core/Src/bno055.c ****         }
3214:Core/Src/bno055.c ****         else
3215:Core/Src/bno055.c ****         {
3216:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3217:Core/Src/bno055.c ****         }
3218:Core/Src/bno055.c ****     }
3219:Core/Src/bno055.c ****     else
3220:Core/Src/bno055.c ****     {
3221:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3222:Core/Src/bno055.c ****     }
3223:Core/Src/bno055.c **** 
3224:Core/Src/bno055.c ****     return com_rslt;
3225:Core/Src/bno055.c **** }
3226:Core/Src/bno055.c **** 
3227:Core/Src/bno055.c **** /*!
3228:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel xyz raw data
3229:Core/Src/bno055.c ****  *  to millig output as float
3230:Core/Src/bno055.c ****  *
3231:Core/Src/bno055.c ****  *  @param accel_xyz : The millig data of accel xyz
3232:Core/Src/bno055.c ****  *
3233:Core/Src/bno055.c ****  *  Parameter |    result
3234:Core/Src/bno055.c ****  *  --------- | -----------------
3235:Core/Src/bno055.c ****  *   x        | millig data of accel
3236:Core/Src/bno055.c ****  *   y        | millig data of accel
3237:Core/Src/bno055.c ****  *   z        | millig data of accel
3238:Core/Src/bno055.c ****  *
3239:Core/Src/bno055.c ****  *
3240:Core/Src/bno055.c ****  *  @return results of bus communication function
3241:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3242:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3243:Core/Src/bno055.c ****  *
3244:Core/Src/bno055.c ****  *
3245:Core/Src/bno055.c ****  */
3246:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_xyz_mg(struct bno055_accel_float_t *accel_xy
3247:Core/Src/bno055.c **** {
3248:Core/Src/bno055.c ****     /* Variable used to return value of
3249:Core/Src/bno055.c ****      * communication routine*/
3250:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3251:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
3252:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
3253:Core/Src/bno055.c **** 
3254:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3255:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
3256:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
3257:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
3258:Core/Src/bno055.c ****     {
3259:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
ARM GAS  /tmp/ccOloYeZ.s 			page 150


3260:Core/Src/bno055.c ****     }
3261:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3262:Core/Src/bno055.c ****     {
3263:Core/Src/bno055.c ****         /* Read the accel raw y data*/
3264:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_xyz(&reg_accel_xyz);
3265:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3266:Core/Src/bno055.c ****         {
3267:Core/Src/bno055.c ****             /*Convert the accel raw xyz to millig */
3268:Core/Src/bno055.c ****             accel_xyz->x = (float)(reg_accel_xyz.x / BNO055_ACCEL_DIV_MG);
3269:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
3270:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
3271:Core/Src/bno055.c ****         }
3272:Core/Src/bno055.c ****         else
3273:Core/Src/bno055.c ****         {
3274:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3275:Core/Src/bno055.c ****         }
3276:Core/Src/bno055.c ****     }
3277:Core/Src/bno055.c ****     else
3278:Core/Src/bno055.c ****     {
3279:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3280:Core/Src/bno055.c ****     }
3281:Core/Src/bno055.c **** 
3282:Core/Src/bno055.c ****     return com_rslt;
3283:Core/Src/bno055.c **** }
3284:Core/Src/bno055.c **** 
3285:Core/Src/bno055.c **** /*!
3286:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag x raw data
3287:Core/Src/bno055.c ****  *  to microTesla output as float
3288:Core/Src/bno055.c ****  *
3289:Core/Src/bno055.c ****  *  @param mag_x_f : The mag x microTesla data
3290:Core/Src/bno055.c ****  *
3291:Core/Src/bno055.c ****  *
3292:Core/Src/bno055.c ****  *
3293:Core/Src/bno055.c ****  *  @return results of bus communication function
3294:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3295:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3296:Core/Src/bno055.c ****  *
3297:Core/Src/bno055.c ****  *
3298:Core/Src/bno055.c ****  */
3299:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_mag_x_uT(float *mag_x_f)
3300:Core/Src/bno055.c **** {
 4899              		.loc 1 3300 1 is_stmt 1 view -0
 4900              		.cfi_startproc
 4901              		@ args = 0, pretend = 0, frame = 8
 4902              		@ frame_needed = 0, uses_anonymous_args = 0
 4903              		.loc 1 3300 1 is_stmt 0 view .LVU1420
 4904 0000 30B5     		push	{r4, r5, lr}
 4905              		.cfi_def_cfa_offset 12
 4906              		.cfi_offset 4, -12
 4907              		.cfi_offset 5, -8
 4908              		.cfi_offset 14, -4
 4909 0002 83B0     		sub	sp, sp, #12
 4910              		.cfi_def_cfa_offset 24
 4911 0004 0446     		mov	r4, r0
3301:Core/Src/bno055.c ****     /* Variable used to return value of
3302:Core/Src/bno055.c ****      * communication routine*/
3303:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccOloYeZ.s 			page 151


 4912              		.loc 1 3303 5 is_stmt 1 view .LVU1421
 4913              	.LVL486:
3304:Core/Src/bno055.c ****     s16 reg_mag_x_s16 = BNO055_INIT_VALUE;
 4914              		.loc 1 3304 5 view .LVU1422
 4915              		.loc 1 3304 9 is_stmt 0 view .LVU1423
 4916 0006 0023     		movs	r3, #0
 4917 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3305:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 4918              		.loc 1 3305 5 is_stmt 1 view .LVU1424
 4919              	.LVL487:
3306:Core/Src/bno055.c **** 
3307:Core/Src/bno055.c ****     /* Read raw mag x data */
3308:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_x(&reg_mag_x_s16);
 4920              		.loc 1 3308 5 view .LVU1425
 4921              		.loc 1 3308 16 is_stmt 0 view .LVU1426
 4922 000c 0DF10600 		add	r0, sp, #6
 4923              	.LVL488:
 4924              		.loc 1 3308 16 view .LVU1427
 4925 0010 FFF7FEFF 		bl	bno055_read_mag_x
 4926              	.LVL489:
3309:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 4927              		.loc 1 3309 5 is_stmt 1 view .LVU1428
 4928              		.loc 1 3309 8 is_stmt 0 view .LVU1429
 4929 0014 70B9     		cbnz	r0, .L393
 4930 0016 0546     		mov	r5, r0
3310:Core/Src/bno055.c ****     {
3311:Core/Src/bno055.c ****         /* Convert the raw mag x to microTesla*/
3312:Core/Src/bno055.c ****         data_f = (float)(reg_mag_x_s16 / BNO055_MAG_DIV_UT);
 4931              		.loc 1 3312 9 is_stmt 1 view .LVU1430
 4932              		.loc 1 3312 40 is_stmt 0 view .LVU1431
 4933 0018 BDF90600 		ldrsh	r0, [sp, #6]
 4934              	.LVL490:
 4935              		.loc 1 3312 40 view .LVU1432
 4936 001c FFF7FEFF 		bl	__aeabi_i2d
 4937              	.LVL491:
 4938 0020 0022     		movs	r2, #0
 4939 0022 064B     		ldr	r3, .L395
 4940 0024 FFF7FEFF 		bl	__aeabi_dmul
 4941              	.LVL492:
 4942              		.loc 1 3312 16 view .LVU1433
 4943 0028 FFF7FEFF 		bl	__aeabi_d2f
 4944              	.LVL493:
3313:Core/Src/bno055.c ****         *mag_x_f = data_f;
 4945              		.loc 1 3313 9 is_stmt 1 view .LVU1434
 4946              		.loc 1 3313 18 is_stmt 0 view .LVU1435
 4947 002c 2060     		str	r0, [r4]	@ float
 4948              	.LVL494:
 4949              	.L392:
3314:Core/Src/bno055.c ****     }
3315:Core/Src/bno055.c ****     else
3316:Core/Src/bno055.c ****     {
3317:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3318:Core/Src/bno055.c ****     }
3319:Core/Src/bno055.c **** 
3320:Core/Src/bno055.c ****     return com_rslt;
 4950              		.loc 1 3320 5 is_stmt 1 view .LVU1436
3321:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccOloYeZ.s 			page 152


 4951              		.loc 1 3321 1 is_stmt 0 view .LVU1437
 4952 002e 2846     		mov	r0, r5
 4953 0030 03B0     		add	sp, sp, #12
 4954              		.cfi_remember_state
 4955              		.cfi_def_cfa_offset 12
 4956              		@ sp needed
 4957 0032 30BD     		pop	{r4, r5, pc}
 4958              	.LVL495:
 4959              	.L393:
 4960              		.cfi_restore_state
3317:Core/Src/bno055.c ****     }
 4961              		.loc 1 3317 18 view .LVU1438
 4962 0034 4FF0FF35 		mov	r5, #-1
 4963 0038 F9E7     		b	.L392
 4964              	.L396:
 4965 003a 00BF     		.align	2
 4966              	.L395:
 4967 003c 0000B03F 		.word	1068498944
 4968              		.cfi_endproc
 4969              	.LFE49:
 4971              		.section	.text.bno055_convert_float_mag_y_uT,"ax",%progbits
 4972              		.align	1
 4973              		.global	bno055_convert_float_mag_y_uT
 4974              		.syntax unified
 4975              		.thumb
 4976              		.thumb_func
 4978              	bno055_convert_float_mag_y_uT:
 4979              	.LVL496:
 4980              	.LFB50:
3322:Core/Src/bno055.c **** 
3323:Core/Src/bno055.c **** /*!
3324:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag y raw data
3325:Core/Src/bno055.c ****  *  to microTesla output as float
3326:Core/Src/bno055.c ****  *
3327:Core/Src/bno055.c ****  *  @param mag_y_f : The mag y microTesla data
3328:Core/Src/bno055.c ****  *
3329:Core/Src/bno055.c ****  *
3330:Core/Src/bno055.c ****  *
3331:Core/Src/bno055.c ****  *  @return results of bus communication function
3332:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3333:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3334:Core/Src/bno055.c ****  *
3335:Core/Src/bno055.c ****  */
3336:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_mag_y_uT(float *mag_y_f)
3337:Core/Src/bno055.c **** {
 4981              		.loc 1 3337 1 is_stmt 1 view -0
 4982              		.cfi_startproc
 4983              		@ args = 0, pretend = 0, frame = 8
 4984              		@ frame_needed = 0, uses_anonymous_args = 0
 4985              		.loc 1 3337 1 is_stmt 0 view .LVU1440
 4986 0000 30B5     		push	{r4, r5, lr}
 4987              		.cfi_def_cfa_offset 12
 4988              		.cfi_offset 4, -12
 4989              		.cfi_offset 5, -8
 4990              		.cfi_offset 14, -4
 4991 0002 83B0     		sub	sp, sp, #12
 4992              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccOloYeZ.s 			page 153


 4993 0004 0446     		mov	r4, r0
3338:Core/Src/bno055.c ****     /* Variable used to return value of
3339:Core/Src/bno055.c ****      * communication routine*/
3340:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4994              		.loc 1 3340 5 is_stmt 1 view .LVU1441
 4995              	.LVL497:
3341:Core/Src/bno055.c ****     s16 reg_mag_y_s16 = BNO055_INIT_VALUE;
 4996              		.loc 1 3341 5 view .LVU1442
 4997              		.loc 1 3341 9 is_stmt 0 view .LVU1443
 4998 0006 0023     		movs	r3, #0
 4999 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3342:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5000              		.loc 1 3342 5 is_stmt 1 view .LVU1444
 5001              	.LVL498:
3343:Core/Src/bno055.c **** 
3344:Core/Src/bno055.c ****     /* Read raw mag y data */
3345:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_y(&reg_mag_y_s16);
 5002              		.loc 1 3345 5 view .LVU1445
 5003              		.loc 1 3345 16 is_stmt 0 view .LVU1446
 5004 000c 0DF10600 		add	r0, sp, #6
 5005              	.LVL499:
 5006              		.loc 1 3345 16 view .LVU1447
 5007 0010 FFF7FEFF 		bl	bno055_read_mag_y
 5008              	.LVL500:
3346:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5009              		.loc 1 3346 5 is_stmt 1 view .LVU1448
 5010              		.loc 1 3346 8 is_stmt 0 view .LVU1449
 5011 0014 70B9     		cbnz	r0, .L399
 5012 0016 0546     		mov	r5, r0
3347:Core/Src/bno055.c ****     {
3348:Core/Src/bno055.c ****         /* Convert the raw mag y to microTesla*/
3349:Core/Src/bno055.c ****         data_f = (float)(reg_mag_y_s16 / BNO055_MAG_DIV_UT);
 5013              		.loc 1 3349 9 is_stmt 1 view .LVU1450
 5014              		.loc 1 3349 40 is_stmt 0 view .LVU1451
 5015 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5016              	.LVL501:
 5017              		.loc 1 3349 40 view .LVU1452
 5018 001c FFF7FEFF 		bl	__aeabi_i2d
 5019              	.LVL502:
 5020 0020 0022     		movs	r2, #0
 5021 0022 064B     		ldr	r3, .L401
 5022 0024 FFF7FEFF 		bl	__aeabi_dmul
 5023              	.LVL503:
 5024              		.loc 1 3349 16 view .LVU1453
 5025 0028 FFF7FEFF 		bl	__aeabi_d2f
 5026              	.LVL504:
3350:Core/Src/bno055.c ****         *mag_y_f = data_f;
 5027              		.loc 1 3350 9 is_stmt 1 view .LVU1454
 5028              		.loc 1 3350 18 is_stmt 0 view .LVU1455
 5029 002c 2060     		str	r0, [r4]	@ float
 5030              	.LVL505:
 5031              	.L398:
3351:Core/Src/bno055.c ****     }
3352:Core/Src/bno055.c ****     else
3353:Core/Src/bno055.c ****     {
3354:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3355:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccOloYeZ.s 			page 154


3356:Core/Src/bno055.c **** 
3357:Core/Src/bno055.c ****     return com_rslt;
 5032              		.loc 1 3357 5 is_stmt 1 view .LVU1456
3358:Core/Src/bno055.c **** }
 5033              		.loc 1 3358 1 is_stmt 0 view .LVU1457
 5034 002e 2846     		mov	r0, r5
 5035 0030 03B0     		add	sp, sp, #12
 5036              		.cfi_remember_state
 5037              		.cfi_def_cfa_offset 12
 5038              		@ sp needed
 5039 0032 30BD     		pop	{r4, r5, pc}
 5040              	.LVL506:
 5041              	.L399:
 5042              		.cfi_restore_state
3354:Core/Src/bno055.c ****     }
 5043              		.loc 1 3354 18 view .LVU1458
 5044 0034 4FF0FF35 		mov	r5, #-1
 5045 0038 F9E7     		b	.L398
 5046              	.L402:
 5047 003a 00BF     		.align	2
 5048              	.L401:
 5049 003c 0000B03F 		.word	1068498944
 5050              		.cfi_endproc
 5051              	.LFE50:
 5053              		.section	.text.bno055_convert_float_mag_z_uT,"ax",%progbits
 5054              		.align	1
 5055              		.global	bno055_convert_float_mag_z_uT
 5056              		.syntax unified
 5057              		.thumb
 5058              		.thumb_func
 5060              	bno055_convert_float_mag_z_uT:
 5061              	.LVL507:
 5062              	.LFB51:
3359:Core/Src/bno055.c **** 
3360:Core/Src/bno055.c **** /*!
3361:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag z raw data
3362:Core/Src/bno055.c ****  *  to microTesla output as float
3363:Core/Src/bno055.c ****  *
3364:Core/Src/bno055.c ****  *  @param mag_z_f : The mag z microTesla data
3365:Core/Src/bno055.c ****  *
3366:Core/Src/bno055.c ****  *
3367:Core/Src/bno055.c ****  *
3368:Core/Src/bno055.c ****  *  @return results of bus communication function
3369:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3370:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3371:Core/Src/bno055.c ****  *
3372:Core/Src/bno055.c ****  */
3373:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_mag_z_uT(float *mag_z_f)
3374:Core/Src/bno055.c **** {
 5063              		.loc 1 3374 1 is_stmt 1 view -0
 5064              		.cfi_startproc
 5065              		@ args = 0, pretend = 0, frame = 8
 5066              		@ frame_needed = 0, uses_anonymous_args = 0
 5067              		.loc 1 3374 1 is_stmt 0 view .LVU1460
 5068 0000 30B5     		push	{r4, r5, lr}
 5069              		.cfi_def_cfa_offset 12
 5070              		.cfi_offset 4, -12
ARM GAS  /tmp/ccOloYeZ.s 			page 155


 5071              		.cfi_offset 5, -8
 5072              		.cfi_offset 14, -4
 5073 0002 83B0     		sub	sp, sp, #12
 5074              		.cfi_def_cfa_offset 24
 5075 0004 0446     		mov	r4, r0
3375:Core/Src/bno055.c ****     /* Variable used to return value of
3376:Core/Src/bno055.c ****      * communication routine*/
3377:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5076              		.loc 1 3377 5 is_stmt 1 view .LVU1461
 5077              	.LVL508:
3378:Core/Src/bno055.c ****     s16 reg_mag_z_s16 = BNO055_INIT_VALUE;
 5078              		.loc 1 3378 5 view .LVU1462
 5079              		.loc 1 3378 9 is_stmt 0 view .LVU1463
 5080 0006 0023     		movs	r3, #0
 5081 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3379:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5082              		.loc 1 3379 5 is_stmt 1 view .LVU1464
 5083              	.LVL509:
3380:Core/Src/bno055.c **** 
3381:Core/Src/bno055.c ****     /* Read raw mag z data */
3382:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_z(&reg_mag_z_s16);
 5084              		.loc 1 3382 5 view .LVU1465
 5085              		.loc 1 3382 16 is_stmt 0 view .LVU1466
 5086 000c 0DF10600 		add	r0, sp, #6
 5087              	.LVL510:
 5088              		.loc 1 3382 16 view .LVU1467
 5089 0010 FFF7FEFF 		bl	bno055_read_mag_z
 5090              	.LVL511:
3383:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5091              		.loc 1 3383 5 is_stmt 1 view .LVU1468
 5092              		.loc 1 3383 8 is_stmt 0 view .LVU1469
 5093 0014 70B9     		cbnz	r0, .L405
 5094 0016 0546     		mov	r5, r0
3384:Core/Src/bno055.c ****     {
3385:Core/Src/bno055.c ****         /* Convert the raw mag z to microTesla*/
3386:Core/Src/bno055.c ****         data_f = (float)(reg_mag_z_s16 / BNO055_MAG_DIV_UT);
 5095              		.loc 1 3386 9 is_stmt 1 view .LVU1470
 5096              		.loc 1 3386 40 is_stmt 0 view .LVU1471
 5097 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5098              	.LVL512:
 5099              		.loc 1 3386 40 view .LVU1472
 5100 001c FFF7FEFF 		bl	__aeabi_i2d
 5101              	.LVL513:
 5102 0020 0022     		movs	r2, #0
 5103 0022 064B     		ldr	r3, .L407
 5104 0024 FFF7FEFF 		bl	__aeabi_dmul
 5105              	.LVL514:
 5106              		.loc 1 3386 16 view .LVU1473
 5107 0028 FFF7FEFF 		bl	__aeabi_d2f
 5108              	.LVL515:
3387:Core/Src/bno055.c ****         *mag_z_f = data_f;
 5109              		.loc 1 3387 9 is_stmt 1 view .LVU1474
 5110              		.loc 1 3387 18 is_stmt 0 view .LVU1475
 5111 002c 2060     		str	r0, [r4]	@ float
 5112              	.LVL516:
 5113              	.L404:
3388:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccOloYeZ.s 			page 156


3389:Core/Src/bno055.c ****     else
3390:Core/Src/bno055.c ****     {
3391:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3392:Core/Src/bno055.c ****     }
3393:Core/Src/bno055.c **** 
3394:Core/Src/bno055.c ****     return com_rslt;
 5114              		.loc 1 3394 5 is_stmt 1 view .LVU1476
3395:Core/Src/bno055.c **** }
 5115              		.loc 1 3395 1 is_stmt 0 view .LVU1477
 5116 002e 2846     		mov	r0, r5
 5117 0030 03B0     		add	sp, sp, #12
 5118              		.cfi_remember_state
 5119              		.cfi_def_cfa_offset 12
 5120              		@ sp needed
 5121 0032 30BD     		pop	{r4, r5, pc}
 5122              	.LVL517:
 5123              	.L405:
 5124              		.cfi_restore_state
3391:Core/Src/bno055.c ****     }
 5125              		.loc 1 3391 18 view .LVU1478
 5126 0034 4FF0FF35 		mov	r5, #-1
 5127 0038 F9E7     		b	.L404
 5128              	.L408:
 5129 003a 00BF     		.align	2
 5130              	.L407:
 5131 003c 0000B03F 		.word	1068498944
 5132              		.cfi_endproc
 5133              	.LFE51:
 5135              		.section	.text.bno055_convert_float_mag_xyz_uT,"ax",%progbits
 5136              		.align	1
 5137              		.global	bno055_convert_float_mag_xyz_uT
 5138              		.syntax unified
 5139              		.thumb
 5140              		.thumb_func
 5142              	bno055_convert_float_mag_xyz_uT:
 5143              	.LVL518:
 5144              	.LFB52:
3396:Core/Src/bno055.c **** 
3397:Core/Src/bno055.c **** /*!
3398:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag yz raw data
3399:Core/Src/bno055.c ****  *  to microTesla output as float
3400:Core/Src/bno055.c ****  *
3401:Core/Src/bno055.c ****  *  @param mag_xyz_data : The microTesla data of mag xyz
3402:Core/Src/bno055.c ****  *
3403:Core/Src/bno055.c ****  *  Parameter |    result
3404:Core/Src/bno055.c ****  *  --------- | -----------------
3405:Core/Src/bno055.c ****  *    x       | microTesla data of mag
3406:Core/Src/bno055.c ****  *    y       | microTesla data of mag
3407:Core/Src/bno055.c ****  *    z       | microTesla data of mag
3408:Core/Src/bno055.c ****  *
3409:Core/Src/bno055.c ****  *
3410:Core/Src/bno055.c ****  *  @return results of bus communication function
3411:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3412:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3413:Core/Src/bno055.c ****  *
3414:Core/Src/bno055.c ****  */
3415:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_mag_xyz_uT(struct bno055_mag_float_t *mag_xyz_data
ARM GAS  /tmp/ccOloYeZ.s 			page 157


3416:Core/Src/bno055.c **** {
 5145              		.loc 1 3416 1 is_stmt 1 view -0
 5146              		.cfi_startproc
 5147              		@ args = 0, pretend = 0, frame = 8
 5148              		@ frame_needed = 0, uses_anonymous_args = 0
 5149              		.loc 1 3416 1 is_stmt 0 view .LVU1480
 5150 0000 30B5     		push	{r4, r5, lr}
 5151              		.cfi_def_cfa_offset 12
 5152              		.cfi_offset 4, -12
 5153              		.cfi_offset 5, -8
 5154              		.cfi_offset 14, -4
 5155 0002 83B0     		sub	sp, sp, #12
 5156              		.cfi_def_cfa_offset 24
 5157 0004 0446     		mov	r4, r0
3417:Core/Src/bno055.c ****     /* Variable used to return value of
3418:Core/Src/bno055.c ****      * communication routine*/
3419:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5158              		.loc 1 3419 5 is_stmt 1 view .LVU1481
 5159              	.LVL519:
3420:Core/Src/bno055.c ****     struct bno055_mag_t mag_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 5160              		.loc 1 3420 5 view .LVU1482
 5161              		.loc 1 3420 25 is_stmt 0 view .LVU1483
 5162 0006 0023     		movs	r3, #0
 5163 0008 ADF80030 		strh	r3, [sp]	@ movhi
 5164 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 5165 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
3421:Core/Src/bno055.c **** 
3422:Core/Src/bno055.c ****     /* Read raw mag x data */
3423:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_xyz(&mag_xyz);
 5166              		.loc 1 3423 5 is_stmt 1 view .LVU1484
 5167              		.loc 1 3423 16 is_stmt 0 view .LVU1485
 5168 0014 6846     		mov	r0, sp
 5169              	.LVL520:
 5170              		.loc 1 3423 16 view .LVU1486
 5171 0016 FFF7FEFF 		bl	bno055_read_mag_xyz
 5172              	.LVL521:
3424:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5173              		.loc 1 3424 5 is_stmt 1 view .LVU1487
 5174              		.loc 1 3424 8 is_stmt 0 view .LVU1488
 5175 001a 20BB     		cbnz	r0, .L411
 5176 001c 0546     		mov	r5, r0
3425:Core/Src/bno055.c ****     {
3426:Core/Src/bno055.c ****         /* Convert mag raw xyz to microTesla*/
3427:Core/Src/bno055.c ****         mag_xyz_data->x = (float)(mag_xyz.x / BNO055_MAG_DIV_UT);
 5177              		.loc 1 3427 9 is_stmt 1 view .LVU1489
 5178              		.loc 1 3427 45 is_stmt 0 view .LVU1490
 5179 001e BDF90000 		ldrsh	r0, [sp]
 5180              	.LVL522:
 5181              		.loc 1 3427 45 view .LVU1491
 5182 0022 FFF7FEFF 		bl	__aeabi_i2d
 5183              	.LVL523:
 5184 0026 0022     		movs	r2, #0
 5185 0028 104B     		ldr	r3, .L413
 5186 002a FFF7FEFF 		bl	__aeabi_dmul
 5187              	.LVL524:
 5188              		.loc 1 3427 27 view .LVU1492
 5189 002e FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  /tmp/ccOloYeZ.s 			page 158


 5190              	.LVL525:
 5191              		.loc 1 3427 25 view .LVU1493
 5192 0032 2060     		str	r0, [r4]	@ float
3428:Core/Src/bno055.c ****         mag_xyz_data->y = (float)(mag_xyz.y / BNO055_MAG_DIV_UT);
 5193              		.loc 1 3428 9 is_stmt 1 view .LVU1494
 5194              		.loc 1 3428 45 is_stmt 0 view .LVU1495
 5195 0034 BDF90200 		ldrsh	r0, [sp, #2]
 5196 0038 FFF7FEFF 		bl	__aeabi_i2d
 5197              	.LVL526:
 5198 003c 0022     		movs	r2, #0
 5199 003e 0B4B     		ldr	r3, .L413
 5200 0040 FFF7FEFF 		bl	__aeabi_dmul
 5201              	.LVL527:
 5202              		.loc 1 3428 27 view .LVU1496
 5203 0044 FFF7FEFF 		bl	__aeabi_d2f
 5204              	.LVL528:
 5205              		.loc 1 3428 25 view .LVU1497
 5206 0048 6060     		str	r0, [r4, #4]	@ float
3429:Core/Src/bno055.c ****         mag_xyz_data->z = (float)(mag_xyz.z / BNO055_MAG_DIV_UT);
 5207              		.loc 1 3429 9 is_stmt 1 view .LVU1498
 5208              		.loc 1 3429 45 is_stmt 0 view .LVU1499
 5209 004a BDF90400 		ldrsh	r0, [sp, #4]
 5210 004e FFF7FEFF 		bl	__aeabi_i2d
 5211              	.LVL529:
 5212 0052 0022     		movs	r2, #0
 5213 0054 054B     		ldr	r3, .L413
 5214 0056 FFF7FEFF 		bl	__aeabi_dmul
 5215              	.LVL530:
 5216              		.loc 1 3429 27 view .LVU1500
 5217 005a FFF7FEFF 		bl	__aeabi_d2f
 5218              	.LVL531:
 5219              		.loc 1 3429 25 view .LVU1501
 5220 005e A060     		str	r0, [r4, #8]	@ float
 5221              	.L410:
 5222              	.LVL532:
3430:Core/Src/bno055.c ****     }
3431:Core/Src/bno055.c ****     else
3432:Core/Src/bno055.c ****     {
3433:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3434:Core/Src/bno055.c ****     }
3435:Core/Src/bno055.c **** 
3436:Core/Src/bno055.c ****     return com_rslt;
 5223              		.loc 1 3436 5 is_stmt 1 view .LVU1502
3437:Core/Src/bno055.c **** }
 5224              		.loc 1 3437 1 is_stmt 0 view .LVU1503
 5225 0060 2846     		mov	r0, r5
 5226 0062 03B0     		add	sp, sp, #12
 5227              		.cfi_remember_state
 5228              		.cfi_def_cfa_offset 12
 5229              		@ sp needed
 5230 0064 30BD     		pop	{r4, r5, pc}
 5231              	.LVL533:
 5232              	.L411:
 5233              		.cfi_restore_state
3433:Core/Src/bno055.c ****     }
 5234              		.loc 1 3433 18 view .LVU1504
 5235 0066 4FF0FF35 		mov	r5, #-1
ARM GAS  /tmp/ccOloYeZ.s 			page 159


 5236 006a F9E7     		b	.L410
 5237              	.L414:
 5238              		.align	2
 5239              	.L413:
 5240 006c 0000B03F 		.word	1068498944
 5241              		.cfi_endproc
 5242              	.LFE52:
 5244              		.global	__aeabi_ddiv
 5245              		.section	.text.bno055_convert_float_linear_accel_x_msq,"ax",%progbits
 5246              		.align	1
 5247              		.global	bno055_convert_float_linear_accel_x_msq
 5248              		.syntax unified
 5249              		.thumb
 5250              		.thumb_func
 5252              	bno055_convert_float_linear_accel_x_msq:
 5253              	.LVL534:
 5254              	.LFB69:
3438:Core/Src/bno055.c **** 
3439:Core/Src/bno055.c **** /*!
3440:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro x raw data
3441:Core/Src/bno055.c ****  *  to dps output as float
3442:Core/Src/bno055.c ****  *
3443:Core/Src/bno055.c ****  *  @param gyro_x_f : The gyro x dps float data
3444:Core/Src/bno055.c ****  *
3445:Core/Src/bno055.c ****  *
3446:Core/Src/bno055.c ****  *
3447:Core/Src/bno055.c ****  *  @return results of bus communication function
3448:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3449:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3450:Core/Src/bno055.c ****  */
3451:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_x_dps(float *gyro_x_f)
3452:Core/Src/bno055.c **** {
3453:Core/Src/bno055.c ****     /* Variable used to return value of
3454:Core/Src/bno055.c ****      * communication routine*/
3455:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3456:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
3457:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3458:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3459:Core/Src/bno055.c **** 
3460:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3461:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
3462:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3463:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
3464:Core/Src/bno055.c ****     {
3465:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
3466:Core/Src/bno055.c ****     }
3467:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3468:Core/Src/bno055.c ****     {
3469:Core/Src/bno055.c ****         /* Read gyro raw x data */
3470:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_x(&reg_gyro_x_s16);
3471:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3472:Core/Src/bno055.c ****         {
3473:Core/Src/bno055.c ****             /* Convert the raw gyro x to dps*/
3474:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_x_s16 / BNO055_GYRO_DIV_DPS);
3475:Core/Src/bno055.c ****             *gyro_x_f = data_f;
3476:Core/Src/bno055.c ****         }
3477:Core/Src/bno055.c ****         else
ARM GAS  /tmp/ccOloYeZ.s 			page 160


3478:Core/Src/bno055.c ****         {
3479:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3480:Core/Src/bno055.c ****         }
3481:Core/Src/bno055.c ****     }
3482:Core/Src/bno055.c ****     else
3483:Core/Src/bno055.c ****     {
3484:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3485:Core/Src/bno055.c ****     }
3486:Core/Src/bno055.c **** 
3487:Core/Src/bno055.c ****     return com_rslt;
3488:Core/Src/bno055.c **** }
3489:Core/Src/bno055.c **** 
3490:Core/Src/bno055.c **** /*!
3491:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro x raw data
3492:Core/Src/bno055.c ****  *  to rps output as float
3493:Core/Src/bno055.c ****  *
3494:Core/Src/bno055.c ****  *  @param gyro_x_f : The gyro x dps float data
3495:Core/Src/bno055.c ****  *
3496:Core/Src/bno055.c ****  *
3497:Core/Src/bno055.c ****  *
3498:Core/Src/bno055.c ****  *  @return results of bus communication function
3499:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3500:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3501:Core/Src/bno055.c ****  *
3502:Core/Src/bno055.c ****  */
3503:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_x_rps(float *gyro_x_f)
3504:Core/Src/bno055.c **** {
3505:Core/Src/bno055.c ****     /* Variable used to return value of
3506:Core/Src/bno055.c ****      * communication routine*/
3507:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3508:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
3509:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3510:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3511:Core/Src/bno055.c **** 
3512:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3513:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
3514:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3515:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
3516:Core/Src/bno055.c ****     {
3517:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
3518:Core/Src/bno055.c ****     }
3519:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3520:Core/Src/bno055.c ****     {
3521:Core/Src/bno055.c ****         /* Read gyro raw x data */
3522:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_x(&reg_gyro_x_s16);
3523:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3524:Core/Src/bno055.c ****         {
3525:Core/Src/bno055.c ****             /* Convert the raw gyro x to rps*/
3526:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_x_s16 / BNO055_GYRO_DIV_RPS);
3527:Core/Src/bno055.c ****             *gyro_x_f = data_f;
3528:Core/Src/bno055.c ****         }
3529:Core/Src/bno055.c ****         else
3530:Core/Src/bno055.c ****         {
3531:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3532:Core/Src/bno055.c ****         }
3533:Core/Src/bno055.c ****     }
3534:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccOloYeZ.s 			page 161


3535:Core/Src/bno055.c ****     {
3536:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3537:Core/Src/bno055.c ****     }
3538:Core/Src/bno055.c **** 
3539:Core/Src/bno055.c ****     return com_rslt;
3540:Core/Src/bno055.c **** }
3541:Core/Src/bno055.c **** 
3542:Core/Src/bno055.c **** /*!
3543:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro y raw data
3544:Core/Src/bno055.c ****  *  to dps output as float
3545:Core/Src/bno055.c ****  *
3546:Core/Src/bno055.c ****  *  @param gyro_y_f : The gyro y dps float data
3547:Core/Src/bno055.c ****  *
3548:Core/Src/bno055.c ****  *
3549:Core/Src/bno055.c ****  *
3550:Core/Src/bno055.c ****  *  @return results of bus communication function
3551:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3552:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3553:Core/Src/bno055.c ****  *
3554:Core/Src/bno055.c ****  */
3555:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_y_dps(float *gyro_y_f)
3556:Core/Src/bno055.c **** {
3557:Core/Src/bno055.c ****     /* Variable used to return value of
3558:Core/Src/bno055.c ****      * communication routine*/
3559:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3560:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
3561:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3562:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3563:Core/Src/bno055.c **** 
3564:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3565:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
3566:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3567:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
3568:Core/Src/bno055.c ****     {
3569:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
3570:Core/Src/bno055.c ****     }
3571:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3572:Core/Src/bno055.c ****     {
3573:Core/Src/bno055.c ****         /* Read gyro raw y data */
3574:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_y(&reg_gyro_y_s16);
3575:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3576:Core/Src/bno055.c ****         {
3577:Core/Src/bno055.c ****             /* Convert the raw gyro x to dps*/
3578:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_y_s16 / BNO055_GYRO_DIV_DPS);
3579:Core/Src/bno055.c ****             *gyro_y_f = data_f;
3580:Core/Src/bno055.c ****         }
3581:Core/Src/bno055.c ****         else
3582:Core/Src/bno055.c ****         {
3583:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3584:Core/Src/bno055.c ****         }
3585:Core/Src/bno055.c ****     }
3586:Core/Src/bno055.c ****     else
3587:Core/Src/bno055.c ****     {
3588:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3589:Core/Src/bno055.c ****     }
3590:Core/Src/bno055.c **** 
3591:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/ccOloYeZ.s 			page 162


3592:Core/Src/bno055.c **** }
3593:Core/Src/bno055.c **** 
3594:Core/Src/bno055.c **** /*!
3595:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro y raw data
3596:Core/Src/bno055.c ****  *  to rps output as float
3597:Core/Src/bno055.c ****  *
3598:Core/Src/bno055.c ****  *  @param gyro_y_f : The gyro y dps float data
3599:Core/Src/bno055.c ****  *
3600:Core/Src/bno055.c ****  *
3601:Core/Src/bno055.c ****  *
3602:Core/Src/bno055.c ****  *  @return results of bus communication function
3603:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3604:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3605:Core/Src/bno055.c ****  *
3606:Core/Src/bno055.c ****  *
3607:Core/Src/bno055.c ****  */
3608:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_y_rps(float *gyro_y_f)
3609:Core/Src/bno055.c **** {
3610:Core/Src/bno055.c ****     /* Variable used to return value of
3611:Core/Src/bno055.c ****      * communication routine*/
3612:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3613:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
3614:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3615:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3616:Core/Src/bno055.c **** 
3617:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3618:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
3619:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3620:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
3621:Core/Src/bno055.c ****     {
3622:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
3623:Core/Src/bno055.c ****     }
3624:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3625:Core/Src/bno055.c ****     {
3626:Core/Src/bno055.c ****         /* Read gyro raw y data */
3627:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_y(&reg_gyro_y_s16);
3628:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3629:Core/Src/bno055.c ****         {
3630:Core/Src/bno055.c ****             /* Convert the raw gyro x to rps*/
3631:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_y_s16 / BNO055_GYRO_DIV_RPS);
3632:Core/Src/bno055.c ****             *gyro_y_f = data_f;
3633:Core/Src/bno055.c ****         }
3634:Core/Src/bno055.c ****         else
3635:Core/Src/bno055.c ****         {
3636:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3637:Core/Src/bno055.c ****         }
3638:Core/Src/bno055.c ****     }
3639:Core/Src/bno055.c ****     else
3640:Core/Src/bno055.c ****     {
3641:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3642:Core/Src/bno055.c ****     }
3643:Core/Src/bno055.c **** 
3644:Core/Src/bno055.c ****     return com_rslt;
3645:Core/Src/bno055.c **** }
3646:Core/Src/bno055.c **** 
3647:Core/Src/bno055.c **** /*!
3648:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro z raw data
ARM GAS  /tmp/ccOloYeZ.s 			page 163


3649:Core/Src/bno055.c ****  *  to dps output as float
3650:Core/Src/bno055.c ****  *
3651:Core/Src/bno055.c ****  *  @param gyro_z_f : The gyro z dps float data
3652:Core/Src/bno055.c ****  *
3653:Core/Src/bno055.c ****  *
3654:Core/Src/bno055.c ****  *
3655:Core/Src/bno055.c ****  *  @return results of bus communication function
3656:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3657:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3658:Core/Src/bno055.c ****  *
3659:Core/Src/bno055.c ****  */
3660:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_z_dps(float *gyro_z_f)
3661:Core/Src/bno055.c **** {
3662:Core/Src/bno055.c ****     /* Variable used to return value of
3663:Core/Src/bno055.c ****      * communication routine*/
3664:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3665:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
3666:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3667:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3668:Core/Src/bno055.c **** 
3669:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3670:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
3671:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3672:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
3673:Core/Src/bno055.c ****     {
3674:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
3675:Core/Src/bno055.c ****     }
3676:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3677:Core/Src/bno055.c ****     {
3678:Core/Src/bno055.c ****         /* Read gyro raw z data */
3679:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_z(&reg_gyro_z_s16);
3680:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3681:Core/Src/bno055.c ****         {
3682:Core/Src/bno055.c ****             /* Convert the raw gyro x to dps*/
3683:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_z_s16 / BNO055_GYRO_DIV_DPS);
3684:Core/Src/bno055.c ****             *gyro_z_f = data_f;
3685:Core/Src/bno055.c ****         }
3686:Core/Src/bno055.c ****         else
3687:Core/Src/bno055.c ****         {
3688:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3689:Core/Src/bno055.c ****         }
3690:Core/Src/bno055.c ****     }
3691:Core/Src/bno055.c ****     else
3692:Core/Src/bno055.c ****     {
3693:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3694:Core/Src/bno055.c ****     }
3695:Core/Src/bno055.c **** 
3696:Core/Src/bno055.c ****     return com_rslt;
3697:Core/Src/bno055.c **** }
3698:Core/Src/bno055.c **** 
3699:Core/Src/bno055.c **** /*!
3700:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro z raw data
3701:Core/Src/bno055.c ****  *  to rps output as float
3702:Core/Src/bno055.c ****  *
3703:Core/Src/bno055.c ****  *  @param gyro_z_f : The gyro z rps float data
3704:Core/Src/bno055.c ****  *
3705:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 164


3706:Core/Src/bno055.c ****  *
3707:Core/Src/bno055.c ****  *  @return results of bus communication function
3708:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3709:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3710:Core/Src/bno055.c ****  *
3711:Core/Src/bno055.c ****  */
3712:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_z_rps(float *gyro_z_f)
3713:Core/Src/bno055.c **** {
3714:Core/Src/bno055.c ****     /* Variable used to return value of
3715:Core/Src/bno055.c ****      * communication routine*/
3716:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3717:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
3718:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3719:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3720:Core/Src/bno055.c **** 
3721:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3722:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
3723:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3724:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
3725:Core/Src/bno055.c ****     {
3726:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
3727:Core/Src/bno055.c ****     }
3728:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3729:Core/Src/bno055.c ****     {
3730:Core/Src/bno055.c ****         /* Read gyro raw x data */
3731:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_z(&reg_gyro_z_s16);
3732:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3733:Core/Src/bno055.c ****         {
3734:Core/Src/bno055.c ****             /* Convert the raw gyro x to rps*/
3735:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_z_s16 / BNO055_GYRO_DIV_RPS);
3736:Core/Src/bno055.c ****             *gyro_z_f = data_f;
3737:Core/Src/bno055.c ****         }
3738:Core/Src/bno055.c ****         else
3739:Core/Src/bno055.c ****         {
3740:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3741:Core/Src/bno055.c ****         }
3742:Core/Src/bno055.c ****     }
3743:Core/Src/bno055.c ****     else
3744:Core/Src/bno055.c ****     {
3745:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3746:Core/Src/bno055.c ****     }
3747:Core/Src/bno055.c **** 
3748:Core/Src/bno055.c ****     return com_rslt;
3749:Core/Src/bno055.c **** }
3750:Core/Src/bno055.c **** 
3751:Core/Src/bno055.c **** /*!
3752:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro xyz raw data
3753:Core/Src/bno055.c ****  *  to dps output as float
3754:Core/Src/bno055.c ****  *
3755:Core/Src/bno055.c ****  *  @param gyro_xyz_data : The dps data of gyro xyz
3756:Core/Src/bno055.c ****  *
3757:Core/Src/bno055.c ****  *  Parameter |    result
3758:Core/Src/bno055.c ****  *  --------- | -----------------
3759:Core/Src/bno055.c ****  *    x       | dps data of gyro
3760:Core/Src/bno055.c ****  *    y       | dps data of gyro
3761:Core/Src/bno055.c ****  *    z       | dps data of gyro
3762:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 165


3763:Core/Src/bno055.c ****  *
3764:Core/Src/bno055.c ****  *  @return results of bus communication function
3765:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3766:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3767:Core/Src/bno055.c ****  *
3768:Core/Src/bno055.c ****  *
3769:Core/Src/bno055.c ****  */
3770:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_xyz_dps(struct bno055_gyro_float_t *gyro_xyz_
3771:Core/Src/bno055.c **** {
3772:Core/Src/bno055.c ****     /* Variable used to return value of
3773:Core/Src/bno055.c ****      * communication routine*/
3774:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3775:Core/Src/bno055.c ****     struct bno055_gyro_t gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
3776:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3777:Core/Src/bno055.c **** 
3778:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3779:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
3780:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3781:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
3782:Core/Src/bno055.c ****     {
3783:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
3784:Core/Src/bno055.c ****     }
3785:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3786:Core/Src/bno055.c ****     {
3787:Core/Src/bno055.c ****         /* Read gyro raw xyz data */
3788:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_xyz(&gyro_xyz);
3789:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3790:Core/Src/bno055.c ****         {
3791:Core/Src/bno055.c ****             /* Convert gyro raw xyz to dps*/
3792:Core/Src/bno055.c ****             gyro_xyz_data->x = (float)(gyro_xyz.x / BNO055_GYRO_DIV_DPS);
3793:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
3794:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
3795:Core/Src/bno055.c ****         }
3796:Core/Src/bno055.c ****         else
3797:Core/Src/bno055.c ****         {
3798:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3799:Core/Src/bno055.c ****         }
3800:Core/Src/bno055.c ****     }
3801:Core/Src/bno055.c ****     else
3802:Core/Src/bno055.c ****     {
3803:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3804:Core/Src/bno055.c ****     }
3805:Core/Src/bno055.c **** 
3806:Core/Src/bno055.c ****     return com_rslt;
3807:Core/Src/bno055.c **** }
3808:Core/Src/bno055.c **** 
3809:Core/Src/bno055.c **** /*!
3810:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro xyz raw data
3811:Core/Src/bno055.c ****  *  to rps output as float
3812:Core/Src/bno055.c ****  *
3813:Core/Src/bno055.c ****  *  @param gyro_xyz_data : The rps data of gyro xyz
3814:Core/Src/bno055.c ****  *
3815:Core/Src/bno055.c ****  *  Parameter |    result
3816:Core/Src/bno055.c ****  *  --------- | -----------------
3817:Core/Src/bno055.c ****  *    x       | rps data of gyro
3818:Core/Src/bno055.c ****  *    y       | rps data of gyro
3819:Core/Src/bno055.c ****  *    z       | rps data of gyro
ARM GAS  /tmp/ccOloYeZ.s 			page 166


3820:Core/Src/bno055.c ****  *
3821:Core/Src/bno055.c ****  *
3822:Core/Src/bno055.c ****  *  @return results of bus communication function
3823:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3824:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3825:Core/Src/bno055.c ****  *
3826:Core/Src/bno055.c ****  *
3827:Core/Src/bno055.c ****  */
3828:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_xyz_rps(struct bno055_gyro_float_t *gyro_xyz_
3829:Core/Src/bno055.c **** {
3830:Core/Src/bno055.c ****     /* Variable used to return value of
3831:Core/Src/bno055.c ****      * communication routine*/
3832:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3833:Core/Src/bno055.c ****     struct bno055_gyro_t gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
3834:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3835:Core/Src/bno055.c **** 
3836:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3837:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
3838:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3839:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
3840:Core/Src/bno055.c ****     {
3841:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
3842:Core/Src/bno055.c ****     }
3843:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3844:Core/Src/bno055.c ****     {
3845:Core/Src/bno055.c ****         /* Read gyro raw xyz data */
3846:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_xyz(&gyro_xyz);
3847:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3848:Core/Src/bno055.c ****         {
3849:Core/Src/bno055.c ****             /* Convert gyro raw xyz to rps*/
3850:Core/Src/bno055.c ****             gyro_xyz_data->x = (float)(gyro_xyz.x / BNO055_GYRO_DIV_RPS);
3851:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
3852:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
3853:Core/Src/bno055.c ****         }
3854:Core/Src/bno055.c ****         else
3855:Core/Src/bno055.c ****         {
3856:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3857:Core/Src/bno055.c ****         }
3858:Core/Src/bno055.c ****     }
3859:Core/Src/bno055.c ****     else
3860:Core/Src/bno055.c ****     {
3861:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3862:Core/Src/bno055.c ****     }
3863:Core/Src/bno055.c **** 
3864:Core/Src/bno055.c ****     return com_rslt;
3865:Core/Src/bno055.c **** }
3866:Core/Src/bno055.c **** 
3867:Core/Src/bno055.c **** /*!
3868:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler h raw data
3869:Core/Src/bno055.c ****  *  to degree output as float
3870:Core/Src/bno055.c ****  *
3871:Core/Src/bno055.c ****  *  @param euler_h_f : The float value of Euler h degree
3872:Core/Src/bno055.c ****  *
3873:Core/Src/bno055.c ****  *  @return results of bus communication function
3874:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3875:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3876:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 167


3877:Core/Src/bno055.c ****  *
3878:Core/Src/bno055.c ****  */
3879:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_h_deg(float *euler_h_f)
3880:Core/Src/bno055.c **** {
3881:Core/Src/bno055.c ****     /* Variable used to return value of
3882:Core/Src/bno055.c ****      * communication routine*/
3883:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3884:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
3885:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3886:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
3887:Core/Src/bno055.c **** 
3888:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
3889:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
3890:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
3891:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
3892:Core/Src/bno055.c ****     {
3893:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
3894:Core/Src/bno055.c ****     }
3895:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3896:Core/Src/bno055.c ****     {
3897:Core/Src/bno055.c ****         /* Read Euler raw h data*/
3898:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_h(&reg_euler_h_s16);
3899:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3900:Core/Src/bno055.c ****         {
3901:Core/Src/bno055.c ****             /* Convert raw Euler h data to degree*/
3902:Core/Src/bno055.c ****             data_f = (float)(reg_euler_h_s16 / BNO055_EULER_DIV_DEG);
3903:Core/Src/bno055.c ****             *euler_h_f = data_f;
3904:Core/Src/bno055.c ****         }
3905:Core/Src/bno055.c ****         else
3906:Core/Src/bno055.c ****         {
3907:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3908:Core/Src/bno055.c ****         }
3909:Core/Src/bno055.c ****     }
3910:Core/Src/bno055.c ****     else
3911:Core/Src/bno055.c ****     {
3912:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3913:Core/Src/bno055.c ****     }
3914:Core/Src/bno055.c **** 
3915:Core/Src/bno055.c ****     return com_rslt;
3916:Core/Src/bno055.c **** }
3917:Core/Src/bno055.c **** 
3918:Core/Src/bno055.c **** /*!
3919:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler h raw data
3920:Core/Src/bno055.c ****  *  to radians output as float
3921:Core/Src/bno055.c ****  *
3922:Core/Src/bno055.c ****  *  @param euler_h_f : The float value of Euler h radians
3923:Core/Src/bno055.c ****  *
3924:Core/Src/bno055.c ****  *  @return results of bus communication function
3925:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3926:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3927:Core/Src/bno055.c ****  *
3928:Core/Src/bno055.c ****  *
3929:Core/Src/bno055.c ****  */
3930:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_h_rad(float *euler_h_f)
3931:Core/Src/bno055.c **** {
3932:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3933:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccOloYeZ.s 			page 168


3934:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3935:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
3936:Core/Src/bno055.c **** 
3937:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
3938:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
3939:Core/Src/bno055.c ****     {
3940:Core/Src/bno055.c ****         /* Read the current Euler unit and set the
3941:Core/Src/bno055.c ****          * unit as radians if the unit is in degree */
3942:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
3943:Core/Src/bno055.c ****     }
3944:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3945:Core/Src/bno055.c ****     {
3946:Core/Src/bno055.c ****         /* Read Euler raw h data*/
3947:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_h(&reg_euler_h_s16);
3948:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3949:Core/Src/bno055.c ****         {
3950:Core/Src/bno055.c ****             /* Convert raw Euler h data to degree*/
3951:Core/Src/bno055.c ****             data_f = (float)(reg_euler_h_s16 / BNO055_EULER_DIV_RAD);
3952:Core/Src/bno055.c ****             *euler_h_f = data_f;
3953:Core/Src/bno055.c ****         }
3954:Core/Src/bno055.c ****         else
3955:Core/Src/bno055.c ****         {
3956:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3957:Core/Src/bno055.c ****         }
3958:Core/Src/bno055.c ****     }
3959:Core/Src/bno055.c ****     else
3960:Core/Src/bno055.c ****     {
3961:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3962:Core/Src/bno055.c ****     }
3963:Core/Src/bno055.c **** 
3964:Core/Src/bno055.c ****     return com_rslt;
3965:Core/Src/bno055.c **** }
3966:Core/Src/bno055.c **** 
3967:Core/Src/bno055.c **** /*!
3968:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler r raw data
3969:Core/Src/bno055.c ****  *  to degree output as float
3970:Core/Src/bno055.c ****  *
3971:Core/Src/bno055.c ****  *  @param euler_r_f : The float value of Euler r degree
3972:Core/Src/bno055.c ****  *
3973:Core/Src/bno055.c ****  *  @return results of bus communication function
3974:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3975:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3976:Core/Src/bno055.c ****  *
3977:Core/Src/bno055.c ****  */
3978:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_r_deg(float *euler_r_f)
3979:Core/Src/bno055.c **** {
3980:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3981:Core/Src/bno055.c ****     s16 reg_euler_r = BNO055_INIT_VALUE;
3982:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3983:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
3984:Core/Src/bno055.c **** 
3985:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
3986:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
3987:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
3988:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
3989:Core/Src/bno055.c ****     {
3990:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
ARM GAS  /tmp/ccOloYeZ.s 			page 169


3991:Core/Src/bno055.c ****     }
3992:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3993:Core/Src/bno055.c ****     {
3994:Core/Src/bno055.c ****         /* Read Euler raw r data*/
3995:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_r(&reg_euler_r);
3996:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3997:Core/Src/bno055.c ****         {
3998:Core/Src/bno055.c ****             /* Convert raw Euler r data to degree*/
3999:Core/Src/bno055.c ****             data_f = (float)(reg_euler_r / BNO055_EULER_DIV_DEG);
4000:Core/Src/bno055.c ****             *euler_r_f = data_f;
4001:Core/Src/bno055.c ****         }
4002:Core/Src/bno055.c ****         else
4003:Core/Src/bno055.c ****         {
4004:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4005:Core/Src/bno055.c ****         }
4006:Core/Src/bno055.c ****     }
4007:Core/Src/bno055.c ****     else
4008:Core/Src/bno055.c ****     {
4009:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4010:Core/Src/bno055.c ****     }
4011:Core/Src/bno055.c **** 
4012:Core/Src/bno055.c ****     return com_rslt;
4013:Core/Src/bno055.c **** }
4014:Core/Src/bno055.c **** 
4015:Core/Src/bno055.c **** /*!
4016:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler r raw data
4017:Core/Src/bno055.c ****  *  to radians output as float
4018:Core/Src/bno055.c ****  *
4019:Core/Src/bno055.c ****  *  @param euler_r_f : The float value of Euler r radians
4020:Core/Src/bno055.c ****  *
4021:Core/Src/bno055.c ****  *  @return results of bus communication function
4022:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4023:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4024:Core/Src/bno055.c ****  *
4025:Core/Src/bno055.c ****  */
4026:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_r_rad(float *euler_r_f)
4027:Core/Src/bno055.c **** {
4028:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4029:Core/Src/bno055.c ****     s16 reg_euler_r_f = BNO055_INIT_VALUE;
4030:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4031:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4032:Core/Src/bno055.c **** 
4033:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4034:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
4035:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4036:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
4037:Core/Src/bno055.c ****     {
4038:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
4039:Core/Src/bno055.c ****     }
4040:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4041:Core/Src/bno055.c ****     {
4042:Core/Src/bno055.c ****         /* Read Euler raw r data*/
4043:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_r(&reg_euler_r_f);
4044:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4045:Core/Src/bno055.c ****         {
4046:Core/Src/bno055.c ****             /* Convert raw Euler r data to radians*/
4047:Core/Src/bno055.c ****             data_f = (float)(reg_euler_r_f / BNO055_EULER_DIV_RAD);
ARM GAS  /tmp/ccOloYeZ.s 			page 170


4048:Core/Src/bno055.c ****             *euler_r_f = data_f;
4049:Core/Src/bno055.c ****         }
4050:Core/Src/bno055.c ****         else
4051:Core/Src/bno055.c ****         {
4052:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4053:Core/Src/bno055.c ****         }
4054:Core/Src/bno055.c ****     }
4055:Core/Src/bno055.c ****     else
4056:Core/Src/bno055.c ****     {
4057:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4058:Core/Src/bno055.c ****     }
4059:Core/Src/bno055.c **** 
4060:Core/Src/bno055.c ****     return com_rslt;
4061:Core/Src/bno055.c **** }
4062:Core/Src/bno055.c **** 
4063:Core/Src/bno055.c **** /*!
4064:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler p raw data
4065:Core/Src/bno055.c ****  *  to degree output as float
4066:Core/Src/bno055.c ****  *
4067:Core/Src/bno055.c ****  *  @param euler_p_f : The float value of Euler p degree
4068:Core/Src/bno055.c ****  *
4069:Core/Src/bno055.c ****  *  @return results of bus communication function
4070:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4071:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4072:Core/Src/bno055.c ****  *
4073:Core/Src/bno055.c ****  */
4074:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_p_deg(float *euler_p_f)
4075:Core/Src/bno055.c **** {
4076:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4077:Core/Src/bno055.c ****     s16 reg_euler_p_f = BNO055_INIT_VALUE;
4078:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4079:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4080:Core/Src/bno055.c **** 
4081:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4082:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
4083:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4084:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
4085:Core/Src/bno055.c ****     {
4086:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
4087:Core/Src/bno055.c ****     }
4088:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4089:Core/Src/bno055.c ****     {
4090:Core/Src/bno055.c ****         /* Read Euler raw p data*/
4091:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_p(&reg_euler_p_f);
4092:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4093:Core/Src/bno055.c ****         {
4094:Core/Src/bno055.c ****             /* Convert raw Euler p data to degree*/
4095:Core/Src/bno055.c ****             data_f = (float)(reg_euler_p_f / BNO055_EULER_DIV_DEG);
4096:Core/Src/bno055.c ****             *euler_p_f = data_f;
4097:Core/Src/bno055.c ****         }
4098:Core/Src/bno055.c ****         else
4099:Core/Src/bno055.c ****         {
4100:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4101:Core/Src/bno055.c ****         }
4102:Core/Src/bno055.c ****     }
4103:Core/Src/bno055.c ****     else
4104:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 171


4105:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4106:Core/Src/bno055.c ****     }
4107:Core/Src/bno055.c **** 
4108:Core/Src/bno055.c ****     return com_rslt;
4109:Core/Src/bno055.c **** }
4110:Core/Src/bno055.c **** 
4111:Core/Src/bno055.c **** /*!
4112:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler p raw data
4113:Core/Src/bno055.c ****  *  to radians output as float
4114:Core/Src/bno055.c ****  *
4115:Core/Src/bno055.c ****  *  @param euler_p_f : The float value of Euler p radians
4116:Core/Src/bno055.c ****  *
4117:Core/Src/bno055.c ****  *  @return results of bus communication function
4118:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4119:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4120:Core/Src/bno055.c ****  *
4121:Core/Src/bno055.c ****  *
4122:Core/Src/bno055.c ****  */
4123:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_p_rad(float *euler_p_f)
4124:Core/Src/bno055.c **** {
4125:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4126:Core/Src/bno055.c ****     s16 reg_euler_p_f = BNO055_INIT_VALUE;
4127:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4128:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4129:Core/Src/bno055.c **** 
4130:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4131:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
4132:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4133:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
4134:Core/Src/bno055.c ****     {
4135:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
4136:Core/Src/bno055.c ****     }
4137:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4138:Core/Src/bno055.c ****     {
4139:Core/Src/bno055.c ****         /* Read Euler raw r data*/
4140:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_p(&reg_euler_p_f);
4141:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4142:Core/Src/bno055.c ****         {
4143:Core/Src/bno055.c ****             /* Convert raw Euler r data to radians*/
4144:Core/Src/bno055.c ****             data_f = (float)(reg_euler_p_f / BNO055_EULER_DIV_RAD);
4145:Core/Src/bno055.c ****             *euler_p_f = data_f;
4146:Core/Src/bno055.c ****         }
4147:Core/Src/bno055.c ****         else
4148:Core/Src/bno055.c ****         {
4149:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4150:Core/Src/bno055.c ****         }
4151:Core/Src/bno055.c ****     }
4152:Core/Src/bno055.c ****     else
4153:Core/Src/bno055.c ****     {
4154:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4155:Core/Src/bno055.c ****     }
4156:Core/Src/bno055.c **** 
4157:Core/Src/bno055.c ****     return com_rslt;
4158:Core/Src/bno055.c **** }
4159:Core/Src/bno055.c **** 
4160:Core/Src/bno055.c **** /*!
4161:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler hrp raw data
ARM GAS  /tmp/ccOloYeZ.s 			page 172


4162:Core/Src/bno055.c ****  *  to degree output as float
4163:Core/Src/bno055.c ****  *
4164:Core/Src/bno055.c ****  *  @param euler_hpr : The degree data of Euler hrp
4165:Core/Src/bno055.c ****  *
4166:Core/Src/bno055.c ****  *  Parameter |    result
4167:Core/Src/bno055.c ****  *  --------- | -----------------
4168:Core/Src/bno055.c ****  *    h       | degree data of Euler
4169:Core/Src/bno055.c ****  *    r       | degree data of Euler
4170:Core/Src/bno055.c ****  *    p       | degree data of Euler
4171:Core/Src/bno055.c ****  *
4172:Core/Src/bno055.c ****  *
4173:Core/Src/bno055.c ****  *  @return results of bus communication function
4174:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4175:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4176:Core/Src/bno055.c ****  *
4177:Core/Src/bno055.c ****  */
4178:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_hpr_deg(struct bno055_euler_float_t *euler_h
4179:Core/Src/bno055.c **** {
4180:Core/Src/bno055.c ****     /* Variable used to return value of
4181:Core/Src/bno055.c ****      * communication routine*/
4182:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4183:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
4184:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4185:Core/Src/bno055.c **** 
4186:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4187:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
4188:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4189:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
4190:Core/Src/bno055.c ****     {
4191:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
4192:Core/Src/bno055.c ****     }
4193:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4194:Core/Src/bno055.c ****     {
4195:Core/Src/bno055.c ****         /* Read Euler raw hrp data*/
4196:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_hrp(&reg_euler);
4197:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4198:Core/Src/bno055.c ****         {
4199:Core/Src/bno055.c ****             /* Convert raw Euler hrp to degree*/
4200:Core/Src/bno055.c ****             euler_hpr->h = (float)(reg_euler.h / BNO055_EULER_DIV_DEG);
4201:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
4202:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
4203:Core/Src/bno055.c ****         }
4204:Core/Src/bno055.c ****         else
4205:Core/Src/bno055.c ****         {
4206:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4207:Core/Src/bno055.c ****         }
4208:Core/Src/bno055.c ****     }
4209:Core/Src/bno055.c ****     else
4210:Core/Src/bno055.c ****     {
4211:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4212:Core/Src/bno055.c ****     }
4213:Core/Src/bno055.c **** 
4214:Core/Src/bno055.c ****     return com_rslt;
4215:Core/Src/bno055.c **** }
4216:Core/Src/bno055.c **** 
4217:Core/Src/bno055.c **** /*!
4218:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler xyz raw data
ARM GAS  /tmp/ccOloYeZ.s 			page 173


4219:Core/Src/bno055.c ****  *  to radians output as float
4220:Core/Src/bno055.c ****  *
4221:Core/Src/bno055.c ****  *  @param euler_hpr : The radians data of Euler hrp
4222:Core/Src/bno055.c ****  *
4223:Core/Src/bno055.c ****  *  Parameter |    result
4224:Core/Src/bno055.c ****  *  --------- | -----------------
4225:Core/Src/bno055.c ****  *    h       | radians data of Euler
4226:Core/Src/bno055.c ****  *    r       | radians data of Euler
4227:Core/Src/bno055.c ****  *    p       | radians data of Euler
4228:Core/Src/bno055.c ****  *
4229:Core/Src/bno055.c ****  *
4230:Core/Src/bno055.c ****  *  @return results of bus communication function
4231:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4232:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4233:Core/Src/bno055.c ****  *
4234:Core/Src/bno055.c ****  */
4235:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_hpr_rad(struct bno055_euler_float_t *euler_h
4236:Core/Src/bno055.c **** {
4237:Core/Src/bno055.c ****     /* Variable used to return value of
4238:Core/Src/bno055.c ****      * communication routine*/
4239:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4240:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
4241:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4242:Core/Src/bno055.c **** 
4243:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4244:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
4245:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4246:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
4247:Core/Src/bno055.c ****     {
4248:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
4249:Core/Src/bno055.c ****     }
4250:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4251:Core/Src/bno055.c ****     {
4252:Core/Src/bno055.c ****         /* Read Euler raw hrp data*/
4253:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_hrp(&reg_euler);
4254:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4255:Core/Src/bno055.c ****         {
4256:Core/Src/bno055.c ****             /* Convert raw hrp to radians */
4257:Core/Src/bno055.c ****             euler_hpr->h = (float)(reg_euler.h / BNO055_EULER_DIV_RAD);
4258:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
4259:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
4260:Core/Src/bno055.c ****         }
4261:Core/Src/bno055.c ****         else
4262:Core/Src/bno055.c ****         {
4263:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4264:Core/Src/bno055.c ****         }
4265:Core/Src/bno055.c ****     }
4266:Core/Src/bno055.c ****     else
4267:Core/Src/bno055.c ****     {
4268:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4269:Core/Src/bno055.c ****     }
4270:Core/Src/bno055.c **** 
4271:Core/Src/bno055.c ****     return com_rslt;
4272:Core/Src/bno055.c **** }
4273:Core/Src/bno055.c **** 
4274:Core/Src/bno055.c **** /*!
4275:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
ARM GAS  /tmp/ccOloYeZ.s 			page 174


4276:Core/Src/bno055.c ****  *  accel x raw data to meterpersecseq output as float
4277:Core/Src/bno055.c ****  *
4278:Core/Src/bno055.c ****  *  @param linear_accel_x_f : The float value of linear accel x meterpersecseq
4279:Core/Src/bno055.c ****  *
4280:Core/Src/bno055.c ****  *  @return results of bus communication function
4281:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4282:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4283:Core/Src/bno055.c ****  */
4284:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_linear_accel_x_msq(float *linear_accel_x_f)
4285:Core/Src/bno055.c **** {
 5255              		.loc 1 4285 1 is_stmt 1 view -0
 5256              		.cfi_startproc
 5257              		@ args = 0, pretend = 0, frame = 8
 5258              		@ frame_needed = 0, uses_anonymous_args = 0
 5259              		.loc 1 4285 1 is_stmt 0 view .LVU1506
 5260 0000 30B5     		push	{r4, r5, lr}
 5261              		.cfi_def_cfa_offset 12
 5262              		.cfi_offset 4, -12
 5263              		.cfi_offset 5, -8
 5264              		.cfi_offset 14, -4
 5265 0002 83B0     		sub	sp, sp, #12
 5266              		.cfi_def_cfa_offset 24
 5267 0004 0446     		mov	r4, r0
4286:Core/Src/bno055.c ****     /* Variable used to return value of
4287:Core/Src/bno055.c ****      * communication routine*/
4288:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5268              		.loc 1 4288 5 is_stmt 1 view .LVU1507
 5269              	.LVL535:
4289:Core/Src/bno055.c ****     s16 reg_linear_accel_x_s16 = BNO055_INIT_VALUE;
 5270              		.loc 1 4289 5 view .LVU1508
 5271              		.loc 1 4289 9 is_stmt 0 view .LVU1509
 5272 0006 0023     		movs	r3, #0
 5273 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4290:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5274              		.loc 1 4290 5 is_stmt 1 view .LVU1510
 5275              	.LVL536:
4291:Core/Src/bno055.c **** 
4292:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
4293:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_x(&reg_linear_accel_x_s16);
 5276              		.loc 1 4293 5 view .LVU1511
 5277              		.loc 1 4293 16 is_stmt 0 view .LVU1512
 5278 000c 0DF10600 		add	r0, sp, #6
 5279              	.LVL537:
 5280              		.loc 1 4293 16 view .LVU1513
 5281 0010 FFF7FEFF 		bl	bno055_read_linear_accel_x
 5282              	.LVL538:
4294:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5283              		.loc 1 4294 5 is_stmt 1 view .LVU1514
 5284              		.loc 1 4294 8 is_stmt 0 view .LVU1515
 5285 0014 70B9     		cbnz	r0, .L417
 5286 0016 0546     		mov	r5, r0
4295:Core/Src/bno055.c ****     {
4296:Core/Src/bno055.c ****         /* Convert the raw linear accel x to m/s2*/
4297:Core/Src/bno055.c ****         data_f = (float)(reg_linear_accel_x_s16 / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5287              		.loc 1 4297 9 is_stmt 1 view .LVU1516
 5288              		.loc 1 4297 49 is_stmt 0 view .LVU1517
 5289 0018 BDF90600 		ldrsh	r0, [sp, #6]
ARM GAS  /tmp/ccOloYeZ.s 			page 175


 5290              	.LVL539:
 5291              		.loc 1 4297 49 view .LVU1518
 5292 001c FFF7FEFF 		bl	__aeabi_i2d
 5293              	.LVL540:
 5294 0020 0022     		movs	r2, #0
 5295 0022 064B     		ldr	r3, .L419
 5296 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5297              	.LVL541:
 5298              		.loc 1 4297 16 view .LVU1519
 5299 0028 FFF7FEFF 		bl	__aeabi_d2f
 5300              	.LVL542:
4298:Core/Src/bno055.c ****         *linear_accel_x_f = data_f;
 5301              		.loc 1 4298 9 is_stmt 1 view .LVU1520
 5302              		.loc 1 4298 27 is_stmt 0 view .LVU1521
 5303 002c 2060     		str	r0, [r4]	@ float
 5304              	.LVL543:
 5305              	.L416:
4299:Core/Src/bno055.c ****     }
4300:Core/Src/bno055.c ****     else
4301:Core/Src/bno055.c ****     {
4302:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4303:Core/Src/bno055.c ****     }
4304:Core/Src/bno055.c **** 
4305:Core/Src/bno055.c ****     return com_rslt;
 5306              		.loc 1 4305 5 is_stmt 1 view .LVU1522
4306:Core/Src/bno055.c **** }
 5307              		.loc 1 4306 1 is_stmt 0 view .LVU1523
 5308 002e 2846     		mov	r0, r5
 5309 0030 03B0     		add	sp, sp, #12
 5310              		.cfi_remember_state
 5311              		.cfi_def_cfa_offset 12
 5312              		@ sp needed
 5313 0032 30BD     		pop	{r4, r5, pc}
 5314              	.LVL544:
 5315              	.L417:
 5316              		.cfi_restore_state
4302:Core/Src/bno055.c ****     }
 5317              		.loc 1 4302 18 view .LVU1524
 5318 0034 4FF0FF35 		mov	r5, #-1
 5319 0038 F9E7     		b	.L416
 5320              	.L420:
 5321 003a 00BF     		.align	2
 5322              	.L419:
 5323 003c 00005940 		.word	1079574528
 5324              		.cfi_endproc
 5325              	.LFE69:
 5327              		.section	.text.bno055_convert_float_linear_accel_y_msq,"ax",%progbits
 5328              		.align	1
 5329              		.global	bno055_convert_float_linear_accel_y_msq
 5330              		.syntax unified
 5331              		.thumb
 5332              		.thumb_func
 5334              	bno055_convert_float_linear_accel_y_msq:
 5335              	.LVL545:
 5336              	.LFB70:
4307:Core/Src/bno055.c **** 
4308:Core/Src/bno055.c **** /*!
ARM GAS  /tmp/ccOloYeZ.s 			page 176


4309:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
4310:Core/Src/bno055.c ****  *  accel y raw data to meterpersecseq output as float
4311:Core/Src/bno055.c ****  *
4312:Core/Src/bno055.c ****  *  @param linear_accel_y_f : The float value of linear accel y meterpersecseq
4313:Core/Src/bno055.c ****  *
4314:Core/Src/bno055.c ****  *  @return results of bus communication function
4315:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4316:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4317:Core/Src/bno055.c ****  */
4318:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_linear_accel_y_msq(float *linear_accel_y_f)
4319:Core/Src/bno055.c **** {
 5337              		.loc 1 4319 1 is_stmt 1 view -0
 5338              		.cfi_startproc
 5339              		@ args = 0, pretend = 0, frame = 8
 5340              		@ frame_needed = 0, uses_anonymous_args = 0
 5341              		.loc 1 4319 1 is_stmt 0 view .LVU1526
 5342 0000 30B5     		push	{r4, r5, lr}
 5343              		.cfi_def_cfa_offset 12
 5344              		.cfi_offset 4, -12
 5345              		.cfi_offset 5, -8
 5346              		.cfi_offset 14, -4
 5347 0002 83B0     		sub	sp, sp, #12
 5348              		.cfi_def_cfa_offset 24
 5349 0004 0446     		mov	r4, r0
4320:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5350              		.loc 1 4320 5 is_stmt 1 view .LVU1527
 5351              	.LVL546:
4321:Core/Src/bno055.c ****     s16 reg_linear_accel_y = BNO055_INIT_VALUE;
 5352              		.loc 1 4321 5 view .LVU1528
 5353              		.loc 1 4321 9 is_stmt 0 view .LVU1529
 5354 0006 0023     		movs	r3, #0
 5355 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4322:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5356              		.loc 1 4322 5 is_stmt 1 view .LVU1530
 5357              	.LVL547:
4323:Core/Src/bno055.c **** 
4324:Core/Src/bno055.c ****     /* Read the raw y of linear accel */
4325:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_y(&reg_linear_accel_y);
 5358              		.loc 1 4325 5 view .LVU1531
 5359              		.loc 1 4325 16 is_stmt 0 view .LVU1532
 5360 000c 0DF10600 		add	r0, sp, #6
 5361              	.LVL548:
 5362              		.loc 1 4325 16 view .LVU1533
 5363 0010 FFF7FEFF 		bl	bno055_read_linear_accel_y
 5364              	.LVL549:
4326:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5365              		.loc 1 4326 5 is_stmt 1 view .LVU1534
 5366              		.loc 1 4326 8 is_stmt 0 view .LVU1535
 5367 0014 70B9     		cbnz	r0, .L423
 5368 0016 0546     		mov	r5, r0
4327:Core/Src/bno055.c ****     {
4328:Core/Src/bno055.c ****         /* Convert the raw linear accel x to m/s2*/
4329:Core/Src/bno055.c ****         data_f = (float)(reg_linear_accel_y / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5369              		.loc 1 4329 9 is_stmt 1 view .LVU1536
 5370              		.loc 1 4329 45 is_stmt 0 view .LVU1537
 5371 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5372              	.LVL550:
ARM GAS  /tmp/ccOloYeZ.s 			page 177


 5373              		.loc 1 4329 45 view .LVU1538
 5374 001c FFF7FEFF 		bl	__aeabi_i2d
 5375              	.LVL551:
 5376 0020 0022     		movs	r2, #0
 5377 0022 064B     		ldr	r3, .L425
 5378 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5379              	.LVL552:
 5380              		.loc 1 4329 16 view .LVU1539
 5381 0028 FFF7FEFF 		bl	__aeabi_d2f
 5382              	.LVL553:
4330:Core/Src/bno055.c ****         *linear_accel_y_f = data_f;
 5383              		.loc 1 4330 9 is_stmt 1 view .LVU1540
 5384              		.loc 1 4330 27 is_stmt 0 view .LVU1541
 5385 002c 2060     		str	r0, [r4]	@ float
 5386              	.LVL554:
 5387              	.L422:
4331:Core/Src/bno055.c ****     }
4332:Core/Src/bno055.c ****     else
4333:Core/Src/bno055.c ****     {
4334:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4335:Core/Src/bno055.c ****     }
4336:Core/Src/bno055.c **** 
4337:Core/Src/bno055.c ****     return com_rslt;
 5388              		.loc 1 4337 5 is_stmt 1 view .LVU1542
4338:Core/Src/bno055.c **** }
 5389              		.loc 1 4338 1 is_stmt 0 view .LVU1543
 5390 002e 2846     		mov	r0, r5
 5391 0030 03B0     		add	sp, sp, #12
 5392              		.cfi_remember_state
 5393              		.cfi_def_cfa_offset 12
 5394              		@ sp needed
 5395 0032 30BD     		pop	{r4, r5, pc}
 5396              	.LVL555:
 5397              	.L423:
 5398              		.cfi_restore_state
4334:Core/Src/bno055.c ****     }
 5399              		.loc 1 4334 18 view .LVU1544
 5400 0034 4FF0FF35 		mov	r5, #-1
 5401 0038 F9E7     		b	.L422
 5402              	.L426:
 5403 003a 00BF     		.align	2
 5404              	.L425:
 5405 003c 00005940 		.word	1079574528
 5406              		.cfi_endproc
 5407              	.LFE70:
 5409              		.section	.text.bno055_convert_float_linear_accel_z_msq,"ax",%progbits
 5410              		.align	1
 5411              		.global	bno055_convert_float_linear_accel_z_msq
 5412              		.syntax unified
 5413              		.thumb
 5414              		.thumb_func
 5416              	bno055_convert_float_linear_accel_z_msq:
 5417              	.LVL556:
 5418              	.LFB71:
4339:Core/Src/bno055.c **** 
4340:Core/Src/bno055.c **** /*!
4341:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
ARM GAS  /tmp/ccOloYeZ.s 			page 178


4342:Core/Src/bno055.c ****  *  accel z raw data to meterpersecseq output as float
4343:Core/Src/bno055.c ****  *
4344:Core/Src/bno055.c ****  *  @param linear_accel_z_f : The float value of linear accel z meterpersecseq
4345:Core/Src/bno055.c ****  *
4346:Core/Src/bno055.c ****  *  @return results of bus communication function
4347:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4348:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4349:Core/Src/bno055.c ****  *
4350:Core/Src/bno055.c ****  */
4351:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_linear_accel_z_msq(float *linear_accel_z_f)
4352:Core/Src/bno055.c **** {
 5419              		.loc 1 4352 1 is_stmt 1 view -0
 5420              		.cfi_startproc
 5421              		@ args = 0, pretend = 0, frame = 8
 5422              		@ frame_needed = 0, uses_anonymous_args = 0
 5423              		.loc 1 4352 1 is_stmt 0 view .LVU1546
 5424 0000 30B5     		push	{r4, r5, lr}
 5425              		.cfi_def_cfa_offset 12
 5426              		.cfi_offset 4, -12
 5427              		.cfi_offset 5, -8
 5428              		.cfi_offset 14, -4
 5429 0002 83B0     		sub	sp, sp, #12
 5430              		.cfi_def_cfa_offset 24
 5431 0004 0446     		mov	r4, r0
4353:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5432              		.loc 1 4353 5 is_stmt 1 view .LVU1547
 5433              	.LVL557:
4354:Core/Src/bno055.c ****     s16 reg_linear_accel_z = BNO055_INIT_VALUE;
 5434              		.loc 1 4354 5 view .LVU1548
 5435              		.loc 1 4354 9 is_stmt 0 view .LVU1549
 5436 0006 0023     		movs	r3, #0
 5437 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4355:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5438              		.loc 1 4355 5 is_stmt 1 view .LVU1550
 5439              	.LVL558:
4356:Core/Src/bno055.c **** 
4357:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
4358:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_z(&reg_linear_accel_z);
 5440              		.loc 1 4358 5 view .LVU1551
 5441              		.loc 1 4358 16 is_stmt 0 view .LVU1552
 5442 000c 0DF10600 		add	r0, sp, #6
 5443              	.LVL559:
 5444              		.loc 1 4358 16 view .LVU1553
 5445 0010 FFF7FEFF 		bl	bno055_read_linear_accel_z
 5446              	.LVL560:
4359:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5447              		.loc 1 4359 5 is_stmt 1 view .LVU1554
 5448              		.loc 1 4359 8 is_stmt 0 view .LVU1555
 5449 0014 70B9     		cbnz	r0, .L429
 5450 0016 0546     		mov	r5, r0
4360:Core/Src/bno055.c ****     {
4361:Core/Src/bno055.c ****         /* Convert the raw linear accel z to m/s2*/
4362:Core/Src/bno055.c ****         data_f = (float)(reg_linear_accel_z / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5451              		.loc 1 4362 9 is_stmt 1 view .LVU1556
 5452              		.loc 1 4362 45 is_stmt 0 view .LVU1557
 5453 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5454              	.LVL561:
ARM GAS  /tmp/ccOloYeZ.s 			page 179


 5455              		.loc 1 4362 45 view .LVU1558
 5456 001c FFF7FEFF 		bl	__aeabi_i2d
 5457              	.LVL562:
 5458 0020 0022     		movs	r2, #0
 5459 0022 064B     		ldr	r3, .L431
 5460 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5461              	.LVL563:
 5462              		.loc 1 4362 16 view .LVU1559
 5463 0028 FFF7FEFF 		bl	__aeabi_d2f
 5464              	.LVL564:
4363:Core/Src/bno055.c ****         *linear_accel_z_f = data_f;
 5465              		.loc 1 4363 9 is_stmt 1 view .LVU1560
 5466              		.loc 1 4363 27 is_stmt 0 view .LVU1561
 5467 002c 2060     		str	r0, [r4]	@ float
 5468              	.LVL565:
 5469              	.L428:
4364:Core/Src/bno055.c ****     }
4365:Core/Src/bno055.c ****     else
4366:Core/Src/bno055.c ****     {
4367:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4368:Core/Src/bno055.c ****     }
4369:Core/Src/bno055.c **** 
4370:Core/Src/bno055.c ****     return com_rslt;
 5470              		.loc 1 4370 5 is_stmt 1 view .LVU1562
4371:Core/Src/bno055.c **** }
 5471              		.loc 1 4371 1 is_stmt 0 view .LVU1563
 5472 002e 2846     		mov	r0, r5
 5473 0030 03B0     		add	sp, sp, #12
 5474              		.cfi_remember_state
 5475              		.cfi_def_cfa_offset 12
 5476              		@ sp needed
 5477 0032 30BD     		pop	{r4, r5, pc}
 5478              	.LVL566:
 5479              	.L429:
 5480              		.cfi_restore_state
4367:Core/Src/bno055.c ****     }
 5481              		.loc 1 4367 18 view .LVU1564
 5482 0034 4FF0FF35 		mov	r5, #-1
 5483 0038 F9E7     		b	.L428
 5484              	.L432:
 5485 003a 00BF     		.align	2
 5486              	.L431:
 5487 003c 00005940 		.word	1079574528
 5488              		.cfi_endproc
 5489              	.LFE71:
 5491              		.section	.text.bno055_convert_float_linear_accel_xyz_msq,"ax",%progbits
 5492              		.align	1
 5493              		.global	bno055_convert_float_linear_accel_xyz_msq
 5494              		.syntax unified
 5495              		.thumb
 5496              		.thumb_func
 5498              	bno055_convert_float_linear_accel_xyz_msq:
 5499              	.LVL567:
 5500              	.LFB72:
4372:Core/Src/bno055.c **** 
4373:Core/Src/bno055.c **** /*!
4374:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear accel xyz raw data
ARM GAS  /tmp/ccOloYeZ.s 			page 180


4375:Core/Src/bno055.c ****  *  to meterpersecseq output as float
4376:Core/Src/bno055.c ****  *
4377:Core/Src/bno055.c ****  *  @param linear_accel_xyz : The meterpersecseq data of linear accel xyz
4378:Core/Src/bno055.c ****  *
4379:Core/Src/bno055.c ****  *  Parameter |    result
4380:Core/Src/bno055.c ****  *  --------- | -----------------
4381:Core/Src/bno055.c ****  *    x       | meterpersecseq data of linear accel
4382:Core/Src/bno055.c ****  *    y       | meterpersecseq data of linear accel
4383:Core/Src/bno055.c ****  *    z       | meterpersecseq data of linear accel
4384:Core/Src/bno055.c ****  *
4385:Core/Src/bno055.c ****  *
4386:Core/Src/bno055.c ****  *  @return results of bus communication function
4387:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4388:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4389:Core/Src/bno055.c ****  *
4390:Core/Src/bno055.c ****  *
4391:Core/Src/bno055.c ****  */
4392:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_linear_accel_xyz_msq(
4393:Core/Src/bno055.c ****     struct bno055_linear_accel_float_t *linear_accel_xyz)
4394:Core/Src/bno055.c **** {
 5501              		.loc 1 4394 1 is_stmt 1 view -0
 5502              		.cfi_startproc
 5503              		@ args = 0, pretend = 0, frame = 8
 5504              		@ frame_needed = 0, uses_anonymous_args = 0
 5505              		.loc 1 4394 1 is_stmt 0 view .LVU1566
 5506 0000 30B5     		push	{r4, r5, lr}
 5507              		.cfi_def_cfa_offset 12
 5508              		.cfi_offset 4, -12
 5509              		.cfi_offset 5, -8
 5510              		.cfi_offset 14, -4
 5511 0002 83B0     		sub	sp, sp, #12
 5512              		.cfi_def_cfa_offset 24
 5513 0004 0446     		mov	r4, r0
4395:Core/Src/bno055.c ****     /* Variable used to return value of
4396:Core/Src/bno055.c ****      * communication routine*/
4397:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5514              		.loc 1 4397 5 is_stmt 1 view .LVU1567
 5515              	.LVL568:
4398:Core/Src/bno055.c ****     struct bno055_linear_accel_t reg_linear_accel = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_
 5516              		.loc 1 4398 5 view .LVU1568
 5517              		.loc 1 4398 34 is_stmt 0 view .LVU1569
 5518 0006 0023     		movs	r3, #0
 5519 0008 ADF80030 		strh	r3, [sp]	@ movhi
 5520 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 5521 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
4399:Core/Src/bno055.c **** 
4400:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
4401:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_xyz(&reg_linear_accel);
 5522              		.loc 1 4401 5 is_stmt 1 view .LVU1570
 5523              		.loc 1 4401 16 is_stmt 0 view .LVU1571
 5524 0014 6846     		mov	r0, sp
 5525              	.LVL569:
 5526              		.loc 1 4401 16 view .LVU1572
 5527 0016 FFF7FEFF 		bl	bno055_read_linear_accel_xyz
 5528              	.LVL570:
4402:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5529              		.loc 1 4402 5 is_stmt 1 view .LVU1573
ARM GAS  /tmp/ccOloYeZ.s 			page 181


 5530              		.loc 1 4402 8 is_stmt 0 view .LVU1574
 5531 001a 20BB     		cbnz	r0, .L435
 5532 001c 0546     		mov	r5, r0
4403:Core/Src/bno055.c ****     {
4404:Core/Src/bno055.c ****         linear_accel_xyz->x = (float)(reg_linear_accel.x / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5533              		.loc 1 4404 9 is_stmt 1 view .LVU1575
 5534              		.loc 1 4404 58 is_stmt 0 view .LVU1576
 5535 001e BDF90000 		ldrsh	r0, [sp]
 5536              	.LVL571:
 5537              		.loc 1 4404 58 view .LVU1577
 5538 0022 FFF7FEFF 		bl	__aeabi_i2d
 5539              	.LVL572:
 5540 0026 0022     		movs	r2, #0
 5541 0028 104B     		ldr	r3, .L437
 5542 002a FFF7FEFF 		bl	__aeabi_ddiv
 5543              	.LVL573:
 5544              		.loc 1 4404 31 view .LVU1578
 5545 002e FFF7FEFF 		bl	__aeabi_d2f
 5546              	.LVL574:
 5547              		.loc 1 4404 29 view .LVU1579
 5548 0032 2060     		str	r0, [r4]	@ float
4405:Core/Src/bno055.c ****         linear_accel_xyz->y = (float)(reg_linear_accel.y / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5549              		.loc 1 4405 9 is_stmt 1 view .LVU1580
 5550              		.loc 1 4405 58 is_stmt 0 view .LVU1581
 5551 0034 BDF90200 		ldrsh	r0, [sp, #2]
 5552 0038 FFF7FEFF 		bl	__aeabi_i2d
 5553              	.LVL575:
 5554 003c 0022     		movs	r2, #0
 5555 003e 0B4B     		ldr	r3, .L437
 5556 0040 FFF7FEFF 		bl	__aeabi_ddiv
 5557              	.LVL576:
 5558              		.loc 1 4405 31 view .LVU1582
 5559 0044 FFF7FEFF 		bl	__aeabi_d2f
 5560              	.LVL577:
 5561              		.loc 1 4405 29 view .LVU1583
 5562 0048 6060     		str	r0, [r4, #4]	@ float
4406:Core/Src/bno055.c ****         linear_accel_xyz->z = (float)(reg_linear_accel.z / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5563              		.loc 1 4406 9 is_stmt 1 view .LVU1584
 5564              		.loc 1 4406 58 is_stmt 0 view .LVU1585
 5565 004a BDF90400 		ldrsh	r0, [sp, #4]
 5566 004e FFF7FEFF 		bl	__aeabi_i2d
 5567              	.LVL578:
 5568 0052 0022     		movs	r2, #0
 5569 0054 054B     		ldr	r3, .L437
 5570 0056 FFF7FEFF 		bl	__aeabi_ddiv
 5571              	.LVL579:
 5572              		.loc 1 4406 31 view .LVU1586
 5573 005a FFF7FEFF 		bl	__aeabi_d2f
 5574              	.LVL580:
 5575              		.loc 1 4406 29 view .LVU1587
 5576 005e A060     		str	r0, [r4, #8]	@ float
 5577              	.L434:
 5578              	.LVL581:
4407:Core/Src/bno055.c ****     }
4408:Core/Src/bno055.c ****     else
4409:Core/Src/bno055.c ****     {
4410:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccOloYeZ.s 			page 182


4411:Core/Src/bno055.c ****     }
4412:Core/Src/bno055.c **** 
4413:Core/Src/bno055.c ****     return com_rslt;
 5579              		.loc 1 4413 5 is_stmt 1 view .LVU1588
4414:Core/Src/bno055.c **** }
 5580              		.loc 1 4414 1 is_stmt 0 view .LVU1589
 5581 0060 2846     		mov	r0, r5
 5582 0062 03B0     		add	sp, sp, #12
 5583              		.cfi_remember_state
 5584              		.cfi_def_cfa_offset 12
 5585              		@ sp needed
 5586 0064 30BD     		pop	{r4, r5, pc}
 5587              	.LVL582:
 5588              	.L435:
 5589              		.cfi_restore_state
4410:Core/Src/bno055.c ****     }
 5590              		.loc 1 4410 18 view .LVU1590
 5591 0066 4FF0FF35 		mov	r5, #-1
 5592 006a F9E7     		b	.L434
 5593              	.L438:
 5594              		.align	2
 5595              	.L437:
 5596 006c 00005940 		.word	1079574528
 5597              		.cfi_endproc
 5598              	.LFE72:
 5600              		.section	.text.bno055_convert_gravity_float_x_msq,"ax",%progbits
 5601              		.align	1
 5602              		.global	bno055_convert_gravity_float_x_msq
 5603              		.syntax unified
 5604              		.thumb
 5605              		.thumb_func
 5607              	bno055_convert_gravity_float_x_msq:
 5608              	.LVL583:
 5609              	.LFB73:
4415:Core/Src/bno055.c **** 
4416:Core/Src/bno055.c **** /*!
4417:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
4418:Core/Src/bno055.c ****  *  x raw data to meterpersecseq output as float
4419:Core/Src/bno055.c ****  *
4420:Core/Src/bno055.c ****  *  @param gravity_x_f : The float value of gravity x meterpersecseq
4421:Core/Src/bno055.c ****  *
4422:Core/Src/bno055.c ****  *  @return results of bus communication function
4423:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4424:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4425:Core/Src/bno055.c ****  *
4426:Core/Src/bno055.c ****  *
4427:Core/Src/bno055.c ****  */
4428:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_float_x_msq(float *gravity_x_f)
4429:Core/Src/bno055.c **** {
 5610              		.loc 1 4429 1 is_stmt 1 view -0
 5611              		.cfi_startproc
 5612              		@ args = 0, pretend = 0, frame = 8
 5613              		@ frame_needed = 0, uses_anonymous_args = 0
 5614              		.loc 1 4429 1 is_stmt 0 view .LVU1592
 5615 0000 30B5     		push	{r4, r5, lr}
 5616              		.cfi_def_cfa_offset 12
 5617              		.cfi_offset 4, -12
ARM GAS  /tmp/ccOloYeZ.s 			page 183


 5618              		.cfi_offset 5, -8
 5619              		.cfi_offset 14, -4
 5620 0002 83B0     		sub	sp, sp, #12
 5621              		.cfi_def_cfa_offset 24
 5622 0004 0446     		mov	r4, r0
4430:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5623              		.loc 1 4430 5 is_stmt 1 view .LVU1593
 5624              	.LVL584:
4431:Core/Src/bno055.c ****     s16 reg_gravity_x_s16 = BNO055_INIT_VALUE;
 5625              		.loc 1 4431 5 view .LVU1594
 5626              		.loc 1 4431 9 is_stmt 0 view .LVU1595
 5627 0006 0023     		movs	r3, #0
 5628 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4432:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5629              		.loc 1 4432 5 is_stmt 1 view .LVU1596
 5630              	.LVL585:
4433:Core/Src/bno055.c **** 
4434:Core/Src/bno055.c ****     /* Read raw gravity of x*/
4435:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_x(&reg_gravity_x_s16);
 5631              		.loc 1 4435 5 view .LVU1597
 5632              		.loc 1 4435 16 is_stmt 0 view .LVU1598
 5633 000c 0DF10600 		add	r0, sp, #6
 5634              	.LVL586:
 5635              		.loc 1 4435 16 view .LVU1599
 5636 0010 FFF7FEFF 		bl	bno055_read_gravity_x
 5637              	.LVL587:
4436:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5638              		.loc 1 4436 5 is_stmt 1 view .LVU1600
 5639              		.loc 1 4436 8 is_stmt 0 view .LVU1601
 5640 0014 70B9     		cbnz	r0, .L441
 5641 0016 0546     		mov	r5, r0
4437:Core/Src/bno055.c ****     {
4438:Core/Src/bno055.c ****         /* Convert the raw gravity x to m/s2*/
4439:Core/Src/bno055.c ****         data_f = (float)(reg_gravity_x_s16 / BNO055_GRAVITY_DIV_MSQ);
 5642              		.loc 1 4439 9 is_stmt 1 view .LVU1602
 5643              		.loc 1 4439 44 is_stmt 0 view .LVU1603
 5644 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5645              	.LVL588:
 5646              		.loc 1 4439 44 view .LVU1604
 5647 001c FFF7FEFF 		bl	__aeabi_i2d
 5648              	.LVL589:
 5649 0020 0022     		movs	r2, #0
 5650 0022 064B     		ldr	r3, .L443
 5651 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5652              	.LVL590:
 5653              		.loc 1 4439 16 view .LVU1605
 5654 0028 FFF7FEFF 		bl	__aeabi_d2f
 5655              	.LVL591:
4440:Core/Src/bno055.c ****         *gravity_x_f = data_f;
 5656              		.loc 1 4440 9 is_stmt 1 view .LVU1606
 5657              		.loc 1 4440 22 is_stmt 0 view .LVU1607
 5658 002c 2060     		str	r0, [r4]	@ float
 5659              	.LVL592:
 5660              	.L440:
4441:Core/Src/bno055.c ****     }
4442:Core/Src/bno055.c ****     else
4443:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 184


4444:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4445:Core/Src/bno055.c ****     }
4446:Core/Src/bno055.c **** 
4447:Core/Src/bno055.c ****     return com_rslt;
 5661              		.loc 1 4447 5 is_stmt 1 view .LVU1608
4448:Core/Src/bno055.c **** }
 5662              		.loc 1 4448 1 is_stmt 0 view .LVU1609
 5663 002e 2846     		mov	r0, r5
 5664 0030 03B0     		add	sp, sp, #12
 5665              		.cfi_remember_state
 5666              		.cfi_def_cfa_offset 12
 5667              		@ sp needed
 5668 0032 30BD     		pop	{r4, r5, pc}
 5669              	.LVL593:
 5670              	.L441:
 5671              		.cfi_restore_state
4444:Core/Src/bno055.c ****     }
 5672              		.loc 1 4444 18 view .LVU1610
 5673 0034 4FF0FF35 		mov	r5, #-1
 5674 0038 F9E7     		b	.L440
 5675              	.L444:
 5676 003a 00BF     		.align	2
 5677              	.L443:
 5678 003c 00005940 		.word	1079574528
 5679              		.cfi_endproc
 5680              	.LFE73:
 5682              		.section	.text.bno055_convert_gravity_float_y_msq,"ax",%progbits
 5683              		.align	1
 5684              		.global	bno055_convert_gravity_float_y_msq
 5685              		.syntax unified
 5686              		.thumb
 5687              		.thumb_func
 5689              	bno055_convert_gravity_float_y_msq:
 5690              	.LVL594:
 5691              	.LFB74:
4449:Core/Src/bno055.c **** 
4450:Core/Src/bno055.c **** /*!
4451:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
4452:Core/Src/bno055.c ****  *  y raw data to meterpersecseq output as float
4453:Core/Src/bno055.c ****  *
4454:Core/Src/bno055.c ****  *  @param gravity_y_f : The float value of gravity y meterpersecseq
4455:Core/Src/bno055.c ****  *
4456:Core/Src/bno055.c ****  *  @return results of bus communication function
4457:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4458:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4459:Core/Src/bno055.c ****  *
4460:Core/Src/bno055.c ****  *
4461:Core/Src/bno055.c ****  */
4462:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_float_y_msq(float *gravity_y_f)
4463:Core/Src/bno055.c **** {
 5692              		.loc 1 4463 1 is_stmt 1 view -0
 5693              		.cfi_startproc
 5694              		@ args = 0, pretend = 0, frame = 8
 5695              		@ frame_needed = 0, uses_anonymous_args = 0
 5696              		.loc 1 4463 1 is_stmt 0 view .LVU1612
 5697 0000 30B5     		push	{r4, r5, lr}
 5698              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccOloYeZ.s 			page 185


 5699              		.cfi_offset 4, -12
 5700              		.cfi_offset 5, -8
 5701              		.cfi_offset 14, -4
 5702 0002 83B0     		sub	sp, sp, #12
 5703              		.cfi_def_cfa_offset 24
 5704 0004 0446     		mov	r4, r0
4464:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5705              		.loc 1 4464 5 is_stmt 1 view .LVU1613
 5706              	.LVL595:
4465:Core/Src/bno055.c ****     s16 reg_gravity_y_s16 = BNO055_INIT_VALUE;
 5707              		.loc 1 4465 5 view .LVU1614
 5708              		.loc 1 4465 9 is_stmt 0 view .LVU1615
 5709 0006 0023     		movs	r3, #0
 5710 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4466:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5711              		.loc 1 4466 5 is_stmt 1 view .LVU1616
 5712              	.LVL596:
4467:Core/Src/bno055.c **** 
4468:Core/Src/bno055.c ****     /* Read raw gravity of y*/
4469:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_y(&reg_gravity_y_s16);
 5713              		.loc 1 4469 5 view .LVU1617
 5714              		.loc 1 4469 16 is_stmt 0 view .LVU1618
 5715 000c 0DF10600 		add	r0, sp, #6
 5716              	.LVL597:
 5717              		.loc 1 4469 16 view .LVU1619
 5718 0010 FFF7FEFF 		bl	bno055_read_gravity_y
 5719              	.LVL598:
4470:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5720              		.loc 1 4470 5 is_stmt 1 view .LVU1620
 5721              		.loc 1 4470 8 is_stmt 0 view .LVU1621
 5722 0014 70B9     		cbnz	r0, .L447
 5723 0016 0546     		mov	r5, r0
4471:Core/Src/bno055.c ****     {
4472:Core/Src/bno055.c ****         /* Convert the raw gravity y to m/s2*/
4473:Core/Src/bno055.c ****         data_f = (float)(reg_gravity_y_s16 / BNO055_GRAVITY_DIV_MSQ);
 5724              		.loc 1 4473 9 is_stmt 1 view .LVU1622
 5725              		.loc 1 4473 44 is_stmt 0 view .LVU1623
 5726 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5727              	.LVL599:
 5728              		.loc 1 4473 44 view .LVU1624
 5729 001c FFF7FEFF 		bl	__aeabi_i2d
 5730              	.LVL600:
 5731 0020 0022     		movs	r2, #0
 5732 0022 064B     		ldr	r3, .L449
 5733 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5734              	.LVL601:
 5735              		.loc 1 4473 16 view .LVU1625
 5736 0028 FFF7FEFF 		bl	__aeabi_d2f
 5737              	.LVL602:
4474:Core/Src/bno055.c ****         *gravity_y_f = data_f;
 5738              		.loc 1 4474 9 is_stmt 1 view .LVU1626
 5739              		.loc 1 4474 22 is_stmt 0 view .LVU1627
 5740 002c 2060     		str	r0, [r4]	@ float
 5741              	.LVL603:
 5742              	.L446:
4475:Core/Src/bno055.c ****     }
4476:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccOloYeZ.s 			page 186


4477:Core/Src/bno055.c ****     {
4478:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4479:Core/Src/bno055.c ****     }
4480:Core/Src/bno055.c **** 
4481:Core/Src/bno055.c ****     return com_rslt;
 5743              		.loc 1 4481 5 is_stmt 1 view .LVU1628
4482:Core/Src/bno055.c **** }
 5744              		.loc 1 4482 1 is_stmt 0 view .LVU1629
 5745 002e 2846     		mov	r0, r5
 5746 0030 03B0     		add	sp, sp, #12
 5747              		.cfi_remember_state
 5748              		.cfi_def_cfa_offset 12
 5749              		@ sp needed
 5750 0032 30BD     		pop	{r4, r5, pc}
 5751              	.LVL604:
 5752              	.L447:
 5753              		.cfi_restore_state
4478:Core/Src/bno055.c ****     }
 5754              		.loc 1 4478 18 view .LVU1630
 5755 0034 4FF0FF35 		mov	r5, #-1
 5756 0038 F9E7     		b	.L446
 5757              	.L450:
 5758 003a 00BF     		.align	2
 5759              	.L449:
 5760 003c 00005940 		.word	1079574528
 5761              		.cfi_endproc
 5762              	.LFE74:
 5764              		.section	.text.bno055_convert_gravity_float_z_msq,"ax",%progbits
 5765              		.align	1
 5766              		.global	bno055_convert_gravity_float_z_msq
 5767              		.syntax unified
 5768              		.thumb
 5769              		.thumb_func
 5771              	bno055_convert_gravity_float_z_msq:
 5772              	.LVL605:
 5773              	.LFB75:
4483:Core/Src/bno055.c **** 
4484:Core/Src/bno055.c **** /*!
4485:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
4486:Core/Src/bno055.c ****  *  z raw data to meterpersecseq output as float
4487:Core/Src/bno055.c ****  *
4488:Core/Src/bno055.c ****  *  @param gravity_z_f : The float value of gravity z meterpersecseq
4489:Core/Src/bno055.c ****  *
4490:Core/Src/bno055.c ****  *  @return results of bus communication function
4491:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4492:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4493:Core/Src/bno055.c ****  *
4494:Core/Src/bno055.c ****  */
4495:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_float_z_msq(float *gravity_z_f)
4496:Core/Src/bno055.c **** {
 5774              		.loc 1 4496 1 is_stmt 1 view -0
 5775              		.cfi_startproc
 5776              		@ args = 0, pretend = 0, frame = 8
 5777              		@ frame_needed = 0, uses_anonymous_args = 0
 5778              		.loc 1 4496 1 is_stmt 0 view .LVU1632
 5779 0000 30B5     		push	{r4, r5, lr}
 5780              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccOloYeZ.s 			page 187


 5781              		.cfi_offset 4, -12
 5782              		.cfi_offset 5, -8
 5783              		.cfi_offset 14, -4
 5784 0002 83B0     		sub	sp, sp, #12
 5785              		.cfi_def_cfa_offset 24
 5786 0004 0446     		mov	r4, r0
4497:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5787              		.loc 1 4497 5 is_stmt 1 view .LVU1633
 5788              	.LVL606:
4498:Core/Src/bno055.c ****     s16 reg_gravity_z_s16 = BNO055_INIT_VALUE;
 5789              		.loc 1 4498 5 view .LVU1634
 5790              		.loc 1 4498 9 is_stmt 0 view .LVU1635
 5791 0006 0023     		movs	r3, #0
 5792 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4499:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5793              		.loc 1 4499 5 is_stmt 1 view .LVU1636
 5794              	.LVL607:
4500:Core/Src/bno055.c **** 
4501:Core/Src/bno055.c ****     /* Read raw gravity of z */
4502:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_z(&reg_gravity_z_s16);
 5795              		.loc 1 4502 5 view .LVU1637
 5796              		.loc 1 4502 16 is_stmt 0 view .LVU1638
 5797 000c 0DF10600 		add	r0, sp, #6
 5798              	.LVL608:
 5799              		.loc 1 4502 16 view .LVU1639
 5800 0010 FFF7FEFF 		bl	bno055_read_gravity_z
 5801              	.LVL609:
4503:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5802              		.loc 1 4503 5 is_stmt 1 view .LVU1640
 5803              		.loc 1 4503 8 is_stmt 0 view .LVU1641
 5804 0014 70B9     		cbnz	r0, .L453
 5805 0016 0546     		mov	r5, r0
4504:Core/Src/bno055.c ****     {
4505:Core/Src/bno055.c ****         /* Convert the raw gravity z to m/s2*/
4506:Core/Src/bno055.c ****         data_f = (float)(reg_gravity_z_s16 / BNO055_GRAVITY_DIV_MSQ);
 5806              		.loc 1 4506 9 is_stmt 1 view .LVU1642
 5807              		.loc 1 4506 44 is_stmt 0 view .LVU1643
 5808 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5809              	.LVL610:
 5810              		.loc 1 4506 44 view .LVU1644
 5811 001c FFF7FEFF 		bl	__aeabi_i2d
 5812              	.LVL611:
 5813 0020 0022     		movs	r2, #0
 5814 0022 064B     		ldr	r3, .L455
 5815 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5816              	.LVL612:
 5817              		.loc 1 4506 16 view .LVU1645
 5818 0028 FFF7FEFF 		bl	__aeabi_d2f
 5819              	.LVL613:
4507:Core/Src/bno055.c ****         *gravity_z_f = data_f;
 5820              		.loc 1 4507 9 is_stmt 1 view .LVU1646
 5821              		.loc 1 4507 22 is_stmt 0 view .LVU1647
 5822 002c 2060     		str	r0, [r4]	@ float
 5823              	.LVL614:
 5824              	.L452:
4508:Core/Src/bno055.c ****     }
4509:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccOloYeZ.s 			page 188


4510:Core/Src/bno055.c ****     {
4511:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4512:Core/Src/bno055.c ****     }
4513:Core/Src/bno055.c **** 
4514:Core/Src/bno055.c ****     return com_rslt;
 5825              		.loc 1 4514 5 is_stmt 1 view .LVU1648
4515:Core/Src/bno055.c **** }
 5826              		.loc 1 4515 1 is_stmt 0 view .LVU1649
 5827 002e 2846     		mov	r0, r5
 5828 0030 03B0     		add	sp, sp, #12
 5829              		.cfi_remember_state
 5830              		.cfi_def_cfa_offset 12
 5831              		@ sp needed
 5832 0032 30BD     		pop	{r4, r5, pc}
 5833              	.LVL615:
 5834              	.L453:
 5835              		.cfi_restore_state
4511:Core/Src/bno055.c ****     }
 5836              		.loc 1 4511 18 view .LVU1650
 5837 0034 4FF0FF35 		mov	r5, #-1
 5838 0038 F9E7     		b	.L452
 5839              	.L456:
 5840 003a 00BF     		.align	2
 5841              	.L455:
 5842 003c 00005940 		.word	1079574528
 5843              		.cfi_endproc
 5844              	.LFE75:
 5846              		.section	.text.bno055_convert_float_gravity_xyz_msq,"ax",%progbits
 5847              		.align	1
 5848              		.global	bno055_convert_float_gravity_xyz_msq
 5849              		.syntax unified
 5850              		.thumb
 5851              		.thumb_func
 5853              	bno055_convert_float_gravity_xyz_msq:
 5854              	.LVL616:
 5855              	.LFB76:
4516:Core/Src/bno055.c **** 
4517:Core/Src/bno055.c **** /*!
4518:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity xyz raw data
4519:Core/Src/bno055.c ****  *  to meterpersecseq output as float
4520:Core/Src/bno055.c ****  *
4521:Core/Src/bno055.c ****  *  @param gravity_xyz : The meterpersecseq data of gravity xyz
4522:Core/Src/bno055.c ****  *
4523:Core/Src/bno055.c ****  *  Parameter |    result
4524:Core/Src/bno055.c ****  *  --------- | -----------------
4525:Core/Src/bno055.c ****  *    x       | meterpersecseq data of gravity
4526:Core/Src/bno055.c ****  *    y       | meterpersecseq data of gravity
4527:Core/Src/bno055.c ****  *    z       | meterpersecseq data of gravity
4528:Core/Src/bno055.c ****  *
4529:Core/Src/bno055.c ****  *
4530:Core/Src/bno055.c ****  *  @return results of bus communication function
4531:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4532:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4533:Core/Src/bno055.c ****  *
4534:Core/Src/bno055.c ****  *
4535:Core/Src/bno055.c ****  */
4536:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gravity_xyz_msq(struct bno055_gravity_float_t *gra
ARM GAS  /tmp/ccOloYeZ.s 			page 189


4537:Core/Src/bno055.c **** {
 5856              		.loc 1 4537 1 is_stmt 1 view -0
 5857              		.cfi_startproc
 5858              		@ args = 0, pretend = 0, frame = 8
 5859              		@ frame_needed = 0, uses_anonymous_args = 0
 5860              		.loc 1 4537 1 is_stmt 0 view .LVU1652
 5861 0000 30B5     		push	{r4, r5, lr}
 5862              		.cfi_def_cfa_offset 12
 5863              		.cfi_offset 4, -12
 5864              		.cfi_offset 5, -8
 5865              		.cfi_offset 14, -4
 5866 0002 83B0     		sub	sp, sp, #12
 5867              		.cfi_def_cfa_offset 24
 5868 0004 0446     		mov	r4, r0
4538:Core/Src/bno055.c ****     /* Variable used to return value of
4539:Core/Src/bno055.c ****      * communication routine*/
4540:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5869              		.loc 1 4540 5 is_stmt 1 view .LVU1653
 5870              	.LVL617:
4541:Core/Src/bno055.c ****     struct bno055_gravity_t reg_gravity_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_V
 5871              		.loc 1 4541 5 view .LVU1654
 5872              		.loc 1 4541 29 is_stmt 0 view .LVU1655
 5873 0006 0023     		movs	r3, #0
 5874 0008 ADF80030 		strh	r3, [sp]	@ movhi
 5875 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 5876 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
4542:Core/Src/bno055.c **** 
4543:Core/Src/bno055.c ****     /* Read raw gravity of xyz */
4544:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_xyz(&reg_gravity_xyz);
 5877              		.loc 1 4544 5 is_stmt 1 view .LVU1656
 5878              		.loc 1 4544 16 is_stmt 0 view .LVU1657
 5879 0014 6846     		mov	r0, sp
 5880              	.LVL618:
 5881              		.loc 1 4544 16 view .LVU1658
 5882 0016 FFF7FEFF 		bl	bno055_read_gravity_xyz
 5883              	.LVL619:
4545:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5884              		.loc 1 4545 5 is_stmt 1 view .LVU1659
 5885              		.loc 1 4545 8 is_stmt 0 view .LVU1660
 5886 001a 20BB     		cbnz	r0, .L459
 5887 001c 0546     		mov	r5, r0
4546:Core/Src/bno055.c ****     {
4547:Core/Src/bno055.c ****         /* Convert raw gravity xyz to meterpersecseq */
4548:Core/Src/bno055.c ****         gravity_xyz->x = (float)(reg_gravity_xyz.x / BNO055_GRAVITY_DIV_MSQ);
 5888              		.loc 1 4548 9 is_stmt 1 view .LVU1661
 5889              		.loc 1 4548 52 is_stmt 0 view .LVU1662
 5890 001e BDF90000 		ldrsh	r0, [sp]
 5891              	.LVL620:
 5892              		.loc 1 4548 52 view .LVU1663
 5893 0022 FFF7FEFF 		bl	__aeabi_i2d
 5894              	.LVL621:
 5895 0026 0022     		movs	r2, #0
 5896 0028 104B     		ldr	r3, .L461
 5897 002a FFF7FEFF 		bl	__aeabi_ddiv
 5898              	.LVL622:
 5899              		.loc 1 4548 26 view .LVU1664
 5900 002e FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  /tmp/ccOloYeZ.s 			page 190


 5901              	.LVL623:
 5902              		.loc 1 4548 24 view .LVU1665
 5903 0032 2060     		str	r0, [r4]	@ float
4549:Core/Src/bno055.c ****         gravity_xyz->y = (float)(reg_gravity_xyz.y / BNO055_GRAVITY_DIV_MSQ);
 5904              		.loc 1 4549 9 is_stmt 1 view .LVU1666
 5905              		.loc 1 4549 52 is_stmt 0 view .LVU1667
 5906 0034 BDF90200 		ldrsh	r0, [sp, #2]
 5907 0038 FFF7FEFF 		bl	__aeabi_i2d
 5908              	.LVL624:
 5909 003c 0022     		movs	r2, #0
 5910 003e 0B4B     		ldr	r3, .L461
 5911 0040 FFF7FEFF 		bl	__aeabi_ddiv
 5912              	.LVL625:
 5913              		.loc 1 4549 26 view .LVU1668
 5914 0044 FFF7FEFF 		bl	__aeabi_d2f
 5915              	.LVL626:
 5916              		.loc 1 4549 24 view .LVU1669
 5917 0048 6060     		str	r0, [r4, #4]	@ float
4550:Core/Src/bno055.c ****         gravity_xyz->z = (float)(reg_gravity_xyz.z / BNO055_GRAVITY_DIV_MSQ);
 5918              		.loc 1 4550 9 is_stmt 1 view .LVU1670
 5919              		.loc 1 4550 52 is_stmt 0 view .LVU1671
 5920 004a BDF90400 		ldrsh	r0, [sp, #4]
 5921 004e FFF7FEFF 		bl	__aeabi_i2d
 5922              	.LVL627:
 5923 0052 0022     		movs	r2, #0
 5924 0054 054B     		ldr	r3, .L461
 5925 0056 FFF7FEFF 		bl	__aeabi_ddiv
 5926              	.LVL628:
 5927              		.loc 1 4550 26 view .LVU1672
 5928 005a FFF7FEFF 		bl	__aeabi_d2f
 5929              	.LVL629:
 5930              		.loc 1 4550 24 view .LVU1673
 5931 005e A060     		str	r0, [r4, #8]	@ float
 5932              	.L458:
 5933              	.LVL630:
4551:Core/Src/bno055.c ****     }
4552:Core/Src/bno055.c ****     else
4553:Core/Src/bno055.c ****     {
4554:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4555:Core/Src/bno055.c ****     }
4556:Core/Src/bno055.c **** 
4557:Core/Src/bno055.c ****     return com_rslt;
 5934              		.loc 1 4557 5 is_stmt 1 view .LVU1674
4558:Core/Src/bno055.c **** }
 5935              		.loc 1 4558 1 is_stmt 0 view .LVU1675
 5936 0060 2846     		mov	r0, r5
 5937 0062 03B0     		add	sp, sp, #12
 5938              		.cfi_remember_state
 5939              		.cfi_def_cfa_offset 12
 5940              		@ sp needed
 5941 0064 30BD     		pop	{r4, r5, pc}
 5942              	.LVL631:
 5943              	.L459:
 5944              		.cfi_restore_state
4554:Core/Src/bno055.c ****     }
 5945              		.loc 1 4554 18 view .LVU1676
 5946 0066 4FF0FF35 		mov	r5, #-1
ARM GAS  /tmp/ccOloYeZ.s 			page 191


 5947 006a F9E7     		b	.L458
 5948              	.L462:
 5949              		.align	2
 5950              	.L461:
 5951 006c 00005940 		.word	1079574528
 5952              		.cfi_endproc
 5953              	.LFE76:
 5955              		.section	.text.bno055_convert_double_mag_x_uT,"ax",%progbits
 5956              		.align	1
 5957              		.global	bno055_convert_double_mag_x_uT
 5958              		.syntax unified
 5959              		.thumb
 5960              		.thumb_func
 5962              	bno055_convert_double_mag_x_uT:
 5963              	.LVL632:
 5964              	.LFB87:
4559:Core/Src/bno055.c **** 
4560:Core/Src/bno055.c **** /*!
4561:Core/Src/bno055.c ****  *  @brief This API is used to convert the temperature
4562:Core/Src/bno055.c ****  *  data to Fahrenheit output as float
4563:Core/Src/bno055.c ****  *
4564:Core/Src/bno055.c ****  *  @param temp_f : The float value of temperature Fahrenheit
4565:Core/Src/bno055.c ****  *
4566:Core/Src/bno055.c ****  *  @return results of bus communication function
4567:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4568:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4569:Core/Src/bno055.c ****  *
4570:Core/Src/bno055.c ****  *
4571:Core/Src/bno055.c ****  */
4572:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_temp_fahrenheit(float *temp_f)
4573:Core/Src/bno055.c **** {
4574:Core/Src/bno055.c ****     /* Variable used to return value of
4575:Core/Src/bno055.c ****      * communication routine*/
4576:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4577:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
4578:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4579:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
4580:Core/Src/bno055.c **** 
4581:Core/Src/bno055.c ****     /* Read the current temperature unit and set the
4582:Core/Src/bno055.c ****      * unit as Fahrenheit if the unit is in Celsius */
4583:Core/Src/bno055.c ****     com_rslt = bno055_get_temp_unit(&temp_unit_u8);
4584:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
4585:Core/Src/bno055.c ****     {
4586:Core/Src/bno055.c ****         com_rslt += bno055_set_temp_unit(BNO055_TEMP_UNIT_FAHRENHEIT);
4587:Core/Src/bno055.c ****     }
4588:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4589:Core/Src/bno055.c ****     {
4590:Core/Src/bno055.c ****         /* Read the raw temperature data */
4591:Core/Src/bno055.c ****         com_rslt += bno055_read_temp_data(&reg_temp_s8);
4592:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4593:Core/Src/bno055.c ****         {
4594:Core/Src/bno055.c ****             /* Convert raw temperature data to Fahrenheit*/
4595:Core/Src/bno055.c ****             data_f = (float)(reg_temp_s8 / BNO055_TEMP_DIV_FAHRENHEIT);
4596:Core/Src/bno055.c ****             *temp_f = data_f;
4597:Core/Src/bno055.c ****         }
4598:Core/Src/bno055.c ****         else
4599:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccOloYeZ.s 			page 192


4600:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4601:Core/Src/bno055.c ****         }
4602:Core/Src/bno055.c ****     }
4603:Core/Src/bno055.c ****     else
4604:Core/Src/bno055.c ****     {
4605:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4606:Core/Src/bno055.c ****     }
4607:Core/Src/bno055.c **** 
4608:Core/Src/bno055.c ****     return com_rslt;
4609:Core/Src/bno055.c **** }
4610:Core/Src/bno055.c **** 
4611:Core/Src/bno055.c **** /*!
4612:Core/Src/bno055.c ****  *  @brief This API is used to convert the temperature
4613:Core/Src/bno055.c ****  *  data to Celsius output as float
4614:Core/Src/bno055.c ****  *
4615:Core/Src/bno055.c ****  *  @param temp_f : The float value of temperature Celsius
4616:Core/Src/bno055.c ****  *
4617:Core/Src/bno055.c ****  *  @return results of bus communication function
4618:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4619:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4620:Core/Src/bno055.c ****  *
4621:Core/Src/bno055.c ****  *
4622:Core/Src/bno055.c ****  *
4623:Core/Src/bno055.c ****  */
4624:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_temp_celsius(float *temp_f)
4625:Core/Src/bno055.c **** {
4626:Core/Src/bno055.c ****     /* Variable used to return value of
4627:Core/Src/bno055.c ****      * communication routine*/
4628:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4629:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
4630:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4631:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
4632:Core/Src/bno055.c **** 
4633:Core/Src/bno055.c ****     /* Read the current temperature unit and set the
4634:Core/Src/bno055.c ****      * unit as Fahrenheit if the unit is in Celsius */
4635:Core/Src/bno055.c ****     com_rslt = bno055_get_temp_unit(&temp_unit_u8);
4636:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
4637:Core/Src/bno055.c ****     {
4638:Core/Src/bno055.c ****         com_rslt += bno055_set_temp_unit(BNO055_TEMP_UNIT_CELSIUS);
4639:Core/Src/bno055.c ****     }
4640:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4641:Core/Src/bno055.c ****     {
4642:Core/Src/bno055.c ****         /* Read the raw temperature data */
4643:Core/Src/bno055.c ****         com_rslt += bno055_read_temp_data(&reg_temp_s8);
4644:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4645:Core/Src/bno055.c ****         {
4646:Core/Src/bno055.c ****             /* Convert raw temperature data to Fahrenheit*/
4647:Core/Src/bno055.c ****             data_f = (float)(reg_temp_s8 / BNO055_TEMP_DIV_CELSIUS);
4648:Core/Src/bno055.c ****             *temp_f = data_f;
4649:Core/Src/bno055.c ****         }
4650:Core/Src/bno055.c ****         else
4651:Core/Src/bno055.c ****         {
4652:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4653:Core/Src/bno055.c ****         }
4654:Core/Src/bno055.c ****     }
4655:Core/Src/bno055.c ****     else
4656:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 193


4657:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4658:Core/Src/bno055.c ****     }
4659:Core/Src/bno055.c **** 
4660:Core/Src/bno055.c ****     return com_rslt;
4661:Core/Src/bno055.c **** }
4662:Core/Src/bno055.c **** #endif
4663:Core/Src/bno055.c **** #ifdef  BNO055_DOUBLE_ENABLE
4664:Core/Src/bno055.c **** 
4665:Core/Src/bno055.c **** /*!
4666:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
4667:Core/Src/bno055.c ****  *  to meterpersecseq output as double
4668:Core/Src/bno055.c ****  *
4669:Core/Src/bno055.c ****  *  @param accel_x_d : The accel x meterpersecseq data
4670:Core/Src/bno055.c ****  *
4671:Core/Src/bno055.c ****  *
4672:Core/Src/bno055.c ****  *
4673:Core/Src/bno055.c ****  *  @return results of bus communication function
4674:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4675:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4676:Core/Src/bno055.c ****  *
4677:Core/Src/bno055.c ****  *
4678:Core/Src/bno055.c ****  */
4679:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_x_msq(double *accel_x_d)
4680:Core/Src/bno055.c **** {
4681:Core/Src/bno055.c ****     /* Variable used to return value of
4682:Core/Src/bno055.c ****      * communication routine*/
4683:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4684:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
4685:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
4686:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4687:Core/Src/bno055.c **** 
4688:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4689:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
4690:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4691:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
4692:Core/Src/bno055.c ****     {
4693:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
4694:Core/Src/bno055.c ****     }
4695:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4696:Core/Src/bno055.c ****     {
4697:Core/Src/bno055.c ****         /* Read the accel raw y data*/
4698:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_x(&reg_accel_x_s16);
4699:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4700:Core/Src/bno055.c ****         {
4701:Core/Src/bno055.c ****             /* Convert the raw x to m/s2 */
4702:Core/Src/bno055.c ****             data_f = (double)(reg_accel_x_s16 / BNO055_ACCEL_DIV_MSQ);
4703:Core/Src/bno055.c ****             *accel_x_d = data_f;
4704:Core/Src/bno055.c ****         }
4705:Core/Src/bno055.c ****         else
4706:Core/Src/bno055.c ****         {
4707:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4708:Core/Src/bno055.c ****         }
4709:Core/Src/bno055.c ****     }
4710:Core/Src/bno055.c ****     else
4711:Core/Src/bno055.c ****     {
4712:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4713:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccOloYeZ.s 			page 194


4714:Core/Src/bno055.c **** 
4715:Core/Src/bno055.c ****     return com_rslt;
4716:Core/Src/bno055.c **** }
4717:Core/Src/bno055.c **** 
4718:Core/Src/bno055.c **** /*!
4719:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
4720:Core/Src/bno055.c ****  *  to millig output as double
4721:Core/Src/bno055.c ****  *
4722:Core/Src/bno055.c ****  *  @param accel_x_d : The accel x millig data
4723:Core/Src/bno055.c ****  *
4724:Core/Src/bno055.c ****  *
4725:Core/Src/bno055.c ****  *
4726:Core/Src/bno055.c ****  *  @return results of bus communication function
4727:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4728:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4729:Core/Src/bno055.c ****  *
4730:Core/Src/bno055.c ****  *
4731:Core/Src/bno055.c ****  *
4732:Core/Src/bno055.c ****  */
4733:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_x_mg(double *accel_x_d)
4734:Core/Src/bno055.c **** {
4735:Core/Src/bno055.c ****     /* Variable used to return value of
4736:Core/Src/bno055.c ****      * communication routine*/
4737:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4738:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
4739:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
4740:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4741:Core/Src/bno055.c **** 
4742:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4743:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
4744:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4745:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
4746:Core/Src/bno055.c ****     {
4747:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
4748:Core/Src/bno055.c ****     }
4749:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4750:Core/Src/bno055.c ****     {
4751:Core/Src/bno055.c ****         /* Read the accel raw y data*/
4752:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_x(&reg_accel_x_s16);
4753:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4754:Core/Src/bno055.c ****         {
4755:Core/Src/bno055.c ****             /* Convert the raw x to mg */
4756:Core/Src/bno055.c ****             data_f = (double)(reg_accel_x_s16 / BNO055_ACCEL_DIV_MG);
4757:Core/Src/bno055.c ****             *accel_x_d = data_f;
4758:Core/Src/bno055.c ****         }
4759:Core/Src/bno055.c ****         else
4760:Core/Src/bno055.c ****         {
4761:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4762:Core/Src/bno055.c ****         }
4763:Core/Src/bno055.c ****     }
4764:Core/Src/bno055.c ****     else
4765:Core/Src/bno055.c ****     {
4766:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4767:Core/Src/bno055.c ****     }
4768:Core/Src/bno055.c **** 
4769:Core/Src/bno055.c ****     return com_rslt;
4770:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccOloYeZ.s 			page 195


4771:Core/Src/bno055.c **** 
4772:Core/Src/bno055.c **** /*!
4773:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel y raw data
4774:Core/Src/bno055.c ****  *  to meterpersecseq output as double
4775:Core/Src/bno055.c ****  *
4776:Core/Src/bno055.c ****  *  @param accel_y_d : The accel y meterpersecseq data
4777:Core/Src/bno055.c ****  *
4778:Core/Src/bno055.c ****  *
4779:Core/Src/bno055.c ****  *
4780:Core/Src/bno055.c ****  *  @return results of bus communication function
4781:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4782:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4783:Core/Src/bno055.c ****  *
4784:Core/Src/bno055.c ****  *
4785:Core/Src/bno055.c ****  *
4786:Core/Src/bno055.c ****  */
4787:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_y_msq(double *accel_y_d)
4788:Core/Src/bno055.c **** {
4789:Core/Src/bno055.c ****     /* Variable used to return value of
4790:Core/Src/bno055.c ****      * communication routine*/
4791:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4792:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
4793:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
4794:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4795:Core/Src/bno055.c **** 
4796:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4797:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
4798:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4799:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
4800:Core/Src/bno055.c ****     {
4801:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
4802:Core/Src/bno055.c ****     }
4803:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4804:Core/Src/bno055.c ****     {
4805:Core/Src/bno055.c ****         /* Read the accel raw y data*/
4806:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_y(&reg_accel_y_s16);
4807:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4808:Core/Src/bno055.c ****         {
4809:Core/Src/bno055.c ****             /* Convert the raw x to m/s2 */
4810:Core/Src/bno055.c ****             data_f = (double)(reg_accel_y_s16 / BNO055_ACCEL_DIV_MSQ);
4811:Core/Src/bno055.c ****             *accel_y_d = data_f;
4812:Core/Src/bno055.c ****         }
4813:Core/Src/bno055.c ****         else
4814:Core/Src/bno055.c ****         {
4815:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4816:Core/Src/bno055.c ****         }
4817:Core/Src/bno055.c ****     }
4818:Core/Src/bno055.c ****     else
4819:Core/Src/bno055.c ****     {
4820:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4821:Core/Src/bno055.c ****     }
4822:Core/Src/bno055.c **** 
4823:Core/Src/bno055.c ****     return com_rslt;
4824:Core/Src/bno055.c **** }
4825:Core/Src/bno055.c **** 
4826:Core/Src/bno055.c **** /*!
4827:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel y raw data
ARM GAS  /tmp/ccOloYeZ.s 			page 196


4828:Core/Src/bno055.c ****  *  to millig output as double
4829:Core/Src/bno055.c ****  *
4830:Core/Src/bno055.c ****  *  @param accel_y_d : The accel y millig data
4831:Core/Src/bno055.c ****  *
4832:Core/Src/bno055.c ****  *
4833:Core/Src/bno055.c ****  *
4834:Core/Src/bno055.c ****  *  @return results of bus communication function
4835:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4836:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4837:Core/Src/bno055.c ****  *
4838:Core/Src/bno055.c ****  *
4839:Core/Src/bno055.c ****  */
4840:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_y_mg(double *accel_y_d)
4841:Core/Src/bno055.c **** {
4842:Core/Src/bno055.c ****     /* Variable used to return value of
4843:Core/Src/bno055.c ****      * communication routine*/
4844:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4845:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
4846:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
4847:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4848:Core/Src/bno055.c **** 
4849:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4850:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
4851:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4852:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
4853:Core/Src/bno055.c ****     {
4854:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
4855:Core/Src/bno055.c ****     }
4856:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4857:Core/Src/bno055.c ****     {
4858:Core/Src/bno055.c ****         /* Read the accel raw y data*/
4859:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_y(&reg_accel_y_s16);
4860:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4861:Core/Src/bno055.c ****         {
4862:Core/Src/bno055.c ****             /* Convert the raw y to mg */
4863:Core/Src/bno055.c ****             data_d = (double)(reg_accel_y_s16 / BNO055_ACCEL_DIV_MG);
4864:Core/Src/bno055.c ****             *accel_y_d = data_d;
4865:Core/Src/bno055.c ****         }
4866:Core/Src/bno055.c ****         else
4867:Core/Src/bno055.c ****         {
4868:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4869:Core/Src/bno055.c ****         }
4870:Core/Src/bno055.c ****     }
4871:Core/Src/bno055.c ****     else
4872:Core/Src/bno055.c ****     {
4873:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4874:Core/Src/bno055.c ****     }
4875:Core/Src/bno055.c **** 
4876:Core/Src/bno055.c ****     return com_rslt;
4877:Core/Src/bno055.c **** }
4878:Core/Src/bno055.c **** 
4879:Core/Src/bno055.c **** /*!
4880:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel z raw data
4881:Core/Src/bno055.c ****  *  to meterpersecseq output as double
4882:Core/Src/bno055.c ****  *
4883:Core/Src/bno055.c ****  *  @param accel_z_d : The accel z meterpersecseq data
4884:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 197


4885:Core/Src/bno055.c ****  *
4886:Core/Src/bno055.c ****  *
4887:Core/Src/bno055.c ****  *  @return results of bus communication function
4888:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4889:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4890:Core/Src/bno055.c ****  */
4891:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_z_msq(double *accel_z_d)
4892:Core/Src/bno055.c **** {
4893:Core/Src/bno055.c ****     /* Variable used to return value of
4894:Core/Src/bno055.c ****      * communication routine*/
4895:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4896:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
4897:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
4898:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4899:Core/Src/bno055.c **** 
4900:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4901:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
4902:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4903:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
4904:Core/Src/bno055.c ****     {
4905:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
4906:Core/Src/bno055.c ****     }
4907:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4908:Core/Src/bno055.c ****     {
4909:Core/Src/bno055.c ****         /* Read the accel raw z data*/
4910:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_z(&reg_accel_z_s16);
4911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4912:Core/Src/bno055.c ****         {
4913:Core/Src/bno055.c ****             /* Convert the raw z to m/s2 */
4914:Core/Src/bno055.c ****             data_d = (double)(reg_accel_z_s16 / BNO055_ACCEL_DIV_MSQ);
4915:Core/Src/bno055.c ****             *accel_z_d = data_d;
4916:Core/Src/bno055.c ****         }
4917:Core/Src/bno055.c ****         else
4918:Core/Src/bno055.c ****         {
4919:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4920:Core/Src/bno055.c ****         }
4921:Core/Src/bno055.c ****     }
4922:Core/Src/bno055.c ****     else
4923:Core/Src/bno055.c ****     {
4924:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4925:Core/Src/bno055.c ****     }
4926:Core/Src/bno055.c **** 
4927:Core/Src/bno055.c ****     return com_rslt;
4928:Core/Src/bno055.c **** }
4929:Core/Src/bno055.c **** 
4930:Core/Src/bno055.c **** /*!
4931:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel z raw data
4932:Core/Src/bno055.c ****  *  to millig output as double
4933:Core/Src/bno055.c ****  *
4934:Core/Src/bno055.c ****  *  @param accel_z_d : The accel z millig data
4935:Core/Src/bno055.c ****  *
4936:Core/Src/bno055.c ****  *
4937:Core/Src/bno055.c ****  *
4938:Core/Src/bno055.c ****  *  @return results of bus communication function
4939:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4940:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4941:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 198


4942:Core/Src/bno055.c ****  */
4943:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_z_mg(double *accel_z_d)
4944:Core/Src/bno055.c **** {
4945:Core/Src/bno055.c ****     /* Variable used to return value of
4946:Core/Src/bno055.c ****      * communication routine*/
4947:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4948:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
4949:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
4950:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4951:Core/Src/bno055.c **** 
4952:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4953:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
4954:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4955:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
4956:Core/Src/bno055.c ****     {
4957:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
4958:Core/Src/bno055.c ****     }
4959:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4960:Core/Src/bno055.c ****     {
4961:Core/Src/bno055.c ****         /* Read the accel raw z data*/
4962:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_z(&reg_accel_z_s16);
4963:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4964:Core/Src/bno055.c ****         {
4965:Core/Src/bno055.c ****             /* Convert the raw z to mg */
4966:Core/Src/bno055.c ****             data_d = (double)(reg_accel_z_s16 / BNO055_ACCEL_DIV_MG);
4967:Core/Src/bno055.c ****             *accel_z_d = data_d;
4968:Core/Src/bno055.c ****         }
4969:Core/Src/bno055.c ****         else
4970:Core/Src/bno055.c ****         {
4971:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4972:Core/Src/bno055.c ****         }
4973:Core/Src/bno055.c ****     }
4974:Core/Src/bno055.c ****     else
4975:Core/Src/bno055.c ****     {
4976:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4977:Core/Src/bno055.c ****     }
4978:Core/Src/bno055.c **** 
4979:Core/Src/bno055.c ****     return com_rslt;
4980:Core/Src/bno055.c **** }
4981:Core/Src/bno055.c **** 
4982:Core/Src/bno055.c **** /*!
4983:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel xyz raw data
4984:Core/Src/bno055.c ****  *  to meterpersecseq output as double
4985:Core/Src/bno055.c ****  *
4986:Core/Src/bno055.c ****  *  @param accel_xyz : The meterpersecseq data of accel xyz
4987:Core/Src/bno055.c ****  *
4988:Core/Src/bno055.c ****  *  Parameter |    result
4989:Core/Src/bno055.c ****  *  --------- | -----------------
4990:Core/Src/bno055.c ****  *   x        | meterpersecseq data of accel
4991:Core/Src/bno055.c ****  *   y        | meterpersecseq data of accel
4992:Core/Src/bno055.c ****  *   z        | meterpersecseq data of accel
4993:Core/Src/bno055.c ****  *
4994:Core/Src/bno055.c ****  *
4995:Core/Src/bno055.c ****  *  @return results of bus communication function
4996:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4997:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4998:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 199


4999:Core/Src/bno055.c ****  *
5000:Core/Src/bno055.c ****  */
5001:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_xyz_msq(struct bno055_accel_double_t *accel
5002:Core/Src/bno055.c **** {
5003:Core/Src/bno055.c ****     /* Variable used to return value of
5004:Core/Src/bno055.c ****      * communication routine*/
5005:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5006:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
5007:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
5008:Core/Src/bno055.c **** 
5009:Core/Src/bno055.c ****     /* Read the current accel unit and set the
5010:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
5011:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
5012:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
5013:Core/Src/bno055.c ****     {
5014:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
5015:Core/Src/bno055.c ****     }
5016:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5017:Core/Src/bno055.c ****     {
5018:Core/Src/bno055.c ****         /* Read the accel raw xyz data*/
5019:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_xyz(&reg_accel_xyz);
5020:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5021:Core/Src/bno055.c ****         {
5022:Core/Src/bno055.c ****             /* Convert raw xyz to m/s2*/
5023:Core/Src/bno055.c ****             accel_xyz->x = (double)(reg_accel_xyz.x / BNO055_ACCEL_DIV_MSQ);
5024:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
5025:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
5026:Core/Src/bno055.c ****         }
5027:Core/Src/bno055.c ****         else
5028:Core/Src/bno055.c ****         {
5029:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5030:Core/Src/bno055.c ****         }
5031:Core/Src/bno055.c ****     }
5032:Core/Src/bno055.c ****     else
5033:Core/Src/bno055.c ****     {
5034:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5035:Core/Src/bno055.c ****     }
5036:Core/Src/bno055.c **** 
5037:Core/Src/bno055.c ****     return com_rslt;
5038:Core/Src/bno055.c **** }
5039:Core/Src/bno055.c **** 
5040:Core/Src/bno055.c **** /*!
5041:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel xyz raw data
5042:Core/Src/bno055.c ****  *  to millig output as double
5043:Core/Src/bno055.c ****  *
5044:Core/Src/bno055.c ****  *  @param accel_xyz : The millig data of accel xyz
5045:Core/Src/bno055.c ****  *
5046:Core/Src/bno055.c ****  *  Parameter |    result
5047:Core/Src/bno055.c ****  *  --------- | -----------------
5048:Core/Src/bno055.c ****  *   x        | millig data of accel
5049:Core/Src/bno055.c ****  *   y        | millig data of accel
5050:Core/Src/bno055.c ****  *   z        | millig data of accel
5051:Core/Src/bno055.c ****  *
5052:Core/Src/bno055.c ****  *
5053:Core/Src/bno055.c ****  *  @return results of bus communication function
5054:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5055:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
ARM GAS  /tmp/ccOloYeZ.s 			page 200


5056:Core/Src/bno055.c ****  *
5057:Core/Src/bno055.c ****  */
5058:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_xyz_mg(struct bno055_accel_double_t *accel_
5059:Core/Src/bno055.c **** {
5060:Core/Src/bno055.c ****     /* Variable used to return value of
5061:Core/Src/bno055.c ****      * communication routine*/
5062:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5063:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
5064:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
5065:Core/Src/bno055.c **** 
5066:Core/Src/bno055.c ****     /* Read the current accel unit and set the
5067:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
5068:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
5069:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
5070:Core/Src/bno055.c ****     {
5071:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
5072:Core/Src/bno055.c ****     }
5073:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5074:Core/Src/bno055.c ****     {
5075:Core/Src/bno055.c ****         /* Read the accel raw xyz data*/
5076:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_xyz(&reg_accel_xyz);
5077:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5078:Core/Src/bno055.c ****         {
5079:Core/Src/bno055.c ****             /* Convert raw xyz to mg*/
5080:Core/Src/bno055.c ****             accel_xyz->x = (double)(reg_accel_xyz.x / BNO055_ACCEL_DIV_MG);
5081:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
5082:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
5083:Core/Src/bno055.c ****         }
5084:Core/Src/bno055.c ****         else
5085:Core/Src/bno055.c ****         {
5086:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5087:Core/Src/bno055.c ****         }
5088:Core/Src/bno055.c ****     }
5089:Core/Src/bno055.c ****     else
5090:Core/Src/bno055.c ****     {
5091:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5092:Core/Src/bno055.c ****     }
5093:Core/Src/bno055.c **** 
5094:Core/Src/bno055.c ****     return com_rslt;
5095:Core/Src/bno055.c **** }
5096:Core/Src/bno055.c **** 
5097:Core/Src/bno055.c **** /*!
5098:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag x raw data
5099:Core/Src/bno055.c ****  *  to microTesla output as double
5100:Core/Src/bno055.c ****  *
5101:Core/Src/bno055.c ****  *  @param mag_x_d : The mag x microTesla data
5102:Core/Src/bno055.c ****  *
5103:Core/Src/bno055.c ****  *
5104:Core/Src/bno055.c ****  *
5105:Core/Src/bno055.c ****  *  @return results of bus communication function
5106:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5107:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5108:Core/Src/bno055.c ****  *
5109:Core/Src/bno055.c ****  *
5110:Core/Src/bno055.c ****  *
5111:Core/Src/bno055.c ****  */
5112:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_mag_x_uT(double *mag_x_d)
ARM GAS  /tmp/ccOloYeZ.s 			page 201


5113:Core/Src/bno055.c **** {
 5965              		.loc 1 5113 1 is_stmt 1 view -0
 5966              		.cfi_startproc
 5967              		@ args = 0, pretend = 0, frame = 8
 5968              		@ frame_needed = 0, uses_anonymous_args = 0
 5969              		.loc 1 5113 1 is_stmt 0 view .LVU1678
 5970 0000 30B5     		push	{r4, r5, lr}
 5971              		.cfi_def_cfa_offset 12
 5972              		.cfi_offset 4, -12
 5973              		.cfi_offset 5, -8
 5974              		.cfi_offset 14, -4
 5975 0002 83B0     		sub	sp, sp, #12
 5976              		.cfi_def_cfa_offset 24
 5977 0004 0446     		mov	r4, r0
5114:Core/Src/bno055.c ****     /* Variable used to return value of
5115:Core/Src/bno055.c ****      * communication routine*/
5116:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5978              		.loc 1 5116 5 is_stmt 1 view .LVU1679
 5979              	.LVL633:
5117:Core/Src/bno055.c ****     s16 reg_mag_x_s16 = BNO055_INIT_VALUE;
 5980              		.loc 1 5117 5 view .LVU1680
 5981              		.loc 1 5117 9 is_stmt 0 view .LVU1681
 5982 0006 0023     		movs	r3, #0
 5983 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5118:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 5984              		.loc 1 5118 5 is_stmt 1 view .LVU1682
 5985              	.LVL634:
5119:Core/Src/bno055.c **** 
5120:Core/Src/bno055.c ****     /* Read raw mag x data */
5121:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_x(&reg_mag_x_s16);
 5986              		.loc 1 5121 5 view .LVU1683
 5987              		.loc 1 5121 16 is_stmt 0 view .LVU1684
 5988 000c 0DF10600 		add	r0, sp, #6
 5989              	.LVL635:
 5990              		.loc 1 5121 16 view .LVU1685
 5991 0010 FFF7FEFF 		bl	bno055_read_mag_x
 5992              	.LVL636:
5122:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5993              		.loc 1 5122 5 is_stmt 1 view .LVU1686
 5994              		.loc 1 5122 8 is_stmt 0 view .LVU1687
 5995 0014 68B9     		cbnz	r0, .L465
 5996 0016 0546     		mov	r5, r0
5123:Core/Src/bno055.c ****     {
5124:Core/Src/bno055.c ****         /* Convert raw mag x to microTesla */
5125:Core/Src/bno055.c ****         data_d = (double)(reg_mag_x_s16 / BNO055_MAG_DIV_UT);
 5997              		.loc 1 5125 9 is_stmt 1 view .LVU1688
 5998              		.loc 1 5125 18 is_stmt 0 view .LVU1689
 5999 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6000              	.LVL637:
 6001              		.loc 1 5125 18 view .LVU1690
 6002 001c FFF7FEFF 		bl	__aeabi_i2d
 6003              	.LVL638:
 6004              		.loc 1 5125 16 view .LVU1691
 6005 0020 0022     		movs	r2, #0
 6006 0022 054B     		ldr	r3, .L467
 6007 0024 FFF7FEFF 		bl	__aeabi_dmul
 6008              	.LVL639:
ARM GAS  /tmp/ccOloYeZ.s 			page 202


5126:Core/Src/bno055.c ****         *mag_x_d = data_d;
 6009              		.loc 1 5126 9 is_stmt 1 view .LVU1692
 6010              		.loc 1 5126 18 is_stmt 0 view .LVU1693
 6011 0028 C4E90001 		strd	r0, [r4]
 6012              	.LVL640:
 6013              	.L464:
5127:Core/Src/bno055.c ****     }
5128:Core/Src/bno055.c ****     else
5129:Core/Src/bno055.c ****     {
5130:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5131:Core/Src/bno055.c ****     }
5132:Core/Src/bno055.c **** 
5133:Core/Src/bno055.c ****     return com_rslt;
 6014              		.loc 1 5133 5 is_stmt 1 view .LVU1694
5134:Core/Src/bno055.c **** }
 6015              		.loc 1 5134 1 is_stmt 0 view .LVU1695
 6016 002c 2846     		mov	r0, r5
 6017 002e 03B0     		add	sp, sp, #12
 6018              		.cfi_remember_state
 6019              		.cfi_def_cfa_offset 12
 6020              		@ sp needed
 6021 0030 30BD     		pop	{r4, r5, pc}
 6022              	.LVL641:
 6023              	.L465:
 6024              		.cfi_restore_state
5130:Core/Src/bno055.c ****     }
 6025              		.loc 1 5130 18 view .LVU1696
 6026 0032 4FF0FF35 		mov	r5, #-1
 6027 0036 F9E7     		b	.L464
 6028              	.L468:
 6029              		.align	2
 6030              	.L467:
 6031 0038 0000B03F 		.word	1068498944
 6032              		.cfi_endproc
 6033              	.LFE87:
 6035              		.section	.text.bno055_convert_double_mag_y_uT,"ax",%progbits
 6036              		.align	1
 6037              		.global	bno055_convert_double_mag_y_uT
 6038              		.syntax unified
 6039              		.thumb
 6040              		.thumb_func
 6042              	bno055_convert_double_mag_y_uT:
 6043              	.LVL642:
 6044              	.LFB88:
5135:Core/Src/bno055.c **** 
5136:Core/Src/bno055.c **** /*!
5137:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag y raw data
5138:Core/Src/bno055.c ****  *  to microTesla output as double
5139:Core/Src/bno055.c ****  *
5140:Core/Src/bno055.c ****  *  @param mag_y_d : The mag y microTesla data
5141:Core/Src/bno055.c ****  *
5142:Core/Src/bno055.c ****  *
5143:Core/Src/bno055.c ****  *
5144:Core/Src/bno055.c ****  *  @return results of bus communication function
5145:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5146:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5147:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 203


5148:Core/Src/bno055.c ****  *
5149:Core/Src/bno055.c ****  */
5150:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_mag_y_uT(double *mag_y_d)
5151:Core/Src/bno055.c **** {
 6045              		.loc 1 5151 1 is_stmt 1 view -0
 6046              		.cfi_startproc
 6047              		@ args = 0, pretend = 0, frame = 8
 6048              		@ frame_needed = 0, uses_anonymous_args = 0
 6049              		.loc 1 5151 1 is_stmt 0 view .LVU1698
 6050 0000 30B5     		push	{r4, r5, lr}
 6051              		.cfi_def_cfa_offset 12
 6052              		.cfi_offset 4, -12
 6053              		.cfi_offset 5, -8
 6054              		.cfi_offset 14, -4
 6055 0002 83B0     		sub	sp, sp, #12
 6056              		.cfi_def_cfa_offset 24
 6057 0004 0446     		mov	r4, r0
5152:Core/Src/bno055.c ****     /* Variable used to return value of
5153:Core/Src/bno055.c ****      * communication routine*/
5154:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6058              		.loc 1 5154 5 is_stmt 1 view .LVU1699
 6059              	.LVL643:
5155:Core/Src/bno055.c ****     s16 reg_mag_y_s16 = BNO055_INIT_VALUE;
 6060              		.loc 1 5155 5 view .LVU1700
 6061              		.loc 1 5155 9 is_stmt 0 view .LVU1701
 6062 0006 0023     		movs	r3, #0
 6063 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5156:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6064              		.loc 1 5156 5 is_stmt 1 view .LVU1702
 6065              	.LVL644:
5157:Core/Src/bno055.c **** 
5158:Core/Src/bno055.c ****     /* Read raw mag y data */
5159:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_y(&reg_mag_y_s16);
 6066              		.loc 1 5159 5 view .LVU1703
 6067              		.loc 1 5159 16 is_stmt 0 view .LVU1704
 6068 000c 0DF10600 		add	r0, sp, #6
 6069              	.LVL645:
 6070              		.loc 1 5159 16 view .LVU1705
 6071 0010 FFF7FEFF 		bl	bno055_read_mag_y
 6072              	.LVL646:
5160:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6073              		.loc 1 5160 5 is_stmt 1 view .LVU1706
 6074              		.loc 1 5160 8 is_stmt 0 view .LVU1707
 6075 0014 68B9     		cbnz	r0, .L471
 6076 0016 0546     		mov	r5, r0
5161:Core/Src/bno055.c ****     {
5162:Core/Src/bno055.c ****         /* Convert raw mag y to microTesla */
5163:Core/Src/bno055.c ****         data_d = (double)(reg_mag_y_s16 / BNO055_MAG_DIV_UT);
 6077              		.loc 1 5163 9 is_stmt 1 view .LVU1708
 6078              		.loc 1 5163 18 is_stmt 0 view .LVU1709
 6079 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6080              	.LVL647:
 6081              		.loc 1 5163 18 view .LVU1710
 6082 001c FFF7FEFF 		bl	__aeabi_i2d
 6083              	.LVL648:
 6084              		.loc 1 5163 16 view .LVU1711
 6085 0020 0022     		movs	r2, #0
ARM GAS  /tmp/ccOloYeZ.s 			page 204


 6086 0022 054B     		ldr	r3, .L473
 6087 0024 FFF7FEFF 		bl	__aeabi_dmul
 6088              	.LVL649:
5164:Core/Src/bno055.c ****         *mag_y_d = data_d;
 6089              		.loc 1 5164 9 is_stmt 1 view .LVU1712
 6090              		.loc 1 5164 18 is_stmt 0 view .LVU1713
 6091 0028 C4E90001 		strd	r0, [r4]
 6092              	.LVL650:
 6093              	.L470:
5165:Core/Src/bno055.c ****     }
5166:Core/Src/bno055.c ****     else
5167:Core/Src/bno055.c ****     {
5168:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5169:Core/Src/bno055.c ****     }
5170:Core/Src/bno055.c **** 
5171:Core/Src/bno055.c ****     return com_rslt;
 6094              		.loc 1 5171 5 is_stmt 1 view .LVU1714
5172:Core/Src/bno055.c **** }
 6095              		.loc 1 5172 1 is_stmt 0 view .LVU1715
 6096 002c 2846     		mov	r0, r5
 6097 002e 03B0     		add	sp, sp, #12
 6098              		.cfi_remember_state
 6099              		.cfi_def_cfa_offset 12
 6100              		@ sp needed
 6101 0030 30BD     		pop	{r4, r5, pc}
 6102              	.LVL651:
 6103              	.L471:
 6104              		.cfi_restore_state
5168:Core/Src/bno055.c ****     }
 6105              		.loc 1 5168 18 view .LVU1716
 6106 0032 4FF0FF35 		mov	r5, #-1
 6107 0036 F9E7     		b	.L470
 6108              	.L474:
 6109              		.align	2
 6110              	.L473:
 6111 0038 0000B03F 		.word	1068498944
 6112              		.cfi_endproc
 6113              	.LFE88:
 6115              		.section	.text.bno055_convert_double_mag_z_uT,"ax",%progbits
 6116              		.align	1
 6117              		.global	bno055_convert_double_mag_z_uT
 6118              		.syntax unified
 6119              		.thumb
 6120              		.thumb_func
 6122              	bno055_convert_double_mag_z_uT:
 6123              	.LVL652:
 6124              	.LFB89:
5173:Core/Src/bno055.c **** 
5174:Core/Src/bno055.c **** /*!
5175:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag z raw data
5176:Core/Src/bno055.c ****  *  to microTesla output as double
5177:Core/Src/bno055.c ****  *
5178:Core/Src/bno055.c ****  *  @param mag_z_d : The mag z microTesla data
5179:Core/Src/bno055.c ****  *
5180:Core/Src/bno055.c ****  *
5181:Core/Src/bno055.c ****  *
5182:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/ccOloYeZ.s 			page 205


5183:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5184:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5185:Core/Src/bno055.c ****  *
5186:Core/Src/bno055.c ****  *
5187:Core/Src/bno055.c ****  */
5188:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_mag_z_uT(double *mag_z_d)
5189:Core/Src/bno055.c **** {
 6125              		.loc 1 5189 1 is_stmt 1 view -0
 6126              		.cfi_startproc
 6127              		@ args = 0, pretend = 0, frame = 8
 6128              		@ frame_needed = 0, uses_anonymous_args = 0
 6129              		.loc 1 5189 1 is_stmt 0 view .LVU1718
 6130 0000 30B5     		push	{r4, r5, lr}
 6131              		.cfi_def_cfa_offset 12
 6132              		.cfi_offset 4, -12
 6133              		.cfi_offset 5, -8
 6134              		.cfi_offset 14, -4
 6135 0002 83B0     		sub	sp, sp, #12
 6136              		.cfi_def_cfa_offset 24
 6137 0004 0446     		mov	r4, r0
5190:Core/Src/bno055.c ****     /* Variable used to return value of
5191:Core/Src/bno055.c ****      * communication routine*/
5192:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6138              		.loc 1 5192 5 is_stmt 1 view .LVU1719
 6139              	.LVL653:
5193:Core/Src/bno055.c ****     s16 reg_mag_z_s16 = BNO055_INIT_VALUE;
 6140              		.loc 1 5193 5 view .LVU1720
 6141              		.loc 1 5193 9 is_stmt 0 view .LVU1721
 6142 0006 0023     		movs	r3, #0
 6143 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5194:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6144              		.loc 1 5194 5 is_stmt 1 view .LVU1722
 6145              	.LVL654:
5195:Core/Src/bno055.c **** 
5196:Core/Src/bno055.c ****     /* Read raw mag x */
5197:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_z(&reg_mag_z_s16);
 6146              		.loc 1 5197 5 view .LVU1723
 6147              		.loc 1 5197 16 is_stmt 0 view .LVU1724
 6148 000c 0DF10600 		add	r0, sp, #6
 6149              	.LVL655:
 6150              		.loc 1 5197 16 view .LVU1725
 6151 0010 FFF7FEFF 		bl	bno055_read_mag_z
 6152              	.LVL656:
5198:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6153              		.loc 1 5198 5 is_stmt 1 view .LVU1726
 6154              		.loc 1 5198 8 is_stmt 0 view .LVU1727
 6155 0014 68B9     		cbnz	r0, .L477
 6156 0016 0546     		mov	r5, r0
5199:Core/Src/bno055.c ****     {
5200:Core/Src/bno055.c ****         /* Convert raw mag x to microTesla */
5201:Core/Src/bno055.c ****         data_d = (double)(reg_mag_z_s16 / BNO055_MAG_DIV_UT);
 6157              		.loc 1 5201 9 is_stmt 1 view .LVU1728
 6158              		.loc 1 5201 18 is_stmt 0 view .LVU1729
 6159 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6160              	.LVL657:
 6161              		.loc 1 5201 18 view .LVU1730
 6162 001c FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/ccOloYeZ.s 			page 206


 6163              	.LVL658:
 6164              		.loc 1 5201 16 view .LVU1731
 6165 0020 0022     		movs	r2, #0
 6166 0022 054B     		ldr	r3, .L479
 6167 0024 FFF7FEFF 		bl	__aeabi_dmul
 6168              	.LVL659:
5202:Core/Src/bno055.c ****         *mag_z_d = data_d;
 6169              		.loc 1 5202 9 is_stmt 1 view .LVU1732
 6170              		.loc 1 5202 18 is_stmt 0 view .LVU1733
 6171 0028 C4E90001 		strd	r0, [r4]
 6172              	.LVL660:
 6173              	.L476:
5203:Core/Src/bno055.c ****     }
5204:Core/Src/bno055.c ****     else
5205:Core/Src/bno055.c ****     {
5206:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5207:Core/Src/bno055.c ****     }
5208:Core/Src/bno055.c **** 
5209:Core/Src/bno055.c ****     return com_rslt;
 6174              		.loc 1 5209 5 is_stmt 1 view .LVU1734
5210:Core/Src/bno055.c **** }
 6175              		.loc 1 5210 1 is_stmt 0 view .LVU1735
 6176 002c 2846     		mov	r0, r5
 6177 002e 03B0     		add	sp, sp, #12
 6178              		.cfi_remember_state
 6179              		.cfi_def_cfa_offset 12
 6180              		@ sp needed
 6181 0030 30BD     		pop	{r4, r5, pc}
 6182              	.LVL661:
 6183              	.L477:
 6184              		.cfi_restore_state
5206:Core/Src/bno055.c ****     }
 6185              		.loc 1 5206 18 view .LVU1736
 6186 0032 4FF0FF35 		mov	r5, #-1
 6187 0036 F9E7     		b	.L476
 6188              	.L480:
 6189              		.align	2
 6190              	.L479:
 6191 0038 0000B03F 		.word	1068498944
 6192              		.cfi_endproc
 6193              	.LFE89:
 6195              		.section	.text.bno055_convert_double_mag_xyz_uT,"ax",%progbits
 6196              		.align	1
 6197              		.global	bno055_convert_double_mag_xyz_uT
 6198              		.syntax unified
 6199              		.thumb
 6200              		.thumb_func
 6202              	bno055_convert_double_mag_xyz_uT:
 6203              	.LVL662:
 6204              	.LFB90:
5211:Core/Src/bno055.c **** 
5212:Core/Src/bno055.c **** /*!
5213:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag yz raw data
5214:Core/Src/bno055.c ****  *  to microTesla output as double
5215:Core/Src/bno055.c ****  *
5216:Core/Src/bno055.c ****  *  @param mag_xyz : The microTesla data of mag xyz
5217:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 207


5218:Core/Src/bno055.c ****  *  Parameter |    result
5219:Core/Src/bno055.c ****  *  --------- | -----------------
5220:Core/Src/bno055.c ****  *   x        | microTesla data of mag
5221:Core/Src/bno055.c ****  *   y        | microTesla data of mag
5222:Core/Src/bno055.c ****  *   z        | microTesla data of mag
5223:Core/Src/bno055.c ****  *
5224:Core/Src/bno055.c ****  *
5225:Core/Src/bno055.c ****  *  @return results of bus communication function
5226:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5227:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5228:Core/Src/bno055.c ****  *
5229:Core/Src/bno055.c ****  */
5230:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_mag_xyz_uT(struct bno055_mag_double_t *mag_xyz)
5231:Core/Src/bno055.c **** {
 6205              		.loc 1 5231 1 is_stmt 1 view -0
 6206              		.cfi_startproc
 6207              		@ args = 0, pretend = 0, frame = 8
 6208              		@ frame_needed = 0, uses_anonymous_args = 0
 6209              		.loc 1 5231 1 is_stmt 0 view .LVU1738
 6210 0000 30B5     		push	{r4, r5, lr}
 6211              		.cfi_def_cfa_offset 12
 6212              		.cfi_offset 4, -12
 6213              		.cfi_offset 5, -8
 6214              		.cfi_offset 14, -4
 6215 0002 83B0     		sub	sp, sp, #12
 6216              		.cfi_def_cfa_offset 24
 6217 0004 0446     		mov	r4, r0
5232:Core/Src/bno055.c ****     /* Variable used to return value of
5233:Core/Src/bno055.c ****      * communication routine*/
5234:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6218              		.loc 1 5234 5 is_stmt 1 view .LVU1739
 6219              	.LVL663:
5235:Core/Src/bno055.c ****     struct bno055_mag_t reg_mag_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 6220              		.loc 1 5235 5 view .LVU1740
 6221              		.loc 1 5235 25 is_stmt 0 view .LVU1741
 6222 0006 0023     		movs	r3, #0
 6223 0008 ADF80030 		strh	r3, [sp]	@ movhi
 6224 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 6225 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
5236:Core/Src/bno055.c **** 
5237:Core/Src/bno055.c ****     /* Read raw mag xyz data */
5238:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_xyz(&reg_mag_xyz);
 6226              		.loc 1 5238 5 is_stmt 1 view .LVU1742
 6227              		.loc 1 5238 16 is_stmt 0 view .LVU1743
 6228 0014 6846     		mov	r0, sp
 6229              	.LVL664:
 6230              		.loc 1 5238 16 view .LVU1744
 6231 0016 FFF7FEFF 		bl	bno055_read_mag_xyz
 6232              	.LVL665:
5239:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6233              		.loc 1 5239 5 is_stmt 1 view .LVU1745
 6234              		.loc 1 5239 8 is_stmt 0 view .LVU1746
 6235 001a 08BB     		cbnz	r0, .L483
 6236 001c 0546     		mov	r5, r0
5240:Core/Src/bno055.c ****     {
5241:Core/Src/bno055.c ****         /* Convert raw mag xyz to microTesla*/
5242:Core/Src/bno055.c ****         mag_xyz->x = (double)(reg_mag_xyz.x / BNO055_MAG_DIV_UT);
ARM GAS  /tmp/ccOloYeZ.s 			page 208


 6237              		.loc 1 5242 9 is_stmt 1 view .LVU1747
 6238              		.loc 1 5242 22 is_stmt 0 view .LVU1748
 6239 001e BDF90000 		ldrsh	r0, [sp]
 6240              	.LVL666:
 6241              		.loc 1 5242 22 view .LVU1749
 6242 0022 FFF7FEFF 		bl	__aeabi_i2d
 6243              	.LVL667:
 6244 0026 0022     		movs	r2, #0
 6245 0028 0F4B     		ldr	r3, .L485
 6246 002a FFF7FEFF 		bl	__aeabi_dmul
 6247              	.LVL668:
 6248              		.loc 1 5242 20 view .LVU1750
 6249 002e C4E90001 		strd	r0, [r4]
5243:Core/Src/bno055.c ****         mag_xyz->y = (double)(reg_mag_xyz.y / BNO055_MAG_DIV_UT);
 6250              		.loc 1 5243 9 is_stmt 1 view .LVU1751
 6251              		.loc 1 5243 22 is_stmt 0 view .LVU1752
 6252 0032 BDF90200 		ldrsh	r0, [sp, #2]
 6253 0036 FFF7FEFF 		bl	__aeabi_i2d
 6254              	.LVL669:
 6255 003a 0022     		movs	r2, #0
 6256 003c 0A4B     		ldr	r3, .L485
 6257 003e FFF7FEFF 		bl	__aeabi_dmul
 6258              	.LVL670:
 6259              		.loc 1 5243 20 view .LVU1753
 6260 0042 C4E90201 		strd	r0, [r4, #8]
5244:Core/Src/bno055.c ****         mag_xyz->z = (double)(reg_mag_xyz.z / BNO055_MAG_DIV_UT);
 6261              		.loc 1 5244 9 is_stmt 1 view .LVU1754
 6262              		.loc 1 5244 22 is_stmt 0 view .LVU1755
 6263 0046 BDF90400 		ldrsh	r0, [sp, #4]
 6264 004a FFF7FEFF 		bl	__aeabi_i2d
 6265              	.LVL671:
 6266 004e 0022     		movs	r2, #0
 6267 0050 054B     		ldr	r3, .L485
 6268 0052 FFF7FEFF 		bl	__aeabi_dmul
 6269              	.LVL672:
 6270              		.loc 1 5244 20 view .LVU1756
 6271 0056 C4E90401 		strd	r0, [r4, #16]
 6272              	.L482:
 6273              	.LVL673:
5245:Core/Src/bno055.c ****     }
5246:Core/Src/bno055.c ****     else
5247:Core/Src/bno055.c ****     {
5248:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5249:Core/Src/bno055.c ****     }
5250:Core/Src/bno055.c **** 
5251:Core/Src/bno055.c ****     return com_rslt;
 6274              		.loc 1 5251 5 is_stmt 1 view .LVU1757
5252:Core/Src/bno055.c **** }
 6275              		.loc 1 5252 1 is_stmt 0 view .LVU1758
 6276 005a 2846     		mov	r0, r5
 6277 005c 03B0     		add	sp, sp, #12
 6278              		.cfi_remember_state
 6279              		.cfi_def_cfa_offset 12
 6280              		@ sp needed
 6281 005e 30BD     		pop	{r4, r5, pc}
 6282              	.LVL674:
 6283              	.L483:
ARM GAS  /tmp/ccOloYeZ.s 			page 209


 6284              		.cfi_restore_state
5248:Core/Src/bno055.c ****     }
 6285              		.loc 1 5248 18 view .LVU1759
 6286 0060 4FF0FF35 		mov	r5, #-1
 6287 0064 F9E7     		b	.L482
 6288              	.L486:
 6289 0066 00BF     		.align	2
 6290              	.L485:
 6291 0068 0000B03F 		.word	1068498944
 6292              		.cfi_endproc
 6293              	.LFE90:
 6295              		.section	.text.bno055_convert_double_linear_accel_x_msq,"ax",%progbits
 6296              		.align	1
 6297              		.global	bno055_convert_double_linear_accel_x_msq
 6298              		.syntax unified
 6299              		.thumb
 6300              		.thumb_func
 6302              	bno055_convert_double_linear_accel_x_msq:
 6303              	.LVL675:
 6304              	.LFB107:
5253:Core/Src/bno055.c **** 
5254:Core/Src/bno055.c **** /*!
5255:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro x raw data
5256:Core/Src/bno055.c ****  *  to dps output as double
5257:Core/Src/bno055.c ****  *
5258:Core/Src/bno055.c ****  *  @param gyro_x_d : The gyro x dps double data
5259:Core/Src/bno055.c ****  *
5260:Core/Src/bno055.c ****  *
5261:Core/Src/bno055.c ****  *
5262:Core/Src/bno055.c ****  *  @return results of bus communication function
5263:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5264:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5265:Core/Src/bno055.c ****  *
5266:Core/Src/bno055.c ****  *
5267:Core/Src/bno055.c ****  */
5268:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_x_dps(double *gyro_x_d)
5269:Core/Src/bno055.c **** {
5270:Core/Src/bno055.c ****     /* Variable used to return value of
5271:Core/Src/bno055.c ****      * communication routine*/
5272:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5273:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
5274:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5275:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5276:Core/Src/bno055.c **** 
5277:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5278:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
5279:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5280:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
5281:Core/Src/bno055.c ****     {
5282:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
5283:Core/Src/bno055.c ****     }
5284:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5285:Core/Src/bno055.c ****     {
5286:Core/Src/bno055.c ****         /* Read gyro raw x data */
5287:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_x(&reg_gyro_x_s16);
5288:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5289:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccOloYeZ.s 			page 210


5290:Core/Src/bno055.c ****             /* Convert raw gyro x to dps */
5291:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_x_s16 / BNO055_GYRO_DIV_DPS);
5292:Core/Src/bno055.c ****             *gyro_x_d = data_d;
5293:Core/Src/bno055.c ****         }
5294:Core/Src/bno055.c ****         else
5295:Core/Src/bno055.c ****         {
5296:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5297:Core/Src/bno055.c ****         }
5298:Core/Src/bno055.c ****     }
5299:Core/Src/bno055.c ****     else
5300:Core/Src/bno055.c ****     {
5301:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5302:Core/Src/bno055.c ****     }
5303:Core/Src/bno055.c **** 
5304:Core/Src/bno055.c ****     return com_rslt;
5305:Core/Src/bno055.c **** }
5306:Core/Src/bno055.c **** 
5307:Core/Src/bno055.c **** /*!
5308:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro x raw data
5309:Core/Src/bno055.c ****  *  to rps output as double
5310:Core/Src/bno055.c ****  *
5311:Core/Src/bno055.c ****  *  @param gyro_x_d : The gyro x dps double data
5312:Core/Src/bno055.c ****  *
5313:Core/Src/bno055.c ****  *
5314:Core/Src/bno055.c ****  *
5315:Core/Src/bno055.c ****  *  @return results of bus communication function
5316:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5317:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5318:Core/Src/bno055.c ****  *
5319:Core/Src/bno055.c ****  *
5320:Core/Src/bno055.c ****  */
5321:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_x_rps(double *gyro_x_d)
5322:Core/Src/bno055.c **** {
5323:Core/Src/bno055.c ****     /* Variable used to return value of
5324:Core/Src/bno055.c ****      * communication routine*/
5325:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5326:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
5327:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5328:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5329:Core/Src/bno055.c **** 
5330:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5331:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
5332:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5333:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
5334:Core/Src/bno055.c ****     {
5335:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
5336:Core/Src/bno055.c ****     }
5337:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5338:Core/Src/bno055.c ****     {
5339:Core/Src/bno055.c ****         /* Read gyro raw x data */
5340:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_x(&reg_gyro_x_s16);
5341:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5342:Core/Src/bno055.c ****         {
5343:Core/Src/bno055.c ****             /* Convert raw gyro x to rps */
5344:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_x_s16 / BNO055_GYRO_DIV_RPS);
5345:Core/Src/bno055.c ****             *gyro_x_d = data_d;
5346:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 211


5347:Core/Src/bno055.c ****         else
5348:Core/Src/bno055.c ****         {
5349:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5350:Core/Src/bno055.c ****         }
5351:Core/Src/bno055.c ****     }
5352:Core/Src/bno055.c ****     else
5353:Core/Src/bno055.c ****     {
5354:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5355:Core/Src/bno055.c ****     }
5356:Core/Src/bno055.c **** 
5357:Core/Src/bno055.c ****     return com_rslt;
5358:Core/Src/bno055.c **** }
5359:Core/Src/bno055.c **** 
5360:Core/Src/bno055.c **** /*!
5361:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro y raw data
5362:Core/Src/bno055.c ****  *  to dps output as double
5363:Core/Src/bno055.c ****  *
5364:Core/Src/bno055.c ****  *  @param gyro_y_d : The gyro y dps double data
5365:Core/Src/bno055.c ****  *
5366:Core/Src/bno055.c ****  *
5367:Core/Src/bno055.c ****  *
5368:Core/Src/bno055.c ****  *  @return results of bus communication function
5369:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5370:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5371:Core/Src/bno055.c ****  *
5372:Core/Src/bno055.c ****  *
5373:Core/Src/bno055.c ****  */
5374:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_y_dps(double *gyro_y_d)
5375:Core/Src/bno055.c **** {
5376:Core/Src/bno055.c ****     /* Variable used to return value of
5377:Core/Src/bno055.c ****      * communication routine*/
5378:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5379:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
5380:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5381:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5382:Core/Src/bno055.c **** 
5383:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5384:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
5385:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5386:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
5387:Core/Src/bno055.c ****     {
5388:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
5389:Core/Src/bno055.c ****     }
5390:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5391:Core/Src/bno055.c ****     {
5392:Core/Src/bno055.c ****         /* Read gyro raw y data */
5393:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_y(&reg_gyro_y_s16);
5394:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5395:Core/Src/bno055.c ****         {
5396:Core/Src/bno055.c ****             /* Convert raw gyro y to dps */
5397:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_y_s16 / BNO055_GYRO_DIV_DPS);
5398:Core/Src/bno055.c ****             *gyro_y_d = data_d;
5399:Core/Src/bno055.c ****         }
5400:Core/Src/bno055.c ****         else
5401:Core/Src/bno055.c ****         {
5402:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5403:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 212


5404:Core/Src/bno055.c ****     }
5405:Core/Src/bno055.c ****     else
5406:Core/Src/bno055.c ****     {
5407:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5408:Core/Src/bno055.c ****     }
5409:Core/Src/bno055.c **** 
5410:Core/Src/bno055.c ****     return com_rslt;
5411:Core/Src/bno055.c **** }
5412:Core/Src/bno055.c **** 
5413:Core/Src/bno055.c **** /*!
5414:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro y raw data
5415:Core/Src/bno055.c ****  *  to rps output as double
5416:Core/Src/bno055.c ****  *
5417:Core/Src/bno055.c ****  *  @param gyro_y_d : The gyro y dps double data
5418:Core/Src/bno055.c ****  *
5419:Core/Src/bno055.c ****  *
5420:Core/Src/bno055.c ****  *
5421:Core/Src/bno055.c ****  *  @return results of bus communication function
5422:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5423:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5424:Core/Src/bno055.c ****  *
5425:Core/Src/bno055.c ****  *
5426:Core/Src/bno055.c ****  */
5427:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_y_rps(double *gyro_y_d)
5428:Core/Src/bno055.c **** {
5429:Core/Src/bno055.c ****     /* Variable used to return value of
5430:Core/Src/bno055.c ****      * communication routine*/
5431:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5432:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
5433:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5434:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5435:Core/Src/bno055.c **** 
5436:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5437:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
5438:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5439:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
5440:Core/Src/bno055.c ****     {
5441:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
5442:Core/Src/bno055.c ****     }
5443:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5444:Core/Src/bno055.c ****     {
5445:Core/Src/bno055.c ****         /* Read gyro raw y data */
5446:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_y(&reg_gyro_y_s16);
5447:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5448:Core/Src/bno055.c ****         {
5449:Core/Src/bno055.c ****             /* Convert raw gyro y to rps */
5450:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_y_s16 / BNO055_GYRO_DIV_RPS);
5451:Core/Src/bno055.c ****             *gyro_y_d = data_d;
5452:Core/Src/bno055.c ****         }
5453:Core/Src/bno055.c ****         else
5454:Core/Src/bno055.c ****         {
5455:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5456:Core/Src/bno055.c ****         }
5457:Core/Src/bno055.c ****     }
5458:Core/Src/bno055.c ****     else
5459:Core/Src/bno055.c ****     {
5460:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccOloYeZ.s 			page 213


5461:Core/Src/bno055.c ****     }
5462:Core/Src/bno055.c **** 
5463:Core/Src/bno055.c ****     return com_rslt;
5464:Core/Src/bno055.c **** }
5465:Core/Src/bno055.c **** 
5466:Core/Src/bno055.c **** /*!
5467:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro z raw data
5468:Core/Src/bno055.c ****  *  to dps output as double
5469:Core/Src/bno055.c ****  *
5470:Core/Src/bno055.c ****  *  @param gyro_z_d : The gyro z dps double data
5471:Core/Src/bno055.c ****  *
5472:Core/Src/bno055.c ****  *
5473:Core/Src/bno055.c ****  *
5474:Core/Src/bno055.c ****  *  @return results of bus communication function
5475:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5476:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5477:Core/Src/bno055.c ****  *
5478:Core/Src/bno055.c ****  *
5479:Core/Src/bno055.c ****  */
5480:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_z_dps(double *gyro_z_d)
5481:Core/Src/bno055.c **** {
5482:Core/Src/bno055.c ****     /* Variable used to return value of
5483:Core/Src/bno055.c ****      * communication routine*/
5484:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5485:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
5486:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5487:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5488:Core/Src/bno055.c **** 
5489:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5490:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
5491:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5492:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
5493:Core/Src/bno055.c ****     {
5494:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
5495:Core/Src/bno055.c ****     }
5496:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5497:Core/Src/bno055.c ****     {
5498:Core/Src/bno055.c ****         /* Read gyro raw z data */
5499:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_z(&reg_gyro_z_s16);
5500:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5501:Core/Src/bno055.c ****         {
5502:Core/Src/bno055.c ****             /* Convert raw gyro z to dps */
5503:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_z_s16 / BNO055_GYRO_DIV_DPS);
5504:Core/Src/bno055.c ****             *gyro_z_d = data_d;
5505:Core/Src/bno055.c ****         }
5506:Core/Src/bno055.c ****         else
5507:Core/Src/bno055.c ****         {
5508:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5509:Core/Src/bno055.c ****         }
5510:Core/Src/bno055.c ****     }
5511:Core/Src/bno055.c ****     else
5512:Core/Src/bno055.c ****     {
5513:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5514:Core/Src/bno055.c ****     }
5515:Core/Src/bno055.c **** 
5516:Core/Src/bno055.c ****     return com_rslt;
5517:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccOloYeZ.s 			page 214


5518:Core/Src/bno055.c **** 
5519:Core/Src/bno055.c **** /*!
5520:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro z raw data
5521:Core/Src/bno055.c ****  *  to rps output as double
5522:Core/Src/bno055.c ****  *
5523:Core/Src/bno055.c ****  *  @param gyro_z_d : The gyro z rps double data
5524:Core/Src/bno055.c ****  *
5525:Core/Src/bno055.c ****  *
5526:Core/Src/bno055.c ****  *
5527:Core/Src/bno055.c ****  *  @return results of bus communication function
5528:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5529:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5530:Core/Src/bno055.c ****  *
5531:Core/Src/bno055.c ****  *
5532:Core/Src/bno055.c ****  */
5533:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_z_rps(double *gyro_z_d)
5534:Core/Src/bno055.c **** {
5535:Core/Src/bno055.c ****     /* Variable used to return value of
5536:Core/Src/bno055.c ****      * communication routine*/
5537:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5538:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
5539:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5540:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5541:Core/Src/bno055.c **** 
5542:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5543:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
5544:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5545:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
5546:Core/Src/bno055.c ****     {
5547:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
5548:Core/Src/bno055.c ****     }
5549:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5550:Core/Src/bno055.c ****     {
5551:Core/Src/bno055.c ****         /* Read gyro raw x data */
5552:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_z(&reg_gyro_z_s16);
5553:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5554:Core/Src/bno055.c ****         {
5555:Core/Src/bno055.c ****             /* Convert raw gyro x to rps */
5556:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_z_s16 / BNO055_GYRO_DIV_RPS);
5557:Core/Src/bno055.c ****             *gyro_z_d = data_d;
5558:Core/Src/bno055.c ****         }
5559:Core/Src/bno055.c ****         else
5560:Core/Src/bno055.c ****         {
5561:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5562:Core/Src/bno055.c ****         }
5563:Core/Src/bno055.c ****     }
5564:Core/Src/bno055.c ****     else
5565:Core/Src/bno055.c ****     {
5566:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5567:Core/Src/bno055.c ****     }
5568:Core/Src/bno055.c **** 
5569:Core/Src/bno055.c ****     return com_rslt;
5570:Core/Src/bno055.c **** }
5571:Core/Src/bno055.c **** 
5572:Core/Src/bno055.c **** /*!
5573:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro xyz raw data
5574:Core/Src/bno055.c ****  *  to dps output as double
ARM GAS  /tmp/ccOloYeZ.s 			page 215


5575:Core/Src/bno055.c ****  *
5576:Core/Src/bno055.c ****  *  @param gyro_xyz : The dps data of gyro xyz
5577:Core/Src/bno055.c ****  *
5578:Core/Src/bno055.c ****  *  Parameter |    result
5579:Core/Src/bno055.c ****  *  --------- | -----------------
5580:Core/Src/bno055.c ****  *   x        | dps data of gyro
5581:Core/Src/bno055.c ****  *   y        | dps data of gyro
5582:Core/Src/bno055.c ****  *   z        | dps data of gyro
5583:Core/Src/bno055.c ****  *
5584:Core/Src/bno055.c ****  *
5585:Core/Src/bno055.c ****  *  @return results of bus communication function
5586:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5587:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5588:Core/Src/bno055.c ****  *
5589:Core/Src/bno055.c ****  */
5590:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_xyz_dps(struct bno055_gyro_double_t *gyro_xy
5591:Core/Src/bno055.c **** {
5592:Core/Src/bno055.c ****     /* Variable used to return value of
5593:Core/Src/bno055.c ****      * communication routine*/
5594:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5595:Core/Src/bno055.c ****     struct bno055_gyro_t reg_gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE }
5596:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5597:Core/Src/bno055.c **** 
5598:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5599:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
5600:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5601:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
5602:Core/Src/bno055.c ****     {
5603:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
5604:Core/Src/bno055.c ****     }
5605:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5606:Core/Src/bno055.c ****     {
5607:Core/Src/bno055.c ****         /* Read gyro raw xyz data */
5608:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_xyz(&reg_gyro_xyz);
5609:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5610:Core/Src/bno055.c ****         {
5611:Core/Src/bno055.c ****             /* Convert gyro raw xyz to dps*/
5612:Core/Src/bno055.c ****             gyro_xyz->x = (double)(reg_gyro_xyz.x / BNO055_GYRO_DIV_DPS);
5613:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_DPS);
5614:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_DPS);
5615:Core/Src/bno055.c ****         }
5616:Core/Src/bno055.c ****         else
5617:Core/Src/bno055.c ****         {
5618:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5619:Core/Src/bno055.c ****         }
5620:Core/Src/bno055.c ****     }
5621:Core/Src/bno055.c ****     else
5622:Core/Src/bno055.c ****     {
5623:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5624:Core/Src/bno055.c ****     }
5625:Core/Src/bno055.c **** 
5626:Core/Src/bno055.c ****     return com_rslt;
5627:Core/Src/bno055.c **** }
5628:Core/Src/bno055.c **** 
5629:Core/Src/bno055.c **** /*!
5630:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro xyz raw data
5631:Core/Src/bno055.c ****  *  to rps output as double
ARM GAS  /tmp/ccOloYeZ.s 			page 216


5632:Core/Src/bno055.c ****  *
5633:Core/Src/bno055.c ****  *  @param gyro_xyz : The rps data of gyro xyz
5634:Core/Src/bno055.c ****  *
5635:Core/Src/bno055.c ****  *  Parameter |    result
5636:Core/Src/bno055.c ****  *  --------- | -----------------
5637:Core/Src/bno055.c ****  *   x        | rps data of gyro
5638:Core/Src/bno055.c ****  *   y        | rps data of gyro
5639:Core/Src/bno055.c ****  *   z        | rps data of gyro
5640:Core/Src/bno055.c ****  *
5641:Core/Src/bno055.c ****  *
5642:Core/Src/bno055.c ****  *  @return results of bus communication function
5643:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5644:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5645:Core/Src/bno055.c ****  *
5646:Core/Src/bno055.c ****  */
5647:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_xyz_rps(struct bno055_gyro_double_t *gyro_xy
5648:Core/Src/bno055.c **** {
5649:Core/Src/bno055.c ****     /* Variable used to return value of
5650:Core/Src/bno055.c ****      * communication routine*/
5651:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5652:Core/Src/bno055.c ****     struct bno055_gyro_t reg_gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE }
5653:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5654:Core/Src/bno055.c **** 
5655:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5656:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
5657:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5658:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
5659:Core/Src/bno055.c ****     {
5660:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
5661:Core/Src/bno055.c ****     }
5662:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5663:Core/Src/bno055.c ****     {
5664:Core/Src/bno055.c ****         /* Read gyro raw x data */
5665:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_xyz(&reg_gyro_xyz);
5666:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5667:Core/Src/bno055.c ****         {
5668:Core/Src/bno055.c ****             /* Convert the raw gyro xyz to rps*/
5669:Core/Src/bno055.c ****             gyro_xyz->x = (double)(reg_gyro_xyz.x / BNO055_GYRO_DIV_RPS);
5670:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_RPS);
5671:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_RPS);
5672:Core/Src/bno055.c ****         }
5673:Core/Src/bno055.c ****         else
5674:Core/Src/bno055.c ****         {
5675:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5676:Core/Src/bno055.c ****         }
5677:Core/Src/bno055.c ****     }
5678:Core/Src/bno055.c ****     else
5679:Core/Src/bno055.c ****     {
5680:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5681:Core/Src/bno055.c ****     }
5682:Core/Src/bno055.c **** 
5683:Core/Src/bno055.c ****     return com_rslt;
5684:Core/Src/bno055.c **** }
5685:Core/Src/bno055.c **** 
5686:Core/Src/bno055.c **** /*!
5687:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler h raw data
5688:Core/Src/bno055.c ****  *  to degree output as double
ARM GAS  /tmp/ccOloYeZ.s 			page 217


5689:Core/Src/bno055.c ****  *
5690:Core/Src/bno055.c ****  *  @param euler_h_d : The double value of Euler h degree
5691:Core/Src/bno055.c ****  *
5692:Core/Src/bno055.c ****  *  @return results of bus communication function
5693:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5694:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5695:Core/Src/bno055.c ****  *
5696:Core/Src/bno055.c ****  *
5697:Core/Src/bno055.c ****  */
5698:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_h_deg(double *euler_h_d)
5699:Core/Src/bno055.c **** {
5700:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5701:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
5702:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5703:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5704:Core/Src/bno055.c **** 
5705:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5706:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
5707:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5708:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
5709:Core/Src/bno055.c ****     {
5710:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
5711:Core/Src/bno055.c ****     }
5712:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5713:Core/Src/bno055.c ****     {
5714:Core/Src/bno055.c ****         /* Read Euler raw h data*/
5715:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_h(&reg_euler_h_s16);
5716:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5717:Core/Src/bno055.c ****         {
5718:Core/Src/bno055.c ****             /* Convert raw Euler h to degree */
5719:Core/Src/bno055.c ****             data_d = (double)(reg_euler_h_s16 / BNO055_EULER_DIV_DEG);
5720:Core/Src/bno055.c ****             *euler_h_d = data_d;
5721:Core/Src/bno055.c ****         }
5722:Core/Src/bno055.c ****         else
5723:Core/Src/bno055.c ****         {
5724:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5725:Core/Src/bno055.c ****         }
5726:Core/Src/bno055.c ****     }
5727:Core/Src/bno055.c ****     else
5728:Core/Src/bno055.c ****     {
5729:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5730:Core/Src/bno055.c ****     }
5731:Core/Src/bno055.c **** 
5732:Core/Src/bno055.c ****     return com_rslt;
5733:Core/Src/bno055.c **** }
5734:Core/Src/bno055.c **** 
5735:Core/Src/bno055.c **** /*!
5736:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler h raw data
5737:Core/Src/bno055.c ****  *  to radians output as double
5738:Core/Src/bno055.c ****  *
5739:Core/Src/bno055.c ****  *  @param euler_h_d : The double value of Euler h radians
5740:Core/Src/bno055.c ****  *
5741:Core/Src/bno055.c ****  *  @return results of bus communication function
5742:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5743:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5744:Core/Src/bno055.c ****  *
5745:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 218


5746:Core/Src/bno055.c ****  */
5747:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_h_rad(double *euler_h_d)
5748:Core/Src/bno055.c **** {
5749:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5750:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
5751:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5752:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5753:Core/Src/bno055.c **** 
5754:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5755:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
5756:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5757:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
5758:Core/Src/bno055.c ****     {
5759:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
5760:Core/Src/bno055.c ****     }
5761:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5762:Core/Src/bno055.c ****     {
5763:Core/Src/bno055.c ****         /* Read Euler raw h data*/
5764:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_h(&reg_euler_h_s16);
5765:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5766:Core/Src/bno055.c ****         {
5767:Core/Src/bno055.c ****             /* Convert raw Euler h to radians */
5768:Core/Src/bno055.c ****             data_d = (double)(reg_euler_h_s16 / BNO055_EULER_DIV_RAD);
5769:Core/Src/bno055.c ****             *euler_h_d = data_d;
5770:Core/Src/bno055.c ****         }
5771:Core/Src/bno055.c ****         else
5772:Core/Src/bno055.c ****         {
5773:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5774:Core/Src/bno055.c ****         }
5775:Core/Src/bno055.c ****     }
5776:Core/Src/bno055.c ****     else
5777:Core/Src/bno055.c ****     {
5778:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5779:Core/Src/bno055.c ****     }
5780:Core/Src/bno055.c **** 
5781:Core/Src/bno055.c ****     return com_rslt;
5782:Core/Src/bno055.c **** }
5783:Core/Src/bno055.c **** 
5784:Core/Src/bno055.c **** /*!
5785:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler r raw data
5786:Core/Src/bno055.c ****  *  to degree output as double
5787:Core/Src/bno055.c ****  *
5788:Core/Src/bno055.c ****  *  @param euler_r_d : The double value of Euler r degree
5789:Core/Src/bno055.c ****  *
5790:Core/Src/bno055.c ****  *  @return results of bus communication function
5791:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5792:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5793:Core/Src/bno055.c ****  *
5794:Core/Src/bno055.c ****  *
5795:Core/Src/bno055.c ****  */
5796:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_r_deg(double *euler_r_d)
5797:Core/Src/bno055.c **** {
5798:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5799:Core/Src/bno055.c ****     s16 reg_euler_r_s16 = BNO055_INIT_VALUE;
5800:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5801:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5802:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 219


5803:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5804:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
5805:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5806:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
5807:Core/Src/bno055.c ****     {
5808:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
5809:Core/Src/bno055.c ****     }
5810:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5811:Core/Src/bno055.c ****     {
5812:Core/Src/bno055.c ****         /* Read Euler raw r data*/
5813:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_r(&reg_euler_r_s16);
5814:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5815:Core/Src/bno055.c ****         {
5816:Core/Src/bno055.c ****             /* Convert raw Euler r to degree */
5817:Core/Src/bno055.c ****             data_d = (double)(reg_euler_r_s16 / BNO055_EULER_DIV_DEG);
5818:Core/Src/bno055.c ****             *euler_r_d = data_d;
5819:Core/Src/bno055.c ****         }
5820:Core/Src/bno055.c ****         else
5821:Core/Src/bno055.c ****         {
5822:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5823:Core/Src/bno055.c ****         }
5824:Core/Src/bno055.c ****     }
5825:Core/Src/bno055.c ****     else
5826:Core/Src/bno055.c ****     {
5827:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5828:Core/Src/bno055.c ****     }
5829:Core/Src/bno055.c **** 
5830:Core/Src/bno055.c ****     return com_rslt;
5831:Core/Src/bno055.c **** }
5832:Core/Src/bno055.c **** 
5833:Core/Src/bno055.c **** /*!
5834:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler r raw data
5835:Core/Src/bno055.c ****  *  to radians output as double
5836:Core/Src/bno055.c ****  *
5837:Core/Src/bno055.c ****  *  @param euler_r_d : The double value of Euler r radians
5838:Core/Src/bno055.c ****  *
5839:Core/Src/bno055.c ****  *  @return results of bus communication function
5840:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5841:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5842:Core/Src/bno055.c ****  *
5843:Core/Src/bno055.c ****  *
5844:Core/Src/bno055.c ****  */
5845:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_r_rad(double *euler_r_d)
5846:Core/Src/bno055.c **** {
5847:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5848:Core/Src/bno055.c ****     s16 reg_euler_r_s16 = BNO055_INIT_VALUE;
5849:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5850:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5851:Core/Src/bno055.c **** 
5852:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5853:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
5854:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5855:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
5856:Core/Src/bno055.c ****     {
5857:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
5858:Core/Src/bno055.c ****     }
5859:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/ccOloYeZ.s 			page 220


5860:Core/Src/bno055.c ****     {
5861:Core/Src/bno055.c ****         /* Read Euler raw r data*/
5862:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_r(&reg_euler_r_s16);
5863:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5864:Core/Src/bno055.c ****         {
5865:Core/Src/bno055.c ****             /* Convert raw Euler r to radians */
5866:Core/Src/bno055.c ****             data_d = (double)(reg_euler_r_s16 / BNO055_EULER_DIV_RAD);
5867:Core/Src/bno055.c ****             *euler_r_d = data_d;
5868:Core/Src/bno055.c ****         }
5869:Core/Src/bno055.c ****         else
5870:Core/Src/bno055.c ****         {
5871:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5872:Core/Src/bno055.c ****         }
5873:Core/Src/bno055.c ****     }
5874:Core/Src/bno055.c ****     else
5875:Core/Src/bno055.c ****     {
5876:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5877:Core/Src/bno055.c ****     }
5878:Core/Src/bno055.c **** 
5879:Core/Src/bno055.c ****     return com_rslt;
5880:Core/Src/bno055.c **** }
5881:Core/Src/bno055.c **** 
5882:Core/Src/bno055.c **** /*!
5883:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler p raw data
5884:Core/Src/bno055.c ****  *  to degree output as double
5885:Core/Src/bno055.c ****  *
5886:Core/Src/bno055.c ****  *  @param euler_p_d : The double value of Euler p degree
5887:Core/Src/bno055.c ****  *
5888:Core/Src/bno055.c ****  *  @return results of bus communication function
5889:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5890:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5891:Core/Src/bno055.c ****  *
5892:Core/Src/bno055.c ****  *
5893:Core/Src/bno055.c ****  */
5894:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_p_deg(double *euler_p_d)
5895:Core/Src/bno055.c **** {
5896:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5897:Core/Src/bno055.c ****     s16 reg_euler_p_s16 = BNO055_INIT_VALUE;
5898:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5899:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5900:Core/Src/bno055.c **** 
5901:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5902:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
5903:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5904:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
5905:Core/Src/bno055.c ****     {
5906:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
5907:Core/Src/bno055.c ****     }
5908:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5909:Core/Src/bno055.c ****     {
5910:Core/Src/bno055.c ****         /* Read Euler raw p data*/
5911:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_p(&reg_euler_p_s16);
5912:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5913:Core/Src/bno055.c ****         {
5914:Core/Src/bno055.c ****             /* Convert raw Euler p to degree*/
5915:Core/Src/bno055.c ****             data_d = (double)(reg_euler_p_s16 / BNO055_EULER_DIV_DEG);
5916:Core/Src/bno055.c ****             *euler_p_d = data_d;
ARM GAS  /tmp/ccOloYeZ.s 			page 221


5917:Core/Src/bno055.c ****         }
5918:Core/Src/bno055.c ****         else
5919:Core/Src/bno055.c ****         {
5920:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5921:Core/Src/bno055.c ****         }
5922:Core/Src/bno055.c ****     }
5923:Core/Src/bno055.c ****     else
5924:Core/Src/bno055.c ****     {
5925:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5926:Core/Src/bno055.c ****     }
5927:Core/Src/bno055.c **** 
5928:Core/Src/bno055.c ****     return com_rslt;
5929:Core/Src/bno055.c **** }
5930:Core/Src/bno055.c **** 
5931:Core/Src/bno055.c **** /*!
5932:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler p raw data
5933:Core/Src/bno055.c ****  *  to radians output as double
5934:Core/Src/bno055.c ****  *
5935:Core/Src/bno055.c ****  *  @param euler_p_d : The double value of Euler p radians
5936:Core/Src/bno055.c ****  *
5937:Core/Src/bno055.c ****  *  @return results of bus communication function
5938:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5939:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5940:Core/Src/bno055.c ****  *
5941:Core/Src/bno055.c ****  *
5942:Core/Src/bno055.c ****  */
5943:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_p_rad(double *euler_p_d)
5944:Core/Src/bno055.c **** {
5945:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5946:Core/Src/bno055.c ****     s16 reg_euler_p_s16 = BNO055_INIT_VALUE;
5947:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5948:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5949:Core/Src/bno055.c **** 
5950:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5951:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
5952:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5953:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
5954:Core/Src/bno055.c ****     {
5955:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
5956:Core/Src/bno055.c ****     }
5957:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5958:Core/Src/bno055.c ****     {
5959:Core/Src/bno055.c ****         /* Read Euler raw p data*/
5960:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_p(&reg_euler_p_s16);
5961:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5962:Core/Src/bno055.c ****         {
5963:Core/Src/bno055.c ****             /* Convert raw p to radians*/
5964:Core/Src/bno055.c ****             data_d = (double)(reg_euler_p_s16 / BNO055_EULER_DIV_RAD);
5965:Core/Src/bno055.c ****             *euler_p_d = data_d;
5966:Core/Src/bno055.c ****         }
5967:Core/Src/bno055.c ****         else
5968:Core/Src/bno055.c ****         {
5969:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5970:Core/Src/bno055.c ****         }
5971:Core/Src/bno055.c ****     }
5972:Core/Src/bno055.c ****     else
5973:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 222


5974:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5975:Core/Src/bno055.c ****     }
5976:Core/Src/bno055.c **** 
5977:Core/Src/bno055.c ****     return com_rslt;
5978:Core/Src/bno055.c **** }
5979:Core/Src/bno055.c **** 
5980:Core/Src/bno055.c **** /*!
5981:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler hpr raw data
5982:Core/Src/bno055.c ****  *  to degree output as double
5983:Core/Src/bno055.c ****  *
5984:Core/Src/bno055.c ****  *  @param euler_hpr : The degree data of Euler hpr
5985:Core/Src/bno055.c ****  *
5986:Core/Src/bno055.c ****  *  Parameter |    result
5987:Core/Src/bno055.c ****  *  --------- | -----------------
5988:Core/Src/bno055.c ****  *   h        | degree data of Euler
5989:Core/Src/bno055.c ****  *   r        | degree data of Euler
5990:Core/Src/bno055.c ****  *   p        | degree data of Euler
5991:Core/Src/bno055.c ****  *
5992:Core/Src/bno055.c ****  *
5993:Core/Src/bno055.c ****  *  @return results of bus communication function
5994:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5995:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5996:Core/Src/bno055.c ****  *
5997:Core/Src/bno055.c ****  */
5998:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_hpr_deg(struct bno055_euler_double_t *euler
5999:Core/Src/bno055.c **** {
6000:Core/Src/bno055.c ****     /* Variable used to return value of
6001:Core/Src/bno055.c ****      * communication routine*/
6002:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
6003:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
6004:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
6005:Core/Src/bno055.c **** 
6006:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
6007:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
6008:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
6009:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
6010:Core/Src/bno055.c ****     {
6011:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
6012:Core/Src/bno055.c ****     }
6013:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
6014:Core/Src/bno055.c ****     {
6015:Core/Src/bno055.c ****         /* Read Euler raw h data*/
6016:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_hrp(&reg_euler);
6017:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
6018:Core/Src/bno055.c ****         {
6019:Core/Src/bno055.c ****             /* Convert raw Euler hrp to degree*/
6020:Core/Src/bno055.c ****             euler_hpr->h = (double)(reg_euler.h / BNO055_EULER_DIV_DEG);
6021:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_DEG);
6022:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_DEG);
6023:Core/Src/bno055.c ****         }
6024:Core/Src/bno055.c ****         else
6025:Core/Src/bno055.c ****         {
6026:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6027:Core/Src/bno055.c ****         }
6028:Core/Src/bno055.c ****     }
6029:Core/Src/bno055.c ****     else
6030:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 223


6031:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6032:Core/Src/bno055.c ****     }
6033:Core/Src/bno055.c **** 
6034:Core/Src/bno055.c ****     return com_rslt;
6035:Core/Src/bno055.c **** }
6036:Core/Src/bno055.c **** 
6037:Core/Src/bno055.c **** /*!
6038:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler hpr raw data
6039:Core/Src/bno055.c ****  *  to radians output as double
6040:Core/Src/bno055.c ****  *
6041:Core/Src/bno055.c ****  *  @param euler_hpr : The radians data of Euler hpr
6042:Core/Src/bno055.c ****  *
6043:Core/Src/bno055.c ****  *  Parameter |    result
6044:Core/Src/bno055.c ****  *  --------- | -----------------
6045:Core/Src/bno055.c ****  *   h        | radians data of Euler
6046:Core/Src/bno055.c ****  *   r        | radians data of Euler
6047:Core/Src/bno055.c ****  *   p        | radians data of Euler
6048:Core/Src/bno055.c ****  *
6049:Core/Src/bno055.c ****  *
6050:Core/Src/bno055.c ****  *  @return results of bus communication function
6051:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6052:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6053:Core/Src/bno055.c ****  *
6054:Core/Src/bno055.c ****  */
6055:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_hpr_rad(struct bno055_euler_double_t *euler
6056:Core/Src/bno055.c **** {
6057:Core/Src/bno055.c ****     /* Variable used to return value of
6058:Core/Src/bno055.c ****      * communication routine*/
6059:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
6060:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
6061:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
6062:Core/Src/bno055.c **** 
6063:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
6064:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
6065:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
6066:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
6067:Core/Src/bno055.c ****     {
6068:Core/Src/bno055.c ****         com_rslt = bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
6069:Core/Src/bno055.c ****     }
6070:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
6071:Core/Src/bno055.c ****     {
6072:Core/Src/bno055.c ****         /* Read the raw hrp */
6073:Core/Src/bno055.c ****         com_rslt = bno055_read_euler_hrp(&reg_euler);
6074:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
6075:Core/Src/bno055.c ****         {
6076:Core/Src/bno055.c ****             /* Convert raw Euler hrp to radians*/
6077:Core/Src/bno055.c ****             euler_hpr->h = (double)(reg_euler.h / BNO055_EULER_DIV_RAD);
6078:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
6079:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_RAD);
6080:Core/Src/bno055.c ****         }
6081:Core/Src/bno055.c ****         else
6082:Core/Src/bno055.c ****         {
6083:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6084:Core/Src/bno055.c ****         }
6085:Core/Src/bno055.c ****     }
6086:Core/Src/bno055.c ****     else
6087:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 224


6088:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6089:Core/Src/bno055.c ****     }
6090:Core/Src/bno055.c **** 
6091:Core/Src/bno055.c ****     return com_rslt;
6092:Core/Src/bno055.c **** }
6093:Core/Src/bno055.c **** 
6094:Core/Src/bno055.c **** /*!
6095:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
6096:Core/Src/bno055.c ****  *  accel x raw data to meterpersecseq output as double
6097:Core/Src/bno055.c ****  *
6098:Core/Src/bno055.c ****  *  @param linear_accel_x_d : The double value of
6099:Core/Src/bno055.c ****  *  linear accel x meterpersecseq
6100:Core/Src/bno055.c ****  *
6101:Core/Src/bno055.c ****  *  @return results of bus communication function
6102:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6103:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6104:Core/Src/bno055.c ****  *
6105:Core/Src/bno055.c ****  *
6106:Core/Src/bno055.c ****  */
6107:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_linear_accel_x_msq(double *linear_accel_x_d)
6108:Core/Src/bno055.c **** {
 6305              		.loc 1 6108 1 is_stmt 1 view -0
 6306              		.cfi_startproc
 6307              		@ args = 0, pretend = 0, frame = 8
 6308              		@ frame_needed = 0, uses_anonymous_args = 0
 6309              		.loc 1 6108 1 is_stmt 0 view .LVU1761
 6310 0000 30B5     		push	{r4, r5, lr}
 6311              		.cfi_def_cfa_offset 12
 6312              		.cfi_offset 4, -12
 6313              		.cfi_offset 5, -8
 6314              		.cfi_offset 14, -4
 6315 0002 83B0     		sub	sp, sp, #12
 6316              		.cfi_def_cfa_offset 24
 6317 0004 0446     		mov	r4, r0
6109:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6318              		.loc 1 6109 5 is_stmt 1 view .LVU1762
 6319              	.LVL676:
6110:Core/Src/bno055.c ****     s16 reg_linear_accel_x_s16 = BNO055_INIT_VALUE;
 6320              		.loc 1 6110 5 view .LVU1763
 6321              		.loc 1 6110 9 is_stmt 0 view .LVU1764
 6322 0006 0023     		movs	r3, #0
 6323 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6111:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6324              		.loc 1 6111 5 is_stmt 1 view .LVU1765
 6325              	.LVL677:
6112:Core/Src/bno055.c **** 
6113:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
6114:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_x(&reg_linear_accel_x_s16);
 6326              		.loc 1 6114 5 view .LVU1766
 6327              		.loc 1 6114 16 is_stmt 0 view .LVU1767
 6328 000c 0DF10600 		add	r0, sp, #6
 6329              	.LVL678:
 6330              		.loc 1 6114 16 view .LVU1768
 6331 0010 FFF7FEFF 		bl	bno055_read_linear_accel_x
 6332              	.LVL679:
6115:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6333              		.loc 1 6115 5 is_stmt 1 view .LVU1769
ARM GAS  /tmp/ccOloYeZ.s 			page 225


 6334              		.loc 1 6115 8 is_stmt 0 view .LVU1770
 6335 0014 68B9     		cbnz	r0, .L489
 6336 0016 0546     		mov	r5, r0
6116:Core/Src/bno055.c ****     {
6117:Core/Src/bno055.c ****         /* Convert the raw x to m/s2 */
6118:Core/Src/bno055.c ****         data_d = (double)(reg_linear_accel_x_s16 / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6337              		.loc 1 6118 9 is_stmt 1 view .LVU1771
 6338              		.loc 1 6118 18 is_stmt 0 view .LVU1772
 6339 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6340              	.LVL680:
 6341              		.loc 1 6118 18 view .LVU1773
 6342 001c FFF7FEFF 		bl	__aeabi_i2d
 6343              	.LVL681:
 6344              		.loc 1 6118 16 view .LVU1774
 6345 0020 0022     		movs	r2, #0
 6346 0022 054B     		ldr	r3, .L491
 6347 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6348              	.LVL682:
6119:Core/Src/bno055.c ****         *linear_accel_x_d = data_d;
 6349              		.loc 1 6119 9 is_stmt 1 view .LVU1775
 6350              		.loc 1 6119 27 is_stmt 0 view .LVU1776
 6351 0028 C4E90001 		strd	r0, [r4]
 6352              	.LVL683:
 6353              	.L488:
6120:Core/Src/bno055.c ****     }
6121:Core/Src/bno055.c ****     else
6122:Core/Src/bno055.c ****     {
6123:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6124:Core/Src/bno055.c ****     }
6125:Core/Src/bno055.c **** 
6126:Core/Src/bno055.c ****     return com_rslt;
 6354              		.loc 1 6126 5 is_stmt 1 view .LVU1777
6127:Core/Src/bno055.c **** }
 6355              		.loc 1 6127 1 is_stmt 0 view .LVU1778
 6356 002c 2846     		mov	r0, r5
 6357 002e 03B0     		add	sp, sp, #12
 6358              		.cfi_remember_state
 6359              		.cfi_def_cfa_offset 12
 6360              		@ sp needed
 6361 0030 30BD     		pop	{r4, r5, pc}
 6362              	.LVL684:
 6363              	.L489:
 6364              		.cfi_restore_state
6123:Core/Src/bno055.c ****     }
 6365              		.loc 1 6123 18 view .LVU1779
 6366 0032 4FF0FF35 		mov	r5, #-1
 6367 0036 F9E7     		b	.L488
 6368              	.L492:
 6369              		.align	2
 6370              	.L491:
 6371 0038 00005940 		.word	1079574528
 6372              		.cfi_endproc
 6373              	.LFE107:
 6375              		.section	.text.bno055_convert_double_linear_accel_y_msq,"ax",%progbits
 6376              		.align	1
 6377              		.global	bno055_convert_double_linear_accel_y_msq
 6378              		.syntax unified
ARM GAS  /tmp/ccOloYeZ.s 			page 226


 6379              		.thumb
 6380              		.thumb_func
 6382              	bno055_convert_double_linear_accel_y_msq:
 6383              	.LVL685:
 6384              	.LFB108:
6128:Core/Src/bno055.c **** 
6129:Core/Src/bno055.c **** /*!
6130:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
6131:Core/Src/bno055.c ****  *  accel y raw data to meterpersecseq output as double
6132:Core/Src/bno055.c ****  *
6133:Core/Src/bno055.c ****  *  @param linear_accel_y_d : The double value of
6134:Core/Src/bno055.c ****  *  linear accel y meterpersecseq
6135:Core/Src/bno055.c ****  *
6136:Core/Src/bno055.c ****  *  @return results of bus communication function
6137:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6138:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6139:Core/Src/bno055.c ****  *
6140:Core/Src/bno055.c ****  *
6141:Core/Src/bno055.c ****  */
6142:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_linear_accel_y_msq(double *linear_accel_y_d)
6143:Core/Src/bno055.c **** {
 6385              		.loc 1 6143 1 is_stmt 1 view -0
 6386              		.cfi_startproc
 6387              		@ args = 0, pretend = 0, frame = 8
 6388              		@ frame_needed = 0, uses_anonymous_args = 0
 6389              		.loc 1 6143 1 is_stmt 0 view .LVU1781
 6390 0000 30B5     		push	{r4, r5, lr}
 6391              		.cfi_def_cfa_offset 12
 6392              		.cfi_offset 4, -12
 6393              		.cfi_offset 5, -8
 6394              		.cfi_offset 14, -4
 6395 0002 83B0     		sub	sp, sp, #12
 6396              		.cfi_def_cfa_offset 24
 6397 0004 0446     		mov	r4, r0
6144:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6398              		.loc 1 6144 5 is_stmt 1 view .LVU1782
 6399              	.LVL686:
6145:Core/Src/bno055.c ****     s16 reg_linear_accel_y_s16 = BNO055_INIT_VALUE;
 6400              		.loc 1 6145 5 view .LVU1783
 6401              		.loc 1 6145 9 is_stmt 0 view .LVU1784
 6402 0006 0023     		movs	r3, #0
 6403 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6146:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6404              		.loc 1 6146 5 is_stmt 1 view .LVU1785
 6405              	.LVL687:
6147:Core/Src/bno055.c **** 
6148:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
6149:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_y(&reg_linear_accel_y_s16);
 6406              		.loc 1 6149 5 view .LVU1786
 6407              		.loc 1 6149 16 is_stmt 0 view .LVU1787
 6408 000c 0DF10600 		add	r0, sp, #6
 6409              	.LVL688:
 6410              		.loc 1 6149 16 view .LVU1788
 6411 0010 FFF7FEFF 		bl	bno055_read_linear_accel_y
 6412              	.LVL689:
6150:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6413              		.loc 1 6150 5 is_stmt 1 view .LVU1789
ARM GAS  /tmp/ccOloYeZ.s 			page 227


 6414              		.loc 1 6150 8 is_stmt 0 view .LVU1790
 6415 0014 68B9     		cbnz	r0, .L495
 6416 0016 0546     		mov	r5, r0
6151:Core/Src/bno055.c ****     {
6152:Core/Src/bno055.c ****         /* Convert the raw y to m/s2 */
6153:Core/Src/bno055.c ****         data_d = (double)(reg_linear_accel_y_s16 / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6417              		.loc 1 6153 9 is_stmt 1 view .LVU1791
 6418              		.loc 1 6153 18 is_stmt 0 view .LVU1792
 6419 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6420              	.LVL690:
 6421              		.loc 1 6153 18 view .LVU1793
 6422 001c FFF7FEFF 		bl	__aeabi_i2d
 6423              	.LVL691:
 6424              		.loc 1 6153 16 view .LVU1794
 6425 0020 0022     		movs	r2, #0
 6426 0022 054B     		ldr	r3, .L497
 6427 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6428              	.LVL692:
6154:Core/Src/bno055.c ****         *linear_accel_y_d = data_d;
 6429              		.loc 1 6154 9 is_stmt 1 view .LVU1795
 6430              		.loc 1 6154 27 is_stmt 0 view .LVU1796
 6431 0028 C4E90001 		strd	r0, [r4]
 6432              	.LVL693:
 6433              	.L494:
6155:Core/Src/bno055.c ****     }
6156:Core/Src/bno055.c ****     else
6157:Core/Src/bno055.c ****     {
6158:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6159:Core/Src/bno055.c ****     }
6160:Core/Src/bno055.c **** 
6161:Core/Src/bno055.c ****     return com_rslt;
 6434              		.loc 1 6161 5 is_stmt 1 view .LVU1797
6162:Core/Src/bno055.c **** }
 6435              		.loc 1 6162 1 is_stmt 0 view .LVU1798
 6436 002c 2846     		mov	r0, r5
 6437 002e 03B0     		add	sp, sp, #12
 6438              		.cfi_remember_state
 6439              		.cfi_def_cfa_offset 12
 6440              		@ sp needed
 6441 0030 30BD     		pop	{r4, r5, pc}
 6442              	.LVL694:
 6443              	.L495:
 6444              		.cfi_restore_state
6158:Core/Src/bno055.c ****     }
 6445              		.loc 1 6158 18 view .LVU1799
 6446 0032 4FF0FF35 		mov	r5, #-1
 6447 0036 F9E7     		b	.L494
 6448              	.L498:
 6449              		.align	2
 6450              	.L497:
 6451 0038 00005940 		.word	1079574528
 6452              		.cfi_endproc
 6453              	.LFE108:
 6455              		.section	.text.bno055_convert_double_linear_accel_z_msq,"ax",%progbits
 6456              		.align	1
 6457              		.global	bno055_convert_double_linear_accel_z_msq
 6458              		.syntax unified
ARM GAS  /tmp/ccOloYeZ.s 			page 228


 6459              		.thumb
 6460              		.thumb_func
 6462              	bno055_convert_double_linear_accel_z_msq:
 6463              	.LVL695:
 6464              	.LFB109:
6163:Core/Src/bno055.c **** 
6164:Core/Src/bno055.c **** /*!
6165:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
6166:Core/Src/bno055.c ****  *  accel z raw data to meterpersecseq output as double
6167:Core/Src/bno055.c ****  *
6168:Core/Src/bno055.c ****  *  @param linear_accel_z_d : The double value of
6169:Core/Src/bno055.c ****  *  linear accel z meterpersecseq
6170:Core/Src/bno055.c ****  *
6171:Core/Src/bno055.c ****  *  @return results of bus communication function
6172:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6173:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6174:Core/Src/bno055.c ****  *
6175:Core/Src/bno055.c ****  *
6176:Core/Src/bno055.c ****  */
6177:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_linear_accel_z_msq(double *linear_accel_z_d)
6178:Core/Src/bno055.c **** {
 6465              		.loc 1 6178 1 is_stmt 1 view -0
 6466              		.cfi_startproc
 6467              		@ args = 0, pretend = 0, frame = 8
 6468              		@ frame_needed = 0, uses_anonymous_args = 0
 6469              		.loc 1 6178 1 is_stmt 0 view .LVU1801
 6470 0000 30B5     		push	{r4, r5, lr}
 6471              		.cfi_def_cfa_offset 12
 6472              		.cfi_offset 4, -12
 6473              		.cfi_offset 5, -8
 6474              		.cfi_offset 14, -4
 6475 0002 83B0     		sub	sp, sp, #12
 6476              		.cfi_def_cfa_offset 24
 6477 0004 0446     		mov	r4, r0
6179:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6478              		.loc 1 6179 5 is_stmt 1 view .LVU1802
 6479              	.LVL696:
6180:Core/Src/bno055.c ****     s16 reg_linear_accel_z_s16 = BNO055_INIT_VALUE;
 6480              		.loc 1 6180 5 view .LVU1803
 6481              		.loc 1 6180 9 is_stmt 0 view .LVU1804
 6482 0006 0023     		movs	r3, #0
 6483 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6181:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6484              		.loc 1 6181 5 is_stmt 1 view .LVU1805
 6485              	.LVL697:
6182:Core/Src/bno055.c **** 
6183:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
6184:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_z(&reg_linear_accel_z_s16);
 6486              		.loc 1 6184 5 view .LVU1806
 6487              		.loc 1 6184 16 is_stmt 0 view .LVU1807
 6488 000c 0DF10600 		add	r0, sp, #6
 6489              	.LVL698:
 6490              		.loc 1 6184 16 view .LVU1808
 6491 0010 FFF7FEFF 		bl	bno055_read_linear_accel_z
 6492              	.LVL699:
6185:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6493              		.loc 1 6185 5 is_stmt 1 view .LVU1809
ARM GAS  /tmp/ccOloYeZ.s 			page 229


 6494              		.loc 1 6185 8 is_stmt 0 view .LVU1810
 6495 0014 68B9     		cbnz	r0, .L501
 6496 0016 0546     		mov	r5, r0
6186:Core/Src/bno055.c ****     {
6187:Core/Src/bno055.c ****         /* Convert the raw z to m/s2 */
6188:Core/Src/bno055.c ****         data_d = (double)(reg_linear_accel_z_s16 / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6497              		.loc 1 6188 9 is_stmt 1 view .LVU1811
 6498              		.loc 1 6188 18 is_stmt 0 view .LVU1812
 6499 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6500              	.LVL700:
 6501              		.loc 1 6188 18 view .LVU1813
 6502 001c FFF7FEFF 		bl	__aeabi_i2d
 6503              	.LVL701:
 6504              		.loc 1 6188 16 view .LVU1814
 6505 0020 0022     		movs	r2, #0
 6506 0022 054B     		ldr	r3, .L503
 6507 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6508              	.LVL702:
6189:Core/Src/bno055.c ****         *linear_accel_z_d = data_d;
 6509              		.loc 1 6189 9 is_stmt 1 view .LVU1815
 6510              		.loc 1 6189 27 is_stmt 0 view .LVU1816
 6511 0028 C4E90001 		strd	r0, [r4]
 6512              	.LVL703:
 6513              	.L500:
6190:Core/Src/bno055.c ****     }
6191:Core/Src/bno055.c ****     else
6192:Core/Src/bno055.c ****     {
6193:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6194:Core/Src/bno055.c ****     }
6195:Core/Src/bno055.c **** 
6196:Core/Src/bno055.c ****     return com_rslt;
 6514              		.loc 1 6196 5 is_stmt 1 view .LVU1817
6197:Core/Src/bno055.c **** }
 6515              		.loc 1 6197 1 is_stmt 0 view .LVU1818
 6516 002c 2846     		mov	r0, r5
 6517 002e 03B0     		add	sp, sp, #12
 6518              		.cfi_remember_state
 6519              		.cfi_def_cfa_offset 12
 6520              		@ sp needed
 6521 0030 30BD     		pop	{r4, r5, pc}
 6522              	.LVL704:
 6523              	.L501:
 6524              		.cfi_restore_state
6193:Core/Src/bno055.c ****     }
 6525              		.loc 1 6193 18 view .LVU1819
 6526 0032 4FF0FF35 		mov	r5, #-1
 6527 0036 F9E7     		b	.L500
 6528              	.L504:
 6529              		.align	2
 6530              	.L503:
 6531 0038 00005940 		.word	1079574528
 6532              		.cfi_endproc
 6533              	.LFE109:
 6535              		.section	.text.bno055_convert_double_linear_accel_xyz_msq,"ax",%progbits
 6536              		.align	1
 6537              		.global	bno055_convert_double_linear_accel_xyz_msq
 6538              		.syntax unified
ARM GAS  /tmp/ccOloYeZ.s 			page 230


 6539              		.thumb
 6540              		.thumb_func
 6542              	bno055_convert_double_linear_accel_xyz_msq:
 6543              	.LVL705:
 6544              	.LFB110:
6198:Core/Src/bno055.c **** 
6199:Core/Src/bno055.c **** /*!
6200:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear accel xyz raw data
6201:Core/Src/bno055.c ****  *  to meterpersecseq output as double
6202:Core/Src/bno055.c ****  *
6203:Core/Src/bno055.c ****  *  @param linear_accel_xyz : The meterpersecseq data of linear accel xyz
6204:Core/Src/bno055.c ****  *
6205:Core/Src/bno055.c ****  *  Parameter |    result
6206:Core/Src/bno055.c ****  *  --------- | -----------------
6207:Core/Src/bno055.c ****  *   x        | meterpersecseq data of linear accel
6208:Core/Src/bno055.c ****  *   y        | meterpersecseq data of linear accel
6209:Core/Src/bno055.c ****  *   z        | meterpersecseq data of linear accel
6210:Core/Src/bno055.c ****  *
6211:Core/Src/bno055.c ****  *
6212:Core/Src/bno055.c ****  *  @return results of bus communication function
6213:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6214:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6215:Core/Src/bno055.c ****  *
6216:Core/Src/bno055.c ****  */
6217:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_linear_accel_xyz_msq(
6218:Core/Src/bno055.c ****     struct bno055_linear_accel_double_t *linear_accel_xyz)
6219:Core/Src/bno055.c **** {
 6545              		.loc 1 6219 1 is_stmt 1 view -0
 6546              		.cfi_startproc
 6547              		@ args = 0, pretend = 0, frame = 8
 6548              		@ frame_needed = 0, uses_anonymous_args = 0
 6549              		.loc 1 6219 1 is_stmt 0 view .LVU1821
 6550 0000 30B5     		push	{r4, r5, lr}
 6551              		.cfi_def_cfa_offset 12
 6552              		.cfi_offset 4, -12
 6553              		.cfi_offset 5, -8
 6554              		.cfi_offset 14, -4
 6555 0002 83B0     		sub	sp, sp, #12
 6556              		.cfi_def_cfa_offset 24
 6557 0004 0446     		mov	r4, r0
6220:Core/Src/bno055.c ****     /* Variable used to return value of
6221:Core/Src/bno055.c ****      * communication routine*/
6222:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6558              		.loc 1 6222 5 is_stmt 1 view .LVU1822
 6559              	.LVL706:
6223:Core/Src/bno055.c ****     struct bno055_linear_accel_t reg_linear_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO
 6560              		.loc 1 6223 5 view .LVU1823
 6561              		.loc 1 6223 34 is_stmt 0 view .LVU1824
 6562 0006 0023     		movs	r3, #0
 6563 0008 ADF80030 		strh	r3, [sp]	@ movhi
 6564 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 6565 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
6224:Core/Src/bno055.c **** 
6225:Core/Src/bno055.c ****     /* Read the raw xyz of linear accel */
6226:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_xyz(&reg_linear_accel_xyz);
 6566              		.loc 1 6226 5 is_stmt 1 view .LVU1825
 6567              		.loc 1 6226 16 is_stmt 0 view .LVU1826
ARM GAS  /tmp/ccOloYeZ.s 			page 231


 6568 0014 6846     		mov	r0, sp
 6569              	.LVL707:
 6570              		.loc 1 6226 16 view .LVU1827
 6571 0016 FFF7FEFF 		bl	bno055_read_linear_accel_xyz
 6572              	.LVL708:
6227:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6573              		.loc 1 6227 5 is_stmt 1 view .LVU1828
 6574              		.loc 1 6227 8 is_stmt 0 view .LVU1829
 6575 001a 08BB     		cbnz	r0, .L507
 6576 001c 0546     		mov	r5, r0
6228:Core/Src/bno055.c ****     {
6229:Core/Src/bno055.c ****         /* Convert the raw xyz of linear accel to m/s2 */
6230:Core/Src/bno055.c ****         linear_accel_xyz->x = (double)(reg_linear_accel_xyz.x / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6577              		.loc 1 6230 9 is_stmt 1 view .LVU1830
 6578              		.loc 1 6230 31 is_stmt 0 view .LVU1831
 6579 001e BDF90000 		ldrsh	r0, [sp]
 6580              	.LVL709:
 6581              		.loc 1 6230 31 view .LVU1832
 6582 0022 FFF7FEFF 		bl	__aeabi_i2d
 6583              	.LVL710:
 6584 0026 0022     		movs	r2, #0
 6585 0028 0F4B     		ldr	r3, .L509
 6586 002a FFF7FEFF 		bl	__aeabi_ddiv
 6587              	.LVL711:
 6588              		.loc 1 6230 29 view .LVU1833
 6589 002e C4E90001 		strd	r0, [r4]
6231:Core/Src/bno055.c ****         linear_accel_xyz->y = (double)(reg_linear_accel_xyz.y / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6590              		.loc 1 6231 9 is_stmt 1 view .LVU1834
 6591              		.loc 1 6231 31 is_stmt 0 view .LVU1835
 6592 0032 BDF90200 		ldrsh	r0, [sp, #2]
 6593 0036 FFF7FEFF 		bl	__aeabi_i2d
 6594              	.LVL712:
 6595 003a 0022     		movs	r2, #0
 6596 003c 0A4B     		ldr	r3, .L509
 6597 003e FFF7FEFF 		bl	__aeabi_ddiv
 6598              	.LVL713:
 6599              		.loc 1 6231 29 view .LVU1836
 6600 0042 C4E90201 		strd	r0, [r4, #8]
6232:Core/Src/bno055.c ****         linear_accel_xyz->z = (double)(reg_linear_accel_xyz.z / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6601              		.loc 1 6232 9 is_stmt 1 view .LVU1837
 6602              		.loc 1 6232 31 is_stmt 0 view .LVU1838
 6603 0046 BDF90400 		ldrsh	r0, [sp, #4]
 6604 004a FFF7FEFF 		bl	__aeabi_i2d
 6605              	.LVL714:
 6606 004e 0022     		movs	r2, #0
 6607 0050 054B     		ldr	r3, .L509
 6608 0052 FFF7FEFF 		bl	__aeabi_ddiv
 6609              	.LVL715:
 6610              		.loc 1 6232 29 view .LVU1839
 6611 0056 C4E90401 		strd	r0, [r4, #16]
 6612              	.L506:
 6613              	.LVL716:
6233:Core/Src/bno055.c ****     }
6234:Core/Src/bno055.c ****     else
6235:Core/Src/bno055.c ****     {
6236:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6237:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccOloYeZ.s 			page 232


6238:Core/Src/bno055.c **** 
6239:Core/Src/bno055.c ****     return com_rslt;
 6614              		.loc 1 6239 5 is_stmt 1 view .LVU1840
6240:Core/Src/bno055.c **** }
 6615              		.loc 1 6240 1 is_stmt 0 view .LVU1841
 6616 005a 2846     		mov	r0, r5
 6617 005c 03B0     		add	sp, sp, #12
 6618              		.cfi_remember_state
 6619              		.cfi_def_cfa_offset 12
 6620              		@ sp needed
 6621 005e 30BD     		pop	{r4, r5, pc}
 6622              	.LVL717:
 6623              	.L507:
 6624              		.cfi_restore_state
6236:Core/Src/bno055.c ****     }
 6625              		.loc 1 6236 18 view .LVU1842
 6626 0060 4FF0FF35 		mov	r5, #-1
 6627 0064 F9E7     		b	.L506
 6628              	.L510:
 6629 0066 00BF     		.align	2
 6630              	.L509:
 6631 0068 00005940 		.word	1079574528
 6632              		.cfi_endproc
 6633              	.LFE110:
 6635              		.section	.text.bno055_convert_gravity_double_x_msq,"ax",%progbits
 6636              		.align	1
 6637              		.global	bno055_convert_gravity_double_x_msq
 6638              		.syntax unified
 6639              		.thumb
 6640              		.thumb_func
 6642              	bno055_convert_gravity_double_x_msq:
 6643              	.LVL718:
 6644              	.LFB111:
6241:Core/Src/bno055.c **** 
6242:Core/Src/bno055.c **** /*!
6243:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
6244:Core/Src/bno055.c ****  *  x raw data to meterpersecseq output as double
6245:Core/Src/bno055.c ****  *
6246:Core/Src/bno055.c ****  *  @param gravity_x_d : The double value of gravity x meterpersecseq
6247:Core/Src/bno055.c ****  *
6248:Core/Src/bno055.c ****  *  @return results of bus communication function
6249:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6250:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6251:Core/Src/bno055.c ****  *
6252:Core/Src/bno055.c ****  *
6253:Core/Src/bno055.c ****  */
6254:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_double_x_msq(double *gravity_x_d)
6255:Core/Src/bno055.c **** {
 6645              		.loc 1 6255 1 is_stmt 1 view -0
 6646              		.cfi_startproc
 6647              		@ args = 0, pretend = 0, frame = 8
 6648              		@ frame_needed = 0, uses_anonymous_args = 0
 6649              		.loc 1 6255 1 is_stmt 0 view .LVU1844
 6650 0000 30B5     		push	{r4, r5, lr}
 6651              		.cfi_def_cfa_offset 12
 6652              		.cfi_offset 4, -12
 6653              		.cfi_offset 5, -8
ARM GAS  /tmp/ccOloYeZ.s 			page 233


 6654              		.cfi_offset 14, -4
 6655 0002 83B0     		sub	sp, sp, #12
 6656              		.cfi_def_cfa_offset 24
 6657 0004 0446     		mov	r4, r0
6256:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6658              		.loc 1 6256 5 is_stmt 1 view .LVU1845
 6659              	.LVL719:
6257:Core/Src/bno055.c ****     s16 reg_gravity_x_s16 = BNO055_INIT_VALUE;
 6660              		.loc 1 6257 5 view .LVU1846
 6661              		.loc 1 6257 9 is_stmt 0 view .LVU1847
 6662 0006 0023     		movs	r3, #0
 6663 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6258:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6664              		.loc 1 6258 5 is_stmt 1 view .LVU1848
 6665              	.LVL720:
6259:Core/Src/bno055.c **** 
6260:Core/Src/bno055.c ****     /* Read raw gravity of x*/
6261:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_x(&reg_gravity_x_s16);
 6666              		.loc 1 6261 5 view .LVU1849
 6667              		.loc 1 6261 16 is_stmt 0 view .LVU1850
 6668 000c 0DF10600 		add	r0, sp, #6
 6669              	.LVL721:
 6670              		.loc 1 6261 16 view .LVU1851
 6671 0010 FFF7FEFF 		bl	bno055_read_gravity_x
 6672              	.LVL722:
6262:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6673              		.loc 1 6262 5 is_stmt 1 view .LVU1852
 6674              		.loc 1 6262 8 is_stmt 0 view .LVU1853
 6675 0014 68B9     		cbnz	r0, .L513
 6676 0016 0546     		mov	r5, r0
6263:Core/Src/bno055.c ****     {
6264:Core/Src/bno055.c ****         /* Convert raw gravity of x to m/s2 */
6265:Core/Src/bno055.c ****         data_d = (double)(reg_gravity_x_s16 / BNO055_GRAVITY_DIV_MSQ);
 6677              		.loc 1 6265 9 is_stmt 1 view .LVU1854
 6678              		.loc 1 6265 18 is_stmt 0 view .LVU1855
 6679 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6680              	.LVL723:
 6681              		.loc 1 6265 18 view .LVU1856
 6682 001c FFF7FEFF 		bl	__aeabi_i2d
 6683              	.LVL724:
 6684              		.loc 1 6265 16 view .LVU1857
 6685 0020 0022     		movs	r2, #0
 6686 0022 054B     		ldr	r3, .L515
 6687 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6688              	.LVL725:
6266:Core/Src/bno055.c ****         *gravity_x_d = data_d;
 6689              		.loc 1 6266 9 is_stmt 1 view .LVU1858
 6690              		.loc 1 6266 22 is_stmt 0 view .LVU1859
 6691 0028 C4E90001 		strd	r0, [r4]
 6692              	.LVL726:
 6693              	.L512:
6267:Core/Src/bno055.c ****     }
6268:Core/Src/bno055.c ****     else
6269:Core/Src/bno055.c ****     {
6270:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6271:Core/Src/bno055.c ****     }
6272:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 234


6273:Core/Src/bno055.c ****     return com_rslt;
 6694              		.loc 1 6273 5 is_stmt 1 view .LVU1860
6274:Core/Src/bno055.c **** }
 6695              		.loc 1 6274 1 is_stmt 0 view .LVU1861
 6696 002c 2846     		mov	r0, r5
 6697 002e 03B0     		add	sp, sp, #12
 6698              		.cfi_remember_state
 6699              		.cfi_def_cfa_offset 12
 6700              		@ sp needed
 6701 0030 30BD     		pop	{r4, r5, pc}
 6702              	.LVL727:
 6703              	.L513:
 6704              		.cfi_restore_state
6270:Core/Src/bno055.c ****     }
 6705              		.loc 1 6270 18 view .LVU1862
 6706 0032 4FF0FF35 		mov	r5, #-1
 6707 0036 F9E7     		b	.L512
 6708              	.L516:
 6709              		.align	2
 6710              	.L515:
 6711 0038 00005940 		.word	1079574528
 6712              		.cfi_endproc
 6713              	.LFE111:
 6715              		.section	.text.bno055_convert_gravity_double_y_msq,"ax",%progbits
 6716              		.align	1
 6717              		.global	bno055_convert_gravity_double_y_msq
 6718              		.syntax unified
 6719              		.thumb
 6720              		.thumb_func
 6722              	bno055_convert_gravity_double_y_msq:
 6723              	.LVL728:
 6724              	.LFB112:
6275:Core/Src/bno055.c **** 
6276:Core/Src/bno055.c **** /*!
6277:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
6278:Core/Src/bno055.c ****  *  y raw data to meterpersecseq output as double
6279:Core/Src/bno055.c ****  *
6280:Core/Src/bno055.c ****  *  @param gravity_y_d : The double value of gravity y meterpersecseq
6281:Core/Src/bno055.c ****  *
6282:Core/Src/bno055.c ****  *  @return results of bus communication function
6283:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6284:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6285:Core/Src/bno055.c ****  *
6286:Core/Src/bno055.c ****  *
6287:Core/Src/bno055.c ****  */
6288:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_double_y_msq(double *gravity_y_d)
6289:Core/Src/bno055.c **** {
 6725              		.loc 1 6289 1 is_stmt 1 view -0
 6726              		.cfi_startproc
 6727              		@ args = 0, pretend = 0, frame = 8
 6728              		@ frame_needed = 0, uses_anonymous_args = 0
 6729              		.loc 1 6289 1 is_stmt 0 view .LVU1864
 6730 0000 30B5     		push	{r4, r5, lr}
 6731              		.cfi_def_cfa_offset 12
 6732              		.cfi_offset 4, -12
 6733              		.cfi_offset 5, -8
 6734              		.cfi_offset 14, -4
ARM GAS  /tmp/ccOloYeZ.s 			page 235


 6735 0002 83B0     		sub	sp, sp, #12
 6736              		.cfi_def_cfa_offset 24
 6737 0004 0546     		mov	r5, r0
6290:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6738              		.loc 1 6290 5 is_stmt 1 view .LVU1865
 6739              	.LVL729:
6291:Core/Src/bno055.c ****     s16 reg_gravity_y_s16 = BNO055_INIT_VALUE;
 6740              		.loc 1 6291 5 view .LVU1866
 6741              		.loc 1 6291 9 is_stmt 0 view .LVU1867
 6742 0006 0023     		movs	r3, #0
 6743 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6292:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6744              		.loc 1 6292 5 is_stmt 1 view .LVU1868
 6745              	.LVL730:
6293:Core/Src/bno055.c **** 
6294:Core/Src/bno055.c ****     /* Read raw gravity of y */
6295:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_y(&reg_gravity_y_s16);
 6746              		.loc 1 6295 5 view .LVU1869
 6747              		.loc 1 6295 16 is_stmt 0 view .LVU1870
 6748 000c 0DF10600 		add	r0, sp, #6
 6749              	.LVL731:
 6750              		.loc 1 6295 16 view .LVU1871
 6751 0010 FFF7FEFF 		bl	bno055_read_gravity_y
 6752              	.LVL732:
6296:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6753              		.loc 1 6296 5 is_stmt 1 view .LVU1872
 6754              		.loc 1 6296 8 is_stmt 0 view .LVU1873
 6755 0014 0446     		mov	r4, r0
 6756 0016 60B9     		cbnz	r0, .L518
6297:Core/Src/bno055.c ****     {
6298:Core/Src/bno055.c ****         /* convert raw gravity of y to m/s2 */
6299:Core/Src/bno055.c ****         data_d = (double)(reg_gravity_y_s16 / BNO055_GRAVITY_DIV_MSQ);
 6757              		.loc 1 6299 9 is_stmt 1 view .LVU1874
 6758              		.loc 1 6299 18 is_stmt 0 view .LVU1875
 6759 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6760              	.LVL733:
 6761              		.loc 1 6299 18 view .LVU1876
 6762 001c FFF7FEFF 		bl	__aeabi_i2d
 6763              	.LVL734:
 6764              		.loc 1 6299 16 view .LVU1877
 6765 0020 0022     		movs	r2, #0
 6766 0022 054B     		ldr	r3, .L521
 6767 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6768              	.LVL735:
6300:Core/Src/bno055.c ****         *gravity_y_d = data_d;
 6769              		.loc 1 6300 9 is_stmt 1 view .LVU1878
 6770              		.loc 1 6300 22 is_stmt 0 view .LVU1879
 6771 0028 C5E90001 		strd	r0, [r5]
 6772              	.LVL736:
 6773              	.L519:
6301:Core/Src/bno055.c ****     }
6302:Core/Src/bno055.c ****     else
6303:Core/Src/bno055.c ****     {
6304:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6305:Core/Src/bno055.c ****     }
6306:Core/Src/bno055.c **** 
6307:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/ccOloYeZ.s 			page 236


 6774              		.loc 1 6307 5 is_stmt 1 view .LVU1880
6308:Core/Src/bno055.c **** }
 6775              		.loc 1 6308 1 is_stmt 0 view .LVU1881
 6776 002c 2046     		mov	r0, r4
 6777 002e 03B0     		add	sp, sp, #12
 6778              		.cfi_remember_state
 6779              		.cfi_def_cfa_offset 12
 6780              		@ sp needed
 6781 0030 30BD     		pop	{r4, r5, pc}
 6782              	.LVL737:
 6783              	.L518:
 6784              		.cfi_restore_state
6304:Core/Src/bno055.c ****     }
 6785              		.loc 1 6304 9 is_stmt 1 view .LVU1882
6304:Core/Src/bno055.c ****     }
 6786              		.loc 1 6304 18 is_stmt 0 view .LVU1883
 6787 0032 441E     		subs	r4, r0, #1
 6788 0034 64B2     		sxtb	r4, r4
 6789              	.LVL738:
6304:Core/Src/bno055.c ****     }
 6790              		.loc 1 6304 18 view .LVU1884
 6791 0036 F9E7     		b	.L519
 6792              	.L522:
 6793              		.align	2
 6794              	.L521:
 6795 0038 00005940 		.word	1079574528
 6796              		.cfi_endproc
 6797              	.LFE112:
 6799              		.section	.text.bno055_convert_gravity_double_z_msq,"ax",%progbits
 6800              		.align	1
 6801              		.global	bno055_convert_gravity_double_z_msq
 6802              		.syntax unified
 6803              		.thumb
 6804              		.thumb_func
 6806              	bno055_convert_gravity_double_z_msq:
 6807              	.LVL739:
 6808              	.LFB113:
6309:Core/Src/bno055.c **** 
6310:Core/Src/bno055.c **** /*!
6311:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
6312:Core/Src/bno055.c ****  *  z raw data to meterpersecseq output as double
6313:Core/Src/bno055.c ****  *
6314:Core/Src/bno055.c ****  *  @param gravity_z_d : The double value of gravity z meterpersecseq
6315:Core/Src/bno055.c ****  *
6316:Core/Src/bno055.c ****  *  @return results of bus communication function
6317:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6318:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6319:Core/Src/bno055.c ****  *
6320:Core/Src/bno055.c ****  *
6321:Core/Src/bno055.c ****  */
6322:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_double_z_msq(double *gravity_z_d)
6323:Core/Src/bno055.c **** {
 6809              		.loc 1 6323 1 is_stmt 1 view -0
 6810              		.cfi_startproc
 6811              		@ args = 0, pretend = 0, frame = 8
 6812              		@ frame_needed = 0, uses_anonymous_args = 0
 6813              		.loc 1 6323 1 is_stmt 0 view .LVU1886
ARM GAS  /tmp/ccOloYeZ.s 			page 237


 6814 0000 30B5     		push	{r4, r5, lr}
 6815              		.cfi_def_cfa_offset 12
 6816              		.cfi_offset 4, -12
 6817              		.cfi_offset 5, -8
 6818              		.cfi_offset 14, -4
 6819 0002 83B0     		sub	sp, sp, #12
 6820              		.cfi_def_cfa_offset 24
 6821 0004 0546     		mov	r5, r0
6324:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6822              		.loc 1 6324 5 is_stmt 1 view .LVU1887
 6823              	.LVL740:
6325:Core/Src/bno055.c ****     s16 reg_gravity_z_s16 = BNO055_INIT_VALUE;
 6824              		.loc 1 6325 5 view .LVU1888
 6825              		.loc 1 6325 9 is_stmt 0 view .LVU1889
 6826 0006 0023     		movs	r3, #0
 6827 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6326:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6828              		.loc 1 6326 5 is_stmt 1 view .LVU1890
 6829              	.LVL741:
6327:Core/Src/bno055.c **** 
6328:Core/Src/bno055.c ****     /* Read raw gravity of z */
6329:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_z(&reg_gravity_z_s16);
 6830              		.loc 1 6329 5 view .LVU1891
 6831              		.loc 1 6329 16 is_stmt 0 view .LVU1892
 6832 000c 0DF10600 		add	r0, sp, #6
 6833              	.LVL742:
 6834              		.loc 1 6329 16 view .LVU1893
 6835 0010 FFF7FEFF 		bl	bno055_read_gravity_z
 6836              	.LVL743:
6330:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6837              		.loc 1 6330 5 is_stmt 1 view .LVU1894
 6838              		.loc 1 6330 8 is_stmt 0 view .LVU1895
 6839 0014 0446     		mov	r4, r0
 6840 0016 60B9     		cbnz	r0, .L524
6331:Core/Src/bno055.c ****     {
6332:Core/Src/bno055.c ****         /* Convert raw gravity of z to m/s2 */
6333:Core/Src/bno055.c ****         data_d = (double)(reg_gravity_z_s16 / BNO055_GRAVITY_DIV_MSQ);
 6841              		.loc 1 6333 9 is_stmt 1 view .LVU1896
 6842              		.loc 1 6333 18 is_stmt 0 view .LVU1897
 6843 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6844              	.LVL744:
 6845              		.loc 1 6333 18 view .LVU1898
 6846 001c FFF7FEFF 		bl	__aeabi_i2d
 6847              	.LVL745:
 6848              		.loc 1 6333 16 view .LVU1899
 6849 0020 0022     		movs	r2, #0
 6850 0022 054B     		ldr	r3, .L527
 6851 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6852              	.LVL746:
6334:Core/Src/bno055.c ****         *gravity_z_d = data_d;
 6853              		.loc 1 6334 9 is_stmt 1 view .LVU1900
 6854              		.loc 1 6334 22 is_stmt 0 view .LVU1901
 6855 0028 C5E90001 		strd	r0, [r5]
 6856              	.LVL747:
 6857              	.L525:
6335:Core/Src/bno055.c ****     }
6336:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccOloYeZ.s 			page 238


6337:Core/Src/bno055.c ****     {
6338:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6339:Core/Src/bno055.c ****     }
6340:Core/Src/bno055.c **** 
6341:Core/Src/bno055.c ****     return com_rslt;
 6858              		.loc 1 6341 5 is_stmt 1 view .LVU1902
6342:Core/Src/bno055.c **** }
 6859              		.loc 1 6342 1 is_stmt 0 view .LVU1903
 6860 002c 2046     		mov	r0, r4
 6861 002e 03B0     		add	sp, sp, #12
 6862              		.cfi_remember_state
 6863              		.cfi_def_cfa_offset 12
 6864              		@ sp needed
 6865 0030 30BD     		pop	{r4, r5, pc}
 6866              	.LVL748:
 6867              	.L524:
 6868              		.cfi_restore_state
6338:Core/Src/bno055.c ****     }
 6869              		.loc 1 6338 9 is_stmt 1 view .LVU1904
6338:Core/Src/bno055.c ****     }
 6870              		.loc 1 6338 18 is_stmt 0 view .LVU1905
 6871 0032 441E     		subs	r4, r0, #1
 6872 0034 64B2     		sxtb	r4, r4
 6873              	.LVL749:
6338:Core/Src/bno055.c ****     }
 6874              		.loc 1 6338 18 view .LVU1906
 6875 0036 F9E7     		b	.L525
 6876              	.L528:
 6877              		.align	2
 6878              	.L527:
 6879 0038 00005940 		.word	1079574528
 6880              		.cfi_endproc
 6881              	.LFE113:
 6883              		.section	.text.bno055_convert_double_gravity_xyz_msq,"ax",%progbits
 6884              		.align	1
 6885              		.global	bno055_convert_double_gravity_xyz_msq
 6886              		.syntax unified
 6887              		.thumb
 6888              		.thumb_func
 6890              	bno055_convert_double_gravity_xyz_msq:
 6891              	.LVL750:
 6892              	.LFB114:
6343:Core/Src/bno055.c **** 
6344:Core/Src/bno055.c **** /*!
6345:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity xyz raw data
6346:Core/Src/bno055.c ****  *  to meterpersecseq output as double
6347:Core/Src/bno055.c ****  *
6348:Core/Src/bno055.c ****  *  @param gravity_xyz : The meterpersecseq data of gravity xyz
6349:Core/Src/bno055.c ****  *
6350:Core/Src/bno055.c ****  *  Parameter |    result
6351:Core/Src/bno055.c ****  *  --------- | -----------------
6352:Core/Src/bno055.c ****  *   x        | meterpersecseq data of gravity
6353:Core/Src/bno055.c ****  *   y        | meterpersecseq data of gravity
6354:Core/Src/bno055.c ****  *   z        | meterpersecseq data of gravity
6355:Core/Src/bno055.c ****  *
6356:Core/Src/bno055.c ****  *
6357:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/ccOloYeZ.s 			page 239


6358:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6359:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6360:Core/Src/bno055.c ****  *
6361:Core/Src/bno055.c ****  */
6362:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gravity_xyz_msq(struct bno055_gravity_double_t *g
6363:Core/Src/bno055.c **** {
 6893              		.loc 1 6363 1 is_stmt 1 view -0
 6894              		.cfi_startproc
 6895              		@ args = 0, pretend = 0, frame = 8
 6896              		@ frame_needed = 0, uses_anonymous_args = 0
 6897              		.loc 1 6363 1 is_stmt 0 view .LVU1908
 6898 0000 30B5     		push	{r4, r5, lr}
 6899              		.cfi_def_cfa_offset 12
 6900              		.cfi_offset 4, -12
 6901              		.cfi_offset 5, -8
 6902              		.cfi_offset 14, -4
 6903 0002 83B0     		sub	sp, sp, #12
 6904              		.cfi_def_cfa_offset 24
 6905 0004 0446     		mov	r4, r0
6364:Core/Src/bno055.c ****     /* Variable used to return value of
6365:Core/Src/bno055.c ****      * communication routine*/
6366:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6906              		.loc 1 6366 5 is_stmt 1 view .LVU1909
 6907              	.LVL751:
6367:Core/Src/bno055.c ****     struct bno055_gravity_t reg_gravity_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_V
 6908              		.loc 1 6367 5 view .LVU1910
 6909              		.loc 1 6367 29 is_stmt 0 view .LVU1911
 6910 0006 0023     		movs	r3, #0
 6911 0008 ADF80030 		strh	r3, [sp]	@ movhi
 6912 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 6913 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
6368:Core/Src/bno055.c **** 
6369:Core/Src/bno055.c ****     /* Read raw gravity of xyz */
6370:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_xyz(&reg_gravity_xyz);
 6914              		.loc 1 6370 5 is_stmt 1 view .LVU1912
 6915              		.loc 1 6370 16 is_stmt 0 view .LVU1913
 6916 0014 6846     		mov	r0, sp
 6917              	.LVL752:
 6918              		.loc 1 6370 16 view .LVU1914
 6919 0016 FFF7FEFF 		bl	bno055_read_gravity_xyz
 6920              	.LVL753:
6371:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6921              		.loc 1 6371 5 is_stmt 1 view .LVU1915
 6922              		.loc 1 6371 8 is_stmt 0 view .LVU1916
 6923 001a 0546     		mov	r5, r0
 6924 001c 00BB     		cbnz	r0, .L530
6372:Core/Src/bno055.c ****     {
6373:Core/Src/bno055.c ****         /* Convert raw gravity of xyz to m/s2 */
6374:Core/Src/bno055.c ****         gravity_xyz->x = (double)(reg_gravity_xyz.x / BNO055_GRAVITY_DIV_MSQ);
 6925              		.loc 1 6374 9 is_stmt 1 view .LVU1917
 6926              		.loc 1 6374 26 is_stmt 0 view .LVU1918
 6927 001e BDF90000 		ldrsh	r0, [sp]
 6928              	.LVL754:
 6929              		.loc 1 6374 26 view .LVU1919
 6930 0022 FFF7FEFF 		bl	__aeabi_i2d
 6931              	.LVL755:
 6932 0026 0022     		movs	r2, #0
ARM GAS  /tmp/ccOloYeZ.s 			page 240


 6933 0028 0F4B     		ldr	r3, .L533
 6934 002a FFF7FEFF 		bl	__aeabi_ddiv
 6935              	.LVL756:
 6936              		.loc 1 6374 24 view .LVU1920
 6937 002e C4E90001 		strd	r0, [r4]
6375:Core/Src/bno055.c ****         gravity_xyz->y = (double)(reg_gravity_xyz.y / BNO055_GRAVITY_DIV_MSQ);
 6938              		.loc 1 6375 9 is_stmt 1 view .LVU1921
 6939              		.loc 1 6375 26 is_stmt 0 view .LVU1922
 6940 0032 BDF90200 		ldrsh	r0, [sp, #2]
 6941 0036 FFF7FEFF 		bl	__aeabi_i2d
 6942              	.LVL757:
 6943 003a 0022     		movs	r2, #0
 6944 003c 0A4B     		ldr	r3, .L533
 6945 003e FFF7FEFF 		bl	__aeabi_ddiv
 6946              	.LVL758:
 6947              		.loc 1 6375 24 view .LVU1923
 6948 0042 C4E90201 		strd	r0, [r4, #8]
6376:Core/Src/bno055.c ****         gravity_xyz->z = (double)(reg_gravity_xyz.z / BNO055_GRAVITY_DIV_MSQ);
 6949              		.loc 1 6376 9 is_stmt 1 view .LVU1924
 6950              		.loc 1 6376 26 is_stmt 0 view .LVU1925
 6951 0046 BDF90400 		ldrsh	r0, [sp, #4]
 6952 004a FFF7FEFF 		bl	__aeabi_i2d
 6953              	.LVL759:
 6954 004e 0022     		movs	r2, #0
 6955 0050 054B     		ldr	r3, .L533
 6956 0052 FFF7FEFF 		bl	__aeabi_ddiv
 6957              	.LVL760:
 6958              		.loc 1 6376 24 view .LVU1926
 6959 0056 C4E90401 		strd	r0, [r4, #16]
 6960              	.LVL761:
 6961              	.L531:
6377:Core/Src/bno055.c ****     }
6378:Core/Src/bno055.c ****     else
6379:Core/Src/bno055.c ****     {
6380:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6381:Core/Src/bno055.c ****     }
6382:Core/Src/bno055.c **** 
6383:Core/Src/bno055.c ****     return com_rslt;
 6962              		.loc 1 6383 5 is_stmt 1 view .LVU1927
6384:Core/Src/bno055.c **** }
 6963              		.loc 1 6384 1 is_stmt 0 view .LVU1928
 6964 005a 2846     		mov	r0, r5
 6965 005c 03B0     		add	sp, sp, #12
 6966              		.cfi_remember_state
 6967              		.cfi_def_cfa_offset 12
 6968              		@ sp needed
 6969 005e 30BD     		pop	{r4, r5, pc}
 6970              	.LVL762:
 6971              	.L530:
 6972              		.cfi_restore_state
6380:Core/Src/bno055.c ****     }
 6973              		.loc 1 6380 9 is_stmt 1 view .LVU1929
6380:Core/Src/bno055.c ****     }
 6974              		.loc 1 6380 18 is_stmt 0 view .LVU1930
 6975 0060 451E     		subs	r5, r0, #1
 6976 0062 6DB2     		sxtb	r5, r5
 6977              	.LVL763:
ARM GAS  /tmp/ccOloYeZ.s 			page 241


6380:Core/Src/bno055.c ****     }
 6978              		.loc 1 6380 18 view .LVU1931
 6979 0064 F9E7     		b	.L531
 6980              	.L534:
 6981 0066 00BF     		.align	2
 6982              	.L533:
 6983 0068 00005940 		.word	1079574528
 6984              		.cfi_endproc
 6985              	.LFE114:
 6987              		.section	.text.bno055_get_mag_calib_stat,"ax",%progbits
 6988              		.align	1
 6989              		.global	bno055_get_mag_calib_stat
 6990              		.syntax unified
 6991              		.thumb
 6992              		.thumb_func
 6994              	bno055_get_mag_calib_stat:
 6995              	.LVL764:
 6996              	.LFB117:
6385:Core/Src/bno055.c **** 
6386:Core/Src/bno055.c **** /*!
6387:Core/Src/bno055.c ****  *  @brief This API is used to convert the temperature
6388:Core/Src/bno055.c ****  *  data to Fahrenheit output as double
6389:Core/Src/bno055.c ****  *
6390:Core/Src/bno055.c ****  *  @param temp_d : The double value of temperature Fahrenheit
6391:Core/Src/bno055.c ****  *
6392:Core/Src/bno055.c ****  *  @return results of bus communication function
6393:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6394:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6395:Core/Src/bno055.c ****  *
6396:Core/Src/bno055.c ****  *
6397:Core/Src/bno055.c ****  */
6398:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_temp_fahrenheit(double *temp_d)
6399:Core/Src/bno055.c **** {
6400:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
6401:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
6402:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
6403:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
6404:Core/Src/bno055.c **** 
6405:Core/Src/bno055.c ****     /* Read the current temperature unit and set the
6406:Core/Src/bno055.c ****      * unit as Fahrenheit if the unit is in Celsius */
6407:Core/Src/bno055.c ****     com_rslt = bno055_get_temp_unit(&temp_unit_u8);
6408:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
6409:Core/Src/bno055.c ****     {
6410:Core/Src/bno055.c ****         com_rslt += bno055_set_temp_unit(BNO055_TEMP_UNIT_FAHRENHEIT);
6411:Core/Src/bno055.c ****     }
6412:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
6413:Core/Src/bno055.c ****     {
6414:Core/Src/bno055.c ****         /* Read the raw temperature data */
6415:Core/Src/bno055.c ****         com_rslt += bno055_read_temp_data(&reg_temp_s8);
6416:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
6417:Core/Src/bno055.c ****         {
6418:Core/Src/bno055.c ****             /* Convert raw temperature data to Fahrenheit*/
6419:Core/Src/bno055.c ****             data_d = (double)(reg_temp_s8 / BNO055_TEMP_DIV_FAHRENHEIT);
6420:Core/Src/bno055.c ****             *temp_d = data_d;
6421:Core/Src/bno055.c ****         }
6422:Core/Src/bno055.c ****         else
6423:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccOloYeZ.s 			page 242


6424:Core/Src/bno055.c ****             com_rslt += BNO055_ERROR;
6425:Core/Src/bno055.c ****         }
6426:Core/Src/bno055.c ****     }
6427:Core/Src/bno055.c ****     else
6428:Core/Src/bno055.c ****     {
6429:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6430:Core/Src/bno055.c ****     }
6431:Core/Src/bno055.c **** 
6432:Core/Src/bno055.c ****     return com_rslt;
6433:Core/Src/bno055.c **** }
6434:Core/Src/bno055.c **** 
6435:Core/Src/bno055.c **** /*!
6436:Core/Src/bno055.c ****  *  @brief This API is used to convert the temperature
6437:Core/Src/bno055.c ****  *  data to Celsius output as double
6438:Core/Src/bno055.c ****  *
6439:Core/Src/bno055.c ****  *  @param temp_d : The double value of temperature Celsius
6440:Core/Src/bno055.c ****  *
6441:Core/Src/bno055.c ****  *  @return results of bus communication function
6442:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6443:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6444:Core/Src/bno055.c ****  *
6445:Core/Src/bno055.c ****  *
6446:Core/Src/bno055.c ****  */
6447:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_temp_celsius(double *temp_d)
6448:Core/Src/bno055.c **** {
6449:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
6450:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
6451:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
6452:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
6453:Core/Src/bno055.c **** 
6454:Core/Src/bno055.c ****     /* Read the current temperature unit and set the
6455:Core/Src/bno055.c ****      * unit as Fahrenheit if the unit is in Celsius */
6456:Core/Src/bno055.c ****     com_rslt = bno055_get_temp_unit(&temp_unit_u8);
6457:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
6458:Core/Src/bno055.c ****     {
6459:Core/Src/bno055.c ****         com_rslt += bno055_set_temp_unit(BNO055_TEMP_UNIT_CELSIUS);
6460:Core/Src/bno055.c ****     }
6461:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
6462:Core/Src/bno055.c ****     {
6463:Core/Src/bno055.c ****         /* Read the raw temperature data */
6464:Core/Src/bno055.c ****         com_rslt += bno055_read_temp_data(&reg_temp_s8);
6465:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
6466:Core/Src/bno055.c ****         {
6467:Core/Src/bno055.c ****             /* Convert raw temperature data to Fahrenheit*/
6468:Core/Src/bno055.c ****             data_d = (double)(reg_temp_s8 / BNO055_TEMP_DIV_CELSIUS);
6469:Core/Src/bno055.c ****             *temp_d = data_d;
6470:Core/Src/bno055.c ****         }
6471:Core/Src/bno055.c ****         else
6472:Core/Src/bno055.c ****         {
6473:Core/Src/bno055.c ****             com_rslt += BNO055_ERROR;
6474:Core/Src/bno055.c ****         }
6475:Core/Src/bno055.c ****     }
6476:Core/Src/bno055.c ****     else
6477:Core/Src/bno055.c ****     {
6478:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6479:Core/Src/bno055.c ****     }
6480:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 243


6481:Core/Src/bno055.c ****     return com_rslt;
6482:Core/Src/bno055.c **** }
6483:Core/Src/bno055.c **** #endif
6484:Core/Src/bno055.c **** 
6485:Core/Src/bno055.c **** /*!
6486:Core/Src/bno055.c ****  *  @brief This API used to read
6487:Core/Src/bno055.c ****  *  mag calibration status from register from 0x35 bit 0 and 1
6488:Core/Src/bno055.c ****  *
6489:Core/Src/bno055.c ****  *  @param mag_calib_u8 : The value of mag calib status
6490:Core/Src/bno055.c ****  *
6491:Core/Src/bno055.c ****  *
6492:Core/Src/bno055.c ****  *  @return results of bus communication function
6493:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6494:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6495:Core/Src/bno055.c ****  *
6496:Core/Src/bno055.c ****  */
6497:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_calib_stat(u8 *mag_calib_u8)
6498:Core/Src/bno055.c **** {
 6997              		.loc 1 6498 1 is_stmt 1 view -0
 6998              		.cfi_startproc
 6999              		@ args = 0, pretend = 0, frame = 8
 7000              		@ frame_needed = 0, uses_anonymous_args = 0
 7001              		.loc 1 6498 1 is_stmt 0 view .LVU1933
 7002 0000 30B5     		push	{r4, r5, lr}
 7003              		.cfi_def_cfa_offset 12
 7004              		.cfi_offset 4, -12
 7005              		.cfi_offset 5, -8
 7006              		.cfi_offset 14, -4
 7007 0002 83B0     		sub	sp, sp, #12
 7008              		.cfi_def_cfa_offset 24
6499:Core/Src/bno055.c ****     /* Variable used to return value of
6500:Core/Src/bno055.c ****      * communication routine*/
6501:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7009              		.loc 1 6501 5 is_stmt 1 view .LVU1934
 7010              	.LVL765:
6502:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7011              		.loc 1 6502 5 view .LVU1935
 7012              		.loc 1 6502 8 is_stmt 0 view .LVU1936
 7013 0004 0023     		movs	r3, #0
 7014 0006 8DF80730 		strb	r3, [sp, #7]
6503:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7015              		.loc 1 6503 5 is_stmt 1 view .LVU1937
 7016              	.LVL766:
6504:Core/Src/bno055.c **** 
6505:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6506:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7017              		.loc 1 6506 5 view .LVU1938
 7018              		.loc 1 6506 18 is_stmt 0 view .LVU1939
 7019 000a 134B     		ldr	r3, .L543
 7020 000c 1B68     		ldr	r3, [r3]
 7021              		.loc 1 6506 8 view .LVU1940
 7022 000e E3B1     		cbz	r3, .L539
 7023 0010 0446     		mov	r4, r0
6507:Core/Src/bno055.c ****     {
6508:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6509:Core/Src/bno055.c ****     }
6510:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccOloYeZ.s 			page 244


6511:Core/Src/bno055.c ****     {
6512:Core/Src/bno055.c ****         /*condition check for page, mag calib
6513:Core/Src/bno055.c ****          * available in the page zero*/
6514:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7024              		.loc 1 6514 9 is_stmt 1 view .LVU1941
 7025              		.loc 1 6514 21 is_stmt 0 view .LVU1942
 7026 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7027              		.loc 1 6514 12 view .LVU1943
 7028 0014 9BB9     		cbnz	r3, .L542
 7029              	.LVL767:
 7030              	.L537:
6515:Core/Src/bno055.c ****         {
6516:Core/Src/bno055.c ****             /* Write the page zero*/
6517:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6518:Core/Src/bno055.c ****         }
6519:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7031              		.loc 1 6519 53 discriminator 1 view .LVU1944
 7032 0016 104B     		ldr	r3, .L543
 7033 0018 1B68     		ldr	r3, [r3]
 7034 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7035              		.loc 1 6519 41 discriminator 1 view .LVU1945
 7036 001c C3B9     		cbnz	r3, .L540
 7037              	.L538:
6520:Core/Src/bno055.c ****         {
6521:Core/Src/bno055.c ****             /* Read the mag calib stat_s8 */
6522:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7038              		.loc 1 6522 13 is_stmt 1 view .LVU1946
 7039              		.loc 1 6522 32 is_stmt 0 view .LVU1947
 7040 001e 0E4B     		ldr	r3, .L543
 7041 0020 1868     		ldr	r0, [r3]
 7042 0022 0569     		ldr	r5, [r0, #16]
 7043              		.loc 1 6522 24 view .LVU1948
 7044 0024 0123     		movs	r3, #1
 7045 0026 0DF10702 		add	r2, sp, #7
 7046 002a 3521     		movs	r1, #53
 7047 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7048 002e A847     		blx	r5
 7049              	.LVL768:
6523:Core/Src/bno055.c ****                                                       BNO055_MAG_CALIB_STAT_REG,
6524:Core/Src/bno055.c ****                                                       &data_u8r,
6525:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6526:Core/Src/bno055.c ****             *mag_calib_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_CALIB_STAT);
 7050              		.loc 1 6526 13 is_stmt 1 view .LVU1949
 7051              		.loc 1 6526 29 is_stmt 0 view .LVU1950
 7052 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7053 0034 03F00303 		and	r3, r3, #3
 7054              		.loc 1 6526 27 view .LVU1951
 7055 0038 2370     		strb	r3, [r4]
 7056              	.LVL769:
 7057              	.L536:
6527:Core/Src/bno055.c ****         }
6528:Core/Src/bno055.c ****         else
6529:Core/Src/bno055.c ****         {
6530:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6531:Core/Src/bno055.c ****         }
6532:Core/Src/bno055.c ****     }
6533:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 245


6534:Core/Src/bno055.c ****     return com_rslt;
6535:Core/Src/bno055.c **** }
 7058              		.loc 1 6535 1 view .LVU1952
 7059 003a 03B0     		add	sp, sp, #12
 7060              		.cfi_remember_state
 7061              		.cfi_def_cfa_offset 12
 7062              		@ sp needed
 7063 003c 30BD     		pop	{r4, r5, pc}
 7064              	.LVL770:
 7065              	.L542:
 7066              		.cfi_restore_state
6517:Core/Src/bno055.c ****         }
 7067              		.loc 1 6517 13 is_stmt 1 view .LVU1953
6517:Core/Src/bno055.c ****         }
 7068              		.loc 1 6517 23 is_stmt 0 view .LVU1954
 7069 003e 0020     		movs	r0, #0
 7070              	.LVL771:
6517:Core/Src/bno055.c ****         }
 7071              		.loc 1 6517 23 view .LVU1955
 7072 0040 FFF7FEFF 		bl	bno055_write_page_id
 7073              	.LVL772:
6519:Core/Src/bno055.c ****         {
 7074              		.loc 1 6519 9 is_stmt 1 view .LVU1956
6519:Core/Src/bno055.c ****         {
 7075              		.loc 1 6519 12 is_stmt 0 view .LVU1957
 7076 0044 0028     		cmp	r0, #0
 7077 0046 EAD0     		beq	.L538
 7078 0048 E5E7     		b	.L537
 7079              	.LVL773:
 7080              	.L539:
6508:Core/Src/bno055.c ****     }
 7081              		.loc 1 6508 16 view .LVU1958
 7082 004a 6FF07E00 		mvn	r0, #126
 7083              	.LVL774:
6508:Core/Src/bno055.c ****     }
 7084              		.loc 1 6508 16 view .LVU1959
 7085 004e F4E7     		b	.L536
 7086              	.LVL775:
 7087              	.L540:
6530:Core/Src/bno055.c ****         }
 7088              		.loc 1 6530 22 view .LVU1960
 7089 0050 4FF0FF30 		mov	r0, #-1
 7090 0054 F1E7     		b	.L536
 7091              	.L544:
 7092 0056 00BF     		.align	2
 7093              	.L543:
 7094 0058 00000000 		.word	p_bno055
 7095              		.cfi_endproc
 7096              	.LFE117:
 7098              		.section	.text.bno055_get_accel_calib_stat,"ax",%progbits
 7099              		.align	1
 7100              		.global	bno055_get_accel_calib_stat
 7101              		.syntax unified
 7102              		.thumb
 7103              		.thumb_func
 7105              	bno055_get_accel_calib_stat:
 7106              	.LVL776:
ARM GAS  /tmp/ccOloYeZ.s 			page 246


 7107              	.LFB118:
6536:Core/Src/bno055.c **** 
6537:Core/Src/bno055.c **** /*!
6538:Core/Src/bno055.c ****  *  @brief This API used to read
6539:Core/Src/bno055.c ****  *  accel calibration status from register from 0x35 bit 2 and 3
6540:Core/Src/bno055.c ****  *
6541:Core/Src/bno055.c ****  *  @param accel_calib_u8 : The value of accel calib status
6542:Core/Src/bno055.c ****  *
6543:Core/Src/bno055.c ****  *
6544:Core/Src/bno055.c ****  *  @return results of bus communication function
6545:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6546:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6547:Core/Src/bno055.c ****  *
6548:Core/Src/bno055.c ****  */
6549:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_calib_stat(u8 *accel_calib_u8)
6550:Core/Src/bno055.c **** {
 7108              		.loc 1 6550 1 is_stmt 1 view -0
 7109              		.cfi_startproc
 7110              		@ args = 0, pretend = 0, frame = 8
 7111              		@ frame_needed = 0, uses_anonymous_args = 0
 7112              		.loc 1 6550 1 is_stmt 0 view .LVU1962
 7113 0000 30B5     		push	{r4, r5, lr}
 7114              		.cfi_def_cfa_offset 12
 7115              		.cfi_offset 4, -12
 7116              		.cfi_offset 5, -8
 7117              		.cfi_offset 14, -4
 7118 0002 83B0     		sub	sp, sp, #12
 7119              		.cfi_def_cfa_offset 24
6551:Core/Src/bno055.c ****     /* Variable used to return value of
6552:Core/Src/bno055.c ****      * communication routine*/
6553:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7120              		.loc 1 6553 5 is_stmt 1 view .LVU1963
 7121              	.LVL777:
6554:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7122              		.loc 1 6554 5 view .LVU1964
 7123              		.loc 1 6554 8 is_stmt 0 view .LVU1965
 7124 0004 0023     		movs	r3, #0
 7125 0006 8DF80730 		strb	r3, [sp, #7]
6555:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7126              		.loc 1 6555 5 is_stmt 1 view .LVU1966
 7127              	.LVL778:
6556:Core/Src/bno055.c **** 
6557:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty*/
6558:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7128              		.loc 1 6558 5 view .LVU1967
 7129              		.loc 1 6558 18 is_stmt 0 view .LVU1968
 7130 000a 134B     		ldr	r3, .L553
 7131 000c 1B68     		ldr	r3, [r3]
 7132              		.loc 1 6558 8 view .LVU1969
 7133 000e E3B1     		cbz	r3, .L549
 7134 0010 0446     		mov	r4, r0
6559:Core/Src/bno055.c ****     {
6560:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6561:Core/Src/bno055.c ****     }
6562:Core/Src/bno055.c ****     else
6563:Core/Src/bno055.c ****     {
6564:Core/Src/bno055.c ****         /*condition check for page, accel calib
ARM GAS  /tmp/ccOloYeZ.s 			page 247


6565:Core/Src/bno055.c ****          * available in the page zero*/
6566:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7135              		.loc 1 6566 9 is_stmt 1 view .LVU1970
 7136              		.loc 1 6566 21 is_stmt 0 view .LVU1971
 7137 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7138              		.loc 1 6566 12 view .LVU1972
 7139 0014 9BB9     		cbnz	r3, .L552
 7140              	.LVL779:
 7141              	.L547:
6567:Core/Src/bno055.c ****         {
6568:Core/Src/bno055.c ****             /* Write the page zero*/
6569:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6570:Core/Src/bno055.c ****         }
6571:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7142              		.loc 1 6571 53 discriminator 1 view .LVU1973
 7143 0016 104B     		ldr	r3, .L553
 7144 0018 1B68     		ldr	r3, [r3]
 7145 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7146              		.loc 1 6571 41 discriminator 1 view .LVU1974
 7147 001c C3B9     		cbnz	r3, .L550
 7148              	.L548:
6572:Core/Src/bno055.c ****         {
6573:Core/Src/bno055.c ****             /* Read the accel calib stat_s8 */
6574:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7149              		.loc 1 6574 13 is_stmt 1 view .LVU1975
 7150              		.loc 1 6574 32 is_stmt 0 view .LVU1976
 7151 001e 0E4B     		ldr	r3, .L553
 7152 0020 1868     		ldr	r0, [r3]
 7153 0022 0569     		ldr	r5, [r0, #16]
 7154              		.loc 1 6574 24 view .LVU1977
 7155 0024 0123     		movs	r3, #1
 7156 0026 0DF10702 		add	r2, sp, #7
 7157 002a 3521     		movs	r1, #53
 7158 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7159 002e A847     		blx	r5
 7160              	.LVL780:
6575:Core/Src/bno055.c ****                                                       BNO055_ACCEL_CALIB_STAT_REG,
6576:Core/Src/bno055.c ****                                                       &data_u8r,
6577:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6578:Core/Src/bno055.c ****             *accel_calib_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_CALIB_STAT);
 7161              		.loc 1 6578 13 is_stmt 1 view .LVU1978
 7162              		.loc 1 6578 31 is_stmt 0 view .LVU1979
 7163 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7164 0034 C3F38103 		ubfx	r3, r3, #2, #2
 7165              		.loc 1 6578 29 view .LVU1980
 7166 0038 2370     		strb	r3, [r4]
 7167              	.LVL781:
 7168              	.L546:
6579:Core/Src/bno055.c ****         }
6580:Core/Src/bno055.c ****         else
6581:Core/Src/bno055.c ****         {
6582:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6583:Core/Src/bno055.c ****         }
6584:Core/Src/bno055.c ****     }
6585:Core/Src/bno055.c **** 
6586:Core/Src/bno055.c ****     return com_rslt;
6587:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccOloYeZ.s 			page 248


 7169              		.loc 1 6587 1 view .LVU1981
 7170 003a 03B0     		add	sp, sp, #12
 7171              		.cfi_remember_state
 7172              		.cfi_def_cfa_offset 12
 7173              		@ sp needed
 7174 003c 30BD     		pop	{r4, r5, pc}
 7175              	.LVL782:
 7176              	.L552:
 7177              		.cfi_restore_state
6569:Core/Src/bno055.c ****         }
 7178              		.loc 1 6569 13 is_stmt 1 view .LVU1982
6569:Core/Src/bno055.c ****         }
 7179              		.loc 1 6569 23 is_stmt 0 view .LVU1983
 7180 003e 0020     		movs	r0, #0
 7181              	.LVL783:
6569:Core/Src/bno055.c ****         }
 7182              		.loc 1 6569 23 view .LVU1984
 7183 0040 FFF7FEFF 		bl	bno055_write_page_id
 7184              	.LVL784:
6571:Core/Src/bno055.c ****         {
 7185              		.loc 1 6571 9 is_stmt 1 view .LVU1985
6571:Core/Src/bno055.c ****         {
 7186              		.loc 1 6571 12 is_stmt 0 view .LVU1986
 7187 0044 0028     		cmp	r0, #0
 7188 0046 EAD0     		beq	.L548
 7189 0048 E5E7     		b	.L547
 7190              	.LVL785:
 7191              	.L549:
6560:Core/Src/bno055.c ****     }
 7192              		.loc 1 6560 16 view .LVU1987
 7193 004a 6FF07E00 		mvn	r0, #126
 7194              	.LVL786:
6560:Core/Src/bno055.c ****     }
 7195              		.loc 1 6560 16 view .LVU1988
 7196 004e F4E7     		b	.L546
 7197              	.LVL787:
 7198              	.L550:
6582:Core/Src/bno055.c ****         }
 7199              		.loc 1 6582 22 view .LVU1989
 7200 0050 4FF0FF30 		mov	r0, #-1
 7201 0054 F1E7     		b	.L546
 7202              	.L554:
 7203 0056 00BF     		.align	2
 7204              	.L553:
 7205 0058 00000000 		.word	p_bno055
 7206              		.cfi_endproc
 7207              	.LFE118:
 7209              		.section	.text.bno055_get_gyro_calib_stat,"ax",%progbits
 7210              		.align	1
 7211              		.global	bno055_get_gyro_calib_stat
 7212              		.syntax unified
 7213              		.thumb
 7214              		.thumb_func
 7216              	bno055_get_gyro_calib_stat:
 7217              	.LVL788:
 7218              	.LFB119:
6588:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 249


6589:Core/Src/bno055.c **** /*!
6590:Core/Src/bno055.c ****  *  @brief This API used to read
6591:Core/Src/bno055.c ****  *  gyro calibration status from register from 0x35 bit 4 and 5
6592:Core/Src/bno055.c ****  *
6593:Core/Src/bno055.c ****  *  @param gyro_calib_u8 : The value of gyro calib status
6594:Core/Src/bno055.c ****  *
6595:Core/Src/bno055.c ****  *
6596:Core/Src/bno055.c ****  *  @return results of bus communication function
6597:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6598:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6599:Core/Src/bno055.c ****  *
6600:Core/Src/bno055.c ****  */
6601:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_calib_stat(u8 *gyro_calib_u8)
6602:Core/Src/bno055.c **** {
 7219              		.loc 1 6602 1 is_stmt 1 view -0
 7220              		.cfi_startproc
 7221              		@ args = 0, pretend = 0, frame = 8
 7222              		@ frame_needed = 0, uses_anonymous_args = 0
 7223              		.loc 1 6602 1 is_stmt 0 view .LVU1991
 7224 0000 30B5     		push	{r4, r5, lr}
 7225              		.cfi_def_cfa_offset 12
 7226              		.cfi_offset 4, -12
 7227              		.cfi_offset 5, -8
 7228              		.cfi_offset 14, -4
 7229 0002 83B0     		sub	sp, sp, #12
 7230              		.cfi_def_cfa_offset 24
6603:Core/Src/bno055.c ****     /* Variable used to return value of
6604:Core/Src/bno055.c ****      * communication routine*/
6605:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7231              		.loc 1 6605 5 is_stmt 1 view .LVU1992
 7232              	.LVL789:
6606:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7233              		.loc 1 6606 5 view .LVU1993
 7234              		.loc 1 6606 8 is_stmt 0 view .LVU1994
 7235 0004 0023     		movs	r3, #0
 7236 0006 8DF80730 		strb	r3, [sp, #7]
6607:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7237              		.loc 1 6607 5 is_stmt 1 view .LVU1995
 7238              	.LVL790:
6608:Core/Src/bno055.c **** 
6609:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6610:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7239              		.loc 1 6610 5 view .LVU1996
 7240              		.loc 1 6610 18 is_stmt 0 view .LVU1997
 7241 000a 134B     		ldr	r3, .L563
 7242 000c 1B68     		ldr	r3, [r3]
 7243              		.loc 1 6610 8 view .LVU1998
 7244 000e E3B1     		cbz	r3, .L559
 7245 0010 0446     		mov	r4, r0
6611:Core/Src/bno055.c ****     {
6612:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6613:Core/Src/bno055.c ****     }
6614:Core/Src/bno055.c ****     else
6615:Core/Src/bno055.c ****     {
6616:Core/Src/bno055.c ****         /*condition check for page, gyro calib
6617:Core/Src/bno055.c ****          * available in the page zero*/
6618:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
ARM GAS  /tmp/ccOloYeZ.s 			page 250


 7246              		.loc 1 6618 9 is_stmt 1 view .LVU1999
 7247              		.loc 1 6618 21 is_stmt 0 view .LVU2000
 7248 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7249              		.loc 1 6618 12 view .LVU2001
 7250 0014 9BB9     		cbnz	r3, .L562
 7251              	.LVL791:
 7252              	.L557:
6619:Core/Src/bno055.c ****         {
6620:Core/Src/bno055.c ****             /* Write the page zero*/
6621:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6622:Core/Src/bno055.c ****         }
6623:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7253              		.loc 1 6623 53 discriminator 1 view .LVU2002
 7254 0016 104B     		ldr	r3, .L563
 7255 0018 1B68     		ldr	r3, [r3]
 7256 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7257              		.loc 1 6623 41 discriminator 1 view .LVU2003
 7258 001c C3B9     		cbnz	r3, .L560
 7259              	.L558:
6624:Core/Src/bno055.c ****         {
6625:Core/Src/bno055.c ****             /* Read the gyro calib status */
6626:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7260              		.loc 1 6626 13 is_stmt 1 view .LVU2004
 7261              		.loc 1 6626 32 is_stmt 0 view .LVU2005
 7262 001e 0E4B     		ldr	r3, .L563
 7263 0020 1868     		ldr	r0, [r3]
 7264 0022 0569     		ldr	r5, [r0, #16]
 7265              		.loc 1 6626 24 view .LVU2006
 7266 0024 0123     		movs	r3, #1
 7267 0026 0DF10702 		add	r2, sp, #7
 7268 002a 3521     		movs	r1, #53
 7269 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7270 002e A847     		blx	r5
 7271              	.LVL792:
6627:Core/Src/bno055.c ****                                                       BNO055_GYRO_CALIB_STAT_REG,
6628:Core/Src/bno055.c ****                                                       &data_u8r,
6629:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6630:Core/Src/bno055.c ****             *gyro_calib_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_CALIB_STAT);
 7272              		.loc 1 6630 13 is_stmt 1 view .LVU2007
 7273              		.loc 1 6630 30 is_stmt 0 view .LVU2008
 7274 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7275 0034 C3F30113 		ubfx	r3, r3, #4, #2
 7276              		.loc 1 6630 28 view .LVU2009
 7277 0038 2370     		strb	r3, [r4]
 7278              	.LVL793:
 7279              	.L556:
6631:Core/Src/bno055.c ****         }
6632:Core/Src/bno055.c ****         else
6633:Core/Src/bno055.c ****         {
6634:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6635:Core/Src/bno055.c ****         }
6636:Core/Src/bno055.c ****     }
6637:Core/Src/bno055.c **** 
6638:Core/Src/bno055.c ****     return com_rslt;
6639:Core/Src/bno055.c **** }
 7280              		.loc 1 6639 1 view .LVU2010
 7281 003a 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccOloYeZ.s 			page 251


 7282              		.cfi_remember_state
 7283              		.cfi_def_cfa_offset 12
 7284              		@ sp needed
 7285 003c 30BD     		pop	{r4, r5, pc}
 7286              	.LVL794:
 7287              	.L562:
 7288              		.cfi_restore_state
6621:Core/Src/bno055.c ****         }
 7289              		.loc 1 6621 13 is_stmt 1 view .LVU2011
6621:Core/Src/bno055.c ****         }
 7290              		.loc 1 6621 23 is_stmt 0 view .LVU2012
 7291 003e 0020     		movs	r0, #0
 7292              	.LVL795:
6621:Core/Src/bno055.c ****         }
 7293              		.loc 1 6621 23 view .LVU2013
 7294 0040 FFF7FEFF 		bl	bno055_write_page_id
 7295              	.LVL796:
6623:Core/Src/bno055.c ****         {
 7296              		.loc 1 6623 9 is_stmt 1 view .LVU2014
6623:Core/Src/bno055.c ****         {
 7297              		.loc 1 6623 12 is_stmt 0 view .LVU2015
 7298 0044 0028     		cmp	r0, #0
 7299 0046 EAD0     		beq	.L558
 7300 0048 E5E7     		b	.L557
 7301              	.LVL797:
 7302              	.L559:
6612:Core/Src/bno055.c ****     }
 7303              		.loc 1 6612 16 view .LVU2016
 7304 004a 6FF07E00 		mvn	r0, #126
 7305              	.LVL798:
6612:Core/Src/bno055.c ****     }
 7306              		.loc 1 6612 16 view .LVU2017
 7307 004e F4E7     		b	.L556
 7308              	.LVL799:
 7309              	.L560:
6634:Core/Src/bno055.c ****         }
 7310              		.loc 1 6634 22 view .LVU2018
 7311 0050 4FF0FF30 		mov	r0, #-1
 7312 0054 F1E7     		b	.L556
 7313              	.L564:
 7314 0056 00BF     		.align	2
 7315              	.L563:
 7316 0058 00000000 		.word	p_bno055
 7317              		.cfi_endproc
 7318              	.LFE119:
 7320              		.section	.text.bno055_get_sys_calib_stat,"ax",%progbits
 7321              		.align	1
 7322              		.global	bno055_get_sys_calib_stat
 7323              		.syntax unified
 7324              		.thumb
 7325              		.thumb_func
 7327              	bno055_get_sys_calib_stat:
 7328              	.LVL800:
 7329              	.LFB120:
6640:Core/Src/bno055.c **** 
6641:Core/Src/bno055.c **** /*!
6642:Core/Src/bno055.c ****  *  @brief This API used to read
ARM GAS  /tmp/ccOloYeZ.s 			page 252


6643:Core/Src/bno055.c ****  *  system calibration status from register from 0x35 bit 6 and 7
6644:Core/Src/bno055.c ****  *
6645:Core/Src/bno055.c ****  *  @param sys_calib_u8 : The value of system calib status
6646:Core/Src/bno055.c ****  *
6647:Core/Src/bno055.c ****  *
6648:Core/Src/bno055.c ****  *  @return results of bus communication function
6649:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6650:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6651:Core/Src/bno055.c ****  *
6652:Core/Src/bno055.c ****  */
6653:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_sys_calib_stat(u8 *sys_calib_u8)
6654:Core/Src/bno055.c **** {
 7330              		.loc 1 6654 1 is_stmt 1 view -0
 7331              		.cfi_startproc
 7332              		@ args = 0, pretend = 0, frame = 8
 7333              		@ frame_needed = 0, uses_anonymous_args = 0
 7334              		.loc 1 6654 1 is_stmt 0 view .LVU2020
 7335 0000 30B5     		push	{r4, r5, lr}
 7336              		.cfi_def_cfa_offset 12
 7337              		.cfi_offset 4, -12
 7338              		.cfi_offset 5, -8
 7339              		.cfi_offset 14, -4
 7340 0002 83B0     		sub	sp, sp, #12
 7341              		.cfi_def_cfa_offset 24
6655:Core/Src/bno055.c ****     /* Variable used to return value of
6656:Core/Src/bno055.c ****      * communication routine*/
6657:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7342              		.loc 1 6657 5 is_stmt 1 view .LVU2021
 7343              	.LVL801:
6658:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7344              		.loc 1 6658 5 view .LVU2022
 7345              		.loc 1 6658 8 is_stmt 0 view .LVU2023
 7346 0004 0023     		movs	r3, #0
 7347 0006 8DF80730 		strb	r3, [sp, #7]
6659:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7348              		.loc 1 6659 5 is_stmt 1 view .LVU2024
 7349              	.LVL802:
6660:Core/Src/bno055.c **** 
6661:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty*/
6662:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7350              		.loc 1 6662 5 view .LVU2025
 7351              		.loc 1 6662 18 is_stmt 0 view .LVU2026
 7352 000a 124B     		ldr	r3, .L573
 7353 000c 1B68     		ldr	r3, [r3]
 7354              		.loc 1 6662 8 view .LVU2027
 7355 000e DBB1     		cbz	r3, .L569
 7356 0010 0446     		mov	r4, r0
6663:Core/Src/bno055.c ****     {
6664:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6665:Core/Src/bno055.c ****     }
6666:Core/Src/bno055.c ****     else
6667:Core/Src/bno055.c ****     {
6668:Core/Src/bno055.c ****         /*condition check for page,system calib
6669:Core/Src/bno055.c ****          * available in the page zero*/
6670:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7357              		.loc 1 6670 9 is_stmt 1 view .LVU2028
 7358              		.loc 1 6670 21 is_stmt 0 view .LVU2029
ARM GAS  /tmp/ccOloYeZ.s 			page 253


 7359 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7360              		.loc 1 6670 12 view .LVU2030
 7361 0014 93B9     		cbnz	r3, .L572
 7362              	.LVL803:
 7363              	.L567:
6671:Core/Src/bno055.c ****         {
6672:Core/Src/bno055.c ****             /* Write the page zero*/
6673:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6674:Core/Src/bno055.c ****         }
6675:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7364              		.loc 1 6675 53 discriminator 1 view .LVU2031
 7365 0016 0F4B     		ldr	r3, .L573
 7366 0018 1B68     		ldr	r3, [r3]
 7367 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7368              		.loc 1 6675 41 discriminator 1 view .LVU2032
 7369 001c BBB9     		cbnz	r3, .L570
 7370              	.L568:
6676:Core/Src/bno055.c ****         {
6677:Core/Src/bno055.c ****             /* Read the system calib */
6678:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7371              		.loc 1 6678 13 is_stmt 1 view .LVU2033
 7372              		.loc 1 6678 32 is_stmt 0 view .LVU2034
 7373 001e 0D4B     		ldr	r3, .L573
 7374 0020 1868     		ldr	r0, [r3]
 7375 0022 0569     		ldr	r5, [r0, #16]
 7376              		.loc 1 6678 24 view .LVU2035
 7377 0024 0123     		movs	r3, #1
 7378 0026 0DF10702 		add	r2, sp, #7
 7379 002a 3521     		movs	r1, #53
 7380 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7381 002e A847     		blx	r5
 7382              	.LVL804:
6679:Core/Src/bno055.c ****                                                       BNO055_SYS_CALIB_STAT_REG,
6680:Core/Src/bno055.c ****                                                       &data_u8r,
6681:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6682:Core/Src/bno055.c ****             *sys_calib_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_CALIB_STAT);
 7383              		.loc 1 6682 13 is_stmt 1 view .LVU2036
 7384              		.loc 1 6682 29 is_stmt 0 view .LVU2037
 7385 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7386 0034 9B09     		lsrs	r3, r3, #6
 7387              		.loc 1 6682 27 view .LVU2038
 7388 0036 2370     		strb	r3, [r4]
 7389              	.LVL805:
 7390              	.L566:
6683:Core/Src/bno055.c ****         }
6684:Core/Src/bno055.c ****         else
6685:Core/Src/bno055.c ****         {
6686:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6687:Core/Src/bno055.c ****         }
6688:Core/Src/bno055.c ****     }
6689:Core/Src/bno055.c **** 
6690:Core/Src/bno055.c ****     return com_rslt;
6691:Core/Src/bno055.c **** }
 7391              		.loc 1 6691 1 view .LVU2039
 7392 0038 03B0     		add	sp, sp, #12
 7393              		.cfi_remember_state
 7394              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccOloYeZ.s 			page 254


 7395              		@ sp needed
 7396 003a 30BD     		pop	{r4, r5, pc}
 7397              	.LVL806:
 7398              	.L572:
 7399              		.cfi_restore_state
6673:Core/Src/bno055.c ****         }
 7400              		.loc 1 6673 13 is_stmt 1 view .LVU2040
6673:Core/Src/bno055.c ****         }
 7401              		.loc 1 6673 23 is_stmt 0 view .LVU2041
 7402 003c 0020     		movs	r0, #0
 7403              	.LVL807:
6673:Core/Src/bno055.c ****         }
 7404              		.loc 1 6673 23 view .LVU2042
 7405 003e FFF7FEFF 		bl	bno055_write_page_id
 7406              	.LVL808:
6675:Core/Src/bno055.c ****         {
 7407              		.loc 1 6675 9 is_stmt 1 view .LVU2043
6675:Core/Src/bno055.c ****         {
 7408              		.loc 1 6675 12 is_stmt 0 view .LVU2044
 7409 0042 0028     		cmp	r0, #0
 7410 0044 EBD0     		beq	.L568
 7411 0046 E6E7     		b	.L567
 7412              	.LVL809:
 7413              	.L569:
6664:Core/Src/bno055.c ****     }
 7414              		.loc 1 6664 16 view .LVU2045
 7415 0048 6FF07E00 		mvn	r0, #126
 7416              	.LVL810:
6664:Core/Src/bno055.c ****     }
 7417              		.loc 1 6664 16 view .LVU2046
 7418 004c F4E7     		b	.L566
 7419              	.LVL811:
 7420              	.L570:
6686:Core/Src/bno055.c ****         }
 7421              		.loc 1 6686 22 view .LVU2047
 7422 004e 4FF0FF30 		mov	r0, #-1
 7423 0052 F1E7     		b	.L566
 7424              	.L574:
 7425              		.align	2
 7426              	.L573:
 7427 0054 00000000 		.word	p_bno055
 7428              		.cfi_endproc
 7429              	.LFE120:
 7431              		.section	.text.bno055_get_selftest_accel,"ax",%progbits
 7432              		.align	1
 7433              		.global	bno055_get_selftest_accel
 7434              		.syntax unified
 7435              		.thumb
 7436              		.thumb_func
 7438              	bno055_get_selftest_accel:
 7439              	.LVL812:
 7440              	.LFB121:
6692:Core/Src/bno055.c **** 
6693:Core/Src/bno055.c **** /*!
6694:Core/Src/bno055.c ****  *  @brief This API used to read
6695:Core/Src/bno055.c ****  *  self test of accel from register from 0x36 bit 0
6696:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 255


6697:Core/Src/bno055.c ****  *  @param selftest_accel_u8 : The value of self test of accel
6698:Core/Src/bno055.c ****  *
6699:Core/Src/bno055.c ****  *    selftest_accel_u8 |  result
6700:Core/Src/bno055.c ****  *   -------------------- | ---------------------
6701:Core/Src/bno055.c ****  *     0x00               | indicates test failed
6702:Core/Src/bno055.c ****  *     0x01               | indicated test passed
6703:Core/Src/bno055.c ****  *
6704:Core/Src/bno055.c ****  *  @return results of bus communication function
6705:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6706:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6707:Core/Src/bno055.c ****  *
6708:Core/Src/bno055.c ****  */
6709:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest_accel(u8 *selftest_accel_u8)
6710:Core/Src/bno055.c **** {
 7441              		.loc 1 6710 1 is_stmt 1 view -0
 7442              		.cfi_startproc
 7443              		@ args = 0, pretend = 0, frame = 8
 7444              		@ frame_needed = 0, uses_anonymous_args = 0
 7445              		.loc 1 6710 1 is_stmt 0 view .LVU2049
 7446 0000 30B5     		push	{r4, r5, lr}
 7447              		.cfi_def_cfa_offset 12
 7448              		.cfi_offset 4, -12
 7449              		.cfi_offset 5, -8
 7450              		.cfi_offset 14, -4
 7451 0002 83B0     		sub	sp, sp, #12
 7452              		.cfi_def_cfa_offset 24
6711:Core/Src/bno055.c ****     /* Variable used to return value of
6712:Core/Src/bno055.c ****      * communication routine*/
6713:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7453              		.loc 1 6713 5 is_stmt 1 view .LVU2050
 7454              	.LVL813:
6714:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7455              		.loc 1 6714 5 view .LVU2051
 7456              		.loc 1 6714 8 is_stmt 0 view .LVU2052
 7457 0004 0023     		movs	r3, #0
 7458 0006 8DF80730 		strb	r3, [sp, #7]
6715:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7459              		.loc 1 6715 5 is_stmt 1 view .LVU2053
 7460              	.LVL814:
6716:Core/Src/bno055.c **** 
6717:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6718:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7461              		.loc 1 6718 5 view .LVU2054
 7462              		.loc 1 6718 18 is_stmt 0 view .LVU2055
 7463 000a 134B     		ldr	r3, .L583
 7464 000c 1B68     		ldr	r3, [r3]
 7465              		.loc 1 6718 8 view .LVU2056
 7466 000e E3B1     		cbz	r3, .L579
 7467 0010 0446     		mov	r4, r0
6719:Core/Src/bno055.c ****     {
6720:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6721:Core/Src/bno055.c ****     }
6722:Core/Src/bno055.c ****     else
6723:Core/Src/bno055.c ****     {
6724:Core/Src/bno055.c ****         /*condition check for page, accel self test is
6725:Core/Src/bno055.c ****          * available in the page zero*/
6726:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
ARM GAS  /tmp/ccOloYeZ.s 			page 256


 7468              		.loc 1 6726 9 is_stmt 1 view .LVU2057
 7469              		.loc 1 6726 21 is_stmt 0 view .LVU2058
 7470 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7471              		.loc 1 6726 12 view .LVU2059
 7472 0014 9BB9     		cbnz	r3, .L582
 7473              	.LVL815:
 7474              	.L577:
6727:Core/Src/bno055.c ****         {
6728:Core/Src/bno055.c ****             /* Write the page zero*/
6729:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6730:Core/Src/bno055.c ****         }
6731:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7475              		.loc 1 6731 53 discriminator 1 view .LVU2060
 7476 0016 104B     		ldr	r3, .L583
 7477 0018 1B68     		ldr	r3, [r3]
 7478 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7479              		.loc 1 6731 41 discriminator 1 view .LVU2061
 7480 001c C3B9     		cbnz	r3, .L580
 7481              	.L578:
6732:Core/Src/bno055.c ****         {
6733:Core/Src/bno055.c ****             /* Read the accel self test */
6734:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7482              		.loc 1 6734 13 is_stmt 1 view .LVU2062
 7483              		.loc 1 6734 32 is_stmt 0 view .LVU2063
 7484 001e 0E4B     		ldr	r3, .L583
 7485 0020 1868     		ldr	r0, [r3]
 7486 0022 0569     		ldr	r5, [r0, #16]
 7487              		.loc 1 6734 24 view .LVU2064
 7488 0024 0123     		movs	r3, #1
 7489 0026 0DF10702 		add	r2, sp, #7
 7490 002a 3621     		movs	r1, #54
 7491 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7492 002e A847     		blx	r5
 7493              	.LVL816:
6735:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_ACCEL_REG,
6736:Core/Src/bno055.c ****                                                       &data_u8r,
6737:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6738:Core/Src/bno055.c ****             *selftest_accel_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST_ACCEL);
 7494              		.loc 1 6738 13 is_stmt 1 view .LVU2065
 7495              		.loc 1 6738 34 is_stmt 0 view .LVU2066
 7496 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7497 0034 03F00103 		and	r3, r3, #1
 7498              		.loc 1 6738 32 view .LVU2067
 7499 0038 2370     		strb	r3, [r4]
 7500              	.LVL817:
 7501              	.L576:
6739:Core/Src/bno055.c ****         }
6740:Core/Src/bno055.c ****         else
6741:Core/Src/bno055.c ****         {
6742:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6743:Core/Src/bno055.c ****         }
6744:Core/Src/bno055.c ****     }
6745:Core/Src/bno055.c **** 
6746:Core/Src/bno055.c ****     return com_rslt;
6747:Core/Src/bno055.c **** }
 7502              		.loc 1 6747 1 view .LVU2068
 7503 003a 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccOloYeZ.s 			page 257


 7504              		.cfi_remember_state
 7505              		.cfi_def_cfa_offset 12
 7506              		@ sp needed
 7507 003c 30BD     		pop	{r4, r5, pc}
 7508              	.LVL818:
 7509              	.L582:
 7510              		.cfi_restore_state
6729:Core/Src/bno055.c ****         }
 7511              		.loc 1 6729 13 is_stmt 1 view .LVU2069
6729:Core/Src/bno055.c ****         }
 7512              		.loc 1 6729 23 is_stmt 0 view .LVU2070
 7513 003e 0020     		movs	r0, #0
 7514              	.LVL819:
6729:Core/Src/bno055.c ****         }
 7515              		.loc 1 6729 23 view .LVU2071
 7516 0040 FFF7FEFF 		bl	bno055_write_page_id
 7517              	.LVL820:
6731:Core/Src/bno055.c ****         {
 7518              		.loc 1 6731 9 is_stmt 1 view .LVU2072
6731:Core/Src/bno055.c ****         {
 7519              		.loc 1 6731 12 is_stmt 0 view .LVU2073
 7520 0044 0028     		cmp	r0, #0
 7521 0046 EAD0     		beq	.L578
 7522 0048 E5E7     		b	.L577
 7523              	.LVL821:
 7524              	.L579:
6720:Core/Src/bno055.c ****     }
 7525              		.loc 1 6720 16 view .LVU2074
 7526 004a 6FF07E00 		mvn	r0, #126
 7527              	.LVL822:
6720:Core/Src/bno055.c ****     }
 7528              		.loc 1 6720 16 view .LVU2075
 7529 004e F4E7     		b	.L576
 7530              	.LVL823:
 7531              	.L580:
6742:Core/Src/bno055.c ****         }
 7532              		.loc 1 6742 22 view .LVU2076
 7533 0050 4FF0FF30 		mov	r0, #-1
 7534 0054 F1E7     		b	.L576
 7535              	.L584:
 7536 0056 00BF     		.align	2
 7537              	.L583:
 7538 0058 00000000 		.word	p_bno055
 7539              		.cfi_endproc
 7540              	.LFE121:
 7542              		.section	.text.bno055_get_selftest_mag,"ax",%progbits
 7543              		.align	1
 7544              		.global	bno055_get_selftest_mag
 7545              		.syntax unified
 7546              		.thumb
 7547              		.thumb_func
 7549              	bno055_get_selftest_mag:
 7550              	.LVL824:
 7551              	.LFB122:
6748:Core/Src/bno055.c **** 
6749:Core/Src/bno055.c **** /*!
6750:Core/Src/bno055.c ****  *  @brief This API used to read
ARM GAS  /tmp/ccOloYeZ.s 			page 258


6751:Core/Src/bno055.c ****  *  self test of mag from register from 0x36 bit 1
6752:Core/Src/bno055.c ****  *
6753:Core/Src/bno055.c ****  *  @param selftest_mag_u8 : The value of self test of mag
6754:Core/Src/bno055.c ****  *
6755:Core/Src/bno055.c ****  *     selftest_mag_u8  |  result
6756:Core/Src/bno055.c ****  *   -------------------- | ---------------------
6757:Core/Src/bno055.c ****  *     0x00               | indicates test failed
6758:Core/Src/bno055.c ****  *     0x01               | indicated test passed
6759:Core/Src/bno055.c ****  *
6760:Core/Src/bno055.c ****  *  @return results of bus communication function
6761:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6762:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6763:Core/Src/bno055.c ****  *
6764:Core/Src/bno055.c ****  */
6765:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest_mag(u8 *selftest_mag_u8)
6766:Core/Src/bno055.c **** {
 7552              		.loc 1 6766 1 is_stmt 1 view -0
 7553              		.cfi_startproc
 7554              		@ args = 0, pretend = 0, frame = 8
 7555              		@ frame_needed = 0, uses_anonymous_args = 0
 7556              		.loc 1 6766 1 is_stmt 0 view .LVU2078
 7557 0000 30B5     		push	{r4, r5, lr}
 7558              		.cfi_def_cfa_offset 12
 7559              		.cfi_offset 4, -12
 7560              		.cfi_offset 5, -8
 7561              		.cfi_offset 14, -4
 7562 0002 83B0     		sub	sp, sp, #12
 7563              		.cfi_def_cfa_offset 24
6767:Core/Src/bno055.c ****     /* Variable used to return value of
6768:Core/Src/bno055.c ****      * communication routine*/
6769:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7564              		.loc 1 6769 5 is_stmt 1 view .LVU2079
 7565              	.LVL825:
6770:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7566              		.loc 1 6770 5 view .LVU2080
 7567              		.loc 1 6770 8 is_stmt 0 view .LVU2081
 7568 0004 0023     		movs	r3, #0
 7569 0006 8DF80730 		strb	r3, [sp, #7]
6771:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7570              		.loc 1 6771 5 is_stmt 1 view .LVU2082
 7571              	.LVL826:
6772:Core/Src/bno055.c **** 
6773:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6774:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7572              		.loc 1 6774 5 view .LVU2083
 7573              		.loc 1 6774 18 is_stmt 0 view .LVU2084
 7574 000a 134B     		ldr	r3, .L593
 7575 000c 1B68     		ldr	r3, [r3]
 7576              		.loc 1 6774 8 view .LVU2085
 7577 000e E3B1     		cbz	r3, .L589
 7578 0010 0446     		mov	r4, r0
6775:Core/Src/bno055.c ****     {
6776:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6777:Core/Src/bno055.c ****     }
6778:Core/Src/bno055.c ****     else
6779:Core/Src/bno055.c ****     {
6780:Core/Src/bno055.c ****         /*condition check for page, self test of mag is
ARM GAS  /tmp/ccOloYeZ.s 			page 259


6781:Core/Src/bno055.c ****          * available in the page zero*/
6782:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7579              		.loc 1 6782 9 is_stmt 1 view .LVU2086
 7580              		.loc 1 6782 21 is_stmt 0 view .LVU2087
 7581 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7582              		.loc 1 6782 12 view .LVU2088
 7583 0014 9BB9     		cbnz	r3, .L592
 7584              	.LVL827:
 7585              	.L587:
6783:Core/Src/bno055.c ****         {
6784:Core/Src/bno055.c ****             /* Write the page zero*/
6785:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6786:Core/Src/bno055.c ****         }
6787:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7586              		.loc 1 6787 53 discriminator 1 view .LVU2089
 7587 0016 104B     		ldr	r3, .L593
 7588 0018 1B68     		ldr	r3, [r3]
 7589 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7590              		.loc 1 6787 41 discriminator 1 view .LVU2090
 7591 001c C3B9     		cbnz	r3, .L590
 7592              	.L588:
6788:Core/Src/bno055.c ****         {
6789:Core/Src/bno055.c ****             /* Read the mag self test */
6790:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7593              		.loc 1 6790 13 is_stmt 1 view .LVU2091
 7594              		.loc 1 6790 32 is_stmt 0 view .LVU2092
 7595 001e 0E4B     		ldr	r3, .L593
 7596 0020 1868     		ldr	r0, [r3]
 7597 0022 0569     		ldr	r5, [r0, #16]
 7598              		.loc 1 6790 24 view .LVU2093
 7599 0024 0123     		movs	r3, #1
 7600 0026 0DF10702 		add	r2, sp, #7
 7601 002a 3621     		movs	r1, #54
 7602 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7603 002e A847     		blx	r5
 7604              	.LVL828:
6791:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_MAG_REG,
6792:Core/Src/bno055.c ****                                                       &data_u8r,
6793:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6794:Core/Src/bno055.c ****             *selftest_mag_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST_MAG);
 7605              		.loc 1 6794 13 is_stmt 1 view .LVU2094
 7606              		.loc 1 6794 32 is_stmt 0 view .LVU2095
 7607 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7608 0034 C3F34003 		ubfx	r3, r3, #1, #1
 7609              		.loc 1 6794 30 view .LVU2096
 7610 0038 2370     		strb	r3, [r4]
 7611              	.LVL829:
 7612              	.L586:
6795:Core/Src/bno055.c ****         }
6796:Core/Src/bno055.c ****         else
6797:Core/Src/bno055.c ****         {
6798:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6799:Core/Src/bno055.c ****         }
6800:Core/Src/bno055.c ****     }
6801:Core/Src/bno055.c **** 
6802:Core/Src/bno055.c ****     return com_rslt;
6803:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccOloYeZ.s 			page 260


 7613              		.loc 1 6803 1 view .LVU2097
 7614 003a 03B0     		add	sp, sp, #12
 7615              		.cfi_remember_state
 7616              		.cfi_def_cfa_offset 12
 7617              		@ sp needed
 7618 003c 30BD     		pop	{r4, r5, pc}
 7619              	.LVL830:
 7620              	.L592:
 7621              		.cfi_restore_state
6785:Core/Src/bno055.c ****         }
 7622              		.loc 1 6785 13 is_stmt 1 view .LVU2098
6785:Core/Src/bno055.c ****         }
 7623              		.loc 1 6785 23 is_stmt 0 view .LVU2099
 7624 003e 0020     		movs	r0, #0
 7625              	.LVL831:
6785:Core/Src/bno055.c ****         }
 7626              		.loc 1 6785 23 view .LVU2100
 7627 0040 FFF7FEFF 		bl	bno055_write_page_id
 7628              	.LVL832:
6787:Core/Src/bno055.c ****         {
 7629              		.loc 1 6787 9 is_stmt 1 view .LVU2101
6787:Core/Src/bno055.c ****         {
 7630              		.loc 1 6787 12 is_stmt 0 view .LVU2102
 7631 0044 0028     		cmp	r0, #0
 7632 0046 EAD0     		beq	.L588
 7633 0048 E5E7     		b	.L587
 7634              	.LVL833:
 7635              	.L589:
6776:Core/Src/bno055.c ****     }
 7636              		.loc 1 6776 16 view .LVU2103
 7637 004a 6FF07E00 		mvn	r0, #126
 7638              	.LVL834:
6776:Core/Src/bno055.c ****     }
 7639              		.loc 1 6776 16 view .LVU2104
 7640 004e F4E7     		b	.L586
 7641              	.LVL835:
 7642              	.L590:
6798:Core/Src/bno055.c ****         }
 7643              		.loc 1 6798 22 view .LVU2105
 7644 0050 4FF0FF30 		mov	r0, #-1
 7645 0054 F1E7     		b	.L586
 7646              	.L594:
 7647 0056 00BF     		.align	2
 7648              	.L593:
 7649 0058 00000000 		.word	p_bno055
 7650              		.cfi_endproc
 7651              	.LFE122:
 7653              		.section	.text.bno055_get_selftest_gyro,"ax",%progbits
 7654              		.align	1
 7655              		.global	bno055_get_selftest_gyro
 7656              		.syntax unified
 7657              		.thumb
 7658              		.thumb_func
 7660              	bno055_get_selftest_gyro:
 7661              	.LVL836:
 7662              	.LFB123:
6804:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 261


6805:Core/Src/bno055.c **** /*!
6806:Core/Src/bno055.c ****  *  @brief This API used to read
6807:Core/Src/bno055.c ****  *  self test of gyro from register from 0x36 bit 2
6808:Core/Src/bno055.c ****  *
6809:Core/Src/bno055.c ****  *  @param selftest_gyro_u8 : The value of self test of gyro
6810:Core/Src/bno055.c ****  *
6811:Core/Src/bno055.c ****  *     selftest_gyro_u8 |  result
6812:Core/Src/bno055.c ****  *   -------------------- | ---------------------
6813:Core/Src/bno055.c ****  *     0x00               | indicates test failed
6814:Core/Src/bno055.c ****  *     0x01               | indicated test passed
6815:Core/Src/bno055.c ****  *
6816:Core/Src/bno055.c ****  *  @return results of bus communication function
6817:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6818:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6819:Core/Src/bno055.c ****  *
6820:Core/Src/bno055.c ****  */
6821:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest_gyro(u8 *selftest_gyro_u8)
6822:Core/Src/bno055.c **** {
 7663              		.loc 1 6822 1 is_stmt 1 view -0
 7664              		.cfi_startproc
 7665              		@ args = 0, pretend = 0, frame = 8
 7666              		@ frame_needed = 0, uses_anonymous_args = 0
 7667              		.loc 1 6822 1 is_stmt 0 view .LVU2107
 7668 0000 30B5     		push	{r4, r5, lr}
 7669              		.cfi_def_cfa_offset 12
 7670              		.cfi_offset 4, -12
 7671              		.cfi_offset 5, -8
 7672              		.cfi_offset 14, -4
 7673 0002 83B0     		sub	sp, sp, #12
 7674              		.cfi_def_cfa_offset 24
6823:Core/Src/bno055.c ****     /* Variable used to return value of
6824:Core/Src/bno055.c ****      * communication routine*/
6825:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7675              		.loc 1 6825 5 is_stmt 1 view .LVU2108
 7676              	.LVL837:
6826:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7677              		.loc 1 6826 5 view .LVU2109
 7678              		.loc 1 6826 8 is_stmt 0 view .LVU2110
 7679 0004 0023     		movs	r3, #0
 7680 0006 8DF80730 		strb	r3, [sp, #7]
6827:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7681              		.loc 1 6827 5 is_stmt 1 view .LVU2111
 7682              	.LVL838:
6828:Core/Src/bno055.c **** 
6829:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6830:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7683              		.loc 1 6830 5 view .LVU2112
 7684              		.loc 1 6830 18 is_stmt 0 view .LVU2113
 7685 000a 134B     		ldr	r3, .L603
 7686 000c 1B68     		ldr	r3, [r3]
 7687              		.loc 1 6830 8 view .LVU2114
 7688 000e E3B1     		cbz	r3, .L599
 7689 0010 0446     		mov	r4, r0
6831:Core/Src/bno055.c ****     {
6832:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6833:Core/Src/bno055.c ****     }
6834:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccOloYeZ.s 			page 262


6835:Core/Src/bno055.c ****     {
6836:Core/Src/bno055.c ****         /*condition check for page self test of gyro is
6837:Core/Src/bno055.c ****          * available in the page zero*/
6838:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7690              		.loc 1 6838 9 is_stmt 1 view .LVU2115
 7691              		.loc 1 6838 21 is_stmt 0 view .LVU2116
 7692 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7693              		.loc 1 6838 12 view .LVU2117
 7694 0014 9BB9     		cbnz	r3, .L602
 7695              	.LVL839:
 7696              	.L597:
6839:Core/Src/bno055.c ****         {
6840:Core/Src/bno055.c ****             /* Write the page zero*/
6841:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6842:Core/Src/bno055.c ****         }
6843:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7697              		.loc 1 6843 53 discriminator 1 view .LVU2118
 7698 0016 104B     		ldr	r3, .L603
 7699 0018 1B68     		ldr	r3, [r3]
 7700 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7701              		.loc 1 6843 41 discriminator 1 view .LVU2119
 7702 001c C3B9     		cbnz	r3, .L600
 7703              	.L598:
6844:Core/Src/bno055.c ****         {
6845:Core/Src/bno055.c ****             /* Read the gyro self test */
6846:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7704              		.loc 1 6846 13 is_stmt 1 view .LVU2120
 7705              		.loc 1 6846 32 is_stmt 0 view .LVU2121
 7706 001e 0E4B     		ldr	r3, .L603
 7707 0020 1868     		ldr	r0, [r3]
 7708 0022 0569     		ldr	r5, [r0, #16]
 7709              		.loc 1 6846 24 view .LVU2122
 7710 0024 0123     		movs	r3, #1
 7711 0026 0DF10702 		add	r2, sp, #7
 7712 002a 3621     		movs	r1, #54
 7713 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7714 002e A847     		blx	r5
 7715              	.LVL840:
6847:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_GYRO_REG,
6848:Core/Src/bno055.c ****                                                       &data_u8r,
6849:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6850:Core/Src/bno055.c ****             *selftest_gyro_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST_GYRO);
 7716              		.loc 1 6850 13 is_stmt 1 view .LVU2123
 7717              		.loc 1 6850 33 is_stmt 0 view .LVU2124
 7718 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7719 0034 C3F38003 		ubfx	r3, r3, #2, #1
 7720              		.loc 1 6850 31 view .LVU2125
 7721 0038 2370     		strb	r3, [r4]
 7722              	.LVL841:
 7723              	.L596:
6851:Core/Src/bno055.c ****         }
6852:Core/Src/bno055.c ****         else
6853:Core/Src/bno055.c ****         {
6854:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6855:Core/Src/bno055.c ****         }
6856:Core/Src/bno055.c ****     }
6857:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 263


6858:Core/Src/bno055.c ****     return com_rslt;
6859:Core/Src/bno055.c **** }
 7724              		.loc 1 6859 1 view .LVU2126
 7725 003a 03B0     		add	sp, sp, #12
 7726              		.cfi_remember_state
 7727              		.cfi_def_cfa_offset 12
 7728              		@ sp needed
 7729 003c 30BD     		pop	{r4, r5, pc}
 7730              	.LVL842:
 7731              	.L602:
 7732              		.cfi_restore_state
6841:Core/Src/bno055.c ****         }
 7733              		.loc 1 6841 13 is_stmt 1 view .LVU2127
6841:Core/Src/bno055.c ****         }
 7734              		.loc 1 6841 23 is_stmt 0 view .LVU2128
 7735 003e 0020     		movs	r0, #0
 7736              	.LVL843:
6841:Core/Src/bno055.c ****         }
 7737              		.loc 1 6841 23 view .LVU2129
 7738 0040 FFF7FEFF 		bl	bno055_write_page_id
 7739              	.LVL844:
6843:Core/Src/bno055.c ****         {
 7740              		.loc 1 6843 9 is_stmt 1 view .LVU2130
6843:Core/Src/bno055.c ****         {
 7741              		.loc 1 6843 12 is_stmt 0 view .LVU2131
 7742 0044 0028     		cmp	r0, #0
 7743 0046 EAD0     		beq	.L598
 7744 0048 E5E7     		b	.L597
 7745              	.LVL845:
 7746              	.L599:
6832:Core/Src/bno055.c ****     }
 7747              		.loc 1 6832 16 view .LVU2132
 7748 004a 6FF07E00 		mvn	r0, #126
 7749              	.LVL846:
6832:Core/Src/bno055.c ****     }
 7750              		.loc 1 6832 16 view .LVU2133
 7751 004e F4E7     		b	.L596
 7752              	.LVL847:
 7753              	.L600:
6854:Core/Src/bno055.c ****         }
 7754              		.loc 1 6854 22 view .LVU2134
 7755 0050 4FF0FF30 		mov	r0, #-1
 7756 0054 F1E7     		b	.L596
 7757              	.L604:
 7758 0056 00BF     		.align	2
 7759              	.L603:
 7760 0058 00000000 		.word	p_bno055
 7761              		.cfi_endproc
 7762              	.LFE123:
 7764              		.section	.text.bno055_get_selftest_mcu,"ax",%progbits
 7765              		.align	1
 7766              		.global	bno055_get_selftest_mcu
 7767              		.syntax unified
 7768              		.thumb
 7769              		.thumb_func
 7771              	bno055_get_selftest_mcu:
 7772              	.LVL848:
ARM GAS  /tmp/ccOloYeZ.s 			page 264


 7773              	.LFB124:
6860:Core/Src/bno055.c **** 
6861:Core/Src/bno055.c **** /*!
6862:Core/Src/bno055.c ****  *  @brief This API used to read
6863:Core/Src/bno055.c ****  *  self test of micro controller from register from 0x36 bit 3
6864:Core/Src/bno055.c ****  *
6865:Core/Src/bno055.c ****  *  @param selftest_mcu_u8 : The value of self test of micro controller
6866:Core/Src/bno055.c ****  *
6867:Core/Src/bno055.c ****  *     selftest_mcu_u8  |  result
6868:Core/Src/bno055.c ****  *   -------------------- | ---------------------
6869:Core/Src/bno055.c ****  *     0x00               | indicates test failed
6870:Core/Src/bno055.c ****  *     0x01               | indicated test passed
6871:Core/Src/bno055.c ****  *
6872:Core/Src/bno055.c ****  *  @return results of bus communication function
6873:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6874:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6875:Core/Src/bno055.c ****  *
6876:Core/Src/bno055.c ****  */
6877:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest_mcu(u8 *selftest_mcu_u8)
6878:Core/Src/bno055.c **** {
 7774              		.loc 1 6878 1 is_stmt 1 view -0
 7775              		.cfi_startproc
 7776              		@ args = 0, pretend = 0, frame = 8
 7777              		@ frame_needed = 0, uses_anonymous_args = 0
 7778              		.loc 1 6878 1 is_stmt 0 view .LVU2136
 7779 0000 30B5     		push	{r4, r5, lr}
 7780              		.cfi_def_cfa_offset 12
 7781              		.cfi_offset 4, -12
 7782              		.cfi_offset 5, -8
 7783              		.cfi_offset 14, -4
 7784 0002 83B0     		sub	sp, sp, #12
 7785              		.cfi_def_cfa_offset 24
6879:Core/Src/bno055.c ****     /* Variable used to return value of
6880:Core/Src/bno055.c ****      * communication routine*/
6881:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7786              		.loc 1 6881 5 is_stmt 1 view .LVU2137
 7787              	.LVL849:
6882:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7788              		.loc 1 6882 5 view .LVU2138
 7789              		.loc 1 6882 8 is_stmt 0 view .LVU2139
 7790 0004 0023     		movs	r3, #0
 7791 0006 8DF80730 		strb	r3, [sp, #7]
6883:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7792              		.loc 1 6883 5 is_stmt 1 view .LVU2140
 7793              	.LVL850:
6884:Core/Src/bno055.c **** 
6885:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6886:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7794              		.loc 1 6886 5 view .LVU2141
 7795              		.loc 1 6886 18 is_stmt 0 view .LVU2142
 7796 000a 134B     		ldr	r3, .L613
 7797 000c 1B68     		ldr	r3, [r3]
 7798              		.loc 1 6886 8 view .LVU2143
 7799 000e E3B1     		cbz	r3, .L609
 7800 0010 0446     		mov	r4, r0
6887:Core/Src/bno055.c ****     {
6888:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
ARM GAS  /tmp/ccOloYeZ.s 			page 265


6889:Core/Src/bno055.c ****     }
6890:Core/Src/bno055.c ****     else
6891:Core/Src/bno055.c ****     {
6892:Core/Src/bno055.c ****         /*condition check for page self test of micro controller
6893:Core/Src/bno055.c ****          * is available in the page zero*/
6894:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7801              		.loc 1 6894 9 is_stmt 1 view .LVU2144
 7802              		.loc 1 6894 21 is_stmt 0 view .LVU2145
 7803 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7804              		.loc 1 6894 12 view .LVU2146
 7805 0014 9BB9     		cbnz	r3, .L612
 7806              	.LVL851:
 7807              	.L607:
6895:Core/Src/bno055.c ****         {
6896:Core/Src/bno055.c ****             /* Write the page zero*/
6897:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6898:Core/Src/bno055.c ****         }
6899:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7808              		.loc 1 6899 53 discriminator 1 view .LVU2147
 7809 0016 104B     		ldr	r3, .L613
 7810 0018 1B68     		ldr	r3, [r3]
 7811 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7812              		.loc 1 6899 41 discriminator 1 view .LVU2148
 7813 001c C3B9     		cbnz	r3, .L610
 7814              	.L608:
6900:Core/Src/bno055.c ****         {
6901:Core/Src/bno055.c ****             /* Read the self test of micro controller*/
6902:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7815              		.loc 1 6902 13 is_stmt 1 view .LVU2149
 7816              		.loc 1 6902 32 is_stmt 0 view .LVU2150
 7817 001e 0E4B     		ldr	r3, .L613
 7818 0020 1868     		ldr	r0, [r3]
 7819 0022 0569     		ldr	r5, [r0, #16]
 7820              		.loc 1 6902 24 view .LVU2151
 7821 0024 0123     		movs	r3, #1
 7822 0026 0DF10702 		add	r2, sp, #7
 7823 002a 3621     		movs	r1, #54
 7824 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7825 002e A847     		blx	r5
 7826              	.LVL852:
6903:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_MCU_REG,
6904:Core/Src/bno055.c ****                                                       &data_u8r,
6905:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6906:Core/Src/bno055.c ****             *selftest_mcu_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST_MCU);
 7827              		.loc 1 6906 13 is_stmt 1 view .LVU2152
 7828              		.loc 1 6906 32 is_stmt 0 view .LVU2153
 7829 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7830 0034 C3F3C003 		ubfx	r3, r3, #3, #1
 7831              		.loc 1 6906 30 view .LVU2154
 7832 0038 2370     		strb	r3, [r4]
 7833              	.LVL853:
 7834              	.L606:
6907:Core/Src/bno055.c ****         }
6908:Core/Src/bno055.c ****         else
6909:Core/Src/bno055.c ****         {
6910:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6911:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 266


6912:Core/Src/bno055.c ****     }
6913:Core/Src/bno055.c **** 
6914:Core/Src/bno055.c ****     return com_rslt;
6915:Core/Src/bno055.c **** }
 7835              		.loc 1 6915 1 view .LVU2155
 7836 003a 03B0     		add	sp, sp, #12
 7837              		.cfi_remember_state
 7838              		.cfi_def_cfa_offset 12
 7839              		@ sp needed
 7840 003c 30BD     		pop	{r4, r5, pc}
 7841              	.LVL854:
 7842              	.L612:
 7843              		.cfi_restore_state
6897:Core/Src/bno055.c ****         }
 7844              		.loc 1 6897 13 is_stmt 1 view .LVU2156
6897:Core/Src/bno055.c ****         }
 7845              		.loc 1 6897 23 is_stmt 0 view .LVU2157
 7846 003e 0020     		movs	r0, #0
 7847              	.LVL855:
6897:Core/Src/bno055.c ****         }
 7848              		.loc 1 6897 23 view .LVU2158
 7849 0040 FFF7FEFF 		bl	bno055_write_page_id
 7850              	.LVL856:
6899:Core/Src/bno055.c ****         {
 7851              		.loc 1 6899 9 is_stmt 1 view .LVU2159
6899:Core/Src/bno055.c ****         {
 7852              		.loc 1 6899 12 is_stmt 0 view .LVU2160
 7853 0044 0028     		cmp	r0, #0
 7854 0046 EAD0     		beq	.L608
 7855 0048 E5E7     		b	.L607
 7856              	.LVL857:
 7857              	.L609:
6888:Core/Src/bno055.c ****     }
 7858              		.loc 1 6888 16 view .LVU2161
 7859 004a 6FF07E00 		mvn	r0, #126
 7860              	.LVL858:
6888:Core/Src/bno055.c ****     }
 7861              		.loc 1 6888 16 view .LVU2162
 7862 004e F4E7     		b	.L606
 7863              	.LVL859:
 7864              	.L610:
6910:Core/Src/bno055.c ****         }
 7865              		.loc 1 6910 22 view .LVU2163
 7866 0050 4FF0FF30 		mov	r0, #-1
 7867 0054 F1E7     		b	.L606
 7868              	.L614:
 7869 0056 00BF     		.align	2
 7870              	.L613:
 7871 0058 00000000 		.word	p_bno055
 7872              		.cfi_endproc
 7873              	.LFE124:
 7875              		.section	.text.bno055_get_intr_stat_gyro_any_motion,"ax",%progbits
 7876              		.align	1
 7877              		.global	bno055_get_intr_stat_gyro_any_motion
 7878              		.syntax unified
 7879              		.thumb
 7880              		.thumb_func
ARM GAS  /tmp/ccOloYeZ.s 			page 267


 7882              	bno055_get_intr_stat_gyro_any_motion:
 7883              	.LVL860:
 7884              	.LFB125:
6916:Core/Src/bno055.c **** 
6917:Core/Src/bno055.c **** /*!
6918:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
6919:Core/Src/bno055.c ****  *  gyro anymotion interrupt from register from 0x37 bit 2
6920:Core/Src/bno055.c ****  *
6921:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt
6922:Core/Src/bno055.c ****  *
6923:Core/Src/bno055.c ****  *     gyro_any_motion_u8  |  result
6924:Core/Src/bno055.c ****  *    --------------------   | ---------------------
6925:Core/Src/bno055.c ****  *     0x00                  | indicates no interrupt triggered
6926:Core/Src/bno055.c ****  *     0x01                  | indicates interrupt triggered
6927:Core/Src/bno055.c ****  *
6928:Core/Src/bno055.c ****  *  @return results of bus communication function
6929:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6930:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6931:Core/Src/bno055.c ****  *
6932:Core/Src/bno055.c ****  *  @note Gyro anymotion interrupt can be BNO055_BIT_ENABLE
6933:Core/Src/bno055.c ****  *  by the following APIs
6934:Core/Src/bno055.c ****  *
6935:Core/Src/bno055.c ****  *  bno055_set_intr_mask_gyro_any_motion()
6936:Core/Src/bno055.c ****  *
6937:Core/Src/bno055.c ****  *  bno055_set_intr_gyro_any_motion()
6938:Core/Src/bno055.c ****  *
6939:Core/Src/bno055.c ****  */
6940:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_gyro_any_motion(u8 *gyro_any_motion_u8)
6941:Core/Src/bno055.c **** {
 7885              		.loc 1 6941 1 is_stmt 1 view -0
 7886              		.cfi_startproc
 7887              		@ args = 0, pretend = 0, frame = 8
 7888              		@ frame_needed = 0, uses_anonymous_args = 0
 7889              		.loc 1 6941 1 is_stmt 0 view .LVU2165
 7890 0000 30B5     		push	{r4, r5, lr}
 7891              		.cfi_def_cfa_offset 12
 7892              		.cfi_offset 4, -12
 7893              		.cfi_offset 5, -8
 7894              		.cfi_offset 14, -4
 7895 0002 83B0     		sub	sp, sp, #12
 7896              		.cfi_def_cfa_offset 24
6942:Core/Src/bno055.c ****     /* Variable used to return value of
6943:Core/Src/bno055.c ****      * communication routine*/
6944:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7897              		.loc 1 6944 5 is_stmt 1 view .LVU2166
 7898              	.LVL861:
6945:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7899              		.loc 1 6945 5 view .LVU2167
 7900              		.loc 1 6945 8 is_stmt 0 view .LVU2168
 7901 0004 0023     		movs	r3, #0
 7902 0006 8DF80730 		strb	r3, [sp, #7]
6946:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7903              		.loc 1 6946 5 is_stmt 1 view .LVU2169
 7904              	.LVL862:
6947:Core/Src/bno055.c **** 
6948:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6949:Core/Src/bno055.c ****     if (p_bno055 == NULL)
ARM GAS  /tmp/ccOloYeZ.s 			page 268


 7905              		.loc 1 6949 5 view .LVU2170
 7906              		.loc 1 6949 18 is_stmt 0 view .LVU2171
 7907 000a 134B     		ldr	r3, .L623
 7908 000c 1B68     		ldr	r3, [r3]
 7909              		.loc 1 6949 8 view .LVU2172
 7910 000e E3B1     		cbz	r3, .L619
 7911 0010 0446     		mov	r4, r0
6950:Core/Src/bno055.c ****     {
6951:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6952:Core/Src/bno055.c ****     }
6953:Core/Src/bno055.c ****     else
6954:Core/Src/bno055.c ****     {
6955:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion interrupt
6956:Core/Src/bno055.c ****          * status is available in the page zero*/
6957:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7912              		.loc 1 6957 9 is_stmt 1 view .LVU2173
 7913              		.loc 1 6957 21 is_stmt 0 view .LVU2174
 7914 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7915              		.loc 1 6957 12 view .LVU2175
 7916 0014 9BB9     		cbnz	r3, .L622
 7917              	.LVL863:
 7918              	.L617:
6958:Core/Src/bno055.c ****         {
6959:Core/Src/bno055.c ****             /* Write the page zero*/
6960:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6961:Core/Src/bno055.c ****         }
6962:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7919              		.loc 1 6962 53 discriminator 1 view .LVU2176
 7920 0016 104B     		ldr	r3, .L623
 7921 0018 1B68     		ldr	r3, [r3]
 7922 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7923              		.loc 1 6962 41 discriminator 1 view .LVU2177
 7924 001c C3B9     		cbnz	r3, .L620
 7925              	.L618:
6963:Core/Src/bno055.c ****         {
6964:Core/Src/bno055.c ****             /* Read the gyro anymotion interrupt stat_s8*/
6965:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7926              		.loc 1 6965 13 is_stmt 1 view .LVU2178
 7927              		.loc 1 6965 32 is_stmt 0 view .LVU2179
 7928 001e 0E4B     		ldr	r3, .L623
 7929 0020 1868     		ldr	r0, [r3]
 7930 0022 0569     		ldr	r5, [r0, #16]
 7931              		.loc 1 6965 24 view .LVU2180
 7932 0024 0123     		movs	r3, #1
 7933 0026 0DF10702 		add	r2, sp, #7
 7934 002a 3721     		movs	r1, #55
 7935 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7936 002e A847     		blx	r5
 7937              	.LVL864:
6966:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_GYRO_ANY_MOTION_REG,
6967:Core/Src/bno055.c ****                                                       &data_u8r,
6968:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6969:Core/Src/bno055.c ****             *gyro_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_GYRO_ANY_MOTION);
 7938              		.loc 1 6969 13 is_stmt 1 view .LVU2181
 7939              		.loc 1 6969 35 is_stmt 0 view .LVU2182
 7940 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7941 0034 C3F38003 		ubfx	r3, r3, #2, #1
ARM GAS  /tmp/ccOloYeZ.s 			page 269


 7942              		.loc 1 6969 33 view .LVU2183
 7943 0038 2370     		strb	r3, [r4]
 7944              	.LVL865:
 7945              	.L616:
6970:Core/Src/bno055.c ****         }
6971:Core/Src/bno055.c ****         else
6972:Core/Src/bno055.c ****         {
6973:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6974:Core/Src/bno055.c ****         }
6975:Core/Src/bno055.c ****     }
6976:Core/Src/bno055.c **** 
6977:Core/Src/bno055.c ****     return com_rslt;
6978:Core/Src/bno055.c **** }
 7946              		.loc 1 6978 1 view .LVU2184
 7947 003a 03B0     		add	sp, sp, #12
 7948              		.cfi_remember_state
 7949              		.cfi_def_cfa_offset 12
 7950              		@ sp needed
 7951 003c 30BD     		pop	{r4, r5, pc}
 7952              	.LVL866:
 7953              	.L622:
 7954              		.cfi_restore_state
6960:Core/Src/bno055.c ****         }
 7955              		.loc 1 6960 13 is_stmt 1 view .LVU2185
6960:Core/Src/bno055.c ****         }
 7956              		.loc 1 6960 23 is_stmt 0 view .LVU2186
 7957 003e 0020     		movs	r0, #0
 7958              	.LVL867:
6960:Core/Src/bno055.c ****         }
 7959              		.loc 1 6960 23 view .LVU2187
 7960 0040 FFF7FEFF 		bl	bno055_write_page_id
 7961              	.LVL868:
6962:Core/Src/bno055.c ****         {
 7962              		.loc 1 6962 9 is_stmt 1 view .LVU2188
6962:Core/Src/bno055.c ****         {
 7963              		.loc 1 6962 12 is_stmt 0 view .LVU2189
 7964 0044 0028     		cmp	r0, #0
 7965 0046 EAD0     		beq	.L618
 7966 0048 E5E7     		b	.L617
 7967              	.LVL869:
 7968              	.L619:
6951:Core/Src/bno055.c ****     }
 7969              		.loc 1 6951 16 view .LVU2190
 7970 004a 6FF07E00 		mvn	r0, #126
 7971              	.LVL870:
6951:Core/Src/bno055.c ****     }
 7972              		.loc 1 6951 16 view .LVU2191
 7973 004e F4E7     		b	.L616
 7974              	.LVL871:
 7975              	.L620:
6973:Core/Src/bno055.c ****         }
 7976              		.loc 1 6973 22 view .LVU2192
 7977 0050 4FF0FF30 		mov	r0, #-1
 7978 0054 F1E7     		b	.L616
 7979              	.L624:
 7980 0056 00BF     		.align	2
 7981              	.L623:
ARM GAS  /tmp/ccOloYeZ.s 			page 270


 7982 0058 00000000 		.word	p_bno055
 7983              		.cfi_endproc
 7984              	.LFE125:
 7986              		.section	.text.bno055_get_intr_stat_gyro_highrate,"ax",%progbits
 7987              		.align	1
 7988              		.global	bno055_get_intr_stat_gyro_highrate
 7989              		.syntax unified
 7990              		.thumb
 7991              		.thumb_func
 7993              	bno055_get_intr_stat_gyro_highrate:
 7994              	.LVL872:
 7995              	.LFB126:
6979:Core/Src/bno055.c **** 
6980:Core/Src/bno055.c **** /*!
6981:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
6982:Core/Src/bno055.c ****  *  gyro highrate interrupt from register from 0x37 bit 3
6983:Core/Src/bno055.c ****  *
6984:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt
6985:Core/Src/bno055.c ****  *
6986:Core/Src/bno055.c ****  *     gyro_highrate_u8   |  result
6987:Core/Src/bno055.c ****  *    -------------------   | ---------------------
6988:Core/Src/bno055.c ****  *     0x00                 | indicates no interrupt triggered
6989:Core/Src/bno055.c ****  *     0x01                 | indicates interrupt triggered
6990:Core/Src/bno055.c ****  *
6991:Core/Src/bno055.c ****  *  @return results of bus communication function
6992:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6993:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6994:Core/Src/bno055.c ****  *
6995:Core/Src/bno055.c ****  *  @note Gyro highrate interrupt can be configured
6996:Core/Src/bno055.c ****  *          by the following APIs
6997:Core/Src/bno055.c ****  *
6998:Core/Src/bno055.c ****  *  bno055_set_intr_mask_gyro_highrate()
6999:Core/Src/bno055.c ****  *
7000:Core/Src/bno055.c ****  *  bno055_set_intr_gyro_highrate()
7001:Core/Src/bno055.c ****  */
7002:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_gyro_highrate(u8 *gyro_highrate_u8)
7003:Core/Src/bno055.c **** {
 7996              		.loc 1 7003 1 is_stmt 1 view -0
 7997              		.cfi_startproc
 7998              		@ args = 0, pretend = 0, frame = 8
 7999              		@ frame_needed = 0, uses_anonymous_args = 0
 8000              		.loc 1 7003 1 is_stmt 0 view .LVU2194
 8001 0000 30B5     		push	{r4, r5, lr}
 8002              		.cfi_def_cfa_offset 12
 8003              		.cfi_offset 4, -12
 8004              		.cfi_offset 5, -8
 8005              		.cfi_offset 14, -4
 8006 0002 83B0     		sub	sp, sp, #12
 8007              		.cfi_def_cfa_offset 24
7004:Core/Src/bno055.c ****     /* Variable used to return value of
7005:Core/Src/bno055.c ****      * communication routine*/
7006:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8008              		.loc 1 7006 5 is_stmt 1 view .LVU2195
 8009              	.LVL873:
7007:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8010              		.loc 1 7007 5 view .LVU2196
 8011              		.loc 1 7007 8 is_stmt 0 view .LVU2197
ARM GAS  /tmp/ccOloYeZ.s 			page 271


 8012 0004 0023     		movs	r3, #0
 8013 0006 8DF80730 		strb	r3, [sp, #7]
7008:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8014              		.loc 1 7008 5 is_stmt 1 view .LVU2198
 8015              	.LVL874:
7009:Core/Src/bno055.c **** 
7010:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7011:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8016              		.loc 1 7011 5 view .LVU2199
 8017              		.loc 1 7011 18 is_stmt 0 view .LVU2200
 8018 000a 134B     		ldr	r3, .L633
 8019 000c 1B68     		ldr	r3, [r3]
 8020              		.loc 1 7011 8 view .LVU2201
 8021 000e E3B1     		cbz	r3, .L629
 8022 0010 0446     		mov	r4, r0
7012:Core/Src/bno055.c ****     {
7013:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7014:Core/Src/bno055.c ****     }
7015:Core/Src/bno055.c ****     else
7016:Core/Src/bno055.c ****     {
7017:Core/Src/bno055.c ****         /*condition check for page, gyro highrate is
7018:Core/Src/bno055.c ****          * available in the page zero*/
7019:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8023              		.loc 1 7019 9 is_stmt 1 view .LVU2202
 8024              		.loc 1 7019 21 is_stmt 0 view .LVU2203
 8025 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8026              		.loc 1 7019 12 view .LVU2204
 8027 0014 9BB9     		cbnz	r3, .L632
 8028              	.LVL875:
 8029              	.L627:
7020:Core/Src/bno055.c ****         {
7021:Core/Src/bno055.c ****             /* Write the page zero*/
7022:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7023:Core/Src/bno055.c ****         }
7024:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8030              		.loc 1 7024 53 discriminator 1 view .LVU2205
 8031 0016 104B     		ldr	r3, .L633
 8032 0018 1B68     		ldr	r3, [r3]
 8033 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8034              		.loc 1 7024 41 discriminator 1 view .LVU2206
 8035 001c C3B9     		cbnz	r3, .L630
 8036              	.L628:
7025:Core/Src/bno055.c ****         {
7026:Core/Src/bno055.c ****             /* Read the gyro highrate interrupt stat_s8*/
7027:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8037              		.loc 1 7027 13 is_stmt 1 view .LVU2207
 8038              		.loc 1 7027 32 is_stmt 0 view .LVU2208
 8039 001e 0E4B     		ldr	r3, .L633
 8040 0020 1868     		ldr	r0, [r3]
 8041 0022 0569     		ldr	r5, [r0, #16]
 8042              		.loc 1 7027 24 view .LVU2209
 8043 0024 0123     		movs	r3, #1
 8044 0026 0DF10702 		add	r2, sp, #7
 8045 002a 3721     		movs	r1, #55
 8046 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8047 002e A847     		blx	r5
 8048              	.LVL876:
ARM GAS  /tmp/ccOloYeZ.s 			page 272


7028:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_GYRO_HIGHRATE_REG,
7029:Core/Src/bno055.c ****                                                       &data_u8r,
7030:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7031:Core/Src/bno055.c ****             *gyro_highrate_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_GYRO_HIGHRATE);
 8049              		.loc 1 7031 13 is_stmt 1 view .LVU2210
 8050              		.loc 1 7031 33 is_stmt 0 view .LVU2211
 8051 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8052 0034 C3F3C003 		ubfx	r3, r3, #3, #1
 8053              		.loc 1 7031 31 view .LVU2212
 8054 0038 2370     		strb	r3, [r4]
 8055              	.LVL877:
 8056              	.L626:
7032:Core/Src/bno055.c ****         }
7033:Core/Src/bno055.c ****         else
7034:Core/Src/bno055.c ****         {
7035:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7036:Core/Src/bno055.c ****         }
7037:Core/Src/bno055.c ****     }
7038:Core/Src/bno055.c **** 
7039:Core/Src/bno055.c ****     return com_rslt;
7040:Core/Src/bno055.c **** }
 8057              		.loc 1 7040 1 view .LVU2213
 8058 003a 03B0     		add	sp, sp, #12
 8059              		.cfi_remember_state
 8060              		.cfi_def_cfa_offset 12
 8061              		@ sp needed
 8062 003c 30BD     		pop	{r4, r5, pc}
 8063              	.LVL878:
 8064              	.L632:
 8065              		.cfi_restore_state
7022:Core/Src/bno055.c ****         }
 8066              		.loc 1 7022 13 is_stmt 1 view .LVU2214
7022:Core/Src/bno055.c ****         }
 8067              		.loc 1 7022 23 is_stmt 0 view .LVU2215
 8068 003e 0020     		movs	r0, #0
 8069              	.LVL879:
7022:Core/Src/bno055.c ****         }
 8070              		.loc 1 7022 23 view .LVU2216
 8071 0040 FFF7FEFF 		bl	bno055_write_page_id
 8072              	.LVL880:
7024:Core/Src/bno055.c ****         {
 8073              		.loc 1 7024 9 is_stmt 1 view .LVU2217
7024:Core/Src/bno055.c ****         {
 8074              		.loc 1 7024 12 is_stmt 0 view .LVU2218
 8075 0044 0028     		cmp	r0, #0
 8076 0046 EAD0     		beq	.L628
 8077 0048 E5E7     		b	.L627
 8078              	.LVL881:
 8079              	.L629:
7013:Core/Src/bno055.c ****     }
 8080              		.loc 1 7013 16 view .LVU2219
 8081 004a 6FF07E00 		mvn	r0, #126
 8082              	.LVL882:
7013:Core/Src/bno055.c ****     }
 8083              		.loc 1 7013 16 view .LVU2220
 8084 004e F4E7     		b	.L626
 8085              	.LVL883:
ARM GAS  /tmp/ccOloYeZ.s 			page 273


 8086              	.L630:
7035:Core/Src/bno055.c ****         }
 8087              		.loc 1 7035 22 view .LVU2221
 8088 0050 4FF0FF30 		mov	r0, #-1
 8089 0054 F1E7     		b	.L626
 8090              	.L634:
 8091 0056 00BF     		.align	2
 8092              	.L633:
 8093 0058 00000000 		.word	p_bno055
 8094              		.cfi_endproc
 8095              	.LFE126:
 8097              		.section	.text.bno055_get_intr_stat_accel_high_g,"ax",%progbits
 8098              		.align	1
 8099              		.global	bno055_get_intr_stat_accel_high_g
 8100              		.syntax unified
 8101              		.thumb
 8102              		.thumb_func
 8104              	bno055_get_intr_stat_accel_high_g:
 8105              	.LVL884:
 8106              	.LFB127:
7041:Core/Src/bno055.c **** 
7042:Core/Src/bno055.c **** /*!
7043:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
7044:Core/Src/bno055.c ****  *  accel highg interrupt from register from 0x37 bit 5
7045:Core/Src/bno055.c ****  *
7046:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt
7047:Core/Src/bno055.c ****  *
7048:Core/Src/bno055.c ****  *     accel_high_g_u8    |  result
7049:Core/Src/bno055.c ****  *    -------------------   | ---------------------
7050:Core/Src/bno055.c ****  *     0x00                 | indicates no interrupt triggered
7051:Core/Src/bno055.c ****  *     0x01                 | indicates interrupt triggered
7052:Core/Src/bno055.c ****  *
7053:Core/Src/bno055.c ****  *  @return results of bus communication function
7054:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7055:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7056:Core/Src/bno055.c ****  *
7057:Core/Src/bno055.c ****  *  @note Accel highg interrupt can be configured
7058:Core/Src/bno055.c ****  *          by the following APIs
7059:Core/Src/bno055.c ****  *
7060:Core/Src/bno055.c ****  *  bno055_set_intr_mask_accel_high_g()
7061:Core/Src/bno055.c ****  *
7062:Core/Src/bno055.c ****  *  bno055_set_intr_accel_high_g()
7063:Core/Src/bno055.c ****  *
7064:Core/Src/bno055.c ****  */
7065:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_accel_high_g(u8 *accel_high_g_u8)
7066:Core/Src/bno055.c **** {
 8107              		.loc 1 7066 1 is_stmt 1 view -0
 8108              		.cfi_startproc
 8109              		@ args = 0, pretend = 0, frame = 8
 8110              		@ frame_needed = 0, uses_anonymous_args = 0
 8111              		.loc 1 7066 1 is_stmt 0 view .LVU2223
 8112 0000 30B5     		push	{r4, r5, lr}
 8113              		.cfi_def_cfa_offset 12
 8114              		.cfi_offset 4, -12
 8115              		.cfi_offset 5, -8
 8116              		.cfi_offset 14, -4
 8117 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccOloYeZ.s 			page 274


 8118              		.cfi_def_cfa_offset 24
7067:Core/Src/bno055.c ****     /* Variable used to return value of
7068:Core/Src/bno055.c ****      * communication routine*/
7069:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8119              		.loc 1 7069 5 is_stmt 1 view .LVU2224
 8120              	.LVL885:
7070:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8121              		.loc 1 7070 5 view .LVU2225
 8122              		.loc 1 7070 8 is_stmt 0 view .LVU2226
 8123 0004 0023     		movs	r3, #0
 8124 0006 8DF80730 		strb	r3, [sp, #7]
7071:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8125              		.loc 1 7071 5 is_stmt 1 view .LVU2227
 8126              	.LVL886:
7072:Core/Src/bno055.c **** 
7073:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7074:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8127              		.loc 1 7074 5 view .LVU2228
 8128              		.loc 1 7074 18 is_stmt 0 view .LVU2229
 8129 000a 134B     		ldr	r3, .L643
 8130 000c 1B68     		ldr	r3, [r3]
 8131              		.loc 1 7074 8 view .LVU2230
 8132 000e E3B1     		cbz	r3, .L639
 8133 0010 0446     		mov	r4, r0
7075:Core/Src/bno055.c ****     {
7076:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7077:Core/Src/bno055.c ****     }
7078:Core/Src/bno055.c ****     else
7079:Core/Src/bno055.c ****     {
7080:Core/Src/bno055.c ****         /*condition check for page, accel highg is
7081:Core/Src/bno055.c ****          * available in the page zero*/
7082:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8134              		.loc 1 7082 9 is_stmt 1 view .LVU2231
 8135              		.loc 1 7082 21 is_stmt 0 view .LVU2232
 8136 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8137              		.loc 1 7082 12 view .LVU2233
 8138 0014 9BB9     		cbnz	r3, .L642
 8139              	.LVL887:
 8140              	.L637:
7083:Core/Src/bno055.c ****         {
7084:Core/Src/bno055.c ****             /* Write the page zero*/
7085:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7086:Core/Src/bno055.c ****         }
7087:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8141              		.loc 1 7087 53 discriminator 1 view .LVU2234
 8142 0016 104B     		ldr	r3, .L643
 8143 0018 1B68     		ldr	r3, [r3]
 8144 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8145              		.loc 1 7087 41 discriminator 1 view .LVU2235
 8146 001c C3B9     		cbnz	r3, .L640
 8147              	.L638:
7088:Core/Src/bno055.c ****         {
7089:Core/Src/bno055.c ****             /* Read the accel highg interrupt stat_s8 */
7090:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8148              		.loc 1 7090 13 is_stmt 1 view .LVU2236
 8149              		.loc 1 7090 32 is_stmt 0 view .LVU2237
 8150 001e 0E4B     		ldr	r3, .L643
ARM GAS  /tmp/ccOloYeZ.s 			page 275


 8151 0020 1868     		ldr	r0, [r3]
 8152 0022 0569     		ldr	r5, [r0, #16]
 8153              		.loc 1 7090 24 view .LVU2238
 8154 0024 0123     		movs	r3, #1
 8155 0026 0DF10702 		add	r2, sp, #7
 8156 002a 3721     		movs	r1, #55
 8157 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8158 002e A847     		blx	r5
 8159              	.LVL888:
7091:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_ACCEL_HIGH_G_REG,
7092:Core/Src/bno055.c ****                                                       &data_u8r,
7093:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7094:Core/Src/bno055.c ****             *accel_high_g_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_ACCEL_HIGH_G);
 8160              		.loc 1 7094 13 is_stmt 1 view .LVU2239
 8161              		.loc 1 7094 32 is_stmt 0 view .LVU2240
 8162 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8163 0034 C3F34013 		ubfx	r3, r3, #5, #1
 8164              		.loc 1 7094 30 view .LVU2241
 8165 0038 2370     		strb	r3, [r4]
 8166              	.LVL889:
 8167              	.L636:
7095:Core/Src/bno055.c ****         }
7096:Core/Src/bno055.c ****         else
7097:Core/Src/bno055.c ****         {
7098:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7099:Core/Src/bno055.c ****         }
7100:Core/Src/bno055.c ****     }
7101:Core/Src/bno055.c **** 
7102:Core/Src/bno055.c ****     return com_rslt;
7103:Core/Src/bno055.c **** }
 8168              		.loc 1 7103 1 view .LVU2242
 8169 003a 03B0     		add	sp, sp, #12
 8170              		.cfi_remember_state
 8171              		.cfi_def_cfa_offset 12
 8172              		@ sp needed
 8173 003c 30BD     		pop	{r4, r5, pc}
 8174              	.LVL890:
 8175              	.L642:
 8176              		.cfi_restore_state
7085:Core/Src/bno055.c ****         }
 8177              		.loc 1 7085 13 is_stmt 1 view .LVU2243
7085:Core/Src/bno055.c ****         }
 8178              		.loc 1 7085 23 is_stmt 0 view .LVU2244
 8179 003e 0020     		movs	r0, #0
 8180              	.LVL891:
7085:Core/Src/bno055.c ****         }
 8181              		.loc 1 7085 23 view .LVU2245
 8182 0040 FFF7FEFF 		bl	bno055_write_page_id
 8183              	.LVL892:
7087:Core/Src/bno055.c ****         {
 8184              		.loc 1 7087 9 is_stmt 1 view .LVU2246
7087:Core/Src/bno055.c ****         {
 8185              		.loc 1 7087 12 is_stmt 0 view .LVU2247
 8186 0044 0028     		cmp	r0, #0
 8187 0046 EAD0     		beq	.L638
 8188 0048 E5E7     		b	.L637
 8189              	.LVL893:
ARM GAS  /tmp/ccOloYeZ.s 			page 276


 8190              	.L639:
7076:Core/Src/bno055.c ****     }
 8191              		.loc 1 7076 16 view .LVU2248
 8192 004a 6FF07E00 		mvn	r0, #126
 8193              	.LVL894:
7076:Core/Src/bno055.c ****     }
 8194              		.loc 1 7076 16 view .LVU2249
 8195 004e F4E7     		b	.L636
 8196              	.LVL895:
 8197              	.L640:
7098:Core/Src/bno055.c ****         }
 8198              		.loc 1 7098 22 view .LVU2250
 8199 0050 4FF0FF30 		mov	r0, #-1
 8200 0054 F1E7     		b	.L636
 8201              	.L644:
 8202 0056 00BF     		.align	2
 8203              	.L643:
 8204 0058 00000000 		.word	p_bno055
 8205              		.cfi_endproc
 8206              	.LFE127:
 8208              		.section	.text.bno055_get_intr_stat_accel_any_motion,"ax",%progbits
 8209              		.align	1
 8210              		.global	bno055_get_intr_stat_accel_any_motion
 8211              		.syntax unified
 8212              		.thumb
 8213              		.thumb_func
 8215              	bno055_get_intr_stat_accel_any_motion:
 8216              	.LVL896:
 8217              	.LFB128:
7104:Core/Src/bno055.c **** 
7105:Core/Src/bno055.c **** /*!
7106:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
7107:Core/Src/bno055.c ****  *  accel anymotion interrupt from register from 0x37 bit 6
7108:Core/Src/bno055.c ****  *
7109:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt
7110:Core/Src/bno055.c ****  *
7111:Core/Src/bno055.c ****  *     accel_any_motion_u8 |  result
7112:Core/Src/bno055.c ****  *    -------------------   | ---------------------
7113:Core/Src/bno055.c ****  *     0x00                 | indicates no interrupt triggered
7114:Core/Src/bno055.c ****  *     0x01                 | indicates interrupt triggered
7115:Core/Src/bno055.c ****  *
7116:Core/Src/bno055.c ****  *  @return results of bus communication function
7117:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7118:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7119:Core/Src/bno055.c ****  *
7120:Core/Src/bno055.c ****  *  @note Accel anymotion interrupt can be configured
7121:Core/Src/bno055.c ****  *          by the following APIs
7122:Core/Src/bno055.c ****  *
7123:Core/Src/bno055.c ****  *  bno055_set_intr_mask_accel_any_motion()
7124:Core/Src/bno055.c ****  *
7125:Core/Src/bno055.c ****  *  bno055_set_intr_accel_any_motion()
7126:Core/Src/bno055.c ****  */
7127:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_accel_any_motion(u8 *accel_any_motion_u8)
7128:Core/Src/bno055.c **** {
 8218              		.loc 1 7128 1 is_stmt 1 view -0
 8219              		.cfi_startproc
 8220              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccOloYeZ.s 			page 277


 8221              		@ frame_needed = 0, uses_anonymous_args = 0
 8222              		.loc 1 7128 1 is_stmt 0 view .LVU2252
 8223 0000 30B5     		push	{r4, r5, lr}
 8224              		.cfi_def_cfa_offset 12
 8225              		.cfi_offset 4, -12
 8226              		.cfi_offset 5, -8
 8227              		.cfi_offset 14, -4
 8228 0002 83B0     		sub	sp, sp, #12
 8229              		.cfi_def_cfa_offset 24
7129:Core/Src/bno055.c ****     /* Variable used to return value of
7130:Core/Src/bno055.c ****      * communication routine*/
7131:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8230              		.loc 1 7131 5 is_stmt 1 view .LVU2253
 8231              	.LVL897:
7132:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8232              		.loc 1 7132 5 view .LVU2254
 8233              		.loc 1 7132 8 is_stmt 0 view .LVU2255
 8234 0004 0023     		movs	r3, #0
 8235 0006 8DF80730 		strb	r3, [sp, #7]
7133:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8236              		.loc 1 7133 5 is_stmt 1 view .LVU2256
 8237              	.LVL898:
7134:Core/Src/bno055.c **** 
7135:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7136:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8238              		.loc 1 7136 5 view .LVU2257
 8239              		.loc 1 7136 18 is_stmt 0 view .LVU2258
 8240 000a 134B     		ldr	r3, .L653
 8241 000c 1B68     		ldr	r3, [r3]
 8242              		.loc 1 7136 8 view .LVU2259
 8243 000e E3B1     		cbz	r3, .L649
 8244 0010 0446     		mov	r4, r0
7137:Core/Src/bno055.c ****     {
7138:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7139:Core/Src/bno055.c ****     }
7140:Core/Src/bno055.c ****     else
7141:Core/Src/bno055.c ****     {
7142:Core/Src/bno055.c ****         /*condition check for page, accel anymotion is
7143:Core/Src/bno055.c ****          * available in the page zero*/
7144:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8245              		.loc 1 7144 9 is_stmt 1 view .LVU2260
 8246              		.loc 1 7144 21 is_stmt 0 view .LVU2261
 8247 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8248              		.loc 1 7144 12 view .LVU2262
 8249 0014 9BB9     		cbnz	r3, .L652
 8250              	.LVL899:
 8251              	.L647:
7145:Core/Src/bno055.c ****         {
7146:Core/Src/bno055.c ****             /* Write the page zero*/
7147:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7148:Core/Src/bno055.c ****         }
7149:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8252              		.loc 1 7149 53 discriminator 1 view .LVU2263
 8253 0016 104B     		ldr	r3, .L653
 8254 0018 1B68     		ldr	r3, [r3]
 8255 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8256              		.loc 1 7149 41 discriminator 1 view .LVU2264
ARM GAS  /tmp/ccOloYeZ.s 			page 278


 8257 001c C3B9     		cbnz	r3, .L650
 8258              	.L648:
7150:Core/Src/bno055.c ****         {
7151:Core/Src/bno055.c ****             /* Read the accel anymotion interrupt stat_s8 */
7152:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8259              		.loc 1 7152 13 is_stmt 1 view .LVU2265
 8260              		.loc 1 7152 32 is_stmt 0 view .LVU2266
 8261 001e 0E4B     		ldr	r3, .L653
 8262 0020 1868     		ldr	r0, [r3]
 8263 0022 0569     		ldr	r5, [r0, #16]
 8264              		.loc 1 7152 24 view .LVU2267
 8265 0024 0123     		movs	r3, #1
 8266 0026 0DF10702 		add	r2, sp, #7
 8267 002a 3721     		movs	r1, #55
 8268 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8269 002e A847     		blx	r5
 8270              	.LVL900:
7153:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_ACCEL_ANY_MOTION_REG,
7154:Core/Src/bno055.c ****                                                       &data_u8r,
7155:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7156:Core/Src/bno055.c ****             *accel_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_ACCEL_ANY_MOTION)
 8271              		.loc 1 7156 13 is_stmt 1 view .LVU2268
 8272              		.loc 1 7156 36 is_stmt 0 view .LVU2269
 8273 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8274 0034 C3F38013 		ubfx	r3, r3, #6, #1
 8275              		.loc 1 7156 34 view .LVU2270
 8276 0038 2370     		strb	r3, [r4]
 8277              	.LVL901:
 8278              	.L646:
7157:Core/Src/bno055.c ****         }
7158:Core/Src/bno055.c ****         else
7159:Core/Src/bno055.c ****         {
7160:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7161:Core/Src/bno055.c ****         }
7162:Core/Src/bno055.c ****     }
7163:Core/Src/bno055.c **** 
7164:Core/Src/bno055.c ****     return com_rslt;
7165:Core/Src/bno055.c **** }
 8279              		.loc 1 7165 1 view .LVU2271
 8280 003a 03B0     		add	sp, sp, #12
 8281              		.cfi_remember_state
 8282              		.cfi_def_cfa_offset 12
 8283              		@ sp needed
 8284 003c 30BD     		pop	{r4, r5, pc}
 8285              	.LVL902:
 8286              	.L652:
 8287              		.cfi_restore_state
7147:Core/Src/bno055.c ****         }
 8288              		.loc 1 7147 13 is_stmt 1 view .LVU2272
7147:Core/Src/bno055.c ****         }
 8289              		.loc 1 7147 23 is_stmt 0 view .LVU2273
 8290 003e 0020     		movs	r0, #0
 8291              	.LVL903:
7147:Core/Src/bno055.c ****         }
 8292              		.loc 1 7147 23 view .LVU2274
 8293 0040 FFF7FEFF 		bl	bno055_write_page_id
 8294              	.LVL904:
ARM GAS  /tmp/ccOloYeZ.s 			page 279


7149:Core/Src/bno055.c ****         {
 8295              		.loc 1 7149 9 is_stmt 1 view .LVU2275
7149:Core/Src/bno055.c ****         {
 8296              		.loc 1 7149 12 is_stmt 0 view .LVU2276
 8297 0044 0028     		cmp	r0, #0
 8298 0046 EAD0     		beq	.L648
 8299 0048 E5E7     		b	.L647
 8300              	.LVL905:
 8301              	.L649:
7138:Core/Src/bno055.c ****     }
 8302              		.loc 1 7138 16 view .LVU2277
 8303 004a 6FF07E00 		mvn	r0, #126
 8304              	.LVL906:
7138:Core/Src/bno055.c ****     }
 8305              		.loc 1 7138 16 view .LVU2278
 8306 004e F4E7     		b	.L646
 8307              	.LVL907:
 8308              	.L650:
7160:Core/Src/bno055.c ****         }
 8309              		.loc 1 7160 22 view .LVU2279
 8310 0050 4FF0FF30 		mov	r0, #-1
 8311 0054 F1E7     		b	.L646
 8312              	.L654:
 8313 0056 00BF     		.align	2
 8314              	.L653:
 8315 0058 00000000 		.word	p_bno055
 8316              		.cfi_endproc
 8317              	.LFE128:
 8319              		.section	.text.bno055_get_intr_stat_accel_no_motion,"ax",%progbits
 8320              		.align	1
 8321              		.global	bno055_get_intr_stat_accel_no_motion
 8322              		.syntax unified
 8323              		.thumb
 8324              		.thumb_func
 8326              	bno055_get_intr_stat_accel_no_motion:
 8327              	.LVL908:
 8328              	.LFB129:
7166:Core/Src/bno055.c **** 
7167:Core/Src/bno055.c **** /*!
7168:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
7169:Core/Src/bno055.c ****  *  accel nomotion/slowmotion interrupt from register from 0x37 bit 6
7170:Core/Src/bno055.c ****  *
7171:Core/Src/bno055.c ****  *  @param accel_no_motion_u8 : The value of accel
7172:Core/Src/bno055.c ****  *  nomotion/slowmotion interrupt
7173:Core/Src/bno055.c ****  *
7174:Core/Src/bno055.c ****  *     accel_no_motion_u8 |  result
7175:Core/Src/bno055.c ****  *    -------------------   | ---------------------
7176:Core/Src/bno055.c ****  *     0x00                 | indicates no interrupt triggered
7177:Core/Src/bno055.c ****  *     0x01                 | indicates interrupt triggered
7178:Core/Src/bno055.c ****  *
7179:Core/Src/bno055.c ****  *  @return results of bus communication function
7180:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7181:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7182:Core/Src/bno055.c ****  *
7183:Core/Src/bno055.c ****  *  @note Accel nomotion/slowmotion interrupt can be configured
7184:Core/Src/bno055.c ****  *          by the following APIs
7185:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 280


7186:Core/Src/bno055.c ****  *  bno055_set_intr_mask_accel_nomotion()
7187:Core/Src/bno055.c ****  *
7188:Core/Src/bno055.c ****  *  bno055_set_intr_accel_nomotion()
7189:Core/Src/bno055.c ****  */
7190:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_accel_no_motion(u8 *accel_no_motion_u8)
7191:Core/Src/bno055.c **** {
 8329              		.loc 1 7191 1 is_stmt 1 view -0
 8330              		.cfi_startproc
 8331              		@ args = 0, pretend = 0, frame = 8
 8332              		@ frame_needed = 0, uses_anonymous_args = 0
 8333              		.loc 1 7191 1 is_stmt 0 view .LVU2281
 8334 0000 30B5     		push	{r4, r5, lr}
 8335              		.cfi_def_cfa_offset 12
 8336              		.cfi_offset 4, -12
 8337              		.cfi_offset 5, -8
 8338              		.cfi_offset 14, -4
 8339 0002 83B0     		sub	sp, sp, #12
 8340              		.cfi_def_cfa_offset 24
7192:Core/Src/bno055.c ****     /* Variable used to return value of
7193:Core/Src/bno055.c ****      * communication routine*/
7194:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8341              		.loc 1 7194 5 is_stmt 1 view .LVU2282
 8342              	.LVL909:
7195:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8343              		.loc 1 7195 5 view .LVU2283
 8344              		.loc 1 7195 8 is_stmt 0 view .LVU2284
 8345 0004 0023     		movs	r3, #0
 8346 0006 8DF80730 		strb	r3, [sp, #7]
7196:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8347              		.loc 1 7196 5 is_stmt 1 view .LVU2285
 8348              	.LVL910:
7197:Core/Src/bno055.c **** 
7198:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7199:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8349              		.loc 1 7199 5 view .LVU2286
 8350              		.loc 1 7199 18 is_stmt 0 view .LVU2287
 8351 000a 124B     		ldr	r3, .L663
 8352 000c 1B68     		ldr	r3, [r3]
 8353              		.loc 1 7199 8 view .LVU2288
 8354 000e DBB1     		cbz	r3, .L659
 8355 0010 0446     		mov	r4, r0
7200:Core/Src/bno055.c ****     {
7201:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7202:Core/Src/bno055.c ****     }
7203:Core/Src/bno055.c ****     else
7204:Core/Src/bno055.c ****     {
7205:Core/Src/bno055.c ****         /*condition check for page, accel
7206:Core/Src/bno055.c ****         * nomotion/slowmotion interrupt
7207:Core/Src/bno055.c ****         * is available in the page zero*/
7208:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8356              		.loc 1 7208 9 is_stmt 1 view .LVU2289
 8357              		.loc 1 7208 21 is_stmt 0 view .LVU2290
 8358 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8359              		.loc 1 7208 12 view .LVU2291
 8360 0014 93B9     		cbnz	r3, .L662
 8361              	.LVL911:
 8362              	.L657:
ARM GAS  /tmp/ccOloYeZ.s 			page 281


7209:Core/Src/bno055.c ****         {
7210:Core/Src/bno055.c ****             /* Write the page zero*/
7211:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7212:Core/Src/bno055.c ****         }
7213:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8363              		.loc 1 7213 53 discriminator 1 view .LVU2292
 8364 0016 0F4B     		ldr	r3, .L663
 8365 0018 1B68     		ldr	r3, [r3]
 8366 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8367              		.loc 1 7213 41 discriminator 1 view .LVU2293
 8368 001c BBB9     		cbnz	r3, .L660
 8369              	.L658:
7214:Core/Src/bno055.c ****         {
7215:Core/Src/bno055.c ****             /* Read the stat_s8 of accel
7216:Core/Src/bno055.c ****              * nomotion/slowmotion interrupt*/
7217:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8370              		.loc 1 7217 13 is_stmt 1 view .LVU2294
 8371              		.loc 1 7217 32 is_stmt 0 view .LVU2295
 8372 001e 0D4B     		ldr	r3, .L663
 8373 0020 1868     		ldr	r0, [r3]
 8374 0022 0569     		ldr	r5, [r0, #16]
 8375              		.loc 1 7217 24 view .LVU2296
 8376 0024 0123     		movs	r3, #1
 8377 0026 0DF10702 		add	r2, sp, #7
 8378 002a 3721     		movs	r1, #55
 8379 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8380 002e A847     		blx	r5
 8381              	.LVL912:
7218:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_ACCEL_NO_MOTION_REG,
7219:Core/Src/bno055.c ****                                                       &data_u8r,
7220:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7221:Core/Src/bno055.c ****             *accel_no_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_ACCEL_NO_MOTION);
 8382              		.loc 1 7221 13 is_stmt 1 view .LVU2297
 8383              		.loc 1 7221 35 is_stmt 0 view .LVU2298
 8384 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8385 0034 DB09     		lsrs	r3, r3, #7
 8386              		.loc 1 7221 33 view .LVU2299
 8387 0036 2370     		strb	r3, [r4]
 8388              	.LVL913:
 8389              	.L656:
7222:Core/Src/bno055.c ****         }
7223:Core/Src/bno055.c ****         else
7224:Core/Src/bno055.c ****         {
7225:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7226:Core/Src/bno055.c ****         }
7227:Core/Src/bno055.c ****     }
7228:Core/Src/bno055.c **** 
7229:Core/Src/bno055.c ****     return com_rslt;
7230:Core/Src/bno055.c **** }
 8390              		.loc 1 7230 1 view .LVU2300
 8391 0038 03B0     		add	sp, sp, #12
 8392              		.cfi_remember_state
 8393              		.cfi_def_cfa_offset 12
 8394              		@ sp needed
 8395 003a 30BD     		pop	{r4, r5, pc}
 8396              	.LVL914:
 8397              	.L662:
ARM GAS  /tmp/ccOloYeZ.s 			page 282


 8398              		.cfi_restore_state
7211:Core/Src/bno055.c ****         }
 8399              		.loc 1 7211 13 is_stmt 1 view .LVU2301
7211:Core/Src/bno055.c ****         }
 8400              		.loc 1 7211 23 is_stmt 0 view .LVU2302
 8401 003c 0020     		movs	r0, #0
 8402              	.LVL915:
7211:Core/Src/bno055.c ****         }
 8403              		.loc 1 7211 23 view .LVU2303
 8404 003e FFF7FEFF 		bl	bno055_write_page_id
 8405              	.LVL916:
7213:Core/Src/bno055.c ****         {
 8406              		.loc 1 7213 9 is_stmt 1 view .LVU2304
7213:Core/Src/bno055.c ****         {
 8407              		.loc 1 7213 12 is_stmt 0 view .LVU2305
 8408 0042 0028     		cmp	r0, #0
 8409 0044 EBD0     		beq	.L658
 8410 0046 E6E7     		b	.L657
 8411              	.LVL917:
 8412              	.L659:
7201:Core/Src/bno055.c ****     }
 8413              		.loc 1 7201 16 view .LVU2306
 8414 0048 6FF07E00 		mvn	r0, #126
 8415              	.LVL918:
7201:Core/Src/bno055.c ****     }
 8416              		.loc 1 7201 16 view .LVU2307
 8417 004c F4E7     		b	.L656
 8418              	.LVL919:
 8419              	.L660:
7225:Core/Src/bno055.c ****         }
 8420              		.loc 1 7225 22 view .LVU2308
 8421 004e 4FF0FF30 		mov	r0, #-1
 8422 0052 F1E7     		b	.L656
 8423              	.L664:
 8424              		.align	2
 8425              	.L663:
 8426 0054 00000000 		.word	p_bno055
 8427              		.cfi_endproc
 8428              	.LFE129:
 8430              		.section	.text.bno055_get_stat_main_clk,"ax",%progbits
 8431              		.align	1
 8432              		.global	bno055_get_stat_main_clk
 8433              		.syntax unified
 8434              		.thumb
 8435              		.thumb_func
 8437              	bno055_get_stat_main_clk:
 8438              	.LVL920:
 8439              	.LFB130:
7231:Core/Src/bno055.c **** 
7232:Core/Src/bno055.c **** /*!
7233:Core/Src/bno055.c ****  *  @brief This API is used to read status of main clock
7234:Core/Src/bno055.c ****  *  from the register 0x38 bit 0
7235:Core/Src/bno055.c ****  *
7236:Core/Src/bno055.c ****  *  @param stat_main_clk_u8 : the status of main clock
7237:Core/Src/bno055.c ****  *
7238:Core/Src/bno055.c ****  *
7239:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/ccOloYeZ.s 			page 283


7240:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7241:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7242:Core/Src/bno055.c ****  *
7243:Core/Src/bno055.c ****  */
7244:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_stat_main_clk(u8 *stat_main_clk_u8)
7245:Core/Src/bno055.c **** {
 8440              		.loc 1 7245 1 is_stmt 1 view -0
 8441              		.cfi_startproc
 8442              		@ args = 0, pretend = 0, frame = 8
 8443              		@ frame_needed = 0, uses_anonymous_args = 0
 8444              		.loc 1 7245 1 is_stmt 0 view .LVU2310
 8445 0000 30B5     		push	{r4, r5, lr}
 8446              		.cfi_def_cfa_offset 12
 8447              		.cfi_offset 4, -12
 8448              		.cfi_offset 5, -8
 8449              		.cfi_offset 14, -4
 8450 0002 83B0     		sub	sp, sp, #12
 8451              		.cfi_def_cfa_offset 24
7246:Core/Src/bno055.c ****     /* Variable used to return value of
7247:Core/Src/bno055.c ****      * communication routine*/
7248:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8452              		.loc 1 7248 5 is_stmt 1 view .LVU2311
 8453              	.LVL921:
7249:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8454              		.loc 1 7249 5 view .LVU2312
 8455              		.loc 1 7249 8 is_stmt 0 view .LVU2313
 8456 0004 0023     		movs	r3, #0
 8457 0006 8DF80730 		strb	r3, [sp, #7]
7250:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8458              		.loc 1 7250 5 is_stmt 1 view .LVU2314
 8459              	.LVL922:
7251:Core/Src/bno055.c **** 
7252:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7253:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8460              		.loc 1 7253 5 view .LVU2315
 8461              		.loc 1 7253 18 is_stmt 0 view .LVU2316
 8462 000a 134B     		ldr	r3, .L673
 8463 000c 1B68     		ldr	r3, [r3]
 8464              		.loc 1 7253 8 view .LVU2317
 8465 000e E3B1     		cbz	r3, .L669
 8466 0010 0446     		mov	r4, r0
7254:Core/Src/bno055.c ****     {
7255:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7256:Core/Src/bno055.c ****     }
7257:Core/Src/bno055.c ****     else
7258:Core/Src/bno055.c ****     {
7259:Core/Src/bno055.c ****         /*condition check for page, status of main clk is
7260:Core/Src/bno055.c ****          * available in the page zero*/
7261:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8467              		.loc 1 7261 9 is_stmt 1 view .LVU2318
 8468              		.loc 1 7261 21 is_stmt 0 view .LVU2319
 8469 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8470              		.loc 1 7261 12 view .LVU2320
 8471 0014 9BB9     		cbnz	r3, .L672
 8472              	.LVL923:
 8473              	.L667:
7262:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccOloYeZ.s 			page 284


7263:Core/Src/bno055.c ****             /* Write the page zero*/
7264:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7265:Core/Src/bno055.c ****         }
7266:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8474              		.loc 1 7266 53 discriminator 1 view .LVU2321
 8475 0016 104B     		ldr	r3, .L673
 8476 0018 1B68     		ldr	r3, [r3]
 8477 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8478              		.loc 1 7266 41 discriminator 1 view .LVU2322
 8479 001c C3B9     		cbnz	r3, .L670
 8480              	.L668:
7267:Core/Src/bno055.c ****         {
7268:Core/Src/bno055.c ****             /* Read the status of main clk */
7269:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8481              		.loc 1 7269 13 is_stmt 1 view .LVU2323
 8482              		.loc 1 7269 32 is_stmt 0 view .LVU2324
 8483 001e 0E4B     		ldr	r3, .L673
 8484 0020 1868     		ldr	r0, [r3]
 8485 0022 0569     		ldr	r5, [r0, #16]
 8486              		.loc 1 7269 24 view .LVU2325
 8487 0024 0123     		movs	r3, #1
 8488 0026 0DF10702 		add	r2, sp, #7
 8489 002a 3821     		movs	r1, #56
 8490 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8491 002e A847     		blx	r5
 8492              	.LVL924:
7270:Core/Src/bno055.c ****                                                       BNO055_SYS_MAIN_CLK_REG,
7271:Core/Src/bno055.c ****                                                       &data_u8r,
7272:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7273:Core/Src/bno055.c ****             *stat_main_clk_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_MAIN_CLK);
 8493              		.loc 1 7273 13 is_stmt 1 view .LVU2326
 8494              		.loc 1 7273 33 is_stmt 0 view .LVU2327
 8495 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8496 0034 03F01003 		and	r3, r3, #16
 8497              		.loc 1 7273 31 view .LVU2328
 8498 0038 2370     		strb	r3, [r4]
 8499              	.LVL925:
 8500              	.L666:
7274:Core/Src/bno055.c ****         }
7275:Core/Src/bno055.c ****         else
7276:Core/Src/bno055.c ****         {
7277:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7278:Core/Src/bno055.c ****         }
7279:Core/Src/bno055.c ****     }
7280:Core/Src/bno055.c **** 
7281:Core/Src/bno055.c ****     return com_rslt;
7282:Core/Src/bno055.c **** }
 8501              		.loc 1 7282 1 view .LVU2329
 8502 003a 03B0     		add	sp, sp, #12
 8503              		.cfi_remember_state
 8504              		.cfi_def_cfa_offset 12
 8505              		@ sp needed
 8506 003c 30BD     		pop	{r4, r5, pc}
 8507              	.LVL926:
 8508              	.L672:
 8509              		.cfi_restore_state
7264:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 285


 8510              		.loc 1 7264 13 is_stmt 1 view .LVU2330
7264:Core/Src/bno055.c ****         }
 8511              		.loc 1 7264 23 is_stmt 0 view .LVU2331
 8512 003e 0020     		movs	r0, #0
 8513              	.LVL927:
7264:Core/Src/bno055.c ****         }
 8514              		.loc 1 7264 23 view .LVU2332
 8515 0040 FFF7FEFF 		bl	bno055_write_page_id
 8516              	.LVL928:
7266:Core/Src/bno055.c ****         {
 8517              		.loc 1 7266 9 is_stmt 1 view .LVU2333
7266:Core/Src/bno055.c ****         {
 8518              		.loc 1 7266 12 is_stmt 0 view .LVU2334
 8519 0044 0028     		cmp	r0, #0
 8520 0046 EAD0     		beq	.L668
 8521 0048 E5E7     		b	.L667
 8522              	.LVL929:
 8523              	.L669:
7255:Core/Src/bno055.c ****     }
 8524              		.loc 1 7255 16 view .LVU2335
 8525 004a 6FF07E00 		mvn	r0, #126
 8526              	.LVL930:
7255:Core/Src/bno055.c ****     }
 8527              		.loc 1 7255 16 view .LVU2336
 8528 004e F4E7     		b	.L666
 8529              	.LVL931:
 8530              	.L670:
7277:Core/Src/bno055.c ****         }
 8531              		.loc 1 7277 22 view .LVU2337
 8532 0050 4FF0FF30 		mov	r0, #-1
 8533 0054 F1E7     		b	.L666
 8534              	.L674:
 8535 0056 00BF     		.align	2
 8536              	.L673:
 8537 0058 00000000 		.word	p_bno055
 8538              		.cfi_endproc
 8539              	.LFE130:
 8541              		.section	.text.bno055_get_sys_stat_code,"ax",%progbits
 8542              		.align	1
 8543              		.global	bno055_get_sys_stat_code
 8544              		.syntax unified
 8545              		.thumb
 8546              		.thumb_func
 8548              	bno055_get_sys_stat_code:
 8549              	.LVL932:
 8550              	.LFB131:
7283:Core/Src/bno055.c **** 
7284:Core/Src/bno055.c **** /*!
7285:Core/Src/bno055.c ****  *  @brief This API is used to read system status
7286:Core/Src/bno055.c ****  *  code from the register 0x39 it is a byte of data
7287:Core/Src/bno055.c ****  *
7288:Core/Src/bno055.c ****  *  @param sys_stat_u8 : the status of system
7289:Core/Src/bno055.c ****  *
7290:Core/Src/bno055.c ****  *
7291:Core/Src/bno055.c ****  *  @return results of bus communication function
7292:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7293:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
ARM GAS  /tmp/ccOloYeZ.s 			page 286


7294:Core/Src/bno055.c ****  *
7295:Core/Src/bno055.c ****  */
7296:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_sys_stat_code(u8 *sys_stat_u8)
7297:Core/Src/bno055.c **** {
 8551              		.loc 1 7297 1 is_stmt 1 view -0
 8552              		.cfi_startproc
 8553              		@ args = 0, pretend = 0, frame = 8
 8554              		@ frame_needed = 0, uses_anonymous_args = 0
 8555              		.loc 1 7297 1 is_stmt 0 view .LVU2339
 8556 0000 70B5     		push	{r4, r5, r6, lr}
 8557              		.cfi_def_cfa_offset 16
 8558              		.cfi_offset 4, -16
 8559              		.cfi_offset 5, -12
 8560              		.cfi_offset 6, -8
 8561              		.cfi_offset 14, -4
 8562 0002 82B0     		sub	sp, sp, #8
 8563              		.cfi_def_cfa_offset 24
7298:Core/Src/bno055.c ****     /* Variable used to return value of
7299:Core/Src/bno055.c ****      * communication routine*/
7300:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8564              		.loc 1 7300 5 is_stmt 1 view .LVU2340
 8565              	.LVL933:
7301:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8566              		.loc 1 7301 5 view .LVU2341
 8567              		.loc 1 7301 8 is_stmt 0 view .LVU2342
 8568 0004 0023     		movs	r3, #0
 8569 0006 8DF80730 		strb	r3, [sp, #7]
7302:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8570              		.loc 1 7302 5 is_stmt 1 view .LVU2343
 8571              	.LVL934:
7303:Core/Src/bno055.c **** 
7304:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7305:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8572              		.loc 1 7305 5 view .LVU2344
 8573              		.loc 1 7305 18 is_stmt 0 view .LVU2345
 8574 000a 124B     		ldr	r3, .L683
 8575 000c 1B68     		ldr	r3, [r3]
 8576              		.loc 1 7305 8 view .LVU2346
 8577 000e D3B1     		cbz	r3, .L679
 8578 0010 0546     		mov	r5, r0
7306:Core/Src/bno055.c ****     {
7307:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7308:Core/Src/bno055.c ****     }
7309:Core/Src/bno055.c ****     else
7310:Core/Src/bno055.c ****     {
7311:Core/Src/bno055.c ****         /*condition check for page, the status of system is
7312:Core/Src/bno055.c ****          * available in the page zero*/
7313:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8579              		.loc 1 7313 9 is_stmt 1 view .LVU2347
 8580              		.loc 1 7313 21 is_stmt 0 view .LVU2348
 8581 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8582              		.loc 1 7313 12 view .LVU2349
 8583 0014 8BB9     		cbnz	r3, .L682
 8584              	.LVL935:
 8585              	.L677:
7314:Core/Src/bno055.c ****         {
7315:Core/Src/bno055.c ****             /* Write the page zero*/
ARM GAS  /tmp/ccOloYeZ.s 			page 287


7316:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7317:Core/Src/bno055.c ****         }
7318:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8586              		.loc 1 7318 53 discriminator 1 view .LVU2350
 8587 0016 0F4B     		ldr	r3, .L683
 8588 0018 1B68     		ldr	r3, [r3]
 8589 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8590              		.loc 1 7318 41 discriminator 1 view .LVU2351
 8591 001c B3B9     		cbnz	r3, .L680
 8592              	.L678:
7319:Core/Src/bno055.c ****         {
7320:Core/Src/bno055.c ****             /* Read the the status of system*/
7321:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8593              		.loc 1 7321 13 is_stmt 1 view .LVU2352
 8594              		.loc 1 7321 32 is_stmt 0 view .LVU2353
 8595 001e 0D4B     		ldr	r3, .L683
 8596 0020 1C68     		ldr	r4, [r3]
 8597 0022 2669     		ldr	r6, [r4, #16]
 8598              		.loc 1 7321 24 view .LVU2354
 8599 0024 0123     		movs	r3, #1
 8600 0026 0DF10702 		add	r2, sp, #7
 8601 002a 3921     		movs	r1, #57
 8602 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 8603 002e B047     		blx	r6
 8604              	.LVL936:
7322:Core/Src/bno055.c ****                                                       BNO055_SYS_STAT_CODE_REG,
7323:Core/Src/bno055.c ****                                                       &data_u8r,
7324:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7325:Core/Src/bno055.c ****             *sys_stat_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_STAT_CODE);
 8605              		.loc 1 7325 13 is_stmt 1 view .LVU2355
 8606              		.loc 1 7325 26 is_stmt 0 view .LVU2356
 8607 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8608 0034 2B70     		strb	r3, [r5]
 8609              	.LVL937:
 8610              	.L676:
7326:Core/Src/bno055.c ****         }
7327:Core/Src/bno055.c ****         else
7328:Core/Src/bno055.c ****         {
7329:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7330:Core/Src/bno055.c ****         }
7331:Core/Src/bno055.c ****     }
7332:Core/Src/bno055.c **** 
7333:Core/Src/bno055.c ****     return com_rslt;
7334:Core/Src/bno055.c **** }
 8611              		.loc 1 7334 1 view .LVU2357
 8612 0036 02B0     		add	sp, sp, #8
 8613              		.cfi_remember_state
 8614              		.cfi_def_cfa_offset 16
 8615              		@ sp needed
 8616 0038 70BD     		pop	{r4, r5, r6, pc}
 8617              	.LVL938:
 8618              	.L682:
 8619              		.cfi_restore_state
7316:Core/Src/bno055.c ****         }
 8620              		.loc 1 7316 13 is_stmt 1 view .LVU2358
7316:Core/Src/bno055.c ****         }
 8621              		.loc 1 7316 23 is_stmt 0 view .LVU2359
ARM GAS  /tmp/ccOloYeZ.s 			page 288


 8622 003a 0020     		movs	r0, #0
 8623              	.LVL939:
7316:Core/Src/bno055.c ****         }
 8624              		.loc 1 7316 23 view .LVU2360
 8625 003c FFF7FEFF 		bl	bno055_write_page_id
 8626              	.LVL940:
7318:Core/Src/bno055.c ****         {
 8627              		.loc 1 7318 9 is_stmt 1 view .LVU2361
7318:Core/Src/bno055.c ****         {
 8628              		.loc 1 7318 12 is_stmt 0 view .LVU2362
 8629 0040 0028     		cmp	r0, #0
 8630 0042 ECD0     		beq	.L678
 8631 0044 E7E7     		b	.L677
 8632              	.LVL941:
 8633              	.L679:
7307:Core/Src/bno055.c ****     }
 8634              		.loc 1 7307 16 view .LVU2363
 8635 0046 6FF07E00 		mvn	r0, #126
 8636              	.LVL942:
7307:Core/Src/bno055.c ****     }
 8637              		.loc 1 7307 16 view .LVU2364
 8638 004a F4E7     		b	.L676
 8639              	.LVL943:
 8640              	.L680:
7329:Core/Src/bno055.c ****         }
 8641              		.loc 1 7329 22 view .LVU2365
 8642 004c 4FF0FF30 		mov	r0, #-1
 8643 0050 F1E7     		b	.L676
 8644              	.L684:
 8645 0052 00BF     		.align	2
 8646              	.L683:
 8647 0054 00000000 		.word	p_bno055
 8648              		.cfi_endproc
 8649              	.LFE131:
 8651              		.section	.text.bno055_get_sys_error_code,"ax",%progbits
 8652              		.align	1
 8653              		.global	bno055_get_sys_error_code
 8654              		.syntax unified
 8655              		.thumb
 8656              		.thumb_func
 8658              	bno055_get_sys_error_code:
 8659              	.LVL944:
 8660              	.LFB132:
7335:Core/Src/bno055.c **** 
7336:Core/Src/bno055.c **** /*!
7337:Core/Src/bno055.c ****  *  @brief This API is used to read system BNO055_ERROR
7338:Core/Src/bno055.c ****  *  code from the register 0x3A it is a byte of data
7339:Core/Src/bno055.c ****  *
7340:Core/Src/bno055.c ****  *  @param sys_error_u8 : The value of system BNO055_ERROR code
7341:Core/Src/bno055.c ****  *
7342:Core/Src/bno055.c ****  *
7343:Core/Src/bno055.c ****  *  @return results of bus communication function
7344:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7345:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7346:Core/Src/bno055.c ****  *
7347:Core/Src/bno055.c ****  *
7348:Core/Src/bno055.c ****  */
ARM GAS  /tmp/ccOloYeZ.s 			page 289


7349:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_sys_error_code(u8 *sys_error_u8)
7350:Core/Src/bno055.c **** {
 8661              		.loc 1 7350 1 is_stmt 1 view -0
 8662              		.cfi_startproc
 8663              		@ args = 0, pretend = 0, frame = 8
 8664              		@ frame_needed = 0, uses_anonymous_args = 0
 8665              		.loc 1 7350 1 is_stmt 0 view .LVU2367
 8666 0000 70B5     		push	{r4, r5, r6, lr}
 8667              		.cfi_def_cfa_offset 16
 8668              		.cfi_offset 4, -16
 8669              		.cfi_offset 5, -12
 8670              		.cfi_offset 6, -8
 8671              		.cfi_offset 14, -4
 8672 0002 82B0     		sub	sp, sp, #8
 8673              		.cfi_def_cfa_offset 24
7351:Core/Src/bno055.c ****     /* Variable used to return value of
7352:Core/Src/bno055.c ****      * communication routine*/
7353:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8674              		.loc 1 7353 5 is_stmt 1 view .LVU2368
 8675              	.LVL945:
7354:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8676              		.loc 1 7354 5 view .LVU2369
 8677              		.loc 1 7354 8 is_stmt 0 view .LVU2370
 8678 0004 0023     		movs	r3, #0
 8679 0006 8DF80730 		strb	r3, [sp, #7]
7355:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8680              		.loc 1 7355 5 is_stmt 1 view .LVU2371
 8681              	.LVL946:
7356:Core/Src/bno055.c **** 
7357:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7358:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8682              		.loc 1 7358 5 view .LVU2372
 8683              		.loc 1 7358 18 is_stmt 0 view .LVU2373
 8684 000a 124B     		ldr	r3, .L693
 8685 000c 1B68     		ldr	r3, [r3]
 8686              		.loc 1 7358 8 view .LVU2374
 8687 000e D3B1     		cbz	r3, .L689
 8688 0010 0546     		mov	r5, r0
7359:Core/Src/bno055.c ****     {
7360:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7361:Core/Src/bno055.c ****     }
7362:Core/Src/bno055.c ****     else
7363:Core/Src/bno055.c ****     {
7364:Core/Src/bno055.c ****         /*condition check for page, system BNO055_ERROR code is
7365:Core/Src/bno055.c ****          * available in the page zero*/
7366:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8689              		.loc 1 7366 9 is_stmt 1 view .LVU2375
 8690              		.loc 1 7366 21 is_stmt 0 view .LVU2376
 8691 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8692              		.loc 1 7366 12 view .LVU2377
 8693 0014 8BB9     		cbnz	r3, .L692
 8694              	.LVL947:
 8695              	.L687:
7367:Core/Src/bno055.c ****         {
7368:Core/Src/bno055.c ****             /* Write the page zero*/
7369:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7370:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 290


7371:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8696              		.loc 1 7371 53 discriminator 1 view .LVU2378
 8697 0016 0F4B     		ldr	r3, .L693
 8698 0018 1B68     		ldr	r3, [r3]
 8699 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8700              		.loc 1 7371 41 discriminator 1 view .LVU2379
 8701 001c B3B9     		cbnz	r3, .L690
 8702              	.L688:
7372:Core/Src/bno055.c ****         {
7373:Core/Src/bno055.c ****             /* Read the system BNO055_ERROR code*/
7374:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8703              		.loc 1 7374 13 is_stmt 1 view .LVU2380
 8704              		.loc 1 7374 32 is_stmt 0 view .LVU2381
 8705 001e 0D4B     		ldr	r3, .L693
 8706 0020 1C68     		ldr	r4, [r3]
 8707 0022 2669     		ldr	r6, [r4, #16]
 8708              		.loc 1 7374 24 view .LVU2382
 8709 0024 0123     		movs	r3, #1
 8710 0026 0DF10702 		add	r2, sp, #7
 8711 002a 3A21     		movs	r1, #58
 8712 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 8713 002e B047     		blx	r6
 8714              	.LVL948:
7375:Core/Src/bno055.c ****                                                       BNO055_SYS_ERROR_CODE_REG,
7376:Core/Src/bno055.c ****                                                       &data_u8r,
7377:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7378:Core/Src/bno055.c ****             *sys_error_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_ERROR_CODE);
 8715              		.loc 1 7378 13 is_stmt 1 view .LVU2383
 8716              		.loc 1 7378 27 is_stmt 0 view .LVU2384
 8717 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8718 0034 2B70     		strb	r3, [r5]
 8719              	.LVL949:
 8720              	.L686:
7379:Core/Src/bno055.c ****         }
7380:Core/Src/bno055.c ****         else
7381:Core/Src/bno055.c ****         {
7382:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7383:Core/Src/bno055.c ****         }
7384:Core/Src/bno055.c ****     }
7385:Core/Src/bno055.c **** 
7386:Core/Src/bno055.c ****     return com_rslt;
7387:Core/Src/bno055.c **** }
 8721              		.loc 1 7387 1 view .LVU2385
 8722 0036 02B0     		add	sp, sp, #8
 8723              		.cfi_remember_state
 8724              		.cfi_def_cfa_offset 16
 8725              		@ sp needed
 8726 0038 70BD     		pop	{r4, r5, r6, pc}
 8727              	.LVL950:
 8728              	.L692:
 8729              		.cfi_restore_state
7369:Core/Src/bno055.c ****         }
 8730              		.loc 1 7369 13 is_stmt 1 view .LVU2386
7369:Core/Src/bno055.c ****         }
 8731              		.loc 1 7369 23 is_stmt 0 view .LVU2387
 8732 003a 0020     		movs	r0, #0
 8733              	.LVL951:
ARM GAS  /tmp/ccOloYeZ.s 			page 291


7369:Core/Src/bno055.c ****         }
 8734              		.loc 1 7369 23 view .LVU2388
 8735 003c FFF7FEFF 		bl	bno055_write_page_id
 8736              	.LVL952:
7371:Core/Src/bno055.c ****         {
 8737              		.loc 1 7371 9 is_stmt 1 view .LVU2389
7371:Core/Src/bno055.c ****         {
 8738              		.loc 1 7371 12 is_stmt 0 view .LVU2390
 8739 0040 0028     		cmp	r0, #0
 8740 0042 ECD0     		beq	.L688
 8741 0044 E7E7     		b	.L687
 8742              	.LVL953:
 8743              	.L689:
7360:Core/Src/bno055.c ****     }
 8744              		.loc 1 7360 16 view .LVU2391
 8745 0046 6FF07E00 		mvn	r0, #126
 8746              	.LVL954:
7360:Core/Src/bno055.c ****     }
 8747              		.loc 1 7360 16 view .LVU2392
 8748 004a F4E7     		b	.L686
 8749              	.LVL955:
 8750              	.L690:
7382:Core/Src/bno055.c ****         }
 8751              		.loc 1 7382 22 view .LVU2393
 8752 004c 4FF0FF30 		mov	r0, #-1
 8753 0050 F1E7     		b	.L686
 8754              	.L694:
 8755 0052 00BF     		.align	2
 8756              	.L693:
 8757 0054 00000000 		.word	p_bno055
 8758              		.cfi_endproc
 8759              	.LFE132:
 8761              		.section	.text.bno055_get_accel_unit,"ax",%progbits
 8762              		.align	1
 8763              		.global	bno055_get_accel_unit
 8764              		.syntax unified
 8765              		.thumb
 8766              		.thumb_func
 8768              	bno055_get_accel_unit:
 8769              	.LVL956:
 8770              	.LFB133:
7388:Core/Src/bno055.c **** 
7389:Core/Src/bno055.c **** /*!
7390:Core/Src/bno055.c ****  *  @brief This API used to read the accel unit
7391:Core/Src/bno055.c ****  *  from register from 0x3B bit 0
7392:Core/Src/bno055.c ****  *
7393:Core/Src/bno055.c ****  *  @param accel_unit_u8 : The value of accel unit
7394:Core/Src/bno055.c ****  *
7395:Core/Src/bno055.c ****  *    accel_unit_u8 |   result
7396:Core/Src/bno055.c ****  *   -------------    | ---------------
7397:Core/Src/bno055.c ****  *        0x00        | BNO055_ACCEL_UNIT_MSQ
7398:Core/Src/bno055.c ****  *        0x01        | BNO055_ACCEL_UNIT_MG
7399:Core/Src/bno055.c ****  *
7400:Core/Src/bno055.c ****  *  @return results of bus communication function
7401:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7402:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7403:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 292


7404:Core/Src/bno055.c ****  */
7405:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_unit(u8 *accel_unit_u8)
7406:Core/Src/bno055.c **** {
 8771              		.loc 1 7406 1 is_stmt 1 view -0
 8772              		.cfi_startproc
 8773              		@ args = 0, pretend = 0, frame = 8
 8774              		@ frame_needed = 0, uses_anonymous_args = 0
 8775              		.loc 1 7406 1 is_stmt 0 view .LVU2395
 8776 0000 30B5     		push	{r4, r5, lr}
 8777              		.cfi_def_cfa_offset 12
 8778              		.cfi_offset 4, -12
 8779              		.cfi_offset 5, -8
 8780              		.cfi_offset 14, -4
 8781 0002 83B0     		sub	sp, sp, #12
 8782              		.cfi_def_cfa_offset 24
7407:Core/Src/bno055.c ****     /* Variable used to return value of
7408:Core/Src/bno055.c ****      * communication routine*/
7409:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8783              		.loc 1 7409 5 is_stmt 1 view .LVU2396
 8784              	.LVL957:
7410:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8785              		.loc 1 7410 5 view .LVU2397
 8786              		.loc 1 7410 8 is_stmt 0 view .LVU2398
 8787 0004 0023     		movs	r3, #0
 8788 0006 8DF80730 		strb	r3, [sp, #7]
7411:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8789              		.loc 1 7411 5 is_stmt 1 view .LVU2399
 8790              	.LVL958:
7412:Core/Src/bno055.c **** 
7413:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7414:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8791              		.loc 1 7414 5 view .LVU2400
 8792              		.loc 1 7414 18 is_stmt 0 view .LVU2401
 8793 000a 134B     		ldr	r3, .L703
 8794 000c 1B68     		ldr	r3, [r3]
 8795              		.loc 1 7414 8 view .LVU2402
 8796 000e E3B1     		cbz	r3, .L699
 8797 0010 0446     		mov	r4, r0
7415:Core/Src/bno055.c ****     {
7416:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7417:Core/Src/bno055.c ****     }
7418:Core/Src/bno055.c ****     else
7419:Core/Src/bno055.c ****     {
7420:Core/Src/bno055.c ****         /*condition check for page, accel unit is
7421:Core/Src/bno055.c ****          * available in the page zero*/
7422:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8798              		.loc 1 7422 9 is_stmt 1 view .LVU2403
 8799              		.loc 1 7422 21 is_stmt 0 view .LVU2404
 8800 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8801              		.loc 1 7422 12 view .LVU2405
 8802 0014 9BB9     		cbnz	r3, .L702
 8803              	.LVL959:
 8804              	.L697:
7423:Core/Src/bno055.c ****         {
7424:Core/Src/bno055.c ****             /* Write the page zero*/
7425:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7426:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 293


7427:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8805              		.loc 1 7427 53 discriminator 1 view .LVU2406
 8806 0016 104B     		ldr	r3, .L703
 8807 0018 1B68     		ldr	r3, [r3]
 8808 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8809              		.loc 1 7427 41 discriminator 1 view .LVU2407
 8810 001c C3B9     		cbnz	r3, .L700
 8811              	.L698:
7428:Core/Src/bno055.c ****         {
7429:Core/Src/bno055.c ****             /* Read the accel unit */
7430:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8812              		.loc 1 7430 13 is_stmt 1 view .LVU2408
 8813              		.loc 1 7430 32 is_stmt 0 view .LVU2409
 8814 001e 0E4B     		ldr	r3, .L703
 8815 0020 1868     		ldr	r0, [r3]
 8816 0022 0569     		ldr	r5, [r0, #16]
 8817              		.loc 1 7430 24 view .LVU2410
 8818 0024 0123     		movs	r3, #1
 8819 0026 0DF10702 		add	r2, sp, #7
 8820 002a 3B21     		movs	r1, #59
 8821 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8822 002e A847     		blx	r5
 8823              	.LVL960:
7431:Core/Src/bno055.c ****                                                       BNO055_ACCEL_UNIT_REG,
7432:Core/Src/bno055.c ****                                                       &data_u8r,
7433:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7434:Core/Src/bno055.c ****             *accel_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_UNIT);
 8824              		.loc 1 7434 13 is_stmt 1 view .LVU2411
 8825              		.loc 1 7434 30 is_stmt 0 view .LVU2412
 8826 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8827 0034 03F00103 		and	r3, r3, #1
 8828              		.loc 1 7434 28 view .LVU2413
 8829 0038 2370     		strb	r3, [r4]
 8830              	.LVL961:
 8831              	.L696:
7435:Core/Src/bno055.c ****         }
7436:Core/Src/bno055.c ****         else
7437:Core/Src/bno055.c ****         {
7438:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7439:Core/Src/bno055.c ****         }
7440:Core/Src/bno055.c ****     }
7441:Core/Src/bno055.c **** 
7442:Core/Src/bno055.c ****     return com_rslt;
7443:Core/Src/bno055.c **** }
 8832              		.loc 1 7443 1 view .LVU2414
 8833 003a 03B0     		add	sp, sp, #12
 8834              		.cfi_remember_state
 8835              		.cfi_def_cfa_offset 12
 8836              		@ sp needed
 8837 003c 30BD     		pop	{r4, r5, pc}
 8838              	.LVL962:
 8839              	.L702:
 8840              		.cfi_restore_state
7425:Core/Src/bno055.c ****         }
 8841              		.loc 1 7425 13 is_stmt 1 view .LVU2415
7425:Core/Src/bno055.c ****         }
 8842              		.loc 1 7425 23 is_stmt 0 view .LVU2416
ARM GAS  /tmp/ccOloYeZ.s 			page 294


 8843 003e 0020     		movs	r0, #0
 8844              	.LVL963:
7425:Core/Src/bno055.c ****         }
 8845              		.loc 1 7425 23 view .LVU2417
 8846 0040 FFF7FEFF 		bl	bno055_write_page_id
 8847              	.LVL964:
7427:Core/Src/bno055.c ****         {
 8848              		.loc 1 7427 9 is_stmt 1 view .LVU2418
7427:Core/Src/bno055.c ****         {
 8849              		.loc 1 7427 12 is_stmt 0 view .LVU2419
 8850 0044 0028     		cmp	r0, #0
 8851 0046 EAD0     		beq	.L698
 8852 0048 E5E7     		b	.L697
 8853              	.LVL965:
 8854              	.L699:
7416:Core/Src/bno055.c ****     }
 8855              		.loc 1 7416 16 view .LVU2420
 8856 004a 6FF07E00 		mvn	r0, #126
 8857              	.LVL966:
7416:Core/Src/bno055.c ****     }
 8858              		.loc 1 7416 16 view .LVU2421
 8859 004e F4E7     		b	.L696
 8860              	.LVL967:
 8861              	.L700:
7438:Core/Src/bno055.c ****         }
 8862              		.loc 1 7438 22 view .LVU2422
 8863 0050 4FF0FF30 		mov	r0, #-1
 8864 0054 F1E7     		b	.L696
 8865              	.L704:
 8866 0056 00BF     		.align	2
 8867              	.L703:
 8868 0058 00000000 		.word	p_bno055
 8869              		.cfi_endproc
 8870              	.LFE133:
 8872              		.section	.text.bno055_get_gyro_unit,"ax",%progbits
 8873              		.align	1
 8874              		.global	bno055_get_gyro_unit
 8875              		.syntax unified
 8876              		.thumb
 8877              		.thumb_func
 8879              	bno055_get_gyro_unit:
 8880              	.LVL968:
 8881              	.LFB135:
7444:Core/Src/bno055.c **** 
7445:Core/Src/bno055.c **** /*!
7446:Core/Src/bno055.c ****  *  @brief This API used to write the accel unit
7447:Core/Src/bno055.c ****  *  from register from 0x3B bit 0
7448:Core/Src/bno055.c ****  *
7449:Core/Src/bno055.c ****  *  @param accel_unit_u8 : The value of accel unit
7450:Core/Src/bno055.c ****  *
7451:Core/Src/bno055.c ****  *    accel_unit_u8 |   result
7452:Core/Src/bno055.c ****  *   -------------    | ---------------
7453:Core/Src/bno055.c ****  *        0x00        | BNO055_ACCEL_UNIT_MSQ
7454:Core/Src/bno055.c ****  *        0x01        | BNO055_ACCEL_UNIT_MG
7455:Core/Src/bno055.c ****  *
7456:Core/Src/bno055.c ****  *  @return results of bus communication function
7457:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
ARM GAS  /tmp/ccOloYeZ.s 			page 295


7458:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7459:Core/Src/bno055.c ****  *
7460:Core/Src/bno055.c ****  *
7461:Core/Src/bno055.c ****  */
7462:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_unit(u8 accel_unit_u8)
7463:Core/Src/bno055.c **** {
7464:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
7465:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
7466:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
7467:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
7468:Core/Src/bno055.c **** 
7469:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7470:Core/Src/bno055.c ****     if (p_bno055 == NULL)
7471:Core/Src/bno055.c ****     {
7472:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7473:Core/Src/bno055.c ****     }
7474:Core/Src/bno055.c ****     else
7475:Core/Src/bno055.c ****     {
7476:Core/Src/bno055.c ****         /* The write operation effective only if the operation
7477:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
7478:Core/Src/bno055.c ****          * current operation mode and set the config mode */
7479:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
7480:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
7481:Core/Src/bno055.c ****         {
7482:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7483:Core/Src/bno055.c ****             {
7484:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
7485:Core/Src/bno055.c ****             }
7486:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
7487:Core/Src/bno055.c ****             {
7488:Core/Src/bno055.c ****                 /* Write the accel unit */
7489:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
7490:Core/Src/bno055.c ****                                                           BNO055_ACCEL_UNIT_REG,
7491:Core/Src/bno055.c ****                                                           &data_u8r,
7492:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
7493:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
7494:Core/Src/bno055.c ****                 {
7495:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_UNIT, accel_unit_u8);
7496:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
7497:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
7498:Core/Src/bno055.c ****                                                                 &data_u8r,
7499:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
7500:Core/Src/bno055.c ****                 }
7501:Core/Src/bno055.c ****             }
7502:Core/Src/bno055.c ****             else
7503:Core/Src/bno055.c ****             {
7504:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
7505:Core/Src/bno055.c ****             }
7506:Core/Src/bno055.c ****         }
7507:Core/Src/bno055.c ****         else
7508:Core/Src/bno055.c ****         {
7509:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7510:Core/Src/bno055.c ****         }
7511:Core/Src/bno055.c ****     }
7512:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7513:Core/Src/bno055.c ****     {
7514:Core/Src/bno055.c ****         /* set the operation mode
ARM GAS  /tmp/ccOloYeZ.s 			page 296


7515:Core/Src/bno055.c ****          * of previous operation mode*/
7516:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
7517:Core/Src/bno055.c ****     }
7518:Core/Src/bno055.c **** 
7519:Core/Src/bno055.c ****     return com_rslt;
7520:Core/Src/bno055.c **** }
7521:Core/Src/bno055.c **** 
7522:Core/Src/bno055.c **** /*!
7523:Core/Src/bno055.c ****  *  @brief This API used to read the gyro unit
7524:Core/Src/bno055.c ****  *  from register from 0x3B bit 1
7525:Core/Src/bno055.c ****  *
7526:Core/Src/bno055.c ****  *  @param gyro_unit_u8 : The value of accel unit
7527:Core/Src/bno055.c ****  *
7528:Core/Src/bno055.c ****  *  gyro_unit_u8  |  result
7529:Core/Src/bno055.c ****  *  -------------   | -----------
7530:Core/Src/bno055.c ****  *    0x00          | BNO055_GYRO_UNIT_DPS
7531:Core/Src/bno055.c ****  *    0x01          | BNO055_GYRO_UNIT_RPS
7532:Core/Src/bno055.c ****  *
7533:Core/Src/bno055.c ****  *  @return results of bus communication function
7534:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7535:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7536:Core/Src/bno055.c ****  *
7537:Core/Src/bno055.c ****  *
7538:Core/Src/bno055.c ****  */
7539:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_unit(u8 *gyro_unit_u8)
7540:Core/Src/bno055.c **** {
 8882              		.loc 1 7540 1 is_stmt 1 view -0
 8883              		.cfi_startproc
 8884              		@ args = 0, pretend = 0, frame = 8
 8885              		@ frame_needed = 0, uses_anonymous_args = 0
 8886              		.loc 1 7540 1 is_stmt 0 view .LVU2424
 8887 0000 30B5     		push	{r4, r5, lr}
 8888              		.cfi_def_cfa_offset 12
 8889              		.cfi_offset 4, -12
 8890              		.cfi_offset 5, -8
 8891              		.cfi_offset 14, -4
 8892 0002 83B0     		sub	sp, sp, #12
 8893              		.cfi_def_cfa_offset 24
7541:Core/Src/bno055.c ****     /* Variable used to return value of
7542:Core/Src/bno055.c ****      * communication routine*/
7543:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8894              		.loc 1 7543 5 is_stmt 1 view .LVU2425
 8895              	.LVL969:
7544:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8896              		.loc 1 7544 5 view .LVU2426
 8897              		.loc 1 7544 8 is_stmt 0 view .LVU2427
 8898 0004 0023     		movs	r3, #0
 8899 0006 8DF80730 		strb	r3, [sp, #7]
7545:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8900              		.loc 1 7545 5 is_stmt 1 view .LVU2428
 8901              	.LVL970:
7546:Core/Src/bno055.c **** 
7547:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7548:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8902              		.loc 1 7548 5 view .LVU2429
 8903              		.loc 1 7548 18 is_stmt 0 view .LVU2430
 8904 000a 134B     		ldr	r3, .L713
ARM GAS  /tmp/ccOloYeZ.s 			page 297


 8905 000c 1B68     		ldr	r3, [r3]
 8906              		.loc 1 7548 8 view .LVU2431
 8907 000e E3B1     		cbz	r3, .L709
 8908 0010 0446     		mov	r4, r0
7549:Core/Src/bno055.c ****     {
7550:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7551:Core/Src/bno055.c ****     }
7552:Core/Src/bno055.c ****     else
7553:Core/Src/bno055.c ****     {
7554:Core/Src/bno055.c ****         /*condition check for page, gyro unit is
7555:Core/Src/bno055.c ****          * available in the page zero*/
7556:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8909              		.loc 1 7556 9 is_stmt 1 view .LVU2432
 8910              		.loc 1 7556 21 is_stmt 0 view .LVU2433
 8911 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8912              		.loc 1 7556 12 view .LVU2434
 8913 0014 9BB9     		cbnz	r3, .L712
 8914              	.LVL971:
 8915              	.L707:
7557:Core/Src/bno055.c ****         {
7558:Core/Src/bno055.c ****             /* Write the page zero*/
7559:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7560:Core/Src/bno055.c ****         }
7561:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8916              		.loc 1 7561 53 discriminator 1 view .LVU2435
 8917 0016 104B     		ldr	r3, .L713
 8918 0018 1B68     		ldr	r3, [r3]
 8919 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8920              		.loc 1 7561 41 discriminator 1 view .LVU2436
 8921 001c C3B9     		cbnz	r3, .L710
 8922              	.L708:
7562:Core/Src/bno055.c ****         {
7563:Core/Src/bno055.c ****             /* Read the gyro unit */
7564:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8923              		.loc 1 7564 13 is_stmt 1 view .LVU2437
 8924              		.loc 1 7564 32 is_stmt 0 view .LVU2438
 8925 001e 0E4B     		ldr	r3, .L713
 8926 0020 1868     		ldr	r0, [r3]
 8927 0022 0569     		ldr	r5, [r0, #16]
 8928              		.loc 1 7564 24 view .LVU2439
 8929 0024 0123     		movs	r3, #1
 8930 0026 0DF10702 		add	r2, sp, #7
 8931 002a 3B21     		movs	r1, #59
 8932 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8933 002e A847     		blx	r5
 8934              	.LVL972:
7565:Core/Src/bno055.c ****                                                       BNO055_GYRO_UNIT_REG,
7566:Core/Src/bno055.c ****                                                       &data_u8r,
7567:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7568:Core/Src/bno055.c ****             *gyro_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_UNIT);
 8935              		.loc 1 7568 13 is_stmt 1 view .LVU2440
 8936              		.loc 1 7568 29 is_stmt 0 view .LVU2441
 8937 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8938 0034 C3F34003 		ubfx	r3, r3, #1, #1
 8939              		.loc 1 7568 27 view .LVU2442
 8940 0038 2370     		strb	r3, [r4]
 8941              	.LVL973:
ARM GAS  /tmp/ccOloYeZ.s 			page 298


 8942              	.L706:
7569:Core/Src/bno055.c ****         }
7570:Core/Src/bno055.c ****         else
7571:Core/Src/bno055.c ****         {
7572:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7573:Core/Src/bno055.c ****         }
7574:Core/Src/bno055.c ****     }
7575:Core/Src/bno055.c **** 
7576:Core/Src/bno055.c ****     return com_rslt;
7577:Core/Src/bno055.c **** }
 8943              		.loc 1 7577 1 view .LVU2443
 8944 003a 03B0     		add	sp, sp, #12
 8945              		.cfi_remember_state
 8946              		.cfi_def_cfa_offset 12
 8947              		@ sp needed
 8948 003c 30BD     		pop	{r4, r5, pc}
 8949              	.LVL974:
 8950              	.L712:
 8951              		.cfi_restore_state
7559:Core/Src/bno055.c ****         }
 8952              		.loc 1 7559 13 is_stmt 1 view .LVU2444
7559:Core/Src/bno055.c ****         }
 8953              		.loc 1 7559 23 is_stmt 0 view .LVU2445
 8954 003e 0020     		movs	r0, #0
 8955              	.LVL975:
7559:Core/Src/bno055.c ****         }
 8956              		.loc 1 7559 23 view .LVU2446
 8957 0040 FFF7FEFF 		bl	bno055_write_page_id
 8958              	.LVL976:
7561:Core/Src/bno055.c ****         {
 8959              		.loc 1 7561 9 is_stmt 1 view .LVU2447
7561:Core/Src/bno055.c ****         {
 8960              		.loc 1 7561 12 is_stmt 0 view .LVU2448
 8961 0044 0028     		cmp	r0, #0
 8962 0046 EAD0     		beq	.L708
 8963 0048 E5E7     		b	.L707
 8964              	.LVL977:
 8965              	.L709:
7550:Core/Src/bno055.c ****     }
 8966              		.loc 1 7550 16 view .LVU2449
 8967 004a 6FF07E00 		mvn	r0, #126
 8968              	.LVL978:
7550:Core/Src/bno055.c ****     }
 8969              		.loc 1 7550 16 view .LVU2450
 8970 004e F4E7     		b	.L706
 8971              	.LVL979:
 8972              	.L710:
7572:Core/Src/bno055.c ****         }
 8973              		.loc 1 7572 22 view .LVU2451
 8974 0050 4FF0FF30 		mov	r0, #-1
 8975 0054 F1E7     		b	.L706
 8976              	.L714:
 8977 0056 00BF     		.align	2
 8978              	.L713:
 8979 0058 00000000 		.word	p_bno055
 8980              		.cfi_endproc
 8981              	.LFE135:
ARM GAS  /tmp/ccOloYeZ.s 			page 299


 8983              		.section	.text.bno055_get_euler_unit,"ax",%progbits
 8984              		.align	1
 8985              		.global	bno055_get_euler_unit
 8986              		.syntax unified
 8987              		.thumb
 8988              		.thumb_func
 8990              	bno055_get_euler_unit:
 8991              	.LVL980:
 8992              	.LFB137:
7578:Core/Src/bno055.c **** 
7579:Core/Src/bno055.c **** /*!
7580:Core/Src/bno055.c ****  *  @brief This API used to write the gyro unit
7581:Core/Src/bno055.c ****  *  from register from 0x3B bit 1
7582:Core/Src/bno055.c ****  *
7583:Core/Src/bno055.c ****  *  @param gyro_unit_u8 : The value of accel unit
7584:Core/Src/bno055.c ****  *
7585:Core/Src/bno055.c ****  *  gyro_unit_u8  |  result
7586:Core/Src/bno055.c ****  *  -------------   | -----------
7587:Core/Src/bno055.c ****  *    0x00          | BNO055_GYRO_UNIT_DPS
7588:Core/Src/bno055.c ****  *    0x01          | BNO055_GYRO_UNIT_RPS
7589:Core/Src/bno055.c ****  *
7590:Core/Src/bno055.c ****  *  @return results of bus communication function
7591:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7592:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7593:Core/Src/bno055.c ****  *
7594:Core/Src/bno055.c ****  *
7595:Core/Src/bno055.c ****  */
7596:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_unit(u8 gyro_unit_u8)
7597:Core/Src/bno055.c **** {
7598:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
7599:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
7600:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
7601:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
7602:Core/Src/bno055.c **** 
7603:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7604:Core/Src/bno055.c ****     if (p_bno055 == NULL)
7605:Core/Src/bno055.c ****     {
7606:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7607:Core/Src/bno055.c ****     }
7608:Core/Src/bno055.c ****     else
7609:Core/Src/bno055.c ****     {
7610:Core/Src/bno055.c ****         /* The write operation effective only if the operation
7611:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
7612:Core/Src/bno055.c ****          * current operation mode and set the config mode */
7613:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
7614:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
7615:Core/Src/bno055.c ****         {
7616:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7617:Core/Src/bno055.c ****             {
7618:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
7619:Core/Src/bno055.c ****             }
7620:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
7621:Core/Src/bno055.c ****             {
7622:Core/Src/bno055.c ****                 /* Write the gyro unit */
7623:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
7624:Core/Src/bno055.c ****                                                           BNO055_GYRO_UNIT_REG,
7625:Core/Src/bno055.c ****                                                           &data_u8r,
ARM GAS  /tmp/ccOloYeZ.s 			page 300


7626:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
7627:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
7628:Core/Src/bno055.c ****                 {
7629:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_UNIT, gyro_unit_u8);
7630:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
7631:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
7632:Core/Src/bno055.c ****                                                                 &data_u8r,
7633:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
7634:Core/Src/bno055.c ****                 }
7635:Core/Src/bno055.c ****             }
7636:Core/Src/bno055.c ****             else
7637:Core/Src/bno055.c ****             {
7638:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
7639:Core/Src/bno055.c ****             }
7640:Core/Src/bno055.c ****         }
7641:Core/Src/bno055.c ****         else
7642:Core/Src/bno055.c ****         {
7643:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7644:Core/Src/bno055.c ****         }
7645:Core/Src/bno055.c ****     }
7646:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7647:Core/Src/bno055.c ****     {
7648:Core/Src/bno055.c ****         /* set the operation mode
7649:Core/Src/bno055.c ****          * of previous operation mode*/
7650:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
7651:Core/Src/bno055.c ****     }
7652:Core/Src/bno055.c **** 
7653:Core/Src/bno055.c ****     return com_rslt;
7654:Core/Src/bno055.c **** }
7655:Core/Src/bno055.c **** 
7656:Core/Src/bno055.c **** /*!
7657:Core/Src/bno055.c ****  *  @brief This API used to read the Euler unit
7658:Core/Src/bno055.c ****  *  from register from 0x3B bit 2
7659:Core/Src/bno055.c ****  *
7660:Core/Src/bno055.c ****  *  @param euler_unit_u8 : The value of accel unit
7661:Core/Src/bno055.c ****  *
7662:Core/Src/bno055.c ****  *    euler_unit_u8 | result
7663:Core/Src/bno055.c ****  *   --------------   | -----------
7664:Core/Src/bno055.c ****  *      0x00          | BNO055_EULER_UNIT_DEG
7665:Core/Src/bno055.c ****  *      0x01          | BNO055_EULER_UNIT_RAD
7666:Core/Src/bno055.c ****  *
7667:Core/Src/bno055.c ****  *  @return results of bus communication function
7668:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7669:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7670:Core/Src/bno055.c ****  *
7671:Core/Src/bno055.c ****  *
7672:Core/Src/bno055.c ****  */
7673:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_euler_unit(u8 *euler_unit_u8)
7674:Core/Src/bno055.c **** {
 8993              		.loc 1 7674 1 is_stmt 1 view -0
 8994              		.cfi_startproc
 8995              		@ args = 0, pretend = 0, frame = 8
 8996              		@ frame_needed = 0, uses_anonymous_args = 0
 8997              		.loc 1 7674 1 is_stmt 0 view .LVU2453
 8998 0000 30B5     		push	{r4, r5, lr}
 8999              		.cfi_def_cfa_offset 12
 9000              		.cfi_offset 4, -12
ARM GAS  /tmp/ccOloYeZ.s 			page 301


 9001              		.cfi_offset 5, -8
 9002              		.cfi_offset 14, -4
 9003 0002 83B0     		sub	sp, sp, #12
 9004              		.cfi_def_cfa_offset 24
7675:Core/Src/bno055.c ****     /* Variable used to return value of
7676:Core/Src/bno055.c ****      * communication routine*/
7677:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9005              		.loc 1 7677 5 is_stmt 1 view .LVU2454
 9006              	.LVL981:
7678:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9007              		.loc 1 7678 5 view .LVU2455
 9008              		.loc 1 7678 8 is_stmt 0 view .LVU2456
 9009 0004 0023     		movs	r3, #0
 9010 0006 8DF80730 		strb	r3, [sp, #7]
7679:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9011              		.loc 1 7679 5 is_stmt 1 view .LVU2457
 9012              	.LVL982:
7680:Core/Src/bno055.c **** 
7681:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7682:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9013              		.loc 1 7682 5 view .LVU2458
 9014              		.loc 1 7682 18 is_stmt 0 view .LVU2459
 9015 000a 134B     		ldr	r3, .L723
 9016 000c 1B68     		ldr	r3, [r3]
 9017              		.loc 1 7682 8 view .LVU2460
 9018 000e E3B1     		cbz	r3, .L719
 9019 0010 0446     		mov	r4, r0
7683:Core/Src/bno055.c ****     {
7684:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7685:Core/Src/bno055.c ****     }
7686:Core/Src/bno055.c ****     else
7687:Core/Src/bno055.c ****     {
7688:Core/Src/bno055.c ****         /*condition check for page, Euler unit is
7689:Core/Src/bno055.c ****          * available in the page zero*/
7690:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9020              		.loc 1 7690 9 is_stmt 1 view .LVU2461
 9021              		.loc 1 7690 21 is_stmt 0 view .LVU2462
 9022 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9023              		.loc 1 7690 12 view .LVU2463
 9024 0014 9BB9     		cbnz	r3, .L722
 9025              	.LVL983:
 9026              	.L717:
7691:Core/Src/bno055.c ****         {
7692:Core/Src/bno055.c ****             /* Write the page zero*/
7693:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7694:Core/Src/bno055.c ****         }
7695:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9027              		.loc 1 7695 53 discriminator 1 view .LVU2464
 9028 0016 104B     		ldr	r3, .L723
 9029 0018 1B68     		ldr	r3, [r3]
 9030 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9031              		.loc 1 7695 41 discriminator 1 view .LVU2465
 9032 001c C3B9     		cbnz	r3, .L720
 9033              	.L718:
7696:Core/Src/bno055.c ****         {
7697:Core/Src/bno055.c ****             /* Read the Euler unit */
7698:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccOloYeZ.s 			page 302


 9034              		.loc 1 7698 13 is_stmt 1 view .LVU2466
 9035              		.loc 1 7698 32 is_stmt 0 view .LVU2467
 9036 001e 0E4B     		ldr	r3, .L723
 9037 0020 1868     		ldr	r0, [r3]
 9038 0022 0569     		ldr	r5, [r0, #16]
 9039              		.loc 1 7698 24 view .LVU2468
 9040 0024 0123     		movs	r3, #1
 9041 0026 0DF10702 		add	r2, sp, #7
 9042 002a 3B21     		movs	r1, #59
 9043 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9044 002e A847     		blx	r5
 9045              	.LVL984:
7699:Core/Src/bno055.c ****                                                       BNO055_EULER_UNIT_REG,
7700:Core/Src/bno055.c ****                                                       &data_u8r,
7701:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7702:Core/Src/bno055.c ****             *euler_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_EULER_UNIT);
 9046              		.loc 1 7702 13 is_stmt 1 view .LVU2469
 9047              		.loc 1 7702 30 is_stmt 0 view .LVU2470
 9048 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9049 0034 C3F38003 		ubfx	r3, r3, #2, #1
 9050              		.loc 1 7702 28 view .LVU2471
 9051 0038 2370     		strb	r3, [r4]
 9052              	.LVL985:
 9053              	.L716:
7703:Core/Src/bno055.c ****         }
7704:Core/Src/bno055.c ****         else
7705:Core/Src/bno055.c ****         {
7706:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7707:Core/Src/bno055.c ****         }
7708:Core/Src/bno055.c ****     }
7709:Core/Src/bno055.c **** 
7710:Core/Src/bno055.c ****     return com_rslt;
7711:Core/Src/bno055.c **** }
 9054              		.loc 1 7711 1 view .LVU2472
 9055 003a 03B0     		add	sp, sp, #12
 9056              		.cfi_remember_state
 9057              		.cfi_def_cfa_offset 12
 9058              		@ sp needed
 9059 003c 30BD     		pop	{r4, r5, pc}
 9060              	.LVL986:
 9061              	.L722:
 9062              		.cfi_restore_state
7693:Core/Src/bno055.c ****         }
 9063              		.loc 1 7693 13 is_stmt 1 view .LVU2473
7693:Core/Src/bno055.c ****         }
 9064              		.loc 1 7693 23 is_stmt 0 view .LVU2474
 9065 003e 0020     		movs	r0, #0
 9066              	.LVL987:
7693:Core/Src/bno055.c ****         }
 9067              		.loc 1 7693 23 view .LVU2475
 9068 0040 FFF7FEFF 		bl	bno055_write_page_id
 9069              	.LVL988:
7695:Core/Src/bno055.c ****         {
 9070              		.loc 1 7695 9 is_stmt 1 view .LVU2476
7695:Core/Src/bno055.c ****         {
 9071              		.loc 1 7695 12 is_stmt 0 view .LVU2477
 9072 0044 0028     		cmp	r0, #0
ARM GAS  /tmp/ccOloYeZ.s 			page 303


 9073 0046 EAD0     		beq	.L718
 9074 0048 E5E7     		b	.L717
 9075              	.LVL989:
 9076              	.L719:
7684:Core/Src/bno055.c ****     }
 9077              		.loc 1 7684 16 view .LVU2478
 9078 004a 6FF07E00 		mvn	r0, #126
 9079              	.LVL990:
7684:Core/Src/bno055.c ****     }
 9080              		.loc 1 7684 16 view .LVU2479
 9081 004e F4E7     		b	.L716
 9082              	.LVL991:
 9083              	.L720:
7706:Core/Src/bno055.c ****         }
 9084              		.loc 1 7706 22 view .LVU2480
 9085 0050 4FF0FF30 		mov	r0, #-1
 9086 0054 F1E7     		b	.L716
 9087              	.L724:
 9088 0056 00BF     		.align	2
 9089              	.L723:
 9090 0058 00000000 		.word	p_bno055
 9091              		.cfi_endproc
 9092              	.LFE137:
 9094              		.section	.text.bno055_get_tilt_unit,"ax",%progbits
 9095              		.align	1
 9096              		.global	bno055_get_tilt_unit
 9097              		.syntax unified
 9098              		.thumb
 9099              		.thumb_func
 9101              	bno055_get_tilt_unit:
 9102              	.LVL992:
 9103              	.LFB139:
7712:Core/Src/bno055.c **** 
7713:Core/Src/bno055.c **** /*!
7714:Core/Src/bno055.c ****  *  @brief This API used to write the Euler unit
7715:Core/Src/bno055.c ****  *  from register from 0x3B bit 2
7716:Core/Src/bno055.c ****  *
7717:Core/Src/bno055.c ****  *  @param euler_unit_u8 : The value of Euler unit
7718:Core/Src/bno055.c ****  *
7719:Core/Src/bno055.c ****  *    euler_unit_u8 | result
7720:Core/Src/bno055.c ****  *   --------------   | -----------
7721:Core/Src/bno055.c ****  *      0x00          | BNO055_EULER_UNIT_DEG
7722:Core/Src/bno055.c ****  *      0x01          | BNO055_EULER_UNIT_RAD
7723:Core/Src/bno055.c ****  *
7724:Core/Src/bno055.c ****  *  @return results of bus communication function
7725:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7726:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7727:Core/Src/bno055.c ****  *
7728:Core/Src/bno055.c ****  *
7729:Core/Src/bno055.c ****  */
7730:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_euler_unit(u8 euler_unit_u8)
7731:Core/Src/bno055.c **** {
7732:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
7733:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
7734:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
7735:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
7736:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 304


7737:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7738:Core/Src/bno055.c ****     if (p_bno055 == NULL)
7739:Core/Src/bno055.c ****     {
7740:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7741:Core/Src/bno055.c ****     }
7742:Core/Src/bno055.c ****     else
7743:Core/Src/bno055.c ****     {
7744:Core/Src/bno055.c ****         /* The write operation effective only if the operation
7745:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
7746:Core/Src/bno055.c ****          * current operation mode and set the config mode */
7747:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
7748:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
7749:Core/Src/bno055.c ****         {
7750:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7751:Core/Src/bno055.c ****             {
7752:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
7753:Core/Src/bno055.c ****             }
7754:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
7755:Core/Src/bno055.c ****             {
7756:Core/Src/bno055.c ****                 /* Write the Euler unit*/
7757:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
7758:Core/Src/bno055.c ****                                                           BNO055_EULER_UNIT_REG,
7759:Core/Src/bno055.c ****                                                           &data_u8r,
7760:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
7761:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
7762:Core/Src/bno055.c ****                 {
7763:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_EULER_UNIT, euler_unit_u8);
7764:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
7765:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
7766:Core/Src/bno055.c ****                                                                 &data_u8r,
7767:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
7768:Core/Src/bno055.c ****                 }
7769:Core/Src/bno055.c ****             }
7770:Core/Src/bno055.c ****             else
7771:Core/Src/bno055.c ****             {
7772:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
7773:Core/Src/bno055.c ****             }
7774:Core/Src/bno055.c ****         }
7775:Core/Src/bno055.c ****         else
7776:Core/Src/bno055.c ****         {
7777:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7778:Core/Src/bno055.c ****         }
7779:Core/Src/bno055.c ****     }
7780:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7781:Core/Src/bno055.c ****     {
7782:Core/Src/bno055.c ****         /* set the operation mode
7783:Core/Src/bno055.c ****          * of previous operation mode*/
7784:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
7785:Core/Src/bno055.c ****     }
7786:Core/Src/bno055.c **** 
7787:Core/Src/bno055.c ****     return com_rslt;
7788:Core/Src/bno055.c **** }
7789:Core/Src/bno055.c **** 
7790:Core/Src/bno055.c **** /*!
7791:Core/Src/bno055.c ****  *  @brief This API used to write the tilt unit
7792:Core/Src/bno055.c ****  *  from register from 0x3B bit 3
7793:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 305


7794:Core/Src/bno055.c ****  *  @param tilt_unit_u8 : The value of tilt unit
7795:Core/Src/bno055.c ****  *
7796:Core/Src/bno055.c ****  *    tilt_unit_u8  | result
7797:Core/Src/bno055.c ****  *   ---------------  | ---------
7798:Core/Src/bno055.c ****  *     0x00           | degrees
7799:Core/Src/bno055.c ****  *     0x01           | radians
7800:Core/Src/bno055.c ****  *
7801:Core/Src/bno055.c ****  *  @return results of bus communication function
7802:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7803:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7804:Core/Src/bno055.c ****  *
7805:Core/Src/bno055.c ****  *
7806:Core/Src/bno055.c ****  */
7807:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_tilt_unit(u8 *tilt_unit_u8)
7808:Core/Src/bno055.c **** {
 9104              		.loc 1 7808 1 is_stmt 1 view -0
 9105              		.cfi_startproc
 9106              		@ args = 0, pretend = 0, frame = 8
 9107              		@ frame_needed = 0, uses_anonymous_args = 0
 9108              		.loc 1 7808 1 is_stmt 0 view .LVU2482
 9109 0000 30B5     		push	{r4, r5, lr}
 9110              		.cfi_def_cfa_offset 12
 9111              		.cfi_offset 4, -12
 9112              		.cfi_offset 5, -8
 9113              		.cfi_offset 14, -4
 9114 0002 83B0     		sub	sp, sp, #12
 9115              		.cfi_def_cfa_offset 24
7809:Core/Src/bno055.c ****     /* Variable used to return value of
7810:Core/Src/bno055.c ****      * communication routine*/
7811:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9116              		.loc 1 7811 5 is_stmt 1 view .LVU2483
 9117              	.LVL993:
7812:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9118              		.loc 1 7812 5 view .LVU2484
 9119              		.loc 1 7812 8 is_stmt 0 view .LVU2485
 9120 0004 0023     		movs	r3, #0
 9121 0006 8DF80730 		strb	r3, [sp, #7]
7813:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9122              		.loc 1 7813 5 is_stmt 1 view .LVU2486
 9123              	.LVL994:
7814:Core/Src/bno055.c **** 
7815:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7816:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9124              		.loc 1 7816 5 view .LVU2487
 9125              		.loc 1 7816 18 is_stmt 0 view .LVU2488
 9126 000a 134B     		ldr	r3, .L733
 9127 000c 1B68     		ldr	r3, [r3]
 9128              		.loc 1 7816 8 view .LVU2489
 9129 000e E3B1     		cbz	r3, .L729
 9130 0010 0446     		mov	r4, r0
7817:Core/Src/bno055.c ****     {
7818:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7819:Core/Src/bno055.c ****     }
7820:Core/Src/bno055.c ****     else
7821:Core/Src/bno055.c ****     {
7822:Core/Src/bno055.c ****         /*condition check for page, chip id is
7823:Core/Src/bno055.c ****          * available in the page zero*/
ARM GAS  /tmp/ccOloYeZ.s 			page 306


7824:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9131              		.loc 1 7824 9 is_stmt 1 view .LVU2490
 9132              		.loc 1 7824 21 is_stmt 0 view .LVU2491
 9133 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9134              		.loc 1 7824 12 view .LVU2492
 9135 0014 9BB9     		cbnz	r3, .L732
 9136              	.LVL995:
 9137              	.L727:
7825:Core/Src/bno055.c ****         {
7826:Core/Src/bno055.c ****             /* Write the page zero*/
7827:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7828:Core/Src/bno055.c ****         }
7829:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9138              		.loc 1 7829 53 discriminator 1 view .LVU2493
 9139 0016 104B     		ldr	r3, .L733
 9140 0018 1B68     		ldr	r3, [r3]
 9141 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9142              		.loc 1 7829 41 discriminator 1 view .LVU2494
 9143 001c C3B9     		cbnz	r3, .L730
 9144              	.L728:
7830:Core/Src/bno055.c ****         {
7831:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9145              		.loc 1 7831 13 is_stmt 1 view .LVU2495
 9146              		.loc 1 7831 32 is_stmt 0 view .LVU2496
 9147 001e 0E4B     		ldr	r3, .L733
 9148 0020 1868     		ldr	r0, [r3]
 9149 0022 0569     		ldr	r5, [r0, #16]
 9150              		.loc 1 7831 24 view .LVU2497
 9151 0024 0123     		movs	r3, #1
 9152 0026 0DF10702 		add	r2, sp, #7
 9153 002a 3B21     		movs	r1, #59
 9154 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9155 002e A847     		blx	r5
 9156              	.LVL996:
7832:Core/Src/bno055.c ****                                                       BNO055_TILT_UNIT_REG,
7833:Core/Src/bno055.c ****                                                       &data_u8r,
7834:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7835:Core/Src/bno055.c ****             *tilt_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_TILT_UNIT);
 9157              		.loc 1 7835 13 is_stmt 1 view .LVU2498
 9158              		.loc 1 7835 29 is_stmt 0 view .LVU2499
 9159 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9160 0034 C3F3C003 		ubfx	r3, r3, #3, #1
 9161              		.loc 1 7835 27 view .LVU2500
 9162 0038 2370     		strb	r3, [r4]
 9163              	.LVL997:
 9164              	.L726:
7836:Core/Src/bno055.c ****         }
7837:Core/Src/bno055.c ****         else
7838:Core/Src/bno055.c ****         {
7839:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7840:Core/Src/bno055.c ****         }
7841:Core/Src/bno055.c ****     }
7842:Core/Src/bno055.c **** 
7843:Core/Src/bno055.c ****     return com_rslt;
7844:Core/Src/bno055.c **** }
 9165              		.loc 1 7844 1 view .LVU2501
 9166 003a 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccOloYeZ.s 			page 307


 9167              		.cfi_remember_state
 9168              		.cfi_def_cfa_offset 12
 9169              		@ sp needed
 9170 003c 30BD     		pop	{r4, r5, pc}
 9171              	.LVL998:
 9172              	.L732:
 9173              		.cfi_restore_state
7827:Core/Src/bno055.c ****         }
 9174              		.loc 1 7827 13 is_stmt 1 view .LVU2502
7827:Core/Src/bno055.c ****         }
 9175              		.loc 1 7827 23 is_stmt 0 view .LVU2503
 9176 003e 0020     		movs	r0, #0
 9177              	.LVL999:
7827:Core/Src/bno055.c ****         }
 9178              		.loc 1 7827 23 view .LVU2504
 9179 0040 FFF7FEFF 		bl	bno055_write_page_id
 9180              	.LVL1000:
7829:Core/Src/bno055.c ****         {
 9181              		.loc 1 7829 9 is_stmt 1 view .LVU2505
7829:Core/Src/bno055.c ****         {
 9182              		.loc 1 7829 12 is_stmt 0 view .LVU2506
 9183 0044 0028     		cmp	r0, #0
 9184 0046 EAD0     		beq	.L728
 9185 0048 E5E7     		b	.L727
 9186              	.LVL1001:
 9187              	.L729:
7818:Core/Src/bno055.c ****     }
 9188              		.loc 1 7818 16 view .LVU2507
 9189 004a 6FF07E00 		mvn	r0, #126
 9190              	.LVL1002:
7818:Core/Src/bno055.c ****     }
 9191              		.loc 1 7818 16 view .LVU2508
 9192 004e F4E7     		b	.L726
 9193              	.LVL1003:
 9194              	.L730:
7839:Core/Src/bno055.c ****         }
 9195              		.loc 1 7839 22 view .LVU2509
 9196 0050 4FF0FF30 		mov	r0, #-1
 9197 0054 F1E7     		b	.L726
 9198              	.L734:
 9199 0056 00BF     		.align	2
 9200              	.L733:
 9201 0058 00000000 		.word	p_bno055
 9202              		.cfi_endproc
 9203              	.LFE139:
 9205              		.section	.text.bno055_get_temp_unit,"ax",%progbits
 9206              		.align	1
 9207              		.global	bno055_get_temp_unit
 9208              		.syntax unified
 9209              		.thumb
 9210              		.thumb_func
 9212              	bno055_get_temp_unit:
 9213              	.LVL1004:
 9214              	.LFB141:
7845:Core/Src/bno055.c **** 
7846:Core/Src/bno055.c **** /*!
7847:Core/Src/bno055.c ****  *  @brief This API used to write the tilt unit
ARM GAS  /tmp/ccOloYeZ.s 			page 308


7848:Core/Src/bno055.c ****  *  from register from 0x3B bit 3
7849:Core/Src/bno055.c ****  *
7850:Core/Src/bno055.c ****  *  @param tilt_unit_u8 : The value of tilt unit
7851:Core/Src/bno055.c ****  *
7852:Core/Src/bno055.c ****  *    tilt_unit_u8  | result
7853:Core/Src/bno055.c ****  *   ---------------  | ---------
7854:Core/Src/bno055.c ****  *     0x00           | degrees
7855:Core/Src/bno055.c ****  *     0x01           | radians
7856:Core/Src/bno055.c ****  *
7857:Core/Src/bno055.c ****  *  @return results of bus communication function
7858:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7859:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7860:Core/Src/bno055.c ****  *
7861:Core/Src/bno055.c ****  *
7862:Core/Src/bno055.c ****  *
7863:Core/Src/bno055.c ****  *  \return Communication results
7864:Core/Src/bno055.c ****  *
7865:Core/Src/bno055.c ****  *
7866:Core/Src/bno055.c ****  */
7867:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_tilt_unit(u8 tilt_unit_u8)
7868:Core/Src/bno055.c **** {
7869:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
7870:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
7871:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
7872:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
7873:Core/Src/bno055.c **** 
7874:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7875:Core/Src/bno055.c ****     if (p_bno055 == NULL)
7876:Core/Src/bno055.c ****     {
7877:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7878:Core/Src/bno055.c ****     }
7879:Core/Src/bno055.c ****     else
7880:Core/Src/bno055.c ****     {
7881:Core/Src/bno055.c ****         /* The write operation effective only if the operation
7882:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
7883:Core/Src/bno055.c ****          * current operation mode and set the config mode */
7884:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
7885:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
7886:Core/Src/bno055.c ****         {
7887:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7888:Core/Src/bno055.c ****             {
7889:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
7890:Core/Src/bno055.c ****             }
7891:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
7892:Core/Src/bno055.c ****             {
7893:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
7894:Core/Src/bno055.c ****                                                           BNO055_TILT_UNIT_REG,
7895:Core/Src/bno055.c ****                                                           &data_u8r,
7896:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
7897:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
7898:Core/Src/bno055.c ****                 {
7899:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_TILT_UNIT, tilt_unit_u8);
7900:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
7901:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
7902:Core/Src/bno055.c ****                                                                 &data_u8r,
7903:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
7904:Core/Src/bno055.c ****                 }
ARM GAS  /tmp/ccOloYeZ.s 			page 309


7905:Core/Src/bno055.c ****             }
7906:Core/Src/bno055.c ****             else
7907:Core/Src/bno055.c ****             {
7908:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
7909:Core/Src/bno055.c ****             }
7910:Core/Src/bno055.c ****         }
7911:Core/Src/bno055.c ****         else
7912:Core/Src/bno055.c ****         {
7913:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7914:Core/Src/bno055.c ****         }
7915:Core/Src/bno055.c ****     }
7916:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7917:Core/Src/bno055.c ****     {
7918:Core/Src/bno055.c ****         /* set the operation mode
7919:Core/Src/bno055.c ****          * of previous operation mode*/
7920:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
7921:Core/Src/bno055.c ****     }
7922:Core/Src/bno055.c **** 
7923:Core/Src/bno055.c ****     return com_rslt;
7924:Core/Src/bno055.c **** }
7925:Core/Src/bno055.c **** 
7926:Core/Src/bno055.c **** /*!
7927:Core/Src/bno055.c ****  *  @brief This API used to read the temperature unit
7928:Core/Src/bno055.c ****  *  from register from 0x3B bit 4
7929:Core/Src/bno055.c ****  *
7930:Core/Src/bno055.c ****  *  @param temp_unit_u8 : The value of temperature unit
7931:Core/Src/bno055.c ****  *
7932:Core/Src/bno055.c ****  *    temp_unit_u8  |  result
7933:Core/Src/bno055.c ****  *   -----------      | --------------
7934:Core/Src/bno055.c ****  *      0x00          | BNO055_TEMP_UNIT_CELSIUS
7935:Core/Src/bno055.c ****  *      0x01          | BNO055_TEMP_UNIT_FAHRENHEIT
7936:Core/Src/bno055.c ****  *
7937:Core/Src/bno055.c ****  *  @return results of bus communication function
7938:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7939:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7940:Core/Src/bno055.c ****  *
7941:Core/Src/bno055.c ****  */
7942:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_temp_unit(u8 *temp_unit_u8)
7943:Core/Src/bno055.c **** {
 9215              		.loc 1 7943 1 is_stmt 1 view -0
 9216              		.cfi_startproc
 9217              		@ args = 0, pretend = 0, frame = 8
 9218              		@ frame_needed = 0, uses_anonymous_args = 0
 9219              		.loc 1 7943 1 is_stmt 0 view .LVU2511
 9220 0000 30B5     		push	{r4, r5, lr}
 9221              		.cfi_def_cfa_offset 12
 9222              		.cfi_offset 4, -12
 9223              		.cfi_offset 5, -8
 9224              		.cfi_offset 14, -4
 9225 0002 83B0     		sub	sp, sp, #12
 9226              		.cfi_def_cfa_offset 24
7944:Core/Src/bno055.c ****     /* Variable used to return value of
7945:Core/Src/bno055.c ****      * communication routine*/
7946:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9227              		.loc 1 7946 5 is_stmt 1 view .LVU2512
 9228              	.LVL1005:
7947:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccOloYeZ.s 			page 310


 9229              		.loc 1 7947 5 view .LVU2513
 9230              		.loc 1 7947 8 is_stmt 0 view .LVU2514
 9231 0004 0023     		movs	r3, #0
 9232 0006 8DF80730 		strb	r3, [sp, #7]
7948:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9233              		.loc 1 7948 5 is_stmt 1 view .LVU2515
 9234              	.LVL1006:
7949:Core/Src/bno055.c **** 
7950:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7951:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9235              		.loc 1 7951 5 view .LVU2516
 9236              		.loc 1 7951 18 is_stmt 0 view .LVU2517
 9237 000a 134B     		ldr	r3, .L743
 9238 000c 1B68     		ldr	r3, [r3]
 9239              		.loc 1 7951 8 view .LVU2518
 9240 000e E3B1     		cbz	r3, .L739
 9241 0010 0446     		mov	r4, r0
7952:Core/Src/bno055.c ****     {
7953:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7954:Core/Src/bno055.c ****     }
7955:Core/Src/bno055.c ****     else
7956:Core/Src/bno055.c ****     {
7957:Core/Src/bno055.c ****         /*condition check for page, temperature unit is
7958:Core/Src/bno055.c ****          * available in the page zero*/
7959:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9242              		.loc 1 7959 9 is_stmt 1 view .LVU2519
 9243              		.loc 1 7959 21 is_stmt 0 view .LVU2520
 9244 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9245              		.loc 1 7959 12 view .LVU2521
 9246 0014 9BB9     		cbnz	r3, .L742
 9247              	.LVL1007:
 9248              	.L737:
7960:Core/Src/bno055.c ****         {
7961:Core/Src/bno055.c ****             /* Write the page zero*/
7962:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7963:Core/Src/bno055.c ****         }
7964:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9249              		.loc 1 7964 53 discriminator 1 view .LVU2522
 9250 0016 104B     		ldr	r3, .L743
 9251 0018 1B68     		ldr	r3, [r3]
 9252 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9253              		.loc 1 7964 41 discriminator 1 view .LVU2523
 9254 001c C3B9     		cbnz	r3, .L740
 9255              	.L738:
7965:Core/Src/bno055.c ****         {
7966:Core/Src/bno055.c ****             /* Read the temperature unit */
7967:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9256              		.loc 1 7967 13 is_stmt 1 view .LVU2524
 9257              		.loc 1 7967 32 is_stmt 0 view .LVU2525
 9258 001e 0E4B     		ldr	r3, .L743
 9259 0020 1868     		ldr	r0, [r3]
 9260 0022 0569     		ldr	r5, [r0, #16]
 9261              		.loc 1 7967 24 view .LVU2526
 9262 0024 0123     		movs	r3, #1
 9263 0026 0DF10702 		add	r2, sp, #7
 9264 002a 3B21     		movs	r1, #59
 9265 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccOloYeZ.s 			page 311


 9266 002e A847     		blx	r5
 9267              	.LVL1008:
7968:Core/Src/bno055.c ****                                                       BNO055_TEMP_UNIT_REG,
7969:Core/Src/bno055.c ****                                                       &data_u8r,
7970:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7971:Core/Src/bno055.c ****             *temp_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_TEMP_UNIT);
 9268              		.loc 1 7971 13 is_stmt 1 view .LVU2527
 9269              		.loc 1 7971 29 is_stmt 0 view .LVU2528
 9270 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9271 0034 C3F30013 		ubfx	r3, r3, #4, #1
 9272              		.loc 1 7971 27 view .LVU2529
 9273 0038 2370     		strb	r3, [r4]
 9274              	.LVL1009:
 9275              	.L736:
7972:Core/Src/bno055.c ****         }
7973:Core/Src/bno055.c ****         else
7974:Core/Src/bno055.c ****         {
7975:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7976:Core/Src/bno055.c ****         }
7977:Core/Src/bno055.c ****     }
7978:Core/Src/bno055.c **** 
7979:Core/Src/bno055.c ****     return com_rslt;
7980:Core/Src/bno055.c **** }
 9276              		.loc 1 7980 1 view .LVU2530
 9277 003a 03B0     		add	sp, sp, #12
 9278              		.cfi_remember_state
 9279              		.cfi_def_cfa_offset 12
 9280              		@ sp needed
 9281 003c 30BD     		pop	{r4, r5, pc}
 9282              	.LVL1010:
 9283              	.L742:
 9284              		.cfi_restore_state
7962:Core/Src/bno055.c ****         }
 9285              		.loc 1 7962 13 is_stmt 1 view .LVU2531
7962:Core/Src/bno055.c ****         }
 9286              		.loc 1 7962 23 is_stmt 0 view .LVU2532
 9287 003e 0020     		movs	r0, #0
 9288              	.LVL1011:
7962:Core/Src/bno055.c ****         }
 9289              		.loc 1 7962 23 view .LVU2533
 9290 0040 FFF7FEFF 		bl	bno055_write_page_id
 9291              	.LVL1012:
7964:Core/Src/bno055.c ****         {
 9292              		.loc 1 7964 9 is_stmt 1 view .LVU2534
7964:Core/Src/bno055.c ****         {
 9293              		.loc 1 7964 12 is_stmt 0 view .LVU2535
 9294 0044 0028     		cmp	r0, #0
 9295 0046 EAD0     		beq	.L738
 9296 0048 E5E7     		b	.L737
 9297              	.LVL1013:
 9298              	.L739:
7953:Core/Src/bno055.c ****     }
 9299              		.loc 1 7953 16 view .LVU2536
 9300 004a 6FF07E00 		mvn	r0, #126
 9301              	.LVL1014:
7953:Core/Src/bno055.c ****     }
 9302              		.loc 1 7953 16 view .LVU2537
ARM GAS  /tmp/ccOloYeZ.s 			page 312


 9303 004e F4E7     		b	.L736
 9304              	.LVL1015:
 9305              	.L740:
7975:Core/Src/bno055.c ****         }
 9306              		.loc 1 7975 22 view .LVU2538
 9307 0050 4FF0FF30 		mov	r0, #-1
 9308 0054 F1E7     		b	.L736
 9309              	.L744:
 9310 0056 00BF     		.align	2
 9311              	.L743:
 9312 0058 00000000 		.word	p_bno055
 9313              		.cfi_endproc
 9314              	.LFE141:
 9316              		.section	.text.bno055_get_data_output_format,"ax",%progbits
 9317              		.align	1
 9318              		.global	bno055_get_data_output_format
 9319              		.syntax unified
 9320              		.thumb
 9321              		.thumb_func
 9323              	bno055_get_data_output_format:
 9324              	.LVL1016:
 9325              	.LFB143:
7981:Core/Src/bno055.c **** 
7982:Core/Src/bno055.c **** /*!
7983:Core/Src/bno055.c ****  *  @brief This API used to write the temperature unit
7984:Core/Src/bno055.c ****  *  from register from 0x3B bit 4
7985:Core/Src/bno055.c ****  *
7986:Core/Src/bno055.c ****  *  @param temp_unit_u8 : The value of temperature unit
7987:Core/Src/bno055.c ****  *
7988:Core/Src/bno055.c ****  *    temp_unit_u8  |  result
7989:Core/Src/bno055.c ****  *   -----------      | --------------
7990:Core/Src/bno055.c ****  *      0x00          | BNO055_TEMP_UNIT_CELSIUS
7991:Core/Src/bno055.c ****  *      0x01          | BNO055_TEMP_UNIT_FAHRENHEIT
7992:Core/Src/bno055.c ****  *
7993:Core/Src/bno055.c ****  *  @return results of bus communication function
7994:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7995:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7996:Core/Src/bno055.c ****  *
7997:Core/Src/bno055.c ****  *
7998:Core/Src/bno055.c ****  */
7999:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_temp_unit(u8 temp_unit_u8)
8000:Core/Src/bno055.c **** {
8001:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
8002:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
8003:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
8004:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
8005:Core/Src/bno055.c **** 
8006:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8007:Core/Src/bno055.c ****     if (p_bno055 == NULL)
8008:Core/Src/bno055.c ****     {
8009:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8010:Core/Src/bno055.c ****     }
8011:Core/Src/bno055.c ****     else
8012:Core/Src/bno055.c ****     {
8013:Core/Src/bno055.c ****         /* The write operation effective only if the operation
8014:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
8015:Core/Src/bno055.c ****          * current operation mode and set the config mode */
ARM GAS  /tmp/ccOloYeZ.s 			page 313


8016:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
8017:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
8018:Core/Src/bno055.c ****         {
8019:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
8020:Core/Src/bno055.c ****             {
8021:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
8022:Core/Src/bno055.c ****             }
8023:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
8024:Core/Src/bno055.c ****             {
8025:Core/Src/bno055.c ****                 /* Write the temperature unit */
8026:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
8027:Core/Src/bno055.c ****                                                           BNO055_TEMP_UNIT_REG,
8028:Core/Src/bno055.c ****                                                           &data_u8r,
8029:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8030:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
8031:Core/Src/bno055.c ****                 {
8032:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_TEMP_UNIT, temp_unit_u8);
8033:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
8034:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
8035:Core/Src/bno055.c ****                                                                 &data_u8r,
8036:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
8037:Core/Src/bno055.c ****                 }
8038:Core/Src/bno055.c ****             }
8039:Core/Src/bno055.c ****             else
8040:Core/Src/bno055.c ****             {
8041:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
8042:Core/Src/bno055.c ****             }
8043:Core/Src/bno055.c ****         }
8044:Core/Src/bno055.c ****         else
8045:Core/Src/bno055.c ****         {
8046:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8047:Core/Src/bno055.c ****         }
8048:Core/Src/bno055.c ****     }
8049:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
8050:Core/Src/bno055.c ****     {
8051:Core/Src/bno055.c ****         /* set the operation mode
8052:Core/Src/bno055.c ****          * of previous operation mode*/
8053:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
8054:Core/Src/bno055.c ****     }
8055:Core/Src/bno055.c **** 
8056:Core/Src/bno055.c ****     return com_rslt;
8057:Core/Src/bno055.c **** }
8058:Core/Src/bno055.c **** 
8059:Core/Src/bno055.c **** /*!
8060:Core/Src/bno055.c ****  *  @brief This API used to read the current selected orientation mode
8061:Core/Src/bno055.c ****  *  from register from 0x3B bit 7
8062:Core/Src/bno055.c ****  *
8063:Core/Src/bno055.c ****  *  @param data_output_format_u8 : The value of data output format
8064:Core/Src/bno055.c ****  *
8065:Core/Src/bno055.c ****  *    data_output_format_u8  | result
8066:Core/Src/bno055.c ****  *   --------------------      | --------
8067:Core/Src/bno055.c ****  *    0x00                     | Windows
8068:Core/Src/bno055.c ****  *    0x01                     | Android
8069:Core/Src/bno055.c ****  *
8070:Core/Src/bno055.c ****  *  @return results of bus communication function
8071:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8072:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
ARM GAS  /tmp/ccOloYeZ.s 			page 314


8073:Core/Src/bno055.c ****  *
8074:Core/Src/bno055.c ****  */
8075:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_data_output_format(u8 *data_output_format_u8)
8076:Core/Src/bno055.c **** {
 9326              		.loc 1 8076 1 is_stmt 1 view -0
 9327              		.cfi_startproc
 9328              		@ args = 0, pretend = 0, frame = 8
 9329              		@ frame_needed = 0, uses_anonymous_args = 0
 9330              		.loc 1 8076 1 is_stmt 0 view .LVU2540
 9331 0000 30B5     		push	{r4, r5, lr}
 9332              		.cfi_def_cfa_offset 12
 9333              		.cfi_offset 4, -12
 9334              		.cfi_offset 5, -8
 9335              		.cfi_offset 14, -4
 9336 0002 83B0     		sub	sp, sp, #12
 9337              		.cfi_def_cfa_offset 24
8077:Core/Src/bno055.c ****     /* Variable used to return value of
8078:Core/Src/bno055.c ****      * communication routine*/
8079:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9338              		.loc 1 8079 5 is_stmt 1 view .LVU2541
 9339              	.LVL1017:
8080:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9340              		.loc 1 8080 5 view .LVU2542
 9341              		.loc 1 8080 8 is_stmt 0 view .LVU2543
 9342 0004 0023     		movs	r3, #0
 9343 0006 8DF80730 		strb	r3, [sp, #7]
8081:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9344              		.loc 1 8081 5 is_stmt 1 view .LVU2544
 9345              	.LVL1018:
8082:Core/Src/bno055.c **** 
8083:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8084:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9346              		.loc 1 8084 5 view .LVU2545
 9347              		.loc 1 8084 18 is_stmt 0 view .LVU2546
 9348 000a 124B     		ldr	r3, .L753
 9349 000c 1B68     		ldr	r3, [r3]
 9350              		.loc 1 8084 8 view .LVU2547
 9351 000e DBB1     		cbz	r3, .L749
 9352 0010 0446     		mov	r4, r0
8085:Core/Src/bno055.c ****     {
8086:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8087:Core/Src/bno055.c ****     }
8088:Core/Src/bno055.c ****     else
8089:Core/Src/bno055.c ****     {
8090:Core/Src/bno055.c ****         /*condition check for page, data output format is
8091:Core/Src/bno055.c ****          * available in the page zero*/
8092:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9353              		.loc 1 8092 9 is_stmt 1 view .LVU2548
 9354              		.loc 1 8092 21 is_stmt 0 view .LVU2549
 9355 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9356              		.loc 1 8092 12 view .LVU2550
 9357 0014 93B9     		cbnz	r3, .L752
 9358              	.LVL1019:
 9359              	.L747:
8093:Core/Src/bno055.c ****         {
8094:Core/Src/bno055.c ****             /* Write the page zero*/
8095:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
ARM GAS  /tmp/ccOloYeZ.s 			page 315


8096:Core/Src/bno055.c ****         }
8097:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9360              		.loc 1 8097 53 discriminator 1 view .LVU2551
 9361 0016 0F4B     		ldr	r3, .L753
 9362 0018 1B68     		ldr	r3, [r3]
 9363 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9364              		.loc 1 8097 41 discriminator 1 view .LVU2552
 9365 001c BBB9     		cbnz	r3, .L750
 9366              	.L748:
8098:Core/Src/bno055.c ****         {
8099:Core/Src/bno055.c ****             /* Read the data output format */
8100:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9367              		.loc 1 8100 13 is_stmt 1 view .LVU2553
 9368              		.loc 1 8100 32 is_stmt 0 view .LVU2554
 9369 001e 0D4B     		ldr	r3, .L753
 9370 0020 1868     		ldr	r0, [r3]
 9371 0022 0569     		ldr	r5, [r0, #16]
 9372              		.loc 1 8100 24 view .LVU2555
 9373 0024 0123     		movs	r3, #1
 9374 0026 0DF10702 		add	r2, sp, #7
 9375 002a 3B21     		movs	r1, #59
 9376 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9377 002e A847     		blx	r5
 9378              	.LVL1020:
8101:Core/Src/bno055.c ****                                                       BNO055_DATA_OUTPUT_FORMAT_REG,
8102:Core/Src/bno055.c ****                                                       &data_u8r,
8103:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8104:Core/Src/bno055.c ****             *data_output_format_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_DATA_OUTPUT_FORMAT);
 9379              		.loc 1 8104 13 is_stmt 1 view .LVU2556
 9380              		.loc 1 8104 38 is_stmt 0 view .LVU2557
 9381 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9382 0034 DB09     		lsrs	r3, r3, #7
 9383              		.loc 1 8104 36 view .LVU2558
 9384 0036 2370     		strb	r3, [r4]
 9385              	.LVL1021:
 9386              	.L746:
8105:Core/Src/bno055.c ****         }
8106:Core/Src/bno055.c ****         else
8107:Core/Src/bno055.c ****         {
8108:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8109:Core/Src/bno055.c ****         }
8110:Core/Src/bno055.c ****     }
8111:Core/Src/bno055.c **** 
8112:Core/Src/bno055.c ****     return com_rslt;
8113:Core/Src/bno055.c **** }
 9387              		.loc 1 8113 1 view .LVU2559
 9388 0038 03B0     		add	sp, sp, #12
 9389              		.cfi_remember_state
 9390              		.cfi_def_cfa_offset 12
 9391              		@ sp needed
 9392 003a 30BD     		pop	{r4, r5, pc}
 9393              	.LVL1022:
 9394              	.L752:
 9395              		.cfi_restore_state
8095:Core/Src/bno055.c ****         }
 9396              		.loc 1 8095 13 is_stmt 1 view .LVU2560
8095:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 316


 9397              		.loc 1 8095 23 is_stmt 0 view .LVU2561
 9398 003c 0020     		movs	r0, #0
 9399              	.LVL1023:
8095:Core/Src/bno055.c ****         }
 9400              		.loc 1 8095 23 view .LVU2562
 9401 003e FFF7FEFF 		bl	bno055_write_page_id
 9402              	.LVL1024:
8097:Core/Src/bno055.c ****         {
 9403              		.loc 1 8097 9 is_stmt 1 view .LVU2563
8097:Core/Src/bno055.c ****         {
 9404              		.loc 1 8097 12 is_stmt 0 view .LVU2564
 9405 0042 0028     		cmp	r0, #0
 9406 0044 EBD0     		beq	.L748
 9407 0046 E6E7     		b	.L747
 9408              	.LVL1025:
 9409              	.L749:
8086:Core/Src/bno055.c ****     }
 9410              		.loc 1 8086 16 view .LVU2565
 9411 0048 6FF07E00 		mvn	r0, #126
 9412              	.LVL1026:
8086:Core/Src/bno055.c ****     }
 9413              		.loc 1 8086 16 view .LVU2566
 9414 004c F4E7     		b	.L746
 9415              	.LVL1027:
 9416              	.L750:
8108:Core/Src/bno055.c ****         }
 9417              		.loc 1 8108 22 view .LVU2567
 9418 004e 4FF0FF30 		mov	r0, #-1
 9419 0052 F1E7     		b	.L746
 9420              	.L754:
 9421              		.align	2
 9422              	.L753:
 9423 0054 00000000 		.word	p_bno055
 9424              		.cfi_endproc
 9425              	.LFE143:
 9427              		.section	.text.bno055_get_operation_mode,"ax",%progbits
 9428              		.align	1
 9429              		.global	bno055_get_operation_mode
 9430              		.syntax unified
 9431              		.thumb
 9432              		.thumb_func
 9434              	bno055_get_operation_mode:
 9435              	.LVL1028:
 9436              	.LFB145:
8114:Core/Src/bno055.c **** 
8115:Core/Src/bno055.c **** /*!
8116:Core/Src/bno055.c ****  *  @brief This API used to write the current selected orientation mode
8117:Core/Src/bno055.c ****  *  from register from 0x3B bit 7
8118:Core/Src/bno055.c ****  *
8119:Core/Src/bno055.c ****  *  @param data_output_format_u8 : The value of data output format
8120:Core/Src/bno055.c ****  *
8121:Core/Src/bno055.c ****  *    data_output_format_u8  | result
8122:Core/Src/bno055.c ****  *   --------------------      | --------
8123:Core/Src/bno055.c ****  *    0x00                     | Windows
8124:Core/Src/bno055.c ****  *    0x01                     | Android
8125:Core/Src/bno055.c ****  *
8126:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/ccOloYeZ.s 			page 317


8127:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8128:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8129:Core/Src/bno055.c ****  *
8130:Core/Src/bno055.c ****  *
8131:Core/Src/bno055.c ****  */
8132:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_data_output_format(u8 data_output_format_u8)
8133:Core/Src/bno055.c **** {
8134:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
8135:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
8136:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
8137:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
8138:Core/Src/bno055.c **** 
8139:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8140:Core/Src/bno055.c ****     if (p_bno055 == NULL)
8141:Core/Src/bno055.c ****     {
8142:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8143:Core/Src/bno055.c ****     }
8144:Core/Src/bno055.c ****     else
8145:Core/Src/bno055.c ****     {
8146:Core/Src/bno055.c ****         /* The write operation effective only if the operation
8147:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
8148:Core/Src/bno055.c ****          * current operation mode and set the config mode */
8149:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
8150:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
8151:Core/Src/bno055.c ****         {
8152:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
8153:Core/Src/bno055.c ****             {
8154:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
8155:Core/Src/bno055.c ****             }
8156:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
8157:Core/Src/bno055.c ****             {
8158:Core/Src/bno055.c ****                 /* Write the data output format */
8159:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
8160:Core/Src/bno055.c ****                                                           BNO055_DATA_OUTPUT_FORMAT_REG,
8161:Core/Src/bno055.c ****                                                           &data_u8r,
8162:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8163:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
8164:Core/Src/bno055.c ****                 {
8165:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_DATA_OUTPUT_FORMAT, data_output
8166:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
8167:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
8168:Core/Src/bno055.c ****                                                                 &data_u8r,
8169:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
8170:Core/Src/bno055.c ****                 }
8171:Core/Src/bno055.c ****             }
8172:Core/Src/bno055.c ****             else
8173:Core/Src/bno055.c ****             {
8174:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
8175:Core/Src/bno055.c ****             }
8176:Core/Src/bno055.c ****         }
8177:Core/Src/bno055.c ****         else
8178:Core/Src/bno055.c ****         {
8179:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8180:Core/Src/bno055.c ****         }
8181:Core/Src/bno055.c ****     }
8182:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
8183:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 318


8184:Core/Src/bno055.c ****         /* set the operation mode
8185:Core/Src/bno055.c ****          * of previous operation mode*/
8186:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
8187:Core/Src/bno055.c ****     }
8188:Core/Src/bno055.c **** 
8189:Core/Src/bno055.c ****     return com_rslt;
8190:Core/Src/bno055.c **** }
8191:Core/Src/bno055.c **** 
8192:Core/Src/bno055.c **** /*! @brief This API used to read the operation mode
8193:Core/Src/bno055.c ****  *  from register from 0x3D bit 0 to 3
8194:Core/Src/bno055.c ****  *
8195:Core/Src/bno055.c ****  *  @param operation_mode_u8 : The value of operation mode
8196:Core/Src/bno055.c ****  *
8197:Core/Src/bno055.c ****  * operation_mode_u8 |      result      | comments
8198:Core/Src/bno055.c ****  * ----------|----------------------------|----------------------------
8199:Core/Src/bno055.c ****  *  0x00     | BNO055_OPERATION_MODE_CONFIG      | Configuration mode
8200:Core/Src/bno055.c ****  *  0x01     | BNO055_OPERATION_MODE_ACCONLY     | Reads accel data alone
8201:Core/Src/bno055.c ****  *  0x02     | BNO055_OPERATION_MODE_MAGONLY     | Reads mag data alone
8202:Core/Src/bno055.c ****  *  0x03     | BNO055_OPERATION_MODE_GYRONLY     | Reads gyro data alone
8203:Core/Src/bno055.c ****  *  0x04     | BNO055_OPERATION_MODE_ACCMAG      | Reads accel and mag data
8204:Core/Src/bno055.c ****  *  0x05     | BNO055_OPERATION_MODE_ACCGYRO     | Reads accel and gyro data
8205:Core/Src/bno055.c ****  *  0x06     | BNO055_OPERATION_MODE_MAGGYRO     | Reads accel and mag data
8206:Core/Src/bno055.c ****  *  0x07     | OPERATION_MODE_ANY_MOTION  | Reads accel mag and gyro data
8207:Core/Src/bno055.c ****  *  0x08     | BNO055_OPERATION_MODE_IMUPLUS     | Inertial measurement unit
8208:Core/Src/bno055.c ****  *   -       |       -                    | Reads accel,gyro and fusion data
8209:Core/Src/bno055.c ****  *  0x09     | BNO055_OPERATION_MODE_COMPASS     | Reads accel, mag data
8210:Core/Src/bno055.c ****  *   -       |       -                    | and fusion data
8211:Core/Src/bno055.c ****  *  0x0A     | BNO055_OPERATION_MODE_M4G         | Reads accel, mag data
8212:Core/Src/bno055.c ****  *    -      |       -                    | and fusion data
8213:Core/Src/bno055.c ****  *  0x0B     | BNO055_OPERATION_MODE_NDOF_FMC_OFF| Nine degrees of freedom with
8214:Core/Src/bno055.c ****  *   -       |       -                    | fast magnetic calibration
8215:Core/Src/bno055.c ****  *   -       |       -                    | Reads accel,mag, gyro
8216:Core/Src/bno055.c ****  *   -       |       -                    | and fusion data
8217:Core/Src/bno055.c ****  *  0x0C     | BNO055_OPERATION_MODE_NDOF        | Nine degrees of freedom
8218:Core/Src/bno055.c ****  *   -       |       -                    | Reads accel,mag, gyro
8219:Core/Src/bno055.c ****  *   -       |       -                    | and fusion data
8220:Core/Src/bno055.c ****  *
8221:Core/Src/bno055.c ****  *  @return results of bus communication function
8222:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8223:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8224:Core/Src/bno055.c ****  *
8225:Core/Src/bno055.c ****  *  @note In the config mode, all sensor and fusion data
8226:Core/Src/bno055.c ****  *  becomes zero and it is mainly derived
8227:Core/Src/bno055.c ****  *  to configure the various settings of the BNO
8228:Core/Src/bno055.c ****  *
8229:Core/Src/bno055.c ****  */
8230:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_operation_mode(u8 *operation_mode_u8)
8231:Core/Src/bno055.c **** {
 9437              		.loc 1 8231 1 is_stmt 1 view -0
 9438              		.cfi_startproc
 9439              		@ args = 0, pretend = 0, frame = 8
 9440              		@ frame_needed = 0, uses_anonymous_args = 0
 9441              		.loc 1 8231 1 is_stmt 0 view .LVU2569
 9442 0000 30B5     		push	{r4, r5, lr}
 9443              		.cfi_def_cfa_offset 12
 9444              		.cfi_offset 4, -12
 9445              		.cfi_offset 5, -8
ARM GAS  /tmp/ccOloYeZ.s 			page 319


 9446              		.cfi_offset 14, -4
 9447 0002 83B0     		sub	sp, sp, #12
 9448              		.cfi_def_cfa_offset 24
8232:Core/Src/bno055.c ****     /* Variable used to return value of
8233:Core/Src/bno055.c ****      * communication routine*/
8234:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9449              		.loc 1 8234 5 is_stmt 1 view .LVU2570
 9450              	.LVL1029:
8235:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9451              		.loc 1 8235 5 view .LVU2571
 9452              		.loc 1 8235 8 is_stmt 0 view .LVU2572
 9453 0004 0023     		movs	r3, #0
 9454 0006 8DF80730 		strb	r3, [sp, #7]
8236:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9455              		.loc 1 8236 5 is_stmt 1 view .LVU2573
 9456              	.LVL1030:
8237:Core/Src/bno055.c **** 
8238:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8239:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9457              		.loc 1 8239 5 view .LVU2574
 9458              		.loc 1 8239 18 is_stmt 0 view .LVU2575
 9459 000a 134B     		ldr	r3, .L763
 9460 000c 1B68     		ldr	r3, [r3]
 9461              		.loc 1 8239 8 view .LVU2576
 9462 000e E3B1     		cbz	r3, .L759
 9463 0010 0446     		mov	r4, r0
8240:Core/Src/bno055.c ****     {
8241:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8242:Core/Src/bno055.c ****     }
8243:Core/Src/bno055.c ****     else
8244:Core/Src/bno055.c ****     {
8245:Core/Src/bno055.c ****         /*condition check for page, operation mode is
8246:Core/Src/bno055.c ****          * available in the page zero*/
8247:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9464              		.loc 1 8247 9 is_stmt 1 view .LVU2577
 9465              		.loc 1 8247 21 is_stmt 0 view .LVU2578
 9466 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9467              		.loc 1 8247 12 view .LVU2579
 9468 0014 9BB9     		cbnz	r3, .L762
 9469              	.LVL1031:
 9470              	.L757:
8248:Core/Src/bno055.c ****         {
8249:Core/Src/bno055.c ****             /* Write the page zero*/
8250:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8251:Core/Src/bno055.c ****         }
8252:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9471              		.loc 1 8252 53 discriminator 1 view .LVU2580
 9472 0016 104B     		ldr	r3, .L763
 9473 0018 1B68     		ldr	r3, [r3]
 9474 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9475              		.loc 1 8252 41 discriminator 1 view .LVU2581
 9476 001c C3B9     		cbnz	r3, .L760
 9477              	.L758:
8253:Core/Src/bno055.c ****         {
8254:Core/Src/bno055.c ****             /* Read the value of operation mode*/
8255:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9478              		.loc 1 8255 13 is_stmt 1 view .LVU2582
ARM GAS  /tmp/ccOloYeZ.s 			page 320


 9479              		.loc 1 8255 32 is_stmt 0 view .LVU2583
 9480 001e 0E4B     		ldr	r3, .L763
 9481 0020 1868     		ldr	r0, [r3]
 9482 0022 0569     		ldr	r5, [r0, #16]
 9483              		.loc 1 8255 24 view .LVU2584
 9484 0024 0123     		movs	r3, #1
 9485 0026 0DF10702 		add	r2, sp, #7
 9486 002a 3D21     		movs	r1, #61
 9487 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9488 002e A847     		blx	r5
 9489              	.LVL1032:
8256:Core/Src/bno055.c ****                                                       BNO055_OPERATION_MODE_REG,
8257:Core/Src/bno055.c ****                                                       &data_u8r,
8258:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8259:Core/Src/bno055.c ****             *operation_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_OPERATION_MODE);
 9490              		.loc 1 8259 13 is_stmt 1 view .LVU2585
 9491              		.loc 1 8259 34 is_stmt 0 view .LVU2586
 9492 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9493 0034 03F00F03 		and	r3, r3, #15
 9494              		.loc 1 8259 32 view .LVU2587
 9495 0038 2370     		strb	r3, [r4]
 9496              	.LVL1033:
 9497              	.L756:
8260:Core/Src/bno055.c ****         }
8261:Core/Src/bno055.c ****         else
8262:Core/Src/bno055.c ****         {
8263:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8264:Core/Src/bno055.c ****         }
8265:Core/Src/bno055.c ****     }
8266:Core/Src/bno055.c **** 
8267:Core/Src/bno055.c ****     return com_rslt;
8268:Core/Src/bno055.c **** }
 9498              		.loc 1 8268 1 view .LVU2588
 9499 003a 03B0     		add	sp, sp, #12
 9500              		.cfi_remember_state
 9501              		.cfi_def_cfa_offset 12
 9502              		@ sp needed
 9503 003c 30BD     		pop	{r4, r5, pc}
 9504              	.LVL1034:
 9505              	.L762:
 9506              		.cfi_restore_state
8250:Core/Src/bno055.c ****         }
 9507              		.loc 1 8250 13 is_stmt 1 view .LVU2589
8250:Core/Src/bno055.c ****         }
 9508              		.loc 1 8250 23 is_stmt 0 view .LVU2590
 9509 003e 0020     		movs	r0, #0
 9510              	.LVL1035:
8250:Core/Src/bno055.c ****         }
 9511              		.loc 1 8250 23 view .LVU2591
 9512 0040 FFF7FEFF 		bl	bno055_write_page_id
 9513              	.LVL1036:
8252:Core/Src/bno055.c ****         {
 9514              		.loc 1 8252 9 is_stmt 1 view .LVU2592
8252:Core/Src/bno055.c ****         {
 9515              		.loc 1 8252 12 is_stmt 0 view .LVU2593
 9516 0044 0028     		cmp	r0, #0
 9517 0046 EAD0     		beq	.L758
ARM GAS  /tmp/ccOloYeZ.s 			page 321


 9518 0048 E5E7     		b	.L757
 9519              	.LVL1037:
 9520              	.L759:
8241:Core/Src/bno055.c ****     }
 9521              		.loc 1 8241 16 view .LVU2594
 9522 004a 6FF07E00 		mvn	r0, #126
 9523              	.LVL1038:
8241:Core/Src/bno055.c ****     }
 9524              		.loc 1 8241 16 view .LVU2595
 9525 004e F4E7     		b	.L756
 9526              	.LVL1039:
 9527              	.L760:
8263:Core/Src/bno055.c ****         }
 9528              		.loc 1 8263 22 view .LVU2596
 9529 0050 4FF0FF30 		mov	r0, #-1
 9530 0054 F1E7     		b	.L756
 9531              	.L764:
 9532 0056 00BF     		.align	2
 9533              	.L763:
 9534 0058 00000000 		.word	p_bno055
 9535              		.cfi_endproc
 9536              	.LFE145:
 9538              		.section	.text.bno055_set_operation_mode,"ax",%progbits
 9539              		.align	1
 9540              		.global	bno055_set_operation_mode
 9541              		.syntax unified
 9542              		.thumb
 9543              		.thumb_func
 9545              	bno055_set_operation_mode:
 9546              	.LVL1040:
 9547              	.LFB146:
8269:Core/Src/bno055.c **** 
8270:Core/Src/bno055.c **** /*! @brief This API used to write the operation mode
8271:Core/Src/bno055.c ****  *  from register from 0x3D bit 0 to 3
8272:Core/Src/bno055.c ****  *
8273:Core/Src/bno055.c ****  *  @param operation_mode_u8 : The value of operation mode
8274:Core/Src/bno055.c ****  *
8275:Core/Src/bno055.c ****  *  operation_mode_u8  |      result            | comments
8276:Core/Src/bno055.c ****  * ---------|-----------------------------------|--------------------------
8277:Core/Src/bno055.c ****  *  0x00    | BNO055_OPERATION_MODE_CONFIG      | Configuration mode
8278:Core/Src/bno055.c ****  *  0x01    | BNO055_OPERATION_MODE_ACCONLY     | Reads accel data alone
8279:Core/Src/bno055.c ****  *  0x02    | BNO055_OPERATION_MODE_MAGONLY     | Reads mag data alone
8280:Core/Src/bno055.c ****  *  0x03    | BNO055_OPERATION_MODE_GYRONLY     | Reads gyro data alone
8281:Core/Src/bno055.c ****  *  0x04    | BNO055_OPERATION_MODE_ACCMAG      | Reads accel and mag data
8282:Core/Src/bno055.c ****  *  0x05    | BNO055_OPERATION_MODE_ACCGYRO     | Reads accel and gyro data
8283:Core/Src/bno055.c ****  *  0x06    | BNO055_OPERATION_MODE_MAGGYRO     | Reads accel and mag data
8284:Core/Src/bno055.c ****  *  0x07    | OPERATION_MODE_ANY_MOTION         | Reads accel mag and
8285:Core/Src/bno055.c ****  *          |       -                           | gyro data
8286:Core/Src/bno055.c ****  *  0x08    | BNO055_OPERATION_MODE_IMUPLUS     | Inertial measurement unit
8287:Core/Src/bno055.c ****  *   -      |                                   | Reads accel,gyro and
8288:Core/Src/bno055.c ****  *          |       -                           | fusion data
8289:Core/Src/bno055.c ****  *  0x09    | BNO055_OPERATION_MODE_COMPASS     | Reads accel, mag data
8290:Core/Src/bno055.c ****  *   -      |       -                           | and fusion data
8291:Core/Src/bno055.c ****  *  0x0A    | BNO055_OPERATION_MODE_M4G         | Reads accel, mag data
8292:Core/Src/bno055.c ****  *    -     |       -                           | and fusion data
8293:Core/Src/bno055.c ****  *  0x0B    | BNO055_OPERATION_MODE_NDOF_FMC_OFF| Nine degrees of freedom with
8294:Core/Src/bno055.c ****  *   -      |       -                           | fast magnetic calibration
ARM GAS  /tmp/ccOloYeZ.s 			page 322


8295:Core/Src/bno055.c ****  *   -      |       -                           | Reads accel,mag, gyro
8296:Core/Src/bno055.c ****  *   -      |       -                           | and fusion data
8297:Core/Src/bno055.c ****  *  0x0C    | BNO055_OPERATION_MODE_NDOF        | Nine degrees of freedom
8298:Core/Src/bno055.c ****  *   -      |       -                           | Reads accel,mag, gyro
8299:Core/Src/bno055.c ****  *   -      |       -                           | and fusion data
8300:Core/Src/bno055.c ****  *
8301:Core/Src/bno055.c ****  *  @return results of bus communication function
8302:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8303:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8304:Core/Src/bno055.c ****  *
8305:Core/Src/bno055.c ****  *  @note In the config mode, all sensor and fusion data
8306:Core/Src/bno055.c ****  *  becomes zero and it is mainly derived
8307:Core/Src/bno055.c ****  *  to configure the various settings of the BNO
8308:Core/Src/bno055.c ****  *
8309:Core/Src/bno055.c ****  */
8310:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_operation_mode(u8 operation_mode_u8)
8311:Core/Src/bno055.c **** {
 9548              		.loc 1 8311 1 is_stmt 1 view -0
 9549              		.cfi_startproc
 9550              		@ args = 0, pretend = 0, frame = 8
 9551              		@ frame_needed = 0, uses_anonymous_args = 0
 9552              		.loc 1 8311 1 is_stmt 0 view .LVU2598
 9553 0000 70B5     		push	{r4, r5, r6, lr}
 9554              		.cfi_def_cfa_offset 16
 9555              		.cfi_offset 4, -16
 9556              		.cfi_offset 5, -12
 9557              		.cfi_offset 6, -8
 9558              		.cfi_offset 14, -4
 9559 0002 82B0     		sub	sp, sp, #8
 9560              		.cfi_def_cfa_offset 24
8312:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9561              		.loc 1 8312 5 is_stmt 1 view .LVU2599
 9562              	.LVL1041:
8313:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9563              		.loc 1 8313 5 view .LVU2600
 9564              		.loc 1 8313 8 is_stmt 0 view .LVU2601
 9565 0004 0023     		movs	r3, #0
 9566 0006 8DF80730 		strb	r3, [sp, #7]
8314:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 9567              		.loc 1 8314 5 is_stmt 1 view .LVU2602
 9568              		.loc 1 8314 8 is_stmt 0 view .LVU2603
 9569 000a 8DF80630 		strb	r3, [sp, #6]
8315:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9570              		.loc 1 8315 5 is_stmt 1 view .LVU2604
 9571              	.LVL1042:
8316:Core/Src/bno055.c **** 
8317:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8318:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9572              		.loc 1 8318 5 view .LVU2605
 9573              		.loc 1 8318 18 is_stmt 0 view .LVU2606
 9574 000e 424B     		ldr	r3, .L773
 9575 0010 1B68     		ldr	r3, [r3]
 9576              		.loc 1 8318 8 view .LVU2607
 9577 0012 002B     		cmp	r3, #0
 9578 0014 7AD0     		beq	.L769
 9579 0016 0546     		mov	r5, r0
8319:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 323


8320:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8321:Core/Src/bno055.c ****     }
8322:Core/Src/bno055.c ****     else
8323:Core/Src/bno055.c ****     {
8324:Core/Src/bno055.c ****         /* The write operation effective only if the operation
8325:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
8326:Core/Src/bno055.c ****          * current operation mode and set the config mode */
8327:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 9580              		.loc 1 8327 9 is_stmt 1 view .LVU2608
 9581              		.loc 1 8327 19 is_stmt 0 view .LVU2609
 9582 0018 0DF10600 		add	r0, sp, #6
 9583              	.LVL1043:
 9584              		.loc 1 8327 19 view .LVU2610
 9585 001c FFF7FEFF 		bl	bno055_get_operation_mode
 9586              	.LVL1044:
8328:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 9587              		.loc 1 8328 9 is_stmt 1 view .LVU2611
 9588              		.loc 1 8328 12 is_stmt 0 view .LVU2612
 9589 0020 0028     		cmp	r0, #0
 9590 0022 76D1     		bne	.L770
8329:Core/Src/bno055.c ****         {
8330:Core/Src/bno055.c ****             /* If the previous operation mode is config it is
8331:Core/Src/bno055.c ****              * directly write the operation mode */
8332:Core/Src/bno055.c ****             if (prev_opmode_u8 == BNO055_OPERATION_MODE_CONFIG)
 9591              		.loc 1 8332 13 is_stmt 1 view .LVU2613
 9592              		.loc 1 8332 32 is_stmt 0 view .LVU2614
 9593 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 9594              		.loc 1 8332 16 view .LVU2615
 9595 0028 3BBB     		cbnz	r3, .L767
8333:Core/Src/bno055.c ****             {
8334:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9596              		.loc 1 8334 17 is_stmt 1 view .LVU2616
 9597              		.loc 1 8334 36 is_stmt 0 view .LVU2617
 9598 002a 3B4B     		ldr	r3, .L773
 9599 002c 1868     		ldr	r0, [r3]
 9600              	.LVL1045:
 9601              		.loc 1 8334 36 view .LVU2618
 9602 002e 0469     		ldr	r4, [r0, #16]
 9603              		.loc 1 8334 28 view .LVU2619
 9604 0030 0123     		movs	r3, #1
 9605 0032 0DF10702 		add	r2, sp, #7
 9606 0036 3D21     		movs	r1, #61
 9607 0038 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9608 003a A047     		blx	r4
 9609              	.LVL1046:
8335:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
8336:Core/Src/bno055.c ****                                                           &data_u8r,
8337:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8338:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 9610              		.loc 1 8338 17 is_stmt 1 view .LVU2620
 9611              		.loc 1 8338 20 is_stmt 0 view .LVU2621
 9612 003c 0446     		mov	r4, r0
 9613 003e C8B9     		cbnz	r0, .L766
8339:Core/Src/bno055.c ****                 {
8340:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_OPERATION_MODE, operation_mode_
 9614              		.loc 1 8340 21 is_stmt 1 view .LVU2622
 9615              		.loc 1 8340 32 is_stmt 0 view .LVU2623
ARM GAS  /tmp/ccOloYeZ.s 			page 324


 9616 0040 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 9617              	.LVL1047:
 9618              		.loc 1 8340 30 view .LVU2624
 9619 0044 20F00F03 		bic	r3, r0, #15
 9620 0048 05F00F00 		and	r0, r5, #15
 9621 004c 1843     		orrs	r0, r0, r3
 9622 004e 8DF80700 		strb	r0, [sp, #7]
8341:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 9623              		.loc 1 8341 21 is_stmt 1 view .LVU2625
 9624              		.loc 1 8341 41 is_stmt 0 view .LVU2626
 9625 0052 314D     		ldr	r5, .L773
 9626 0054 2868     		ldr	r0, [r5]
 9627 0056 C668     		ldr	r6, [r0, #12]
 9628              		.loc 1 8341 33 view .LVU2627
 9629 0058 0123     		movs	r3, #1
 9630 005a 0DF10702 		add	r2, sp, #7
 9631 005e 3D21     		movs	r1, #61
 9632 0060 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9633 0062 B047     		blx	r6
 9634              	.LVL1048:
 9635              		.loc 1 8341 30 view .LVU2628
 9636 0064 54FA80F0 		uxtab	r0, r4, r0
 9637 0068 44B2     		sxtb	r4, r0
 9638              	.LVL1049:
8342:Core/Src/bno055.c ****                                                                 BNO055_OPERATION_MODE_REG,
8343:Core/Src/bno055.c ****                                                                 &data_u8r,
8344:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
8345:Core/Src/bno055.c **** 
8346:Core/Src/bno055.c ****                     /* Config mode to other
8347:Core/Src/bno055.c ****                      * operation mode switching
8348:Core/Src/bno055.c ****                      * required delay of 600ms*/
8349:Core/Src/bno055.c ****                     p_bno055->delay_msec(BNO055_MODE_SWITCHING_DELAY);
 9639              		.loc 1 8349 21 is_stmt 1 view .LVU2629
 9640              		.loc 1 8349 29 is_stmt 0 view .LVU2630
 9641 006a 2B68     		ldr	r3, [r5]
 9642 006c 5B69     		ldr	r3, [r3, #20]
 9643              		.loc 1 8349 21 view .LVU2631
 9644 006e 4FF41670 		mov	r0, #600
 9645 0072 9847     		blx	r3
 9646              	.LVL1050:
 9647              	.L766:
8350:Core/Src/bno055.c ****                 }
8351:Core/Src/bno055.c ****             }
8352:Core/Src/bno055.c ****             else
8353:Core/Src/bno055.c ****             {
8354:Core/Src/bno055.c ****                 /* If the previous operation
8355:Core/Src/bno055.c ****                  * mode is not config it is
8356:Core/Src/bno055.c ****                  * write the config mode */
8357:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
8358:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
8359:Core/Src/bno055.c ****                                                           &data_u8r,
8360:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8361:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
8362:Core/Src/bno055.c ****                 {
8363:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_OPERATION_MODE, BNO055_OPERATIO
8364:Core/Src/bno055.c ****                     com_rslt +=
8365:Core/Src/bno055.c ****                         bno055_write_register(BNO055_OPERATION_MODE_REG, &data_u8r, BNO055_GEN_READ
ARM GAS  /tmp/ccOloYeZ.s 			page 325


8366:Core/Src/bno055.c **** 
8367:Core/Src/bno055.c ****                     /* other mode to config mode switching
8368:Core/Src/bno055.c ****                      * required delay of 20ms*/
8369:Core/Src/bno055.c ****                     p_bno055->delay_msec(BNO055_CONFIG_MODE_SWITCHING_DELAY);
8370:Core/Src/bno055.c ****                 }
8371:Core/Src/bno055.c **** 
8372:Core/Src/bno055.c ****                 /* Write the operation mode */
8373:Core/Src/bno055.c ****                 if (operation_mode_u8 != BNO055_OPERATION_MODE_CONFIG)
8374:Core/Src/bno055.c ****                 {
8375:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
8376:Core/Src/bno055.c ****                                                               BNO055_OPERATION_MODE_REG,
8377:Core/Src/bno055.c ****                                                               &data_u8r,
8378:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
8379:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
8380:Core/Src/bno055.c ****                     {
8381:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_OPERATION_MODE, operation_m
8382:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
8383:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
8384:Core/Src/bno055.c ****                                                                     &data_u8r,
8385:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
8386:Core/Src/bno055.c **** 
8387:Core/Src/bno055.c ****                         /* Config mode to other
8388:Core/Src/bno055.c ****                          * operation mode switching
8389:Core/Src/bno055.c ****                          * required delay of 600ms*/
8390:Core/Src/bno055.c ****                         p_bno055->delay_msec(BNO055_MODE_SWITCHING_DELAY);
8391:Core/Src/bno055.c ****                     }
8392:Core/Src/bno055.c ****                 }
8393:Core/Src/bno055.c ****             }
8394:Core/Src/bno055.c ****         }
8395:Core/Src/bno055.c ****         else
8396:Core/Src/bno055.c ****         {
8397:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8398:Core/Src/bno055.c ****         }
8399:Core/Src/bno055.c ****     }
8400:Core/Src/bno055.c **** 
8401:Core/Src/bno055.c ****     return com_rslt;
8402:Core/Src/bno055.c **** }
 9648              		.loc 1 8402 1 view .LVU2632
 9649 0074 2046     		mov	r0, r4
 9650 0076 02B0     		add	sp, sp, #8
 9651              		.cfi_remember_state
 9652              		.cfi_def_cfa_offset 16
 9653              		@ sp needed
 9654 0078 70BD     		pop	{r4, r5, r6, pc}
 9655              	.LVL1051:
 9656              	.L767:
 9657              		.cfi_restore_state
8357:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
 9658              		.loc 1 8357 17 is_stmt 1 view .LVU2633
8357:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
 9659              		.loc 1 8357 36 is_stmt 0 view .LVU2634
 9660 007a 274B     		ldr	r3, .L773
 9661 007c 1868     		ldr	r0, [r3]
 9662              	.LVL1052:
8357:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
 9663              		.loc 1 8357 36 view .LVU2635
 9664 007e 0469     		ldr	r4, [r0, #16]
ARM GAS  /tmp/ccOloYeZ.s 			page 326


8357:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
 9665              		.loc 1 8357 28 view .LVU2636
 9666 0080 0123     		movs	r3, #1
 9667 0082 0DF10702 		add	r2, sp, #7
 9668 0086 3D21     		movs	r1, #61
 9669 0088 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9670 008a A047     		blx	r4
 9671              	.LVL1053:
8361:Core/Src/bno055.c ****                 {
 9672              		.loc 1 8361 17 is_stmt 1 view .LVU2637
8361:Core/Src/bno055.c ****                 {
 9673              		.loc 1 8361 20 is_stmt 0 view .LVU2638
 9674 008c 0446     		mov	r4, r0
 9675 008e 40B3     		cbz	r0, .L772
 9676              	.LVL1054:
 9677              	.L768:
8373:Core/Src/bno055.c ****                 {
 9678              		.loc 1 8373 17 is_stmt 1 view .LVU2639
8373:Core/Src/bno055.c ****                 {
 9679              		.loc 1 8373 20 is_stmt 0 view .LVU2640
 9680 0090 002D     		cmp	r5, #0
 9681 0092 EFD0     		beq	.L766
8375:Core/Src/bno055.c ****                                                               BNO055_OPERATION_MODE_REG,
 9682              		.loc 1 8375 21 is_stmt 1 view .LVU2641
8375:Core/Src/bno055.c ****                                                               BNO055_OPERATION_MODE_REG,
 9683              		.loc 1 8375 40 is_stmt 0 view .LVU2642
 9684 0094 204B     		ldr	r3, .L773
 9685 0096 1868     		ldr	r0, [r3]
 9686 0098 0469     		ldr	r4, [r0, #16]
 9687              	.LVL1055:
8375:Core/Src/bno055.c ****                                                               BNO055_OPERATION_MODE_REG,
 9688              		.loc 1 8375 32 view .LVU2643
 9689 009a 0123     		movs	r3, #1
 9690 009c 0DF10702 		add	r2, sp, #7
 9691 00a0 3D21     		movs	r1, #61
 9692 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9693 00a4 A047     		blx	r4
 9694              	.LVL1056:
8379:Core/Src/bno055.c ****                     {
 9695              		.loc 1 8379 21 is_stmt 1 view .LVU2644
8379:Core/Src/bno055.c ****                     {
 9696              		.loc 1 8379 24 is_stmt 0 view .LVU2645
 9697 00a6 0446     		mov	r4, r0
 9698 00a8 0028     		cmp	r0, #0
 9699 00aa E3D1     		bne	.L766
8381:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 9700              		.loc 1 8381 25 is_stmt 1 view .LVU2646
8381:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 9701              		.loc 1 8381 36 is_stmt 0 view .LVU2647
 9702 00ac 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
8381:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 9703              		.loc 1 8381 34 view .LVU2648
 9704 00b0 23F00F03 		bic	r3, r3, #15
 9705 00b4 05F00F00 		and	r0, r5, #15
 9706              	.LVL1057:
8381:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 9707              		.loc 1 8381 34 view .LVU2649
ARM GAS  /tmp/ccOloYeZ.s 			page 327


 9708 00b8 0343     		orrs	r3, r3, r0
 9709 00ba 8DF80730 		strb	r3, [sp, #7]
8382:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
 9710              		.loc 1 8382 25 is_stmt 1 view .LVU2650
8382:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
 9711              		.loc 1 8382 45 is_stmt 0 view .LVU2651
 9712 00be 164D     		ldr	r5, .L773
 9713 00c0 2868     		ldr	r0, [r5]
 9714 00c2 C668     		ldr	r6, [r0, #12]
8382:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
 9715              		.loc 1 8382 37 view .LVU2652
 9716 00c4 0123     		movs	r3, #1
 9717 00c6 0DF10702 		add	r2, sp, #7
 9718 00ca 3D21     		movs	r1, #61
 9719 00cc 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9720 00ce B047     		blx	r6
 9721              	.LVL1058:
8382:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
 9722              		.loc 1 8382 34 view .LVU2653
 9723 00d0 54FA80F0 		uxtab	r0, r4, r0
 9724 00d4 44B2     		sxtb	r4, r0
 9725              	.LVL1059:
8390:Core/Src/bno055.c ****                     }
 9726              		.loc 1 8390 25 is_stmt 1 view .LVU2654
8390:Core/Src/bno055.c ****                     }
 9727              		.loc 1 8390 33 is_stmt 0 view .LVU2655
 9728 00d6 2B68     		ldr	r3, [r5]
 9729 00d8 5B69     		ldr	r3, [r3, #20]
8390:Core/Src/bno055.c ****                     }
 9730              		.loc 1 8390 25 view .LVU2656
 9731 00da 4FF41670 		mov	r0, #600
 9732 00de 9847     		blx	r3
 9733              	.LVL1060:
 9734 00e0 C8E7     		b	.L766
 9735              	.LVL1061:
 9736              	.L772:
8363:Core/Src/bno055.c ****                     com_rslt +=
 9737              		.loc 1 8363 21 is_stmt 1 view .LVU2657
8363:Core/Src/bno055.c ****                     com_rslt +=
 9738              		.loc 1 8363 32 is_stmt 0 view .LVU2658
 9739 00e2 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9740 00e6 03F0F003 		and	r3, r3, #240
8363:Core/Src/bno055.c ****                     com_rslt +=
 9741              		.loc 1 8363 30 view .LVU2659
 9742 00ea 8DF80730 		strb	r3, [sp, #7]
8364:Core/Src/bno055.c ****                         bno055_write_register(BNO055_OPERATION_MODE_REG, &data_u8r, BNO055_GEN_READ
 9743              		.loc 1 8364 21 is_stmt 1 view .LVU2660
8365:Core/Src/bno055.c **** 
 9744              		.loc 1 8365 25 is_stmt 0 view .LVU2661
 9745 00ee 0122     		movs	r2, #1
 9746 00f0 0DF10701 		add	r1, sp, #7
 9747 00f4 3D20     		movs	r0, #61
 9748              	.LVL1062:
8365:Core/Src/bno055.c **** 
 9749              		.loc 1 8365 25 view .LVU2662
 9750 00f6 FFF7FEFF 		bl	bno055_write_register
 9751              	.LVL1063:
ARM GAS  /tmp/ccOloYeZ.s 			page 328


8364:Core/Src/bno055.c ****                         bno055_write_register(BNO055_OPERATION_MODE_REG, &data_u8r, BNO055_GEN_READ
 9752              		.loc 1 8364 30 view .LVU2663
 9753 00fa 54FA80F0 		uxtab	r0, r4, r0
 9754 00fe 44B2     		sxtb	r4, r0
 9755              	.LVL1064:
8369:Core/Src/bno055.c ****                 }
 9756              		.loc 1 8369 21 is_stmt 1 view .LVU2664
8369:Core/Src/bno055.c ****                 }
 9757              		.loc 1 8369 29 is_stmt 0 view .LVU2665
 9758 0100 054B     		ldr	r3, .L773
 9759 0102 1B68     		ldr	r3, [r3]
 9760 0104 5B69     		ldr	r3, [r3, #20]
8369:Core/Src/bno055.c ****                 }
 9761              		.loc 1 8369 21 view .LVU2666
 9762 0106 1420     		movs	r0, #20
 9763 0108 9847     		blx	r3
 9764              	.LVL1065:
 9765 010a C1E7     		b	.L768
 9766              	.LVL1066:
 9767              	.L769:
8320:Core/Src/bno055.c ****     }
 9768              		.loc 1 8320 16 view .LVU2667
 9769 010c 6FF07E04 		mvn	r4, #126
 9770 0110 B0E7     		b	.L766
 9771              	.LVL1067:
 9772              	.L770:
8397:Core/Src/bno055.c ****         }
 9773              		.loc 1 8397 22 view .LVU2668
 9774 0112 4FF0FF34 		mov	r4, #-1
 9775 0116 ADE7     		b	.L766
 9776              	.L774:
 9777              		.align	2
 9778              	.L773:
 9779 0118 00000000 		.word	p_bno055
 9780              		.cfi_endproc
 9781              	.LFE146:
 9783              		.section	.text.bno055_set_accel_unit,"ax",%progbits
 9784              		.align	1
 9785              		.global	bno055_set_accel_unit
 9786              		.syntax unified
 9787              		.thumb
 9788              		.thumb_func
 9790              	bno055_set_accel_unit:
 9791              	.LVL1068:
 9792              	.LFB134:
7463:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9793              		.loc 1 7463 1 is_stmt 1 view -0
 9794              		.cfi_startproc
 9795              		@ args = 0, pretend = 0, frame = 8
 9796              		@ frame_needed = 0, uses_anonymous_args = 0
7463:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9797              		.loc 1 7463 1 is_stmt 0 view .LVU2670
 9798 0000 30B5     		push	{r4, r5, lr}
 9799              		.cfi_def_cfa_offset 12
 9800              		.cfi_offset 4, -12
 9801              		.cfi_offset 5, -8
 9802              		.cfi_offset 14, -4
ARM GAS  /tmp/ccOloYeZ.s 			page 329


 9803 0002 83B0     		sub	sp, sp, #12
 9804              		.cfi_def_cfa_offset 24
7464:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9805              		.loc 1 7464 5 is_stmt 1 view .LVU2671
 9806              	.LVL1069:
7465:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 9807              		.loc 1 7465 5 view .LVU2672
7465:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 9808              		.loc 1 7465 8 is_stmt 0 view .LVU2673
 9809 0004 0023     		movs	r3, #0
 9810 0006 8DF80730 		strb	r3, [sp, #7]
7466:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9811              		.loc 1 7466 5 is_stmt 1 view .LVU2674
7466:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9812              		.loc 1 7466 8 is_stmt 0 view .LVU2675
 9813 000a 8DF80630 		strb	r3, [sp, #6]
7467:Core/Src/bno055.c **** 
 9814              		.loc 1 7467 5 is_stmt 1 view .LVU2676
 9815              	.LVL1070:
7470:Core/Src/bno055.c ****     {
 9816              		.loc 1 7470 5 view .LVU2677
7470:Core/Src/bno055.c ****     {
 9817              		.loc 1 7470 18 is_stmt 0 view .LVU2678
 9818 000e 254B     		ldr	r3, .L785
 9819 0010 1B68     		ldr	r3, [r3]
7470:Core/Src/bno055.c ****     {
 9820              		.loc 1 7470 8 view .LVU2679
 9821 0012 002B     		cmp	r3, #0
 9822 0014 42D0     		beq	.L779
 9823 0016 0546     		mov	r5, r0
7479:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 9824              		.loc 1 7479 9 is_stmt 1 view .LVU2680
7479:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 9825              		.loc 1 7479 19 is_stmt 0 view .LVU2681
 9826 0018 0DF10600 		add	r0, sp, #6
 9827              	.LVL1071:
7479:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 9828              		.loc 1 7479 19 view .LVU2682
 9829 001c FFF7FEFF 		bl	bno055_get_operation_mode
 9830              	.LVL1072:
7480:Core/Src/bno055.c ****         {
 9831              		.loc 1 7480 9 is_stmt 1 view .LVU2683
7480:Core/Src/bno055.c ****         {
 9832              		.loc 1 7480 12 is_stmt 0 view .LVU2684
 9833 0020 0446     		mov	r4, r0
 9834 0022 50BB     		cbnz	r0, .L780
7482:Core/Src/bno055.c ****             {
 9835              		.loc 1 7482 13 is_stmt 1 view .LVU2685
7482:Core/Src/bno055.c ****             {
 9836              		.loc 1 7482 32 is_stmt 0 view .LVU2686
 9837 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
7482:Core/Src/bno055.c ****             {
 9838              		.loc 1 7482 16 view .LVU2687
 9839 0028 0BBB     		cbnz	r3, .L783
 9840              	.LVL1073:
 9841              	.L778:
7486:Core/Src/bno055.c ****             {
ARM GAS  /tmp/ccOloYeZ.s 			page 330


 9842              		.loc 1 7486 13 is_stmt 1 view .LVU2688
7486:Core/Src/bno055.c ****             {
 9843              		.loc 1 7486 16 is_stmt 0 view .LVU2689
 9844 002a 74BB     		cbnz	r4, .L781
7489:Core/Src/bno055.c ****                                                           BNO055_ACCEL_UNIT_REG,
 9845              		.loc 1 7489 17 is_stmt 1 view .LVU2690
7489:Core/Src/bno055.c ****                                                           BNO055_ACCEL_UNIT_REG,
 9846              		.loc 1 7489 36 is_stmt 0 view .LVU2691
 9847 002c 1D4B     		ldr	r3, .L785
 9848 002e 1868     		ldr	r0, [r3]
 9849 0030 0469     		ldr	r4, [r0, #16]
 9850              	.LVL1074:
7489:Core/Src/bno055.c ****                                                           BNO055_ACCEL_UNIT_REG,
 9851              		.loc 1 7489 28 view .LVU2692
 9852 0032 0123     		movs	r3, #1
 9853 0034 0DF10702 		add	r2, sp, #7
 9854 0038 3B21     		movs	r1, #59
 9855 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9856 003c A047     		blx	r4
 9857              	.LVL1075:
7493:Core/Src/bno055.c ****                 {
 9858              		.loc 1 7493 17 is_stmt 1 view .LVU2693
7493:Core/Src/bno055.c ****                 {
 9859              		.loc 1 7493 20 is_stmt 0 view .LVU2694
 9860 003e 0446     		mov	r4, r0
 9861 0040 E8B9     		cbnz	r0, .L777
7495:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 9862              		.loc 1 7495 21 is_stmt 1 view .LVU2695
7495:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 9863              		.loc 1 7495 32 is_stmt 0 view .LVU2696
 9864 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
7495:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 9865              		.loc 1 7495 30 view .LVU2697
 9866 0046 23F00103 		bic	r3, r3, #1
 9867 004a 05F00100 		and	r0, r5, #1
 9868              	.LVL1076:
7495:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 9869              		.loc 1 7495 30 view .LVU2698
 9870 004e 0343     		orrs	r3, r3, r0
 9871 0050 8DF80730 		strb	r3, [sp, #7]
7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 9872              		.loc 1 7496 21 is_stmt 1 view .LVU2699
7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 9873              		.loc 1 7496 41 is_stmt 0 view .LVU2700
 9874 0054 134B     		ldr	r3, .L785
 9875 0056 1868     		ldr	r0, [r3]
 9876 0058 C568     		ldr	r5, [r0, #12]
7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 9877              		.loc 1 7496 33 view .LVU2701
 9878 005a 0123     		movs	r3, #1
 9879 005c 0DF10702 		add	r2, sp, #7
 9880 0060 3B21     		movs	r1, #59
 9881 0062 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9882 0064 A847     		blx	r5
 9883              	.LVL1077:
7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 9884              		.loc 1 7496 30 view .LVU2702
ARM GAS  /tmp/ccOloYeZ.s 			page 331


 9885 0066 54FA80F0 		uxtab	r0, r4, r0
 9886 006a 44B2     		sxtb	r4, r0
 9887              	.LVL1078:
7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 9888              		.loc 1 7496 30 view .LVU2703
 9889 006c 07E0     		b	.L777
 9890              	.LVL1079:
 9891              	.L783:
7484:Core/Src/bno055.c ****             }
 9892              		.loc 1 7484 17 is_stmt 1 view .LVU2704
7484:Core/Src/bno055.c ****             }
 9893              		.loc 1 7484 28 is_stmt 0 view .LVU2705
 9894 006e FFF7FEFF 		bl	bno055_set_operation_mode
 9895              	.LVL1080:
7484:Core/Src/bno055.c ****             }
 9896              		.loc 1 7484 25 view .LVU2706
 9897 0072 54FA80F4 		uxtab	r4, r4, r0
 9898 0076 64B2     		sxtb	r4, r4
 9899              	.LVL1081:
7484:Core/Src/bno055.c ****             }
 9900              		.loc 1 7484 25 view .LVU2707
 9901 0078 D7E7     		b	.L778
 9902              	.LVL1082:
 9903              	.L780:
7509:Core/Src/bno055.c ****         }
 9904              		.loc 1 7509 22 view .LVU2708
 9905 007a 4FF0FF34 		mov	r4, #-1
 9906              	.LVL1083:
 9907              	.L777:
7512:Core/Src/bno055.c ****     {
 9908              		.loc 1 7512 5 is_stmt 1 view .LVU2709
7512:Core/Src/bno055.c ****     {
 9909              		.loc 1 7512 24 is_stmt 0 view .LVU2710
 9910 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
7512:Core/Src/bno055.c ****     {
 9911              		.loc 1 7512 8 view .LVU2711
 9912 0082 28B9     		cbnz	r0, .L784
 9913              	.LVL1084:
 9914              	.L776:
7520:Core/Src/bno055.c **** 
 9915              		.loc 1 7520 1 view .LVU2712
 9916 0084 2046     		mov	r0, r4
 9917 0086 03B0     		add	sp, sp, #12
 9918              		.cfi_remember_state
 9919              		.cfi_def_cfa_offset 12
 9920              		@ sp needed
 9921 0088 30BD     		pop	{r4, r5, pc}
 9922              	.LVL1085:
 9923              	.L781:
 9924              		.cfi_restore_state
7504:Core/Src/bno055.c ****             }
 9925              		.loc 1 7504 26 view .LVU2713
 9926 008a 4FF0FF34 		mov	r4, #-1
 9927              	.LVL1086:
7504:Core/Src/bno055.c ****             }
 9928              		.loc 1 7504 26 view .LVU2714
 9929 008e F6E7     		b	.L777
ARM GAS  /tmp/ccOloYeZ.s 			page 332


 9930              	.LVL1087:
 9931              	.L784:
7516:Core/Src/bno055.c ****     }
 9932              		.loc 1 7516 9 is_stmt 1 view .LVU2715
7516:Core/Src/bno055.c ****     }
 9933              		.loc 1 7516 21 is_stmt 0 view .LVU2716
 9934 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 9935              	.LVL1088:
7516:Core/Src/bno055.c ****     }
 9936              		.loc 1 7516 18 view .LVU2717
 9937 0094 54FA80F0 		uxtab	r0, r4, r0
 9938 0098 44B2     		sxtb	r4, r0
 9939              	.LVL1089:
7516:Core/Src/bno055.c ****     }
 9940              		.loc 1 7516 18 view .LVU2718
 9941 009a F3E7     		b	.L776
 9942              	.LVL1090:
 9943              	.L779:
7472:Core/Src/bno055.c ****     }
 9944              		.loc 1 7472 16 view .LVU2719
 9945 009c 6FF07E04 		mvn	r4, #126
 9946 00a0 F0E7     		b	.L776
 9947              	.L786:
 9948 00a2 00BF     		.align	2
 9949              	.L785:
 9950 00a4 00000000 		.word	p_bno055
 9951              		.cfi_endproc
 9952              	.LFE134:
 9954              		.section	.text.bno055_convert_float_accel_x_msq,"ax",%progbits
 9955              		.align	1
 9956              		.global	bno055_convert_float_accel_x_msq
 9957              		.syntax unified
 9958              		.thumb
 9959              		.thumb_func
 9961              	bno055_convert_float_accel_x_msq:
 9962              	.LVL1091:
 9963              	.LFB41:
2865:Core/Src/bno055.c ****     /* Variable used to return value of
 9964              		.loc 1 2865 1 is_stmt 1 view -0
 9965              		.cfi_startproc
 9966              		@ args = 0, pretend = 0, frame = 8
 9967              		@ frame_needed = 0, uses_anonymous_args = 0
2865:Core/Src/bno055.c ****     /* Variable used to return value of
 9968              		.loc 1 2865 1 is_stmt 0 view .LVU2721
 9969 0000 30B5     		push	{r4, r5, lr}
 9970              		.cfi_def_cfa_offset 12
 9971              		.cfi_offset 4, -12
 9972              		.cfi_offset 5, -8
 9973              		.cfi_offset 14, -4
 9974 0002 83B0     		sub	sp, sp, #12
 9975              		.cfi_def_cfa_offset 24
 9976 0004 0546     		mov	r5, r0
2868:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
 9977              		.loc 1 2868 5 is_stmt 1 view .LVU2722
 9978              	.LVL1092:
2869:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 9979              		.loc 1 2869 5 view .LVU2723
ARM GAS  /tmp/ccOloYeZ.s 			page 333


2869:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 9980              		.loc 1 2869 9 is_stmt 0 view .LVU2724
 9981 0006 0023     		movs	r3, #0
 9982 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
2870:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 9983              		.loc 1 2870 5 is_stmt 1 view .LVU2725
 9984              	.LVL1093:
2871:Core/Src/bno055.c **** 
 9985              		.loc 1 2871 5 view .LVU2726
2871:Core/Src/bno055.c **** 
 9986              		.loc 1 2871 8 is_stmt 0 view .LVU2727
 9987 000c 8DF80530 		strb	r3, [sp, #5]
2875:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 9988              		.loc 1 2875 5 is_stmt 1 view .LVU2728
2875:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 9989              		.loc 1 2875 16 is_stmt 0 view .LVU2729
 9990 0010 0DF10500 		add	r0, sp, #5
 9991              	.LVL1094:
2875:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 9992              		.loc 1 2875 16 view .LVU2730
 9993 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 9994              	.LVL1095:
 9995 0018 0446     		mov	r4, r0
 9996              	.LVL1096:
2876:Core/Src/bno055.c ****     {
 9997              		.loc 1 2876 5 is_stmt 1 view .LVU2731
2876:Core/Src/bno055.c ****     {
 9998              		.loc 1 2876 23 is_stmt 0 view .LVU2732
 9999 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
2876:Core/Src/bno055.c ****     {
 10000              		.loc 1 2876 8 view .LVU2733
 10001 001e DBB9     		cbnz	r3, .L793
 10002              	.L788:
2880:Core/Src/bno055.c ****     {
 10003              		.loc 1 2880 5 is_stmt 1 view .LVU2734
2880:Core/Src/bno055.c ****     {
 10004              		.loc 1 2880 8 is_stmt 0 view .LVU2735
 10005 0020 0CBB     		cbnz	r4, .L790
2883:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10006              		.loc 1 2883 9 is_stmt 1 view .LVU2736
2883:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10007              		.loc 1 2883 21 is_stmt 0 view .LVU2737
 10008 0022 0DF10600 		add	r0, sp, #6
 10009 0026 FFF7FEFF 		bl	bno055_read_accel_x
 10010              	.LVL1097:
2883:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10011              		.loc 1 2883 18 view .LVU2738
 10012 002a 54FA80F4 		uxtab	r4, r4, r0
 10013              	.LVL1098:
2883:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10014              		.loc 1 2883 18 view .LVU2739
 10015 002e 64B2     		sxtb	r4, r4
 10016              	.LVL1099:
2884:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10017              		.loc 1 2884 9 is_stmt 1 view .LVU2740
2884:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10018              		.loc 1 2884 17 is_stmt 0 view .LVU2741
ARM GAS  /tmp/ccOloYeZ.s 			page 334


 10019 0030 104B     		ldr	r3, .L794
 10020 0032 1B68     		ldr	r3, [r3]
 10021 0034 5B69     		ldr	r3, [r3, #20]
2884:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10022              		.loc 1 2884 9 view .LVU2742
 10023 0036 0120     		movs	r0, #1
 10024 0038 9847     		blx	r3
 10025              	.LVL1100:
2885:Core/Src/bno055.c ****         {
 10026              		.loc 1 2885 9 is_stmt 1 view .LVU2743
2885:Core/Src/bno055.c ****         {
 10027              		.loc 1 2885 12 is_stmt 0 view .LVU2744
 10028 003a BCB9     		cbnz	r4, .L791
2888:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10029              		.loc 1 2888 13 is_stmt 1 view .LVU2745
2888:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10030              		.loc 1 2888 46 is_stmt 0 view .LVU2746
 10031 003c BDF90600 		ldrsh	r0, [sp, #6]
 10032 0040 FFF7FEFF 		bl	__aeabi_i2d
 10033              	.LVL1101:
 10034 0044 0022     		movs	r2, #0
 10035 0046 0C4B     		ldr	r3, .L794+4
 10036 0048 FFF7FEFF 		bl	__aeabi_ddiv
 10037              	.LVL1102:
2888:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10038              		.loc 1 2888 20 view .LVU2747
 10039 004c FFF7FEFF 		bl	__aeabi_d2f
 10040              	.LVL1103:
2889:Core/Src/bno055.c ****         }
 10041              		.loc 1 2889 13 is_stmt 1 view .LVU2748
2889:Core/Src/bno055.c ****         }
 10042              		.loc 1 2889 24 is_stmt 0 view .LVU2749
 10043 0050 2860     		str	r0, [r5]	@ float
 10044              	.LVL1104:
 10045              	.L789:
2901:Core/Src/bno055.c **** }
 10046              		.loc 1 2901 5 is_stmt 1 view .LVU2750
2902:Core/Src/bno055.c **** 
 10047              		.loc 1 2902 1 is_stmt 0 view .LVU2751
 10048 0052 2046     		mov	r0, r4
 10049 0054 03B0     		add	sp, sp, #12
 10050              		.cfi_remember_state
 10051              		.cfi_def_cfa_offset 12
 10052              		@ sp needed
 10053 0056 30BD     		pop	{r4, r5, pc}
 10054              	.LVL1105:
 10055              	.L793:
 10056              		.cfi_restore_state
2878:Core/Src/bno055.c ****     }
 10057              		.loc 1 2878 9 is_stmt 1 view .LVU2752
2878:Core/Src/bno055.c ****     }
 10058              		.loc 1 2878 21 is_stmt 0 view .LVU2753
 10059 0058 0020     		movs	r0, #0
 10060 005a FFF7FEFF 		bl	bno055_set_accel_unit
 10061              	.LVL1106:
2878:Core/Src/bno055.c ****     }
 10062              		.loc 1 2878 18 view .LVU2754
ARM GAS  /tmp/ccOloYeZ.s 			page 335


 10063 005e 54FA80F4 		uxtab	r4, r4, r0
 10064              	.LVL1107:
2878:Core/Src/bno055.c ****     }
 10065              		.loc 1 2878 18 view .LVU2755
 10066 0062 64B2     		sxtb	r4, r4
 10067              	.LVL1108:
2878:Core/Src/bno055.c ****     }
 10068              		.loc 1 2878 18 view .LVU2756
 10069 0064 DCE7     		b	.L788
 10070              	.L790:
2898:Core/Src/bno055.c ****     }
 10071              		.loc 1 2898 18 view .LVU2757
 10072 0066 4FF0FF34 		mov	r4, #-1
 10073              	.LVL1109:
2898:Core/Src/bno055.c ****     }
 10074              		.loc 1 2898 18 view .LVU2758
 10075 006a F2E7     		b	.L789
 10076              	.LVL1110:
 10077              	.L791:
2893:Core/Src/bno055.c ****         }
 10078              		.loc 1 2893 22 view .LVU2759
 10079 006c 4FF0FF34 		mov	r4, #-1
 10080              	.LVL1111:
2893:Core/Src/bno055.c ****         }
 10081              		.loc 1 2893 22 view .LVU2760
 10082 0070 EFE7     		b	.L789
 10083              	.L795:
 10084 0072 00BF     		.align	2
 10085              	.L794:
 10086 0074 00000000 		.word	p_bno055
 10087 0078 00005940 		.word	1079574528
 10088              		.cfi_endproc
 10089              	.LFE41:
 10091              		.section	.text.bno055_convert_float_accel_x_mg,"ax",%progbits
 10092              		.align	1
 10093              		.global	bno055_convert_float_accel_x_mg
 10094              		.syntax unified
 10095              		.thumb
 10096              		.thumb_func
 10098              	bno055_convert_float_accel_x_mg:
 10099              	.LVL1112:
 10100              	.LFB42:
2920:Core/Src/bno055.c ****     /* Variable used to return value of
 10101              		.loc 1 2920 1 is_stmt 1 view -0
 10102              		.cfi_startproc
 10103              		@ args = 0, pretend = 0, frame = 8
 10104              		@ frame_needed = 0, uses_anonymous_args = 0
2920:Core/Src/bno055.c ****     /* Variable used to return value of
 10105              		.loc 1 2920 1 is_stmt 0 view .LVU2762
 10106 0000 30B5     		push	{r4, r5, lr}
 10107              		.cfi_def_cfa_offset 12
 10108              		.cfi_offset 4, -12
 10109              		.cfi_offset 5, -8
 10110              		.cfi_offset 14, -4
 10111 0002 83B0     		sub	sp, sp, #12
 10112              		.cfi_def_cfa_offset 24
 10113 0004 0546     		mov	r5, r0
ARM GAS  /tmp/ccOloYeZ.s 			page 336


2923:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
 10114              		.loc 1 2923 5 is_stmt 1 view .LVU2763
 10115              	.LVL1113:
2924:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10116              		.loc 1 2924 5 view .LVU2764
2924:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10117              		.loc 1 2924 9 is_stmt 0 view .LVU2765
 10118 0006 0023     		movs	r3, #0
 10119 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
2925:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10120              		.loc 1 2925 5 is_stmt 1 view .LVU2766
 10121              	.LVL1114:
2926:Core/Src/bno055.c **** 
 10122              		.loc 1 2926 5 view .LVU2767
2926:Core/Src/bno055.c **** 
 10123              		.loc 1 2926 8 is_stmt 0 view .LVU2768
 10124 000c 8DF80530 		strb	r3, [sp, #5]
2930:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10125              		.loc 1 2930 5 is_stmt 1 view .LVU2769
2930:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10126              		.loc 1 2930 16 is_stmt 0 view .LVU2770
 10127 0010 0DF10500 		add	r0, sp, #5
 10128              	.LVL1115:
2930:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10129              		.loc 1 2930 16 view .LVU2771
 10130 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10131              	.LVL1116:
 10132 0018 0446     		mov	r4, r0
 10133              	.LVL1117:
2931:Core/Src/bno055.c ****     {
 10134              		.loc 1 2931 5 is_stmt 1 view .LVU2772
2931:Core/Src/bno055.c ****     {
 10135              		.loc 1 2931 23 is_stmt 0 view .LVU2773
 10136 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
2931:Core/Src/bno055.c ****     {
 10137              		.loc 1 2931 8 view .LVU2774
 10138 001e 012B     		cmp	r3, #1
 10139 0020 12D1     		bne	.L802
 10140              	.L797:
2935:Core/Src/bno055.c ****     {
 10141              		.loc 1 2935 5 is_stmt 1 view .LVU2775
2935:Core/Src/bno055.c ****     {
 10142              		.loc 1 2935 8 is_stmt 0 view .LVU2776
 10143 0022 C4B9     		cbnz	r4, .L799
2938:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10144              		.loc 1 2938 9 is_stmt 1 view .LVU2777
2938:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10145              		.loc 1 2938 21 is_stmt 0 view .LVU2778
 10146 0024 0DF10600 		add	r0, sp, #6
 10147 0028 FFF7FEFF 		bl	bno055_read_accel_x
 10148              	.LVL1118:
2938:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10149              		.loc 1 2938 18 view .LVU2779
 10150 002c 54FA80F4 		uxtab	r4, r4, r0
 10151              	.LVL1119:
2938:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10152              		.loc 1 2938 18 view .LVU2780
ARM GAS  /tmp/ccOloYeZ.s 			page 337


 10153 0030 64B2     		sxtb	r4, r4
 10154              	.LVL1120:
2939:Core/Src/bno055.c ****         {
 10155              		.loc 1 2939 9 is_stmt 1 view .LVU2781
2939:Core/Src/bno055.c ****         {
 10156              		.loc 1 2939 12 is_stmt 0 view .LVU2782
 10157 0032 9CB9     		cbnz	r4, .L800
2942:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10158              		.loc 1 2942 13 is_stmt 1 view .LVU2783
2942:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10159              		.loc 1 2942 46 is_stmt 0 view .LVU2784
 10160 0034 BDF90600 		ldrsh	r0, [sp, #6]
 10161 0038 FFF7FEFF 		bl	__aeabi_i2d
 10162              	.LVL1121:
2942:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10163              		.loc 1 2942 20 view .LVU2785
 10164 003c FFF7FEFF 		bl	__aeabi_d2f
 10165              	.LVL1122:
2943:Core/Src/bno055.c ****         }
 10166              		.loc 1 2943 13 is_stmt 1 view .LVU2786
2943:Core/Src/bno055.c ****         }
 10167              		.loc 1 2943 24 is_stmt 0 view .LVU2787
 10168 0040 2860     		str	r0, [r5]	@ float
 10169              	.LVL1123:
 10170              	.L798:
2955:Core/Src/bno055.c **** }
 10171              		.loc 1 2955 5 is_stmt 1 view .LVU2788
2956:Core/Src/bno055.c **** 
 10172              		.loc 1 2956 1 is_stmt 0 view .LVU2789
 10173 0042 2046     		mov	r0, r4
 10174 0044 03B0     		add	sp, sp, #12
 10175              		.cfi_remember_state
 10176              		.cfi_def_cfa_offset 12
 10177              		@ sp needed
 10178 0046 30BD     		pop	{r4, r5, pc}
 10179              	.LVL1124:
 10180              	.L802:
 10181              		.cfi_restore_state
2933:Core/Src/bno055.c ****     }
 10182              		.loc 1 2933 9 is_stmt 1 view .LVU2790
2933:Core/Src/bno055.c ****     }
 10183              		.loc 1 2933 21 is_stmt 0 view .LVU2791
 10184 0048 0120     		movs	r0, #1
 10185 004a FFF7FEFF 		bl	bno055_set_accel_unit
 10186              	.LVL1125:
2933:Core/Src/bno055.c ****     }
 10187              		.loc 1 2933 18 view .LVU2792
 10188 004e 54FA80F4 		uxtab	r4, r4, r0
 10189              	.LVL1126:
2933:Core/Src/bno055.c ****     }
 10190              		.loc 1 2933 18 view .LVU2793
 10191 0052 64B2     		sxtb	r4, r4
 10192              	.LVL1127:
2933:Core/Src/bno055.c ****     }
 10193              		.loc 1 2933 18 view .LVU2794
 10194 0054 E5E7     		b	.L797
 10195              	.L799:
ARM GAS  /tmp/ccOloYeZ.s 			page 338


2952:Core/Src/bno055.c ****     }
 10196              		.loc 1 2952 18 view .LVU2795
 10197 0056 4FF0FF34 		mov	r4, #-1
 10198              	.LVL1128:
2952:Core/Src/bno055.c ****     }
 10199              		.loc 1 2952 18 view .LVU2796
 10200 005a F2E7     		b	.L798
 10201              	.LVL1129:
 10202              	.L800:
2947:Core/Src/bno055.c ****         }
 10203              		.loc 1 2947 22 view .LVU2797
 10204 005c 4FF0FF34 		mov	r4, #-1
 10205              	.LVL1130:
2947:Core/Src/bno055.c ****         }
 10206              		.loc 1 2947 22 view .LVU2798
 10207 0060 EFE7     		b	.L798
 10208              		.cfi_endproc
 10209              	.LFE42:
 10211              		.section	.text.bno055_convert_float_accel_y_msq,"ax",%progbits
 10212              		.align	1
 10213              		.global	bno055_convert_float_accel_y_msq
 10214              		.syntax unified
 10215              		.thumb
 10216              		.thumb_func
 10218              	bno055_convert_float_accel_y_msq:
 10219              	.LVL1131:
 10220              	.LFB43:
2973:Core/Src/bno055.c ****     /* Variable used to return value of
 10221              		.loc 1 2973 1 is_stmt 1 view -0
 10222              		.cfi_startproc
 10223              		@ args = 0, pretend = 0, frame = 8
 10224              		@ frame_needed = 0, uses_anonymous_args = 0
2973:Core/Src/bno055.c ****     /* Variable used to return value of
 10225              		.loc 1 2973 1 is_stmt 0 view .LVU2800
 10226 0000 30B5     		push	{r4, r5, lr}
 10227              		.cfi_def_cfa_offset 12
 10228              		.cfi_offset 4, -12
 10229              		.cfi_offset 5, -8
 10230              		.cfi_offset 14, -4
 10231 0002 83B0     		sub	sp, sp, #12
 10232              		.cfi_def_cfa_offset 24
 10233 0004 0546     		mov	r5, r0
2976:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
 10234              		.loc 1 2976 5 is_stmt 1 view .LVU2801
 10235              	.LVL1132:
2977:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10236              		.loc 1 2977 5 view .LVU2802
2977:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10237              		.loc 1 2977 9 is_stmt 0 view .LVU2803
 10238 0006 0023     		movs	r3, #0
 10239 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
2978:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10240              		.loc 1 2978 5 is_stmt 1 view .LVU2804
 10241              	.LVL1133:
2979:Core/Src/bno055.c **** 
 10242              		.loc 1 2979 5 view .LVU2805
2979:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 339


 10243              		.loc 1 2979 8 is_stmt 0 view .LVU2806
 10244 000c 8DF80530 		strb	r3, [sp, #5]
2983:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10245              		.loc 1 2983 5 is_stmt 1 view .LVU2807
2983:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10246              		.loc 1 2983 16 is_stmt 0 view .LVU2808
 10247 0010 0DF10500 		add	r0, sp, #5
 10248              	.LVL1134:
2983:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10249              		.loc 1 2983 16 view .LVU2809
 10250 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10251              	.LVL1135:
 10252 0018 0446     		mov	r4, r0
 10253              	.LVL1136:
2984:Core/Src/bno055.c ****     {
 10254              		.loc 1 2984 5 is_stmt 1 view .LVU2810
2984:Core/Src/bno055.c ****     {
 10255              		.loc 1 2984 23 is_stmt 0 view .LVU2811
 10256 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
2984:Core/Src/bno055.c ****     {
 10257              		.loc 1 2984 8 view .LVU2812
 10258 001e DBB9     		cbnz	r3, .L809
 10259              	.L804:
2988:Core/Src/bno055.c ****     {
 10260              		.loc 1 2988 5 is_stmt 1 view .LVU2813
2988:Core/Src/bno055.c ****     {
 10261              		.loc 1 2988 8 is_stmt 0 view .LVU2814
 10262 0020 0CBB     		cbnz	r4, .L806
2990:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10263              		.loc 1 2990 9 is_stmt 1 view .LVU2815
2990:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10264              		.loc 1 2990 21 is_stmt 0 view .LVU2816
 10265 0022 0DF10600 		add	r0, sp, #6
 10266 0026 FFF7FEFF 		bl	bno055_read_accel_y
 10267              	.LVL1137:
2990:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10268              		.loc 1 2990 18 view .LVU2817
 10269 002a 54FA80F4 		uxtab	r4, r4, r0
 10270              	.LVL1138:
2990:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10271              		.loc 1 2990 18 view .LVU2818
 10272 002e 64B2     		sxtb	r4, r4
 10273              	.LVL1139:
2991:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10274              		.loc 1 2991 9 is_stmt 1 view .LVU2819
2991:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10275              		.loc 1 2991 17 is_stmt 0 view .LVU2820
 10276 0030 104B     		ldr	r3, .L810
 10277 0032 1B68     		ldr	r3, [r3]
 10278 0034 5B69     		ldr	r3, [r3, #20]
2991:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10279              		.loc 1 2991 9 view .LVU2821
 10280 0036 0120     		movs	r0, #1
 10281 0038 9847     		blx	r3
 10282              	.LVL1140:
2992:Core/Src/bno055.c ****         {
 10283              		.loc 1 2992 9 is_stmt 1 view .LVU2822
ARM GAS  /tmp/ccOloYeZ.s 			page 340


2992:Core/Src/bno055.c ****         {
 10284              		.loc 1 2992 12 is_stmt 0 view .LVU2823
 10285 003a BCB9     		cbnz	r4, .L807
2995:Core/Src/bno055.c ****             *accel_y_f = data_f;
 10286              		.loc 1 2995 13 is_stmt 1 view .LVU2824
2995:Core/Src/bno055.c ****             *accel_y_f = data_f;
 10287              		.loc 1 2995 46 is_stmt 0 view .LVU2825
 10288 003c BDF90600 		ldrsh	r0, [sp, #6]
 10289 0040 FFF7FEFF 		bl	__aeabi_i2d
 10290              	.LVL1141:
 10291 0044 0022     		movs	r2, #0
 10292 0046 0C4B     		ldr	r3, .L810+4
 10293 0048 FFF7FEFF 		bl	__aeabi_ddiv
 10294              	.LVL1142:
2995:Core/Src/bno055.c ****             *accel_y_f = data_f;
 10295              		.loc 1 2995 20 view .LVU2826
 10296 004c FFF7FEFF 		bl	__aeabi_d2f
 10297              	.LVL1143:
2996:Core/Src/bno055.c ****         }
 10298              		.loc 1 2996 13 is_stmt 1 view .LVU2827
2996:Core/Src/bno055.c ****         }
 10299              		.loc 1 2996 24 is_stmt 0 view .LVU2828
 10300 0050 2860     		str	r0, [r5]	@ float
 10301              	.LVL1144:
 10302              	.L805:
3008:Core/Src/bno055.c **** }
 10303              		.loc 1 3008 5 is_stmt 1 view .LVU2829
3009:Core/Src/bno055.c **** 
 10304              		.loc 1 3009 1 is_stmt 0 view .LVU2830
 10305 0052 2046     		mov	r0, r4
 10306 0054 03B0     		add	sp, sp, #12
 10307              		.cfi_remember_state
 10308              		.cfi_def_cfa_offset 12
 10309              		@ sp needed
 10310 0056 30BD     		pop	{r4, r5, pc}
 10311              	.LVL1145:
 10312              	.L809:
 10313              		.cfi_restore_state
2986:Core/Src/bno055.c ****     }
 10314              		.loc 1 2986 9 is_stmt 1 view .LVU2831
2986:Core/Src/bno055.c ****     }
 10315              		.loc 1 2986 21 is_stmt 0 view .LVU2832
 10316 0058 0020     		movs	r0, #0
 10317 005a FFF7FEFF 		bl	bno055_set_accel_unit
 10318              	.LVL1146:
2986:Core/Src/bno055.c ****     }
 10319              		.loc 1 2986 18 view .LVU2833
 10320 005e 54FA80F4 		uxtab	r4, r4, r0
 10321              	.LVL1147:
2986:Core/Src/bno055.c ****     }
 10322              		.loc 1 2986 18 view .LVU2834
 10323 0062 64B2     		sxtb	r4, r4
 10324              	.LVL1148:
2986:Core/Src/bno055.c ****     }
 10325              		.loc 1 2986 18 view .LVU2835
 10326 0064 DCE7     		b	.L804
 10327              	.L806:
ARM GAS  /tmp/ccOloYeZ.s 			page 341


3005:Core/Src/bno055.c ****     }
 10328              		.loc 1 3005 18 view .LVU2836
 10329 0066 4FF0FF34 		mov	r4, #-1
 10330              	.LVL1149:
3005:Core/Src/bno055.c ****     }
 10331              		.loc 1 3005 18 view .LVU2837
 10332 006a F2E7     		b	.L805
 10333              	.LVL1150:
 10334              	.L807:
3000:Core/Src/bno055.c ****         }
 10335              		.loc 1 3000 22 view .LVU2838
 10336 006c 4FF0FF34 		mov	r4, #-1
 10337              	.LVL1151:
3000:Core/Src/bno055.c ****         }
 10338              		.loc 1 3000 22 view .LVU2839
 10339 0070 EFE7     		b	.L805
 10340              	.L811:
 10341 0072 00BF     		.align	2
 10342              	.L810:
 10343 0074 00000000 		.word	p_bno055
 10344 0078 00005940 		.word	1079574528
 10345              		.cfi_endproc
 10346              	.LFE43:
 10348              		.section	.text.bno055_convert_float_accel_y_mg,"ax",%progbits
 10349              		.align	1
 10350              		.global	bno055_convert_float_accel_y_mg
 10351              		.syntax unified
 10352              		.thumb
 10353              		.thumb_func
 10355              	bno055_convert_float_accel_y_mg:
 10356              	.LVL1152:
 10357              	.LFB44:
3025:Core/Src/bno055.c ****     /* Variable used to return value of
 10358              		.loc 1 3025 1 is_stmt 1 view -0
 10359              		.cfi_startproc
 10360              		@ args = 0, pretend = 0, frame = 8
 10361              		@ frame_needed = 0, uses_anonymous_args = 0
3025:Core/Src/bno055.c ****     /* Variable used to return value of
 10362              		.loc 1 3025 1 is_stmt 0 view .LVU2841
 10363 0000 30B5     		push	{r4, r5, lr}
 10364              		.cfi_def_cfa_offset 12
 10365              		.cfi_offset 4, -12
 10366              		.cfi_offset 5, -8
 10367              		.cfi_offset 14, -4
 10368 0002 83B0     		sub	sp, sp, #12
 10369              		.cfi_def_cfa_offset 24
 10370 0004 0546     		mov	r5, r0
3028:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
 10371              		.loc 1 3028 5 is_stmt 1 view .LVU2842
 10372              	.LVL1153:
3029:Core/Src/bno055.c ****     float data = BNO055_INIT_VALUE;
 10373              		.loc 1 3029 5 view .LVU2843
3029:Core/Src/bno055.c ****     float data = BNO055_INIT_VALUE;
 10374              		.loc 1 3029 9 is_stmt 0 view .LVU2844
 10375 0006 0023     		movs	r3, #0
 10376 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3030:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccOloYeZ.s 			page 342


 10377              		.loc 1 3030 5 is_stmt 1 view .LVU2845
 10378              	.LVL1154:
3031:Core/Src/bno055.c **** 
 10379              		.loc 1 3031 5 view .LVU2846
3031:Core/Src/bno055.c **** 
 10380              		.loc 1 3031 8 is_stmt 0 view .LVU2847
 10381 000c 8DF80530 		strb	r3, [sp, #5]
3035:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10382              		.loc 1 3035 5 is_stmt 1 view .LVU2848
3035:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10383              		.loc 1 3035 16 is_stmt 0 view .LVU2849
 10384 0010 0DF10500 		add	r0, sp, #5
 10385              	.LVL1155:
3035:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10386              		.loc 1 3035 16 view .LVU2850
 10387 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10388              	.LVL1156:
 10389 0018 0446     		mov	r4, r0
 10390              	.LVL1157:
3036:Core/Src/bno055.c ****     {
 10391              		.loc 1 3036 5 is_stmt 1 view .LVU2851
3036:Core/Src/bno055.c ****     {
 10392              		.loc 1 3036 23 is_stmt 0 view .LVU2852
 10393 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3036:Core/Src/bno055.c ****     {
 10394              		.loc 1 3036 8 view .LVU2853
 10395 001e 012B     		cmp	r3, #1
 10396 0020 12D1     		bne	.L818
 10397              	.L813:
3040:Core/Src/bno055.c ****     {
 10398              		.loc 1 3040 5 is_stmt 1 view .LVU2854
3040:Core/Src/bno055.c ****     {
 10399              		.loc 1 3040 8 is_stmt 0 view .LVU2855
 10400 0022 C4B9     		cbnz	r4, .L815
3043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10401              		.loc 1 3043 9 is_stmt 1 view .LVU2856
3043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10402              		.loc 1 3043 21 is_stmt 0 view .LVU2857
 10403 0024 0DF10600 		add	r0, sp, #6
 10404 0028 FFF7FEFF 		bl	bno055_read_accel_y
 10405              	.LVL1158:
3043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10406              		.loc 1 3043 18 view .LVU2858
 10407 002c 54FA80F4 		uxtab	r4, r4, r0
 10408              	.LVL1159:
3043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10409              		.loc 1 3043 18 view .LVU2859
 10410 0030 64B2     		sxtb	r4, r4
 10411              	.LVL1160:
3044:Core/Src/bno055.c ****         {
 10412              		.loc 1 3044 9 is_stmt 1 view .LVU2860
3044:Core/Src/bno055.c ****         {
 10413              		.loc 1 3044 12 is_stmt 0 view .LVU2861
 10414 0032 9CB9     		cbnz	r4, .L816
3047:Core/Src/bno055.c ****             *accel_y_f = data;
 10415              		.loc 1 3047 13 is_stmt 1 view .LVU2862
3047:Core/Src/bno055.c ****             *accel_y_f = data;
ARM GAS  /tmp/ccOloYeZ.s 			page 343


 10416              		.loc 1 3047 44 is_stmt 0 view .LVU2863
 10417 0034 BDF90600 		ldrsh	r0, [sp, #6]
 10418 0038 FFF7FEFF 		bl	__aeabi_i2d
 10419              	.LVL1161:
3047:Core/Src/bno055.c ****             *accel_y_f = data;
 10420              		.loc 1 3047 18 view .LVU2864
 10421 003c FFF7FEFF 		bl	__aeabi_d2f
 10422              	.LVL1162:
3048:Core/Src/bno055.c ****         }
 10423              		.loc 1 3048 13 is_stmt 1 view .LVU2865
3048:Core/Src/bno055.c ****         }
 10424              		.loc 1 3048 24 is_stmt 0 view .LVU2866
 10425 0040 2860     		str	r0, [r5]	@ float
 10426              	.LVL1163:
 10427              	.L814:
3060:Core/Src/bno055.c **** }
 10428              		.loc 1 3060 5 is_stmt 1 view .LVU2867
3061:Core/Src/bno055.c **** 
 10429              		.loc 1 3061 1 is_stmt 0 view .LVU2868
 10430 0042 2046     		mov	r0, r4
 10431 0044 03B0     		add	sp, sp, #12
 10432              		.cfi_remember_state
 10433              		.cfi_def_cfa_offset 12
 10434              		@ sp needed
 10435 0046 30BD     		pop	{r4, r5, pc}
 10436              	.LVL1164:
 10437              	.L818:
 10438              		.cfi_restore_state
3038:Core/Src/bno055.c ****     }
 10439              		.loc 1 3038 9 is_stmt 1 view .LVU2869
3038:Core/Src/bno055.c ****     }
 10440              		.loc 1 3038 21 is_stmt 0 view .LVU2870
 10441 0048 0120     		movs	r0, #1
 10442 004a FFF7FEFF 		bl	bno055_set_accel_unit
 10443              	.LVL1165:
3038:Core/Src/bno055.c ****     }
 10444              		.loc 1 3038 18 view .LVU2871
 10445 004e 54FA80F4 		uxtab	r4, r4, r0
 10446              	.LVL1166:
3038:Core/Src/bno055.c ****     }
 10447              		.loc 1 3038 18 view .LVU2872
 10448 0052 64B2     		sxtb	r4, r4
 10449              	.LVL1167:
3038:Core/Src/bno055.c ****     }
 10450              		.loc 1 3038 18 view .LVU2873
 10451 0054 E5E7     		b	.L813
 10452              	.L815:
3057:Core/Src/bno055.c ****     }
 10453              		.loc 1 3057 18 view .LVU2874
 10454 0056 4FF0FF34 		mov	r4, #-1
 10455              	.LVL1168:
3057:Core/Src/bno055.c ****     }
 10456              		.loc 1 3057 18 view .LVU2875
 10457 005a F2E7     		b	.L814
 10458              	.LVL1169:
 10459              	.L816:
3052:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 344


 10460              		.loc 1 3052 22 view .LVU2876
 10461 005c 4FF0FF34 		mov	r4, #-1
 10462              	.LVL1170:
3052:Core/Src/bno055.c ****         }
 10463              		.loc 1 3052 22 view .LVU2877
 10464 0060 EFE7     		b	.L814
 10465              		.cfi_endproc
 10466              	.LFE44:
 10468              		.section	.text.bno055_convert_float_accel_z_msq,"ax",%progbits
 10469              		.align	1
 10470              		.global	bno055_convert_float_accel_z_msq
 10471              		.syntax unified
 10472              		.thumb
 10473              		.thumb_func
 10475              	bno055_convert_float_accel_z_msq:
 10476              	.LVL1171:
 10477              	.LFB45:
3078:Core/Src/bno055.c ****     /* Variable used to return value of
 10478              		.loc 1 3078 1 is_stmt 1 view -0
 10479              		.cfi_startproc
 10480              		@ args = 0, pretend = 0, frame = 8
 10481              		@ frame_needed = 0, uses_anonymous_args = 0
3078:Core/Src/bno055.c ****     /* Variable used to return value of
 10482              		.loc 1 3078 1 is_stmt 0 view .LVU2879
 10483 0000 30B5     		push	{r4, r5, lr}
 10484              		.cfi_def_cfa_offset 12
 10485              		.cfi_offset 4, -12
 10486              		.cfi_offset 5, -8
 10487              		.cfi_offset 14, -4
 10488 0002 83B0     		sub	sp, sp, #12
 10489              		.cfi_def_cfa_offset 24
 10490 0004 0546     		mov	r5, r0
3081:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
 10491              		.loc 1 3081 5 is_stmt 1 view .LVU2880
 10492              	.LVL1172:
3082:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10493              		.loc 1 3082 5 view .LVU2881
3082:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10494              		.loc 1 3082 9 is_stmt 0 view .LVU2882
 10495 0006 0023     		movs	r3, #0
 10496 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3083:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10497              		.loc 1 3083 5 is_stmt 1 view .LVU2883
 10498              	.LVL1173:
3084:Core/Src/bno055.c **** 
 10499              		.loc 1 3084 5 view .LVU2884
3084:Core/Src/bno055.c **** 
 10500              		.loc 1 3084 8 is_stmt 0 view .LVU2885
 10501 000c 8DF80530 		strb	r3, [sp, #5]
3088:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10502              		.loc 1 3088 5 is_stmt 1 view .LVU2886
3088:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10503              		.loc 1 3088 16 is_stmt 0 view .LVU2887
 10504 0010 0DF10500 		add	r0, sp, #5
 10505              	.LVL1174:
3088:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10506              		.loc 1 3088 16 view .LVU2888
ARM GAS  /tmp/ccOloYeZ.s 			page 345


 10507 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10508              	.LVL1175:
 10509 0018 0446     		mov	r4, r0
 10510              	.LVL1176:
3089:Core/Src/bno055.c ****     {
 10511              		.loc 1 3089 5 is_stmt 1 view .LVU2889
3089:Core/Src/bno055.c ****     {
 10512              		.loc 1 3089 23 is_stmt 0 view .LVU2890
 10513 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3089:Core/Src/bno055.c ****     {
 10514              		.loc 1 3089 8 view .LVU2891
 10515 001e DBB9     		cbnz	r3, .L825
 10516              	.L820:
3093:Core/Src/bno055.c ****     {
 10517              		.loc 1 3093 5 is_stmt 1 view .LVU2892
3093:Core/Src/bno055.c ****     {
 10518              		.loc 1 3093 8 is_stmt 0 view .LVU2893
 10519 0020 0CBB     		cbnz	r4, .L822
3096:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10520              		.loc 1 3096 9 is_stmt 1 view .LVU2894
3096:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10521              		.loc 1 3096 21 is_stmt 0 view .LVU2895
 10522 0022 0DF10600 		add	r0, sp, #6
 10523 0026 FFF7FEFF 		bl	bno055_read_accel_z
 10524              	.LVL1177:
3096:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10525              		.loc 1 3096 18 view .LVU2896
 10526 002a 54FA80F4 		uxtab	r4, r4, r0
 10527              	.LVL1178:
3096:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10528              		.loc 1 3096 18 view .LVU2897
 10529 002e 64B2     		sxtb	r4, r4
 10530              	.LVL1179:
3097:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10531              		.loc 1 3097 9 is_stmt 1 view .LVU2898
3097:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10532              		.loc 1 3097 17 is_stmt 0 view .LVU2899
 10533 0030 104B     		ldr	r3, .L826
 10534 0032 1B68     		ldr	r3, [r3]
 10535 0034 5B69     		ldr	r3, [r3, #20]
3097:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10536              		.loc 1 3097 9 view .LVU2900
 10537 0036 0120     		movs	r0, #1
 10538 0038 9847     		blx	r3
 10539              	.LVL1180:
3098:Core/Src/bno055.c ****         {
 10540              		.loc 1 3098 9 is_stmt 1 view .LVU2901
3098:Core/Src/bno055.c ****         {
 10541              		.loc 1 3098 12 is_stmt 0 view .LVU2902
 10542 003a BCB9     		cbnz	r4, .L823
3101:Core/Src/bno055.c ****             *accel_z_f = data_f;
 10543              		.loc 1 3101 13 is_stmt 1 view .LVU2903
3101:Core/Src/bno055.c ****             *accel_z_f = data_f;
 10544              		.loc 1 3101 46 is_stmt 0 view .LVU2904
 10545 003c BDF90600 		ldrsh	r0, [sp, #6]
 10546 0040 FFF7FEFF 		bl	__aeabi_i2d
 10547              	.LVL1181:
ARM GAS  /tmp/ccOloYeZ.s 			page 346


 10548 0044 0022     		movs	r2, #0
 10549 0046 0C4B     		ldr	r3, .L826+4
 10550 0048 FFF7FEFF 		bl	__aeabi_ddiv
 10551              	.LVL1182:
3101:Core/Src/bno055.c ****             *accel_z_f = data_f;
 10552              		.loc 1 3101 20 view .LVU2905
 10553 004c FFF7FEFF 		bl	__aeabi_d2f
 10554              	.LVL1183:
3102:Core/Src/bno055.c ****         }
 10555              		.loc 1 3102 13 is_stmt 1 view .LVU2906
3102:Core/Src/bno055.c ****         }
 10556              		.loc 1 3102 24 is_stmt 0 view .LVU2907
 10557 0050 2860     		str	r0, [r5]	@ float
 10558              	.LVL1184:
 10559              	.L821:
3114:Core/Src/bno055.c **** }
 10560              		.loc 1 3114 5 is_stmt 1 view .LVU2908
3115:Core/Src/bno055.c **** 
 10561              		.loc 1 3115 1 is_stmt 0 view .LVU2909
 10562 0052 2046     		mov	r0, r4
 10563 0054 03B0     		add	sp, sp, #12
 10564              		.cfi_remember_state
 10565              		.cfi_def_cfa_offset 12
 10566              		@ sp needed
 10567 0056 30BD     		pop	{r4, r5, pc}
 10568              	.LVL1185:
 10569              	.L825:
 10570              		.cfi_restore_state
3091:Core/Src/bno055.c ****     }
 10571              		.loc 1 3091 9 is_stmt 1 view .LVU2910
3091:Core/Src/bno055.c ****     }
 10572              		.loc 1 3091 21 is_stmt 0 view .LVU2911
 10573 0058 0020     		movs	r0, #0
 10574 005a FFF7FEFF 		bl	bno055_set_accel_unit
 10575              	.LVL1186:
3091:Core/Src/bno055.c ****     }
 10576              		.loc 1 3091 18 view .LVU2912
 10577 005e 54FA80F4 		uxtab	r4, r4, r0
 10578              	.LVL1187:
3091:Core/Src/bno055.c ****     }
 10579              		.loc 1 3091 18 view .LVU2913
 10580 0062 64B2     		sxtb	r4, r4
 10581              	.LVL1188:
3091:Core/Src/bno055.c ****     }
 10582              		.loc 1 3091 18 view .LVU2914
 10583 0064 DCE7     		b	.L820
 10584              	.L822:
3111:Core/Src/bno055.c ****     }
 10585              		.loc 1 3111 18 view .LVU2915
 10586 0066 4FF0FF34 		mov	r4, #-1
 10587              	.LVL1189:
3111:Core/Src/bno055.c ****     }
 10588              		.loc 1 3111 18 view .LVU2916
 10589 006a F2E7     		b	.L821
 10590              	.LVL1190:
 10591              	.L823:
3106:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 347


 10592              		.loc 1 3106 22 view .LVU2917
 10593 006c 4FF0FF34 		mov	r4, #-1
 10594              	.LVL1191:
3106:Core/Src/bno055.c ****         }
 10595              		.loc 1 3106 22 view .LVU2918
 10596 0070 EFE7     		b	.L821
 10597              	.L827:
 10598 0072 00BF     		.align	2
 10599              	.L826:
 10600 0074 00000000 		.word	p_bno055
 10601 0078 00005940 		.word	1079574528
 10602              		.cfi_endproc
 10603              	.LFE45:
 10605              		.section	.text.bno055_convert_float_accel_z_mg,"ax",%progbits
 10606              		.align	1
 10607              		.global	bno055_convert_float_accel_z_mg
 10608              		.syntax unified
 10609              		.thumb
 10610              		.thumb_func
 10612              	bno055_convert_float_accel_z_mg:
 10613              	.LVL1192:
 10614              	.LFB46:
3132:Core/Src/bno055.c ****     /* Variable used to return value of
 10615              		.loc 1 3132 1 is_stmt 1 view -0
 10616              		.cfi_startproc
 10617              		@ args = 0, pretend = 0, frame = 8
 10618              		@ frame_needed = 0, uses_anonymous_args = 0
3132:Core/Src/bno055.c ****     /* Variable used to return value of
 10619              		.loc 1 3132 1 is_stmt 0 view .LVU2920
 10620 0000 30B5     		push	{r4, r5, lr}
 10621              		.cfi_def_cfa_offset 12
 10622              		.cfi_offset 4, -12
 10623              		.cfi_offset 5, -8
 10624              		.cfi_offset 14, -4
 10625 0002 83B0     		sub	sp, sp, #12
 10626              		.cfi_def_cfa_offset 24
 10627 0004 0546     		mov	r5, r0
3135:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
 10628              		.loc 1 3135 5 is_stmt 1 view .LVU2921
 10629              	.LVL1193:
3136:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10630              		.loc 1 3136 5 view .LVU2922
3136:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10631              		.loc 1 3136 9 is_stmt 0 view .LVU2923
 10632 0006 0023     		movs	r3, #0
 10633 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3137:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10634              		.loc 1 3137 5 is_stmt 1 view .LVU2924
 10635              	.LVL1194:
3138:Core/Src/bno055.c **** 
 10636              		.loc 1 3138 5 view .LVU2925
3138:Core/Src/bno055.c **** 
 10637              		.loc 1 3138 8 is_stmt 0 view .LVU2926
 10638 000c 8DF80530 		strb	r3, [sp, #5]
3142:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10639              		.loc 1 3142 5 is_stmt 1 view .LVU2927
3142:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
ARM GAS  /tmp/ccOloYeZ.s 			page 348


 10640              		.loc 1 3142 16 is_stmt 0 view .LVU2928
 10641 0010 0DF10500 		add	r0, sp, #5
 10642              	.LVL1195:
3142:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10643              		.loc 1 3142 16 view .LVU2929
 10644 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10645              	.LVL1196:
 10646 0018 0446     		mov	r4, r0
 10647              	.LVL1197:
3143:Core/Src/bno055.c ****     {
 10648              		.loc 1 3143 5 is_stmt 1 view .LVU2930
3143:Core/Src/bno055.c ****     {
 10649              		.loc 1 3143 23 is_stmt 0 view .LVU2931
 10650 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3143:Core/Src/bno055.c ****     {
 10651              		.loc 1 3143 8 view .LVU2932
 10652 001e 012B     		cmp	r3, #1
 10653 0020 12D1     		bne	.L834
 10654              	.L829:
3147:Core/Src/bno055.c ****     {
 10655              		.loc 1 3147 5 is_stmt 1 view .LVU2933
3147:Core/Src/bno055.c ****     {
 10656              		.loc 1 3147 8 is_stmt 0 view .LVU2934
 10657 0022 C4B9     		cbnz	r4, .L831
3150:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10658              		.loc 1 3150 9 is_stmt 1 view .LVU2935
3150:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10659              		.loc 1 3150 21 is_stmt 0 view .LVU2936
 10660 0024 0DF10600 		add	r0, sp, #6
 10661 0028 FFF7FEFF 		bl	bno055_read_accel_z
 10662              	.LVL1198:
3150:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10663              		.loc 1 3150 18 view .LVU2937
 10664 002c 54FA80F4 		uxtab	r4, r4, r0
 10665              	.LVL1199:
3150:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10666              		.loc 1 3150 18 view .LVU2938
 10667 0030 64B2     		sxtb	r4, r4
 10668              	.LVL1200:
3151:Core/Src/bno055.c ****         {
 10669              		.loc 1 3151 9 is_stmt 1 view .LVU2939
3151:Core/Src/bno055.c ****         {
 10670              		.loc 1 3151 12 is_stmt 0 view .LVU2940
 10671 0032 9CB9     		cbnz	r4, .L832
3154:Core/Src/bno055.c ****             *accel_z_f = data_f;
 10672              		.loc 1 3154 13 is_stmt 1 view .LVU2941
3154:Core/Src/bno055.c ****             *accel_z_f = data_f;
 10673              		.loc 1 3154 46 is_stmt 0 view .LVU2942
 10674 0034 BDF90600 		ldrsh	r0, [sp, #6]
 10675 0038 FFF7FEFF 		bl	__aeabi_i2d
 10676              	.LVL1201:
3154:Core/Src/bno055.c ****             *accel_z_f = data_f;
 10677              		.loc 1 3154 20 view .LVU2943
 10678 003c FFF7FEFF 		bl	__aeabi_d2f
 10679              	.LVL1202:
3155:Core/Src/bno055.c ****         }
 10680              		.loc 1 3155 13 is_stmt 1 view .LVU2944
ARM GAS  /tmp/ccOloYeZ.s 			page 349


3155:Core/Src/bno055.c ****         }
 10681              		.loc 1 3155 24 is_stmt 0 view .LVU2945
 10682 0040 2860     		str	r0, [r5]	@ float
 10683              	.LVL1203:
 10684              	.L830:
3167:Core/Src/bno055.c **** }
 10685              		.loc 1 3167 5 is_stmt 1 view .LVU2946
3168:Core/Src/bno055.c **** 
 10686              		.loc 1 3168 1 is_stmt 0 view .LVU2947
 10687 0042 2046     		mov	r0, r4
 10688 0044 03B0     		add	sp, sp, #12
 10689              		.cfi_remember_state
 10690              		.cfi_def_cfa_offset 12
 10691              		@ sp needed
 10692 0046 30BD     		pop	{r4, r5, pc}
 10693              	.LVL1204:
 10694              	.L834:
 10695              		.cfi_restore_state
3145:Core/Src/bno055.c ****     }
 10696              		.loc 1 3145 9 is_stmt 1 view .LVU2948
3145:Core/Src/bno055.c ****     }
 10697              		.loc 1 3145 21 is_stmt 0 view .LVU2949
 10698 0048 0120     		movs	r0, #1
 10699 004a FFF7FEFF 		bl	bno055_set_accel_unit
 10700              	.LVL1205:
3145:Core/Src/bno055.c ****     }
 10701              		.loc 1 3145 18 view .LVU2950
 10702 004e 54FA80F4 		uxtab	r4, r4, r0
 10703              	.LVL1206:
3145:Core/Src/bno055.c ****     }
 10704              		.loc 1 3145 18 view .LVU2951
 10705 0052 64B2     		sxtb	r4, r4
 10706              	.LVL1207:
3145:Core/Src/bno055.c ****     }
 10707              		.loc 1 3145 18 view .LVU2952
 10708 0054 E5E7     		b	.L829
 10709              	.L831:
3164:Core/Src/bno055.c ****     }
 10710              		.loc 1 3164 18 view .LVU2953
 10711 0056 4FF0FF34 		mov	r4, #-1
 10712              	.LVL1208:
3164:Core/Src/bno055.c ****     }
 10713              		.loc 1 3164 18 view .LVU2954
 10714 005a F2E7     		b	.L830
 10715              	.LVL1209:
 10716              	.L832:
3159:Core/Src/bno055.c ****         }
 10717              		.loc 1 3159 22 view .LVU2955
 10718 005c 4FF0FF34 		mov	r4, #-1
 10719              	.LVL1210:
3159:Core/Src/bno055.c ****         }
 10720              		.loc 1 3159 22 view .LVU2956
 10721 0060 EFE7     		b	.L830
 10722              		.cfi_endproc
 10723              	.LFE46:
 10725              		.section	.text.bno055_convert_float_accel_xyz_msq,"ax",%progbits
 10726              		.align	1
ARM GAS  /tmp/ccOloYeZ.s 			page 350


 10727              		.global	bno055_convert_float_accel_xyz_msq
 10728              		.syntax unified
 10729              		.thumb
 10730              		.thumb_func
 10732              	bno055_convert_float_accel_xyz_msq:
 10733              	.LVL1211:
 10734              	.LFB47:
3189:Core/Src/bno055.c ****     /* Variable used to return value of
 10735              		.loc 1 3189 1 is_stmt 1 view -0
 10736              		.cfi_startproc
 10737              		@ args = 0, pretend = 0, frame = 16
 10738              		@ frame_needed = 0, uses_anonymous_args = 0
3189:Core/Src/bno055.c ****     /* Variable used to return value of
 10739              		.loc 1 3189 1 is_stmt 0 view .LVU2958
 10740 0000 30B5     		push	{r4, r5, lr}
 10741              		.cfi_def_cfa_offset 12
 10742              		.cfi_offset 4, -12
 10743              		.cfi_offset 5, -8
 10744              		.cfi_offset 14, -4
 10745 0002 85B0     		sub	sp, sp, #20
 10746              		.cfi_def_cfa_offset 32
 10747 0004 0546     		mov	r5, r0
3192:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
 10748              		.loc 1 3192 5 is_stmt 1 view .LVU2959
 10749              	.LVL1212:
3193:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10750              		.loc 1 3193 5 view .LVU2960
3193:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10751              		.loc 1 3193 27 is_stmt 0 view .LVU2961
 10752 0006 0023     		movs	r3, #0
 10753 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 10754 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 10755 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
3194:Core/Src/bno055.c **** 
 10756              		.loc 1 3194 5 is_stmt 1 view .LVU2962
3194:Core/Src/bno055.c **** 
 10757              		.loc 1 3194 8 is_stmt 0 view .LVU2963
 10758 0014 8DF80730 		strb	r3, [sp, #7]
3198:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10759              		.loc 1 3198 5 is_stmt 1 view .LVU2964
3198:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10760              		.loc 1 3198 16 is_stmt 0 view .LVU2965
 10761 0018 0DF10700 		add	r0, sp, #7
 10762              	.LVL1213:
3198:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10763              		.loc 1 3198 16 view .LVU2966
 10764 001c FFF7FEFF 		bl	bno055_get_accel_unit
 10765              	.LVL1214:
 10766 0020 0446     		mov	r4, r0
 10767              	.LVL1215:
3199:Core/Src/bno055.c ****     {
 10768              		.loc 1 3199 5 is_stmt 1 view .LVU2967
3199:Core/Src/bno055.c ****     {
 10769              		.loc 1 3199 23 is_stmt 0 view .LVU2968
 10770 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
3199:Core/Src/bno055.c ****     {
 10771              		.loc 1 3199 8 view .LVU2969
ARM GAS  /tmp/ccOloYeZ.s 			page 351


 10772 0026 5BBB     		cbnz	r3, .L841
 10773              	.L836:
3203:Core/Src/bno055.c ****     {
 10774              		.loc 1 3203 5 is_stmt 1 view .LVU2970
3203:Core/Src/bno055.c ****     {
 10775              		.loc 1 3203 8 is_stmt 0 view .LVU2971
 10776 0028 8CBB     		cbnz	r4, .L838
3206:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10777              		.loc 1 3206 9 is_stmt 1 view .LVU2972
3206:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10778              		.loc 1 3206 21 is_stmt 0 view .LVU2973
 10779 002a 02A8     		add	r0, sp, #8
 10780 002c FFF7FEFF 		bl	bno055_read_accel_xyz
 10781              	.LVL1216:
3206:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10782              		.loc 1 3206 18 view .LVU2974
 10783 0030 54FA80F4 		uxtab	r4, r4, r0
 10784              	.LVL1217:
3206:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10785              		.loc 1 3206 18 view .LVU2975
 10786 0034 64B2     		sxtb	r4, r4
 10787              	.LVL1218:
3207:Core/Src/bno055.c ****         {
 10788              		.loc 1 3207 9 is_stmt 1 view .LVU2976
3207:Core/Src/bno055.c ****         {
 10789              		.loc 1 3207 12 is_stmt 0 view .LVU2977
 10790 0036 6CBB     		cbnz	r4, .L839
3210:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 10791              		.loc 1 3210 13 is_stmt 1 view .LVU2978
3210:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 10792              		.loc 1 3210 52 is_stmt 0 view .LVU2979
 10793 0038 BDF90800 		ldrsh	r0, [sp, #8]
 10794 003c FFF7FEFF 		bl	__aeabi_i2d
 10795              	.LVL1219:
 10796 0040 0022     		movs	r2, #0
 10797 0042 164B     		ldr	r3, .L842
 10798 0044 FFF7FEFF 		bl	__aeabi_ddiv
 10799              	.LVL1220:
3210:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 10800              		.loc 1 3210 28 view .LVU2980
 10801 0048 FFF7FEFF 		bl	__aeabi_d2f
 10802              	.LVL1221:
3210:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 10803              		.loc 1 3210 26 view .LVU2981
 10804 004c 2860     		str	r0, [r5]	@ float
3211:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 10805              		.loc 1 3211 13 is_stmt 1 view .LVU2982
3211:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 10806              		.loc 1 3211 52 is_stmt 0 view .LVU2983
 10807 004e BDF90A00 		ldrsh	r0, [sp, #10]
 10808 0052 FFF7FEFF 		bl	__aeabi_i2d
 10809              	.LVL1222:
 10810 0056 0022     		movs	r2, #0
 10811 0058 104B     		ldr	r3, .L842
 10812 005a FFF7FEFF 		bl	__aeabi_ddiv
 10813              	.LVL1223:
3211:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
ARM GAS  /tmp/ccOloYeZ.s 			page 352


 10814              		.loc 1 3211 28 view .LVU2984
 10815 005e FFF7FEFF 		bl	__aeabi_d2f
 10816              	.LVL1224:
3211:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 10817              		.loc 1 3211 26 view .LVU2985
 10818 0062 6860     		str	r0, [r5, #4]	@ float
3212:Core/Src/bno055.c ****         }
 10819              		.loc 1 3212 13 is_stmt 1 view .LVU2986
3212:Core/Src/bno055.c ****         }
 10820              		.loc 1 3212 52 is_stmt 0 view .LVU2987
 10821 0064 BDF90C00 		ldrsh	r0, [sp, #12]
 10822 0068 FFF7FEFF 		bl	__aeabi_i2d
 10823              	.LVL1225:
 10824 006c 0022     		movs	r2, #0
 10825 006e 0B4B     		ldr	r3, .L842
 10826 0070 FFF7FEFF 		bl	__aeabi_ddiv
 10827              	.LVL1226:
3212:Core/Src/bno055.c ****         }
 10828              		.loc 1 3212 28 view .LVU2988
 10829 0074 FFF7FEFF 		bl	__aeabi_d2f
 10830              	.LVL1227:
3212:Core/Src/bno055.c ****         }
 10831              		.loc 1 3212 26 view .LVU2989
 10832 0078 A860     		str	r0, [r5, #8]	@ float
 10833              	.LVL1228:
 10834              	.L837:
3224:Core/Src/bno055.c **** }
 10835              		.loc 1 3224 5 is_stmt 1 view .LVU2990
3225:Core/Src/bno055.c **** 
 10836              		.loc 1 3225 1 is_stmt 0 view .LVU2991
 10837 007a 2046     		mov	r0, r4
 10838 007c 05B0     		add	sp, sp, #20
 10839              		.cfi_remember_state
 10840              		.cfi_def_cfa_offset 12
 10841              		@ sp needed
 10842 007e 30BD     		pop	{r4, r5, pc}
 10843              	.LVL1229:
 10844              	.L841:
 10845              		.cfi_restore_state
3201:Core/Src/bno055.c ****     }
 10846              		.loc 1 3201 9 is_stmt 1 view .LVU2992
3201:Core/Src/bno055.c ****     }
 10847              		.loc 1 3201 21 is_stmt 0 view .LVU2993
 10848 0080 0020     		movs	r0, #0
 10849 0082 FFF7FEFF 		bl	bno055_set_accel_unit
 10850              	.LVL1230:
3201:Core/Src/bno055.c ****     }
 10851              		.loc 1 3201 18 view .LVU2994
 10852 0086 54FA80F4 		uxtab	r4, r4, r0
 10853              	.LVL1231:
3201:Core/Src/bno055.c ****     }
 10854              		.loc 1 3201 18 view .LVU2995
 10855 008a 64B2     		sxtb	r4, r4
 10856              	.LVL1232:
3201:Core/Src/bno055.c ****     }
 10857              		.loc 1 3201 18 view .LVU2996
 10858 008c CCE7     		b	.L836
ARM GAS  /tmp/ccOloYeZ.s 			page 353


 10859              	.L838:
3221:Core/Src/bno055.c ****     }
 10860              		.loc 1 3221 18 view .LVU2997
 10861 008e 4FF0FF34 		mov	r4, #-1
 10862              	.LVL1233:
3221:Core/Src/bno055.c ****     }
 10863              		.loc 1 3221 18 view .LVU2998
 10864 0092 F2E7     		b	.L837
 10865              	.LVL1234:
 10866              	.L839:
3216:Core/Src/bno055.c ****         }
 10867              		.loc 1 3216 22 view .LVU2999
 10868 0094 4FF0FF34 		mov	r4, #-1
 10869              	.LVL1235:
3216:Core/Src/bno055.c ****         }
 10870              		.loc 1 3216 22 view .LVU3000
 10871 0098 EFE7     		b	.L837
 10872              	.L843:
 10873 009a 00BF     		.align	2
 10874              	.L842:
 10875 009c 00005940 		.word	1079574528
 10876              		.cfi_endproc
 10877              	.LFE47:
 10879              		.section	.text.bno055_convert_float_accel_xyz_mg,"ax",%progbits
 10880              		.align	1
 10881              		.global	bno055_convert_float_accel_xyz_mg
 10882              		.syntax unified
 10883              		.thumb
 10884              		.thumb_func
 10886              	bno055_convert_float_accel_xyz_mg:
 10887              	.LVL1236:
 10888              	.LFB48:
3247:Core/Src/bno055.c ****     /* Variable used to return value of
 10889              		.loc 1 3247 1 is_stmt 1 view -0
 10890              		.cfi_startproc
 10891              		@ args = 0, pretend = 0, frame = 16
 10892              		@ frame_needed = 0, uses_anonymous_args = 0
3247:Core/Src/bno055.c ****     /* Variable used to return value of
 10893              		.loc 1 3247 1 is_stmt 0 view .LVU3002
 10894 0000 30B5     		push	{r4, r5, lr}
 10895              		.cfi_def_cfa_offset 12
 10896              		.cfi_offset 4, -12
 10897              		.cfi_offset 5, -8
 10898              		.cfi_offset 14, -4
 10899 0002 85B0     		sub	sp, sp, #20
 10900              		.cfi_def_cfa_offset 32
 10901 0004 0546     		mov	r5, r0
3250:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
 10902              		.loc 1 3250 5 is_stmt 1 view .LVU3003
 10903              	.LVL1237:
3251:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10904              		.loc 1 3251 5 view .LVU3004
3251:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10905              		.loc 1 3251 27 is_stmt 0 view .LVU3005
 10906 0006 0023     		movs	r3, #0
 10907 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 10908 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
ARM GAS  /tmp/ccOloYeZ.s 			page 354


 10909 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
3252:Core/Src/bno055.c **** 
 10910              		.loc 1 3252 5 is_stmt 1 view .LVU3006
3252:Core/Src/bno055.c **** 
 10911              		.loc 1 3252 8 is_stmt 0 view .LVU3007
 10912 0014 8DF80730 		strb	r3, [sp, #7]
3256:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10913              		.loc 1 3256 5 is_stmt 1 view .LVU3008
3256:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10914              		.loc 1 3256 16 is_stmt 0 view .LVU3009
 10915 0018 0DF10700 		add	r0, sp, #7
 10916              	.LVL1238:
3256:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10917              		.loc 1 3256 16 view .LVU3010
 10918 001c FFF7FEFF 		bl	bno055_get_accel_unit
 10919              	.LVL1239:
 10920 0020 0446     		mov	r4, r0
 10921              	.LVL1240:
3257:Core/Src/bno055.c ****     {
 10922              		.loc 1 3257 5 is_stmt 1 view .LVU3011
3257:Core/Src/bno055.c ****     {
 10923              		.loc 1 3257 23 is_stmt 0 view .LVU3012
 10924 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
3257:Core/Src/bno055.c ****     {
 10925              		.loc 1 3257 8 view .LVU3013
 10926 0026 012B     		cmp	r3, #1
 10927 0028 1FD1     		bne	.L850
 10928              	.L845:
3261:Core/Src/bno055.c ****     {
 10929              		.loc 1 3261 5 is_stmt 1 view .LVU3014
3261:Core/Src/bno055.c ****     {
 10930              		.loc 1 3261 8 is_stmt 0 view .LVU3015
 10931 002a 2CBB     		cbnz	r4, .L847
3264:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10932              		.loc 1 3264 9 is_stmt 1 view .LVU3016
3264:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10933              		.loc 1 3264 21 is_stmt 0 view .LVU3017
 10934 002c 02A8     		add	r0, sp, #8
 10935 002e FFF7FEFF 		bl	bno055_read_accel_xyz
 10936              	.LVL1241:
3264:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10937              		.loc 1 3264 18 view .LVU3018
 10938 0032 54FA80F4 		uxtab	r4, r4, r0
 10939              	.LVL1242:
3264:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10940              		.loc 1 3264 18 view .LVU3019
 10941 0036 64B2     		sxtb	r4, r4
 10942              	.LVL1243:
3265:Core/Src/bno055.c ****         {
 10943              		.loc 1 3265 9 is_stmt 1 view .LVU3020
3265:Core/Src/bno055.c ****         {
 10944              		.loc 1 3265 12 is_stmt 0 view .LVU3021
 10945 0038 0CBB     		cbnz	r4, .L848
3268:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 10946              		.loc 1 3268 13 is_stmt 1 view .LVU3022
3268:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 10947              		.loc 1 3268 52 is_stmt 0 view .LVU3023
ARM GAS  /tmp/ccOloYeZ.s 			page 355


 10948 003a BDF90800 		ldrsh	r0, [sp, #8]
 10949 003e FFF7FEFF 		bl	__aeabi_i2d
 10950              	.LVL1244:
3268:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 10951              		.loc 1 3268 28 view .LVU3024
 10952 0042 FFF7FEFF 		bl	__aeabi_d2f
 10953              	.LVL1245:
3268:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 10954              		.loc 1 3268 26 view .LVU3025
 10955 0046 2860     		str	r0, [r5]	@ float
3269:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 10956              		.loc 1 3269 13 is_stmt 1 view .LVU3026
3269:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 10957              		.loc 1 3269 52 is_stmt 0 view .LVU3027
 10958 0048 BDF90A00 		ldrsh	r0, [sp, #10]
 10959 004c FFF7FEFF 		bl	__aeabi_i2d
 10960              	.LVL1246:
3269:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 10961              		.loc 1 3269 28 view .LVU3028
 10962 0050 FFF7FEFF 		bl	__aeabi_d2f
 10963              	.LVL1247:
3269:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 10964              		.loc 1 3269 26 view .LVU3029
 10965 0054 6860     		str	r0, [r5, #4]	@ float
3270:Core/Src/bno055.c ****         }
 10966              		.loc 1 3270 13 is_stmt 1 view .LVU3030
3270:Core/Src/bno055.c ****         }
 10967              		.loc 1 3270 52 is_stmt 0 view .LVU3031
 10968 0056 BDF90C00 		ldrsh	r0, [sp, #12]
 10969 005a FFF7FEFF 		bl	__aeabi_i2d
 10970              	.LVL1248:
3270:Core/Src/bno055.c ****         }
 10971              		.loc 1 3270 28 view .LVU3032
 10972 005e FFF7FEFF 		bl	__aeabi_d2f
 10973              	.LVL1249:
3270:Core/Src/bno055.c ****         }
 10974              		.loc 1 3270 26 view .LVU3033
 10975 0062 A860     		str	r0, [r5, #8]	@ float
 10976              	.LVL1250:
 10977              	.L846:
3282:Core/Src/bno055.c **** }
 10978              		.loc 1 3282 5 is_stmt 1 view .LVU3034
3283:Core/Src/bno055.c **** 
 10979              		.loc 1 3283 1 is_stmt 0 view .LVU3035
 10980 0064 2046     		mov	r0, r4
 10981 0066 05B0     		add	sp, sp, #20
 10982              		.cfi_remember_state
 10983              		.cfi_def_cfa_offset 12
 10984              		@ sp needed
 10985 0068 30BD     		pop	{r4, r5, pc}
 10986              	.LVL1251:
 10987              	.L850:
 10988              		.cfi_restore_state
3259:Core/Src/bno055.c ****     }
 10989              		.loc 1 3259 9 is_stmt 1 view .LVU3036
3259:Core/Src/bno055.c ****     }
 10990              		.loc 1 3259 21 is_stmt 0 view .LVU3037
ARM GAS  /tmp/ccOloYeZ.s 			page 356


 10991 006a 0120     		movs	r0, #1
 10992 006c FFF7FEFF 		bl	bno055_set_accel_unit
 10993              	.LVL1252:
3259:Core/Src/bno055.c ****     }
 10994              		.loc 1 3259 18 view .LVU3038
 10995 0070 54FA80F4 		uxtab	r4, r4, r0
 10996              	.LVL1253:
3259:Core/Src/bno055.c ****     }
 10997              		.loc 1 3259 18 view .LVU3039
 10998 0074 64B2     		sxtb	r4, r4
 10999              	.LVL1254:
3259:Core/Src/bno055.c ****     }
 11000              		.loc 1 3259 18 view .LVU3040
 11001 0076 D8E7     		b	.L845
 11002              	.L847:
3279:Core/Src/bno055.c ****     }
 11003              		.loc 1 3279 18 view .LVU3041
 11004 0078 4FF0FF34 		mov	r4, #-1
 11005              	.LVL1255:
3279:Core/Src/bno055.c ****     }
 11006              		.loc 1 3279 18 view .LVU3042
 11007 007c F2E7     		b	.L846
 11008              	.LVL1256:
 11009              	.L848:
3274:Core/Src/bno055.c ****         }
 11010              		.loc 1 3274 22 view .LVU3043
 11011 007e 4FF0FF34 		mov	r4, #-1
 11012              	.LVL1257:
3274:Core/Src/bno055.c ****         }
 11013              		.loc 1 3274 22 view .LVU3044
 11014 0082 EFE7     		b	.L846
 11015              		.cfi_endproc
 11016              	.LFE48:
 11018              		.section	.text.bno055_convert_double_accel_x_msq,"ax",%progbits
 11019              		.align	1
 11020              		.global	bno055_convert_double_accel_x_msq
 11021              		.syntax unified
 11022              		.thumb
 11023              		.thumb_func
 11025              	bno055_convert_double_accel_x_msq:
 11026              	.LVL1258:
 11027              	.LFB79:
4680:Core/Src/bno055.c ****     /* Variable used to return value of
 11028              		.loc 1 4680 1 is_stmt 1 view -0
 11029              		.cfi_startproc
 11030              		@ args = 0, pretend = 0, frame = 8
 11031              		@ frame_needed = 0, uses_anonymous_args = 0
4680:Core/Src/bno055.c ****     /* Variable used to return value of
 11032              		.loc 1 4680 1 is_stmt 0 view .LVU3046
 11033 0000 30B5     		push	{r4, r5, lr}
 11034              		.cfi_def_cfa_offset 12
 11035              		.cfi_offset 4, -12
 11036              		.cfi_offset 5, -8
 11037              		.cfi_offset 14, -4
 11038 0002 83B0     		sub	sp, sp, #12
 11039              		.cfi_def_cfa_offset 24
 11040 0004 0546     		mov	r5, r0
ARM GAS  /tmp/ccOloYeZ.s 			page 357


4683:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
 11041              		.loc 1 4683 5 is_stmt 1 view .LVU3047
 11042              	.LVL1259:
4684:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11043              		.loc 1 4684 5 view .LVU3048
4684:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11044              		.loc 1 4684 9 is_stmt 0 view .LVU3049
 11045 0006 0023     		movs	r3, #0
 11046 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4685:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11047              		.loc 1 4685 5 is_stmt 1 view .LVU3050
 11048              	.LVL1260:
4686:Core/Src/bno055.c **** 
 11049              		.loc 1 4686 5 view .LVU3051
4686:Core/Src/bno055.c **** 
 11050              		.loc 1 4686 8 is_stmt 0 view .LVU3052
 11051 000c 8DF80530 		strb	r3, [sp, #5]
4690:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11052              		.loc 1 4690 5 is_stmt 1 view .LVU3053
4690:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11053              		.loc 1 4690 16 is_stmt 0 view .LVU3054
 11054 0010 0DF10500 		add	r0, sp, #5
 11055              	.LVL1261:
4690:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11056              		.loc 1 4690 16 view .LVU3055
 11057 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11058              	.LVL1262:
 11059 0018 0446     		mov	r4, r0
 11060              	.LVL1263:
4691:Core/Src/bno055.c ****     {
 11061              		.loc 1 4691 5 is_stmt 1 view .LVU3056
4691:Core/Src/bno055.c ****     {
 11062              		.loc 1 4691 23 is_stmt 0 view .LVU3057
 11063 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4691:Core/Src/bno055.c ****     {
 11064              		.loc 1 4691 8 view .LVU3058
 11065 001e ABB9     		cbnz	r3, .L857
 11066              	.L852:
4695:Core/Src/bno055.c ****     {
 11067              		.loc 1 4695 5 is_stmt 1 view .LVU3059
4695:Core/Src/bno055.c ****     {
 11068              		.loc 1 4695 8 is_stmt 0 view .LVU3060
 11069 0020 DCB9     		cbnz	r4, .L854
4698:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11070              		.loc 1 4698 9 is_stmt 1 view .LVU3061
4698:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11071              		.loc 1 4698 21 is_stmt 0 view .LVU3062
 11072 0022 0DF10600 		add	r0, sp, #6
 11073 0026 FFF7FEFF 		bl	bno055_read_accel_x
 11074              	.LVL1264:
4698:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11075              		.loc 1 4698 18 view .LVU3063
 11076 002a 54FA80F4 		uxtab	r4, r4, r0
 11077              	.LVL1265:
4698:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11078              		.loc 1 4698 18 view .LVU3064
 11079 002e 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccOloYeZ.s 			page 358


 11080              	.LVL1266:
4699:Core/Src/bno055.c ****         {
 11081              		.loc 1 4699 9 is_stmt 1 view .LVU3065
4699:Core/Src/bno055.c ****         {
 11082              		.loc 1 4699 12 is_stmt 0 view .LVU3066
 11083 0030 B4B9     		cbnz	r4, .L855
4702:Core/Src/bno055.c ****             *accel_x_d = data_f;
 11084              		.loc 1 4702 13 is_stmt 1 view .LVU3067
4702:Core/Src/bno055.c ****             *accel_x_d = data_f;
 11085              		.loc 1 4702 22 is_stmt 0 view .LVU3068
 11086 0032 BDF90600 		ldrsh	r0, [sp, #6]
 11087 0036 FFF7FEFF 		bl	__aeabi_i2d
 11088              	.LVL1267:
4702:Core/Src/bno055.c ****             *accel_x_d = data_f;
 11089              		.loc 1 4702 20 view .LVU3069
 11090 003a 0022     		movs	r2, #0
 11091 003c 0A4B     		ldr	r3, .L858
 11092 003e FFF7FEFF 		bl	__aeabi_ddiv
 11093              	.LVL1268:
4703:Core/Src/bno055.c ****         }
 11094              		.loc 1 4703 13 is_stmt 1 view .LVU3070
4703:Core/Src/bno055.c ****         }
 11095              		.loc 1 4703 24 is_stmt 0 view .LVU3071
 11096 0042 C5E90001 		strd	r0, [r5]
 11097              	.LVL1269:
 11098              	.L853:
4715:Core/Src/bno055.c **** }
 11099              		.loc 1 4715 5 is_stmt 1 view .LVU3072
4716:Core/Src/bno055.c **** 
 11100              		.loc 1 4716 1 is_stmt 0 view .LVU3073
 11101 0046 2046     		mov	r0, r4
 11102 0048 03B0     		add	sp, sp, #12
 11103              		.cfi_remember_state
 11104              		.cfi_def_cfa_offset 12
 11105              		@ sp needed
 11106 004a 30BD     		pop	{r4, r5, pc}
 11107              	.LVL1270:
 11108              	.L857:
 11109              		.cfi_restore_state
4693:Core/Src/bno055.c ****     }
 11110              		.loc 1 4693 9 is_stmt 1 view .LVU3074
4693:Core/Src/bno055.c ****     }
 11111              		.loc 1 4693 21 is_stmt 0 view .LVU3075
 11112 004c 0020     		movs	r0, #0
 11113 004e FFF7FEFF 		bl	bno055_set_accel_unit
 11114              	.LVL1271:
4693:Core/Src/bno055.c ****     }
 11115              		.loc 1 4693 18 view .LVU3076
 11116 0052 54FA80F4 		uxtab	r4, r4, r0
 11117              	.LVL1272:
4693:Core/Src/bno055.c ****     }
 11118              		.loc 1 4693 18 view .LVU3077
 11119 0056 64B2     		sxtb	r4, r4
 11120              	.LVL1273:
4693:Core/Src/bno055.c ****     }
 11121              		.loc 1 4693 18 view .LVU3078
 11122 0058 E2E7     		b	.L852
ARM GAS  /tmp/ccOloYeZ.s 			page 359


 11123              	.L854:
4712:Core/Src/bno055.c ****     }
 11124              		.loc 1 4712 18 view .LVU3079
 11125 005a 4FF0FF34 		mov	r4, #-1
 11126              	.LVL1274:
4712:Core/Src/bno055.c ****     }
 11127              		.loc 1 4712 18 view .LVU3080
 11128 005e F2E7     		b	.L853
 11129              	.LVL1275:
 11130              	.L855:
4707:Core/Src/bno055.c ****         }
 11131              		.loc 1 4707 22 view .LVU3081
 11132 0060 4FF0FF34 		mov	r4, #-1
 11133              	.LVL1276:
4707:Core/Src/bno055.c ****         }
 11134              		.loc 1 4707 22 view .LVU3082
 11135 0064 EFE7     		b	.L853
 11136              	.L859:
 11137 0066 00BF     		.align	2
 11138              	.L858:
 11139 0068 00005940 		.word	1079574528
 11140              		.cfi_endproc
 11141              	.LFE79:
 11143              		.section	.text.bno055_convert_double_accel_x_mg,"ax",%progbits
 11144              		.align	1
 11145              		.global	bno055_convert_double_accel_x_mg
 11146              		.syntax unified
 11147              		.thumb
 11148              		.thumb_func
 11150              	bno055_convert_double_accel_x_mg:
 11151              	.LVL1277:
 11152              	.LFB80:
4734:Core/Src/bno055.c ****     /* Variable used to return value of
 11153              		.loc 1 4734 1 is_stmt 1 view -0
 11154              		.cfi_startproc
 11155              		@ args = 0, pretend = 0, frame = 8
 11156              		@ frame_needed = 0, uses_anonymous_args = 0
4734:Core/Src/bno055.c ****     /* Variable used to return value of
 11157              		.loc 1 4734 1 is_stmt 0 view .LVU3084
 11158 0000 30B5     		push	{r4, r5, lr}
 11159              		.cfi_def_cfa_offset 12
 11160              		.cfi_offset 4, -12
 11161              		.cfi_offset 5, -8
 11162              		.cfi_offset 14, -4
 11163 0002 83B0     		sub	sp, sp, #12
 11164              		.cfi_def_cfa_offset 24
 11165 0004 0546     		mov	r5, r0
4737:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
 11166              		.loc 1 4737 5 is_stmt 1 view .LVU3085
 11167              	.LVL1278:
4738:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11168              		.loc 1 4738 5 view .LVU3086
4738:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11169              		.loc 1 4738 9 is_stmt 0 view .LVU3087
 11170 0006 0023     		movs	r3, #0
 11171 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4739:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccOloYeZ.s 			page 360


 11172              		.loc 1 4739 5 is_stmt 1 view .LVU3088
 11173              	.LVL1279:
4740:Core/Src/bno055.c **** 
 11174              		.loc 1 4740 5 view .LVU3089
4740:Core/Src/bno055.c **** 
 11175              		.loc 1 4740 8 is_stmt 0 view .LVU3090
 11176 000c 8DF80530 		strb	r3, [sp, #5]
4744:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11177              		.loc 1 4744 5 is_stmt 1 view .LVU3091
4744:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11178              		.loc 1 4744 16 is_stmt 0 view .LVU3092
 11179 0010 0DF10500 		add	r0, sp, #5
 11180              	.LVL1280:
4744:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11181              		.loc 1 4744 16 view .LVU3093
 11182 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11183              	.LVL1281:
 11184 0018 0446     		mov	r4, r0
 11185              	.LVL1282:
4745:Core/Src/bno055.c ****     {
 11186              		.loc 1 4745 5 is_stmt 1 view .LVU3094
4745:Core/Src/bno055.c ****     {
 11187              		.loc 1 4745 23 is_stmt 0 view .LVU3095
 11188 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4745:Core/Src/bno055.c ****     {
 11189              		.loc 1 4745 8 view .LVU3096
 11190 001e 012B     		cmp	r3, #1
 11191 0020 11D1     		bne	.L866
 11192              	.L861:
4749:Core/Src/bno055.c ****     {
 11193              		.loc 1 4749 5 is_stmt 1 view .LVU3097
4749:Core/Src/bno055.c ****     {
 11194              		.loc 1 4749 8 is_stmt 0 view .LVU3098
 11195 0022 BCB9     		cbnz	r4, .L863
4752:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11196              		.loc 1 4752 9 is_stmt 1 view .LVU3099
4752:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11197              		.loc 1 4752 21 is_stmt 0 view .LVU3100
 11198 0024 0DF10600 		add	r0, sp, #6
 11199 0028 FFF7FEFF 		bl	bno055_read_accel_x
 11200              	.LVL1283:
4752:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11201              		.loc 1 4752 18 view .LVU3101
 11202 002c 54FA80F4 		uxtab	r4, r4, r0
 11203              	.LVL1284:
4752:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11204              		.loc 1 4752 18 view .LVU3102
 11205 0030 64B2     		sxtb	r4, r4
 11206              	.LVL1285:
4753:Core/Src/bno055.c ****         {
 11207              		.loc 1 4753 9 is_stmt 1 view .LVU3103
4753:Core/Src/bno055.c ****         {
 11208              		.loc 1 4753 12 is_stmt 0 view .LVU3104
 11209 0032 94B9     		cbnz	r4, .L864
4756:Core/Src/bno055.c ****             *accel_x_d = data_f;
 11210              		.loc 1 4756 13 is_stmt 1 view .LVU3105
4756:Core/Src/bno055.c ****             *accel_x_d = data_f;
ARM GAS  /tmp/ccOloYeZ.s 			page 361


 11211              		.loc 1 4756 20 is_stmt 0 view .LVU3106
 11212 0034 BDF90600 		ldrsh	r0, [sp, #6]
 11213 0038 FFF7FEFF 		bl	__aeabi_i2d
 11214              	.LVL1286:
4757:Core/Src/bno055.c ****         }
 11215              		.loc 1 4757 13 is_stmt 1 view .LVU3107
4757:Core/Src/bno055.c ****         }
 11216              		.loc 1 4757 24 is_stmt 0 view .LVU3108
 11217 003c C5E90001 		strd	r0, [r5]
 11218              	.LVL1287:
 11219              	.L862:
4769:Core/Src/bno055.c **** }
 11220              		.loc 1 4769 5 is_stmt 1 view .LVU3109
4770:Core/Src/bno055.c **** 
 11221              		.loc 1 4770 1 is_stmt 0 view .LVU3110
 11222 0040 2046     		mov	r0, r4
 11223 0042 03B0     		add	sp, sp, #12
 11224              		.cfi_remember_state
 11225              		.cfi_def_cfa_offset 12
 11226              		@ sp needed
 11227 0044 30BD     		pop	{r4, r5, pc}
 11228              	.LVL1288:
 11229              	.L866:
 11230              		.cfi_restore_state
4747:Core/Src/bno055.c ****     }
 11231              		.loc 1 4747 9 is_stmt 1 view .LVU3111
4747:Core/Src/bno055.c ****     }
 11232              		.loc 1 4747 21 is_stmt 0 view .LVU3112
 11233 0046 0120     		movs	r0, #1
 11234 0048 FFF7FEFF 		bl	bno055_set_accel_unit
 11235              	.LVL1289:
4747:Core/Src/bno055.c ****     }
 11236              		.loc 1 4747 18 view .LVU3113
 11237 004c 54FA80F4 		uxtab	r4, r4, r0
 11238              	.LVL1290:
4747:Core/Src/bno055.c ****     }
 11239              		.loc 1 4747 18 view .LVU3114
 11240 0050 64B2     		sxtb	r4, r4
 11241              	.LVL1291:
4747:Core/Src/bno055.c ****     }
 11242              		.loc 1 4747 18 view .LVU3115
 11243 0052 E6E7     		b	.L861
 11244              	.L863:
4766:Core/Src/bno055.c ****     }
 11245              		.loc 1 4766 18 view .LVU3116
 11246 0054 4FF0FF34 		mov	r4, #-1
 11247              	.LVL1292:
4766:Core/Src/bno055.c ****     }
 11248              		.loc 1 4766 18 view .LVU3117
 11249 0058 F2E7     		b	.L862
 11250              	.LVL1293:
 11251              	.L864:
4761:Core/Src/bno055.c ****         }
 11252              		.loc 1 4761 22 view .LVU3118
 11253 005a 4FF0FF34 		mov	r4, #-1
 11254              	.LVL1294:
4761:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 362


 11255              		.loc 1 4761 22 view .LVU3119
 11256 005e EFE7     		b	.L862
 11257              		.cfi_endproc
 11258              	.LFE80:
 11260              		.section	.text.bno055_convert_double_accel_y_msq,"ax",%progbits
 11261              		.align	1
 11262              		.global	bno055_convert_double_accel_y_msq
 11263              		.syntax unified
 11264              		.thumb
 11265              		.thumb_func
 11267              	bno055_convert_double_accel_y_msq:
 11268              	.LVL1295:
 11269              	.LFB81:
4788:Core/Src/bno055.c ****     /* Variable used to return value of
 11270              		.loc 1 4788 1 is_stmt 1 view -0
 11271              		.cfi_startproc
 11272              		@ args = 0, pretend = 0, frame = 8
 11273              		@ frame_needed = 0, uses_anonymous_args = 0
4788:Core/Src/bno055.c ****     /* Variable used to return value of
 11274              		.loc 1 4788 1 is_stmt 0 view .LVU3121
 11275 0000 30B5     		push	{r4, r5, lr}
 11276              		.cfi_def_cfa_offset 12
 11277              		.cfi_offset 4, -12
 11278              		.cfi_offset 5, -8
 11279              		.cfi_offset 14, -4
 11280 0002 83B0     		sub	sp, sp, #12
 11281              		.cfi_def_cfa_offset 24
 11282 0004 0546     		mov	r5, r0
4791:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
 11283              		.loc 1 4791 5 is_stmt 1 view .LVU3122
 11284              	.LVL1296:
4792:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11285              		.loc 1 4792 5 view .LVU3123
4792:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11286              		.loc 1 4792 9 is_stmt 0 view .LVU3124
 11287 0006 0023     		movs	r3, #0
 11288 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4793:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11289              		.loc 1 4793 5 is_stmt 1 view .LVU3125
 11290              	.LVL1297:
4794:Core/Src/bno055.c **** 
 11291              		.loc 1 4794 5 view .LVU3126
4794:Core/Src/bno055.c **** 
 11292              		.loc 1 4794 8 is_stmt 0 view .LVU3127
 11293 000c 8DF80530 		strb	r3, [sp, #5]
4798:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11294              		.loc 1 4798 5 is_stmt 1 view .LVU3128
4798:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11295              		.loc 1 4798 16 is_stmt 0 view .LVU3129
 11296 0010 0DF10500 		add	r0, sp, #5
 11297              	.LVL1298:
4798:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11298              		.loc 1 4798 16 view .LVU3130
 11299 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11300              	.LVL1299:
 11301 0018 0446     		mov	r4, r0
 11302              	.LVL1300:
ARM GAS  /tmp/ccOloYeZ.s 			page 363


4799:Core/Src/bno055.c ****     {
 11303              		.loc 1 4799 5 is_stmt 1 view .LVU3131
4799:Core/Src/bno055.c ****     {
 11304              		.loc 1 4799 23 is_stmt 0 view .LVU3132
 11305 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4799:Core/Src/bno055.c ****     {
 11306              		.loc 1 4799 8 view .LVU3133
 11307 001e ABB9     		cbnz	r3, .L873
 11308              	.L868:
4803:Core/Src/bno055.c ****     {
 11309              		.loc 1 4803 5 is_stmt 1 view .LVU3134
4803:Core/Src/bno055.c ****     {
 11310              		.loc 1 4803 8 is_stmt 0 view .LVU3135
 11311 0020 DCB9     		cbnz	r4, .L870
4806:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11312              		.loc 1 4806 9 is_stmt 1 view .LVU3136
4806:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11313              		.loc 1 4806 21 is_stmt 0 view .LVU3137
 11314 0022 0DF10600 		add	r0, sp, #6
 11315 0026 FFF7FEFF 		bl	bno055_read_accel_y
 11316              	.LVL1301:
4806:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11317              		.loc 1 4806 18 view .LVU3138
 11318 002a 54FA80F4 		uxtab	r4, r4, r0
 11319              	.LVL1302:
4806:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11320              		.loc 1 4806 18 view .LVU3139
 11321 002e 64B2     		sxtb	r4, r4
 11322              	.LVL1303:
4807:Core/Src/bno055.c ****         {
 11323              		.loc 1 4807 9 is_stmt 1 view .LVU3140
4807:Core/Src/bno055.c ****         {
 11324              		.loc 1 4807 12 is_stmt 0 view .LVU3141
 11325 0030 B4B9     		cbnz	r4, .L871
4810:Core/Src/bno055.c ****             *accel_y_d = data_f;
 11326              		.loc 1 4810 13 is_stmt 1 view .LVU3142
4810:Core/Src/bno055.c ****             *accel_y_d = data_f;
 11327              		.loc 1 4810 22 is_stmt 0 view .LVU3143
 11328 0032 BDF90600 		ldrsh	r0, [sp, #6]
 11329 0036 FFF7FEFF 		bl	__aeabi_i2d
 11330              	.LVL1304:
4810:Core/Src/bno055.c ****             *accel_y_d = data_f;
 11331              		.loc 1 4810 20 view .LVU3144
 11332 003a 0022     		movs	r2, #0
 11333 003c 0A4B     		ldr	r3, .L874
 11334 003e FFF7FEFF 		bl	__aeabi_ddiv
 11335              	.LVL1305:
4811:Core/Src/bno055.c ****         }
 11336              		.loc 1 4811 13 is_stmt 1 view .LVU3145
4811:Core/Src/bno055.c ****         }
 11337              		.loc 1 4811 24 is_stmt 0 view .LVU3146
 11338 0042 C5E90001 		strd	r0, [r5]
 11339              	.LVL1306:
 11340              	.L869:
4823:Core/Src/bno055.c **** }
 11341              		.loc 1 4823 5 is_stmt 1 view .LVU3147
4824:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 364


 11342              		.loc 1 4824 1 is_stmt 0 view .LVU3148
 11343 0046 2046     		mov	r0, r4
 11344 0048 03B0     		add	sp, sp, #12
 11345              		.cfi_remember_state
 11346              		.cfi_def_cfa_offset 12
 11347              		@ sp needed
 11348 004a 30BD     		pop	{r4, r5, pc}
 11349              	.LVL1307:
 11350              	.L873:
 11351              		.cfi_restore_state
4801:Core/Src/bno055.c ****     }
 11352              		.loc 1 4801 9 is_stmt 1 view .LVU3149
4801:Core/Src/bno055.c ****     }
 11353              		.loc 1 4801 21 is_stmt 0 view .LVU3150
 11354 004c 0020     		movs	r0, #0
 11355 004e FFF7FEFF 		bl	bno055_set_accel_unit
 11356              	.LVL1308:
4801:Core/Src/bno055.c ****     }
 11357              		.loc 1 4801 18 view .LVU3151
 11358 0052 54FA80F4 		uxtab	r4, r4, r0
 11359              	.LVL1309:
4801:Core/Src/bno055.c ****     }
 11360              		.loc 1 4801 18 view .LVU3152
 11361 0056 64B2     		sxtb	r4, r4
 11362              	.LVL1310:
4801:Core/Src/bno055.c ****     }
 11363              		.loc 1 4801 18 view .LVU3153
 11364 0058 E2E7     		b	.L868
 11365              	.L870:
4820:Core/Src/bno055.c ****     }
 11366              		.loc 1 4820 18 view .LVU3154
 11367 005a 4FF0FF34 		mov	r4, #-1
 11368              	.LVL1311:
4820:Core/Src/bno055.c ****     }
 11369              		.loc 1 4820 18 view .LVU3155
 11370 005e F2E7     		b	.L869
 11371              	.LVL1312:
 11372              	.L871:
4815:Core/Src/bno055.c ****         }
 11373              		.loc 1 4815 22 view .LVU3156
 11374 0060 4FF0FF34 		mov	r4, #-1
 11375              	.LVL1313:
4815:Core/Src/bno055.c ****         }
 11376              		.loc 1 4815 22 view .LVU3157
 11377 0064 EFE7     		b	.L869
 11378              	.L875:
 11379 0066 00BF     		.align	2
 11380              	.L874:
 11381 0068 00005940 		.word	1079574528
 11382              		.cfi_endproc
 11383              	.LFE81:
 11385              		.section	.text.bno055_convert_double_accel_y_mg,"ax",%progbits
 11386              		.align	1
 11387              		.global	bno055_convert_double_accel_y_mg
 11388              		.syntax unified
 11389              		.thumb
 11390              		.thumb_func
ARM GAS  /tmp/ccOloYeZ.s 			page 365


 11392              	bno055_convert_double_accel_y_mg:
 11393              	.LVL1314:
 11394              	.LFB82:
4841:Core/Src/bno055.c ****     /* Variable used to return value of
 11395              		.loc 1 4841 1 is_stmt 1 view -0
 11396              		.cfi_startproc
 11397              		@ args = 0, pretend = 0, frame = 8
 11398              		@ frame_needed = 0, uses_anonymous_args = 0
4841:Core/Src/bno055.c ****     /* Variable used to return value of
 11399              		.loc 1 4841 1 is_stmt 0 view .LVU3159
 11400 0000 30B5     		push	{r4, r5, lr}
 11401              		.cfi_def_cfa_offset 12
 11402              		.cfi_offset 4, -12
 11403              		.cfi_offset 5, -8
 11404              		.cfi_offset 14, -4
 11405 0002 83B0     		sub	sp, sp, #12
 11406              		.cfi_def_cfa_offset 24
 11407 0004 0546     		mov	r5, r0
4844:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
 11408              		.loc 1 4844 5 is_stmt 1 view .LVU3160
 11409              	.LVL1315:
4845:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 11410              		.loc 1 4845 5 view .LVU3161
4845:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 11411              		.loc 1 4845 9 is_stmt 0 view .LVU3162
 11412 0006 0023     		movs	r3, #0
 11413 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4846:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11414              		.loc 1 4846 5 is_stmt 1 view .LVU3163
 11415              	.LVL1316:
4847:Core/Src/bno055.c **** 
 11416              		.loc 1 4847 5 view .LVU3164
4847:Core/Src/bno055.c **** 
 11417              		.loc 1 4847 8 is_stmt 0 view .LVU3165
 11418 000c 8DF80530 		strb	r3, [sp, #5]
4851:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11419              		.loc 1 4851 5 is_stmt 1 view .LVU3166
4851:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11420              		.loc 1 4851 16 is_stmt 0 view .LVU3167
 11421 0010 0DF10500 		add	r0, sp, #5
 11422              	.LVL1317:
4851:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11423              		.loc 1 4851 16 view .LVU3168
 11424 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11425              	.LVL1318:
 11426 0018 0446     		mov	r4, r0
 11427              	.LVL1319:
4852:Core/Src/bno055.c ****     {
 11428              		.loc 1 4852 5 is_stmt 1 view .LVU3169
4852:Core/Src/bno055.c ****     {
 11429              		.loc 1 4852 23 is_stmt 0 view .LVU3170
 11430 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4852:Core/Src/bno055.c ****     {
 11431              		.loc 1 4852 8 view .LVU3171
 11432 001e 012B     		cmp	r3, #1
 11433 0020 11D1     		bne	.L882
 11434              	.L877:
ARM GAS  /tmp/ccOloYeZ.s 			page 366


4856:Core/Src/bno055.c ****     {
 11435              		.loc 1 4856 5 is_stmt 1 view .LVU3172
4856:Core/Src/bno055.c ****     {
 11436              		.loc 1 4856 8 is_stmt 0 view .LVU3173
 11437 0022 BCB9     		cbnz	r4, .L879
4859:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11438              		.loc 1 4859 9 is_stmt 1 view .LVU3174
4859:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11439              		.loc 1 4859 21 is_stmt 0 view .LVU3175
 11440 0024 0DF10600 		add	r0, sp, #6
 11441 0028 FFF7FEFF 		bl	bno055_read_accel_y
 11442              	.LVL1320:
4859:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11443              		.loc 1 4859 18 view .LVU3176
 11444 002c 54FA80F4 		uxtab	r4, r4, r0
 11445              	.LVL1321:
4859:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11446              		.loc 1 4859 18 view .LVU3177
 11447 0030 64B2     		sxtb	r4, r4
 11448              	.LVL1322:
4860:Core/Src/bno055.c ****         {
 11449              		.loc 1 4860 9 is_stmt 1 view .LVU3178
4860:Core/Src/bno055.c ****         {
 11450              		.loc 1 4860 12 is_stmt 0 view .LVU3179
 11451 0032 94B9     		cbnz	r4, .L880
4863:Core/Src/bno055.c ****             *accel_y_d = data_d;
 11452              		.loc 1 4863 13 is_stmt 1 view .LVU3180
4863:Core/Src/bno055.c ****             *accel_y_d = data_d;
 11453              		.loc 1 4863 20 is_stmt 0 view .LVU3181
 11454 0034 BDF90600 		ldrsh	r0, [sp, #6]
 11455 0038 FFF7FEFF 		bl	__aeabi_i2d
 11456              	.LVL1323:
4864:Core/Src/bno055.c ****         }
 11457              		.loc 1 4864 13 is_stmt 1 view .LVU3182
4864:Core/Src/bno055.c ****         }
 11458              		.loc 1 4864 24 is_stmt 0 view .LVU3183
 11459 003c C5E90001 		strd	r0, [r5]
 11460              	.LVL1324:
 11461              	.L878:
4876:Core/Src/bno055.c **** }
 11462              		.loc 1 4876 5 is_stmt 1 view .LVU3184
4877:Core/Src/bno055.c **** 
 11463              		.loc 1 4877 1 is_stmt 0 view .LVU3185
 11464 0040 2046     		mov	r0, r4
 11465 0042 03B0     		add	sp, sp, #12
 11466              		.cfi_remember_state
 11467              		.cfi_def_cfa_offset 12
 11468              		@ sp needed
 11469 0044 30BD     		pop	{r4, r5, pc}
 11470              	.LVL1325:
 11471              	.L882:
 11472              		.cfi_restore_state
4854:Core/Src/bno055.c ****     }
 11473              		.loc 1 4854 9 is_stmt 1 view .LVU3186
4854:Core/Src/bno055.c ****     }
 11474              		.loc 1 4854 21 is_stmt 0 view .LVU3187
 11475 0046 0120     		movs	r0, #1
ARM GAS  /tmp/ccOloYeZ.s 			page 367


 11476 0048 FFF7FEFF 		bl	bno055_set_accel_unit
 11477              	.LVL1326:
4854:Core/Src/bno055.c ****     }
 11478              		.loc 1 4854 18 view .LVU3188
 11479 004c 54FA80F4 		uxtab	r4, r4, r0
 11480              	.LVL1327:
4854:Core/Src/bno055.c ****     }
 11481              		.loc 1 4854 18 view .LVU3189
 11482 0050 64B2     		sxtb	r4, r4
 11483              	.LVL1328:
4854:Core/Src/bno055.c ****     }
 11484              		.loc 1 4854 18 view .LVU3190
 11485 0052 E6E7     		b	.L877
 11486              	.L879:
4873:Core/Src/bno055.c ****     }
 11487              		.loc 1 4873 18 view .LVU3191
 11488 0054 4FF0FF34 		mov	r4, #-1
 11489              	.LVL1329:
4873:Core/Src/bno055.c ****     }
 11490              		.loc 1 4873 18 view .LVU3192
 11491 0058 F2E7     		b	.L878
 11492              	.LVL1330:
 11493              	.L880:
4868:Core/Src/bno055.c ****         }
 11494              		.loc 1 4868 22 view .LVU3193
 11495 005a 4FF0FF34 		mov	r4, #-1
 11496              	.LVL1331:
4868:Core/Src/bno055.c ****         }
 11497              		.loc 1 4868 22 view .LVU3194
 11498 005e EFE7     		b	.L878
 11499              		.cfi_endproc
 11500              	.LFE82:
 11502              		.section	.text.bno055_convert_double_accel_z_msq,"ax",%progbits
 11503              		.align	1
 11504              		.global	bno055_convert_double_accel_z_msq
 11505              		.syntax unified
 11506              		.thumb
 11507              		.thumb_func
 11509              	bno055_convert_double_accel_z_msq:
 11510              	.LVL1332:
 11511              	.LFB83:
4892:Core/Src/bno055.c ****     /* Variable used to return value of
 11512              		.loc 1 4892 1 is_stmt 1 view -0
 11513              		.cfi_startproc
 11514              		@ args = 0, pretend = 0, frame = 8
 11515              		@ frame_needed = 0, uses_anonymous_args = 0
4892:Core/Src/bno055.c ****     /* Variable used to return value of
 11516              		.loc 1 4892 1 is_stmt 0 view .LVU3196
 11517 0000 30B5     		push	{r4, r5, lr}
 11518              		.cfi_def_cfa_offset 12
 11519              		.cfi_offset 4, -12
 11520              		.cfi_offset 5, -8
 11521              		.cfi_offset 14, -4
 11522 0002 83B0     		sub	sp, sp, #12
 11523              		.cfi_def_cfa_offset 24
 11524 0004 0546     		mov	r5, r0
4895:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccOloYeZ.s 			page 368


 11525              		.loc 1 4895 5 is_stmt 1 view .LVU3197
 11526              	.LVL1333:
4896:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 11527              		.loc 1 4896 5 view .LVU3198
4896:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 11528              		.loc 1 4896 9 is_stmt 0 view .LVU3199
 11529 0006 0023     		movs	r3, #0
 11530 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4897:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11531              		.loc 1 4897 5 is_stmt 1 view .LVU3200
 11532              	.LVL1334:
4898:Core/Src/bno055.c **** 
 11533              		.loc 1 4898 5 view .LVU3201
4898:Core/Src/bno055.c **** 
 11534              		.loc 1 4898 8 is_stmt 0 view .LVU3202
 11535 000c 8DF80530 		strb	r3, [sp, #5]
4902:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11536              		.loc 1 4902 5 is_stmt 1 view .LVU3203
4902:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11537              		.loc 1 4902 16 is_stmt 0 view .LVU3204
 11538 0010 0DF10500 		add	r0, sp, #5
 11539              	.LVL1335:
4902:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11540              		.loc 1 4902 16 view .LVU3205
 11541 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11542              	.LVL1336:
 11543 0018 0446     		mov	r4, r0
 11544              	.LVL1337:
4903:Core/Src/bno055.c ****     {
 11545              		.loc 1 4903 5 is_stmt 1 view .LVU3206
4903:Core/Src/bno055.c ****     {
 11546              		.loc 1 4903 23 is_stmt 0 view .LVU3207
 11547 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4903:Core/Src/bno055.c ****     {
 11548              		.loc 1 4903 8 view .LVU3208
 11549 001e ABB9     		cbnz	r3, .L889
 11550              	.L884:
4907:Core/Src/bno055.c ****     {
 11551              		.loc 1 4907 5 is_stmt 1 view .LVU3209
4907:Core/Src/bno055.c ****     {
 11552              		.loc 1 4907 8 is_stmt 0 view .LVU3210
 11553 0020 DCB9     		cbnz	r4, .L886
4910:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11554              		.loc 1 4910 9 is_stmt 1 view .LVU3211
4910:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11555              		.loc 1 4910 21 is_stmt 0 view .LVU3212
 11556 0022 0DF10600 		add	r0, sp, #6
 11557 0026 FFF7FEFF 		bl	bno055_read_accel_z
 11558              	.LVL1338:
4910:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11559              		.loc 1 4910 18 view .LVU3213
 11560 002a 54FA80F4 		uxtab	r4, r4, r0
 11561              	.LVL1339:
4910:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11562              		.loc 1 4910 18 view .LVU3214
 11563 002e 64B2     		sxtb	r4, r4
 11564              	.LVL1340:
ARM GAS  /tmp/ccOloYeZ.s 			page 369


4911:Core/Src/bno055.c ****         {
 11565              		.loc 1 4911 9 is_stmt 1 view .LVU3215
4911:Core/Src/bno055.c ****         {
 11566              		.loc 1 4911 12 is_stmt 0 view .LVU3216
 11567 0030 B4B9     		cbnz	r4, .L887
4914:Core/Src/bno055.c ****             *accel_z_d = data_d;
 11568              		.loc 1 4914 13 is_stmt 1 view .LVU3217
4914:Core/Src/bno055.c ****             *accel_z_d = data_d;
 11569              		.loc 1 4914 22 is_stmt 0 view .LVU3218
 11570 0032 BDF90600 		ldrsh	r0, [sp, #6]
 11571 0036 FFF7FEFF 		bl	__aeabi_i2d
 11572              	.LVL1341:
4914:Core/Src/bno055.c ****             *accel_z_d = data_d;
 11573              		.loc 1 4914 20 view .LVU3219
 11574 003a 0022     		movs	r2, #0
 11575 003c 0A4B     		ldr	r3, .L890
 11576 003e FFF7FEFF 		bl	__aeabi_ddiv
 11577              	.LVL1342:
4915:Core/Src/bno055.c ****         }
 11578              		.loc 1 4915 13 is_stmt 1 view .LVU3220
4915:Core/Src/bno055.c ****         }
 11579              		.loc 1 4915 24 is_stmt 0 view .LVU3221
 11580 0042 C5E90001 		strd	r0, [r5]
 11581              	.LVL1343:
 11582              	.L885:
4927:Core/Src/bno055.c **** }
 11583              		.loc 1 4927 5 is_stmt 1 view .LVU3222
4928:Core/Src/bno055.c **** 
 11584              		.loc 1 4928 1 is_stmt 0 view .LVU3223
 11585 0046 2046     		mov	r0, r4
 11586 0048 03B0     		add	sp, sp, #12
 11587              		.cfi_remember_state
 11588              		.cfi_def_cfa_offset 12
 11589              		@ sp needed
 11590 004a 30BD     		pop	{r4, r5, pc}
 11591              	.LVL1344:
 11592              	.L889:
 11593              		.cfi_restore_state
4905:Core/Src/bno055.c ****     }
 11594              		.loc 1 4905 9 is_stmt 1 view .LVU3224
4905:Core/Src/bno055.c ****     }
 11595              		.loc 1 4905 21 is_stmt 0 view .LVU3225
 11596 004c 0020     		movs	r0, #0
 11597 004e FFF7FEFF 		bl	bno055_set_accel_unit
 11598              	.LVL1345:
4905:Core/Src/bno055.c ****     }
 11599              		.loc 1 4905 18 view .LVU3226
 11600 0052 54FA80F4 		uxtab	r4, r4, r0
 11601              	.LVL1346:
4905:Core/Src/bno055.c ****     }
 11602              		.loc 1 4905 18 view .LVU3227
 11603 0056 64B2     		sxtb	r4, r4
 11604              	.LVL1347:
4905:Core/Src/bno055.c ****     }
 11605              		.loc 1 4905 18 view .LVU3228
 11606 0058 E2E7     		b	.L884
 11607              	.L886:
ARM GAS  /tmp/ccOloYeZ.s 			page 370


4924:Core/Src/bno055.c ****     }
 11608              		.loc 1 4924 18 view .LVU3229
 11609 005a 4FF0FF34 		mov	r4, #-1
 11610              	.LVL1348:
4924:Core/Src/bno055.c ****     }
 11611              		.loc 1 4924 18 view .LVU3230
 11612 005e F2E7     		b	.L885
 11613              	.LVL1349:
 11614              	.L887:
4919:Core/Src/bno055.c ****         }
 11615              		.loc 1 4919 22 view .LVU3231
 11616 0060 4FF0FF34 		mov	r4, #-1
 11617              	.LVL1350:
4919:Core/Src/bno055.c ****         }
 11618              		.loc 1 4919 22 view .LVU3232
 11619 0064 EFE7     		b	.L885
 11620              	.L891:
 11621 0066 00BF     		.align	2
 11622              	.L890:
 11623 0068 00005940 		.word	1079574528
 11624              		.cfi_endproc
 11625              	.LFE83:
 11627              		.section	.text.bno055_convert_double_accel_z_mg,"ax",%progbits
 11628              		.align	1
 11629              		.global	bno055_convert_double_accel_z_mg
 11630              		.syntax unified
 11631              		.thumb
 11632              		.thumb_func
 11634              	bno055_convert_double_accel_z_mg:
 11635              	.LVL1351:
 11636              	.LFB84:
4944:Core/Src/bno055.c ****     /* Variable used to return value of
 11637              		.loc 1 4944 1 is_stmt 1 view -0
 11638              		.cfi_startproc
 11639              		@ args = 0, pretend = 0, frame = 8
 11640              		@ frame_needed = 0, uses_anonymous_args = 0
4944:Core/Src/bno055.c ****     /* Variable used to return value of
 11641              		.loc 1 4944 1 is_stmt 0 view .LVU3234
 11642 0000 30B5     		push	{r4, r5, lr}
 11643              		.cfi_def_cfa_offset 12
 11644              		.cfi_offset 4, -12
 11645              		.cfi_offset 5, -8
 11646              		.cfi_offset 14, -4
 11647 0002 83B0     		sub	sp, sp, #12
 11648              		.cfi_def_cfa_offset 24
 11649 0004 0546     		mov	r5, r0
4947:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
 11650              		.loc 1 4947 5 is_stmt 1 view .LVU3235
 11651              	.LVL1352:
4948:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 11652              		.loc 1 4948 5 view .LVU3236
4948:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 11653              		.loc 1 4948 9 is_stmt 0 view .LVU3237
 11654 0006 0023     		movs	r3, #0
 11655 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4949:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11656              		.loc 1 4949 5 is_stmt 1 view .LVU3238
ARM GAS  /tmp/ccOloYeZ.s 			page 371


 11657              	.LVL1353:
4950:Core/Src/bno055.c **** 
 11658              		.loc 1 4950 5 view .LVU3239
4950:Core/Src/bno055.c **** 
 11659              		.loc 1 4950 8 is_stmt 0 view .LVU3240
 11660 000c 8DF80530 		strb	r3, [sp, #5]
4954:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11661              		.loc 1 4954 5 is_stmt 1 view .LVU3241
4954:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11662              		.loc 1 4954 16 is_stmt 0 view .LVU3242
 11663 0010 0DF10500 		add	r0, sp, #5
 11664              	.LVL1354:
4954:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11665              		.loc 1 4954 16 view .LVU3243
 11666 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11667              	.LVL1355:
 11668 0018 0446     		mov	r4, r0
 11669              	.LVL1356:
4955:Core/Src/bno055.c ****     {
 11670              		.loc 1 4955 5 is_stmt 1 view .LVU3244
4955:Core/Src/bno055.c ****     {
 11671              		.loc 1 4955 23 is_stmt 0 view .LVU3245
 11672 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4955:Core/Src/bno055.c ****     {
 11673              		.loc 1 4955 8 view .LVU3246
 11674 001e 012B     		cmp	r3, #1
 11675 0020 11D1     		bne	.L898
 11676              	.L893:
4959:Core/Src/bno055.c ****     {
 11677              		.loc 1 4959 5 is_stmt 1 view .LVU3247
4959:Core/Src/bno055.c ****     {
 11678              		.loc 1 4959 8 is_stmt 0 view .LVU3248
 11679 0022 BCB9     		cbnz	r4, .L895
4962:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11680              		.loc 1 4962 9 is_stmt 1 view .LVU3249
4962:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11681              		.loc 1 4962 21 is_stmt 0 view .LVU3250
 11682 0024 0DF10600 		add	r0, sp, #6
 11683 0028 FFF7FEFF 		bl	bno055_read_accel_z
 11684              	.LVL1357:
4962:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11685              		.loc 1 4962 18 view .LVU3251
 11686 002c 54FA80F4 		uxtab	r4, r4, r0
 11687              	.LVL1358:
4962:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11688              		.loc 1 4962 18 view .LVU3252
 11689 0030 64B2     		sxtb	r4, r4
 11690              	.LVL1359:
4963:Core/Src/bno055.c ****         {
 11691              		.loc 1 4963 9 is_stmt 1 view .LVU3253
4963:Core/Src/bno055.c ****         {
 11692              		.loc 1 4963 12 is_stmt 0 view .LVU3254
 11693 0032 94B9     		cbnz	r4, .L896
4966:Core/Src/bno055.c ****             *accel_z_d = data_d;
 11694              		.loc 1 4966 13 is_stmt 1 view .LVU3255
4966:Core/Src/bno055.c ****             *accel_z_d = data_d;
 11695              		.loc 1 4966 20 is_stmt 0 view .LVU3256
ARM GAS  /tmp/ccOloYeZ.s 			page 372


 11696 0034 BDF90600 		ldrsh	r0, [sp, #6]
 11697 0038 FFF7FEFF 		bl	__aeabi_i2d
 11698              	.LVL1360:
4967:Core/Src/bno055.c ****         }
 11699              		.loc 1 4967 13 is_stmt 1 view .LVU3257
4967:Core/Src/bno055.c ****         }
 11700              		.loc 1 4967 24 is_stmt 0 view .LVU3258
 11701 003c C5E90001 		strd	r0, [r5]
 11702              	.LVL1361:
 11703              	.L894:
4979:Core/Src/bno055.c **** }
 11704              		.loc 1 4979 5 is_stmt 1 view .LVU3259
4980:Core/Src/bno055.c **** 
 11705              		.loc 1 4980 1 is_stmt 0 view .LVU3260
 11706 0040 2046     		mov	r0, r4
 11707 0042 03B0     		add	sp, sp, #12
 11708              		.cfi_remember_state
 11709              		.cfi_def_cfa_offset 12
 11710              		@ sp needed
 11711 0044 30BD     		pop	{r4, r5, pc}
 11712              	.LVL1362:
 11713              	.L898:
 11714              		.cfi_restore_state
4957:Core/Src/bno055.c ****     }
 11715              		.loc 1 4957 9 is_stmt 1 view .LVU3261
4957:Core/Src/bno055.c ****     }
 11716              		.loc 1 4957 21 is_stmt 0 view .LVU3262
 11717 0046 0120     		movs	r0, #1
 11718 0048 FFF7FEFF 		bl	bno055_set_accel_unit
 11719              	.LVL1363:
4957:Core/Src/bno055.c ****     }
 11720              		.loc 1 4957 18 view .LVU3263
 11721 004c 54FA80F4 		uxtab	r4, r4, r0
 11722              	.LVL1364:
4957:Core/Src/bno055.c ****     }
 11723              		.loc 1 4957 18 view .LVU3264
 11724 0050 64B2     		sxtb	r4, r4
 11725              	.LVL1365:
4957:Core/Src/bno055.c ****     }
 11726              		.loc 1 4957 18 view .LVU3265
 11727 0052 E6E7     		b	.L893
 11728              	.L895:
4976:Core/Src/bno055.c ****     }
 11729              		.loc 1 4976 18 view .LVU3266
 11730 0054 4FF0FF34 		mov	r4, #-1
 11731              	.LVL1366:
4976:Core/Src/bno055.c ****     }
 11732              		.loc 1 4976 18 view .LVU3267
 11733 0058 F2E7     		b	.L894
 11734              	.LVL1367:
 11735              	.L896:
4971:Core/Src/bno055.c ****         }
 11736              		.loc 1 4971 22 view .LVU3268
 11737 005a 4FF0FF34 		mov	r4, #-1
 11738              	.LVL1368:
4971:Core/Src/bno055.c ****         }
 11739              		.loc 1 4971 22 view .LVU3269
ARM GAS  /tmp/ccOloYeZ.s 			page 373


 11740 005e EFE7     		b	.L894
 11741              		.cfi_endproc
 11742              	.LFE84:
 11744              		.section	.text.bno055_convert_double_accel_xyz_msq,"ax",%progbits
 11745              		.align	1
 11746              		.global	bno055_convert_double_accel_xyz_msq
 11747              		.syntax unified
 11748              		.thumb
 11749              		.thumb_func
 11751              	bno055_convert_double_accel_xyz_msq:
 11752              	.LVL1369:
 11753              	.LFB85:
5002:Core/Src/bno055.c ****     /* Variable used to return value of
 11754              		.loc 1 5002 1 is_stmt 1 view -0
 11755              		.cfi_startproc
 11756              		@ args = 0, pretend = 0, frame = 16
 11757              		@ frame_needed = 0, uses_anonymous_args = 0
5002:Core/Src/bno055.c ****     /* Variable used to return value of
 11758              		.loc 1 5002 1 is_stmt 0 view .LVU3271
 11759 0000 30B5     		push	{r4, r5, lr}
 11760              		.cfi_def_cfa_offset 12
 11761              		.cfi_offset 4, -12
 11762              		.cfi_offset 5, -8
 11763              		.cfi_offset 14, -4
 11764 0002 85B0     		sub	sp, sp, #20
 11765              		.cfi_def_cfa_offset 32
 11766 0004 0546     		mov	r5, r0
5005:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
 11767              		.loc 1 5005 5 is_stmt 1 view .LVU3272
 11768              	.LVL1370:
5006:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11769              		.loc 1 5006 5 view .LVU3273
5006:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11770              		.loc 1 5006 27 is_stmt 0 view .LVU3274
 11771 0006 0023     		movs	r3, #0
 11772 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 11773 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 11774 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
5007:Core/Src/bno055.c **** 
 11775              		.loc 1 5007 5 is_stmt 1 view .LVU3275
5007:Core/Src/bno055.c **** 
 11776              		.loc 1 5007 8 is_stmt 0 view .LVU3276
 11777 0014 8DF80730 		strb	r3, [sp, #7]
5011:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11778              		.loc 1 5011 5 is_stmt 1 view .LVU3277
5011:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11779              		.loc 1 5011 16 is_stmt 0 view .LVU3278
 11780 0018 0DF10700 		add	r0, sp, #7
 11781              	.LVL1371:
5011:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11782              		.loc 1 5011 16 view .LVU3279
 11783 001c FFF7FEFF 		bl	bno055_get_accel_unit
 11784              	.LVL1372:
 11785 0020 0446     		mov	r4, r0
 11786              	.LVL1373:
5012:Core/Src/bno055.c ****     {
 11787              		.loc 1 5012 5 is_stmt 1 view .LVU3280
ARM GAS  /tmp/ccOloYeZ.s 			page 374


5012:Core/Src/bno055.c ****     {
 11788              		.loc 1 5012 23 is_stmt 0 view .LVU3281
 11789 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
5012:Core/Src/bno055.c ****     {
 11790              		.loc 1 5012 8 view .LVU3282
 11791 0026 43BB     		cbnz	r3, .L905
 11792              	.L900:
5016:Core/Src/bno055.c ****     {
 11793              		.loc 1 5016 5 is_stmt 1 view .LVU3283
5016:Core/Src/bno055.c ****     {
 11794              		.loc 1 5016 8 is_stmt 0 view .LVU3284
 11795 0028 74BB     		cbnz	r4, .L902
5019:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11796              		.loc 1 5019 9 is_stmt 1 view .LVU3285
5019:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11797              		.loc 1 5019 21 is_stmt 0 view .LVU3286
 11798 002a 02A8     		add	r0, sp, #8
 11799 002c FFF7FEFF 		bl	bno055_read_accel_xyz
 11800              	.LVL1374:
5019:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11801              		.loc 1 5019 18 view .LVU3287
 11802 0030 54FA80F4 		uxtab	r4, r4, r0
 11803              	.LVL1375:
5019:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11804              		.loc 1 5019 18 view .LVU3288
 11805 0034 64B2     		sxtb	r4, r4
 11806              	.LVL1376:
5020:Core/Src/bno055.c ****         {
 11807              		.loc 1 5020 9 is_stmt 1 view .LVU3289
5020:Core/Src/bno055.c ****         {
 11808              		.loc 1 5020 12 is_stmt 0 view .LVU3290
 11809 0036 54BB     		cbnz	r4, .L903
5023:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 11810              		.loc 1 5023 13 is_stmt 1 view .LVU3291
5023:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 11811              		.loc 1 5023 28 is_stmt 0 view .LVU3292
 11812 0038 BDF90800 		ldrsh	r0, [sp, #8]
 11813 003c FFF7FEFF 		bl	__aeabi_i2d
 11814              	.LVL1377:
 11815 0040 0022     		movs	r2, #0
 11816 0042 144B     		ldr	r3, .L906
 11817 0044 FFF7FEFF 		bl	__aeabi_ddiv
 11818              	.LVL1378:
5023:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 11819              		.loc 1 5023 26 view .LVU3293
 11820 0048 C5E90001 		strd	r0, [r5]
5024:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 11821              		.loc 1 5024 13 is_stmt 1 view .LVU3294
5024:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 11822              		.loc 1 5024 28 is_stmt 0 view .LVU3295
 11823 004c BDF90A00 		ldrsh	r0, [sp, #10]
 11824 0050 FFF7FEFF 		bl	__aeabi_i2d
 11825              	.LVL1379:
 11826 0054 0022     		movs	r2, #0
 11827 0056 0F4B     		ldr	r3, .L906
 11828 0058 FFF7FEFF 		bl	__aeabi_ddiv
 11829              	.LVL1380:
ARM GAS  /tmp/ccOloYeZ.s 			page 375


5024:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 11830              		.loc 1 5024 26 view .LVU3296
 11831 005c C5E90201 		strd	r0, [r5, #8]
5025:Core/Src/bno055.c ****         }
 11832              		.loc 1 5025 13 is_stmt 1 view .LVU3297
5025:Core/Src/bno055.c ****         }
 11833              		.loc 1 5025 28 is_stmt 0 view .LVU3298
 11834 0060 BDF90C00 		ldrsh	r0, [sp, #12]
 11835 0064 FFF7FEFF 		bl	__aeabi_i2d
 11836              	.LVL1381:
 11837 0068 0022     		movs	r2, #0
 11838 006a 0A4B     		ldr	r3, .L906
 11839 006c FFF7FEFF 		bl	__aeabi_ddiv
 11840              	.LVL1382:
5025:Core/Src/bno055.c ****         }
 11841              		.loc 1 5025 26 view .LVU3299
 11842 0070 C5E90401 		strd	r0, [r5, #16]
 11843              	.LVL1383:
 11844              	.L901:
5037:Core/Src/bno055.c **** }
 11845              		.loc 1 5037 5 is_stmt 1 view .LVU3300
5038:Core/Src/bno055.c **** 
 11846              		.loc 1 5038 1 is_stmt 0 view .LVU3301
 11847 0074 2046     		mov	r0, r4
 11848 0076 05B0     		add	sp, sp, #20
 11849              		.cfi_remember_state
 11850              		.cfi_def_cfa_offset 12
 11851              		@ sp needed
 11852 0078 30BD     		pop	{r4, r5, pc}
 11853              	.LVL1384:
 11854              	.L905:
 11855              		.cfi_restore_state
5014:Core/Src/bno055.c ****     }
 11856              		.loc 1 5014 9 is_stmt 1 view .LVU3302
5014:Core/Src/bno055.c ****     }
 11857              		.loc 1 5014 21 is_stmt 0 view .LVU3303
 11858 007a 0020     		movs	r0, #0
 11859 007c FFF7FEFF 		bl	bno055_set_accel_unit
 11860              	.LVL1385:
5014:Core/Src/bno055.c ****     }
 11861              		.loc 1 5014 18 view .LVU3304
 11862 0080 54FA80F4 		uxtab	r4, r4, r0
 11863              	.LVL1386:
5014:Core/Src/bno055.c ****     }
 11864              		.loc 1 5014 18 view .LVU3305
 11865 0084 64B2     		sxtb	r4, r4
 11866              	.LVL1387:
5014:Core/Src/bno055.c ****     }
 11867              		.loc 1 5014 18 view .LVU3306
 11868 0086 CFE7     		b	.L900
 11869              	.L902:
5034:Core/Src/bno055.c ****     }
 11870              		.loc 1 5034 18 view .LVU3307
 11871 0088 4FF0FF34 		mov	r4, #-1
 11872              	.LVL1388:
5034:Core/Src/bno055.c ****     }
 11873              		.loc 1 5034 18 view .LVU3308
ARM GAS  /tmp/ccOloYeZ.s 			page 376


 11874 008c F2E7     		b	.L901
 11875              	.LVL1389:
 11876              	.L903:
5029:Core/Src/bno055.c ****         }
 11877              		.loc 1 5029 22 view .LVU3309
 11878 008e 4FF0FF34 		mov	r4, #-1
 11879              	.LVL1390:
5029:Core/Src/bno055.c ****         }
 11880              		.loc 1 5029 22 view .LVU3310
 11881 0092 EFE7     		b	.L901
 11882              	.L907:
 11883              		.align	2
 11884              	.L906:
 11885 0094 00005940 		.word	1079574528
 11886              		.cfi_endproc
 11887              	.LFE85:
 11889              		.section	.text.bno055_convert_double_accel_xyz_mg,"ax",%progbits
 11890              		.align	1
 11891              		.global	bno055_convert_double_accel_xyz_mg
 11892              		.syntax unified
 11893              		.thumb
 11894              		.thumb_func
 11896              	bno055_convert_double_accel_xyz_mg:
 11897              	.LVL1391:
 11898              	.LFB86:
5059:Core/Src/bno055.c ****     /* Variable used to return value of
 11899              		.loc 1 5059 1 is_stmt 1 view -0
 11900              		.cfi_startproc
 11901              		@ args = 0, pretend = 0, frame = 16
 11902              		@ frame_needed = 0, uses_anonymous_args = 0
5059:Core/Src/bno055.c ****     /* Variable used to return value of
 11903              		.loc 1 5059 1 is_stmt 0 view .LVU3312
 11904 0000 30B5     		push	{r4, r5, lr}
 11905              		.cfi_def_cfa_offset 12
 11906              		.cfi_offset 4, -12
 11907              		.cfi_offset 5, -8
 11908              		.cfi_offset 14, -4
 11909 0002 85B0     		sub	sp, sp, #20
 11910              		.cfi_def_cfa_offset 32
 11911 0004 0546     		mov	r5, r0
5062:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
 11912              		.loc 1 5062 5 is_stmt 1 view .LVU3313
 11913              	.LVL1392:
5063:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11914              		.loc 1 5063 5 view .LVU3314
5063:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11915              		.loc 1 5063 27 is_stmt 0 view .LVU3315
 11916 0006 0023     		movs	r3, #0
 11917 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 11918 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 11919 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
5064:Core/Src/bno055.c **** 
 11920              		.loc 1 5064 5 is_stmt 1 view .LVU3316
5064:Core/Src/bno055.c **** 
 11921              		.loc 1 5064 8 is_stmt 0 view .LVU3317
 11922 0014 8DF80730 		strb	r3, [sp, #7]
5068:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
ARM GAS  /tmp/ccOloYeZ.s 			page 377


 11923              		.loc 1 5068 5 is_stmt 1 view .LVU3318
5068:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11924              		.loc 1 5068 16 is_stmt 0 view .LVU3319
 11925 0018 0DF10700 		add	r0, sp, #7
 11926              	.LVL1393:
5068:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11927              		.loc 1 5068 16 view .LVU3320
 11928 001c FFF7FEFF 		bl	bno055_get_accel_unit
 11929              	.LVL1394:
 11930 0020 0446     		mov	r4, r0
 11931              	.LVL1395:
5069:Core/Src/bno055.c ****     {
 11932              		.loc 1 5069 5 is_stmt 1 view .LVU3321
5069:Core/Src/bno055.c ****     {
 11933              		.loc 1 5069 23 is_stmt 0 view .LVU3322
 11934 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
5069:Core/Src/bno055.c ****     {
 11935              		.loc 1 5069 8 view .LVU3323
 11936 0026 012B     		cmp	r3, #1
 11937 0028 1CD1     		bne	.L914
 11938              	.L909:
5073:Core/Src/bno055.c ****     {
 11939              		.loc 1 5073 5 is_stmt 1 view .LVU3324
5073:Core/Src/bno055.c ****     {
 11940              		.loc 1 5073 8 is_stmt 0 view .LVU3325
 11941 002a 14BB     		cbnz	r4, .L911
5076:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11942              		.loc 1 5076 9 is_stmt 1 view .LVU3326
5076:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11943              		.loc 1 5076 21 is_stmt 0 view .LVU3327
 11944 002c 02A8     		add	r0, sp, #8
 11945 002e FFF7FEFF 		bl	bno055_read_accel_xyz
 11946              	.LVL1396:
5076:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11947              		.loc 1 5076 18 view .LVU3328
 11948 0032 54FA80F4 		uxtab	r4, r4, r0
 11949              	.LVL1397:
5076:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11950              		.loc 1 5076 18 view .LVU3329
 11951 0036 64B2     		sxtb	r4, r4
 11952              	.LVL1398:
5077:Core/Src/bno055.c ****         {
 11953              		.loc 1 5077 9 is_stmt 1 view .LVU3330
5077:Core/Src/bno055.c ****         {
 11954              		.loc 1 5077 12 is_stmt 0 view .LVU3331
 11955 0038 F4B9     		cbnz	r4, .L912
5080:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 11956              		.loc 1 5080 13 is_stmt 1 view .LVU3332
5080:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 11957              		.loc 1 5080 28 is_stmt 0 view .LVU3333
 11958 003a BDF90800 		ldrsh	r0, [sp, #8]
 11959 003e FFF7FEFF 		bl	__aeabi_i2d
 11960              	.LVL1399:
5080:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 11961              		.loc 1 5080 26 view .LVU3334
 11962 0042 C5E90001 		strd	r0, [r5]
5081:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
ARM GAS  /tmp/ccOloYeZ.s 			page 378


 11963              		.loc 1 5081 13 is_stmt 1 view .LVU3335
5081:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 11964              		.loc 1 5081 28 is_stmt 0 view .LVU3336
 11965 0046 BDF90A00 		ldrsh	r0, [sp, #10]
 11966 004a FFF7FEFF 		bl	__aeabi_i2d
 11967              	.LVL1400:
5081:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 11968              		.loc 1 5081 26 view .LVU3337
 11969 004e C5E90201 		strd	r0, [r5, #8]
5082:Core/Src/bno055.c ****         }
 11970              		.loc 1 5082 13 is_stmt 1 view .LVU3338
5082:Core/Src/bno055.c ****         }
 11971              		.loc 1 5082 28 is_stmt 0 view .LVU3339
 11972 0052 BDF90C00 		ldrsh	r0, [sp, #12]
 11973 0056 FFF7FEFF 		bl	__aeabi_i2d
 11974              	.LVL1401:
5082:Core/Src/bno055.c ****         }
 11975              		.loc 1 5082 26 view .LVU3340
 11976 005a C5E90401 		strd	r0, [r5, #16]
 11977              	.LVL1402:
 11978              	.L910:
5094:Core/Src/bno055.c **** }
 11979              		.loc 1 5094 5 is_stmt 1 view .LVU3341
5095:Core/Src/bno055.c **** 
 11980              		.loc 1 5095 1 is_stmt 0 view .LVU3342
 11981 005e 2046     		mov	r0, r4
 11982 0060 05B0     		add	sp, sp, #20
 11983              		.cfi_remember_state
 11984              		.cfi_def_cfa_offset 12
 11985              		@ sp needed
 11986 0062 30BD     		pop	{r4, r5, pc}
 11987              	.LVL1403:
 11988              	.L914:
 11989              		.cfi_restore_state
5071:Core/Src/bno055.c ****     }
 11990              		.loc 1 5071 9 is_stmt 1 view .LVU3343
5071:Core/Src/bno055.c ****     }
 11991              		.loc 1 5071 21 is_stmt 0 view .LVU3344
 11992 0064 0120     		movs	r0, #1
 11993 0066 FFF7FEFF 		bl	bno055_set_accel_unit
 11994              	.LVL1404:
5071:Core/Src/bno055.c ****     }
 11995              		.loc 1 5071 18 view .LVU3345
 11996 006a 54FA80F4 		uxtab	r4, r4, r0
 11997              	.LVL1405:
5071:Core/Src/bno055.c ****     }
 11998              		.loc 1 5071 18 view .LVU3346
 11999 006e 64B2     		sxtb	r4, r4
 12000              	.LVL1406:
5071:Core/Src/bno055.c ****     }
 12001              		.loc 1 5071 18 view .LVU3347
 12002 0070 DBE7     		b	.L909
 12003              	.L911:
5091:Core/Src/bno055.c ****     }
 12004              		.loc 1 5091 18 view .LVU3348
 12005 0072 4FF0FF34 		mov	r4, #-1
 12006              	.LVL1407:
ARM GAS  /tmp/ccOloYeZ.s 			page 379


5091:Core/Src/bno055.c ****     }
 12007              		.loc 1 5091 18 view .LVU3349
 12008 0076 F2E7     		b	.L910
 12009              	.LVL1408:
 12010              	.L912:
5086:Core/Src/bno055.c ****         }
 12011              		.loc 1 5086 22 view .LVU3350
 12012 0078 4FF0FF34 		mov	r4, #-1
 12013              	.LVL1409:
5086:Core/Src/bno055.c ****         }
 12014              		.loc 1 5086 22 view .LVU3351
 12015 007c EFE7     		b	.L910
 12016              		.cfi_endproc
 12017              	.LFE86:
 12019              		.section	.text.bno055_set_gyro_unit,"ax",%progbits
 12020              		.align	1
 12021              		.global	bno055_set_gyro_unit
 12022              		.syntax unified
 12023              		.thumb
 12024              		.thumb_func
 12026              	bno055_set_gyro_unit:
 12027              	.LVL1410:
 12028              	.LFB136:
7597:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 12029              		.loc 1 7597 1 is_stmt 1 view -0
 12030              		.cfi_startproc
 12031              		@ args = 0, pretend = 0, frame = 8
 12032              		@ frame_needed = 0, uses_anonymous_args = 0
7597:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 12033              		.loc 1 7597 1 is_stmt 0 view .LVU3353
 12034 0000 30B5     		push	{r4, r5, lr}
 12035              		.cfi_def_cfa_offset 12
 12036              		.cfi_offset 4, -12
 12037              		.cfi_offset 5, -8
 12038              		.cfi_offset 14, -4
 12039 0002 83B0     		sub	sp, sp, #12
 12040              		.cfi_def_cfa_offset 24
7598:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 12041              		.loc 1 7598 5 is_stmt 1 view .LVU3354
 12042              	.LVL1411:
7599:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 12043              		.loc 1 7599 5 view .LVU3355
7599:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 12044              		.loc 1 7599 8 is_stmt 0 view .LVU3356
 12045 0004 0023     		movs	r3, #0
 12046 0006 8DF80730 		strb	r3, [sp, #7]
7600:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 12047              		.loc 1 7600 5 is_stmt 1 view .LVU3357
7600:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 12048              		.loc 1 7600 8 is_stmt 0 view .LVU3358
 12049 000a 8DF80630 		strb	r3, [sp, #6]
7601:Core/Src/bno055.c **** 
 12050              		.loc 1 7601 5 is_stmt 1 view .LVU3359
 12051              	.LVL1412:
7604:Core/Src/bno055.c ****     {
 12052              		.loc 1 7604 5 view .LVU3360
7604:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 380


 12053              		.loc 1 7604 18 is_stmt 0 view .LVU3361
 12054 000e 254B     		ldr	r3, .L925
 12055 0010 1B68     		ldr	r3, [r3]
7604:Core/Src/bno055.c ****     {
 12056              		.loc 1 7604 8 view .LVU3362
 12057 0012 002B     		cmp	r3, #0
 12058 0014 43D0     		beq	.L919
 12059 0016 0546     		mov	r5, r0
7613:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 12060              		.loc 1 7613 9 is_stmt 1 view .LVU3363
7613:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 12061              		.loc 1 7613 19 is_stmt 0 view .LVU3364
 12062 0018 0DF10600 		add	r0, sp, #6
 12063              	.LVL1413:
7613:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 12064              		.loc 1 7613 19 view .LVU3365
 12065 001c FFF7FEFF 		bl	bno055_get_operation_mode
 12066              	.LVL1414:
7614:Core/Src/bno055.c ****         {
 12067              		.loc 1 7614 9 is_stmt 1 view .LVU3366
7614:Core/Src/bno055.c ****         {
 12068              		.loc 1 7614 12 is_stmt 0 view .LVU3367
 12069 0020 0446     		mov	r4, r0
 12070 0022 58BB     		cbnz	r0, .L920
7616:Core/Src/bno055.c ****             {
 12071              		.loc 1 7616 13 is_stmt 1 view .LVU3368
7616:Core/Src/bno055.c ****             {
 12072              		.loc 1 7616 32 is_stmt 0 view .LVU3369
 12073 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
7616:Core/Src/bno055.c ****             {
 12074              		.loc 1 7616 16 view .LVU3370
 12075 0028 13BB     		cbnz	r3, .L923
 12076              	.LVL1415:
 12077              	.L918:
7620:Core/Src/bno055.c ****             {
 12078              		.loc 1 7620 13 is_stmt 1 view .LVU3371
7620:Core/Src/bno055.c ****             {
 12079              		.loc 1 7620 16 is_stmt 0 view .LVU3372
 12080 002a 7CBB     		cbnz	r4, .L921
7623:Core/Src/bno055.c ****                                                           BNO055_GYRO_UNIT_REG,
 12081              		.loc 1 7623 17 is_stmt 1 view .LVU3373
7623:Core/Src/bno055.c ****                                                           BNO055_GYRO_UNIT_REG,
 12082              		.loc 1 7623 36 is_stmt 0 view .LVU3374
 12083 002c 1D4B     		ldr	r3, .L925
 12084 002e 1868     		ldr	r0, [r3]
 12085 0030 0469     		ldr	r4, [r0, #16]
 12086              	.LVL1416:
7623:Core/Src/bno055.c ****                                                           BNO055_GYRO_UNIT_REG,
 12087              		.loc 1 7623 28 view .LVU3375
 12088 0032 0123     		movs	r3, #1
 12089 0034 0DF10702 		add	r2, sp, #7
 12090 0038 3B21     		movs	r1, #59
 12091 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 12092 003c A047     		blx	r4
 12093              	.LVL1417:
7627:Core/Src/bno055.c ****                 {
 12094              		.loc 1 7627 17 is_stmt 1 view .LVU3376
ARM GAS  /tmp/ccOloYeZ.s 			page 381


7627:Core/Src/bno055.c ****                 {
 12095              		.loc 1 7627 20 is_stmt 0 view .LVU3377
 12096 003e 0446     		mov	r4, r0
 12097 0040 F0B9     		cbnz	r0, .L917
7629:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 12098              		.loc 1 7629 21 is_stmt 1 view .LVU3378
7629:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 12099              		.loc 1 7629 32 is_stmt 0 view .LVU3379
 12100 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 12101 0046 6800     		lsls	r0, r5, #1
 12102              	.LVL1418:
7629:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 12103              		.loc 1 7629 32 view .LVU3380
 12104 0048 00F00200 		and	r0, r0, #2
 12105 004c 23F00203 		bic	r3, r3, #2
 12106 0050 0343     		orrs	r3, r3, r0
7629:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 12107              		.loc 1 7629 30 view .LVU3381
 12108 0052 8DF80730 		strb	r3, [sp, #7]
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
 12109              		.loc 1 7630 21 is_stmt 1 view .LVU3382
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
 12110              		.loc 1 7630 41 is_stmt 0 view .LVU3383
 12111 0056 134B     		ldr	r3, .L925
 12112 0058 1868     		ldr	r0, [r3]
 12113 005a C568     		ldr	r5, [r0, #12]
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
 12114              		.loc 1 7630 33 view .LVU3384
 12115 005c 0123     		movs	r3, #1
 12116 005e 0DF10702 		add	r2, sp, #7
 12117 0062 3B21     		movs	r1, #59
 12118 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 12119 0066 A847     		blx	r5
 12120              	.LVL1419:
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
 12121              		.loc 1 7630 30 view .LVU3385
 12122 0068 54FA80F0 		uxtab	r0, r4, r0
 12123 006c 44B2     		sxtb	r4, r0
 12124              	.LVL1420:
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
 12125              		.loc 1 7630 30 view .LVU3386
 12126 006e 07E0     		b	.L917
 12127              	.LVL1421:
 12128              	.L923:
7618:Core/Src/bno055.c ****             }
 12129              		.loc 1 7618 17 is_stmt 1 view .LVU3387
7618:Core/Src/bno055.c ****             }
 12130              		.loc 1 7618 28 is_stmt 0 view .LVU3388
 12131 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 12132              	.LVL1422:
7618:Core/Src/bno055.c ****             }
 12133              		.loc 1 7618 25 view .LVU3389
 12134 0074 54FA80F4 		uxtab	r4, r4, r0
 12135 0078 64B2     		sxtb	r4, r4
 12136              	.LVL1423:
7618:Core/Src/bno055.c ****             }
 12137              		.loc 1 7618 25 view .LVU3390
ARM GAS  /tmp/ccOloYeZ.s 			page 382


 12138 007a D6E7     		b	.L918
 12139              	.LVL1424:
 12140              	.L920:
7643:Core/Src/bno055.c ****         }
 12141              		.loc 1 7643 22 view .LVU3391
 12142 007c 4FF0FF34 		mov	r4, #-1
 12143              	.LVL1425:
 12144              	.L917:
7646:Core/Src/bno055.c ****     {
 12145              		.loc 1 7646 5 is_stmt 1 view .LVU3392
7646:Core/Src/bno055.c ****     {
 12146              		.loc 1 7646 24 is_stmt 0 view .LVU3393
 12147 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
7646:Core/Src/bno055.c ****     {
 12148              		.loc 1 7646 8 view .LVU3394
 12149 0084 28B9     		cbnz	r0, .L924
 12150              	.LVL1426:
 12151              	.L916:
7654:Core/Src/bno055.c **** 
 12152              		.loc 1 7654 1 view .LVU3395
 12153 0086 2046     		mov	r0, r4
 12154 0088 03B0     		add	sp, sp, #12
 12155              		.cfi_remember_state
 12156              		.cfi_def_cfa_offset 12
 12157              		@ sp needed
 12158 008a 30BD     		pop	{r4, r5, pc}
 12159              	.LVL1427:
 12160              	.L921:
 12161              		.cfi_restore_state
7638:Core/Src/bno055.c ****             }
 12162              		.loc 1 7638 26 view .LVU3396
 12163 008c 4FF0FF34 		mov	r4, #-1
 12164              	.LVL1428:
7638:Core/Src/bno055.c ****             }
 12165              		.loc 1 7638 26 view .LVU3397
 12166 0090 F6E7     		b	.L917
 12167              	.LVL1429:
 12168              	.L924:
7650:Core/Src/bno055.c ****     }
 12169              		.loc 1 7650 9 is_stmt 1 view .LVU3398
7650:Core/Src/bno055.c ****     }
 12170              		.loc 1 7650 21 is_stmt 0 view .LVU3399
 12171 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 12172              	.LVL1430:
7650:Core/Src/bno055.c ****     }
 12173              		.loc 1 7650 18 view .LVU3400
 12174 0096 54FA80F0 		uxtab	r0, r4, r0
 12175 009a 44B2     		sxtb	r4, r0
 12176              	.LVL1431:
7650:Core/Src/bno055.c ****     }
 12177              		.loc 1 7650 18 view .LVU3401
 12178 009c F3E7     		b	.L916
 12179              	.LVL1432:
 12180              	.L919:
7606:Core/Src/bno055.c ****     }
 12181              		.loc 1 7606 16 view .LVU3402
 12182 009e 6FF07E04 		mvn	r4, #126
ARM GAS  /tmp/ccOloYeZ.s 			page 383


 12183 00a2 F0E7     		b	.L916
 12184              	.L926:
 12185              		.align	2
 12186              	.L925:
 12187 00a4 00000000 		.word	p_bno055
 12188              		.cfi_endproc
 12189              	.LFE136:
 12191              		.section	.text.bno055_convert_float_gyro_x_dps,"ax",%progbits
 12192              		.align	1
 12193              		.global	bno055_convert_float_gyro_x_dps
 12194              		.syntax unified
 12195              		.thumb
 12196              		.thumb_func
 12198              	bno055_convert_float_gyro_x_dps:
 12199              	.LVL1433:
 12200              	.LFB53:
3452:Core/Src/bno055.c ****     /* Variable used to return value of
 12201              		.loc 1 3452 1 is_stmt 1 view -0
 12202              		.cfi_startproc
 12203              		@ args = 0, pretend = 0, frame = 8
 12204              		@ frame_needed = 0, uses_anonymous_args = 0
3452:Core/Src/bno055.c ****     /* Variable used to return value of
 12205              		.loc 1 3452 1 is_stmt 0 view .LVU3404
 12206 0000 30B5     		push	{r4, r5, lr}
 12207              		.cfi_def_cfa_offset 12
 12208              		.cfi_offset 4, -12
 12209              		.cfi_offset 5, -8
 12210              		.cfi_offset 14, -4
 12211 0002 83B0     		sub	sp, sp, #12
 12212              		.cfi_def_cfa_offset 24
 12213 0004 0546     		mov	r5, r0
3455:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
 12214              		.loc 1 3455 5 is_stmt 1 view .LVU3405
 12215              	.LVL1434:
3456:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12216              		.loc 1 3456 5 view .LVU3406
3456:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12217              		.loc 1 3456 9 is_stmt 0 view .LVU3407
 12218 0006 0023     		movs	r3, #0
 12219 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3457:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 12220              		.loc 1 3457 5 is_stmt 1 view .LVU3408
 12221              	.LVL1435:
3458:Core/Src/bno055.c **** 
 12222              		.loc 1 3458 5 view .LVU3409
3458:Core/Src/bno055.c **** 
 12223              		.loc 1 3458 8 is_stmt 0 view .LVU3410
 12224 000c 8DF80530 		strb	r3, [sp, #5]
3462:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12225              		.loc 1 3462 5 is_stmt 1 view .LVU3411
3462:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12226              		.loc 1 3462 16 is_stmt 0 view .LVU3412
 12227 0010 0DF10500 		add	r0, sp, #5
 12228              	.LVL1436:
3462:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12229              		.loc 1 3462 16 view .LVU3413
 12230 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
ARM GAS  /tmp/ccOloYeZ.s 			page 384


 12231              	.LVL1437:
 12232 0018 0446     		mov	r4, r0
 12233              	.LVL1438:
3463:Core/Src/bno055.c ****     {
 12234              		.loc 1 3463 5 is_stmt 1 view .LVU3414
3463:Core/Src/bno055.c ****     {
 12235              		.loc 1 3463 22 is_stmt 0 view .LVU3415
 12236 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3463:Core/Src/bno055.c ****     {
 12237              		.loc 1 3463 8 view .LVU3416
 12238 001e B3B9     		cbnz	r3, .L933
 12239              	.L928:
3467:Core/Src/bno055.c ****     {
 12240              		.loc 1 3467 5 is_stmt 1 view .LVU3417
3467:Core/Src/bno055.c ****     {
 12241              		.loc 1 3467 8 is_stmt 0 view .LVU3418
 12242 0020 E4B9     		cbnz	r4, .L930
3470:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12243              		.loc 1 3470 9 is_stmt 1 view .LVU3419
3470:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12244              		.loc 1 3470 21 is_stmt 0 view .LVU3420
 12245 0022 0DF10600 		add	r0, sp, #6
 12246 0026 FFF7FEFF 		bl	bno055_read_gyro_x
 12247              	.LVL1439:
3470:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12248              		.loc 1 3470 18 view .LVU3421
 12249 002a 54FA80F4 		uxtab	r4, r4, r0
 12250              	.LVL1440:
3470:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12251              		.loc 1 3470 18 view .LVU3422
 12252 002e 64B2     		sxtb	r4, r4
 12253              	.LVL1441:
3471:Core/Src/bno055.c ****         {
 12254              		.loc 1 3471 9 is_stmt 1 view .LVU3423
3471:Core/Src/bno055.c ****         {
 12255              		.loc 1 3471 12 is_stmt 0 view .LVU3424
 12256 0030 BCB9     		cbnz	r4, .L931
3474:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12257              		.loc 1 3474 13 is_stmt 1 view .LVU3425
3474:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12258              		.loc 1 3474 45 is_stmt 0 view .LVU3426
 12259 0032 BDF90600 		ldrsh	r0, [sp, #6]
 12260 0036 FFF7FEFF 		bl	__aeabi_i2d
 12261              	.LVL1442:
 12262 003a 0022     		movs	r2, #0
 12263 003c 0A4B     		ldr	r3, .L934
 12264 003e FFF7FEFF 		bl	__aeabi_dmul
 12265              	.LVL1443:
3474:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12266              		.loc 1 3474 20 view .LVU3427
 12267 0042 FFF7FEFF 		bl	__aeabi_d2f
 12268              	.LVL1444:
3475:Core/Src/bno055.c ****         }
 12269              		.loc 1 3475 13 is_stmt 1 view .LVU3428
3475:Core/Src/bno055.c ****         }
 12270              		.loc 1 3475 23 is_stmt 0 view .LVU3429
 12271 0046 2860     		str	r0, [r5]	@ float
ARM GAS  /tmp/ccOloYeZ.s 			page 385


 12272              	.LVL1445:
 12273              	.L929:
3487:Core/Src/bno055.c **** }
 12274              		.loc 1 3487 5 is_stmt 1 view .LVU3430
3488:Core/Src/bno055.c **** 
 12275              		.loc 1 3488 1 is_stmt 0 view .LVU3431
 12276 0048 2046     		mov	r0, r4
 12277 004a 03B0     		add	sp, sp, #12
 12278              		.cfi_remember_state
 12279              		.cfi_def_cfa_offset 12
 12280              		@ sp needed
 12281 004c 30BD     		pop	{r4, r5, pc}
 12282              	.LVL1446:
 12283              	.L933:
 12284              		.cfi_restore_state
3465:Core/Src/bno055.c ****     }
 12285              		.loc 1 3465 9 is_stmt 1 view .LVU3432
3465:Core/Src/bno055.c ****     }
 12286              		.loc 1 3465 21 is_stmt 0 view .LVU3433
 12287 004e 0020     		movs	r0, #0
 12288 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 12289              	.LVL1447:
3465:Core/Src/bno055.c ****     }
 12290              		.loc 1 3465 18 view .LVU3434
 12291 0054 54FA80F4 		uxtab	r4, r4, r0
 12292              	.LVL1448:
3465:Core/Src/bno055.c ****     }
 12293              		.loc 1 3465 18 view .LVU3435
 12294 0058 64B2     		sxtb	r4, r4
 12295              	.LVL1449:
3465:Core/Src/bno055.c ****     }
 12296              		.loc 1 3465 18 view .LVU3436
 12297 005a E1E7     		b	.L928
 12298              	.L930:
3484:Core/Src/bno055.c ****     }
 12299              		.loc 1 3484 18 view .LVU3437
 12300 005c 4FF0FF34 		mov	r4, #-1
 12301              	.LVL1450:
3484:Core/Src/bno055.c ****     }
 12302              		.loc 1 3484 18 view .LVU3438
 12303 0060 F2E7     		b	.L929
 12304              	.LVL1451:
 12305              	.L931:
3479:Core/Src/bno055.c ****         }
 12306              		.loc 1 3479 22 view .LVU3439
 12307 0062 4FF0FF34 		mov	r4, #-1
 12308              	.LVL1452:
3479:Core/Src/bno055.c ****         }
 12309              		.loc 1 3479 22 view .LVU3440
 12310 0066 EFE7     		b	.L929
 12311              	.L935:
 12312              		.align	2
 12313              	.L934:
 12314 0068 0000B03F 		.word	1068498944
 12315              		.cfi_endproc
 12316              	.LFE53:
 12318              		.section	.text.bno055_convert_float_gyro_x_rps,"ax",%progbits
ARM GAS  /tmp/ccOloYeZ.s 			page 386


 12319              		.align	1
 12320              		.global	bno055_convert_float_gyro_x_rps
 12321              		.syntax unified
 12322              		.thumb
 12323              		.thumb_func
 12325              	bno055_convert_float_gyro_x_rps:
 12326              	.LVL1453:
 12327              	.LFB54:
3504:Core/Src/bno055.c ****     /* Variable used to return value of
 12328              		.loc 1 3504 1 is_stmt 1 view -0
 12329              		.cfi_startproc
 12330              		@ args = 0, pretend = 0, frame = 8
 12331              		@ frame_needed = 0, uses_anonymous_args = 0
3504:Core/Src/bno055.c ****     /* Variable used to return value of
 12332              		.loc 1 3504 1 is_stmt 0 view .LVU3442
 12333 0000 30B5     		push	{r4, r5, lr}
 12334              		.cfi_def_cfa_offset 12
 12335              		.cfi_offset 4, -12
 12336              		.cfi_offset 5, -8
 12337              		.cfi_offset 14, -4
 12338 0002 83B0     		sub	sp, sp, #12
 12339              		.cfi_def_cfa_offset 24
 12340 0004 0546     		mov	r5, r0
3507:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
 12341              		.loc 1 3507 5 is_stmt 1 view .LVU3443
 12342              	.LVL1454:
3508:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12343              		.loc 1 3508 5 view .LVU3444
3508:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12344              		.loc 1 3508 9 is_stmt 0 view .LVU3445
 12345 0006 0023     		movs	r3, #0
 12346 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3509:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 12347              		.loc 1 3509 5 is_stmt 1 view .LVU3446
 12348              	.LVL1455:
3510:Core/Src/bno055.c **** 
 12349              		.loc 1 3510 5 view .LVU3447
3510:Core/Src/bno055.c **** 
 12350              		.loc 1 3510 8 is_stmt 0 view .LVU3448
 12351 000c 8DF80530 		strb	r3, [sp, #5]
3514:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 12352              		.loc 1 3514 5 is_stmt 1 view .LVU3449
3514:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 12353              		.loc 1 3514 16 is_stmt 0 view .LVU3450
 12354 0010 0DF10500 		add	r0, sp, #5
 12355              	.LVL1456:
3514:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 12356              		.loc 1 3514 16 view .LVU3451
 12357 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 12358              	.LVL1457:
 12359 0018 0446     		mov	r4, r0
 12360              	.LVL1458:
3515:Core/Src/bno055.c ****     {
 12361              		.loc 1 3515 5 is_stmt 1 view .LVU3452
3515:Core/Src/bno055.c ****     {
 12362              		.loc 1 3515 22 is_stmt 0 view .LVU3453
 12363 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
ARM GAS  /tmp/ccOloYeZ.s 			page 387


3515:Core/Src/bno055.c ****     {
 12364              		.loc 1 3515 8 view .LVU3454
 12365 001e 012B     		cmp	r3, #1
 12366 0020 16D1     		bne	.L942
 12367              	.L937:
3519:Core/Src/bno055.c ****     {
 12368              		.loc 1 3519 5 is_stmt 1 view .LVU3455
3519:Core/Src/bno055.c ****     {
 12369              		.loc 1 3519 8 is_stmt 0 view .LVU3456
 12370 0022 E4B9     		cbnz	r4, .L939
3522:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12371              		.loc 1 3522 9 is_stmt 1 view .LVU3457
3522:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12372              		.loc 1 3522 21 is_stmt 0 view .LVU3458
 12373 0024 0DF10600 		add	r0, sp, #6
 12374 0028 FFF7FEFF 		bl	bno055_read_gyro_x
 12375              	.LVL1459:
3522:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12376              		.loc 1 3522 18 view .LVU3459
 12377 002c 54FA80F4 		uxtab	r4, r4, r0
 12378              	.LVL1460:
3522:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12379              		.loc 1 3522 18 view .LVU3460
 12380 0030 64B2     		sxtb	r4, r4
 12381              	.LVL1461:
3523:Core/Src/bno055.c ****         {
 12382              		.loc 1 3523 9 is_stmt 1 view .LVU3461
3523:Core/Src/bno055.c ****         {
 12383              		.loc 1 3523 12 is_stmt 0 view .LVU3462
 12384 0032 BCB9     		cbnz	r4, .L940
3526:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12385              		.loc 1 3526 13 is_stmt 1 view .LVU3463
3526:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12386              		.loc 1 3526 45 is_stmt 0 view .LVU3464
 12387 0034 BDF90600 		ldrsh	r0, [sp, #6]
 12388 0038 FFF7FEFF 		bl	__aeabi_i2d
 12389              	.LVL1462:
 12390 003c 0022     		movs	r2, #0
 12391 003e 0B4B     		ldr	r3, .L943
 12392 0040 FFF7FEFF 		bl	__aeabi_ddiv
 12393              	.LVL1463:
3526:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12394              		.loc 1 3526 20 view .LVU3465
 12395 0044 FFF7FEFF 		bl	__aeabi_d2f
 12396              	.LVL1464:
3527:Core/Src/bno055.c ****         }
 12397              		.loc 1 3527 13 is_stmt 1 view .LVU3466
3527:Core/Src/bno055.c ****         }
 12398              		.loc 1 3527 23 is_stmt 0 view .LVU3467
 12399 0048 2860     		str	r0, [r5]	@ float
 12400              	.LVL1465:
 12401              	.L938:
3539:Core/Src/bno055.c **** }
 12402              		.loc 1 3539 5 is_stmt 1 view .LVU3468
3540:Core/Src/bno055.c **** 
 12403              		.loc 1 3540 1 is_stmt 0 view .LVU3469
 12404 004a 2046     		mov	r0, r4
ARM GAS  /tmp/ccOloYeZ.s 			page 388


 12405 004c 03B0     		add	sp, sp, #12
 12406              		.cfi_remember_state
 12407              		.cfi_def_cfa_offset 12
 12408              		@ sp needed
 12409 004e 30BD     		pop	{r4, r5, pc}
 12410              	.LVL1466:
 12411              	.L942:
 12412              		.cfi_restore_state
3517:Core/Src/bno055.c ****     }
 12413              		.loc 1 3517 9 is_stmt 1 view .LVU3470
3517:Core/Src/bno055.c ****     }
 12414              		.loc 1 3517 21 is_stmt 0 view .LVU3471
 12415 0050 0120     		movs	r0, #1
 12416 0052 FFF7FEFF 		bl	bno055_set_gyro_unit
 12417              	.LVL1467:
3517:Core/Src/bno055.c ****     }
 12418              		.loc 1 3517 18 view .LVU3472
 12419 0056 54FA80F4 		uxtab	r4, r4, r0
 12420              	.LVL1468:
3517:Core/Src/bno055.c ****     }
 12421              		.loc 1 3517 18 view .LVU3473
 12422 005a 64B2     		sxtb	r4, r4
 12423              	.LVL1469:
3517:Core/Src/bno055.c ****     }
 12424              		.loc 1 3517 18 view .LVU3474
 12425 005c E1E7     		b	.L937
 12426              	.L939:
3536:Core/Src/bno055.c ****     }
 12427              		.loc 1 3536 18 view .LVU3475
 12428 005e 4FF0FF34 		mov	r4, #-1
 12429              	.LVL1470:
3536:Core/Src/bno055.c ****     }
 12430              		.loc 1 3536 18 view .LVU3476
 12431 0062 F2E7     		b	.L938
 12432              	.LVL1471:
 12433              	.L940:
3531:Core/Src/bno055.c ****         }
 12434              		.loc 1 3531 22 view .LVU3477
 12435 0064 4FF0FF34 		mov	r4, #-1
 12436              	.LVL1472:
3531:Core/Src/bno055.c ****         }
 12437              		.loc 1 3531 22 view .LVU3478
 12438 0068 EFE7     		b	.L938
 12439              	.L944:
 12440 006a 00BF     		.align	2
 12441              	.L943:
 12442 006c 00208C40 		.word	1082925056
 12443              		.cfi_endproc
 12444              	.LFE54:
 12446              		.section	.text.bno055_convert_float_gyro_y_dps,"ax",%progbits
 12447              		.align	1
 12448              		.global	bno055_convert_float_gyro_y_dps
 12449              		.syntax unified
 12450              		.thumb
 12451              		.thumb_func
 12453              	bno055_convert_float_gyro_y_dps:
 12454              	.LVL1473:
ARM GAS  /tmp/ccOloYeZ.s 			page 389


 12455              	.LFB55:
3556:Core/Src/bno055.c ****     /* Variable used to return value of
 12456              		.loc 1 3556 1 is_stmt 1 view -0
 12457              		.cfi_startproc
 12458              		@ args = 0, pretend = 0, frame = 8
 12459              		@ frame_needed = 0, uses_anonymous_args = 0
3556:Core/Src/bno055.c ****     /* Variable used to return value of
 12460              		.loc 1 3556 1 is_stmt 0 view .LVU3480
 12461 0000 30B5     		push	{r4, r5, lr}
 12462              		.cfi_def_cfa_offset 12
 12463              		.cfi_offset 4, -12
 12464              		.cfi_offset 5, -8
 12465              		.cfi_offset 14, -4
 12466 0002 83B0     		sub	sp, sp, #12
 12467              		.cfi_def_cfa_offset 24
 12468 0004 0546     		mov	r5, r0
3559:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
 12469              		.loc 1 3559 5 is_stmt 1 view .LVU3481
 12470              	.LVL1474:
3560:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12471              		.loc 1 3560 5 view .LVU3482
3560:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12472              		.loc 1 3560 9 is_stmt 0 view .LVU3483
 12473 0006 0023     		movs	r3, #0
 12474 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3561:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 12475              		.loc 1 3561 5 is_stmt 1 view .LVU3484
 12476              	.LVL1475:
3562:Core/Src/bno055.c **** 
 12477              		.loc 1 3562 5 view .LVU3485
3562:Core/Src/bno055.c **** 
 12478              		.loc 1 3562 8 is_stmt 0 view .LVU3486
 12479 000c 8DF80530 		strb	r3, [sp, #5]
3566:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12480              		.loc 1 3566 5 is_stmt 1 view .LVU3487
3566:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12481              		.loc 1 3566 16 is_stmt 0 view .LVU3488
 12482 0010 0DF10500 		add	r0, sp, #5
 12483              	.LVL1476:
3566:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12484              		.loc 1 3566 16 view .LVU3489
 12485 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 12486              	.LVL1477:
 12487 0018 0446     		mov	r4, r0
 12488              	.LVL1478:
3567:Core/Src/bno055.c ****     {
 12489              		.loc 1 3567 5 is_stmt 1 view .LVU3490
3567:Core/Src/bno055.c ****     {
 12490              		.loc 1 3567 22 is_stmt 0 view .LVU3491
 12491 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3567:Core/Src/bno055.c ****     {
 12492              		.loc 1 3567 8 view .LVU3492
 12493 001e B3B9     		cbnz	r3, .L951
 12494              	.L946:
3571:Core/Src/bno055.c ****     {
 12495              		.loc 1 3571 5 is_stmt 1 view .LVU3493
3571:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 390


 12496              		.loc 1 3571 8 is_stmt 0 view .LVU3494
 12497 0020 E4B9     		cbnz	r4, .L948
3574:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12498              		.loc 1 3574 9 is_stmt 1 view .LVU3495
3574:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12499              		.loc 1 3574 21 is_stmt 0 view .LVU3496
 12500 0022 0DF10600 		add	r0, sp, #6
 12501 0026 FFF7FEFF 		bl	bno055_read_gyro_y
 12502              	.LVL1479:
3574:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12503              		.loc 1 3574 18 view .LVU3497
 12504 002a 54FA80F4 		uxtab	r4, r4, r0
 12505              	.LVL1480:
3574:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12506              		.loc 1 3574 18 view .LVU3498
 12507 002e 64B2     		sxtb	r4, r4
 12508              	.LVL1481:
3575:Core/Src/bno055.c ****         {
 12509              		.loc 1 3575 9 is_stmt 1 view .LVU3499
3575:Core/Src/bno055.c ****         {
 12510              		.loc 1 3575 12 is_stmt 0 view .LVU3500
 12511 0030 BCB9     		cbnz	r4, .L949
3578:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 12512              		.loc 1 3578 13 is_stmt 1 view .LVU3501
3578:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 12513              		.loc 1 3578 45 is_stmt 0 view .LVU3502
 12514 0032 BDF90600 		ldrsh	r0, [sp, #6]
 12515 0036 FFF7FEFF 		bl	__aeabi_i2d
 12516              	.LVL1482:
 12517 003a 0022     		movs	r2, #0
 12518 003c 0A4B     		ldr	r3, .L952
 12519 003e FFF7FEFF 		bl	__aeabi_dmul
 12520              	.LVL1483:
3578:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 12521              		.loc 1 3578 20 view .LVU3503
 12522 0042 FFF7FEFF 		bl	__aeabi_d2f
 12523              	.LVL1484:
3579:Core/Src/bno055.c ****         }
 12524              		.loc 1 3579 13 is_stmt 1 view .LVU3504
3579:Core/Src/bno055.c ****         }
 12525              		.loc 1 3579 23 is_stmt 0 view .LVU3505
 12526 0046 2860     		str	r0, [r5]	@ float
 12527              	.LVL1485:
 12528              	.L947:
3591:Core/Src/bno055.c **** }
 12529              		.loc 1 3591 5 is_stmt 1 view .LVU3506
3592:Core/Src/bno055.c **** 
 12530              		.loc 1 3592 1 is_stmt 0 view .LVU3507
 12531 0048 2046     		mov	r0, r4
 12532 004a 03B0     		add	sp, sp, #12
 12533              		.cfi_remember_state
 12534              		.cfi_def_cfa_offset 12
 12535              		@ sp needed
 12536 004c 30BD     		pop	{r4, r5, pc}
 12537              	.LVL1486:
 12538              	.L951:
 12539              		.cfi_restore_state
ARM GAS  /tmp/ccOloYeZ.s 			page 391


3569:Core/Src/bno055.c ****     }
 12540              		.loc 1 3569 9 is_stmt 1 view .LVU3508
3569:Core/Src/bno055.c ****     }
 12541              		.loc 1 3569 21 is_stmt 0 view .LVU3509
 12542 004e 0020     		movs	r0, #0
 12543 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 12544              	.LVL1487:
3569:Core/Src/bno055.c ****     }
 12545              		.loc 1 3569 18 view .LVU3510
 12546 0054 54FA80F4 		uxtab	r4, r4, r0
 12547              	.LVL1488:
3569:Core/Src/bno055.c ****     }
 12548              		.loc 1 3569 18 view .LVU3511
 12549 0058 64B2     		sxtb	r4, r4
 12550              	.LVL1489:
3569:Core/Src/bno055.c ****     }
 12551              		.loc 1 3569 18 view .LVU3512
 12552 005a E1E7     		b	.L946
 12553              	.L948:
3588:Core/Src/bno055.c ****     }
 12554              		.loc 1 3588 18 view .LVU3513
 12555 005c 4FF0FF34 		mov	r4, #-1
 12556              	.LVL1490:
3588:Core/Src/bno055.c ****     }
 12557              		.loc 1 3588 18 view .LVU3514
 12558 0060 F2E7     		b	.L947
 12559              	.LVL1491:
 12560              	.L949:
3583:Core/Src/bno055.c ****         }
 12561              		.loc 1 3583 22 view .LVU3515
 12562 0062 4FF0FF34 		mov	r4, #-1
 12563              	.LVL1492:
3583:Core/Src/bno055.c ****         }
 12564              		.loc 1 3583 22 view .LVU3516
 12565 0066 EFE7     		b	.L947
 12566              	.L953:
 12567              		.align	2
 12568              	.L952:
 12569 0068 0000B03F 		.word	1068498944
 12570              		.cfi_endproc
 12571              	.LFE55:
 12573              		.section	.text.bno055_convert_float_gyro_y_rps,"ax",%progbits
 12574              		.align	1
 12575              		.global	bno055_convert_float_gyro_y_rps
 12576              		.syntax unified
 12577              		.thumb
 12578              		.thumb_func
 12580              	bno055_convert_float_gyro_y_rps:
 12581              	.LVL1493:
 12582              	.LFB56:
3609:Core/Src/bno055.c ****     /* Variable used to return value of
 12583              		.loc 1 3609 1 is_stmt 1 view -0
 12584              		.cfi_startproc
 12585              		@ args = 0, pretend = 0, frame = 8
 12586              		@ frame_needed = 0, uses_anonymous_args = 0
3609:Core/Src/bno055.c ****     /* Variable used to return value of
 12587              		.loc 1 3609 1 is_stmt 0 view .LVU3518
ARM GAS  /tmp/ccOloYeZ.s 			page 392


 12588 0000 30B5     		push	{r4, r5, lr}
 12589              		.cfi_def_cfa_offset 12
 12590              		.cfi_offset 4, -12
 12591              		.cfi_offset 5, -8
 12592              		.cfi_offset 14, -4
 12593 0002 83B0     		sub	sp, sp, #12
 12594              		.cfi_def_cfa_offset 24
 12595 0004 0546     		mov	r5, r0
3612:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
 12596              		.loc 1 3612 5 is_stmt 1 view .LVU3519
 12597              	.LVL1494:
3613:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12598              		.loc 1 3613 5 view .LVU3520
3613:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12599              		.loc 1 3613 9 is_stmt 0 view .LVU3521
 12600 0006 0023     		movs	r3, #0
 12601 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3614:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 12602              		.loc 1 3614 5 is_stmt 1 view .LVU3522
 12603              	.LVL1495:
3615:Core/Src/bno055.c **** 
 12604              		.loc 1 3615 5 view .LVU3523
3615:Core/Src/bno055.c **** 
 12605              		.loc 1 3615 8 is_stmt 0 view .LVU3524
 12606 000c 8DF80530 		strb	r3, [sp, #5]
3619:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 12607              		.loc 1 3619 5 is_stmt 1 view .LVU3525
3619:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 12608              		.loc 1 3619 16 is_stmt 0 view .LVU3526
 12609 0010 0DF10500 		add	r0, sp, #5
 12610              	.LVL1496:
3619:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 12611              		.loc 1 3619 16 view .LVU3527
 12612 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 12613              	.LVL1497:
 12614 0018 0446     		mov	r4, r0
 12615              	.LVL1498:
3620:Core/Src/bno055.c ****     {
 12616              		.loc 1 3620 5 is_stmt 1 view .LVU3528
3620:Core/Src/bno055.c ****     {
 12617              		.loc 1 3620 22 is_stmt 0 view .LVU3529
 12618 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3620:Core/Src/bno055.c ****     {
 12619              		.loc 1 3620 8 view .LVU3530
 12620 001e 012B     		cmp	r3, #1
 12621 0020 16D1     		bne	.L960
 12622              	.L955:
3624:Core/Src/bno055.c ****     {
 12623              		.loc 1 3624 5 is_stmt 1 view .LVU3531
3624:Core/Src/bno055.c ****     {
 12624              		.loc 1 3624 8 is_stmt 0 view .LVU3532
 12625 0022 E4B9     		cbnz	r4, .L957
3627:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12626              		.loc 1 3627 9 is_stmt 1 view .LVU3533
3627:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12627              		.loc 1 3627 21 is_stmt 0 view .LVU3534
 12628 0024 0DF10600 		add	r0, sp, #6
ARM GAS  /tmp/ccOloYeZ.s 			page 393


 12629 0028 FFF7FEFF 		bl	bno055_read_gyro_y
 12630              	.LVL1499:
3627:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12631              		.loc 1 3627 18 view .LVU3535
 12632 002c 54FA80F4 		uxtab	r4, r4, r0
 12633              	.LVL1500:
3627:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12634              		.loc 1 3627 18 view .LVU3536
 12635 0030 64B2     		sxtb	r4, r4
 12636              	.LVL1501:
3628:Core/Src/bno055.c ****         {
 12637              		.loc 1 3628 9 is_stmt 1 view .LVU3537
3628:Core/Src/bno055.c ****         {
 12638              		.loc 1 3628 12 is_stmt 0 view .LVU3538
 12639 0032 BCB9     		cbnz	r4, .L958
3631:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 12640              		.loc 1 3631 13 is_stmt 1 view .LVU3539
3631:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 12641              		.loc 1 3631 45 is_stmt 0 view .LVU3540
 12642 0034 BDF90600 		ldrsh	r0, [sp, #6]
 12643 0038 FFF7FEFF 		bl	__aeabi_i2d
 12644              	.LVL1502:
 12645 003c 0022     		movs	r2, #0
 12646 003e 0B4B     		ldr	r3, .L961
 12647 0040 FFF7FEFF 		bl	__aeabi_ddiv
 12648              	.LVL1503:
3631:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 12649              		.loc 1 3631 20 view .LVU3541
 12650 0044 FFF7FEFF 		bl	__aeabi_d2f
 12651              	.LVL1504:
3632:Core/Src/bno055.c ****         }
 12652              		.loc 1 3632 13 is_stmt 1 view .LVU3542
3632:Core/Src/bno055.c ****         }
 12653              		.loc 1 3632 23 is_stmt 0 view .LVU3543
 12654 0048 2860     		str	r0, [r5]	@ float
 12655              	.LVL1505:
 12656              	.L956:
3644:Core/Src/bno055.c **** }
 12657              		.loc 1 3644 5 is_stmt 1 view .LVU3544
3645:Core/Src/bno055.c **** 
 12658              		.loc 1 3645 1 is_stmt 0 view .LVU3545
 12659 004a 2046     		mov	r0, r4
 12660 004c 03B0     		add	sp, sp, #12
 12661              		.cfi_remember_state
 12662              		.cfi_def_cfa_offset 12
 12663              		@ sp needed
 12664 004e 30BD     		pop	{r4, r5, pc}
 12665              	.LVL1506:
 12666              	.L960:
 12667              		.cfi_restore_state
3622:Core/Src/bno055.c ****     }
 12668              		.loc 1 3622 9 is_stmt 1 view .LVU3546
3622:Core/Src/bno055.c ****     }
 12669              		.loc 1 3622 21 is_stmt 0 view .LVU3547
 12670 0050 0120     		movs	r0, #1
 12671 0052 FFF7FEFF 		bl	bno055_set_gyro_unit
 12672              	.LVL1507:
ARM GAS  /tmp/ccOloYeZ.s 			page 394


3622:Core/Src/bno055.c ****     }
 12673              		.loc 1 3622 18 view .LVU3548
 12674 0056 54FA80F4 		uxtab	r4, r4, r0
 12675              	.LVL1508:
3622:Core/Src/bno055.c ****     }
 12676              		.loc 1 3622 18 view .LVU3549
 12677 005a 64B2     		sxtb	r4, r4
 12678              	.LVL1509:
3622:Core/Src/bno055.c ****     }
 12679              		.loc 1 3622 18 view .LVU3550
 12680 005c E1E7     		b	.L955
 12681              	.L957:
3641:Core/Src/bno055.c ****     }
 12682              		.loc 1 3641 18 view .LVU3551
 12683 005e 4FF0FF34 		mov	r4, #-1
 12684              	.LVL1510:
3641:Core/Src/bno055.c ****     }
 12685              		.loc 1 3641 18 view .LVU3552
 12686 0062 F2E7     		b	.L956
 12687              	.LVL1511:
 12688              	.L958:
3636:Core/Src/bno055.c ****         }
 12689              		.loc 1 3636 22 view .LVU3553
 12690 0064 4FF0FF34 		mov	r4, #-1
 12691              	.LVL1512:
3636:Core/Src/bno055.c ****         }
 12692              		.loc 1 3636 22 view .LVU3554
 12693 0068 EFE7     		b	.L956
 12694              	.L962:
 12695 006a 00BF     		.align	2
 12696              	.L961:
 12697 006c 00208C40 		.word	1082925056
 12698              		.cfi_endproc
 12699              	.LFE56:
 12701              		.section	.text.bno055_convert_float_gyro_z_dps,"ax",%progbits
 12702              		.align	1
 12703              		.global	bno055_convert_float_gyro_z_dps
 12704              		.syntax unified
 12705              		.thumb
 12706              		.thumb_func
 12708              	bno055_convert_float_gyro_z_dps:
 12709              	.LVL1513:
 12710              	.LFB57:
3661:Core/Src/bno055.c ****     /* Variable used to return value of
 12711              		.loc 1 3661 1 is_stmt 1 view -0
 12712              		.cfi_startproc
 12713              		@ args = 0, pretend = 0, frame = 8
 12714              		@ frame_needed = 0, uses_anonymous_args = 0
3661:Core/Src/bno055.c ****     /* Variable used to return value of
 12715              		.loc 1 3661 1 is_stmt 0 view .LVU3556
 12716 0000 30B5     		push	{r4, r5, lr}
 12717              		.cfi_def_cfa_offset 12
 12718              		.cfi_offset 4, -12
 12719              		.cfi_offset 5, -8
 12720              		.cfi_offset 14, -4
 12721 0002 83B0     		sub	sp, sp, #12
 12722              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccOloYeZ.s 			page 395


 12723 0004 0546     		mov	r5, r0
3664:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
 12724              		.loc 1 3664 5 is_stmt 1 view .LVU3557
 12725              	.LVL1514:
3665:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12726              		.loc 1 3665 5 view .LVU3558
3665:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12727              		.loc 1 3665 9 is_stmt 0 view .LVU3559
 12728 0006 0023     		movs	r3, #0
 12729 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3666:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 12730              		.loc 1 3666 5 is_stmt 1 view .LVU3560
 12731              	.LVL1515:
3667:Core/Src/bno055.c **** 
 12732              		.loc 1 3667 5 view .LVU3561
3667:Core/Src/bno055.c **** 
 12733              		.loc 1 3667 8 is_stmt 0 view .LVU3562
 12734 000c 8DF80530 		strb	r3, [sp, #5]
3671:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12735              		.loc 1 3671 5 is_stmt 1 view .LVU3563
3671:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12736              		.loc 1 3671 16 is_stmt 0 view .LVU3564
 12737 0010 0DF10500 		add	r0, sp, #5
 12738              	.LVL1516:
3671:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12739              		.loc 1 3671 16 view .LVU3565
 12740 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 12741              	.LVL1517:
 12742 0018 0446     		mov	r4, r0
 12743              	.LVL1518:
3672:Core/Src/bno055.c ****     {
 12744              		.loc 1 3672 5 is_stmt 1 view .LVU3566
3672:Core/Src/bno055.c ****     {
 12745              		.loc 1 3672 22 is_stmt 0 view .LVU3567
 12746 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3672:Core/Src/bno055.c ****     {
 12747              		.loc 1 3672 8 view .LVU3568
 12748 001e B3B9     		cbnz	r3, .L969
 12749              	.L964:
3676:Core/Src/bno055.c ****     {
 12750              		.loc 1 3676 5 is_stmt 1 view .LVU3569
3676:Core/Src/bno055.c ****     {
 12751              		.loc 1 3676 8 is_stmt 0 view .LVU3570
 12752 0020 E4B9     		cbnz	r4, .L966
3679:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12753              		.loc 1 3679 9 is_stmt 1 view .LVU3571
3679:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12754              		.loc 1 3679 21 is_stmt 0 view .LVU3572
 12755 0022 0DF10600 		add	r0, sp, #6
 12756 0026 FFF7FEFF 		bl	bno055_read_gyro_z
 12757              	.LVL1519:
3679:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12758              		.loc 1 3679 18 view .LVU3573
 12759 002a 54FA80F4 		uxtab	r4, r4, r0
 12760              	.LVL1520:
3679:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12761              		.loc 1 3679 18 view .LVU3574
ARM GAS  /tmp/ccOloYeZ.s 			page 396


 12762 002e 64B2     		sxtb	r4, r4
 12763              	.LVL1521:
3680:Core/Src/bno055.c ****         {
 12764              		.loc 1 3680 9 is_stmt 1 view .LVU3575
3680:Core/Src/bno055.c ****         {
 12765              		.loc 1 3680 12 is_stmt 0 view .LVU3576
 12766 0030 BCB9     		cbnz	r4, .L967
3683:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 12767              		.loc 1 3683 13 is_stmt 1 view .LVU3577
3683:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 12768              		.loc 1 3683 45 is_stmt 0 view .LVU3578
 12769 0032 BDF90600 		ldrsh	r0, [sp, #6]
 12770 0036 FFF7FEFF 		bl	__aeabi_i2d
 12771              	.LVL1522:
 12772 003a 0022     		movs	r2, #0
 12773 003c 0A4B     		ldr	r3, .L970
 12774 003e FFF7FEFF 		bl	__aeabi_dmul
 12775              	.LVL1523:
3683:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 12776              		.loc 1 3683 20 view .LVU3579
 12777 0042 FFF7FEFF 		bl	__aeabi_d2f
 12778              	.LVL1524:
3684:Core/Src/bno055.c ****         }
 12779              		.loc 1 3684 13 is_stmt 1 view .LVU3580
3684:Core/Src/bno055.c ****         }
 12780              		.loc 1 3684 23 is_stmt 0 view .LVU3581
 12781 0046 2860     		str	r0, [r5]	@ float
 12782              	.LVL1525:
 12783              	.L965:
3696:Core/Src/bno055.c **** }
 12784              		.loc 1 3696 5 is_stmt 1 view .LVU3582
3697:Core/Src/bno055.c **** 
 12785              		.loc 1 3697 1 is_stmt 0 view .LVU3583
 12786 0048 2046     		mov	r0, r4
 12787 004a 03B0     		add	sp, sp, #12
 12788              		.cfi_remember_state
 12789              		.cfi_def_cfa_offset 12
 12790              		@ sp needed
 12791 004c 30BD     		pop	{r4, r5, pc}
 12792              	.LVL1526:
 12793              	.L969:
 12794              		.cfi_restore_state
3674:Core/Src/bno055.c ****     }
 12795              		.loc 1 3674 9 is_stmt 1 view .LVU3584
3674:Core/Src/bno055.c ****     }
 12796              		.loc 1 3674 21 is_stmt 0 view .LVU3585
 12797 004e 0020     		movs	r0, #0
 12798 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 12799              	.LVL1527:
3674:Core/Src/bno055.c ****     }
 12800              		.loc 1 3674 18 view .LVU3586
 12801 0054 54FA80F4 		uxtab	r4, r4, r0
 12802              	.LVL1528:
3674:Core/Src/bno055.c ****     }
 12803              		.loc 1 3674 18 view .LVU3587
 12804 0058 64B2     		sxtb	r4, r4
 12805              	.LVL1529:
ARM GAS  /tmp/ccOloYeZ.s 			page 397


3674:Core/Src/bno055.c ****     }
 12806              		.loc 1 3674 18 view .LVU3588
 12807 005a E1E7     		b	.L964
 12808              	.L966:
3693:Core/Src/bno055.c ****     }
 12809              		.loc 1 3693 18 view .LVU3589
 12810 005c 4FF0FF34 		mov	r4, #-1
 12811              	.LVL1530:
3693:Core/Src/bno055.c ****     }
 12812              		.loc 1 3693 18 view .LVU3590
 12813 0060 F2E7     		b	.L965
 12814              	.LVL1531:
 12815              	.L967:
3688:Core/Src/bno055.c ****         }
 12816              		.loc 1 3688 22 view .LVU3591
 12817 0062 4FF0FF34 		mov	r4, #-1
 12818              	.LVL1532:
3688:Core/Src/bno055.c ****         }
 12819              		.loc 1 3688 22 view .LVU3592
 12820 0066 EFE7     		b	.L965
 12821              	.L971:
 12822              		.align	2
 12823              	.L970:
 12824 0068 0000B03F 		.word	1068498944
 12825              		.cfi_endproc
 12826              	.LFE57:
 12828              		.section	.text.bno055_convert_float_gyro_z_rps,"ax",%progbits
 12829              		.align	1
 12830              		.global	bno055_convert_float_gyro_z_rps
 12831              		.syntax unified
 12832              		.thumb
 12833              		.thumb_func
 12835              	bno055_convert_float_gyro_z_rps:
 12836              	.LVL1533:
 12837              	.LFB58:
3713:Core/Src/bno055.c ****     /* Variable used to return value of
 12838              		.loc 1 3713 1 is_stmt 1 view -0
 12839              		.cfi_startproc
 12840              		@ args = 0, pretend = 0, frame = 8
 12841              		@ frame_needed = 0, uses_anonymous_args = 0
3713:Core/Src/bno055.c ****     /* Variable used to return value of
 12842              		.loc 1 3713 1 is_stmt 0 view .LVU3594
 12843 0000 30B5     		push	{r4, r5, lr}
 12844              		.cfi_def_cfa_offset 12
 12845              		.cfi_offset 4, -12
 12846              		.cfi_offset 5, -8
 12847              		.cfi_offset 14, -4
 12848 0002 83B0     		sub	sp, sp, #12
 12849              		.cfi_def_cfa_offset 24
 12850 0004 0546     		mov	r5, r0
3716:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
 12851              		.loc 1 3716 5 is_stmt 1 view .LVU3595
 12852              	.LVL1534:
3717:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12853              		.loc 1 3717 5 view .LVU3596
3717:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12854              		.loc 1 3717 9 is_stmt 0 view .LVU3597
ARM GAS  /tmp/ccOloYeZ.s 			page 398


 12855 0006 0023     		movs	r3, #0
 12856 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3718:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 12857              		.loc 1 3718 5 is_stmt 1 view .LVU3598
 12858              	.LVL1535:
3719:Core/Src/bno055.c **** 
 12859              		.loc 1 3719 5 view .LVU3599
3719:Core/Src/bno055.c **** 
 12860              		.loc 1 3719 8 is_stmt 0 view .LVU3600
 12861 000c 8DF80530 		strb	r3, [sp, #5]
3723:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 12862              		.loc 1 3723 5 is_stmt 1 view .LVU3601
3723:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 12863              		.loc 1 3723 16 is_stmt 0 view .LVU3602
 12864 0010 0DF10500 		add	r0, sp, #5
 12865              	.LVL1536:
3723:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 12866              		.loc 1 3723 16 view .LVU3603
 12867 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 12868              	.LVL1537:
 12869 0018 0446     		mov	r4, r0
 12870              	.LVL1538:
3724:Core/Src/bno055.c ****     {
 12871              		.loc 1 3724 5 is_stmt 1 view .LVU3604
3724:Core/Src/bno055.c ****     {
 12872              		.loc 1 3724 22 is_stmt 0 view .LVU3605
 12873 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3724:Core/Src/bno055.c ****     {
 12874              		.loc 1 3724 8 view .LVU3606
 12875 001e 012B     		cmp	r3, #1
 12876 0020 16D1     		bne	.L978
 12877              	.L973:
3728:Core/Src/bno055.c ****     {
 12878              		.loc 1 3728 5 is_stmt 1 view .LVU3607
3728:Core/Src/bno055.c ****     {
 12879              		.loc 1 3728 8 is_stmt 0 view .LVU3608
 12880 0022 E4B9     		cbnz	r4, .L975
3731:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12881              		.loc 1 3731 9 is_stmt 1 view .LVU3609
3731:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12882              		.loc 1 3731 21 is_stmt 0 view .LVU3610
 12883 0024 0DF10600 		add	r0, sp, #6
 12884 0028 FFF7FEFF 		bl	bno055_read_gyro_z
 12885              	.LVL1539:
3731:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12886              		.loc 1 3731 18 view .LVU3611
 12887 002c 54FA80F4 		uxtab	r4, r4, r0
 12888              	.LVL1540:
3731:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12889              		.loc 1 3731 18 view .LVU3612
 12890 0030 64B2     		sxtb	r4, r4
 12891              	.LVL1541:
3732:Core/Src/bno055.c ****         {
 12892              		.loc 1 3732 9 is_stmt 1 view .LVU3613
3732:Core/Src/bno055.c ****         {
 12893              		.loc 1 3732 12 is_stmt 0 view .LVU3614
 12894 0032 BCB9     		cbnz	r4, .L976
ARM GAS  /tmp/ccOloYeZ.s 			page 399


3735:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 12895              		.loc 1 3735 13 is_stmt 1 view .LVU3615
3735:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 12896              		.loc 1 3735 45 is_stmt 0 view .LVU3616
 12897 0034 BDF90600 		ldrsh	r0, [sp, #6]
 12898 0038 FFF7FEFF 		bl	__aeabi_i2d
 12899              	.LVL1542:
 12900 003c 0022     		movs	r2, #0
 12901 003e 0B4B     		ldr	r3, .L979
 12902 0040 FFF7FEFF 		bl	__aeabi_ddiv
 12903              	.LVL1543:
3735:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 12904              		.loc 1 3735 20 view .LVU3617
 12905 0044 FFF7FEFF 		bl	__aeabi_d2f
 12906              	.LVL1544:
3736:Core/Src/bno055.c ****         }
 12907              		.loc 1 3736 13 is_stmt 1 view .LVU3618
3736:Core/Src/bno055.c ****         }
 12908              		.loc 1 3736 23 is_stmt 0 view .LVU3619
 12909 0048 2860     		str	r0, [r5]	@ float
 12910              	.LVL1545:
 12911              	.L974:
3748:Core/Src/bno055.c **** }
 12912              		.loc 1 3748 5 is_stmt 1 view .LVU3620
3749:Core/Src/bno055.c **** 
 12913              		.loc 1 3749 1 is_stmt 0 view .LVU3621
 12914 004a 2046     		mov	r0, r4
 12915 004c 03B0     		add	sp, sp, #12
 12916              		.cfi_remember_state
 12917              		.cfi_def_cfa_offset 12
 12918              		@ sp needed
 12919 004e 30BD     		pop	{r4, r5, pc}
 12920              	.LVL1546:
 12921              	.L978:
 12922              		.cfi_restore_state
3726:Core/Src/bno055.c ****     }
 12923              		.loc 1 3726 9 is_stmt 1 view .LVU3622
3726:Core/Src/bno055.c ****     }
 12924              		.loc 1 3726 21 is_stmt 0 view .LVU3623
 12925 0050 0120     		movs	r0, #1
 12926 0052 FFF7FEFF 		bl	bno055_set_gyro_unit
 12927              	.LVL1547:
3726:Core/Src/bno055.c ****     }
 12928              		.loc 1 3726 18 view .LVU3624
 12929 0056 54FA80F4 		uxtab	r4, r4, r0
 12930              	.LVL1548:
3726:Core/Src/bno055.c ****     }
 12931              		.loc 1 3726 18 view .LVU3625
 12932 005a 64B2     		sxtb	r4, r4
 12933              	.LVL1549:
3726:Core/Src/bno055.c ****     }
 12934              		.loc 1 3726 18 view .LVU3626
 12935 005c E1E7     		b	.L973
 12936              	.L975:
3745:Core/Src/bno055.c ****     }
 12937              		.loc 1 3745 18 view .LVU3627
 12938 005e 4FF0FF34 		mov	r4, #-1
ARM GAS  /tmp/ccOloYeZ.s 			page 400


 12939              	.LVL1550:
3745:Core/Src/bno055.c ****     }
 12940              		.loc 1 3745 18 view .LVU3628
 12941 0062 F2E7     		b	.L974
 12942              	.LVL1551:
 12943              	.L976:
3740:Core/Src/bno055.c ****         }
 12944              		.loc 1 3740 22 view .LVU3629
 12945 0064 4FF0FF34 		mov	r4, #-1
 12946              	.LVL1552:
3740:Core/Src/bno055.c ****         }
 12947              		.loc 1 3740 22 view .LVU3630
 12948 0068 EFE7     		b	.L974
 12949              	.L980:
 12950 006a 00BF     		.align	2
 12951              	.L979:
 12952 006c 00208C40 		.word	1082925056
 12953              		.cfi_endproc
 12954              	.LFE58:
 12956              		.section	.text.bno055_convert_float_gyro_xyz_dps,"ax",%progbits
 12957              		.align	1
 12958              		.global	bno055_convert_float_gyro_xyz_dps
 12959              		.syntax unified
 12960              		.thumb
 12961              		.thumb_func
 12963              	bno055_convert_float_gyro_xyz_dps:
 12964              	.LVL1553:
 12965              	.LFB59:
3771:Core/Src/bno055.c ****     /* Variable used to return value of
 12966              		.loc 1 3771 1 is_stmt 1 view -0
 12967              		.cfi_startproc
 12968              		@ args = 0, pretend = 0, frame = 16
 12969              		@ frame_needed = 0, uses_anonymous_args = 0
3771:Core/Src/bno055.c ****     /* Variable used to return value of
 12970              		.loc 1 3771 1 is_stmt 0 view .LVU3632
 12971 0000 30B5     		push	{r4, r5, lr}
 12972              		.cfi_def_cfa_offset 12
 12973              		.cfi_offset 4, -12
 12974              		.cfi_offset 5, -8
 12975              		.cfi_offset 14, -4
 12976 0002 85B0     		sub	sp, sp, #20
 12977              		.cfi_def_cfa_offset 32
 12978 0004 0546     		mov	r5, r0
3774:Core/Src/bno055.c ****     struct bno055_gyro_t gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 12979              		.loc 1 3774 5 is_stmt 1 view .LVU3633
 12980              	.LVL1554:
3775:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 12981              		.loc 1 3775 5 view .LVU3634
3775:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 12982              		.loc 1 3775 26 is_stmt 0 view .LVU3635
 12983 0006 0023     		movs	r3, #0
 12984 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 12985 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 12986 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
3776:Core/Src/bno055.c **** 
 12987              		.loc 1 3776 5 is_stmt 1 view .LVU3636
3776:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 401


 12988              		.loc 1 3776 8 is_stmt 0 view .LVU3637
 12989 0014 8DF80730 		strb	r3, [sp, #7]
3780:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12990              		.loc 1 3780 5 is_stmt 1 view .LVU3638
3780:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12991              		.loc 1 3780 16 is_stmt 0 view .LVU3639
 12992 0018 0DF10700 		add	r0, sp, #7
 12993              	.LVL1555:
3780:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12994              		.loc 1 3780 16 view .LVU3640
 12995 001c FFF7FEFF 		bl	bno055_get_gyro_unit
 12996              	.LVL1556:
 12997 0020 0446     		mov	r4, r0
 12998              	.LVL1557:
3781:Core/Src/bno055.c ****     {
 12999              		.loc 1 3781 5 is_stmt 1 view .LVU3641
3781:Core/Src/bno055.c ****     {
 13000              		.loc 1 3781 22 is_stmt 0 view .LVU3642
 13001 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
3781:Core/Src/bno055.c ****     {
 13002              		.loc 1 3781 8 view .LVU3643
 13003 0026 5BBB     		cbnz	r3, .L987
 13004              	.L982:
3785:Core/Src/bno055.c ****     {
 13005              		.loc 1 3785 5 is_stmt 1 view .LVU3644
3785:Core/Src/bno055.c ****     {
 13006              		.loc 1 3785 8 is_stmt 0 view .LVU3645
 13007 0028 8CBB     		cbnz	r4, .L984
3788:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13008              		.loc 1 3788 9 is_stmt 1 view .LVU3646
3788:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13009              		.loc 1 3788 21 is_stmt 0 view .LVU3647
 13010 002a 02A8     		add	r0, sp, #8
 13011 002c FFF7FEFF 		bl	bno055_read_gyro_xyz
 13012              	.LVL1558:
3788:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13013              		.loc 1 3788 18 view .LVU3648
 13014 0030 54FA80F4 		uxtab	r4, r4, r0
 13015              	.LVL1559:
3788:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13016              		.loc 1 3788 18 view .LVU3649
 13017 0034 64B2     		sxtb	r4, r4
 13018              	.LVL1560:
3789:Core/Src/bno055.c ****         {
 13019              		.loc 1 3789 9 is_stmt 1 view .LVU3650
3789:Core/Src/bno055.c ****         {
 13020              		.loc 1 3789 12 is_stmt 0 view .LVU3651
 13021 0036 6CBB     		cbnz	r4, .L985
3792:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 13022              		.loc 1 3792 13 is_stmt 1 view .LVU3652
3792:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 13023              		.loc 1 3792 51 is_stmt 0 view .LVU3653
 13024 0038 BDF90800 		ldrsh	r0, [sp, #8]
 13025 003c FFF7FEFF 		bl	__aeabi_i2d
 13026              	.LVL1561:
 13027 0040 0022     		movs	r2, #0
 13028 0042 164B     		ldr	r3, .L988
ARM GAS  /tmp/ccOloYeZ.s 			page 402


 13029 0044 FFF7FEFF 		bl	__aeabi_dmul
 13030              	.LVL1562:
3792:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 13031              		.loc 1 3792 32 view .LVU3654
 13032 0048 FFF7FEFF 		bl	__aeabi_d2f
 13033              	.LVL1563:
3792:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 13034              		.loc 1 3792 30 view .LVU3655
 13035 004c 2860     		str	r0, [r5]	@ float
3793:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 13036              		.loc 1 3793 13 is_stmt 1 view .LVU3656
3793:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 13037              		.loc 1 3793 51 is_stmt 0 view .LVU3657
 13038 004e BDF90A00 		ldrsh	r0, [sp, #10]
 13039 0052 FFF7FEFF 		bl	__aeabi_i2d
 13040              	.LVL1564:
 13041 0056 0022     		movs	r2, #0
 13042 0058 104B     		ldr	r3, .L988
 13043 005a FFF7FEFF 		bl	__aeabi_dmul
 13044              	.LVL1565:
3793:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 13045              		.loc 1 3793 32 view .LVU3658
 13046 005e FFF7FEFF 		bl	__aeabi_d2f
 13047              	.LVL1566:
3793:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 13048              		.loc 1 3793 30 view .LVU3659
 13049 0062 6860     		str	r0, [r5, #4]	@ float
3794:Core/Src/bno055.c ****         }
 13050              		.loc 1 3794 13 is_stmt 1 view .LVU3660
3794:Core/Src/bno055.c ****         }
 13051              		.loc 1 3794 51 is_stmt 0 view .LVU3661
 13052 0064 BDF90C00 		ldrsh	r0, [sp, #12]
 13053 0068 FFF7FEFF 		bl	__aeabi_i2d
 13054              	.LVL1567:
 13055 006c 0022     		movs	r2, #0
 13056 006e 0B4B     		ldr	r3, .L988
 13057 0070 FFF7FEFF 		bl	__aeabi_dmul
 13058              	.LVL1568:
3794:Core/Src/bno055.c ****         }
 13059              		.loc 1 3794 32 view .LVU3662
 13060 0074 FFF7FEFF 		bl	__aeabi_d2f
 13061              	.LVL1569:
3794:Core/Src/bno055.c ****         }
 13062              		.loc 1 3794 30 view .LVU3663
 13063 0078 A860     		str	r0, [r5, #8]	@ float
 13064              	.LVL1570:
 13065              	.L983:
3806:Core/Src/bno055.c **** }
 13066              		.loc 1 3806 5 is_stmt 1 view .LVU3664
3807:Core/Src/bno055.c **** 
 13067              		.loc 1 3807 1 is_stmt 0 view .LVU3665
 13068 007a 2046     		mov	r0, r4
 13069 007c 05B0     		add	sp, sp, #20
 13070              		.cfi_remember_state
 13071              		.cfi_def_cfa_offset 12
 13072              		@ sp needed
 13073 007e 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccOloYeZ.s 			page 403


 13074              	.LVL1571:
 13075              	.L987:
 13076              		.cfi_restore_state
3783:Core/Src/bno055.c ****     }
 13077              		.loc 1 3783 9 is_stmt 1 view .LVU3666
3783:Core/Src/bno055.c ****     }
 13078              		.loc 1 3783 21 is_stmt 0 view .LVU3667
 13079 0080 0020     		movs	r0, #0
 13080 0082 FFF7FEFF 		bl	bno055_set_gyro_unit
 13081              	.LVL1572:
3783:Core/Src/bno055.c ****     }
 13082              		.loc 1 3783 18 view .LVU3668
 13083 0086 54FA80F4 		uxtab	r4, r4, r0
 13084              	.LVL1573:
3783:Core/Src/bno055.c ****     }
 13085              		.loc 1 3783 18 view .LVU3669
 13086 008a 64B2     		sxtb	r4, r4
 13087              	.LVL1574:
3783:Core/Src/bno055.c ****     }
 13088              		.loc 1 3783 18 view .LVU3670
 13089 008c CCE7     		b	.L982
 13090              	.L984:
3803:Core/Src/bno055.c ****     }
 13091              		.loc 1 3803 18 view .LVU3671
 13092 008e 4FF0FF34 		mov	r4, #-1
 13093              	.LVL1575:
3803:Core/Src/bno055.c ****     }
 13094              		.loc 1 3803 18 view .LVU3672
 13095 0092 F2E7     		b	.L983
 13096              	.LVL1576:
 13097              	.L985:
3798:Core/Src/bno055.c ****         }
 13098              		.loc 1 3798 22 view .LVU3673
 13099 0094 4FF0FF34 		mov	r4, #-1
 13100              	.LVL1577:
3798:Core/Src/bno055.c ****         }
 13101              		.loc 1 3798 22 view .LVU3674
 13102 0098 EFE7     		b	.L983
 13103              	.L989:
 13104 009a 00BF     		.align	2
 13105              	.L988:
 13106 009c 0000B03F 		.word	1068498944
 13107              		.cfi_endproc
 13108              	.LFE59:
 13110              		.section	.text.bno055_convert_float_gyro_xyz_rps,"ax",%progbits
 13111              		.align	1
 13112              		.global	bno055_convert_float_gyro_xyz_rps
 13113              		.syntax unified
 13114              		.thumb
 13115              		.thumb_func
 13117              	bno055_convert_float_gyro_xyz_rps:
 13118              	.LVL1578:
 13119              	.LFB60:
3829:Core/Src/bno055.c ****     /* Variable used to return value of
 13120              		.loc 1 3829 1 is_stmt 1 view -0
 13121              		.cfi_startproc
 13122              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccOloYeZ.s 			page 404


 13123              		@ frame_needed = 0, uses_anonymous_args = 0
3829:Core/Src/bno055.c ****     /* Variable used to return value of
 13124              		.loc 1 3829 1 is_stmt 0 view .LVU3676
 13125 0000 30B5     		push	{r4, r5, lr}
 13126              		.cfi_def_cfa_offset 12
 13127              		.cfi_offset 4, -12
 13128              		.cfi_offset 5, -8
 13129              		.cfi_offset 14, -4
 13130 0002 85B0     		sub	sp, sp, #20
 13131              		.cfi_def_cfa_offset 32
 13132 0004 0546     		mov	r5, r0
3832:Core/Src/bno055.c ****     struct bno055_gyro_t gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 13133              		.loc 1 3832 5 is_stmt 1 view .LVU3677
 13134              	.LVL1579:
3833:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13135              		.loc 1 3833 5 view .LVU3678
3833:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13136              		.loc 1 3833 26 is_stmt 0 view .LVU3679
 13137 0006 0023     		movs	r3, #0
 13138 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 13139 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 13140 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
3834:Core/Src/bno055.c **** 
 13141              		.loc 1 3834 5 is_stmt 1 view .LVU3680
3834:Core/Src/bno055.c **** 
 13142              		.loc 1 3834 8 is_stmt 0 view .LVU3681
 13143 0014 8DF80730 		strb	r3, [sp, #7]
3838:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13144              		.loc 1 3838 5 is_stmt 1 view .LVU3682
3838:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13145              		.loc 1 3838 16 is_stmt 0 view .LVU3683
 13146 0018 0DF10700 		add	r0, sp, #7
 13147              	.LVL1580:
3838:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13148              		.loc 1 3838 16 view .LVU3684
 13149 001c FFF7FEFF 		bl	bno055_get_gyro_unit
 13150              	.LVL1581:
 13151 0020 0446     		mov	r4, r0
 13152              	.LVL1582:
3839:Core/Src/bno055.c ****     {
 13153              		.loc 1 3839 5 is_stmt 1 view .LVU3685
3839:Core/Src/bno055.c ****     {
 13154              		.loc 1 3839 22 is_stmt 0 view .LVU3686
 13155 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
3839:Core/Src/bno055.c ****     {
 13156              		.loc 1 3839 8 view .LVU3687
 13157 0026 012B     		cmp	r3, #1
 13158 0028 2BD1     		bne	.L996
 13159              	.L991:
3843:Core/Src/bno055.c ****     {
 13160              		.loc 1 3843 5 is_stmt 1 view .LVU3688
3843:Core/Src/bno055.c ****     {
 13161              		.loc 1 3843 8 is_stmt 0 view .LVU3689
 13162 002a 8CBB     		cbnz	r4, .L993
3846:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13163              		.loc 1 3846 9 is_stmt 1 view .LVU3690
3846:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/ccOloYeZ.s 			page 405


 13164              		.loc 1 3846 21 is_stmt 0 view .LVU3691
 13165 002c 02A8     		add	r0, sp, #8
 13166 002e FFF7FEFF 		bl	bno055_read_gyro_xyz
 13167              	.LVL1583:
3846:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13168              		.loc 1 3846 18 view .LVU3692
 13169 0032 54FA80F4 		uxtab	r4, r4, r0
 13170              	.LVL1584:
3846:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13171              		.loc 1 3846 18 view .LVU3693
 13172 0036 64B2     		sxtb	r4, r4
 13173              	.LVL1585:
3847:Core/Src/bno055.c ****         {
 13174              		.loc 1 3847 9 is_stmt 1 view .LVU3694
3847:Core/Src/bno055.c ****         {
 13175              		.loc 1 3847 12 is_stmt 0 view .LVU3695
 13176 0038 6CBB     		cbnz	r4, .L994
3850:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 13177              		.loc 1 3850 13 is_stmt 1 view .LVU3696
3850:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 13178              		.loc 1 3850 51 is_stmt 0 view .LVU3697
 13179 003a BDF90800 		ldrsh	r0, [sp, #8]
 13180 003e FFF7FEFF 		bl	__aeabi_i2d
 13181              	.LVL1586:
 13182 0042 0022     		movs	r2, #0
 13183 0044 154B     		ldr	r3, .L997
 13184 0046 FFF7FEFF 		bl	__aeabi_ddiv
 13185              	.LVL1587:
3850:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 13186              		.loc 1 3850 32 view .LVU3698
 13187 004a FFF7FEFF 		bl	__aeabi_d2f
 13188              	.LVL1588:
3850:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 13189              		.loc 1 3850 30 view .LVU3699
 13190 004e 2860     		str	r0, [r5]	@ float
3851:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 13191              		.loc 1 3851 13 is_stmt 1 view .LVU3700
3851:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 13192              		.loc 1 3851 51 is_stmt 0 view .LVU3701
 13193 0050 BDF90A00 		ldrsh	r0, [sp, #10]
 13194 0054 FFF7FEFF 		bl	__aeabi_i2d
 13195              	.LVL1589:
 13196 0058 0022     		movs	r2, #0
 13197 005a 104B     		ldr	r3, .L997
 13198 005c FFF7FEFF 		bl	__aeabi_ddiv
 13199              	.LVL1590:
3851:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 13200              		.loc 1 3851 32 view .LVU3702
 13201 0060 FFF7FEFF 		bl	__aeabi_d2f
 13202              	.LVL1591:
3851:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 13203              		.loc 1 3851 30 view .LVU3703
 13204 0064 6860     		str	r0, [r5, #4]	@ float
3852:Core/Src/bno055.c ****         }
 13205              		.loc 1 3852 13 is_stmt 1 view .LVU3704
3852:Core/Src/bno055.c ****         }
 13206              		.loc 1 3852 51 is_stmt 0 view .LVU3705
ARM GAS  /tmp/ccOloYeZ.s 			page 406


 13207 0066 BDF90C00 		ldrsh	r0, [sp, #12]
 13208 006a FFF7FEFF 		bl	__aeabi_i2d
 13209              	.LVL1592:
 13210 006e 0022     		movs	r2, #0
 13211 0070 0A4B     		ldr	r3, .L997
 13212 0072 FFF7FEFF 		bl	__aeabi_ddiv
 13213              	.LVL1593:
3852:Core/Src/bno055.c ****         }
 13214              		.loc 1 3852 32 view .LVU3706
 13215 0076 FFF7FEFF 		bl	__aeabi_d2f
 13216              	.LVL1594:
3852:Core/Src/bno055.c ****         }
 13217              		.loc 1 3852 30 view .LVU3707
 13218 007a A860     		str	r0, [r5, #8]	@ float
 13219              	.LVL1595:
 13220              	.L992:
3864:Core/Src/bno055.c **** }
 13221              		.loc 1 3864 5 is_stmt 1 view .LVU3708
3865:Core/Src/bno055.c **** 
 13222              		.loc 1 3865 1 is_stmt 0 view .LVU3709
 13223 007c 2046     		mov	r0, r4
 13224 007e 05B0     		add	sp, sp, #20
 13225              		.cfi_remember_state
 13226              		.cfi_def_cfa_offset 12
 13227              		@ sp needed
 13228 0080 30BD     		pop	{r4, r5, pc}
 13229              	.LVL1596:
 13230              	.L996:
 13231              		.cfi_restore_state
3841:Core/Src/bno055.c ****     }
 13232              		.loc 1 3841 9 is_stmt 1 view .LVU3710
3841:Core/Src/bno055.c ****     }
 13233              		.loc 1 3841 21 is_stmt 0 view .LVU3711
 13234 0082 0120     		movs	r0, #1
 13235 0084 FFF7FEFF 		bl	bno055_set_gyro_unit
 13236              	.LVL1597:
3841:Core/Src/bno055.c ****     }
 13237              		.loc 1 3841 18 view .LVU3712
 13238 0088 54FA80F4 		uxtab	r4, r4, r0
 13239              	.LVL1598:
3841:Core/Src/bno055.c ****     }
 13240              		.loc 1 3841 18 view .LVU3713
 13241 008c 64B2     		sxtb	r4, r4
 13242              	.LVL1599:
3841:Core/Src/bno055.c ****     }
 13243              		.loc 1 3841 18 view .LVU3714
 13244 008e CCE7     		b	.L991
 13245              	.L993:
3861:Core/Src/bno055.c ****     }
 13246              		.loc 1 3861 18 view .LVU3715
 13247 0090 4FF0FF34 		mov	r4, #-1
 13248              	.LVL1600:
3861:Core/Src/bno055.c ****     }
 13249              		.loc 1 3861 18 view .LVU3716
 13250 0094 F2E7     		b	.L992
 13251              	.LVL1601:
 13252              	.L994:
ARM GAS  /tmp/ccOloYeZ.s 			page 407


3856:Core/Src/bno055.c ****         }
 13253              		.loc 1 3856 22 view .LVU3717
 13254 0096 4FF0FF34 		mov	r4, #-1
 13255              	.LVL1602:
3856:Core/Src/bno055.c ****         }
 13256              		.loc 1 3856 22 view .LVU3718
 13257 009a EFE7     		b	.L992
 13258              	.L998:
 13259              		.align	2
 13260              	.L997:
 13261 009c 00208C40 		.word	1082925056
 13262              		.cfi_endproc
 13263              	.LFE60:
 13265              		.section	.text.bno055_convert_double_gyro_x_dps,"ax",%progbits
 13266              		.align	1
 13267              		.global	bno055_convert_double_gyro_x_dps
 13268              		.syntax unified
 13269              		.thumb
 13270              		.thumb_func
 13272              	bno055_convert_double_gyro_x_dps:
 13273              	.LVL1603:
 13274              	.LFB91:
5269:Core/Src/bno055.c ****     /* Variable used to return value of
 13275              		.loc 1 5269 1 is_stmt 1 view -0
 13276              		.cfi_startproc
 13277              		@ args = 0, pretend = 0, frame = 8
 13278              		@ frame_needed = 0, uses_anonymous_args = 0
5269:Core/Src/bno055.c ****     /* Variable used to return value of
 13279              		.loc 1 5269 1 is_stmt 0 view .LVU3720
 13280 0000 30B5     		push	{r4, r5, lr}
 13281              		.cfi_def_cfa_offset 12
 13282              		.cfi_offset 4, -12
 13283              		.cfi_offset 5, -8
 13284              		.cfi_offset 14, -4
 13285 0002 83B0     		sub	sp, sp, #12
 13286              		.cfi_def_cfa_offset 24
 13287 0004 0546     		mov	r5, r0
5272:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
 13288              		.loc 1 5272 5 is_stmt 1 view .LVU3721
 13289              	.LVL1604:
5273:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13290              		.loc 1 5273 5 view .LVU3722
5273:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13291              		.loc 1 5273 9 is_stmt 0 view .LVU3723
 13292 0006 0023     		movs	r3, #0
 13293 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5274:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13294              		.loc 1 5274 5 is_stmt 1 view .LVU3724
 13295              	.LVL1605:
5275:Core/Src/bno055.c **** 
 13296              		.loc 1 5275 5 view .LVU3725
5275:Core/Src/bno055.c **** 
 13297              		.loc 1 5275 8 is_stmt 0 view .LVU3726
 13298 000c 8DF80530 		strb	r3, [sp, #5]
5279:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13299              		.loc 1 5279 5 is_stmt 1 view .LVU3727
5279:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
ARM GAS  /tmp/ccOloYeZ.s 			page 408


 13300              		.loc 1 5279 16 is_stmt 0 view .LVU3728
 13301 0010 0DF10500 		add	r0, sp, #5
 13302              	.LVL1606:
5279:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13303              		.loc 1 5279 16 view .LVU3729
 13304 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13305              	.LVL1607:
 13306 0018 0446     		mov	r4, r0
 13307              	.LVL1608:
5280:Core/Src/bno055.c ****     {
 13308              		.loc 1 5280 5 is_stmt 1 view .LVU3730
5280:Core/Src/bno055.c ****     {
 13309              		.loc 1 5280 22 is_stmt 0 view .LVU3731
 13310 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5280:Core/Src/bno055.c ****     {
 13311              		.loc 1 5280 8 view .LVU3732
 13312 001e ABB9     		cbnz	r3, .L1005
 13313              	.L1000:
5284:Core/Src/bno055.c ****     {
 13314              		.loc 1 5284 5 is_stmt 1 view .LVU3733
5284:Core/Src/bno055.c ****     {
 13315              		.loc 1 5284 8 is_stmt 0 view .LVU3734
 13316 0020 DCB9     		cbnz	r4, .L1002
5287:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13317              		.loc 1 5287 9 is_stmt 1 view .LVU3735
5287:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13318              		.loc 1 5287 21 is_stmt 0 view .LVU3736
 13319 0022 0DF10600 		add	r0, sp, #6
 13320 0026 FFF7FEFF 		bl	bno055_read_gyro_x
 13321              	.LVL1609:
5287:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13322              		.loc 1 5287 18 view .LVU3737
 13323 002a 54FA80F4 		uxtab	r4, r4, r0
 13324              	.LVL1610:
5287:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13325              		.loc 1 5287 18 view .LVU3738
 13326 002e 64B2     		sxtb	r4, r4
 13327              	.LVL1611:
5288:Core/Src/bno055.c ****         {
 13328              		.loc 1 5288 9 is_stmt 1 view .LVU3739
5288:Core/Src/bno055.c ****         {
 13329              		.loc 1 5288 12 is_stmt 0 view .LVU3740
 13330 0030 B4B9     		cbnz	r4, .L1003
5291:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13331              		.loc 1 5291 13 is_stmt 1 view .LVU3741
5291:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13332              		.loc 1 5291 22 is_stmt 0 view .LVU3742
 13333 0032 BDF90600 		ldrsh	r0, [sp, #6]
 13334 0036 FFF7FEFF 		bl	__aeabi_i2d
 13335              	.LVL1612:
5291:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13336              		.loc 1 5291 20 view .LVU3743
 13337 003a 0022     		movs	r2, #0
 13338 003c 0A4B     		ldr	r3, .L1006
 13339 003e FFF7FEFF 		bl	__aeabi_dmul
 13340              	.LVL1613:
5292:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 409


 13341              		.loc 1 5292 13 is_stmt 1 view .LVU3744
5292:Core/Src/bno055.c ****         }
 13342              		.loc 1 5292 23 is_stmt 0 view .LVU3745
 13343 0042 C5E90001 		strd	r0, [r5]
 13344              	.LVL1614:
 13345              	.L1001:
5304:Core/Src/bno055.c **** }
 13346              		.loc 1 5304 5 is_stmt 1 view .LVU3746
5305:Core/Src/bno055.c **** 
 13347              		.loc 1 5305 1 is_stmt 0 view .LVU3747
 13348 0046 2046     		mov	r0, r4
 13349 0048 03B0     		add	sp, sp, #12
 13350              		.cfi_remember_state
 13351              		.cfi_def_cfa_offset 12
 13352              		@ sp needed
 13353 004a 30BD     		pop	{r4, r5, pc}
 13354              	.LVL1615:
 13355              	.L1005:
 13356              		.cfi_restore_state
5282:Core/Src/bno055.c ****     }
 13357              		.loc 1 5282 9 is_stmt 1 view .LVU3748
5282:Core/Src/bno055.c ****     }
 13358              		.loc 1 5282 21 is_stmt 0 view .LVU3749
 13359 004c 0020     		movs	r0, #0
 13360 004e FFF7FEFF 		bl	bno055_set_gyro_unit
 13361              	.LVL1616:
5282:Core/Src/bno055.c ****     }
 13362              		.loc 1 5282 18 view .LVU3750
 13363 0052 54FA80F4 		uxtab	r4, r4, r0
 13364              	.LVL1617:
5282:Core/Src/bno055.c ****     }
 13365              		.loc 1 5282 18 view .LVU3751
 13366 0056 64B2     		sxtb	r4, r4
 13367              	.LVL1618:
5282:Core/Src/bno055.c ****     }
 13368              		.loc 1 5282 18 view .LVU3752
 13369 0058 E2E7     		b	.L1000
 13370              	.L1002:
5301:Core/Src/bno055.c ****     }
 13371              		.loc 1 5301 18 view .LVU3753
 13372 005a 4FF0FF34 		mov	r4, #-1
 13373              	.LVL1619:
5301:Core/Src/bno055.c ****     }
 13374              		.loc 1 5301 18 view .LVU3754
 13375 005e F2E7     		b	.L1001
 13376              	.LVL1620:
 13377              	.L1003:
5296:Core/Src/bno055.c ****         }
 13378              		.loc 1 5296 22 view .LVU3755
 13379 0060 4FF0FF34 		mov	r4, #-1
 13380              	.LVL1621:
5296:Core/Src/bno055.c ****         }
 13381              		.loc 1 5296 22 view .LVU3756
 13382 0064 EFE7     		b	.L1001
 13383              	.L1007:
 13384 0066 00BF     		.align	2
 13385              	.L1006:
ARM GAS  /tmp/ccOloYeZ.s 			page 410


 13386 0068 0000B03F 		.word	1068498944
 13387              		.cfi_endproc
 13388              	.LFE91:
 13390              		.section	.text.bno055_convert_double_gyro_x_rps,"ax",%progbits
 13391              		.align	1
 13392              		.global	bno055_convert_double_gyro_x_rps
 13393              		.syntax unified
 13394              		.thumb
 13395              		.thumb_func
 13397              	bno055_convert_double_gyro_x_rps:
 13398              	.LVL1622:
 13399              	.LFB92:
5322:Core/Src/bno055.c ****     /* Variable used to return value of
 13400              		.loc 1 5322 1 is_stmt 1 view -0
 13401              		.cfi_startproc
 13402              		@ args = 0, pretend = 0, frame = 8
 13403              		@ frame_needed = 0, uses_anonymous_args = 0
5322:Core/Src/bno055.c ****     /* Variable used to return value of
 13404              		.loc 1 5322 1 is_stmt 0 view .LVU3758
 13405 0000 30B5     		push	{r4, r5, lr}
 13406              		.cfi_def_cfa_offset 12
 13407              		.cfi_offset 4, -12
 13408              		.cfi_offset 5, -8
 13409              		.cfi_offset 14, -4
 13410 0002 83B0     		sub	sp, sp, #12
 13411              		.cfi_def_cfa_offset 24
 13412 0004 0546     		mov	r5, r0
5325:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
 13413              		.loc 1 5325 5 is_stmt 1 view .LVU3759
 13414              	.LVL1623:
5326:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13415              		.loc 1 5326 5 view .LVU3760
5326:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13416              		.loc 1 5326 9 is_stmt 0 view .LVU3761
 13417 0006 0023     		movs	r3, #0
 13418 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5327:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13419              		.loc 1 5327 5 is_stmt 1 view .LVU3762
 13420              	.LVL1624:
5328:Core/Src/bno055.c **** 
 13421              		.loc 1 5328 5 view .LVU3763
5328:Core/Src/bno055.c **** 
 13422              		.loc 1 5328 8 is_stmt 0 view .LVU3764
 13423 000c 8DF80530 		strb	r3, [sp, #5]
5332:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13424              		.loc 1 5332 5 is_stmt 1 view .LVU3765
5332:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13425              		.loc 1 5332 16 is_stmt 0 view .LVU3766
 13426 0010 0DF10500 		add	r0, sp, #5
 13427              	.LVL1625:
5332:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13428              		.loc 1 5332 16 view .LVU3767
 13429 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13430              	.LVL1626:
 13431 0018 0446     		mov	r4, r0
 13432              	.LVL1627:
5333:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 411


 13433              		.loc 1 5333 5 is_stmt 1 view .LVU3768
5333:Core/Src/bno055.c ****     {
 13434              		.loc 1 5333 22 is_stmt 0 view .LVU3769
 13435 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5333:Core/Src/bno055.c ****     {
 13436              		.loc 1 5333 8 view .LVU3770
 13437 001e 012B     		cmp	r3, #1
 13438 0020 15D1     		bne	.L1014
 13439              	.L1009:
5337:Core/Src/bno055.c ****     {
 13440              		.loc 1 5337 5 is_stmt 1 view .LVU3771
5337:Core/Src/bno055.c ****     {
 13441              		.loc 1 5337 8 is_stmt 0 view .LVU3772
 13442 0022 DCB9     		cbnz	r4, .L1011
5340:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13443              		.loc 1 5340 9 is_stmt 1 view .LVU3773
5340:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13444              		.loc 1 5340 21 is_stmt 0 view .LVU3774
 13445 0024 0DF10600 		add	r0, sp, #6
 13446 0028 FFF7FEFF 		bl	bno055_read_gyro_x
 13447              	.LVL1628:
5340:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13448              		.loc 1 5340 18 view .LVU3775
 13449 002c 54FA80F4 		uxtab	r4, r4, r0
 13450              	.LVL1629:
5340:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13451              		.loc 1 5340 18 view .LVU3776
 13452 0030 64B2     		sxtb	r4, r4
 13453              	.LVL1630:
5341:Core/Src/bno055.c ****         {
 13454              		.loc 1 5341 9 is_stmt 1 view .LVU3777
5341:Core/Src/bno055.c ****         {
 13455              		.loc 1 5341 12 is_stmt 0 view .LVU3778
 13456 0032 B4B9     		cbnz	r4, .L1012
5344:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13457              		.loc 1 5344 13 is_stmt 1 view .LVU3779
5344:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13458              		.loc 1 5344 22 is_stmt 0 view .LVU3780
 13459 0034 BDF90600 		ldrsh	r0, [sp, #6]
 13460 0038 FFF7FEFF 		bl	__aeabi_i2d
 13461              	.LVL1631:
5344:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13462              		.loc 1 5344 20 view .LVU3781
 13463 003c 0022     		movs	r2, #0
 13464 003e 0A4B     		ldr	r3, .L1015
 13465 0040 FFF7FEFF 		bl	__aeabi_ddiv
 13466              	.LVL1632:
5345:Core/Src/bno055.c ****         }
 13467              		.loc 1 5345 13 is_stmt 1 view .LVU3782
5345:Core/Src/bno055.c ****         }
 13468              		.loc 1 5345 23 is_stmt 0 view .LVU3783
 13469 0044 C5E90001 		strd	r0, [r5]
 13470              	.LVL1633:
 13471              	.L1010:
5357:Core/Src/bno055.c **** }
 13472              		.loc 1 5357 5 is_stmt 1 view .LVU3784
5358:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 412


 13473              		.loc 1 5358 1 is_stmt 0 view .LVU3785
 13474 0048 2046     		mov	r0, r4
 13475 004a 03B0     		add	sp, sp, #12
 13476              		.cfi_remember_state
 13477              		.cfi_def_cfa_offset 12
 13478              		@ sp needed
 13479 004c 30BD     		pop	{r4, r5, pc}
 13480              	.LVL1634:
 13481              	.L1014:
 13482              		.cfi_restore_state
5335:Core/Src/bno055.c ****     }
 13483              		.loc 1 5335 9 is_stmt 1 view .LVU3786
5335:Core/Src/bno055.c ****     }
 13484              		.loc 1 5335 21 is_stmt 0 view .LVU3787
 13485 004e 0120     		movs	r0, #1
 13486 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 13487              	.LVL1635:
5335:Core/Src/bno055.c ****     }
 13488              		.loc 1 5335 18 view .LVU3788
 13489 0054 54FA80F4 		uxtab	r4, r4, r0
 13490              	.LVL1636:
5335:Core/Src/bno055.c ****     }
 13491              		.loc 1 5335 18 view .LVU3789
 13492 0058 64B2     		sxtb	r4, r4
 13493              	.LVL1637:
5335:Core/Src/bno055.c ****     }
 13494              		.loc 1 5335 18 view .LVU3790
 13495 005a E2E7     		b	.L1009
 13496              	.L1011:
5354:Core/Src/bno055.c ****     }
 13497              		.loc 1 5354 18 view .LVU3791
 13498 005c 4FF0FF34 		mov	r4, #-1
 13499              	.LVL1638:
5354:Core/Src/bno055.c ****     }
 13500              		.loc 1 5354 18 view .LVU3792
 13501 0060 F2E7     		b	.L1010
 13502              	.LVL1639:
 13503              	.L1012:
5349:Core/Src/bno055.c ****         }
 13504              		.loc 1 5349 22 view .LVU3793
 13505 0062 4FF0FF34 		mov	r4, #-1
 13506              	.LVL1640:
5349:Core/Src/bno055.c ****         }
 13507              		.loc 1 5349 22 view .LVU3794
 13508 0066 EFE7     		b	.L1010
 13509              	.L1016:
 13510              		.align	2
 13511              	.L1015:
 13512 0068 00208C40 		.word	1082925056
 13513              		.cfi_endproc
 13514              	.LFE92:
 13516              		.section	.text.bno055_convert_double_gyro_y_dps,"ax",%progbits
 13517              		.align	1
 13518              		.global	bno055_convert_double_gyro_y_dps
 13519              		.syntax unified
 13520              		.thumb
 13521              		.thumb_func
ARM GAS  /tmp/ccOloYeZ.s 			page 413


 13523              	bno055_convert_double_gyro_y_dps:
 13524              	.LVL1641:
 13525              	.LFB93:
5375:Core/Src/bno055.c ****     /* Variable used to return value of
 13526              		.loc 1 5375 1 is_stmt 1 view -0
 13527              		.cfi_startproc
 13528              		@ args = 0, pretend = 0, frame = 8
 13529              		@ frame_needed = 0, uses_anonymous_args = 0
5375:Core/Src/bno055.c ****     /* Variable used to return value of
 13530              		.loc 1 5375 1 is_stmt 0 view .LVU3796
 13531 0000 30B5     		push	{r4, r5, lr}
 13532              		.cfi_def_cfa_offset 12
 13533              		.cfi_offset 4, -12
 13534              		.cfi_offset 5, -8
 13535              		.cfi_offset 14, -4
 13536 0002 83B0     		sub	sp, sp, #12
 13537              		.cfi_def_cfa_offset 24
 13538 0004 0546     		mov	r5, r0
5378:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
 13539              		.loc 1 5378 5 is_stmt 1 view .LVU3797
 13540              	.LVL1642:
5379:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13541              		.loc 1 5379 5 view .LVU3798
5379:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13542              		.loc 1 5379 9 is_stmt 0 view .LVU3799
 13543 0006 0023     		movs	r3, #0
 13544 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5380:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13545              		.loc 1 5380 5 is_stmt 1 view .LVU3800
 13546              	.LVL1643:
5381:Core/Src/bno055.c **** 
 13547              		.loc 1 5381 5 view .LVU3801
5381:Core/Src/bno055.c **** 
 13548              		.loc 1 5381 8 is_stmt 0 view .LVU3802
 13549 000c 8DF80530 		strb	r3, [sp, #5]
5385:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13550              		.loc 1 5385 5 is_stmt 1 view .LVU3803
5385:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13551              		.loc 1 5385 16 is_stmt 0 view .LVU3804
 13552 0010 0DF10500 		add	r0, sp, #5
 13553              	.LVL1644:
5385:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13554              		.loc 1 5385 16 view .LVU3805
 13555 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13556              	.LVL1645:
 13557 0018 0446     		mov	r4, r0
 13558              	.LVL1646:
5386:Core/Src/bno055.c ****     {
 13559              		.loc 1 5386 5 is_stmt 1 view .LVU3806
5386:Core/Src/bno055.c ****     {
 13560              		.loc 1 5386 22 is_stmt 0 view .LVU3807
 13561 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5386:Core/Src/bno055.c ****     {
 13562              		.loc 1 5386 8 view .LVU3808
 13563 001e ABB9     		cbnz	r3, .L1023
 13564              	.L1018:
5390:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 414


 13565              		.loc 1 5390 5 is_stmt 1 view .LVU3809
5390:Core/Src/bno055.c ****     {
 13566              		.loc 1 5390 8 is_stmt 0 view .LVU3810
 13567 0020 DCB9     		cbnz	r4, .L1020
5393:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13568              		.loc 1 5393 9 is_stmt 1 view .LVU3811
5393:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13569              		.loc 1 5393 21 is_stmt 0 view .LVU3812
 13570 0022 0DF10600 		add	r0, sp, #6
 13571 0026 FFF7FEFF 		bl	bno055_read_gyro_y
 13572              	.LVL1647:
5393:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13573              		.loc 1 5393 18 view .LVU3813
 13574 002a 54FA80F4 		uxtab	r4, r4, r0
 13575              	.LVL1648:
5393:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13576              		.loc 1 5393 18 view .LVU3814
 13577 002e 64B2     		sxtb	r4, r4
 13578              	.LVL1649:
5394:Core/Src/bno055.c ****         {
 13579              		.loc 1 5394 9 is_stmt 1 view .LVU3815
5394:Core/Src/bno055.c ****         {
 13580              		.loc 1 5394 12 is_stmt 0 view .LVU3816
 13581 0030 B4B9     		cbnz	r4, .L1021
5397:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 13582              		.loc 1 5397 13 is_stmt 1 view .LVU3817
5397:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 13583              		.loc 1 5397 22 is_stmt 0 view .LVU3818
 13584 0032 BDF90600 		ldrsh	r0, [sp, #6]
 13585 0036 FFF7FEFF 		bl	__aeabi_i2d
 13586              	.LVL1650:
5397:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 13587              		.loc 1 5397 20 view .LVU3819
 13588 003a 0022     		movs	r2, #0
 13589 003c 0A4B     		ldr	r3, .L1024
 13590 003e FFF7FEFF 		bl	__aeabi_dmul
 13591              	.LVL1651:
5398:Core/Src/bno055.c ****         }
 13592              		.loc 1 5398 13 is_stmt 1 view .LVU3820
5398:Core/Src/bno055.c ****         }
 13593              		.loc 1 5398 23 is_stmt 0 view .LVU3821
 13594 0042 C5E90001 		strd	r0, [r5]
 13595              	.LVL1652:
 13596              	.L1019:
5410:Core/Src/bno055.c **** }
 13597              		.loc 1 5410 5 is_stmt 1 view .LVU3822
5411:Core/Src/bno055.c **** 
 13598              		.loc 1 5411 1 is_stmt 0 view .LVU3823
 13599 0046 2046     		mov	r0, r4
 13600 0048 03B0     		add	sp, sp, #12
 13601              		.cfi_remember_state
 13602              		.cfi_def_cfa_offset 12
 13603              		@ sp needed
 13604 004a 30BD     		pop	{r4, r5, pc}
 13605              	.LVL1653:
 13606              	.L1023:
 13607              		.cfi_restore_state
ARM GAS  /tmp/ccOloYeZ.s 			page 415


5388:Core/Src/bno055.c ****     }
 13608              		.loc 1 5388 9 is_stmt 1 view .LVU3824
5388:Core/Src/bno055.c ****     }
 13609              		.loc 1 5388 21 is_stmt 0 view .LVU3825
 13610 004c 0020     		movs	r0, #0
 13611 004e FFF7FEFF 		bl	bno055_set_gyro_unit
 13612              	.LVL1654:
5388:Core/Src/bno055.c ****     }
 13613              		.loc 1 5388 18 view .LVU3826
 13614 0052 54FA80F4 		uxtab	r4, r4, r0
 13615              	.LVL1655:
5388:Core/Src/bno055.c ****     }
 13616              		.loc 1 5388 18 view .LVU3827
 13617 0056 64B2     		sxtb	r4, r4
 13618              	.LVL1656:
5388:Core/Src/bno055.c ****     }
 13619              		.loc 1 5388 18 view .LVU3828
 13620 0058 E2E7     		b	.L1018
 13621              	.L1020:
5407:Core/Src/bno055.c ****     }
 13622              		.loc 1 5407 18 view .LVU3829
 13623 005a 4FF0FF34 		mov	r4, #-1
 13624              	.LVL1657:
5407:Core/Src/bno055.c ****     }
 13625              		.loc 1 5407 18 view .LVU3830
 13626 005e F2E7     		b	.L1019
 13627              	.LVL1658:
 13628              	.L1021:
5402:Core/Src/bno055.c ****         }
 13629              		.loc 1 5402 22 view .LVU3831
 13630 0060 4FF0FF34 		mov	r4, #-1
 13631              	.LVL1659:
5402:Core/Src/bno055.c ****         }
 13632              		.loc 1 5402 22 view .LVU3832
 13633 0064 EFE7     		b	.L1019
 13634              	.L1025:
 13635 0066 00BF     		.align	2
 13636              	.L1024:
 13637 0068 0000B03F 		.word	1068498944
 13638              		.cfi_endproc
 13639              	.LFE93:
 13641              		.section	.text.bno055_convert_double_gyro_y_rps,"ax",%progbits
 13642              		.align	1
 13643              		.global	bno055_convert_double_gyro_y_rps
 13644              		.syntax unified
 13645              		.thumb
 13646              		.thumb_func
 13648              	bno055_convert_double_gyro_y_rps:
 13649              	.LVL1660:
 13650              	.LFB94:
5428:Core/Src/bno055.c ****     /* Variable used to return value of
 13651              		.loc 1 5428 1 is_stmt 1 view -0
 13652              		.cfi_startproc
 13653              		@ args = 0, pretend = 0, frame = 8
 13654              		@ frame_needed = 0, uses_anonymous_args = 0
5428:Core/Src/bno055.c ****     /* Variable used to return value of
 13655              		.loc 1 5428 1 is_stmt 0 view .LVU3834
ARM GAS  /tmp/ccOloYeZ.s 			page 416


 13656 0000 30B5     		push	{r4, r5, lr}
 13657              		.cfi_def_cfa_offset 12
 13658              		.cfi_offset 4, -12
 13659              		.cfi_offset 5, -8
 13660              		.cfi_offset 14, -4
 13661 0002 83B0     		sub	sp, sp, #12
 13662              		.cfi_def_cfa_offset 24
 13663 0004 0546     		mov	r5, r0
5431:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
 13664              		.loc 1 5431 5 is_stmt 1 view .LVU3835
 13665              	.LVL1661:
5432:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13666              		.loc 1 5432 5 view .LVU3836
5432:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13667              		.loc 1 5432 9 is_stmt 0 view .LVU3837
 13668 0006 0023     		movs	r3, #0
 13669 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5433:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13670              		.loc 1 5433 5 is_stmt 1 view .LVU3838
 13671              	.LVL1662:
5434:Core/Src/bno055.c **** 
 13672              		.loc 1 5434 5 view .LVU3839
5434:Core/Src/bno055.c **** 
 13673              		.loc 1 5434 8 is_stmt 0 view .LVU3840
 13674 000c 8DF80530 		strb	r3, [sp, #5]
5438:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13675              		.loc 1 5438 5 is_stmt 1 view .LVU3841
5438:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13676              		.loc 1 5438 16 is_stmt 0 view .LVU3842
 13677 0010 0DF10500 		add	r0, sp, #5
 13678              	.LVL1663:
5438:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13679              		.loc 1 5438 16 view .LVU3843
 13680 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13681              	.LVL1664:
 13682 0018 0446     		mov	r4, r0
 13683              	.LVL1665:
5439:Core/Src/bno055.c ****     {
 13684              		.loc 1 5439 5 is_stmt 1 view .LVU3844
5439:Core/Src/bno055.c ****     {
 13685              		.loc 1 5439 22 is_stmt 0 view .LVU3845
 13686 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5439:Core/Src/bno055.c ****     {
 13687              		.loc 1 5439 8 view .LVU3846
 13688 001e 012B     		cmp	r3, #1
 13689 0020 15D1     		bne	.L1032
 13690              	.L1027:
5443:Core/Src/bno055.c ****     {
 13691              		.loc 1 5443 5 is_stmt 1 view .LVU3847
5443:Core/Src/bno055.c ****     {
 13692              		.loc 1 5443 8 is_stmt 0 view .LVU3848
 13693 0022 DCB9     		cbnz	r4, .L1029
5446:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13694              		.loc 1 5446 9 is_stmt 1 view .LVU3849
5446:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13695              		.loc 1 5446 21 is_stmt 0 view .LVU3850
 13696 0024 0DF10600 		add	r0, sp, #6
ARM GAS  /tmp/ccOloYeZ.s 			page 417


 13697 0028 FFF7FEFF 		bl	bno055_read_gyro_y
 13698              	.LVL1666:
5446:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13699              		.loc 1 5446 18 view .LVU3851
 13700 002c 54FA80F4 		uxtab	r4, r4, r0
 13701              	.LVL1667:
5446:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13702              		.loc 1 5446 18 view .LVU3852
 13703 0030 64B2     		sxtb	r4, r4
 13704              	.LVL1668:
5447:Core/Src/bno055.c ****         {
 13705              		.loc 1 5447 9 is_stmt 1 view .LVU3853
5447:Core/Src/bno055.c ****         {
 13706              		.loc 1 5447 12 is_stmt 0 view .LVU3854
 13707 0032 B4B9     		cbnz	r4, .L1030
5450:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 13708              		.loc 1 5450 13 is_stmt 1 view .LVU3855
5450:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 13709              		.loc 1 5450 22 is_stmt 0 view .LVU3856
 13710 0034 BDF90600 		ldrsh	r0, [sp, #6]
 13711 0038 FFF7FEFF 		bl	__aeabi_i2d
 13712              	.LVL1669:
5450:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 13713              		.loc 1 5450 20 view .LVU3857
 13714 003c 0022     		movs	r2, #0
 13715 003e 0A4B     		ldr	r3, .L1033
 13716 0040 FFF7FEFF 		bl	__aeabi_ddiv
 13717              	.LVL1670:
5451:Core/Src/bno055.c ****         }
 13718              		.loc 1 5451 13 is_stmt 1 view .LVU3858
5451:Core/Src/bno055.c ****         }
 13719              		.loc 1 5451 23 is_stmt 0 view .LVU3859
 13720 0044 C5E90001 		strd	r0, [r5]
 13721              	.LVL1671:
 13722              	.L1028:
5463:Core/Src/bno055.c **** }
 13723              		.loc 1 5463 5 is_stmt 1 view .LVU3860
5464:Core/Src/bno055.c **** 
 13724              		.loc 1 5464 1 is_stmt 0 view .LVU3861
 13725 0048 2046     		mov	r0, r4
 13726 004a 03B0     		add	sp, sp, #12
 13727              		.cfi_remember_state
 13728              		.cfi_def_cfa_offset 12
 13729              		@ sp needed
 13730 004c 30BD     		pop	{r4, r5, pc}
 13731              	.LVL1672:
 13732              	.L1032:
 13733              		.cfi_restore_state
5441:Core/Src/bno055.c ****     }
 13734              		.loc 1 5441 9 is_stmt 1 view .LVU3862
5441:Core/Src/bno055.c ****     }
 13735              		.loc 1 5441 21 is_stmt 0 view .LVU3863
 13736 004e 0120     		movs	r0, #1
 13737 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 13738              	.LVL1673:
5441:Core/Src/bno055.c ****     }
 13739              		.loc 1 5441 18 view .LVU3864
ARM GAS  /tmp/ccOloYeZ.s 			page 418


 13740 0054 54FA80F4 		uxtab	r4, r4, r0
 13741              	.LVL1674:
5441:Core/Src/bno055.c ****     }
 13742              		.loc 1 5441 18 view .LVU3865
 13743 0058 64B2     		sxtb	r4, r4
 13744              	.LVL1675:
5441:Core/Src/bno055.c ****     }
 13745              		.loc 1 5441 18 view .LVU3866
 13746 005a E2E7     		b	.L1027
 13747              	.L1029:
5460:Core/Src/bno055.c ****     }
 13748              		.loc 1 5460 18 view .LVU3867
 13749 005c 4FF0FF34 		mov	r4, #-1
 13750              	.LVL1676:
5460:Core/Src/bno055.c ****     }
 13751              		.loc 1 5460 18 view .LVU3868
 13752 0060 F2E7     		b	.L1028
 13753              	.LVL1677:
 13754              	.L1030:
5455:Core/Src/bno055.c ****         }
 13755              		.loc 1 5455 22 view .LVU3869
 13756 0062 4FF0FF34 		mov	r4, #-1
 13757              	.LVL1678:
5455:Core/Src/bno055.c ****         }
 13758              		.loc 1 5455 22 view .LVU3870
 13759 0066 EFE7     		b	.L1028
 13760              	.L1034:
 13761              		.align	2
 13762              	.L1033:
 13763 0068 00208C40 		.word	1082925056
 13764              		.cfi_endproc
 13765              	.LFE94:
 13767              		.section	.text.bno055_convert_double_gyro_z_dps,"ax",%progbits
 13768              		.align	1
 13769              		.global	bno055_convert_double_gyro_z_dps
 13770              		.syntax unified
 13771              		.thumb
 13772              		.thumb_func
 13774              	bno055_convert_double_gyro_z_dps:
 13775              	.LVL1679:
 13776              	.LFB95:
5481:Core/Src/bno055.c ****     /* Variable used to return value of
 13777              		.loc 1 5481 1 is_stmt 1 view -0
 13778              		.cfi_startproc
 13779              		@ args = 0, pretend = 0, frame = 8
 13780              		@ frame_needed = 0, uses_anonymous_args = 0
5481:Core/Src/bno055.c ****     /* Variable used to return value of
 13781              		.loc 1 5481 1 is_stmt 0 view .LVU3872
 13782 0000 30B5     		push	{r4, r5, lr}
 13783              		.cfi_def_cfa_offset 12
 13784              		.cfi_offset 4, -12
 13785              		.cfi_offset 5, -8
 13786              		.cfi_offset 14, -4
 13787 0002 83B0     		sub	sp, sp, #12
 13788              		.cfi_def_cfa_offset 24
 13789 0004 0546     		mov	r5, r0
5484:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccOloYeZ.s 			page 419


 13790              		.loc 1 5484 5 is_stmt 1 view .LVU3873
 13791              	.LVL1680:
5485:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13792              		.loc 1 5485 5 view .LVU3874
5485:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13793              		.loc 1 5485 9 is_stmt 0 view .LVU3875
 13794 0006 0023     		movs	r3, #0
 13795 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5486:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13796              		.loc 1 5486 5 is_stmt 1 view .LVU3876
 13797              	.LVL1681:
5487:Core/Src/bno055.c **** 
 13798              		.loc 1 5487 5 view .LVU3877
5487:Core/Src/bno055.c **** 
 13799              		.loc 1 5487 8 is_stmt 0 view .LVU3878
 13800 000c 8DF80530 		strb	r3, [sp, #5]
5491:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13801              		.loc 1 5491 5 is_stmt 1 view .LVU3879
5491:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13802              		.loc 1 5491 16 is_stmt 0 view .LVU3880
 13803 0010 0DF10500 		add	r0, sp, #5
 13804              	.LVL1682:
5491:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13805              		.loc 1 5491 16 view .LVU3881
 13806 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13807              	.LVL1683:
 13808 0018 0446     		mov	r4, r0
 13809              	.LVL1684:
5492:Core/Src/bno055.c ****     {
 13810              		.loc 1 5492 5 is_stmt 1 view .LVU3882
5492:Core/Src/bno055.c ****     {
 13811              		.loc 1 5492 22 is_stmt 0 view .LVU3883
 13812 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5492:Core/Src/bno055.c ****     {
 13813              		.loc 1 5492 8 view .LVU3884
 13814 001e ABB9     		cbnz	r3, .L1041
 13815              	.L1036:
5496:Core/Src/bno055.c ****     {
 13816              		.loc 1 5496 5 is_stmt 1 view .LVU3885
5496:Core/Src/bno055.c ****     {
 13817              		.loc 1 5496 8 is_stmt 0 view .LVU3886
 13818 0020 DCB9     		cbnz	r4, .L1038
5499:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13819              		.loc 1 5499 9 is_stmt 1 view .LVU3887
5499:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13820              		.loc 1 5499 21 is_stmt 0 view .LVU3888
 13821 0022 0DF10600 		add	r0, sp, #6
 13822 0026 FFF7FEFF 		bl	bno055_read_gyro_z
 13823              	.LVL1685:
5499:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13824              		.loc 1 5499 18 view .LVU3889
 13825 002a 54FA80F4 		uxtab	r4, r4, r0
 13826              	.LVL1686:
5499:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13827              		.loc 1 5499 18 view .LVU3890
 13828 002e 64B2     		sxtb	r4, r4
 13829              	.LVL1687:
ARM GAS  /tmp/ccOloYeZ.s 			page 420


5500:Core/Src/bno055.c ****         {
 13830              		.loc 1 5500 9 is_stmt 1 view .LVU3891
5500:Core/Src/bno055.c ****         {
 13831              		.loc 1 5500 12 is_stmt 0 view .LVU3892
 13832 0030 B4B9     		cbnz	r4, .L1039
5503:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 13833              		.loc 1 5503 13 is_stmt 1 view .LVU3893
5503:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 13834              		.loc 1 5503 22 is_stmt 0 view .LVU3894
 13835 0032 BDF90600 		ldrsh	r0, [sp, #6]
 13836 0036 FFF7FEFF 		bl	__aeabi_i2d
 13837              	.LVL1688:
5503:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 13838              		.loc 1 5503 20 view .LVU3895
 13839 003a 0022     		movs	r2, #0
 13840 003c 0A4B     		ldr	r3, .L1042
 13841 003e FFF7FEFF 		bl	__aeabi_dmul
 13842              	.LVL1689:
5504:Core/Src/bno055.c ****         }
 13843              		.loc 1 5504 13 is_stmt 1 view .LVU3896
5504:Core/Src/bno055.c ****         }
 13844              		.loc 1 5504 23 is_stmt 0 view .LVU3897
 13845 0042 C5E90001 		strd	r0, [r5]
 13846              	.LVL1690:
 13847              	.L1037:
5516:Core/Src/bno055.c **** }
 13848              		.loc 1 5516 5 is_stmt 1 view .LVU3898
5517:Core/Src/bno055.c **** 
 13849              		.loc 1 5517 1 is_stmt 0 view .LVU3899
 13850 0046 2046     		mov	r0, r4
 13851 0048 03B0     		add	sp, sp, #12
 13852              		.cfi_remember_state
 13853              		.cfi_def_cfa_offset 12
 13854              		@ sp needed
 13855 004a 30BD     		pop	{r4, r5, pc}
 13856              	.LVL1691:
 13857              	.L1041:
 13858              		.cfi_restore_state
5494:Core/Src/bno055.c ****     }
 13859              		.loc 1 5494 9 is_stmt 1 view .LVU3900
5494:Core/Src/bno055.c ****     }
 13860              		.loc 1 5494 21 is_stmt 0 view .LVU3901
 13861 004c 0020     		movs	r0, #0
 13862 004e FFF7FEFF 		bl	bno055_set_gyro_unit
 13863              	.LVL1692:
5494:Core/Src/bno055.c ****     }
 13864              		.loc 1 5494 18 view .LVU3902
 13865 0052 54FA80F4 		uxtab	r4, r4, r0
 13866              	.LVL1693:
5494:Core/Src/bno055.c ****     }
 13867              		.loc 1 5494 18 view .LVU3903
 13868 0056 64B2     		sxtb	r4, r4
 13869              	.LVL1694:
5494:Core/Src/bno055.c ****     }
 13870              		.loc 1 5494 18 view .LVU3904
 13871 0058 E2E7     		b	.L1036
 13872              	.L1038:
ARM GAS  /tmp/ccOloYeZ.s 			page 421


5513:Core/Src/bno055.c ****     }
 13873              		.loc 1 5513 18 view .LVU3905
 13874 005a 4FF0FF34 		mov	r4, #-1
 13875              	.LVL1695:
5513:Core/Src/bno055.c ****     }
 13876              		.loc 1 5513 18 view .LVU3906
 13877 005e F2E7     		b	.L1037
 13878              	.LVL1696:
 13879              	.L1039:
5508:Core/Src/bno055.c ****         }
 13880              		.loc 1 5508 22 view .LVU3907
 13881 0060 4FF0FF34 		mov	r4, #-1
 13882              	.LVL1697:
5508:Core/Src/bno055.c ****         }
 13883              		.loc 1 5508 22 view .LVU3908
 13884 0064 EFE7     		b	.L1037
 13885              	.L1043:
 13886 0066 00BF     		.align	2
 13887              	.L1042:
 13888 0068 0000B03F 		.word	1068498944
 13889              		.cfi_endproc
 13890              	.LFE95:
 13892              		.section	.text.bno055_convert_double_gyro_z_rps,"ax",%progbits
 13893              		.align	1
 13894              		.global	bno055_convert_double_gyro_z_rps
 13895              		.syntax unified
 13896              		.thumb
 13897              		.thumb_func
 13899              	bno055_convert_double_gyro_z_rps:
 13900              	.LVL1698:
 13901              	.LFB96:
5534:Core/Src/bno055.c ****     /* Variable used to return value of
 13902              		.loc 1 5534 1 is_stmt 1 view -0
 13903              		.cfi_startproc
 13904              		@ args = 0, pretend = 0, frame = 8
 13905              		@ frame_needed = 0, uses_anonymous_args = 0
5534:Core/Src/bno055.c ****     /* Variable used to return value of
 13906              		.loc 1 5534 1 is_stmt 0 view .LVU3910
 13907 0000 30B5     		push	{r4, r5, lr}
 13908              		.cfi_def_cfa_offset 12
 13909              		.cfi_offset 4, -12
 13910              		.cfi_offset 5, -8
 13911              		.cfi_offset 14, -4
 13912 0002 83B0     		sub	sp, sp, #12
 13913              		.cfi_def_cfa_offset 24
 13914 0004 0546     		mov	r5, r0
5537:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
 13915              		.loc 1 5537 5 is_stmt 1 view .LVU3911
 13916              	.LVL1699:
5538:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13917              		.loc 1 5538 5 view .LVU3912
5538:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13918              		.loc 1 5538 9 is_stmt 0 view .LVU3913
 13919 0006 0023     		movs	r3, #0
 13920 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5539:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13921              		.loc 1 5539 5 is_stmt 1 view .LVU3914
ARM GAS  /tmp/ccOloYeZ.s 			page 422


 13922              	.LVL1700:
5540:Core/Src/bno055.c **** 
 13923              		.loc 1 5540 5 view .LVU3915
5540:Core/Src/bno055.c **** 
 13924              		.loc 1 5540 8 is_stmt 0 view .LVU3916
 13925 000c 8DF80530 		strb	r3, [sp, #5]
5544:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13926              		.loc 1 5544 5 is_stmt 1 view .LVU3917
5544:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13927              		.loc 1 5544 16 is_stmt 0 view .LVU3918
 13928 0010 0DF10500 		add	r0, sp, #5
 13929              	.LVL1701:
5544:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13930              		.loc 1 5544 16 view .LVU3919
 13931 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13932              	.LVL1702:
 13933 0018 0446     		mov	r4, r0
 13934              	.LVL1703:
5545:Core/Src/bno055.c ****     {
 13935              		.loc 1 5545 5 is_stmt 1 view .LVU3920
5545:Core/Src/bno055.c ****     {
 13936              		.loc 1 5545 22 is_stmt 0 view .LVU3921
 13937 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5545:Core/Src/bno055.c ****     {
 13938              		.loc 1 5545 8 view .LVU3922
 13939 001e 012B     		cmp	r3, #1
 13940 0020 15D1     		bne	.L1050
 13941              	.L1045:
5549:Core/Src/bno055.c ****     {
 13942              		.loc 1 5549 5 is_stmt 1 view .LVU3923
5549:Core/Src/bno055.c ****     {
 13943              		.loc 1 5549 8 is_stmt 0 view .LVU3924
 13944 0022 DCB9     		cbnz	r4, .L1047
5552:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13945              		.loc 1 5552 9 is_stmt 1 view .LVU3925
5552:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13946              		.loc 1 5552 21 is_stmt 0 view .LVU3926
 13947 0024 0DF10600 		add	r0, sp, #6
 13948 0028 FFF7FEFF 		bl	bno055_read_gyro_z
 13949              	.LVL1704:
5552:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13950              		.loc 1 5552 18 view .LVU3927
 13951 002c 54FA80F4 		uxtab	r4, r4, r0
 13952              	.LVL1705:
5552:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13953              		.loc 1 5552 18 view .LVU3928
 13954 0030 64B2     		sxtb	r4, r4
 13955              	.LVL1706:
5553:Core/Src/bno055.c ****         {
 13956              		.loc 1 5553 9 is_stmt 1 view .LVU3929
5553:Core/Src/bno055.c ****         {
 13957              		.loc 1 5553 12 is_stmt 0 view .LVU3930
 13958 0032 B4B9     		cbnz	r4, .L1048
5556:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 13959              		.loc 1 5556 13 is_stmt 1 view .LVU3931
5556:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 13960              		.loc 1 5556 22 is_stmt 0 view .LVU3932
ARM GAS  /tmp/ccOloYeZ.s 			page 423


 13961 0034 BDF90600 		ldrsh	r0, [sp, #6]
 13962 0038 FFF7FEFF 		bl	__aeabi_i2d
 13963              	.LVL1707:
5556:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 13964              		.loc 1 5556 20 view .LVU3933
 13965 003c 0022     		movs	r2, #0
 13966 003e 0A4B     		ldr	r3, .L1051
 13967 0040 FFF7FEFF 		bl	__aeabi_ddiv
 13968              	.LVL1708:
5557:Core/Src/bno055.c ****         }
 13969              		.loc 1 5557 13 is_stmt 1 view .LVU3934
5557:Core/Src/bno055.c ****         }
 13970              		.loc 1 5557 23 is_stmt 0 view .LVU3935
 13971 0044 C5E90001 		strd	r0, [r5]
 13972              	.LVL1709:
 13973              	.L1046:
5569:Core/Src/bno055.c **** }
 13974              		.loc 1 5569 5 is_stmt 1 view .LVU3936
5570:Core/Src/bno055.c **** 
 13975              		.loc 1 5570 1 is_stmt 0 view .LVU3937
 13976 0048 2046     		mov	r0, r4
 13977 004a 03B0     		add	sp, sp, #12
 13978              		.cfi_remember_state
 13979              		.cfi_def_cfa_offset 12
 13980              		@ sp needed
 13981 004c 30BD     		pop	{r4, r5, pc}
 13982              	.LVL1710:
 13983              	.L1050:
 13984              		.cfi_restore_state
5547:Core/Src/bno055.c ****     }
 13985              		.loc 1 5547 9 is_stmt 1 view .LVU3938
5547:Core/Src/bno055.c ****     }
 13986              		.loc 1 5547 21 is_stmt 0 view .LVU3939
 13987 004e 0120     		movs	r0, #1
 13988 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 13989              	.LVL1711:
5547:Core/Src/bno055.c ****     }
 13990              		.loc 1 5547 18 view .LVU3940
 13991 0054 54FA80F4 		uxtab	r4, r4, r0
 13992              	.LVL1712:
5547:Core/Src/bno055.c ****     }
 13993              		.loc 1 5547 18 view .LVU3941
 13994 0058 64B2     		sxtb	r4, r4
 13995              	.LVL1713:
5547:Core/Src/bno055.c ****     }
 13996              		.loc 1 5547 18 view .LVU3942
 13997 005a E2E7     		b	.L1045
 13998              	.L1047:
5566:Core/Src/bno055.c ****     }
 13999              		.loc 1 5566 18 view .LVU3943
 14000 005c 4FF0FF34 		mov	r4, #-1
 14001              	.LVL1714:
5566:Core/Src/bno055.c ****     }
 14002              		.loc 1 5566 18 view .LVU3944
 14003 0060 F2E7     		b	.L1046
 14004              	.LVL1715:
 14005              	.L1048:
ARM GAS  /tmp/ccOloYeZ.s 			page 424


5561:Core/Src/bno055.c ****         }
 14006              		.loc 1 5561 22 view .LVU3945
 14007 0062 4FF0FF34 		mov	r4, #-1
 14008              	.LVL1716:
5561:Core/Src/bno055.c ****         }
 14009              		.loc 1 5561 22 view .LVU3946
 14010 0066 EFE7     		b	.L1046
 14011              	.L1052:
 14012              		.align	2
 14013              	.L1051:
 14014 0068 00208C40 		.word	1082925056
 14015              		.cfi_endproc
 14016              	.LFE96:
 14018              		.section	.text.bno055_convert_double_gyro_xyz_dps,"ax",%progbits
 14019              		.align	1
 14020              		.global	bno055_convert_double_gyro_xyz_dps
 14021              		.syntax unified
 14022              		.thumb
 14023              		.thumb_func
 14025              	bno055_convert_double_gyro_xyz_dps:
 14026              	.LVL1717:
 14027              	.LFB97:
5591:Core/Src/bno055.c ****     /* Variable used to return value of
 14028              		.loc 1 5591 1 is_stmt 1 view -0
 14029              		.cfi_startproc
 14030              		@ args = 0, pretend = 0, frame = 16
 14031              		@ frame_needed = 0, uses_anonymous_args = 0
5591:Core/Src/bno055.c ****     /* Variable used to return value of
 14032              		.loc 1 5591 1 is_stmt 0 view .LVU3948
 14033 0000 30B5     		push	{r4, r5, lr}
 14034              		.cfi_def_cfa_offset 12
 14035              		.cfi_offset 4, -12
 14036              		.cfi_offset 5, -8
 14037              		.cfi_offset 14, -4
 14038 0002 85B0     		sub	sp, sp, #20
 14039              		.cfi_def_cfa_offset 32
 14040 0004 0546     		mov	r5, r0
5594:Core/Src/bno055.c ****     struct bno055_gyro_t reg_gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE }
 14041              		.loc 1 5594 5 is_stmt 1 view .LVU3949
 14042              	.LVL1718:
5595:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14043              		.loc 1 5595 5 view .LVU3950
5595:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14044              		.loc 1 5595 26 is_stmt 0 view .LVU3951
 14045 0006 0023     		movs	r3, #0
 14046 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 14047 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 14048 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
5596:Core/Src/bno055.c **** 
 14049              		.loc 1 5596 5 is_stmt 1 view .LVU3952
5596:Core/Src/bno055.c **** 
 14050              		.loc 1 5596 8 is_stmt 0 view .LVU3953
 14051 0014 8DF80730 		strb	r3, [sp, #7]
5600:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14052              		.loc 1 5600 5 is_stmt 1 view .LVU3954
5600:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14053              		.loc 1 5600 16 is_stmt 0 view .LVU3955
ARM GAS  /tmp/ccOloYeZ.s 			page 425


 14054 0018 0DF10700 		add	r0, sp, #7
 14055              	.LVL1719:
5600:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14056              		.loc 1 5600 16 view .LVU3956
 14057 001c FFF7FEFF 		bl	bno055_get_gyro_unit
 14058              	.LVL1720:
 14059 0020 0446     		mov	r4, r0
 14060              	.LVL1721:
5601:Core/Src/bno055.c ****     {
 14061              		.loc 1 5601 5 is_stmt 1 view .LVU3957
5601:Core/Src/bno055.c ****     {
 14062              		.loc 1 5601 22 is_stmt 0 view .LVU3958
 14063 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
5601:Core/Src/bno055.c ****     {
 14064              		.loc 1 5601 8 view .LVU3959
 14065 0026 43BB     		cbnz	r3, .L1059
 14066              	.L1054:
5605:Core/Src/bno055.c ****     {
 14067              		.loc 1 5605 5 is_stmt 1 view .LVU3960
5605:Core/Src/bno055.c ****     {
 14068              		.loc 1 5605 8 is_stmt 0 view .LVU3961
 14069 0028 74BB     		cbnz	r4, .L1056
5608:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14070              		.loc 1 5608 9 is_stmt 1 view .LVU3962
5608:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14071              		.loc 1 5608 21 is_stmt 0 view .LVU3963
 14072 002a 02A8     		add	r0, sp, #8
 14073 002c FFF7FEFF 		bl	bno055_read_gyro_xyz
 14074              	.LVL1722:
5608:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14075              		.loc 1 5608 18 view .LVU3964
 14076 0030 54FA80F4 		uxtab	r4, r4, r0
 14077              	.LVL1723:
5608:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14078              		.loc 1 5608 18 view .LVU3965
 14079 0034 64B2     		sxtb	r4, r4
 14080              	.LVL1724:
5609:Core/Src/bno055.c ****         {
 14081              		.loc 1 5609 9 is_stmt 1 view .LVU3966
5609:Core/Src/bno055.c ****         {
 14082              		.loc 1 5609 12 is_stmt 0 view .LVU3967
 14083 0036 54BB     		cbnz	r4, .L1057
5612:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 14084              		.loc 1 5612 13 is_stmt 1 view .LVU3968
5612:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 14085              		.loc 1 5612 27 is_stmt 0 view .LVU3969
 14086 0038 BDF90800 		ldrsh	r0, [sp, #8]
 14087 003c FFF7FEFF 		bl	__aeabi_i2d
 14088              	.LVL1725:
 14089 0040 0022     		movs	r2, #0
 14090 0042 144B     		ldr	r3, .L1060
 14091 0044 FFF7FEFF 		bl	__aeabi_dmul
 14092              	.LVL1726:
5612:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 14093              		.loc 1 5612 25 view .LVU3970
 14094 0048 C5E90001 		strd	r0, [r5]
5613:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_DPS);
ARM GAS  /tmp/ccOloYeZ.s 			page 426


 14095              		.loc 1 5613 13 is_stmt 1 view .LVU3971
5613:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 14096              		.loc 1 5613 27 is_stmt 0 view .LVU3972
 14097 004c BDF90A00 		ldrsh	r0, [sp, #10]
 14098 0050 FFF7FEFF 		bl	__aeabi_i2d
 14099              	.LVL1727:
 14100 0054 0022     		movs	r2, #0
 14101 0056 0F4B     		ldr	r3, .L1060
 14102 0058 FFF7FEFF 		bl	__aeabi_dmul
 14103              	.LVL1728:
5613:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 14104              		.loc 1 5613 25 view .LVU3973
 14105 005c C5E90201 		strd	r0, [r5, #8]
5614:Core/Src/bno055.c ****         }
 14106              		.loc 1 5614 13 is_stmt 1 view .LVU3974
5614:Core/Src/bno055.c ****         }
 14107              		.loc 1 5614 27 is_stmt 0 view .LVU3975
 14108 0060 BDF90C00 		ldrsh	r0, [sp, #12]
 14109 0064 FFF7FEFF 		bl	__aeabi_i2d
 14110              	.LVL1729:
 14111 0068 0022     		movs	r2, #0
 14112 006a 0A4B     		ldr	r3, .L1060
 14113 006c FFF7FEFF 		bl	__aeabi_dmul
 14114              	.LVL1730:
5614:Core/Src/bno055.c ****         }
 14115              		.loc 1 5614 25 view .LVU3976
 14116 0070 C5E90401 		strd	r0, [r5, #16]
 14117              	.LVL1731:
 14118              	.L1055:
5626:Core/Src/bno055.c **** }
 14119              		.loc 1 5626 5 is_stmt 1 view .LVU3977
5627:Core/Src/bno055.c **** 
 14120              		.loc 1 5627 1 is_stmt 0 view .LVU3978
 14121 0074 2046     		mov	r0, r4
 14122 0076 05B0     		add	sp, sp, #20
 14123              		.cfi_remember_state
 14124              		.cfi_def_cfa_offset 12
 14125              		@ sp needed
 14126 0078 30BD     		pop	{r4, r5, pc}
 14127              	.LVL1732:
 14128              	.L1059:
 14129              		.cfi_restore_state
5603:Core/Src/bno055.c ****     }
 14130              		.loc 1 5603 9 is_stmt 1 view .LVU3979
5603:Core/Src/bno055.c ****     }
 14131              		.loc 1 5603 21 is_stmt 0 view .LVU3980
 14132 007a 0020     		movs	r0, #0
 14133 007c FFF7FEFF 		bl	bno055_set_gyro_unit
 14134              	.LVL1733:
5603:Core/Src/bno055.c ****     }
 14135              		.loc 1 5603 18 view .LVU3981
 14136 0080 54FA80F4 		uxtab	r4, r4, r0
 14137              	.LVL1734:
5603:Core/Src/bno055.c ****     }
 14138              		.loc 1 5603 18 view .LVU3982
 14139 0084 64B2     		sxtb	r4, r4
 14140              	.LVL1735:
ARM GAS  /tmp/ccOloYeZ.s 			page 427


5603:Core/Src/bno055.c ****     }
 14141              		.loc 1 5603 18 view .LVU3983
 14142 0086 CFE7     		b	.L1054
 14143              	.L1056:
5623:Core/Src/bno055.c ****     }
 14144              		.loc 1 5623 18 view .LVU3984
 14145 0088 4FF0FF34 		mov	r4, #-1
 14146              	.LVL1736:
5623:Core/Src/bno055.c ****     }
 14147              		.loc 1 5623 18 view .LVU3985
 14148 008c F2E7     		b	.L1055
 14149              	.LVL1737:
 14150              	.L1057:
5618:Core/Src/bno055.c ****         }
 14151              		.loc 1 5618 22 view .LVU3986
 14152 008e 4FF0FF34 		mov	r4, #-1
 14153              	.LVL1738:
5618:Core/Src/bno055.c ****         }
 14154              		.loc 1 5618 22 view .LVU3987
 14155 0092 EFE7     		b	.L1055
 14156              	.L1061:
 14157              		.align	2
 14158              	.L1060:
 14159 0094 0000B03F 		.word	1068498944
 14160              		.cfi_endproc
 14161              	.LFE97:
 14163              		.section	.text.bno055_convert_double_gyro_xyz_rps,"ax",%progbits
 14164              		.align	1
 14165              		.global	bno055_convert_double_gyro_xyz_rps
 14166              		.syntax unified
 14167              		.thumb
 14168              		.thumb_func
 14170              	bno055_convert_double_gyro_xyz_rps:
 14171              	.LVL1739:
 14172              	.LFB98:
5648:Core/Src/bno055.c ****     /* Variable used to return value of
 14173              		.loc 1 5648 1 is_stmt 1 view -0
 14174              		.cfi_startproc
 14175              		@ args = 0, pretend = 0, frame = 16
 14176              		@ frame_needed = 0, uses_anonymous_args = 0
5648:Core/Src/bno055.c ****     /* Variable used to return value of
 14177              		.loc 1 5648 1 is_stmt 0 view .LVU3989
 14178 0000 30B5     		push	{r4, r5, lr}
 14179              		.cfi_def_cfa_offset 12
 14180              		.cfi_offset 4, -12
 14181              		.cfi_offset 5, -8
 14182              		.cfi_offset 14, -4
 14183 0002 85B0     		sub	sp, sp, #20
 14184              		.cfi_def_cfa_offset 32
 14185 0004 0546     		mov	r5, r0
5651:Core/Src/bno055.c ****     struct bno055_gyro_t reg_gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE }
 14186              		.loc 1 5651 5 is_stmt 1 view .LVU3990
 14187              	.LVL1740:
5652:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14188              		.loc 1 5652 5 view .LVU3991
5652:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14189              		.loc 1 5652 26 is_stmt 0 view .LVU3992
ARM GAS  /tmp/ccOloYeZ.s 			page 428


 14190 0006 0023     		movs	r3, #0
 14191 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 14192 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 14193 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
5653:Core/Src/bno055.c **** 
 14194              		.loc 1 5653 5 is_stmt 1 view .LVU3993
5653:Core/Src/bno055.c **** 
 14195              		.loc 1 5653 8 is_stmt 0 view .LVU3994
 14196 0014 8DF80730 		strb	r3, [sp, #7]
5657:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14197              		.loc 1 5657 5 is_stmt 1 view .LVU3995
5657:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14198              		.loc 1 5657 16 is_stmt 0 view .LVU3996
 14199 0018 0DF10700 		add	r0, sp, #7
 14200              	.LVL1741:
5657:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14201              		.loc 1 5657 16 view .LVU3997
 14202 001c FFF7FEFF 		bl	bno055_get_gyro_unit
 14203              	.LVL1742:
 14204 0020 0446     		mov	r4, r0
 14205              	.LVL1743:
5658:Core/Src/bno055.c ****     {
 14206              		.loc 1 5658 5 is_stmt 1 view .LVU3998
5658:Core/Src/bno055.c ****     {
 14207              		.loc 1 5658 22 is_stmt 0 view .LVU3999
 14208 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
5658:Core/Src/bno055.c ****     {
 14209              		.loc 1 5658 8 view .LVU4000
 14210 0026 012B     		cmp	r3, #1
 14211 0028 28D1     		bne	.L1068
 14212              	.L1063:
5662:Core/Src/bno055.c ****     {
 14213              		.loc 1 5662 5 is_stmt 1 view .LVU4001
5662:Core/Src/bno055.c ****     {
 14214              		.loc 1 5662 8 is_stmt 0 view .LVU4002
 14215 002a 74BB     		cbnz	r4, .L1065
5665:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14216              		.loc 1 5665 9 is_stmt 1 view .LVU4003
5665:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14217              		.loc 1 5665 21 is_stmt 0 view .LVU4004
 14218 002c 02A8     		add	r0, sp, #8
 14219 002e FFF7FEFF 		bl	bno055_read_gyro_xyz
 14220              	.LVL1744:
5665:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14221              		.loc 1 5665 18 view .LVU4005
 14222 0032 54FA80F4 		uxtab	r4, r4, r0
 14223              	.LVL1745:
5665:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14224              		.loc 1 5665 18 view .LVU4006
 14225 0036 64B2     		sxtb	r4, r4
 14226              	.LVL1746:
5666:Core/Src/bno055.c ****         {
 14227              		.loc 1 5666 9 is_stmt 1 view .LVU4007
5666:Core/Src/bno055.c ****         {
 14228              		.loc 1 5666 12 is_stmt 0 view .LVU4008
 14229 0038 54BB     		cbnz	r4, .L1066
5669:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_RPS);
ARM GAS  /tmp/ccOloYeZ.s 			page 429


 14230              		.loc 1 5669 13 is_stmt 1 view .LVU4009
5669:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 14231              		.loc 1 5669 27 is_stmt 0 view .LVU4010
 14232 003a BDF90800 		ldrsh	r0, [sp, #8]
 14233 003e FFF7FEFF 		bl	__aeabi_i2d
 14234              	.LVL1747:
 14235 0042 0022     		movs	r2, #0
 14236 0044 144B     		ldr	r3, .L1069
 14237 0046 FFF7FEFF 		bl	__aeabi_ddiv
 14238              	.LVL1748:
5669:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 14239              		.loc 1 5669 25 view .LVU4011
 14240 004a C5E90001 		strd	r0, [r5]
5670:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 14241              		.loc 1 5670 13 is_stmt 1 view .LVU4012
5670:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 14242              		.loc 1 5670 27 is_stmt 0 view .LVU4013
 14243 004e BDF90A00 		ldrsh	r0, [sp, #10]
 14244 0052 FFF7FEFF 		bl	__aeabi_i2d
 14245              	.LVL1749:
 14246 0056 0022     		movs	r2, #0
 14247 0058 0F4B     		ldr	r3, .L1069
 14248 005a FFF7FEFF 		bl	__aeabi_ddiv
 14249              	.LVL1750:
5670:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 14250              		.loc 1 5670 25 view .LVU4014
 14251 005e C5E90201 		strd	r0, [r5, #8]
5671:Core/Src/bno055.c ****         }
 14252              		.loc 1 5671 13 is_stmt 1 view .LVU4015
5671:Core/Src/bno055.c ****         }
 14253              		.loc 1 5671 27 is_stmt 0 view .LVU4016
 14254 0062 BDF90C00 		ldrsh	r0, [sp, #12]
 14255 0066 FFF7FEFF 		bl	__aeabi_i2d
 14256              	.LVL1751:
 14257 006a 0022     		movs	r2, #0
 14258 006c 0A4B     		ldr	r3, .L1069
 14259 006e FFF7FEFF 		bl	__aeabi_ddiv
 14260              	.LVL1752:
5671:Core/Src/bno055.c ****         }
 14261              		.loc 1 5671 25 view .LVU4017
 14262 0072 C5E90401 		strd	r0, [r5, #16]
 14263              	.LVL1753:
 14264              	.L1064:
5683:Core/Src/bno055.c **** }
 14265              		.loc 1 5683 5 is_stmt 1 view .LVU4018
5684:Core/Src/bno055.c **** 
 14266              		.loc 1 5684 1 is_stmt 0 view .LVU4019
 14267 0076 2046     		mov	r0, r4
 14268 0078 05B0     		add	sp, sp, #20
 14269              		.cfi_remember_state
 14270              		.cfi_def_cfa_offset 12
 14271              		@ sp needed
 14272 007a 30BD     		pop	{r4, r5, pc}
 14273              	.LVL1754:
 14274              	.L1068:
 14275              		.cfi_restore_state
5660:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccOloYeZ.s 			page 430


 14276              		.loc 1 5660 9 is_stmt 1 view .LVU4020
5660:Core/Src/bno055.c ****     }
 14277              		.loc 1 5660 21 is_stmt 0 view .LVU4021
 14278 007c 0120     		movs	r0, #1
 14279 007e FFF7FEFF 		bl	bno055_set_gyro_unit
 14280              	.LVL1755:
5660:Core/Src/bno055.c ****     }
 14281              		.loc 1 5660 18 view .LVU4022
 14282 0082 54FA80F4 		uxtab	r4, r4, r0
 14283              	.LVL1756:
5660:Core/Src/bno055.c ****     }
 14284              		.loc 1 5660 18 view .LVU4023
 14285 0086 64B2     		sxtb	r4, r4
 14286              	.LVL1757:
5660:Core/Src/bno055.c ****     }
 14287              		.loc 1 5660 18 view .LVU4024
 14288 0088 CFE7     		b	.L1063
 14289              	.L1065:
5680:Core/Src/bno055.c ****     }
 14290              		.loc 1 5680 18 view .LVU4025
 14291 008a 4FF0FF34 		mov	r4, #-1
 14292              	.LVL1758:
5680:Core/Src/bno055.c ****     }
 14293              		.loc 1 5680 18 view .LVU4026
 14294 008e F2E7     		b	.L1064
 14295              	.LVL1759:
 14296              	.L1066:
5675:Core/Src/bno055.c ****         }
 14297              		.loc 1 5675 22 view .LVU4027
 14298 0090 4FF0FF34 		mov	r4, #-1
 14299              	.LVL1760:
5675:Core/Src/bno055.c ****         }
 14300              		.loc 1 5675 22 view .LVU4028
 14301 0094 EFE7     		b	.L1064
 14302              	.L1070:
 14303 0096 00BF     		.align	2
 14304              	.L1069:
 14305 0098 00208C40 		.word	1082925056
 14306              		.cfi_endproc
 14307              	.LFE98:
 14309              		.section	.text.bno055_set_euler_unit,"ax",%progbits
 14310              		.align	1
 14311              		.global	bno055_set_euler_unit
 14312              		.syntax unified
 14313              		.thumb
 14314              		.thumb_func
 14316              	bno055_set_euler_unit:
 14317              	.LVL1761:
 14318              	.LFB138:
7731:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 14319              		.loc 1 7731 1 is_stmt 1 view -0
 14320              		.cfi_startproc
 14321              		@ args = 0, pretend = 0, frame = 8
 14322              		@ frame_needed = 0, uses_anonymous_args = 0
7731:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 14323              		.loc 1 7731 1 is_stmt 0 view .LVU4030
 14324 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccOloYeZ.s 			page 431


 14325              		.cfi_def_cfa_offset 12
 14326              		.cfi_offset 4, -12
 14327              		.cfi_offset 5, -8
 14328              		.cfi_offset 14, -4
 14329 0002 83B0     		sub	sp, sp, #12
 14330              		.cfi_def_cfa_offset 24
7732:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 14331              		.loc 1 7732 5 is_stmt 1 view .LVU4031
 14332              	.LVL1762:
7733:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 14333              		.loc 1 7733 5 view .LVU4032
7733:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 14334              		.loc 1 7733 8 is_stmt 0 view .LVU4033
 14335 0004 0023     		movs	r3, #0
 14336 0006 8DF80730 		strb	r3, [sp, #7]
7734:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 14337              		.loc 1 7734 5 is_stmt 1 view .LVU4034
7734:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 14338              		.loc 1 7734 8 is_stmt 0 view .LVU4035
 14339 000a 8DF80630 		strb	r3, [sp, #6]
7735:Core/Src/bno055.c **** 
 14340              		.loc 1 7735 5 is_stmt 1 view .LVU4036
 14341              	.LVL1763:
7738:Core/Src/bno055.c ****     {
 14342              		.loc 1 7738 5 view .LVU4037
7738:Core/Src/bno055.c ****     {
 14343              		.loc 1 7738 18 is_stmt 0 view .LVU4038
 14344 000e 254B     		ldr	r3, .L1081
 14345 0010 1B68     		ldr	r3, [r3]
7738:Core/Src/bno055.c ****     {
 14346              		.loc 1 7738 8 view .LVU4039
 14347 0012 002B     		cmp	r3, #0
 14348 0014 43D0     		beq	.L1075
 14349 0016 0546     		mov	r5, r0
7747:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 14350              		.loc 1 7747 9 is_stmt 1 view .LVU4040
7747:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 14351              		.loc 1 7747 19 is_stmt 0 view .LVU4041
 14352 0018 0DF10600 		add	r0, sp, #6
 14353              	.LVL1764:
7747:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 14354              		.loc 1 7747 19 view .LVU4042
 14355 001c FFF7FEFF 		bl	bno055_get_operation_mode
 14356              	.LVL1765:
7748:Core/Src/bno055.c ****         {
 14357              		.loc 1 7748 9 is_stmt 1 view .LVU4043
7748:Core/Src/bno055.c ****         {
 14358              		.loc 1 7748 12 is_stmt 0 view .LVU4044
 14359 0020 0446     		mov	r4, r0
 14360 0022 58BB     		cbnz	r0, .L1076
7750:Core/Src/bno055.c ****             {
 14361              		.loc 1 7750 13 is_stmt 1 view .LVU4045
7750:Core/Src/bno055.c ****             {
 14362              		.loc 1 7750 32 is_stmt 0 view .LVU4046
 14363 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
7750:Core/Src/bno055.c ****             {
 14364              		.loc 1 7750 16 view .LVU4047
ARM GAS  /tmp/ccOloYeZ.s 			page 432


 14365 0028 13BB     		cbnz	r3, .L1079
 14366              	.LVL1766:
 14367              	.L1074:
7754:Core/Src/bno055.c ****             {
 14368              		.loc 1 7754 13 is_stmt 1 view .LVU4048
7754:Core/Src/bno055.c ****             {
 14369              		.loc 1 7754 16 is_stmt 0 view .LVU4049
 14370 002a 7CBB     		cbnz	r4, .L1077
7757:Core/Src/bno055.c ****                                                           BNO055_EULER_UNIT_REG,
 14371              		.loc 1 7757 17 is_stmt 1 view .LVU4050
7757:Core/Src/bno055.c ****                                                           BNO055_EULER_UNIT_REG,
 14372              		.loc 1 7757 36 is_stmt 0 view .LVU4051
 14373 002c 1D4B     		ldr	r3, .L1081
 14374 002e 1868     		ldr	r0, [r3]
 14375 0030 0469     		ldr	r4, [r0, #16]
 14376              	.LVL1767:
7757:Core/Src/bno055.c ****                                                           BNO055_EULER_UNIT_REG,
 14377              		.loc 1 7757 28 view .LVU4052
 14378 0032 0123     		movs	r3, #1
 14379 0034 0DF10702 		add	r2, sp, #7
 14380 0038 3B21     		movs	r1, #59
 14381 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 14382 003c A047     		blx	r4
 14383              	.LVL1768:
7761:Core/Src/bno055.c ****                 {
 14384              		.loc 1 7761 17 is_stmt 1 view .LVU4053
7761:Core/Src/bno055.c ****                 {
 14385              		.loc 1 7761 20 is_stmt 0 view .LVU4054
 14386 003e 0446     		mov	r4, r0
 14387 0040 F0B9     		cbnz	r0, .L1073
7763:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 14388              		.loc 1 7763 21 is_stmt 1 view .LVU4055
7763:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 14389              		.loc 1 7763 32 is_stmt 0 view .LVU4056
 14390 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 14391 0046 A800     		lsls	r0, r5, #2
 14392              	.LVL1769:
7763:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 14393              		.loc 1 7763 32 view .LVU4057
 14394 0048 00F00400 		and	r0, r0, #4
 14395 004c 23F00403 		bic	r3, r3, #4
 14396 0050 0343     		orrs	r3, r3, r0
7763:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 14397              		.loc 1 7763 30 view .LVU4058
 14398 0052 8DF80730 		strb	r3, [sp, #7]
7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 14399              		.loc 1 7764 21 is_stmt 1 view .LVU4059
7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 14400              		.loc 1 7764 41 is_stmt 0 view .LVU4060
 14401 0056 134B     		ldr	r3, .L1081
 14402 0058 1868     		ldr	r0, [r3]
 14403 005a C568     		ldr	r5, [r0, #12]
7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 14404              		.loc 1 7764 33 view .LVU4061
 14405 005c 0123     		movs	r3, #1
 14406 005e 0DF10702 		add	r2, sp, #7
 14407 0062 3B21     		movs	r1, #59
ARM GAS  /tmp/ccOloYeZ.s 			page 433


 14408 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 14409 0066 A847     		blx	r5
 14410              	.LVL1770:
7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 14411              		.loc 1 7764 30 view .LVU4062
 14412 0068 54FA80F0 		uxtab	r0, r4, r0
 14413 006c 44B2     		sxtb	r4, r0
 14414              	.LVL1771:
7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 14415              		.loc 1 7764 30 view .LVU4063
 14416 006e 07E0     		b	.L1073
 14417              	.LVL1772:
 14418              	.L1079:
7752:Core/Src/bno055.c ****             }
 14419              		.loc 1 7752 17 is_stmt 1 view .LVU4064
7752:Core/Src/bno055.c ****             }
 14420              		.loc 1 7752 28 is_stmt 0 view .LVU4065
 14421 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 14422              	.LVL1773:
7752:Core/Src/bno055.c ****             }
 14423              		.loc 1 7752 25 view .LVU4066
 14424 0074 54FA80F4 		uxtab	r4, r4, r0
 14425 0078 64B2     		sxtb	r4, r4
 14426              	.LVL1774:
7752:Core/Src/bno055.c ****             }
 14427              		.loc 1 7752 25 view .LVU4067
 14428 007a D6E7     		b	.L1074
 14429              	.LVL1775:
 14430              	.L1076:
7777:Core/Src/bno055.c ****         }
 14431              		.loc 1 7777 22 view .LVU4068
 14432 007c 4FF0FF34 		mov	r4, #-1
 14433              	.LVL1776:
 14434              	.L1073:
7780:Core/Src/bno055.c ****     {
 14435              		.loc 1 7780 5 is_stmt 1 view .LVU4069
7780:Core/Src/bno055.c ****     {
 14436              		.loc 1 7780 24 is_stmt 0 view .LVU4070
 14437 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
7780:Core/Src/bno055.c ****     {
 14438              		.loc 1 7780 8 view .LVU4071
 14439 0084 28B9     		cbnz	r0, .L1080
 14440              	.LVL1777:
 14441              	.L1072:
7788:Core/Src/bno055.c **** 
 14442              		.loc 1 7788 1 view .LVU4072
 14443 0086 2046     		mov	r0, r4
 14444 0088 03B0     		add	sp, sp, #12
 14445              		.cfi_remember_state
 14446              		.cfi_def_cfa_offset 12
 14447              		@ sp needed
 14448 008a 30BD     		pop	{r4, r5, pc}
 14449              	.LVL1778:
 14450              	.L1077:
 14451              		.cfi_restore_state
7772:Core/Src/bno055.c ****             }
 14452              		.loc 1 7772 26 view .LVU4073
ARM GAS  /tmp/ccOloYeZ.s 			page 434


 14453 008c 4FF0FF34 		mov	r4, #-1
 14454              	.LVL1779:
7772:Core/Src/bno055.c ****             }
 14455              		.loc 1 7772 26 view .LVU4074
 14456 0090 F6E7     		b	.L1073
 14457              	.LVL1780:
 14458              	.L1080:
7784:Core/Src/bno055.c ****     }
 14459              		.loc 1 7784 9 is_stmt 1 view .LVU4075
7784:Core/Src/bno055.c ****     }
 14460              		.loc 1 7784 21 is_stmt 0 view .LVU4076
 14461 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 14462              	.LVL1781:
7784:Core/Src/bno055.c ****     }
 14463              		.loc 1 7784 18 view .LVU4077
 14464 0096 54FA80F0 		uxtab	r0, r4, r0
 14465 009a 44B2     		sxtb	r4, r0
 14466              	.LVL1782:
7784:Core/Src/bno055.c ****     }
 14467              		.loc 1 7784 18 view .LVU4078
 14468 009c F3E7     		b	.L1072
 14469              	.LVL1783:
 14470              	.L1075:
7740:Core/Src/bno055.c ****     }
 14471              		.loc 1 7740 16 view .LVU4079
 14472 009e 6FF07E04 		mvn	r4, #126
 14473 00a2 F0E7     		b	.L1072
 14474              	.L1082:
 14475              		.align	2
 14476              	.L1081:
 14477 00a4 00000000 		.word	p_bno055
 14478              		.cfi_endproc
 14479              	.LFE138:
 14481              		.section	.text.bno055_convert_float_euler_h_deg,"ax",%progbits
 14482              		.align	1
 14483              		.global	bno055_convert_float_euler_h_deg
 14484              		.syntax unified
 14485              		.thumb
 14486              		.thumb_func
 14488              	bno055_convert_float_euler_h_deg:
 14489              	.LVL1784:
 14490              	.LFB61:
3880:Core/Src/bno055.c ****     /* Variable used to return value of
 14491              		.loc 1 3880 1 is_stmt 1 view -0
 14492              		.cfi_startproc
 14493              		@ args = 0, pretend = 0, frame = 8
 14494              		@ frame_needed = 0, uses_anonymous_args = 0
3880:Core/Src/bno055.c ****     /* Variable used to return value of
 14495              		.loc 1 3880 1 is_stmt 0 view .LVU4081
 14496 0000 30B5     		push	{r4, r5, lr}
 14497              		.cfi_def_cfa_offset 12
 14498              		.cfi_offset 4, -12
 14499              		.cfi_offset 5, -8
 14500              		.cfi_offset 14, -4
 14501 0002 83B0     		sub	sp, sp, #12
 14502              		.cfi_def_cfa_offset 24
 14503 0004 0546     		mov	r5, r0
ARM GAS  /tmp/ccOloYeZ.s 			page 435


3883:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
 14504              		.loc 1 3883 5 is_stmt 1 view .LVU4082
 14505              	.LVL1785:
3884:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 14506              		.loc 1 3884 5 view .LVU4083
3884:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 14507              		.loc 1 3884 9 is_stmt 0 view .LVU4084
 14508 0006 0023     		movs	r3, #0
 14509 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3885:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 14510              		.loc 1 3885 5 is_stmt 1 view .LVU4085
 14511              	.LVL1786:
3886:Core/Src/bno055.c **** 
 14512              		.loc 1 3886 5 view .LVU4086
3886:Core/Src/bno055.c **** 
 14513              		.loc 1 3886 8 is_stmt 0 view .LVU4087
 14514 000c 8DF80530 		strb	r3, [sp, #5]
3890:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 14515              		.loc 1 3890 5 is_stmt 1 view .LVU4088
3890:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 14516              		.loc 1 3890 16 is_stmt 0 view .LVU4089
 14517 0010 0DF10500 		add	r0, sp, #5
 14518              	.LVL1787:
3890:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 14519              		.loc 1 3890 16 view .LVU4090
 14520 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 14521              	.LVL1788:
 14522 0018 0446     		mov	r4, r0
 14523              	.LVL1789:
3891:Core/Src/bno055.c ****     {
 14524              		.loc 1 3891 5 is_stmt 1 view .LVU4091
3891:Core/Src/bno055.c ****     {
 14525              		.loc 1 3891 23 is_stmt 0 view .LVU4092
 14526 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3891:Core/Src/bno055.c ****     {
 14527              		.loc 1 3891 8 view .LVU4093
 14528 001e B3B9     		cbnz	r3, .L1089
 14529              	.L1084:
3895:Core/Src/bno055.c ****     {
 14530              		.loc 1 3895 5 is_stmt 1 view .LVU4094
3895:Core/Src/bno055.c ****     {
 14531              		.loc 1 3895 8 is_stmt 0 view .LVU4095
 14532 0020 E4B9     		cbnz	r4, .L1086
3898:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14533              		.loc 1 3898 9 is_stmt 1 view .LVU4096
3898:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14534              		.loc 1 3898 21 is_stmt 0 view .LVU4097
 14535 0022 0DF10600 		add	r0, sp, #6
 14536 0026 FFF7FEFF 		bl	bno055_read_euler_h
 14537              	.LVL1790:
3898:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14538              		.loc 1 3898 18 view .LVU4098
 14539 002a 54FA80F4 		uxtab	r4, r4, r0
 14540              	.LVL1791:
3898:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14541              		.loc 1 3898 18 view .LVU4099
 14542 002e 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccOloYeZ.s 			page 436


 14543              	.LVL1792:
3899:Core/Src/bno055.c ****         {
 14544              		.loc 1 3899 9 is_stmt 1 view .LVU4100
3899:Core/Src/bno055.c ****         {
 14545              		.loc 1 3899 12 is_stmt 0 view .LVU4101
 14546 0030 BCB9     		cbnz	r4, .L1087
3902:Core/Src/bno055.c ****             *euler_h_f = data_f;
 14547              		.loc 1 3902 13 is_stmt 1 view .LVU4102
3902:Core/Src/bno055.c ****             *euler_h_f = data_f;
 14548              		.loc 1 3902 46 is_stmt 0 view .LVU4103
 14549 0032 BDF90600 		ldrsh	r0, [sp, #6]
 14550 0036 FFF7FEFF 		bl	__aeabi_i2d
 14551              	.LVL1793:
 14552 003a 0022     		movs	r2, #0
 14553 003c 0A4B     		ldr	r3, .L1090
 14554 003e FFF7FEFF 		bl	__aeabi_dmul
 14555              	.LVL1794:
3902:Core/Src/bno055.c ****             *euler_h_f = data_f;
 14556              		.loc 1 3902 20 view .LVU4104
 14557 0042 FFF7FEFF 		bl	__aeabi_d2f
 14558              	.LVL1795:
3903:Core/Src/bno055.c ****         }
 14559              		.loc 1 3903 13 is_stmt 1 view .LVU4105
3903:Core/Src/bno055.c ****         }
 14560              		.loc 1 3903 24 is_stmt 0 view .LVU4106
 14561 0046 2860     		str	r0, [r5]	@ float
 14562              	.LVL1796:
 14563              	.L1085:
3915:Core/Src/bno055.c **** }
 14564              		.loc 1 3915 5 is_stmt 1 view .LVU4107
3916:Core/Src/bno055.c **** 
 14565              		.loc 1 3916 1 is_stmt 0 view .LVU4108
 14566 0048 2046     		mov	r0, r4
 14567 004a 03B0     		add	sp, sp, #12
 14568              		.cfi_remember_state
 14569              		.cfi_def_cfa_offset 12
 14570              		@ sp needed
 14571 004c 30BD     		pop	{r4, r5, pc}
 14572              	.LVL1797:
 14573              	.L1089:
 14574              		.cfi_restore_state
3893:Core/Src/bno055.c ****     }
 14575              		.loc 1 3893 9 is_stmt 1 view .LVU4109
3893:Core/Src/bno055.c ****     }
 14576              		.loc 1 3893 21 is_stmt 0 view .LVU4110
 14577 004e 0020     		movs	r0, #0
 14578 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 14579              	.LVL1798:
3893:Core/Src/bno055.c ****     }
 14580              		.loc 1 3893 18 view .LVU4111
 14581 0054 54FA80F4 		uxtab	r4, r4, r0
 14582              	.LVL1799:
3893:Core/Src/bno055.c ****     }
 14583              		.loc 1 3893 18 view .LVU4112
 14584 0058 64B2     		sxtb	r4, r4
 14585              	.LVL1800:
3893:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccOloYeZ.s 			page 437


 14586              		.loc 1 3893 18 view .LVU4113
 14587 005a E1E7     		b	.L1084
 14588              	.L1086:
3912:Core/Src/bno055.c ****     }
 14589              		.loc 1 3912 18 view .LVU4114
 14590 005c 4FF0FF34 		mov	r4, #-1
 14591              	.LVL1801:
3912:Core/Src/bno055.c ****     }
 14592              		.loc 1 3912 18 view .LVU4115
 14593 0060 F2E7     		b	.L1085
 14594              	.LVL1802:
 14595              	.L1087:
3907:Core/Src/bno055.c ****         }
 14596              		.loc 1 3907 22 view .LVU4116
 14597 0062 4FF0FF34 		mov	r4, #-1
 14598              	.LVL1803:
3907:Core/Src/bno055.c ****         }
 14599              		.loc 1 3907 22 view .LVU4117
 14600 0066 EFE7     		b	.L1085
 14601              	.L1091:
 14602              		.align	2
 14603              	.L1090:
 14604 0068 0000B03F 		.word	1068498944
 14605              		.cfi_endproc
 14606              	.LFE61:
 14608              		.section	.text.bno055_convert_float_euler_h_rad,"ax",%progbits
 14609              		.align	1
 14610              		.global	bno055_convert_float_euler_h_rad
 14611              		.syntax unified
 14612              		.thumb
 14613              		.thumb_func
 14615              	bno055_convert_float_euler_h_rad:
 14616              	.LVL1804:
 14617              	.LFB62:
3931:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 14618              		.loc 1 3931 1 is_stmt 1 view -0
 14619              		.cfi_startproc
 14620              		@ args = 0, pretend = 0, frame = 8
 14621              		@ frame_needed = 0, uses_anonymous_args = 0
3931:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 14622              		.loc 1 3931 1 is_stmt 0 view .LVU4119
 14623 0000 30B5     		push	{r4, r5, lr}
 14624              		.cfi_def_cfa_offset 12
 14625              		.cfi_offset 4, -12
 14626              		.cfi_offset 5, -8
 14627              		.cfi_offset 14, -4
 14628 0002 83B0     		sub	sp, sp, #12
 14629              		.cfi_def_cfa_offset 24
 14630 0004 0546     		mov	r5, r0
3932:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
 14631              		.loc 1 3932 5 is_stmt 1 view .LVU4120
 14632              	.LVL1805:
3933:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 14633              		.loc 1 3933 5 view .LVU4121
3933:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 14634              		.loc 1 3933 9 is_stmt 0 view .LVU4122
 14635 0006 0023     		movs	r3, #0
ARM GAS  /tmp/ccOloYeZ.s 			page 438


 14636 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3934:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 14637              		.loc 1 3934 5 is_stmt 1 view .LVU4123
 14638              	.LVL1806:
3935:Core/Src/bno055.c **** 
 14639              		.loc 1 3935 5 view .LVU4124
3935:Core/Src/bno055.c **** 
 14640              		.loc 1 3935 8 is_stmt 0 view .LVU4125
 14641 000c 8DF80530 		strb	r3, [sp, #5]
3937:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 14642              		.loc 1 3937 5 is_stmt 1 view .LVU4126
3937:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 14643              		.loc 1 3937 16 is_stmt 0 view .LVU4127
 14644 0010 0DF10500 		add	r0, sp, #5
 14645              	.LVL1807:
3937:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 14646              		.loc 1 3937 16 view .LVU4128
 14647 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 14648              	.LVL1808:
 14649 0018 0446     		mov	r4, r0
 14650              	.LVL1809:
3938:Core/Src/bno055.c ****     {
 14651              		.loc 1 3938 5 is_stmt 1 view .LVU4129
3938:Core/Src/bno055.c ****     {
 14652              		.loc 1 3938 23 is_stmt 0 view .LVU4130
 14653 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3938:Core/Src/bno055.c ****     {
 14654              		.loc 1 3938 8 view .LVU4131
 14655 001e 012B     		cmp	r3, #1
 14656 0020 16D1     		bne	.L1098
 14657              	.L1093:
3944:Core/Src/bno055.c ****     {
 14658              		.loc 1 3944 5 is_stmt 1 view .LVU4132
3944:Core/Src/bno055.c ****     {
 14659              		.loc 1 3944 8 is_stmt 0 view .LVU4133
 14660 0022 E4B9     		cbnz	r4, .L1095
3947:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14661              		.loc 1 3947 9 is_stmt 1 view .LVU4134
3947:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14662              		.loc 1 3947 21 is_stmt 0 view .LVU4135
 14663 0024 0DF10600 		add	r0, sp, #6
 14664 0028 FFF7FEFF 		bl	bno055_read_euler_h
 14665              	.LVL1810:
3947:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14666              		.loc 1 3947 18 view .LVU4136
 14667 002c 54FA80F4 		uxtab	r4, r4, r0
 14668              	.LVL1811:
3947:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14669              		.loc 1 3947 18 view .LVU4137
 14670 0030 64B2     		sxtb	r4, r4
 14671              	.LVL1812:
3948:Core/Src/bno055.c ****         {
 14672              		.loc 1 3948 9 is_stmt 1 view .LVU4138
3948:Core/Src/bno055.c ****         {
 14673              		.loc 1 3948 12 is_stmt 0 view .LVU4139
 14674 0032 BCB9     		cbnz	r4, .L1096
3951:Core/Src/bno055.c ****             *euler_h_f = data_f;
ARM GAS  /tmp/ccOloYeZ.s 			page 439


 14675              		.loc 1 3951 13 is_stmt 1 view .LVU4140
3951:Core/Src/bno055.c ****             *euler_h_f = data_f;
 14676              		.loc 1 3951 46 is_stmt 0 view .LVU4141
 14677 0034 BDF90600 		ldrsh	r0, [sp, #6]
 14678 0038 FFF7FEFF 		bl	__aeabi_i2d
 14679              	.LVL1813:
 14680 003c 0022     		movs	r2, #0
 14681 003e 0B4B     		ldr	r3, .L1099
 14682 0040 FFF7FEFF 		bl	__aeabi_ddiv
 14683              	.LVL1814:
3951:Core/Src/bno055.c ****             *euler_h_f = data_f;
 14684              		.loc 1 3951 20 view .LVU4142
 14685 0044 FFF7FEFF 		bl	__aeabi_d2f
 14686              	.LVL1815:
3952:Core/Src/bno055.c ****         }
 14687              		.loc 1 3952 13 is_stmt 1 view .LVU4143
3952:Core/Src/bno055.c ****         }
 14688              		.loc 1 3952 24 is_stmt 0 view .LVU4144
 14689 0048 2860     		str	r0, [r5]	@ float
 14690              	.LVL1816:
 14691              	.L1094:
3964:Core/Src/bno055.c **** }
 14692              		.loc 1 3964 5 is_stmt 1 view .LVU4145
3965:Core/Src/bno055.c **** 
 14693              		.loc 1 3965 1 is_stmt 0 view .LVU4146
 14694 004a 2046     		mov	r0, r4
 14695 004c 03B0     		add	sp, sp, #12
 14696              		.cfi_remember_state
 14697              		.cfi_def_cfa_offset 12
 14698              		@ sp needed
 14699 004e 30BD     		pop	{r4, r5, pc}
 14700              	.LVL1817:
 14701              	.L1098:
 14702              		.cfi_restore_state
3942:Core/Src/bno055.c ****     }
 14703              		.loc 1 3942 9 is_stmt 1 view .LVU4147
3942:Core/Src/bno055.c ****     }
 14704              		.loc 1 3942 21 is_stmt 0 view .LVU4148
 14705 0050 0120     		movs	r0, #1
 14706 0052 FFF7FEFF 		bl	bno055_set_euler_unit
 14707              	.LVL1818:
3942:Core/Src/bno055.c ****     }
 14708              		.loc 1 3942 18 view .LVU4149
 14709 0056 54FA80F4 		uxtab	r4, r4, r0
 14710              	.LVL1819:
3942:Core/Src/bno055.c ****     }
 14711              		.loc 1 3942 18 view .LVU4150
 14712 005a 64B2     		sxtb	r4, r4
 14713              	.LVL1820:
3942:Core/Src/bno055.c ****     }
 14714              		.loc 1 3942 18 view .LVU4151
 14715 005c E1E7     		b	.L1093
 14716              	.L1095:
3961:Core/Src/bno055.c ****     }
 14717              		.loc 1 3961 18 view .LVU4152
 14718 005e 4FF0FF34 		mov	r4, #-1
 14719              	.LVL1821:
ARM GAS  /tmp/ccOloYeZ.s 			page 440


3961:Core/Src/bno055.c ****     }
 14720              		.loc 1 3961 18 view .LVU4153
 14721 0062 F2E7     		b	.L1094
 14722              	.LVL1822:
 14723              	.L1096:
3956:Core/Src/bno055.c ****         }
 14724              		.loc 1 3956 22 view .LVU4154
 14725 0064 4FF0FF34 		mov	r4, #-1
 14726              	.LVL1823:
3956:Core/Src/bno055.c ****         }
 14727              		.loc 1 3956 22 view .LVU4155
 14728 0068 EFE7     		b	.L1094
 14729              	.L1100:
 14730 006a 00BF     		.align	2
 14731              	.L1099:
 14732 006c 00208C40 		.word	1082925056
 14733              		.cfi_endproc
 14734              	.LFE62:
 14736              		.section	.text.bno055_convert_float_euler_r_deg,"ax",%progbits
 14737              		.align	1
 14738              		.global	bno055_convert_float_euler_r_deg
 14739              		.syntax unified
 14740              		.thumb
 14741              		.thumb_func
 14743              	bno055_convert_float_euler_r_deg:
 14744              	.LVL1824:
 14745              	.LFB63:
3979:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 14746              		.loc 1 3979 1 is_stmt 1 view -0
 14747              		.cfi_startproc
 14748              		@ args = 0, pretend = 0, frame = 8
 14749              		@ frame_needed = 0, uses_anonymous_args = 0
3979:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 14750              		.loc 1 3979 1 is_stmt 0 view .LVU4157
 14751 0000 30B5     		push	{r4, r5, lr}
 14752              		.cfi_def_cfa_offset 12
 14753              		.cfi_offset 4, -12
 14754              		.cfi_offset 5, -8
 14755              		.cfi_offset 14, -4
 14756 0002 83B0     		sub	sp, sp, #12
 14757              		.cfi_def_cfa_offset 24
 14758 0004 0546     		mov	r5, r0
3980:Core/Src/bno055.c ****     s16 reg_euler_r = BNO055_INIT_VALUE;
 14759              		.loc 1 3980 5 is_stmt 1 view .LVU4158
 14760              	.LVL1825:
3981:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 14761              		.loc 1 3981 5 view .LVU4159
3981:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 14762              		.loc 1 3981 9 is_stmt 0 view .LVU4160
 14763 0006 0023     		movs	r3, #0
 14764 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3982:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 14765              		.loc 1 3982 5 is_stmt 1 view .LVU4161
 14766              	.LVL1826:
3983:Core/Src/bno055.c **** 
 14767              		.loc 1 3983 5 view .LVU4162
3983:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 441


 14768              		.loc 1 3983 8 is_stmt 0 view .LVU4163
 14769 000c 8DF80530 		strb	r3, [sp, #5]
3987:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 14770              		.loc 1 3987 5 is_stmt 1 view .LVU4164
3987:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 14771              		.loc 1 3987 16 is_stmt 0 view .LVU4165
 14772 0010 0DF10500 		add	r0, sp, #5
 14773              	.LVL1827:
3987:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 14774              		.loc 1 3987 16 view .LVU4166
 14775 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 14776              	.LVL1828:
 14777 0018 0446     		mov	r4, r0
 14778              	.LVL1829:
3988:Core/Src/bno055.c ****     {
 14779              		.loc 1 3988 5 is_stmt 1 view .LVU4167
3988:Core/Src/bno055.c ****     {
 14780              		.loc 1 3988 23 is_stmt 0 view .LVU4168
 14781 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3988:Core/Src/bno055.c ****     {
 14782              		.loc 1 3988 8 view .LVU4169
 14783 001e B3B9     		cbnz	r3, .L1107
 14784              	.L1102:
3992:Core/Src/bno055.c ****     {
 14785              		.loc 1 3992 5 is_stmt 1 view .LVU4170
3992:Core/Src/bno055.c ****     {
 14786              		.loc 1 3992 8 is_stmt 0 view .LVU4171
 14787 0020 E4B9     		cbnz	r4, .L1104
3995:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14788              		.loc 1 3995 9 is_stmt 1 view .LVU4172
3995:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14789              		.loc 1 3995 21 is_stmt 0 view .LVU4173
 14790 0022 0DF10600 		add	r0, sp, #6
 14791 0026 FFF7FEFF 		bl	bno055_read_euler_r
 14792              	.LVL1830:
3995:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14793              		.loc 1 3995 18 view .LVU4174
 14794 002a 54FA80F4 		uxtab	r4, r4, r0
 14795              	.LVL1831:
3995:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14796              		.loc 1 3995 18 view .LVU4175
 14797 002e 64B2     		sxtb	r4, r4
 14798              	.LVL1832:
3996:Core/Src/bno055.c ****         {
 14799              		.loc 1 3996 9 is_stmt 1 view .LVU4176
3996:Core/Src/bno055.c ****         {
 14800              		.loc 1 3996 12 is_stmt 0 view .LVU4177
 14801 0030 BCB9     		cbnz	r4, .L1105
3999:Core/Src/bno055.c ****             *euler_r_f = data_f;
 14802              		.loc 1 3999 13 is_stmt 1 view .LVU4178
3999:Core/Src/bno055.c ****             *euler_r_f = data_f;
 14803              		.loc 1 3999 42 is_stmt 0 view .LVU4179
 14804 0032 BDF90600 		ldrsh	r0, [sp, #6]
 14805 0036 FFF7FEFF 		bl	__aeabi_i2d
 14806              	.LVL1833:
 14807 003a 0022     		movs	r2, #0
 14808 003c 0A4B     		ldr	r3, .L1108
ARM GAS  /tmp/ccOloYeZ.s 			page 442


 14809 003e FFF7FEFF 		bl	__aeabi_dmul
 14810              	.LVL1834:
3999:Core/Src/bno055.c ****             *euler_r_f = data_f;
 14811              		.loc 1 3999 20 view .LVU4180
 14812 0042 FFF7FEFF 		bl	__aeabi_d2f
 14813              	.LVL1835:
4000:Core/Src/bno055.c ****         }
 14814              		.loc 1 4000 13 is_stmt 1 view .LVU4181
4000:Core/Src/bno055.c ****         }
 14815              		.loc 1 4000 24 is_stmt 0 view .LVU4182
 14816 0046 2860     		str	r0, [r5]	@ float
 14817              	.LVL1836:
 14818              	.L1103:
4012:Core/Src/bno055.c **** }
 14819              		.loc 1 4012 5 is_stmt 1 view .LVU4183
4013:Core/Src/bno055.c **** 
 14820              		.loc 1 4013 1 is_stmt 0 view .LVU4184
 14821 0048 2046     		mov	r0, r4
 14822 004a 03B0     		add	sp, sp, #12
 14823              		.cfi_remember_state
 14824              		.cfi_def_cfa_offset 12
 14825              		@ sp needed
 14826 004c 30BD     		pop	{r4, r5, pc}
 14827              	.LVL1837:
 14828              	.L1107:
 14829              		.cfi_restore_state
3990:Core/Src/bno055.c ****     }
 14830              		.loc 1 3990 9 is_stmt 1 view .LVU4185
3990:Core/Src/bno055.c ****     }
 14831              		.loc 1 3990 21 is_stmt 0 view .LVU4186
 14832 004e 0020     		movs	r0, #0
 14833 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 14834              	.LVL1838:
3990:Core/Src/bno055.c ****     }
 14835              		.loc 1 3990 18 view .LVU4187
 14836 0054 54FA80F4 		uxtab	r4, r4, r0
 14837              	.LVL1839:
3990:Core/Src/bno055.c ****     }
 14838              		.loc 1 3990 18 view .LVU4188
 14839 0058 64B2     		sxtb	r4, r4
 14840              	.LVL1840:
3990:Core/Src/bno055.c ****     }
 14841              		.loc 1 3990 18 view .LVU4189
 14842 005a E1E7     		b	.L1102
 14843              	.L1104:
4009:Core/Src/bno055.c ****     }
 14844              		.loc 1 4009 18 view .LVU4190
 14845 005c 4FF0FF34 		mov	r4, #-1
 14846              	.LVL1841:
4009:Core/Src/bno055.c ****     }
 14847              		.loc 1 4009 18 view .LVU4191
 14848 0060 F2E7     		b	.L1103
 14849              	.LVL1842:
 14850              	.L1105:
4004:Core/Src/bno055.c ****         }
 14851              		.loc 1 4004 22 view .LVU4192
 14852 0062 4FF0FF34 		mov	r4, #-1
ARM GAS  /tmp/ccOloYeZ.s 			page 443


 14853              	.LVL1843:
4004:Core/Src/bno055.c ****         }
 14854              		.loc 1 4004 22 view .LVU4193
 14855 0066 EFE7     		b	.L1103
 14856              	.L1109:
 14857              		.align	2
 14858              	.L1108:
 14859 0068 0000B03F 		.word	1068498944
 14860              		.cfi_endproc
 14861              	.LFE63:
 14863              		.section	.text.bno055_convert_float_euler_r_rad,"ax",%progbits
 14864              		.align	1
 14865              		.global	bno055_convert_float_euler_r_rad
 14866              		.syntax unified
 14867              		.thumb
 14868              		.thumb_func
 14870              	bno055_convert_float_euler_r_rad:
 14871              	.LVL1844:
 14872              	.LFB64:
4027:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 14873              		.loc 1 4027 1 is_stmt 1 view -0
 14874              		.cfi_startproc
 14875              		@ args = 0, pretend = 0, frame = 8
 14876              		@ frame_needed = 0, uses_anonymous_args = 0
4027:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 14877              		.loc 1 4027 1 is_stmt 0 view .LVU4195
 14878 0000 30B5     		push	{r4, r5, lr}
 14879              		.cfi_def_cfa_offset 12
 14880              		.cfi_offset 4, -12
 14881              		.cfi_offset 5, -8
 14882              		.cfi_offset 14, -4
 14883 0002 83B0     		sub	sp, sp, #12
 14884              		.cfi_def_cfa_offset 24
 14885 0004 0546     		mov	r5, r0
4028:Core/Src/bno055.c ****     s16 reg_euler_r_f = BNO055_INIT_VALUE;
 14886              		.loc 1 4028 5 is_stmt 1 view .LVU4196
 14887              	.LVL1845:
4029:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 14888              		.loc 1 4029 5 view .LVU4197
4029:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 14889              		.loc 1 4029 9 is_stmt 0 view .LVU4198
 14890 0006 0023     		movs	r3, #0
 14891 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4030:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 14892              		.loc 1 4030 5 is_stmt 1 view .LVU4199
 14893              	.LVL1846:
4031:Core/Src/bno055.c **** 
 14894              		.loc 1 4031 5 view .LVU4200
4031:Core/Src/bno055.c **** 
 14895              		.loc 1 4031 8 is_stmt 0 view .LVU4201
 14896 000c 8DF80530 		strb	r3, [sp, #5]
4035:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 14897              		.loc 1 4035 5 is_stmt 1 view .LVU4202
4035:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 14898              		.loc 1 4035 16 is_stmt 0 view .LVU4203
 14899 0010 0DF10500 		add	r0, sp, #5
 14900              	.LVL1847:
ARM GAS  /tmp/ccOloYeZ.s 			page 444


4035:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 14901              		.loc 1 4035 16 view .LVU4204
 14902 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 14903              	.LVL1848:
 14904 0018 0446     		mov	r4, r0
 14905              	.LVL1849:
4036:Core/Src/bno055.c ****     {
 14906              		.loc 1 4036 5 is_stmt 1 view .LVU4205
4036:Core/Src/bno055.c ****     {
 14907              		.loc 1 4036 23 is_stmt 0 view .LVU4206
 14908 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4036:Core/Src/bno055.c ****     {
 14909              		.loc 1 4036 8 view .LVU4207
 14910 001e 012B     		cmp	r3, #1
 14911 0020 16D1     		bne	.L1116
 14912              	.L1111:
4040:Core/Src/bno055.c ****     {
 14913              		.loc 1 4040 5 is_stmt 1 view .LVU4208
4040:Core/Src/bno055.c ****     {
 14914              		.loc 1 4040 8 is_stmt 0 view .LVU4209
 14915 0022 E4B9     		cbnz	r4, .L1113
4043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14916              		.loc 1 4043 9 is_stmt 1 view .LVU4210
4043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14917              		.loc 1 4043 21 is_stmt 0 view .LVU4211
 14918 0024 0DF10600 		add	r0, sp, #6
 14919 0028 FFF7FEFF 		bl	bno055_read_euler_r
 14920              	.LVL1850:
4043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14921              		.loc 1 4043 18 view .LVU4212
 14922 002c 54FA80F4 		uxtab	r4, r4, r0
 14923              	.LVL1851:
4043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14924              		.loc 1 4043 18 view .LVU4213
 14925 0030 64B2     		sxtb	r4, r4
 14926              	.LVL1852:
4044:Core/Src/bno055.c ****         {
 14927              		.loc 1 4044 9 is_stmt 1 view .LVU4214
4044:Core/Src/bno055.c ****         {
 14928              		.loc 1 4044 12 is_stmt 0 view .LVU4215
 14929 0032 BCB9     		cbnz	r4, .L1114
4047:Core/Src/bno055.c ****             *euler_r_f = data_f;
 14930              		.loc 1 4047 13 is_stmt 1 view .LVU4216
4047:Core/Src/bno055.c ****             *euler_r_f = data_f;
 14931              		.loc 1 4047 44 is_stmt 0 view .LVU4217
 14932 0034 BDF90600 		ldrsh	r0, [sp, #6]
 14933 0038 FFF7FEFF 		bl	__aeabi_i2d
 14934              	.LVL1853:
 14935 003c 0022     		movs	r2, #0
 14936 003e 0B4B     		ldr	r3, .L1117
 14937 0040 FFF7FEFF 		bl	__aeabi_ddiv
 14938              	.LVL1854:
4047:Core/Src/bno055.c ****             *euler_r_f = data_f;
 14939              		.loc 1 4047 20 view .LVU4218
 14940 0044 FFF7FEFF 		bl	__aeabi_d2f
 14941              	.LVL1855:
4048:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 445


 14942              		.loc 1 4048 13 is_stmt 1 view .LVU4219
4048:Core/Src/bno055.c ****         }
 14943              		.loc 1 4048 24 is_stmt 0 view .LVU4220
 14944 0048 2860     		str	r0, [r5]	@ float
 14945              	.LVL1856:
 14946              	.L1112:
4060:Core/Src/bno055.c **** }
 14947              		.loc 1 4060 5 is_stmt 1 view .LVU4221
4061:Core/Src/bno055.c **** 
 14948              		.loc 1 4061 1 is_stmt 0 view .LVU4222
 14949 004a 2046     		mov	r0, r4
 14950 004c 03B0     		add	sp, sp, #12
 14951              		.cfi_remember_state
 14952              		.cfi_def_cfa_offset 12
 14953              		@ sp needed
 14954 004e 30BD     		pop	{r4, r5, pc}
 14955              	.LVL1857:
 14956              	.L1116:
 14957              		.cfi_restore_state
4038:Core/Src/bno055.c ****     }
 14958              		.loc 1 4038 9 is_stmt 1 view .LVU4223
4038:Core/Src/bno055.c ****     }
 14959              		.loc 1 4038 21 is_stmt 0 view .LVU4224
 14960 0050 0120     		movs	r0, #1
 14961 0052 FFF7FEFF 		bl	bno055_set_euler_unit
 14962              	.LVL1858:
4038:Core/Src/bno055.c ****     }
 14963              		.loc 1 4038 18 view .LVU4225
 14964 0056 54FA80F4 		uxtab	r4, r4, r0
 14965              	.LVL1859:
4038:Core/Src/bno055.c ****     }
 14966              		.loc 1 4038 18 view .LVU4226
 14967 005a 64B2     		sxtb	r4, r4
 14968              	.LVL1860:
4038:Core/Src/bno055.c ****     }
 14969              		.loc 1 4038 18 view .LVU4227
 14970 005c E1E7     		b	.L1111
 14971              	.L1113:
4057:Core/Src/bno055.c ****     }
 14972              		.loc 1 4057 18 view .LVU4228
 14973 005e 4FF0FF34 		mov	r4, #-1
 14974              	.LVL1861:
4057:Core/Src/bno055.c ****     }
 14975              		.loc 1 4057 18 view .LVU4229
 14976 0062 F2E7     		b	.L1112
 14977              	.LVL1862:
 14978              	.L1114:
4052:Core/Src/bno055.c ****         }
 14979              		.loc 1 4052 22 view .LVU4230
 14980 0064 4FF0FF34 		mov	r4, #-1
 14981              	.LVL1863:
4052:Core/Src/bno055.c ****         }
 14982              		.loc 1 4052 22 view .LVU4231
 14983 0068 EFE7     		b	.L1112
 14984              	.L1118:
 14985 006a 00BF     		.align	2
 14986              	.L1117:
ARM GAS  /tmp/ccOloYeZ.s 			page 446


 14987 006c 00208C40 		.word	1082925056
 14988              		.cfi_endproc
 14989              	.LFE64:
 14991              		.section	.text.bno055_convert_float_euler_p_deg,"ax",%progbits
 14992              		.align	1
 14993              		.global	bno055_convert_float_euler_p_deg
 14994              		.syntax unified
 14995              		.thumb
 14996              		.thumb_func
 14998              	bno055_convert_float_euler_p_deg:
 14999              	.LVL1864:
 15000              	.LFB65:
4075:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15001              		.loc 1 4075 1 is_stmt 1 view -0
 15002              		.cfi_startproc
 15003              		@ args = 0, pretend = 0, frame = 8
 15004              		@ frame_needed = 0, uses_anonymous_args = 0
4075:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15005              		.loc 1 4075 1 is_stmt 0 view .LVU4233
 15006 0000 30B5     		push	{r4, r5, lr}
 15007              		.cfi_def_cfa_offset 12
 15008              		.cfi_offset 4, -12
 15009              		.cfi_offset 5, -8
 15010              		.cfi_offset 14, -4
 15011 0002 83B0     		sub	sp, sp, #12
 15012              		.cfi_def_cfa_offset 24
 15013 0004 0546     		mov	r5, r0
4076:Core/Src/bno055.c ****     s16 reg_euler_p_f = BNO055_INIT_VALUE;
 15014              		.loc 1 4076 5 is_stmt 1 view .LVU4234
 15015              	.LVL1865:
4077:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15016              		.loc 1 4077 5 view .LVU4235
4077:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15017              		.loc 1 4077 9 is_stmt 0 view .LVU4236
 15018 0006 0023     		movs	r3, #0
 15019 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4078:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15020              		.loc 1 4078 5 is_stmt 1 view .LVU4237
 15021              	.LVL1866:
4079:Core/Src/bno055.c **** 
 15022              		.loc 1 4079 5 view .LVU4238
4079:Core/Src/bno055.c **** 
 15023              		.loc 1 4079 8 is_stmt 0 view .LVU4239
 15024 000c 8DF80530 		strb	r3, [sp, #5]
4083:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15025              		.loc 1 4083 5 is_stmt 1 view .LVU4240
4083:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15026              		.loc 1 4083 16 is_stmt 0 view .LVU4241
 15027 0010 0DF10500 		add	r0, sp, #5
 15028              	.LVL1867:
4083:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15029              		.loc 1 4083 16 view .LVU4242
 15030 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15031              	.LVL1868:
 15032 0018 0446     		mov	r4, r0
 15033              	.LVL1869:
4084:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 447


 15034              		.loc 1 4084 5 is_stmt 1 view .LVU4243
4084:Core/Src/bno055.c ****     {
 15035              		.loc 1 4084 23 is_stmt 0 view .LVU4244
 15036 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4084:Core/Src/bno055.c ****     {
 15037              		.loc 1 4084 8 view .LVU4245
 15038 001e B3B9     		cbnz	r3, .L1125
 15039              	.L1120:
4088:Core/Src/bno055.c ****     {
 15040              		.loc 1 4088 5 is_stmt 1 view .LVU4246
4088:Core/Src/bno055.c ****     {
 15041              		.loc 1 4088 8 is_stmt 0 view .LVU4247
 15042 0020 E4B9     		cbnz	r4, .L1122
4091:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15043              		.loc 1 4091 9 is_stmt 1 view .LVU4248
4091:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15044              		.loc 1 4091 21 is_stmt 0 view .LVU4249
 15045 0022 0DF10600 		add	r0, sp, #6
 15046 0026 FFF7FEFF 		bl	bno055_read_euler_p
 15047              	.LVL1870:
4091:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15048              		.loc 1 4091 18 view .LVU4250
 15049 002a 54FA80F4 		uxtab	r4, r4, r0
 15050              	.LVL1871:
4091:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15051              		.loc 1 4091 18 view .LVU4251
 15052 002e 64B2     		sxtb	r4, r4
 15053              	.LVL1872:
4092:Core/Src/bno055.c ****         {
 15054              		.loc 1 4092 9 is_stmt 1 view .LVU4252
4092:Core/Src/bno055.c ****         {
 15055              		.loc 1 4092 12 is_stmt 0 view .LVU4253
 15056 0030 BCB9     		cbnz	r4, .L1123
4095:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15057              		.loc 1 4095 13 is_stmt 1 view .LVU4254
4095:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15058              		.loc 1 4095 44 is_stmt 0 view .LVU4255
 15059 0032 BDF90600 		ldrsh	r0, [sp, #6]
 15060 0036 FFF7FEFF 		bl	__aeabi_i2d
 15061              	.LVL1873:
 15062 003a 0022     		movs	r2, #0
 15063 003c 0A4B     		ldr	r3, .L1126
 15064 003e FFF7FEFF 		bl	__aeabi_dmul
 15065              	.LVL1874:
4095:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15066              		.loc 1 4095 20 view .LVU4256
 15067 0042 FFF7FEFF 		bl	__aeabi_d2f
 15068              	.LVL1875:
4096:Core/Src/bno055.c ****         }
 15069              		.loc 1 4096 13 is_stmt 1 view .LVU4257
4096:Core/Src/bno055.c ****         }
 15070              		.loc 1 4096 24 is_stmt 0 view .LVU4258
 15071 0046 2860     		str	r0, [r5]	@ float
 15072              	.LVL1876:
 15073              	.L1121:
4108:Core/Src/bno055.c **** }
 15074              		.loc 1 4108 5 is_stmt 1 view .LVU4259
ARM GAS  /tmp/ccOloYeZ.s 			page 448


4109:Core/Src/bno055.c **** 
 15075              		.loc 1 4109 1 is_stmt 0 view .LVU4260
 15076 0048 2046     		mov	r0, r4
 15077 004a 03B0     		add	sp, sp, #12
 15078              		.cfi_remember_state
 15079              		.cfi_def_cfa_offset 12
 15080              		@ sp needed
 15081 004c 30BD     		pop	{r4, r5, pc}
 15082              	.LVL1877:
 15083              	.L1125:
 15084              		.cfi_restore_state
4086:Core/Src/bno055.c ****     }
 15085              		.loc 1 4086 9 is_stmt 1 view .LVU4261
4086:Core/Src/bno055.c ****     }
 15086              		.loc 1 4086 21 is_stmt 0 view .LVU4262
 15087 004e 0020     		movs	r0, #0
 15088 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 15089              	.LVL1878:
4086:Core/Src/bno055.c ****     }
 15090              		.loc 1 4086 18 view .LVU4263
 15091 0054 54FA80F4 		uxtab	r4, r4, r0
 15092              	.LVL1879:
4086:Core/Src/bno055.c ****     }
 15093              		.loc 1 4086 18 view .LVU4264
 15094 0058 64B2     		sxtb	r4, r4
 15095              	.LVL1880:
4086:Core/Src/bno055.c ****     }
 15096              		.loc 1 4086 18 view .LVU4265
 15097 005a E1E7     		b	.L1120
 15098              	.L1122:
4105:Core/Src/bno055.c ****     }
 15099              		.loc 1 4105 18 view .LVU4266
 15100 005c 4FF0FF34 		mov	r4, #-1
 15101              	.LVL1881:
4105:Core/Src/bno055.c ****     }
 15102              		.loc 1 4105 18 view .LVU4267
 15103 0060 F2E7     		b	.L1121
 15104              	.LVL1882:
 15105              	.L1123:
4100:Core/Src/bno055.c ****         }
 15106              		.loc 1 4100 22 view .LVU4268
 15107 0062 4FF0FF34 		mov	r4, #-1
 15108              	.LVL1883:
4100:Core/Src/bno055.c ****         }
 15109              		.loc 1 4100 22 view .LVU4269
 15110 0066 EFE7     		b	.L1121
 15111              	.L1127:
 15112              		.align	2
 15113              	.L1126:
 15114 0068 0000B03F 		.word	1068498944
 15115              		.cfi_endproc
 15116              	.LFE65:
 15118              		.section	.text.bno055_convert_float_euler_p_rad,"ax",%progbits
 15119              		.align	1
 15120              		.global	bno055_convert_float_euler_p_rad
 15121              		.syntax unified
 15122              		.thumb
ARM GAS  /tmp/ccOloYeZ.s 			page 449


 15123              		.thumb_func
 15125              	bno055_convert_float_euler_p_rad:
 15126              	.LVL1884:
 15127              	.LFB66:
4124:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15128              		.loc 1 4124 1 is_stmt 1 view -0
 15129              		.cfi_startproc
 15130              		@ args = 0, pretend = 0, frame = 8
 15131              		@ frame_needed = 0, uses_anonymous_args = 0
4124:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15132              		.loc 1 4124 1 is_stmt 0 view .LVU4271
 15133 0000 30B5     		push	{r4, r5, lr}
 15134              		.cfi_def_cfa_offset 12
 15135              		.cfi_offset 4, -12
 15136              		.cfi_offset 5, -8
 15137              		.cfi_offset 14, -4
 15138 0002 83B0     		sub	sp, sp, #12
 15139              		.cfi_def_cfa_offset 24
 15140 0004 0546     		mov	r5, r0
4125:Core/Src/bno055.c ****     s16 reg_euler_p_f = BNO055_INIT_VALUE;
 15141              		.loc 1 4125 5 is_stmt 1 view .LVU4272
 15142              	.LVL1885:
4126:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15143              		.loc 1 4126 5 view .LVU4273
4126:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15144              		.loc 1 4126 9 is_stmt 0 view .LVU4274
 15145 0006 0023     		movs	r3, #0
 15146 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4127:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15147              		.loc 1 4127 5 is_stmt 1 view .LVU4275
 15148              	.LVL1886:
4128:Core/Src/bno055.c **** 
 15149              		.loc 1 4128 5 view .LVU4276
4128:Core/Src/bno055.c **** 
 15150              		.loc 1 4128 8 is_stmt 0 view .LVU4277
 15151 000c 8DF80530 		strb	r3, [sp, #5]
4132:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15152              		.loc 1 4132 5 is_stmt 1 view .LVU4278
4132:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15153              		.loc 1 4132 16 is_stmt 0 view .LVU4279
 15154 0010 0DF10500 		add	r0, sp, #5
 15155              	.LVL1887:
4132:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15156              		.loc 1 4132 16 view .LVU4280
 15157 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15158              	.LVL1888:
 15159 0018 0446     		mov	r4, r0
 15160              	.LVL1889:
4133:Core/Src/bno055.c ****     {
 15161              		.loc 1 4133 5 is_stmt 1 view .LVU4281
4133:Core/Src/bno055.c ****     {
 15162              		.loc 1 4133 23 is_stmt 0 view .LVU4282
 15163 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4133:Core/Src/bno055.c ****     {
 15164              		.loc 1 4133 8 view .LVU4283
 15165 001e 012B     		cmp	r3, #1
 15166 0020 16D1     		bne	.L1134
ARM GAS  /tmp/ccOloYeZ.s 			page 450


 15167              	.L1129:
4137:Core/Src/bno055.c ****     {
 15168              		.loc 1 4137 5 is_stmt 1 view .LVU4284
4137:Core/Src/bno055.c ****     {
 15169              		.loc 1 4137 8 is_stmt 0 view .LVU4285
 15170 0022 E4B9     		cbnz	r4, .L1131
4140:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15171              		.loc 1 4140 9 is_stmt 1 view .LVU4286
4140:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15172              		.loc 1 4140 21 is_stmt 0 view .LVU4287
 15173 0024 0DF10600 		add	r0, sp, #6
 15174 0028 FFF7FEFF 		bl	bno055_read_euler_p
 15175              	.LVL1890:
4140:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15176              		.loc 1 4140 18 view .LVU4288
 15177 002c 54FA80F4 		uxtab	r4, r4, r0
 15178              	.LVL1891:
4140:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15179              		.loc 1 4140 18 view .LVU4289
 15180 0030 64B2     		sxtb	r4, r4
 15181              	.LVL1892:
4141:Core/Src/bno055.c ****         {
 15182              		.loc 1 4141 9 is_stmt 1 view .LVU4290
4141:Core/Src/bno055.c ****         {
 15183              		.loc 1 4141 12 is_stmt 0 view .LVU4291
 15184 0032 BCB9     		cbnz	r4, .L1132
4144:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15185              		.loc 1 4144 13 is_stmt 1 view .LVU4292
4144:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15186              		.loc 1 4144 44 is_stmt 0 view .LVU4293
 15187 0034 BDF90600 		ldrsh	r0, [sp, #6]
 15188 0038 FFF7FEFF 		bl	__aeabi_i2d
 15189              	.LVL1893:
 15190 003c 0022     		movs	r2, #0
 15191 003e 0B4B     		ldr	r3, .L1135
 15192 0040 FFF7FEFF 		bl	__aeabi_ddiv
 15193              	.LVL1894:
4144:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15194              		.loc 1 4144 20 view .LVU4294
 15195 0044 FFF7FEFF 		bl	__aeabi_d2f
 15196              	.LVL1895:
4145:Core/Src/bno055.c ****         }
 15197              		.loc 1 4145 13 is_stmt 1 view .LVU4295
4145:Core/Src/bno055.c ****         }
 15198              		.loc 1 4145 24 is_stmt 0 view .LVU4296
 15199 0048 2860     		str	r0, [r5]	@ float
 15200              	.LVL1896:
 15201              	.L1130:
4157:Core/Src/bno055.c **** }
 15202              		.loc 1 4157 5 is_stmt 1 view .LVU4297
4158:Core/Src/bno055.c **** 
 15203              		.loc 1 4158 1 is_stmt 0 view .LVU4298
 15204 004a 2046     		mov	r0, r4
 15205 004c 03B0     		add	sp, sp, #12
 15206              		.cfi_remember_state
 15207              		.cfi_def_cfa_offset 12
 15208              		@ sp needed
ARM GAS  /tmp/ccOloYeZ.s 			page 451


 15209 004e 30BD     		pop	{r4, r5, pc}
 15210              	.LVL1897:
 15211              	.L1134:
 15212              		.cfi_restore_state
4135:Core/Src/bno055.c ****     }
 15213              		.loc 1 4135 9 is_stmt 1 view .LVU4299
4135:Core/Src/bno055.c ****     }
 15214              		.loc 1 4135 21 is_stmt 0 view .LVU4300
 15215 0050 0120     		movs	r0, #1
 15216 0052 FFF7FEFF 		bl	bno055_set_euler_unit
 15217              	.LVL1898:
4135:Core/Src/bno055.c ****     }
 15218              		.loc 1 4135 18 view .LVU4301
 15219 0056 54FA80F4 		uxtab	r4, r4, r0
 15220              	.LVL1899:
4135:Core/Src/bno055.c ****     }
 15221              		.loc 1 4135 18 view .LVU4302
 15222 005a 64B2     		sxtb	r4, r4
 15223              	.LVL1900:
4135:Core/Src/bno055.c ****     }
 15224              		.loc 1 4135 18 view .LVU4303
 15225 005c E1E7     		b	.L1129
 15226              	.L1131:
4154:Core/Src/bno055.c ****     }
 15227              		.loc 1 4154 18 view .LVU4304
 15228 005e 4FF0FF34 		mov	r4, #-1
 15229              	.LVL1901:
4154:Core/Src/bno055.c ****     }
 15230              		.loc 1 4154 18 view .LVU4305
 15231 0062 F2E7     		b	.L1130
 15232              	.LVL1902:
 15233              	.L1132:
4149:Core/Src/bno055.c ****         }
 15234              		.loc 1 4149 22 view .LVU4306
 15235 0064 4FF0FF34 		mov	r4, #-1
 15236              	.LVL1903:
4149:Core/Src/bno055.c ****         }
 15237              		.loc 1 4149 22 view .LVU4307
 15238 0068 EFE7     		b	.L1130
 15239              	.L1136:
 15240 006a 00BF     		.align	2
 15241              	.L1135:
 15242 006c 00208C40 		.word	1082925056
 15243              		.cfi_endproc
 15244              	.LFE66:
 15246              		.section	.text.bno055_convert_float_euler_hpr_deg,"ax",%progbits
 15247              		.align	1
 15248              		.global	bno055_convert_float_euler_hpr_deg
 15249              		.syntax unified
 15250              		.thumb
 15251              		.thumb_func
 15253              	bno055_convert_float_euler_hpr_deg:
 15254              	.LVL1904:
 15255              	.LFB67:
4179:Core/Src/bno055.c ****     /* Variable used to return value of
 15256              		.loc 1 4179 1 is_stmt 1 view -0
 15257              		.cfi_startproc
ARM GAS  /tmp/ccOloYeZ.s 			page 452


 15258              		@ args = 0, pretend = 0, frame = 16
 15259              		@ frame_needed = 0, uses_anonymous_args = 0
4179:Core/Src/bno055.c ****     /* Variable used to return value of
 15260              		.loc 1 4179 1 is_stmt 0 view .LVU4309
 15261 0000 30B5     		push	{r4, r5, lr}
 15262              		.cfi_def_cfa_offset 12
 15263              		.cfi_offset 4, -12
 15264              		.cfi_offset 5, -8
 15265              		.cfi_offset 14, -4
 15266 0002 85B0     		sub	sp, sp, #20
 15267              		.cfi_def_cfa_offset 32
 15268 0004 0546     		mov	r5, r0
4182:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 15269              		.loc 1 4182 5 is_stmt 1 view .LVU4310
 15270              	.LVL1905:
4183:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15271              		.loc 1 4183 5 view .LVU4311
4183:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15272              		.loc 1 4183 27 is_stmt 0 view .LVU4312
 15273 0006 0023     		movs	r3, #0
 15274 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 15275 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 15276 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
4184:Core/Src/bno055.c **** 
 15277              		.loc 1 4184 5 is_stmt 1 view .LVU4313
4184:Core/Src/bno055.c **** 
 15278              		.loc 1 4184 8 is_stmt 0 view .LVU4314
 15279 0014 8DF80730 		strb	r3, [sp, #7]
4188:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15280              		.loc 1 4188 5 is_stmt 1 view .LVU4315
4188:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15281              		.loc 1 4188 16 is_stmt 0 view .LVU4316
 15282 0018 0DF10700 		add	r0, sp, #7
 15283              	.LVL1906:
4188:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15284              		.loc 1 4188 16 view .LVU4317
 15285 001c FFF7FEFF 		bl	bno055_get_euler_unit
 15286              	.LVL1907:
 15287 0020 0446     		mov	r4, r0
 15288              	.LVL1908:
4189:Core/Src/bno055.c ****     {
 15289              		.loc 1 4189 5 is_stmt 1 view .LVU4318
4189:Core/Src/bno055.c ****     {
 15290              		.loc 1 4189 23 is_stmt 0 view .LVU4319
 15291 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
4189:Core/Src/bno055.c ****     {
 15292              		.loc 1 4189 8 view .LVU4320
 15293 0026 5BBB     		cbnz	r3, .L1143
 15294              	.L1138:
4193:Core/Src/bno055.c ****     {
 15295              		.loc 1 4193 5 is_stmt 1 view .LVU4321
4193:Core/Src/bno055.c ****     {
 15296              		.loc 1 4193 8 is_stmt 0 view .LVU4322
 15297 0028 8CBB     		cbnz	r4, .L1140
4196:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15298              		.loc 1 4196 9 is_stmt 1 view .LVU4323
4196:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/ccOloYeZ.s 			page 453


 15299              		.loc 1 4196 21 is_stmt 0 view .LVU4324
 15300 002a 02A8     		add	r0, sp, #8
 15301 002c FFF7FEFF 		bl	bno055_read_euler_hrp
 15302              	.LVL1909:
4196:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15303              		.loc 1 4196 18 view .LVU4325
 15304 0030 54FA80F4 		uxtab	r4, r4, r0
 15305              	.LVL1910:
4196:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15306              		.loc 1 4196 18 view .LVU4326
 15307 0034 64B2     		sxtb	r4, r4
 15308              	.LVL1911:
4197:Core/Src/bno055.c ****         {
 15309              		.loc 1 4197 9 is_stmt 1 view .LVU4327
4197:Core/Src/bno055.c ****         {
 15310              		.loc 1 4197 12 is_stmt 0 view .LVU4328
 15311 0036 6CBB     		cbnz	r4, .L1141
4200:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
 15312              		.loc 1 4200 13 is_stmt 1 view .LVU4329
4200:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
 15313              		.loc 1 4200 48 is_stmt 0 view .LVU4330
 15314 0038 BDF90800 		ldrsh	r0, [sp, #8]
 15315 003c FFF7FEFF 		bl	__aeabi_i2d
 15316              	.LVL1912:
 15317 0040 0022     		movs	r2, #0
 15318 0042 164B     		ldr	r3, .L1144
 15319 0044 FFF7FEFF 		bl	__aeabi_dmul
 15320              	.LVL1913:
4200:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
 15321              		.loc 1 4200 28 view .LVU4331
 15322 0048 FFF7FEFF 		bl	__aeabi_d2f
 15323              	.LVL1914:
4200:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
 15324              		.loc 1 4200 26 view .LVU4332
 15325 004c 2860     		str	r0, [r5]	@ float
4201:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
 15326              		.loc 1 4201 13 is_stmt 1 view .LVU4333
4201:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
 15327              		.loc 1 4201 48 is_stmt 0 view .LVU4334
 15328 004e BDF90C00 		ldrsh	r0, [sp, #12]
 15329 0052 FFF7FEFF 		bl	__aeabi_i2d
 15330              	.LVL1915:
 15331 0056 0022     		movs	r2, #0
 15332 0058 104B     		ldr	r3, .L1144
 15333 005a FFF7FEFF 		bl	__aeabi_dmul
 15334              	.LVL1916:
4201:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
 15335              		.loc 1 4201 28 view .LVU4335
 15336 005e FFF7FEFF 		bl	__aeabi_d2f
 15337              	.LVL1917:
4201:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
 15338              		.loc 1 4201 26 view .LVU4336
 15339 0062 A860     		str	r0, [r5, #8]	@ float
4202:Core/Src/bno055.c ****         }
 15340              		.loc 1 4202 13 is_stmt 1 view .LVU4337
4202:Core/Src/bno055.c ****         }
 15341              		.loc 1 4202 48 is_stmt 0 view .LVU4338
ARM GAS  /tmp/ccOloYeZ.s 			page 454


 15342 0064 BDF90A00 		ldrsh	r0, [sp, #10]
 15343 0068 FFF7FEFF 		bl	__aeabi_i2d
 15344              	.LVL1918:
 15345 006c 0022     		movs	r2, #0
 15346 006e 0B4B     		ldr	r3, .L1144
 15347 0070 FFF7FEFF 		bl	__aeabi_dmul
 15348              	.LVL1919:
4202:Core/Src/bno055.c ****         }
 15349              		.loc 1 4202 28 view .LVU4339
 15350 0074 FFF7FEFF 		bl	__aeabi_d2f
 15351              	.LVL1920:
4202:Core/Src/bno055.c ****         }
 15352              		.loc 1 4202 26 view .LVU4340
 15353 0078 6860     		str	r0, [r5, #4]	@ float
 15354              	.LVL1921:
 15355              	.L1139:
4214:Core/Src/bno055.c **** }
 15356              		.loc 1 4214 5 is_stmt 1 view .LVU4341
4215:Core/Src/bno055.c **** 
 15357              		.loc 1 4215 1 is_stmt 0 view .LVU4342
 15358 007a 2046     		mov	r0, r4
 15359 007c 05B0     		add	sp, sp, #20
 15360              		.cfi_remember_state
 15361              		.cfi_def_cfa_offset 12
 15362              		@ sp needed
 15363 007e 30BD     		pop	{r4, r5, pc}
 15364              	.LVL1922:
 15365              	.L1143:
 15366              		.cfi_restore_state
4191:Core/Src/bno055.c ****     }
 15367              		.loc 1 4191 9 is_stmt 1 view .LVU4343
4191:Core/Src/bno055.c ****     }
 15368              		.loc 1 4191 21 is_stmt 0 view .LVU4344
 15369 0080 0020     		movs	r0, #0
 15370 0082 FFF7FEFF 		bl	bno055_set_euler_unit
 15371              	.LVL1923:
4191:Core/Src/bno055.c ****     }
 15372              		.loc 1 4191 18 view .LVU4345
 15373 0086 54FA80F4 		uxtab	r4, r4, r0
 15374              	.LVL1924:
4191:Core/Src/bno055.c ****     }
 15375              		.loc 1 4191 18 view .LVU4346
 15376 008a 64B2     		sxtb	r4, r4
 15377              	.LVL1925:
4191:Core/Src/bno055.c ****     }
 15378              		.loc 1 4191 18 view .LVU4347
 15379 008c CCE7     		b	.L1138
 15380              	.L1140:
4211:Core/Src/bno055.c ****     }
 15381              		.loc 1 4211 18 view .LVU4348
 15382 008e 4FF0FF34 		mov	r4, #-1
 15383              	.LVL1926:
4211:Core/Src/bno055.c ****     }
 15384              		.loc 1 4211 18 view .LVU4349
 15385 0092 F2E7     		b	.L1139
 15386              	.LVL1927:
 15387              	.L1141:
ARM GAS  /tmp/ccOloYeZ.s 			page 455


4206:Core/Src/bno055.c ****         }
 15388              		.loc 1 4206 22 view .LVU4350
 15389 0094 4FF0FF34 		mov	r4, #-1
 15390              	.LVL1928:
4206:Core/Src/bno055.c ****         }
 15391              		.loc 1 4206 22 view .LVU4351
 15392 0098 EFE7     		b	.L1139
 15393              	.L1145:
 15394 009a 00BF     		.align	2
 15395              	.L1144:
 15396 009c 0000B03F 		.word	1068498944
 15397              		.cfi_endproc
 15398              	.LFE67:
 15400              		.section	.text.bno055_convert_float_euler_hpr_rad,"ax",%progbits
 15401              		.align	1
 15402              		.global	bno055_convert_float_euler_hpr_rad
 15403              		.syntax unified
 15404              		.thumb
 15405              		.thumb_func
 15407              	bno055_convert_float_euler_hpr_rad:
 15408              	.LVL1929:
 15409              	.LFB68:
4236:Core/Src/bno055.c ****     /* Variable used to return value of
 15410              		.loc 1 4236 1 is_stmt 1 view -0
 15411              		.cfi_startproc
 15412              		@ args = 0, pretend = 0, frame = 16
 15413              		@ frame_needed = 0, uses_anonymous_args = 0
4236:Core/Src/bno055.c ****     /* Variable used to return value of
 15414              		.loc 1 4236 1 is_stmt 0 view .LVU4353
 15415 0000 30B5     		push	{r4, r5, lr}
 15416              		.cfi_def_cfa_offset 12
 15417              		.cfi_offset 4, -12
 15418              		.cfi_offset 5, -8
 15419              		.cfi_offset 14, -4
 15420 0002 85B0     		sub	sp, sp, #20
 15421              		.cfi_def_cfa_offset 32
 15422 0004 0546     		mov	r5, r0
4239:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 15423              		.loc 1 4239 5 is_stmt 1 view .LVU4354
 15424              	.LVL1930:
4240:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15425              		.loc 1 4240 5 view .LVU4355
4240:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15426              		.loc 1 4240 27 is_stmt 0 view .LVU4356
 15427 0006 0023     		movs	r3, #0
 15428 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 15429 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 15430 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
4241:Core/Src/bno055.c **** 
 15431              		.loc 1 4241 5 is_stmt 1 view .LVU4357
4241:Core/Src/bno055.c **** 
 15432              		.loc 1 4241 8 is_stmt 0 view .LVU4358
 15433 0014 8DF80730 		strb	r3, [sp, #7]
4245:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15434              		.loc 1 4245 5 is_stmt 1 view .LVU4359
4245:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15435              		.loc 1 4245 16 is_stmt 0 view .LVU4360
ARM GAS  /tmp/ccOloYeZ.s 			page 456


 15436 0018 0DF10700 		add	r0, sp, #7
 15437              	.LVL1931:
4245:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15438              		.loc 1 4245 16 view .LVU4361
 15439 001c FFF7FEFF 		bl	bno055_get_euler_unit
 15440              	.LVL1932:
 15441 0020 0446     		mov	r4, r0
 15442              	.LVL1933:
4246:Core/Src/bno055.c ****     {
 15443              		.loc 1 4246 5 is_stmt 1 view .LVU4362
4246:Core/Src/bno055.c ****     {
 15444              		.loc 1 4246 23 is_stmt 0 view .LVU4363
 15445 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
4246:Core/Src/bno055.c ****     {
 15446              		.loc 1 4246 8 view .LVU4364
 15447 0026 012B     		cmp	r3, #1
 15448 0028 2BD1     		bne	.L1152
 15449              	.L1147:
4250:Core/Src/bno055.c ****     {
 15450              		.loc 1 4250 5 is_stmt 1 view .LVU4365
4250:Core/Src/bno055.c ****     {
 15451              		.loc 1 4250 8 is_stmt 0 view .LVU4366
 15452 002a 8CBB     		cbnz	r4, .L1149
4253:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15453              		.loc 1 4253 9 is_stmt 1 view .LVU4367
4253:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15454              		.loc 1 4253 21 is_stmt 0 view .LVU4368
 15455 002c 02A8     		add	r0, sp, #8
 15456 002e FFF7FEFF 		bl	bno055_read_euler_hrp
 15457              	.LVL1934:
4253:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15458              		.loc 1 4253 18 view .LVU4369
 15459 0032 54FA80F4 		uxtab	r4, r4, r0
 15460              	.LVL1935:
4253:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15461              		.loc 1 4253 18 view .LVU4370
 15462 0036 64B2     		sxtb	r4, r4
 15463              	.LVL1936:
4254:Core/Src/bno055.c ****         {
 15464              		.loc 1 4254 9 is_stmt 1 view .LVU4371
4254:Core/Src/bno055.c ****         {
 15465              		.loc 1 4254 12 is_stmt 0 view .LVU4372
 15466 0038 6CBB     		cbnz	r4, .L1150
4257:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
 15467              		.loc 1 4257 13 is_stmt 1 view .LVU4373
4257:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
 15468              		.loc 1 4257 48 is_stmt 0 view .LVU4374
 15469 003a BDF90800 		ldrsh	r0, [sp, #8]
 15470 003e FFF7FEFF 		bl	__aeabi_i2d
 15471              	.LVL1937:
 15472 0042 0022     		movs	r2, #0
 15473 0044 154B     		ldr	r3, .L1153
 15474 0046 FFF7FEFF 		bl	__aeabi_ddiv
 15475              	.LVL1938:
4257:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
 15476              		.loc 1 4257 28 view .LVU4375
 15477 004a FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  /tmp/ccOloYeZ.s 			page 457


 15478              	.LVL1939:
4257:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
 15479              		.loc 1 4257 26 view .LVU4376
 15480 004e 2860     		str	r0, [r5]	@ float
4258:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
 15481              		.loc 1 4258 13 is_stmt 1 view .LVU4377
4258:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
 15482              		.loc 1 4258 48 is_stmt 0 view .LVU4378
 15483 0050 BDF90C00 		ldrsh	r0, [sp, #12]
 15484 0054 FFF7FEFF 		bl	__aeabi_i2d
 15485              	.LVL1940:
 15486 0058 0022     		movs	r2, #0
 15487 005a 104B     		ldr	r3, .L1153
 15488 005c FFF7FEFF 		bl	__aeabi_ddiv
 15489              	.LVL1941:
4258:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
 15490              		.loc 1 4258 28 view .LVU4379
 15491 0060 FFF7FEFF 		bl	__aeabi_d2f
 15492              	.LVL1942:
4258:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
 15493              		.loc 1 4258 26 view .LVU4380
 15494 0064 A860     		str	r0, [r5, #8]	@ float
4259:Core/Src/bno055.c ****         }
 15495              		.loc 1 4259 13 is_stmt 1 view .LVU4381
4259:Core/Src/bno055.c ****         }
 15496              		.loc 1 4259 48 is_stmt 0 view .LVU4382
 15497 0066 BDF90A00 		ldrsh	r0, [sp, #10]
 15498 006a FFF7FEFF 		bl	__aeabi_i2d
 15499              	.LVL1943:
 15500 006e 0022     		movs	r2, #0
 15501 0070 0A4B     		ldr	r3, .L1153
 15502 0072 FFF7FEFF 		bl	__aeabi_ddiv
 15503              	.LVL1944:
4259:Core/Src/bno055.c ****         }
 15504              		.loc 1 4259 28 view .LVU4383
 15505 0076 FFF7FEFF 		bl	__aeabi_d2f
 15506              	.LVL1945:
4259:Core/Src/bno055.c ****         }
 15507              		.loc 1 4259 26 view .LVU4384
 15508 007a 6860     		str	r0, [r5, #4]	@ float
 15509              	.LVL1946:
 15510              	.L1148:
4271:Core/Src/bno055.c **** }
 15511              		.loc 1 4271 5 is_stmt 1 view .LVU4385
4272:Core/Src/bno055.c **** 
 15512              		.loc 1 4272 1 is_stmt 0 view .LVU4386
 15513 007c 2046     		mov	r0, r4
 15514 007e 05B0     		add	sp, sp, #20
 15515              		.cfi_remember_state
 15516              		.cfi_def_cfa_offset 12
 15517              		@ sp needed
 15518 0080 30BD     		pop	{r4, r5, pc}
 15519              	.LVL1947:
 15520              	.L1152:
 15521              		.cfi_restore_state
4248:Core/Src/bno055.c ****     }
 15522              		.loc 1 4248 9 is_stmt 1 view .LVU4387
ARM GAS  /tmp/ccOloYeZ.s 			page 458


4248:Core/Src/bno055.c ****     }
 15523              		.loc 1 4248 21 is_stmt 0 view .LVU4388
 15524 0082 0120     		movs	r0, #1
 15525 0084 FFF7FEFF 		bl	bno055_set_euler_unit
 15526              	.LVL1948:
4248:Core/Src/bno055.c ****     }
 15527              		.loc 1 4248 18 view .LVU4389
 15528 0088 54FA80F4 		uxtab	r4, r4, r0
 15529              	.LVL1949:
4248:Core/Src/bno055.c ****     }
 15530              		.loc 1 4248 18 view .LVU4390
 15531 008c 64B2     		sxtb	r4, r4
 15532              	.LVL1950:
4248:Core/Src/bno055.c ****     }
 15533              		.loc 1 4248 18 view .LVU4391
 15534 008e CCE7     		b	.L1147
 15535              	.L1149:
4268:Core/Src/bno055.c ****     }
 15536              		.loc 1 4268 18 view .LVU4392
 15537 0090 4FF0FF34 		mov	r4, #-1
 15538              	.LVL1951:
4268:Core/Src/bno055.c ****     }
 15539              		.loc 1 4268 18 view .LVU4393
 15540 0094 F2E7     		b	.L1148
 15541              	.LVL1952:
 15542              	.L1150:
4263:Core/Src/bno055.c ****         }
 15543              		.loc 1 4263 22 view .LVU4394
 15544 0096 4FF0FF34 		mov	r4, #-1
 15545              	.LVL1953:
4263:Core/Src/bno055.c ****         }
 15546              		.loc 1 4263 22 view .LVU4395
 15547 009a EFE7     		b	.L1148
 15548              	.L1154:
 15549              		.align	2
 15550              	.L1153:
 15551 009c 00208C40 		.word	1082925056
 15552              		.cfi_endproc
 15553              	.LFE68:
 15555              		.section	.text.bno055_convert_double_euler_h_deg,"ax",%progbits
 15556              		.align	1
 15557              		.global	bno055_convert_double_euler_h_deg
 15558              		.syntax unified
 15559              		.thumb
 15560              		.thumb_func
 15562              	bno055_convert_double_euler_h_deg:
 15563              	.LVL1954:
 15564              	.LFB99:
5699:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15565              		.loc 1 5699 1 is_stmt 1 view -0
 15566              		.cfi_startproc
 15567              		@ args = 0, pretend = 0, frame = 8
 15568              		@ frame_needed = 0, uses_anonymous_args = 0
5699:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15569              		.loc 1 5699 1 is_stmt 0 view .LVU4397
 15570 0000 30B5     		push	{r4, r5, lr}
 15571              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccOloYeZ.s 			page 459


 15572              		.cfi_offset 4, -12
 15573              		.cfi_offset 5, -8
 15574              		.cfi_offset 14, -4
 15575 0002 83B0     		sub	sp, sp, #12
 15576              		.cfi_def_cfa_offset 24
 15577 0004 0546     		mov	r5, r0
5700:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
 15578              		.loc 1 5700 5 is_stmt 1 view .LVU4398
 15579              	.LVL1955:
5701:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 15580              		.loc 1 5701 5 view .LVU4399
5701:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 15581              		.loc 1 5701 9 is_stmt 0 view .LVU4400
 15582 0006 0023     		movs	r3, #0
 15583 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5702:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15584              		.loc 1 5702 5 is_stmt 1 view .LVU4401
 15585              	.LVL1956:
5703:Core/Src/bno055.c **** 
 15586              		.loc 1 5703 5 view .LVU4402
5703:Core/Src/bno055.c **** 
 15587              		.loc 1 5703 8 is_stmt 0 view .LVU4403
 15588 000c 8DF80530 		strb	r3, [sp, #5]
5707:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15589              		.loc 1 5707 5 is_stmt 1 view .LVU4404
5707:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15590              		.loc 1 5707 16 is_stmt 0 view .LVU4405
 15591 0010 0DF10500 		add	r0, sp, #5
 15592              	.LVL1957:
5707:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15593              		.loc 1 5707 16 view .LVU4406
 15594 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15595              	.LVL1958:
 15596 0018 0446     		mov	r4, r0
 15597              	.LVL1959:
5708:Core/Src/bno055.c ****     {
 15598              		.loc 1 5708 5 is_stmt 1 view .LVU4407
5708:Core/Src/bno055.c ****     {
 15599              		.loc 1 5708 23 is_stmt 0 view .LVU4408
 15600 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5708:Core/Src/bno055.c ****     {
 15601              		.loc 1 5708 8 view .LVU4409
 15602 001e ABB9     		cbnz	r3, .L1161
 15603              	.L1156:
5712:Core/Src/bno055.c ****     {
 15604              		.loc 1 5712 5 is_stmt 1 view .LVU4410
5712:Core/Src/bno055.c ****     {
 15605              		.loc 1 5712 8 is_stmt 0 view .LVU4411
 15606 0020 DCB9     		cbnz	r4, .L1158
5715:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15607              		.loc 1 5715 9 is_stmt 1 view .LVU4412
5715:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15608              		.loc 1 5715 21 is_stmt 0 view .LVU4413
 15609 0022 0DF10600 		add	r0, sp, #6
 15610 0026 FFF7FEFF 		bl	bno055_read_euler_h
 15611              	.LVL1960:
5715:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/ccOloYeZ.s 			page 460


 15612              		.loc 1 5715 18 view .LVU4414
 15613 002a 54FA80F4 		uxtab	r4, r4, r0
 15614              	.LVL1961:
5715:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15615              		.loc 1 5715 18 view .LVU4415
 15616 002e 64B2     		sxtb	r4, r4
 15617              	.LVL1962:
5716:Core/Src/bno055.c ****         {
 15618              		.loc 1 5716 9 is_stmt 1 view .LVU4416
5716:Core/Src/bno055.c ****         {
 15619              		.loc 1 5716 12 is_stmt 0 view .LVU4417
 15620 0030 B4B9     		cbnz	r4, .L1159
5719:Core/Src/bno055.c ****             *euler_h_d = data_d;
 15621              		.loc 1 5719 13 is_stmt 1 view .LVU4418
5719:Core/Src/bno055.c ****             *euler_h_d = data_d;
 15622              		.loc 1 5719 22 is_stmt 0 view .LVU4419
 15623 0032 BDF90600 		ldrsh	r0, [sp, #6]
 15624 0036 FFF7FEFF 		bl	__aeabi_i2d
 15625              	.LVL1963:
5719:Core/Src/bno055.c ****             *euler_h_d = data_d;
 15626              		.loc 1 5719 20 view .LVU4420
 15627 003a 0022     		movs	r2, #0
 15628 003c 0A4B     		ldr	r3, .L1162
 15629 003e FFF7FEFF 		bl	__aeabi_dmul
 15630              	.LVL1964:
5720:Core/Src/bno055.c ****         }
 15631              		.loc 1 5720 13 is_stmt 1 view .LVU4421
5720:Core/Src/bno055.c ****         }
 15632              		.loc 1 5720 24 is_stmt 0 view .LVU4422
 15633 0042 C5E90001 		strd	r0, [r5]
 15634              	.LVL1965:
 15635              	.L1157:
5732:Core/Src/bno055.c **** }
 15636              		.loc 1 5732 5 is_stmt 1 view .LVU4423
5733:Core/Src/bno055.c **** 
 15637              		.loc 1 5733 1 is_stmt 0 view .LVU4424
 15638 0046 2046     		mov	r0, r4
 15639 0048 03B0     		add	sp, sp, #12
 15640              		.cfi_remember_state
 15641              		.cfi_def_cfa_offset 12
 15642              		@ sp needed
 15643 004a 30BD     		pop	{r4, r5, pc}
 15644              	.LVL1966:
 15645              	.L1161:
 15646              		.cfi_restore_state
5710:Core/Src/bno055.c ****     }
 15647              		.loc 1 5710 9 is_stmt 1 view .LVU4425
5710:Core/Src/bno055.c ****     }
 15648              		.loc 1 5710 21 is_stmt 0 view .LVU4426
 15649 004c 0020     		movs	r0, #0
 15650 004e FFF7FEFF 		bl	bno055_set_euler_unit
 15651              	.LVL1967:
5710:Core/Src/bno055.c ****     }
 15652              		.loc 1 5710 18 view .LVU4427
 15653 0052 54FA80F4 		uxtab	r4, r4, r0
 15654              	.LVL1968:
5710:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccOloYeZ.s 			page 461


 15655              		.loc 1 5710 18 view .LVU4428
 15656 0056 64B2     		sxtb	r4, r4
 15657              	.LVL1969:
5710:Core/Src/bno055.c ****     }
 15658              		.loc 1 5710 18 view .LVU4429
 15659 0058 E2E7     		b	.L1156
 15660              	.L1158:
5729:Core/Src/bno055.c ****     }
 15661              		.loc 1 5729 18 view .LVU4430
 15662 005a 4FF0FF34 		mov	r4, #-1
 15663              	.LVL1970:
5729:Core/Src/bno055.c ****     }
 15664              		.loc 1 5729 18 view .LVU4431
 15665 005e F2E7     		b	.L1157
 15666              	.LVL1971:
 15667              	.L1159:
5724:Core/Src/bno055.c ****         }
 15668              		.loc 1 5724 22 view .LVU4432
 15669 0060 4FF0FF34 		mov	r4, #-1
 15670              	.LVL1972:
5724:Core/Src/bno055.c ****         }
 15671              		.loc 1 5724 22 view .LVU4433
 15672 0064 EFE7     		b	.L1157
 15673              	.L1163:
 15674 0066 00BF     		.align	2
 15675              	.L1162:
 15676 0068 0000B03F 		.word	1068498944
 15677              		.cfi_endproc
 15678              	.LFE99:
 15680              		.section	.text.bno055_convert_double_euler_h_rad,"ax",%progbits
 15681              		.align	1
 15682              		.global	bno055_convert_double_euler_h_rad
 15683              		.syntax unified
 15684              		.thumb
 15685              		.thumb_func
 15687              	bno055_convert_double_euler_h_rad:
 15688              	.LVL1973:
 15689              	.LFB100:
5748:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15690              		.loc 1 5748 1 is_stmt 1 view -0
 15691              		.cfi_startproc
 15692              		@ args = 0, pretend = 0, frame = 8
 15693              		@ frame_needed = 0, uses_anonymous_args = 0
5748:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15694              		.loc 1 5748 1 is_stmt 0 view .LVU4435
 15695 0000 30B5     		push	{r4, r5, lr}
 15696              		.cfi_def_cfa_offset 12
 15697              		.cfi_offset 4, -12
 15698              		.cfi_offset 5, -8
 15699              		.cfi_offset 14, -4
 15700 0002 83B0     		sub	sp, sp, #12
 15701              		.cfi_def_cfa_offset 24
 15702 0004 0546     		mov	r5, r0
5749:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
 15703              		.loc 1 5749 5 is_stmt 1 view .LVU4436
 15704              	.LVL1974:
5750:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccOloYeZ.s 			page 462


 15705              		.loc 1 5750 5 view .LVU4437
5750:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 15706              		.loc 1 5750 9 is_stmt 0 view .LVU4438
 15707 0006 0023     		movs	r3, #0
 15708 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5751:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15709              		.loc 1 5751 5 is_stmt 1 view .LVU4439
 15710              	.LVL1975:
5752:Core/Src/bno055.c **** 
 15711              		.loc 1 5752 5 view .LVU4440
5752:Core/Src/bno055.c **** 
 15712              		.loc 1 5752 8 is_stmt 0 view .LVU4441
 15713 000c 8DF80530 		strb	r3, [sp, #5]
5756:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15714              		.loc 1 5756 5 is_stmt 1 view .LVU4442
5756:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15715              		.loc 1 5756 16 is_stmt 0 view .LVU4443
 15716 0010 0DF10500 		add	r0, sp, #5
 15717              	.LVL1976:
5756:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15718              		.loc 1 5756 16 view .LVU4444
 15719 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15720              	.LVL1977:
 15721 0018 0446     		mov	r4, r0
 15722              	.LVL1978:
5757:Core/Src/bno055.c ****     {
 15723              		.loc 1 5757 5 is_stmt 1 view .LVU4445
5757:Core/Src/bno055.c ****     {
 15724              		.loc 1 5757 23 is_stmt 0 view .LVU4446
 15725 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5757:Core/Src/bno055.c ****     {
 15726              		.loc 1 5757 8 view .LVU4447
 15727 001e 012B     		cmp	r3, #1
 15728 0020 15D1     		bne	.L1170
 15729              	.L1165:
5761:Core/Src/bno055.c ****     {
 15730              		.loc 1 5761 5 is_stmt 1 view .LVU4448
5761:Core/Src/bno055.c ****     {
 15731              		.loc 1 5761 8 is_stmt 0 view .LVU4449
 15732 0022 DCB9     		cbnz	r4, .L1167
5764:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15733              		.loc 1 5764 9 is_stmt 1 view .LVU4450
5764:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15734              		.loc 1 5764 21 is_stmt 0 view .LVU4451
 15735 0024 0DF10600 		add	r0, sp, #6
 15736 0028 FFF7FEFF 		bl	bno055_read_euler_h
 15737              	.LVL1979:
5764:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15738              		.loc 1 5764 18 view .LVU4452
 15739 002c 54FA80F4 		uxtab	r4, r4, r0
 15740              	.LVL1980:
5764:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15741              		.loc 1 5764 18 view .LVU4453
 15742 0030 64B2     		sxtb	r4, r4
 15743              	.LVL1981:
5765:Core/Src/bno055.c ****         {
 15744              		.loc 1 5765 9 is_stmt 1 view .LVU4454
ARM GAS  /tmp/ccOloYeZ.s 			page 463


5765:Core/Src/bno055.c ****         {
 15745              		.loc 1 5765 12 is_stmt 0 view .LVU4455
 15746 0032 B4B9     		cbnz	r4, .L1168
5768:Core/Src/bno055.c ****             *euler_h_d = data_d;
 15747              		.loc 1 5768 13 is_stmt 1 view .LVU4456
5768:Core/Src/bno055.c ****             *euler_h_d = data_d;
 15748              		.loc 1 5768 22 is_stmt 0 view .LVU4457
 15749 0034 BDF90600 		ldrsh	r0, [sp, #6]
 15750 0038 FFF7FEFF 		bl	__aeabi_i2d
 15751              	.LVL1982:
5768:Core/Src/bno055.c ****             *euler_h_d = data_d;
 15752              		.loc 1 5768 20 view .LVU4458
 15753 003c 0022     		movs	r2, #0
 15754 003e 0A4B     		ldr	r3, .L1171
 15755 0040 FFF7FEFF 		bl	__aeabi_ddiv
 15756              	.LVL1983:
5769:Core/Src/bno055.c ****         }
 15757              		.loc 1 5769 13 is_stmt 1 view .LVU4459
5769:Core/Src/bno055.c ****         }
 15758              		.loc 1 5769 24 is_stmt 0 view .LVU4460
 15759 0044 C5E90001 		strd	r0, [r5]
 15760              	.LVL1984:
 15761              	.L1166:
5781:Core/Src/bno055.c **** }
 15762              		.loc 1 5781 5 is_stmt 1 view .LVU4461
5782:Core/Src/bno055.c **** 
 15763              		.loc 1 5782 1 is_stmt 0 view .LVU4462
 15764 0048 2046     		mov	r0, r4
 15765 004a 03B0     		add	sp, sp, #12
 15766              		.cfi_remember_state
 15767              		.cfi_def_cfa_offset 12
 15768              		@ sp needed
 15769 004c 30BD     		pop	{r4, r5, pc}
 15770              	.LVL1985:
 15771              	.L1170:
 15772              		.cfi_restore_state
5759:Core/Src/bno055.c ****     }
 15773              		.loc 1 5759 9 is_stmt 1 view .LVU4463
5759:Core/Src/bno055.c ****     }
 15774              		.loc 1 5759 21 is_stmt 0 view .LVU4464
 15775 004e 0120     		movs	r0, #1
 15776 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 15777              	.LVL1986:
5759:Core/Src/bno055.c ****     }
 15778              		.loc 1 5759 18 view .LVU4465
 15779 0054 54FA80F4 		uxtab	r4, r4, r0
 15780              	.LVL1987:
5759:Core/Src/bno055.c ****     }
 15781              		.loc 1 5759 18 view .LVU4466
 15782 0058 64B2     		sxtb	r4, r4
 15783              	.LVL1988:
5759:Core/Src/bno055.c ****     }
 15784              		.loc 1 5759 18 view .LVU4467
 15785 005a E2E7     		b	.L1165
 15786              	.L1167:
5778:Core/Src/bno055.c ****     }
 15787              		.loc 1 5778 18 view .LVU4468
ARM GAS  /tmp/ccOloYeZ.s 			page 464


 15788 005c 4FF0FF34 		mov	r4, #-1
 15789              	.LVL1989:
5778:Core/Src/bno055.c ****     }
 15790              		.loc 1 5778 18 view .LVU4469
 15791 0060 F2E7     		b	.L1166
 15792              	.LVL1990:
 15793              	.L1168:
5773:Core/Src/bno055.c ****         }
 15794              		.loc 1 5773 22 view .LVU4470
 15795 0062 4FF0FF34 		mov	r4, #-1
 15796              	.LVL1991:
5773:Core/Src/bno055.c ****         }
 15797              		.loc 1 5773 22 view .LVU4471
 15798 0066 EFE7     		b	.L1166
 15799              	.L1172:
 15800              		.align	2
 15801              	.L1171:
 15802 0068 00208C40 		.word	1082925056
 15803              		.cfi_endproc
 15804              	.LFE100:
 15806              		.section	.text.bno055_convert_double_euler_r_deg,"ax",%progbits
 15807              		.align	1
 15808              		.global	bno055_convert_double_euler_r_deg
 15809              		.syntax unified
 15810              		.thumb
 15811              		.thumb_func
 15813              	bno055_convert_double_euler_r_deg:
 15814              	.LVL1992:
 15815              	.LFB101:
5797:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15816              		.loc 1 5797 1 is_stmt 1 view -0
 15817              		.cfi_startproc
 15818              		@ args = 0, pretend = 0, frame = 8
 15819              		@ frame_needed = 0, uses_anonymous_args = 0
5797:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15820              		.loc 1 5797 1 is_stmt 0 view .LVU4473
 15821 0000 30B5     		push	{r4, r5, lr}
 15822              		.cfi_def_cfa_offset 12
 15823              		.cfi_offset 4, -12
 15824              		.cfi_offset 5, -8
 15825              		.cfi_offset 14, -4
 15826 0002 83B0     		sub	sp, sp, #12
 15827              		.cfi_def_cfa_offset 24
 15828 0004 0546     		mov	r5, r0
5798:Core/Src/bno055.c ****     s16 reg_euler_r_s16 = BNO055_INIT_VALUE;
 15829              		.loc 1 5798 5 is_stmt 1 view .LVU4474
 15830              	.LVL1993:
5799:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 15831              		.loc 1 5799 5 view .LVU4475
5799:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 15832              		.loc 1 5799 9 is_stmt 0 view .LVU4476
 15833 0006 0023     		movs	r3, #0
 15834 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5800:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15835              		.loc 1 5800 5 is_stmt 1 view .LVU4477
 15836              	.LVL1994:
5801:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 465


 15837              		.loc 1 5801 5 view .LVU4478
5801:Core/Src/bno055.c **** 
 15838              		.loc 1 5801 8 is_stmt 0 view .LVU4479
 15839 000c 8DF80530 		strb	r3, [sp, #5]
5805:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15840              		.loc 1 5805 5 is_stmt 1 view .LVU4480
5805:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15841              		.loc 1 5805 16 is_stmt 0 view .LVU4481
 15842 0010 0DF10500 		add	r0, sp, #5
 15843              	.LVL1995:
5805:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15844              		.loc 1 5805 16 view .LVU4482
 15845 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15846              	.LVL1996:
 15847 0018 0446     		mov	r4, r0
 15848              	.LVL1997:
5806:Core/Src/bno055.c ****     {
 15849              		.loc 1 5806 5 is_stmt 1 view .LVU4483
5806:Core/Src/bno055.c ****     {
 15850              		.loc 1 5806 23 is_stmt 0 view .LVU4484
 15851 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5806:Core/Src/bno055.c ****     {
 15852              		.loc 1 5806 8 view .LVU4485
 15853 001e ABB9     		cbnz	r3, .L1179
 15854              	.L1174:
5810:Core/Src/bno055.c ****     {
 15855              		.loc 1 5810 5 is_stmt 1 view .LVU4486
5810:Core/Src/bno055.c ****     {
 15856              		.loc 1 5810 8 is_stmt 0 view .LVU4487
 15857 0020 DCB9     		cbnz	r4, .L1176
5813:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15858              		.loc 1 5813 9 is_stmt 1 view .LVU4488
5813:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15859              		.loc 1 5813 21 is_stmt 0 view .LVU4489
 15860 0022 0DF10600 		add	r0, sp, #6
 15861 0026 FFF7FEFF 		bl	bno055_read_euler_r
 15862              	.LVL1998:
5813:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15863              		.loc 1 5813 18 view .LVU4490
 15864 002a 54FA80F4 		uxtab	r4, r4, r0
 15865              	.LVL1999:
5813:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15866              		.loc 1 5813 18 view .LVU4491
 15867 002e 64B2     		sxtb	r4, r4
 15868              	.LVL2000:
5814:Core/Src/bno055.c ****         {
 15869              		.loc 1 5814 9 is_stmt 1 view .LVU4492
5814:Core/Src/bno055.c ****         {
 15870              		.loc 1 5814 12 is_stmt 0 view .LVU4493
 15871 0030 B4B9     		cbnz	r4, .L1177
5817:Core/Src/bno055.c ****             *euler_r_d = data_d;
 15872              		.loc 1 5817 13 is_stmt 1 view .LVU4494
5817:Core/Src/bno055.c ****             *euler_r_d = data_d;
 15873              		.loc 1 5817 22 is_stmt 0 view .LVU4495
 15874 0032 BDF90600 		ldrsh	r0, [sp, #6]
 15875 0036 FFF7FEFF 		bl	__aeabi_i2d
 15876              	.LVL2001:
ARM GAS  /tmp/ccOloYeZ.s 			page 466


5817:Core/Src/bno055.c ****             *euler_r_d = data_d;
 15877              		.loc 1 5817 20 view .LVU4496
 15878 003a 0022     		movs	r2, #0
 15879 003c 0A4B     		ldr	r3, .L1180
 15880 003e FFF7FEFF 		bl	__aeabi_dmul
 15881              	.LVL2002:
5818:Core/Src/bno055.c ****         }
 15882              		.loc 1 5818 13 is_stmt 1 view .LVU4497
5818:Core/Src/bno055.c ****         }
 15883              		.loc 1 5818 24 is_stmt 0 view .LVU4498
 15884 0042 C5E90001 		strd	r0, [r5]
 15885              	.LVL2003:
 15886              	.L1175:
5830:Core/Src/bno055.c **** }
 15887              		.loc 1 5830 5 is_stmt 1 view .LVU4499
5831:Core/Src/bno055.c **** 
 15888              		.loc 1 5831 1 is_stmt 0 view .LVU4500
 15889 0046 2046     		mov	r0, r4
 15890 0048 03B0     		add	sp, sp, #12
 15891              		.cfi_remember_state
 15892              		.cfi_def_cfa_offset 12
 15893              		@ sp needed
 15894 004a 30BD     		pop	{r4, r5, pc}
 15895              	.LVL2004:
 15896              	.L1179:
 15897              		.cfi_restore_state
5808:Core/Src/bno055.c ****     }
 15898              		.loc 1 5808 9 is_stmt 1 view .LVU4501
5808:Core/Src/bno055.c ****     }
 15899              		.loc 1 5808 21 is_stmt 0 view .LVU4502
 15900 004c 0020     		movs	r0, #0
 15901 004e FFF7FEFF 		bl	bno055_set_euler_unit
 15902              	.LVL2005:
5808:Core/Src/bno055.c ****     }
 15903              		.loc 1 5808 18 view .LVU4503
 15904 0052 54FA80F4 		uxtab	r4, r4, r0
 15905              	.LVL2006:
5808:Core/Src/bno055.c ****     }
 15906              		.loc 1 5808 18 view .LVU4504
 15907 0056 64B2     		sxtb	r4, r4
 15908              	.LVL2007:
5808:Core/Src/bno055.c ****     }
 15909              		.loc 1 5808 18 view .LVU4505
 15910 0058 E2E7     		b	.L1174
 15911              	.L1176:
5827:Core/Src/bno055.c ****     }
 15912              		.loc 1 5827 18 view .LVU4506
 15913 005a 4FF0FF34 		mov	r4, #-1
 15914              	.LVL2008:
5827:Core/Src/bno055.c ****     }
 15915              		.loc 1 5827 18 view .LVU4507
 15916 005e F2E7     		b	.L1175
 15917              	.LVL2009:
 15918              	.L1177:
5822:Core/Src/bno055.c ****         }
 15919              		.loc 1 5822 22 view .LVU4508
 15920 0060 4FF0FF34 		mov	r4, #-1
ARM GAS  /tmp/ccOloYeZ.s 			page 467


 15921              	.LVL2010:
5822:Core/Src/bno055.c ****         }
 15922              		.loc 1 5822 22 view .LVU4509
 15923 0064 EFE7     		b	.L1175
 15924              	.L1181:
 15925 0066 00BF     		.align	2
 15926              	.L1180:
 15927 0068 0000B03F 		.word	1068498944
 15928              		.cfi_endproc
 15929              	.LFE101:
 15931              		.section	.text.bno055_convert_double_euler_r_rad,"ax",%progbits
 15932              		.align	1
 15933              		.global	bno055_convert_double_euler_r_rad
 15934              		.syntax unified
 15935              		.thumb
 15936              		.thumb_func
 15938              	bno055_convert_double_euler_r_rad:
 15939              	.LVL2011:
 15940              	.LFB102:
5846:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15941              		.loc 1 5846 1 is_stmt 1 view -0
 15942              		.cfi_startproc
 15943              		@ args = 0, pretend = 0, frame = 8
 15944              		@ frame_needed = 0, uses_anonymous_args = 0
5846:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15945              		.loc 1 5846 1 is_stmt 0 view .LVU4511
 15946 0000 30B5     		push	{r4, r5, lr}
 15947              		.cfi_def_cfa_offset 12
 15948              		.cfi_offset 4, -12
 15949              		.cfi_offset 5, -8
 15950              		.cfi_offset 14, -4
 15951 0002 83B0     		sub	sp, sp, #12
 15952              		.cfi_def_cfa_offset 24
 15953 0004 0546     		mov	r5, r0
5847:Core/Src/bno055.c ****     s16 reg_euler_r_s16 = BNO055_INIT_VALUE;
 15954              		.loc 1 5847 5 is_stmt 1 view .LVU4512
 15955              	.LVL2012:
5848:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 15956              		.loc 1 5848 5 view .LVU4513
5848:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 15957              		.loc 1 5848 9 is_stmt 0 view .LVU4514
 15958 0006 0023     		movs	r3, #0
 15959 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5849:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15960              		.loc 1 5849 5 is_stmt 1 view .LVU4515
 15961              	.LVL2013:
5850:Core/Src/bno055.c **** 
 15962              		.loc 1 5850 5 view .LVU4516
5850:Core/Src/bno055.c **** 
 15963              		.loc 1 5850 8 is_stmt 0 view .LVU4517
 15964 000c 8DF80530 		strb	r3, [sp, #5]
5854:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15965              		.loc 1 5854 5 is_stmt 1 view .LVU4518
5854:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15966              		.loc 1 5854 16 is_stmt 0 view .LVU4519
 15967 0010 0DF10500 		add	r0, sp, #5
 15968              	.LVL2014:
ARM GAS  /tmp/ccOloYeZ.s 			page 468


5854:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15969              		.loc 1 5854 16 view .LVU4520
 15970 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15971              	.LVL2015:
 15972 0018 0446     		mov	r4, r0
 15973              	.LVL2016:
5855:Core/Src/bno055.c ****     {
 15974              		.loc 1 5855 5 is_stmt 1 view .LVU4521
5855:Core/Src/bno055.c ****     {
 15975              		.loc 1 5855 23 is_stmt 0 view .LVU4522
 15976 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5855:Core/Src/bno055.c ****     {
 15977              		.loc 1 5855 8 view .LVU4523
 15978 001e 012B     		cmp	r3, #1
 15979 0020 15D1     		bne	.L1188
 15980              	.L1183:
5859:Core/Src/bno055.c ****     {
 15981              		.loc 1 5859 5 is_stmt 1 view .LVU4524
5859:Core/Src/bno055.c ****     {
 15982              		.loc 1 5859 8 is_stmt 0 view .LVU4525
 15983 0022 DCB9     		cbnz	r4, .L1185
5862:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15984              		.loc 1 5862 9 is_stmt 1 view .LVU4526
5862:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15985              		.loc 1 5862 21 is_stmt 0 view .LVU4527
 15986 0024 0DF10600 		add	r0, sp, #6
 15987 0028 FFF7FEFF 		bl	bno055_read_euler_r
 15988              	.LVL2017:
5862:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15989              		.loc 1 5862 18 view .LVU4528
 15990 002c 54FA80F4 		uxtab	r4, r4, r0
 15991              	.LVL2018:
5862:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15992              		.loc 1 5862 18 view .LVU4529
 15993 0030 64B2     		sxtb	r4, r4
 15994              	.LVL2019:
5863:Core/Src/bno055.c ****         {
 15995              		.loc 1 5863 9 is_stmt 1 view .LVU4530
5863:Core/Src/bno055.c ****         {
 15996              		.loc 1 5863 12 is_stmt 0 view .LVU4531
 15997 0032 B4B9     		cbnz	r4, .L1186
5866:Core/Src/bno055.c ****             *euler_r_d = data_d;
 15998              		.loc 1 5866 13 is_stmt 1 view .LVU4532
5866:Core/Src/bno055.c ****             *euler_r_d = data_d;
 15999              		.loc 1 5866 22 is_stmt 0 view .LVU4533
 16000 0034 BDF90600 		ldrsh	r0, [sp, #6]
 16001 0038 FFF7FEFF 		bl	__aeabi_i2d
 16002              	.LVL2020:
5866:Core/Src/bno055.c ****             *euler_r_d = data_d;
 16003              		.loc 1 5866 20 view .LVU4534
 16004 003c 0022     		movs	r2, #0
 16005 003e 0A4B     		ldr	r3, .L1189
 16006 0040 FFF7FEFF 		bl	__aeabi_ddiv
 16007              	.LVL2021:
5867:Core/Src/bno055.c ****         }
 16008              		.loc 1 5867 13 is_stmt 1 view .LVU4535
5867:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 469


 16009              		.loc 1 5867 24 is_stmt 0 view .LVU4536
 16010 0044 C5E90001 		strd	r0, [r5]
 16011              	.LVL2022:
 16012              	.L1184:
5879:Core/Src/bno055.c **** }
 16013              		.loc 1 5879 5 is_stmt 1 view .LVU4537
5880:Core/Src/bno055.c **** 
 16014              		.loc 1 5880 1 is_stmt 0 view .LVU4538
 16015 0048 2046     		mov	r0, r4
 16016 004a 03B0     		add	sp, sp, #12
 16017              		.cfi_remember_state
 16018              		.cfi_def_cfa_offset 12
 16019              		@ sp needed
 16020 004c 30BD     		pop	{r4, r5, pc}
 16021              	.LVL2023:
 16022              	.L1188:
 16023              		.cfi_restore_state
5857:Core/Src/bno055.c ****     }
 16024              		.loc 1 5857 9 is_stmt 1 view .LVU4539
5857:Core/Src/bno055.c ****     }
 16025              		.loc 1 5857 21 is_stmt 0 view .LVU4540
 16026 004e 0120     		movs	r0, #1
 16027 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 16028              	.LVL2024:
5857:Core/Src/bno055.c ****     }
 16029              		.loc 1 5857 18 view .LVU4541
 16030 0054 54FA80F4 		uxtab	r4, r4, r0
 16031              	.LVL2025:
5857:Core/Src/bno055.c ****     }
 16032              		.loc 1 5857 18 view .LVU4542
 16033 0058 64B2     		sxtb	r4, r4
 16034              	.LVL2026:
5857:Core/Src/bno055.c ****     }
 16035              		.loc 1 5857 18 view .LVU4543
 16036 005a E2E7     		b	.L1183
 16037              	.L1185:
5876:Core/Src/bno055.c ****     }
 16038              		.loc 1 5876 18 view .LVU4544
 16039 005c 4FF0FF34 		mov	r4, #-1
 16040              	.LVL2027:
5876:Core/Src/bno055.c ****     }
 16041              		.loc 1 5876 18 view .LVU4545
 16042 0060 F2E7     		b	.L1184
 16043              	.LVL2028:
 16044              	.L1186:
5871:Core/Src/bno055.c ****         }
 16045              		.loc 1 5871 22 view .LVU4546
 16046 0062 4FF0FF34 		mov	r4, #-1
 16047              	.LVL2029:
5871:Core/Src/bno055.c ****         }
 16048              		.loc 1 5871 22 view .LVU4547
 16049 0066 EFE7     		b	.L1184
 16050              	.L1190:
 16051              		.align	2
 16052              	.L1189:
 16053 0068 00208C40 		.word	1082925056
 16054              		.cfi_endproc
ARM GAS  /tmp/ccOloYeZ.s 			page 470


 16055              	.LFE102:
 16057              		.section	.text.bno055_convert_double_euler_p_deg,"ax",%progbits
 16058              		.align	1
 16059              		.global	bno055_convert_double_euler_p_deg
 16060              		.syntax unified
 16061              		.thumb
 16062              		.thumb_func
 16064              	bno055_convert_double_euler_p_deg:
 16065              	.LVL2030:
 16066              	.LFB103:
5895:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16067              		.loc 1 5895 1 is_stmt 1 view -0
 16068              		.cfi_startproc
 16069              		@ args = 0, pretend = 0, frame = 8
 16070              		@ frame_needed = 0, uses_anonymous_args = 0
5895:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16071              		.loc 1 5895 1 is_stmt 0 view .LVU4549
 16072 0000 30B5     		push	{r4, r5, lr}
 16073              		.cfi_def_cfa_offset 12
 16074              		.cfi_offset 4, -12
 16075              		.cfi_offset 5, -8
 16076              		.cfi_offset 14, -4
 16077 0002 83B0     		sub	sp, sp, #12
 16078              		.cfi_def_cfa_offset 24
 16079 0004 0546     		mov	r5, r0
5896:Core/Src/bno055.c ****     s16 reg_euler_p_s16 = BNO055_INIT_VALUE;
 16080              		.loc 1 5896 5 is_stmt 1 view .LVU4550
 16081              	.LVL2031:
5897:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16082              		.loc 1 5897 5 view .LVU4551
5897:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16083              		.loc 1 5897 9 is_stmt 0 view .LVU4552
 16084 0006 0023     		movs	r3, #0
 16085 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5898:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16086              		.loc 1 5898 5 is_stmt 1 view .LVU4553
 16087              	.LVL2032:
5899:Core/Src/bno055.c **** 
 16088              		.loc 1 5899 5 view .LVU4554
5899:Core/Src/bno055.c **** 
 16089              		.loc 1 5899 8 is_stmt 0 view .LVU4555
 16090 000c 8DF80530 		strb	r3, [sp, #5]
5903:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16091              		.loc 1 5903 5 is_stmt 1 view .LVU4556
5903:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16092              		.loc 1 5903 16 is_stmt 0 view .LVU4557
 16093 0010 0DF10500 		add	r0, sp, #5
 16094              	.LVL2033:
5903:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16095              		.loc 1 5903 16 view .LVU4558
 16096 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16097              	.LVL2034:
 16098 0018 0446     		mov	r4, r0
 16099              	.LVL2035:
5904:Core/Src/bno055.c ****     {
 16100              		.loc 1 5904 5 is_stmt 1 view .LVU4559
5904:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 471


 16101              		.loc 1 5904 23 is_stmt 0 view .LVU4560
 16102 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5904:Core/Src/bno055.c ****     {
 16103              		.loc 1 5904 8 view .LVU4561
 16104 001e ABB9     		cbnz	r3, .L1197
 16105              	.L1192:
5908:Core/Src/bno055.c ****     {
 16106              		.loc 1 5908 5 is_stmt 1 view .LVU4562
5908:Core/Src/bno055.c ****     {
 16107              		.loc 1 5908 8 is_stmt 0 view .LVU4563
 16108 0020 DCB9     		cbnz	r4, .L1194
5911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16109              		.loc 1 5911 9 is_stmt 1 view .LVU4564
5911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16110              		.loc 1 5911 21 is_stmt 0 view .LVU4565
 16111 0022 0DF10600 		add	r0, sp, #6
 16112 0026 FFF7FEFF 		bl	bno055_read_euler_p
 16113              	.LVL2036:
5911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16114              		.loc 1 5911 18 view .LVU4566
 16115 002a 54FA80F4 		uxtab	r4, r4, r0
 16116              	.LVL2037:
5911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16117              		.loc 1 5911 18 view .LVU4567
 16118 002e 64B2     		sxtb	r4, r4
 16119              	.LVL2038:
5912:Core/Src/bno055.c ****         {
 16120              		.loc 1 5912 9 is_stmt 1 view .LVU4568
5912:Core/Src/bno055.c ****         {
 16121              		.loc 1 5912 12 is_stmt 0 view .LVU4569
 16122 0030 B4B9     		cbnz	r4, .L1195
5915:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16123              		.loc 1 5915 13 is_stmt 1 view .LVU4570
5915:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16124              		.loc 1 5915 22 is_stmt 0 view .LVU4571
 16125 0032 BDF90600 		ldrsh	r0, [sp, #6]
 16126 0036 FFF7FEFF 		bl	__aeabi_i2d
 16127              	.LVL2039:
5915:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16128              		.loc 1 5915 20 view .LVU4572
 16129 003a 0022     		movs	r2, #0
 16130 003c 0A4B     		ldr	r3, .L1198
 16131 003e FFF7FEFF 		bl	__aeabi_dmul
 16132              	.LVL2040:
5916:Core/Src/bno055.c ****         }
 16133              		.loc 1 5916 13 is_stmt 1 view .LVU4573
5916:Core/Src/bno055.c ****         }
 16134              		.loc 1 5916 24 is_stmt 0 view .LVU4574
 16135 0042 C5E90001 		strd	r0, [r5]
 16136              	.LVL2041:
 16137              	.L1193:
5928:Core/Src/bno055.c **** }
 16138              		.loc 1 5928 5 is_stmt 1 view .LVU4575
5929:Core/Src/bno055.c **** 
 16139              		.loc 1 5929 1 is_stmt 0 view .LVU4576
 16140 0046 2046     		mov	r0, r4
 16141 0048 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccOloYeZ.s 			page 472


 16142              		.cfi_remember_state
 16143              		.cfi_def_cfa_offset 12
 16144              		@ sp needed
 16145 004a 30BD     		pop	{r4, r5, pc}
 16146              	.LVL2042:
 16147              	.L1197:
 16148              		.cfi_restore_state
5906:Core/Src/bno055.c ****     }
 16149              		.loc 1 5906 9 is_stmt 1 view .LVU4577
5906:Core/Src/bno055.c ****     }
 16150              		.loc 1 5906 21 is_stmt 0 view .LVU4578
 16151 004c 0020     		movs	r0, #0
 16152 004e FFF7FEFF 		bl	bno055_set_euler_unit
 16153              	.LVL2043:
5906:Core/Src/bno055.c ****     }
 16154              		.loc 1 5906 18 view .LVU4579
 16155 0052 54FA80F4 		uxtab	r4, r4, r0
 16156              	.LVL2044:
5906:Core/Src/bno055.c ****     }
 16157              		.loc 1 5906 18 view .LVU4580
 16158 0056 64B2     		sxtb	r4, r4
 16159              	.LVL2045:
5906:Core/Src/bno055.c ****     }
 16160              		.loc 1 5906 18 view .LVU4581
 16161 0058 E2E7     		b	.L1192
 16162              	.L1194:
5925:Core/Src/bno055.c ****     }
 16163              		.loc 1 5925 18 view .LVU4582
 16164 005a 4FF0FF34 		mov	r4, #-1
 16165              	.LVL2046:
5925:Core/Src/bno055.c ****     }
 16166              		.loc 1 5925 18 view .LVU4583
 16167 005e F2E7     		b	.L1193
 16168              	.LVL2047:
 16169              	.L1195:
5920:Core/Src/bno055.c ****         }
 16170              		.loc 1 5920 22 view .LVU4584
 16171 0060 4FF0FF34 		mov	r4, #-1
 16172              	.LVL2048:
5920:Core/Src/bno055.c ****         }
 16173              		.loc 1 5920 22 view .LVU4585
 16174 0064 EFE7     		b	.L1193
 16175              	.L1199:
 16176 0066 00BF     		.align	2
 16177              	.L1198:
 16178 0068 0000B03F 		.word	1068498944
 16179              		.cfi_endproc
 16180              	.LFE103:
 16182              		.section	.text.bno055_convert_double_euler_p_rad,"ax",%progbits
 16183              		.align	1
 16184              		.global	bno055_convert_double_euler_p_rad
 16185              		.syntax unified
 16186              		.thumb
 16187              		.thumb_func
 16189              	bno055_convert_double_euler_p_rad:
 16190              	.LVL2049:
 16191              	.LFB104:
ARM GAS  /tmp/ccOloYeZ.s 			page 473


5944:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16192              		.loc 1 5944 1 is_stmt 1 view -0
 16193              		.cfi_startproc
 16194              		@ args = 0, pretend = 0, frame = 8
 16195              		@ frame_needed = 0, uses_anonymous_args = 0
5944:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16196              		.loc 1 5944 1 is_stmt 0 view .LVU4587
 16197 0000 30B5     		push	{r4, r5, lr}
 16198              		.cfi_def_cfa_offset 12
 16199              		.cfi_offset 4, -12
 16200              		.cfi_offset 5, -8
 16201              		.cfi_offset 14, -4
 16202 0002 83B0     		sub	sp, sp, #12
 16203              		.cfi_def_cfa_offset 24
 16204 0004 0546     		mov	r5, r0
5945:Core/Src/bno055.c ****     s16 reg_euler_p_s16 = BNO055_INIT_VALUE;
 16205              		.loc 1 5945 5 is_stmt 1 view .LVU4588
 16206              	.LVL2050:
5946:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16207              		.loc 1 5946 5 view .LVU4589
5946:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16208              		.loc 1 5946 9 is_stmt 0 view .LVU4590
 16209 0006 0023     		movs	r3, #0
 16210 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5947:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16211              		.loc 1 5947 5 is_stmt 1 view .LVU4591
 16212              	.LVL2051:
5948:Core/Src/bno055.c **** 
 16213              		.loc 1 5948 5 view .LVU4592
5948:Core/Src/bno055.c **** 
 16214              		.loc 1 5948 8 is_stmt 0 view .LVU4593
 16215 000c 8DF80530 		strb	r3, [sp, #5]
5952:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16216              		.loc 1 5952 5 is_stmt 1 view .LVU4594
5952:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16217              		.loc 1 5952 16 is_stmt 0 view .LVU4595
 16218 0010 0DF10500 		add	r0, sp, #5
 16219              	.LVL2052:
5952:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16220              		.loc 1 5952 16 view .LVU4596
 16221 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16222              	.LVL2053:
 16223 0018 0446     		mov	r4, r0
 16224              	.LVL2054:
5953:Core/Src/bno055.c ****     {
 16225              		.loc 1 5953 5 is_stmt 1 view .LVU4597
5953:Core/Src/bno055.c ****     {
 16226              		.loc 1 5953 23 is_stmt 0 view .LVU4598
 16227 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5953:Core/Src/bno055.c ****     {
 16228              		.loc 1 5953 8 view .LVU4599
 16229 001e 012B     		cmp	r3, #1
 16230 0020 15D1     		bne	.L1206
 16231              	.L1201:
5957:Core/Src/bno055.c ****     {
 16232              		.loc 1 5957 5 is_stmt 1 view .LVU4600
5957:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 474


 16233              		.loc 1 5957 8 is_stmt 0 view .LVU4601
 16234 0022 DCB9     		cbnz	r4, .L1203
5960:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16235              		.loc 1 5960 9 is_stmt 1 view .LVU4602
5960:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16236              		.loc 1 5960 21 is_stmt 0 view .LVU4603
 16237 0024 0DF10600 		add	r0, sp, #6
 16238 0028 FFF7FEFF 		bl	bno055_read_euler_p
 16239              	.LVL2055:
5960:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16240              		.loc 1 5960 18 view .LVU4604
 16241 002c 54FA80F4 		uxtab	r4, r4, r0
 16242              	.LVL2056:
5960:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16243              		.loc 1 5960 18 view .LVU4605
 16244 0030 64B2     		sxtb	r4, r4
 16245              	.LVL2057:
5961:Core/Src/bno055.c ****         {
 16246              		.loc 1 5961 9 is_stmt 1 view .LVU4606
5961:Core/Src/bno055.c ****         {
 16247              		.loc 1 5961 12 is_stmt 0 view .LVU4607
 16248 0032 B4B9     		cbnz	r4, .L1204
5964:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16249              		.loc 1 5964 13 is_stmt 1 view .LVU4608
5964:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16250              		.loc 1 5964 22 is_stmt 0 view .LVU4609
 16251 0034 BDF90600 		ldrsh	r0, [sp, #6]
 16252 0038 FFF7FEFF 		bl	__aeabi_i2d
 16253              	.LVL2058:
5964:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16254              		.loc 1 5964 20 view .LVU4610
 16255 003c 0022     		movs	r2, #0
 16256 003e 0A4B     		ldr	r3, .L1207
 16257 0040 FFF7FEFF 		bl	__aeabi_ddiv
 16258              	.LVL2059:
5965:Core/Src/bno055.c ****         }
 16259              		.loc 1 5965 13 is_stmt 1 view .LVU4611
5965:Core/Src/bno055.c ****         }
 16260              		.loc 1 5965 24 is_stmt 0 view .LVU4612
 16261 0044 C5E90001 		strd	r0, [r5]
 16262              	.LVL2060:
 16263              	.L1202:
5977:Core/Src/bno055.c **** }
 16264              		.loc 1 5977 5 is_stmt 1 view .LVU4613
5978:Core/Src/bno055.c **** 
 16265              		.loc 1 5978 1 is_stmt 0 view .LVU4614
 16266 0048 2046     		mov	r0, r4
 16267 004a 03B0     		add	sp, sp, #12
 16268              		.cfi_remember_state
 16269              		.cfi_def_cfa_offset 12
 16270              		@ sp needed
 16271 004c 30BD     		pop	{r4, r5, pc}
 16272              	.LVL2061:
 16273              	.L1206:
 16274              		.cfi_restore_state
5955:Core/Src/bno055.c ****     }
 16275              		.loc 1 5955 9 is_stmt 1 view .LVU4615
ARM GAS  /tmp/ccOloYeZ.s 			page 475


5955:Core/Src/bno055.c ****     }
 16276              		.loc 1 5955 21 is_stmt 0 view .LVU4616
 16277 004e 0120     		movs	r0, #1
 16278 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 16279              	.LVL2062:
5955:Core/Src/bno055.c ****     }
 16280              		.loc 1 5955 18 view .LVU4617
 16281 0054 54FA80F4 		uxtab	r4, r4, r0
 16282              	.LVL2063:
5955:Core/Src/bno055.c ****     }
 16283              		.loc 1 5955 18 view .LVU4618
 16284 0058 64B2     		sxtb	r4, r4
 16285              	.LVL2064:
5955:Core/Src/bno055.c ****     }
 16286              		.loc 1 5955 18 view .LVU4619
 16287 005a E2E7     		b	.L1201
 16288              	.L1203:
5974:Core/Src/bno055.c ****     }
 16289              		.loc 1 5974 18 view .LVU4620
 16290 005c 4FF0FF34 		mov	r4, #-1
 16291              	.LVL2065:
5974:Core/Src/bno055.c ****     }
 16292              		.loc 1 5974 18 view .LVU4621
 16293 0060 F2E7     		b	.L1202
 16294              	.LVL2066:
 16295              	.L1204:
5969:Core/Src/bno055.c ****         }
 16296              		.loc 1 5969 22 view .LVU4622
 16297 0062 4FF0FF34 		mov	r4, #-1
 16298              	.LVL2067:
5969:Core/Src/bno055.c ****         }
 16299              		.loc 1 5969 22 view .LVU4623
 16300 0066 EFE7     		b	.L1202
 16301              	.L1208:
 16302              		.align	2
 16303              	.L1207:
 16304 0068 00208C40 		.word	1082925056
 16305              		.cfi_endproc
 16306              	.LFE104:
 16308              		.section	.text.bno055_convert_double_euler_hpr_deg,"ax",%progbits
 16309              		.align	1
 16310              		.global	bno055_convert_double_euler_hpr_deg
 16311              		.syntax unified
 16312              		.thumb
 16313              		.thumb_func
 16315              	bno055_convert_double_euler_hpr_deg:
 16316              	.LVL2068:
 16317              	.LFB105:
5999:Core/Src/bno055.c ****     /* Variable used to return value of
 16318              		.loc 1 5999 1 is_stmt 1 view -0
 16319              		.cfi_startproc
 16320              		@ args = 0, pretend = 0, frame = 16
 16321              		@ frame_needed = 0, uses_anonymous_args = 0
5999:Core/Src/bno055.c ****     /* Variable used to return value of
 16322              		.loc 1 5999 1 is_stmt 0 view .LVU4625
 16323 0000 30B5     		push	{r4, r5, lr}
 16324              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccOloYeZ.s 			page 476


 16325              		.cfi_offset 4, -12
 16326              		.cfi_offset 5, -8
 16327              		.cfi_offset 14, -4
 16328 0002 85B0     		sub	sp, sp, #20
 16329              		.cfi_def_cfa_offset 32
 16330 0004 0546     		mov	r5, r0
6002:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 16331              		.loc 1 6002 5 is_stmt 1 view .LVU4626
 16332              	.LVL2069:
6003:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16333              		.loc 1 6003 5 view .LVU4627
6003:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16334              		.loc 1 6003 27 is_stmt 0 view .LVU4628
 16335 0006 0023     		movs	r3, #0
 16336 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 16337 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 16338 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
6004:Core/Src/bno055.c **** 
 16339              		.loc 1 6004 5 is_stmt 1 view .LVU4629
6004:Core/Src/bno055.c **** 
 16340              		.loc 1 6004 8 is_stmt 0 view .LVU4630
 16341 0014 8DF80730 		strb	r3, [sp, #7]
6008:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16342              		.loc 1 6008 5 is_stmt 1 view .LVU4631
6008:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16343              		.loc 1 6008 16 is_stmt 0 view .LVU4632
 16344 0018 0DF10700 		add	r0, sp, #7
 16345              	.LVL2070:
6008:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16346              		.loc 1 6008 16 view .LVU4633
 16347 001c FFF7FEFF 		bl	bno055_get_euler_unit
 16348              	.LVL2071:
 16349 0020 0446     		mov	r4, r0
 16350              	.LVL2072:
6009:Core/Src/bno055.c ****     {
 16351              		.loc 1 6009 5 is_stmt 1 view .LVU4634
6009:Core/Src/bno055.c ****     {
 16352              		.loc 1 6009 23 is_stmt 0 view .LVU4635
 16353 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
6009:Core/Src/bno055.c ****     {
 16354              		.loc 1 6009 8 view .LVU4636
 16355 0026 43BB     		cbnz	r3, .L1215
 16356              	.L1210:
6013:Core/Src/bno055.c ****     {
 16357              		.loc 1 6013 5 is_stmt 1 view .LVU4637
6013:Core/Src/bno055.c ****     {
 16358              		.loc 1 6013 8 is_stmt 0 view .LVU4638
 16359 0028 74BB     		cbnz	r4, .L1212
6016:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16360              		.loc 1 6016 9 is_stmt 1 view .LVU4639
6016:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16361              		.loc 1 6016 21 is_stmt 0 view .LVU4640
 16362 002a 02A8     		add	r0, sp, #8
 16363 002c FFF7FEFF 		bl	bno055_read_euler_hrp
 16364              	.LVL2073:
6016:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16365              		.loc 1 6016 18 view .LVU4641
ARM GAS  /tmp/ccOloYeZ.s 			page 477


 16366 0030 54FA80F4 		uxtab	r4, r4, r0
 16367              	.LVL2074:
6016:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16368              		.loc 1 6016 18 view .LVU4642
 16369 0034 64B2     		sxtb	r4, r4
 16370              	.LVL2075:
6017:Core/Src/bno055.c ****         {
 16371              		.loc 1 6017 9 is_stmt 1 view .LVU4643
6017:Core/Src/bno055.c ****         {
 16372              		.loc 1 6017 12 is_stmt 0 view .LVU4644
 16373 0036 54BB     		cbnz	r4, .L1213
6020:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_DEG);
 16374              		.loc 1 6020 13 is_stmt 1 view .LVU4645
6020:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_DEG);
 16375              		.loc 1 6020 28 is_stmt 0 view .LVU4646
 16376 0038 BDF90800 		ldrsh	r0, [sp, #8]
 16377 003c FFF7FEFF 		bl	__aeabi_i2d
 16378              	.LVL2076:
 16379 0040 0022     		movs	r2, #0
 16380 0042 144B     		ldr	r3, .L1216
 16381 0044 FFF7FEFF 		bl	__aeabi_dmul
 16382              	.LVL2077:
6020:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_DEG);
 16383              		.loc 1 6020 26 view .LVU4647
 16384 0048 C5E90001 		strd	r0, [r5]
6021:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_DEG);
 16385              		.loc 1 6021 13 is_stmt 1 view .LVU4648
6021:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_DEG);
 16386              		.loc 1 6021 28 is_stmt 0 view .LVU4649
 16387 004c BDF90C00 		ldrsh	r0, [sp, #12]
 16388 0050 FFF7FEFF 		bl	__aeabi_i2d
 16389              	.LVL2078:
 16390 0054 0022     		movs	r2, #0
 16391 0056 0F4B     		ldr	r3, .L1216
 16392 0058 FFF7FEFF 		bl	__aeabi_dmul
 16393              	.LVL2079:
6021:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_DEG);
 16394              		.loc 1 6021 26 view .LVU4650
 16395 005c C5E90401 		strd	r0, [r5, #16]
6022:Core/Src/bno055.c ****         }
 16396              		.loc 1 6022 13 is_stmt 1 view .LVU4651
6022:Core/Src/bno055.c ****         }
 16397              		.loc 1 6022 28 is_stmt 0 view .LVU4652
 16398 0060 BDF90A00 		ldrsh	r0, [sp, #10]
 16399 0064 FFF7FEFF 		bl	__aeabi_i2d
 16400              	.LVL2080:
 16401 0068 0022     		movs	r2, #0
 16402 006a 0A4B     		ldr	r3, .L1216
 16403 006c FFF7FEFF 		bl	__aeabi_dmul
 16404              	.LVL2081:
6022:Core/Src/bno055.c ****         }
 16405              		.loc 1 6022 26 view .LVU4653
 16406 0070 C5E90201 		strd	r0, [r5, #8]
 16407              	.LVL2082:
 16408              	.L1211:
6034:Core/Src/bno055.c **** }
 16409              		.loc 1 6034 5 is_stmt 1 view .LVU4654
ARM GAS  /tmp/ccOloYeZ.s 			page 478


6035:Core/Src/bno055.c **** 
 16410              		.loc 1 6035 1 is_stmt 0 view .LVU4655
 16411 0074 2046     		mov	r0, r4
 16412 0076 05B0     		add	sp, sp, #20
 16413              		.cfi_remember_state
 16414              		.cfi_def_cfa_offset 12
 16415              		@ sp needed
 16416 0078 30BD     		pop	{r4, r5, pc}
 16417              	.LVL2083:
 16418              	.L1215:
 16419              		.cfi_restore_state
6011:Core/Src/bno055.c ****     }
 16420              		.loc 1 6011 9 is_stmt 1 view .LVU4656
6011:Core/Src/bno055.c ****     }
 16421              		.loc 1 6011 21 is_stmt 0 view .LVU4657
 16422 007a 0020     		movs	r0, #0
 16423 007c FFF7FEFF 		bl	bno055_set_euler_unit
 16424              	.LVL2084:
6011:Core/Src/bno055.c ****     }
 16425              		.loc 1 6011 18 view .LVU4658
 16426 0080 54FA80F4 		uxtab	r4, r4, r0
 16427              	.LVL2085:
6011:Core/Src/bno055.c ****     }
 16428              		.loc 1 6011 18 view .LVU4659
 16429 0084 64B2     		sxtb	r4, r4
 16430              	.LVL2086:
6011:Core/Src/bno055.c ****     }
 16431              		.loc 1 6011 18 view .LVU4660
 16432 0086 CFE7     		b	.L1210
 16433              	.L1212:
6031:Core/Src/bno055.c ****     }
 16434              		.loc 1 6031 18 view .LVU4661
 16435 0088 4FF0FF34 		mov	r4, #-1
 16436              	.LVL2087:
6031:Core/Src/bno055.c ****     }
 16437              		.loc 1 6031 18 view .LVU4662
 16438 008c F2E7     		b	.L1211
 16439              	.LVL2088:
 16440              	.L1213:
6026:Core/Src/bno055.c ****         }
 16441              		.loc 1 6026 22 view .LVU4663
 16442 008e 4FF0FF34 		mov	r4, #-1
 16443              	.LVL2089:
6026:Core/Src/bno055.c ****         }
 16444              		.loc 1 6026 22 view .LVU4664
 16445 0092 EFE7     		b	.L1211
 16446              	.L1217:
 16447              		.align	2
 16448              	.L1216:
 16449 0094 0000B03F 		.word	1068498944
 16450              		.cfi_endproc
 16451              	.LFE105:
 16453              		.section	.text.bno055_convert_double_euler_hpr_rad,"ax",%progbits
 16454              		.align	1
 16455              		.global	bno055_convert_double_euler_hpr_rad
 16456              		.syntax unified
 16457              		.thumb
ARM GAS  /tmp/ccOloYeZ.s 			page 479


 16458              		.thumb_func
 16460              	bno055_convert_double_euler_hpr_rad:
 16461              	.LVL2090:
 16462              	.LFB106:
6056:Core/Src/bno055.c ****     /* Variable used to return value of
 16463              		.loc 1 6056 1 is_stmt 1 view -0
 16464              		.cfi_startproc
 16465              		@ args = 0, pretend = 0, frame = 16
 16466              		@ frame_needed = 0, uses_anonymous_args = 0
6056:Core/Src/bno055.c ****     /* Variable used to return value of
 16467              		.loc 1 6056 1 is_stmt 0 view .LVU4666
 16468 0000 30B5     		push	{r4, r5, lr}
 16469              		.cfi_def_cfa_offset 12
 16470              		.cfi_offset 4, -12
 16471              		.cfi_offset 5, -8
 16472              		.cfi_offset 14, -4
 16473 0002 85B0     		sub	sp, sp, #20
 16474              		.cfi_def_cfa_offset 32
 16475 0004 0446     		mov	r4, r0
6059:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 16476              		.loc 1 6059 5 is_stmt 1 view .LVU4667
 16477              	.LVL2091:
6060:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16478              		.loc 1 6060 5 view .LVU4668
6060:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16479              		.loc 1 6060 27 is_stmt 0 view .LVU4669
 16480 0006 0023     		movs	r3, #0
 16481 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 16482 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 16483 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
6061:Core/Src/bno055.c **** 
 16484              		.loc 1 6061 5 is_stmt 1 view .LVU4670
6061:Core/Src/bno055.c **** 
 16485              		.loc 1 6061 8 is_stmt 0 view .LVU4671
 16486 0014 8DF80730 		strb	r3, [sp, #7]
6065:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16487              		.loc 1 6065 5 is_stmt 1 view .LVU4672
6065:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16488              		.loc 1 6065 16 is_stmt 0 view .LVU4673
 16489 0018 0DF10700 		add	r0, sp, #7
 16490              	.LVL2092:
6065:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16491              		.loc 1 6065 16 view .LVU4674
 16492 001c FFF7FEFF 		bl	bno055_get_euler_unit
 16493              	.LVL2093:
6066:Core/Src/bno055.c ****     {
 16494              		.loc 1 6066 5 is_stmt 1 view .LVU4675
6066:Core/Src/bno055.c ****     {
 16495              		.loc 1 6066 23 is_stmt 0 view .LVU4676
 16496 0020 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
6066:Core/Src/bno055.c ****     {
 16497              		.loc 1 6066 8 view .LVU4677
 16498 0024 012B     		cmp	r3, #1
 16499 0026 26D1     		bne	.L1224
 16500              	.L1219:
6070:Core/Src/bno055.c ****     {
 16501              		.loc 1 6070 5 is_stmt 1 view .LVU4678
ARM GAS  /tmp/ccOloYeZ.s 			page 480


6070:Core/Src/bno055.c ****     {
 16502              		.loc 1 6070 8 is_stmt 0 view .LVU4679
 16503 0028 48BB     		cbnz	r0, .L1221
6073:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16504              		.loc 1 6073 9 is_stmt 1 view .LVU4680
6073:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16505              		.loc 1 6073 20 is_stmt 0 view .LVU4681
 16506 002a 02A8     		add	r0, sp, #8
 16507              	.LVL2094:
6073:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16508              		.loc 1 6073 20 view .LVU4682
 16509 002c FFF7FEFF 		bl	bno055_read_euler_hrp
 16510              	.LVL2095:
6074:Core/Src/bno055.c ****         {
 16511              		.loc 1 6074 9 is_stmt 1 view .LVU4683
6074:Core/Src/bno055.c ****         {
 16512              		.loc 1 6074 12 is_stmt 0 view .LVU4684
 16513 0030 0546     		mov	r5, r0
 16514 0032 38BB     		cbnz	r0, .L1222
6077:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
 16515              		.loc 1 6077 13 is_stmt 1 view .LVU4685
6077:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
 16516              		.loc 1 6077 28 is_stmt 0 view .LVU4686
 16517 0034 BDF90800 		ldrsh	r0, [sp, #8]
 16518              	.LVL2096:
6077:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
 16519              		.loc 1 6077 28 view .LVU4687
 16520 0038 FFF7FEFF 		bl	__aeabi_i2d
 16521              	.LVL2097:
 16522 003c 0022     		movs	r2, #0
 16523 003e 134B     		ldr	r3, .L1225
 16524 0040 FFF7FEFF 		bl	__aeabi_ddiv
 16525              	.LVL2098:
6077:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
 16526              		.loc 1 6077 26 view .LVU4688
 16527 0044 C4E90001 		strd	r0, [r4]
6078:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_RAD);
 16528              		.loc 1 6078 13 is_stmt 1 view .LVU4689
6078:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_RAD);
 16529              		.loc 1 6078 28 is_stmt 0 view .LVU4690
 16530 0048 BDF90C00 		ldrsh	r0, [sp, #12]
 16531 004c FFF7FEFF 		bl	__aeabi_i2d
 16532              	.LVL2099:
 16533 0050 0022     		movs	r2, #0
 16534 0052 0E4B     		ldr	r3, .L1225
 16535 0054 FFF7FEFF 		bl	__aeabi_ddiv
 16536              	.LVL2100:
6078:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_RAD);
 16537              		.loc 1 6078 26 view .LVU4691
 16538 0058 C4E90401 		strd	r0, [r4, #16]
6079:Core/Src/bno055.c ****         }
 16539              		.loc 1 6079 13 is_stmt 1 view .LVU4692
6079:Core/Src/bno055.c ****         }
 16540              		.loc 1 6079 28 is_stmt 0 view .LVU4693
 16541 005c BDF90A00 		ldrsh	r0, [sp, #10]
 16542 0060 FFF7FEFF 		bl	__aeabi_i2d
 16543              	.LVL2101:
ARM GAS  /tmp/ccOloYeZ.s 			page 481


 16544 0064 0022     		movs	r2, #0
 16545 0066 094B     		ldr	r3, .L1225
 16546 0068 FFF7FEFF 		bl	__aeabi_ddiv
 16547              	.LVL2102:
6079:Core/Src/bno055.c ****         }
 16548              		.loc 1 6079 26 view .LVU4694
 16549 006c C4E90201 		strd	r0, [r4, #8]
 16550              	.LVL2103:
 16551              	.L1220:
6091:Core/Src/bno055.c **** }
 16552              		.loc 1 6091 5 is_stmt 1 view .LVU4695
6092:Core/Src/bno055.c **** 
 16553              		.loc 1 6092 1 is_stmt 0 view .LVU4696
 16554 0070 2846     		mov	r0, r5
 16555 0072 05B0     		add	sp, sp, #20
 16556              		.cfi_remember_state
 16557              		.cfi_def_cfa_offset 12
 16558              		@ sp needed
 16559 0074 30BD     		pop	{r4, r5, pc}
 16560              	.LVL2104:
 16561              	.L1224:
 16562              		.cfi_restore_state
6068:Core/Src/bno055.c ****     }
 16563              		.loc 1 6068 9 is_stmt 1 view .LVU4697
6068:Core/Src/bno055.c ****     }
 16564              		.loc 1 6068 20 is_stmt 0 view .LVU4698
 16565 0076 0120     		movs	r0, #1
 16566              	.LVL2105:
6068:Core/Src/bno055.c ****     }
 16567              		.loc 1 6068 20 view .LVU4699
 16568 0078 FFF7FEFF 		bl	bno055_set_euler_unit
 16569              	.LVL2106:
6068:Core/Src/bno055.c ****     }
 16570              		.loc 1 6068 20 view .LVU4700
 16571 007c D4E7     		b	.L1219
 16572              	.L1221:
6088:Core/Src/bno055.c ****     }
 16573              		.loc 1 6088 18 view .LVU4701
 16574 007e 4FF0FF35 		mov	r5, #-1
 16575 0082 F5E7     		b	.L1220
 16576              	.L1222:
6083:Core/Src/bno055.c ****         }
 16577              		.loc 1 6083 22 view .LVU4702
 16578 0084 4FF0FF35 		mov	r5, #-1
 16579 0088 F2E7     		b	.L1220
 16580              	.L1226:
 16581 008a 00BF     		.align	2
 16582              	.L1225:
 16583 008c 00208C40 		.word	1082925056
 16584              		.cfi_endproc
 16585              	.LFE106:
 16587              		.section	.text.bno055_set_tilt_unit,"ax",%progbits
 16588              		.align	1
 16589              		.global	bno055_set_tilt_unit
 16590              		.syntax unified
 16591              		.thumb
 16592              		.thumb_func
ARM GAS  /tmp/ccOloYeZ.s 			page 482


 16594              	bno055_set_tilt_unit:
 16595              	.LVL2107:
 16596              	.LFB140:
7868:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16597              		.loc 1 7868 1 is_stmt 1 view -0
 16598              		.cfi_startproc
 16599              		@ args = 0, pretend = 0, frame = 8
 16600              		@ frame_needed = 0, uses_anonymous_args = 0
7868:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16601              		.loc 1 7868 1 is_stmt 0 view .LVU4704
 16602 0000 30B5     		push	{r4, r5, lr}
 16603              		.cfi_def_cfa_offset 12
 16604              		.cfi_offset 4, -12
 16605              		.cfi_offset 5, -8
 16606              		.cfi_offset 14, -4
 16607 0002 83B0     		sub	sp, sp, #12
 16608              		.cfi_def_cfa_offset 24
7869:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 16609              		.loc 1 7869 5 is_stmt 1 view .LVU4705
 16610              	.LVL2108:
7870:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 16611              		.loc 1 7870 5 view .LVU4706
7870:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 16612              		.loc 1 7870 8 is_stmt 0 view .LVU4707
 16613 0004 0023     		movs	r3, #0
 16614 0006 8DF80730 		strb	r3, [sp, #7]
7871:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 16615              		.loc 1 7871 5 is_stmt 1 view .LVU4708
7871:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 16616              		.loc 1 7871 8 is_stmt 0 view .LVU4709
 16617 000a 8DF80630 		strb	r3, [sp, #6]
7872:Core/Src/bno055.c **** 
 16618              		.loc 1 7872 5 is_stmt 1 view .LVU4710
 16619              	.LVL2109:
7875:Core/Src/bno055.c ****     {
 16620              		.loc 1 7875 5 view .LVU4711
7875:Core/Src/bno055.c ****     {
 16621              		.loc 1 7875 18 is_stmt 0 view .LVU4712
 16622 000e 254B     		ldr	r3, .L1237
 16623 0010 1B68     		ldr	r3, [r3]
7875:Core/Src/bno055.c ****     {
 16624              		.loc 1 7875 8 view .LVU4713
 16625 0012 002B     		cmp	r3, #0
 16626 0014 43D0     		beq	.L1231
 16627 0016 0546     		mov	r5, r0
7884:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 16628              		.loc 1 7884 9 is_stmt 1 view .LVU4714
7884:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 16629              		.loc 1 7884 19 is_stmt 0 view .LVU4715
 16630 0018 0DF10600 		add	r0, sp, #6
 16631              	.LVL2110:
7884:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 16632              		.loc 1 7884 19 view .LVU4716
 16633 001c FFF7FEFF 		bl	bno055_get_operation_mode
 16634              	.LVL2111:
7885:Core/Src/bno055.c ****         {
 16635              		.loc 1 7885 9 is_stmt 1 view .LVU4717
ARM GAS  /tmp/ccOloYeZ.s 			page 483


7885:Core/Src/bno055.c ****         {
 16636              		.loc 1 7885 12 is_stmt 0 view .LVU4718
 16637 0020 0446     		mov	r4, r0
 16638 0022 58BB     		cbnz	r0, .L1232
7887:Core/Src/bno055.c ****             {
 16639              		.loc 1 7887 13 is_stmt 1 view .LVU4719
7887:Core/Src/bno055.c ****             {
 16640              		.loc 1 7887 32 is_stmt 0 view .LVU4720
 16641 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
7887:Core/Src/bno055.c ****             {
 16642              		.loc 1 7887 16 view .LVU4721
 16643 0028 13BB     		cbnz	r3, .L1235
 16644              	.LVL2112:
 16645              	.L1230:
7891:Core/Src/bno055.c ****             {
 16646              		.loc 1 7891 13 is_stmt 1 view .LVU4722
7891:Core/Src/bno055.c ****             {
 16647              		.loc 1 7891 16 is_stmt 0 view .LVU4723
 16648 002a 7CBB     		cbnz	r4, .L1233
7893:Core/Src/bno055.c ****                                                           BNO055_TILT_UNIT_REG,
 16649              		.loc 1 7893 17 is_stmt 1 view .LVU4724
7893:Core/Src/bno055.c ****                                                           BNO055_TILT_UNIT_REG,
 16650              		.loc 1 7893 36 is_stmt 0 view .LVU4725
 16651 002c 1D4B     		ldr	r3, .L1237
 16652 002e 1868     		ldr	r0, [r3]
 16653 0030 0469     		ldr	r4, [r0, #16]
 16654              	.LVL2113:
7893:Core/Src/bno055.c ****                                                           BNO055_TILT_UNIT_REG,
 16655              		.loc 1 7893 28 view .LVU4726
 16656 0032 0123     		movs	r3, #1
 16657 0034 0DF10702 		add	r2, sp, #7
 16658 0038 3B21     		movs	r1, #59
 16659 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 16660 003c A047     		blx	r4
 16661              	.LVL2114:
7897:Core/Src/bno055.c ****                 {
 16662              		.loc 1 7897 17 is_stmt 1 view .LVU4727
7897:Core/Src/bno055.c ****                 {
 16663              		.loc 1 7897 20 is_stmt 0 view .LVU4728
 16664 003e 0446     		mov	r4, r0
 16665 0040 F0B9     		cbnz	r0, .L1229
7899:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 16666              		.loc 1 7899 21 is_stmt 1 view .LVU4729
7899:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 16667              		.loc 1 7899 32 is_stmt 0 view .LVU4730
 16668 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 16669 0046 E800     		lsls	r0, r5, #3
 16670              	.LVL2115:
7899:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 16671              		.loc 1 7899 32 view .LVU4731
 16672 0048 00F00800 		and	r0, r0, #8
 16673 004c 23F00803 		bic	r3, r3, #8
 16674 0050 0343     		orrs	r3, r3, r0
7899:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 16675              		.loc 1 7899 30 view .LVU4732
 16676 0052 8DF80730 		strb	r3, [sp, #7]
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
ARM GAS  /tmp/ccOloYeZ.s 			page 484


 16677              		.loc 1 7900 21 is_stmt 1 view .LVU4733
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
 16678              		.loc 1 7900 41 is_stmt 0 view .LVU4734
 16679 0056 134B     		ldr	r3, .L1237
 16680 0058 1868     		ldr	r0, [r3]
 16681 005a C568     		ldr	r5, [r0, #12]
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
 16682              		.loc 1 7900 33 view .LVU4735
 16683 005c 0123     		movs	r3, #1
 16684 005e 0DF10702 		add	r2, sp, #7
 16685 0062 3B21     		movs	r1, #59
 16686 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 16687 0066 A847     		blx	r5
 16688              	.LVL2116:
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
 16689              		.loc 1 7900 30 view .LVU4736
 16690 0068 54FA80F0 		uxtab	r0, r4, r0
 16691 006c 44B2     		sxtb	r4, r0
 16692              	.LVL2117:
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
 16693              		.loc 1 7900 30 view .LVU4737
 16694 006e 07E0     		b	.L1229
 16695              	.LVL2118:
 16696              	.L1235:
7889:Core/Src/bno055.c ****             }
 16697              		.loc 1 7889 17 is_stmt 1 view .LVU4738
7889:Core/Src/bno055.c ****             }
 16698              		.loc 1 7889 28 is_stmt 0 view .LVU4739
 16699 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 16700              	.LVL2119:
7889:Core/Src/bno055.c ****             }
 16701              		.loc 1 7889 25 view .LVU4740
 16702 0074 54FA80F4 		uxtab	r4, r4, r0
 16703 0078 64B2     		sxtb	r4, r4
 16704              	.LVL2120:
7889:Core/Src/bno055.c ****             }
 16705              		.loc 1 7889 25 view .LVU4741
 16706 007a D6E7     		b	.L1230
 16707              	.LVL2121:
 16708              	.L1232:
7913:Core/Src/bno055.c ****         }
 16709              		.loc 1 7913 22 view .LVU4742
 16710 007c 4FF0FF34 		mov	r4, #-1
 16711              	.LVL2122:
 16712              	.L1229:
7916:Core/Src/bno055.c ****     {
 16713              		.loc 1 7916 5 is_stmt 1 view .LVU4743
7916:Core/Src/bno055.c ****     {
 16714              		.loc 1 7916 24 is_stmt 0 view .LVU4744
 16715 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
7916:Core/Src/bno055.c ****     {
 16716              		.loc 1 7916 8 view .LVU4745
 16717 0084 28B9     		cbnz	r0, .L1236
 16718              	.LVL2123:
 16719              	.L1228:
7924:Core/Src/bno055.c **** 
 16720              		.loc 1 7924 1 view .LVU4746
ARM GAS  /tmp/ccOloYeZ.s 			page 485


 16721 0086 2046     		mov	r0, r4
 16722 0088 03B0     		add	sp, sp, #12
 16723              		.cfi_remember_state
 16724              		.cfi_def_cfa_offset 12
 16725              		@ sp needed
 16726 008a 30BD     		pop	{r4, r5, pc}
 16727              	.LVL2124:
 16728              	.L1233:
 16729              		.cfi_restore_state
7908:Core/Src/bno055.c ****             }
 16730              		.loc 1 7908 26 view .LVU4747
 16731 008c 4FF0FF34 		mov	r4, #-1
 16732              	.LVL2125:
7908:Core/Src/bno055.c ****             }
 16733              		.loc 1 7908 26 view .LVU4748
 16734 0090 F6E7     		b	.L1229
 16735              	.LVL2126:
 16736              	.L1236:
7920:Core/Src/bno055.c ****     }
 16737              		.loc 1 7920 9 is_stmt 1 view .LVU4749
7920:Core/Src/bno055.c ****     }
 16738              		.loc 1 7920 21 is_stmt 0 view .LVU4750
 16739 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 16740              	.LVL2127:
7920:Core/Src/bno055.c ****     }
 16741              		.loc 1 7920 18 view .LVU4751
 16742 0096 54FA80F0 		uxtab	r0, r4, r0
 16743 009a 44B2     		sxtb	r4, r0
 16744              	.LVL2128:
7920:Core/Src/bno055.c ****     }
 16745              		.loc 1 7920 18 view .LVU4752
 16746 009c F3E7     		b	.L1228
 16747              	.LVL2129:
 16748              	.L1231:
7877:Core/Src/bno055.c ****     }
 16749              		.loc 1 7877 16 view .LVU4753
 16750 009e 6FF07E04 		mvn	r4, #126
 16751 00a2 F0E7     		b	.L1228
 16752              	.L1238:
 16753              		.align	2
 16754              	.L1237:
 16755 00a4 00000000 		.word	p_bno055
 16756              		.cfi_endproc
 16757              	.LFE140:
 16759              		.section	.text.bno055_set_temp_unit,"ax",%progbits
 16760              		.align	1
 16761              		.global	bno055_set_temp_unit
 16762              		.syntax unified
 16763              		.thumb
 16764              		.thumb_func
 16766              	bno055_set_temp_unit:
 16767              	.LVL2130:
 16768              	.LFB142:
8000:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16769              		.loc 1 8000 1 is_stmt 1 view -0
 16770              		.cfi_startproc
 16771              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccOloYeZ.s 			page 486


 16772              		@ frame_needed = 0, uses_anonymous_args = 0
8000:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16773              		.loc 1 8000 1 is_stmt 0 view .LVU4755
 16774 0000 30B5     		push	{r4, r5, lr}
 16775              		.cfi_def_cfa_offset 12
 16776              		.cfi_offset 4, -12
 16777              		.cfi_offset 5, -8
 16778              		.cfi_offset 14, -4
 16779 0002 83B0     		sub	sp, sp, #12
 16780              		.cfi_def_cfa_offset 24
8001:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 16781              		.loc 1 8001 5 is_stmt 1 view .LVU4756
 16782              	.LVL2131:
8002:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 16783              		.loc 1 8002 5 view .LVU4757
8002:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 16784              		.loc 1 8002 8 is_stmt 0 view .LVU4758
 16785 0004 0023     		movs	r3, #0
 16786 0006 8DF80730 		strb	r3, [sp, #7]
8003:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 16787              		.loc 1 8003 5 is_stmt 1 view .LVU4759
8003:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 16788              		.loc 1 8003 8 is_stmt 0 view .LVU4760
 16789 000a 8DF80630 		strb	r3, [sp, #6]
8004:Core/Src/bno055.c **** 
 16790              		.loc 1 8004 5 is_stmt 1 view .LVU4761
 16791              	.LVL2132:
8007:Core/Src/bno055.c ****     {
 16792              		.loc 1 8007 5 view .LVU4762
8007:Core/Src/bno055.c ****     {
 16793              		.loc 1 8007 18 is_stmt 0 view .LVU4763
 16794 000e 254B     		ldr	r3, .L1249
 16795 0010 1B68     		ldr	r3, [r3]
8007:Core/Src/bno055.c ****     {
 16796              		.loc 1 8007 8 view .LVU4764
 16797 0012 002B     		cmp	r3, #0
 16798 0014 43D0     		beq	.L1243
 16799 0016 0546     		mov	r5, r0
8016:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 16800              		.loc 1 8016 9 is_stmt 1 view .LVU4765
8016:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 16801              		.loc 1 8016 19 is_stmt 0 view .LVU4766
 16802 0018 0DF10600 		add	r0, sp, #6
 16803              	.LVL2133:
8016:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 16804              		.loc 1 8016 19 view .LVU4767
 16805 001c FFF7FEFF 		bl	bno055_get_operation_mode
 16806              	.LVL2134:
8017:Core/Src/bno055.c ****         {
 16807              		.loc 1 8017 9 is_stmt 1 view .LVU4768
8017:Core/Src/bno055.c ****         {
 16808              		.loc 1 8017 12 is_stmt 0 view .LVU4769
 16809 0020 0446     		mov	r4, r0
 16810 0022 58BB     		cbnz	r0, .L1244
8019:Core/Src/bno055.c ****             {
 16811              		.loc 1 8019 13 is_stmt 1 view .LVU4770
8019:Core/Src/bno055.c ****             {
ARM GAS  /tmp/ccOloYeZ.s 			page 487


 16812              		.loc 1 8019 32 is_stmt 0 view .LVU4771
 16813 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
8019:Core/Src/bno055.c ****             {
 16814              		.loc 1 8019 16 view .LVU4772
 16815 0028 13BB     		cbnz	r3, .L1247
 16816              	.LVL2135:
 16817              	.L1242:
8023:Core/Src/bno055.c ****             {
 16818              		.loc 1 8023 13 is_stmt 1 view .LVU4773
8023:Core/Src/bno055.c ****             {
 16819              		.loc 1 8023 16 is_stmt 0 view .LVU4774
 16820 002a 7CBB     		cbnz	r4, .L1245
8026:Core/Src/bno055.c ****                                                           BNO055_TEMP_UNIT_REG,
 16821              		.loc 1 8026 17 is_stmt 1 view .LVU4775
8026:Core/Src/bno055.c ****                                                           BNO055_TEMP_UNIT_REG,
 16822              		.loc 1 8026 36 is_stmt 0 view .LVU4776
 16823 002c 1D4B     		ldr	r3, .L1249
 16824 002e 1868     		ldr	r0, [r3]
 16825 0030 0469     		ldr	r4, [r0, #16]
 16826              	.LVL2136:
8026:Core/Src/bno055.c ****                                                           BNO055_TEMP_UNIT_REG,
 16827              		.loc 1 8026 28 view .LVU4777
 16828 0032 0123     		movs	r3, #1
 16829 0034 0DF10702 		add	r2, sp, #7
 16830 0038 3B21     		movs	r1, #59
 16831 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 16832 003c A047     		blx	r4
 16833              	.LVL2137:
8030:Core/Src/bno055.c ****                 {
 16834              		.loc 1 8030 17 is_stmt 1 view .LVU4778
8030:Core/Src/bno055.c ****                 {
 16835              		.loc 1 8030 20 is_stmt 0 view .LVU4779
 16836 003e 0446     		mov	r4, r0
 16837 0040 F0B9     		cbnz	r0, .L1241
8032:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 16838              		.loc 1 8032 21 is_stmt 1 view .LVU4780
8032:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 16839              		.loc 1 8032 32 is_stmt 0 view .LVU4781
 16840 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 16841 0046 2801     		lsls	r0, r5, #4
 16842              	.LVL2138:
8032:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 16843              		.loc 1 8032 32 view .LVU4782
 16844 0048 00F01000 		and	r0, r0, #16
 16845 004c 23F01003 		bic	r3, r3, #16
 16846 0050 0343     		orrs	r3, r3, r0
8032:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 16847              		.loc 1 8032 30 view .LVU4783
 16848 0052 8DF80730 		strb	r3, [sp, #7]
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
 16849              		.loc 1 8033 21 is_stmt 1 view .LVU4784
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
 16850              		.loc 1 8033 41 is_stmt 0 view .LVU4785
 16851 0056 134B     		ldr	r3, .L1249
 16852 0058 1868     		ldr	r0, [r3]
 16853 005a C568     		ldr	r5, [r0, #12]
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
ARM GAS  /tmp/ccOloYeZ.s 			page 488


 16854              		.loc 1 8033 33 view .LVU4786
 16855 005c 0123     		movs	r3, #1
 16856 005e 0DF10702 		add	r2, sp, #7
 16857 0062 3B21     		movs	r1, #59
 16858 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 16859 0066 A847     		blx	r5
 16860              	.LVL2139:
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
 16861              		.loc 1 8033 30 view .LVU4787
 16862 0068 54FA80F0 		uxtab	r0, r4, r0
 16863 006c 44B2     		sxtb	r4, r0
 16864              	.LVL2140:
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
 16865              		.loc 1 8033 30 view .LVU4788
 16866 006e 07E0     		b	.L1241
 16867              	.LVL2141:
 16868              	.L1247:
8021:Core/Src/bno055.c ****             }
 16869              		.loc 1 8021 17 is_stmt 1 view .LVU4789
8021:Core/Src/bno055.c ****             }
 16870              		.loc 1 8021 28 is_stmt 0 view .LVU4790
 16871 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 16872              	.LVL2142:
8021:Core/Src/bno055.c ****             }
 16873              		.loc 1 8021 25 view .LVU4791
 16874 0074 54FA80F4 		uxtab	r4, r4, r0
 16875 0078 64B2     		sxtb	r4, r4
 16876              	.LVL2143:
8021:Core/Src/bno055.c ****             }
 16877              		.loc 1 8021 25 view .LVU4792
 16878 007a D6E7     		b	.L1242
 16879              	.LVL2144:
 16880              	.L1244:
8046:Core/Src/bno055.c ****         }
 16881              		.loc 1 8046 22 view .LVU4793
 16882 007c 4FF0FF34 		mov	r4, #-1
 16883              	.LVL2145:
 16884              	.L1241:
8049:Core/Src/bno055.c ****     {
 16885              		.loc 1 8049 5 is_stmt 1 view .LVU4794
8049:Core/Src/bno055.c ****     {
 16886              		.loc 1 8049 24 is_stmt 0 view .LVU4795
 16887 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
8049:Core/Src/bno055.c ****     {
 16888              		.loc 1 8049 8 view .LVU4796
 16889 0084 28B9     		cbnz	r0, .L1248
 16890              	.LVL2146:
 16891              	.L1240:
8057:Core/Src/bno055.c **** 
 16892              		.loc 1 8057 1 view .LVU4797
 16893 0086 2046     		mov	r0, r4
 16894 0088 03B0     		add	sp, sp, #12
 16895              		.cfi_remember_state
 16896              		.cfi_def_cfa_offset 12
 16897              		@ sp needed
 16898 008a 30BD     		pop	{r4, r5, pc}
 16899              	.LVL2147:
ARM GAS  /tmp/ccOloYeZ.s 			page 489


 16900              	.L1245:
 16901              		.cfi_restore_state
8041:Core/Src/bno055.c ****             }
 16902              		.loc 1 8041 26 view .LVU4798
 16903 008c 4FF0FF34 		mov	r4, #-1
 16904              	.LVL2148:
8041:Core/Src/bno055.c ****             }
 16905              		.loc 1 8041 26 view .LVU4799
 16906 0090 F6E7     		b	.L1241
 16907              	.LVL2149:
 16908              	.L1248:
8053:Core/Src/bno055.c ****     }
 16909              		.loc 1 8053 9 is_stmt 1 view .LVU4800
8053:Core/Src/bno055.c ****     }
 16910              		.loc 1 8053 21 is_stmt 0 view .LVU4801
 16911 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 16912              	.LVL2150:
8053:Core/Src/bno055.c ****     }
 16913              		.loc 1 8053 18 view .LVU4802
 16914 0096 54FA80F0 		uxtab	r0, r4, r0
 16915 009a 44B2     		sxtb	r4, r0
 16916              	.LVL2151:
8053:Core/Src/bno055.c ****     }
 16917              		.loc 1 8053 18 view .LVU4803
 16918 009c F3E7     		b	.L1240
 16919              	.LVL2152:
 16920              	.L1243:
8009:Core/Src/bno055.c ****     }
 16921              		.loc 1 8009 16 view .LVU4804
 16922 009e 6FF07E04 		mvn	r4, #126
 16923 00a2 F0E7     		b	.L1240
 16924              	.L1250:
 16925              		.align	2
 16926              	.L1249:
 16927 00a4 00000000 		.word	p_bno055
 16928              		.cfi_endproc
 16929              	.LFE142:
 16931              		.global	__aeabi_dadd
 16932              		.section	.text.bno055_convert_float_temp_fahrenheit,"ax",%progbits
 16933              		.align	1
 16934              		.global	bno055_convert_float_temp_fahrenheit
 16935              		.syntax unified
 16936              		.thumb
 16937              		.thumb_func
 16939              	bno055_convert_float_temp_fahrenheit:
 16940              	.LVL2153:
 16941              	.LFB77:
4573:Core/Src/bno055.c ****     /* Variable used to return value of
 16942              		.loc 1 4573 1 is_stmt 1 view -0
 16943              		.cfi_startproc
 16944              		@ args = 0, pretend = 0, frame = 8
 16945              		@ frame_needed = 0, uses_anonymous_args = 0
4573:Core/Src/bno055.c ****     /* Variable used to return value of
 16946              		.loc 1 4573 1 is_stmt 0 view .LVU4806
 16947 0000 30B5     		push	{r4, r5, lr}
 16948              		.cfi_def_cfa_offset 12
 16949              		.cfi_offset 4, -12
ARM GAS  /tmp/ccOloYeZ.s 			page 490


 16950              		.cfi_offset 5, -8
 16951              		.cfi_offset 14, -4
 16952 0002 83B0     		sub	sp, sp, #12
 16953              		.cfi_def_cfa_offset 24
 16954 0004 0546     		mov	r5, r0
4576:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
 16955              		.loc 1 4576 5 is_stmt 1 view .LVU4807
 16956              	.LVL2154:
4577:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 16957              		.loc 1 4577 5 view .LVU4808
4577:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 16958              		.loc 1 4577 8 is_stmt 0 view .LVU4809
 16959 0006 0023     		movs	r3, #0
 16960 0008 8DF80730 		strb	r3, [sp, #7]
4578:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
 16961              		.loc 1 4578 5 is_stmt 1 view .LVU4810
 16962              	.LVL2155:
4579:Core/Src/bno055.c **** 
 16963              		.loc 1 4579 5 view .LVU4811
4579:Core/Src/bno055.c **** 
 16964              		.loc 1 4579 8 is_stmt 0 view .LVU4812
 16965 000c 8DF80630 		strb	r3, [sp, #6]
4583:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 16966              		.loc 1 4583 5 is_stmt 1 view .LVU4813
4583:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 16967              		.loc 1 4583 16 is_stmt 0 view .LVU4814
 16968 0010 0DF10600 		add	r0, sp, #6
 16969              	.LVL2156:
4583:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 16970              		.loc 1 4583 16 view .LVU4815
 16971 0014 FFF7FEFF 		bl	bno055_get_temp_unit
 16972              	.LVL2157:
 16973 0018 0446     		mov	r4, r0
 16974              	.LVL2158:
4584:Core/Src/bno055.c ****     {
 16975              		.loc 1 4584 5 is_stmt 1 view .LVU4816
4584:Core/Src/bno055.c ****     {
 16976              		.loc 1 4584 22 is_stmt 0 view .LVU4817
 16977 001a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
4584:Core/Src/bno055.c ****     {
 16978              		.loc 1 4584 8 view .LVU4818
 16979 001e 012B     		cmp	r3, #1
 16980 0020 16D1     		bne	.L1257
 16981              	.L1252:
4588:Core/Src/bno055.c ****     {
 16982              		.loc 1 4588 5 is_stmt 1 view .LVU4819
4588:Core/Src/bno055.c ****     {
 16983              		.loc 1 4588 8 is_stmt 0 view .LVU4820
 16984 0022 E4B9     		cbnz	r4, .L1254
4591:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16985              		.loc 1 4591 9 is_stmt 1 view .LVU4821
4591:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16986              		.loc 1 4591 21 is_stmt 0 view .LVU4822
 16987 0024 0DF10700 		add	r0, sp, #7
 16988 0028 FFF7FEFF 		bl	bno055_read_temp_data
 16989              	.LVL2159:
4591:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/ccOloYeZ.s 			page 491


 16990              		.loc 1 4591 18 view .LVU4823
 16991 002c 54FA80F4 		uxtab	r4, r4, r0
 16992              	.LVL2160:
4591:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16993              		.loc 1 4591 18 view .LVU4824
 16994 0030 64B2     		sxtb	r4, r4
 16995              	.LVL2161:
4592:Core/Src/bno055.c ****         {
 16996              		.loc 1 4592 9 is_stmt 1 view .LVU4825
4592:Core/Src/bno055.c ****         {
 16997              		.loc 1 4592 12 is_stmt 0 view .LVU4826
 16998 0032 BCB9     		cbnz	r4, .L1255
4595:Core/Src/bno055.c ****             *temp_f = data_f;
 16999              		.loc 1 4595 13 is_stmt 1 view .LVU4827
4595:Core/Src/bno055.c ****             *temp_f = data_f;
 17000              		.loc 1 4595 42 is_stmt 0 view .LVU4828
 17001 0034 9DF90700 		ldrsb	r0, [sp, #7]
 17002 0038 FFF7FEFF 		bl	__aeabi_i2d
 17003              	.LVL2162:
 17004 003c 0246     		mov	r2, r0
 17005 003e 0B46     		mov	r3, r1
 17006 0040 FFF7FEFF 		bl	__aeabi_dadd
 17007              	.LVL2163:
4595:Core/Src/bno055.c ****             *temp_f = data_f;
 17008              		.loc 1 4595 20 view .LVU4829
 17009 0044 FFF7FEFF 		bl	__aeabi_d2f
 17010              	.LVL2164:
4596:Core/Src/bno055.c ****         }
 17011              		.loc 1 4596 13 is_stmt 1 view .LVU4830
4596:Core/Src/bno055.c ****         }
 17012              		.loc 1 4596 21 is_stmt 0 view .LVU4831
 17013 0048 2860     		str	r0, [r5]	@ float
 17014              	.LVL2165:
 17015              	.L1253:
4608:Core/Src/bno055.c **** }
 17016              		.loc 1 4608 5 is_stmt 1 view .LVU4832
4609:Core/Src/bno055.c **** 
 17017              		.loc 1 4609 1 is_stmt 0 view .LVU4833
 17018 004a 2046     		mov	r0, r4
 17019 004c 03B0     		add	sp, sp, #12
 17020              		.cfi_remember_state
 17021              		.cfi_def_cfa_offset 12
 17022              		@ sp needed
 17023 004e 30BD     		pop	{r4, r5, pc}
 17024              	.LVL2166:
 17025              	.L1257:
 17026              		.cfi_restore_state
4586:Core/Src/bno055.c ****     }
 17027              		.loc 1 4586 9 is_stmt 1 view .LVU4834
4586:Core/Src/bno055.c ****     }
 17028              		.loc 1 4586 21 is_stmt 0 view .LVU4835
 17029 0050 0120     		movs	r0, #1
 17030 0052 FFF7FEFF 		bl	bno055_set_temp_unit
 17031              	.LVL2167:
4586:Core/Src/bno055.c ****     }
 17032              		.loc 1 4586 18 view .LVU4836
 17033 0056 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/ccOloYeZ.s 			page 492


 17034              	.LVL2168:
4586:Core/Src/bno055.c ****     }
 17035              		.loc 1 4586 18 view .LVU4837
 17036 005a 64B2     		sxtb	r4, r4
 17037              	.LVL2169:
4586:Core/Src/bno055.c ****     }
 17038              		.loc 1 4586 18 view .LVU4838
 17039 005c E1E7     		b	.L1252
 17040              	.L1254:
4605:Core/Src/bno055.c ****     }
 17041              		.loc 1 4605 18 view .LVU4839
 17042 005e 4FF0FF34 		mov	r4, #-1
 17043              	.LVL2170:
4605:Core/Src/bno055.c ****     }
 17044              		.loc 1 4605 18 view .LVU4840
 17045 0062 F2E7     		b	.L1253
 17046              	.LVL2171:
 17047              	.L1255:
4600:Core/Src/bno055.c ****         }
 17048              		.loc 1 4600 22 view .LVU4841
 17049 0064 4FF0FF34 		mov	r4, #-1
 17050              	.LVL2172:
4600:Core/Src/bno055.c ****         }
 17051              		.loc 1 4600 22 view .LVU4842
 17052 0068 EFE7     		b	.L1253
 17053              		.cfi_endproc
 17054              	.LFE77:
 17056              		.section	.text.bno055_convert_float_temp_celsius,"ax",%progbits
 17057              		.align	1
 17058              		.global	bno055_convert_float_temp_celsius
 17059              		.syntax unified
 17060              		.thumb
 17061              		.thumb_func
 17063              	bno055_convert_float_temp_celsius:
 17064              	.LVL2173:
 17065              	.LFB78:
4625:Core/Src/bno055.c ****     /* Variable used to return value of
 17066              		.loc 1 4625 1 is_stmt 1 view -0
 17067              		.cfi_startproc
 17068              		@ args = 0, pretend = 0, frame = 8
 17069              		@ frame_needed = 0, uses_anonymous_args = 0
4625:Core/Src/bno055.c ****     /* Variable used to return value of
 17070              		.loc 1 4625 1 is_stmt 0 view .LVU4844
 17071 0000 30B5     		push	{r4, r5, lr}
 17072              		.cfi_def_cfa_offset 12
 17073              		.cfi_offset 4, -12
 17074              		.cfi_offset 5, -8
 17075              		.cfi_offset 14, -4
 17076 0002 83B0     		sub	sp, sp, #12
 17077              		.cfi_def_cfa_offset 24
 17078 0004 0546     		mov	r5, r0
4628:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
 17079              		.loc 1 4628 5 is_stmt 1 view .LVU4845
 17080              	.LVL2174:
4629:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 17081              		.loc 1 4629 5 view .LVU4846
4629:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccOloYeZ.s 			page 493


 17082              		.loc 1 4629 8 is_stmt 0 view .LVU4847
 17083 0006 0023     		movs	r3, #0
 17084 0008 8DF80730 		strb	r3, [sp, #7]
4630:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
 17085              		.loc 1 4630 5 is_stmt 1 view .LVU4848
 17086              	.LVL2175:
4631:Core/Src/bno055.c **** 
 17087              		.loc 1 4631 5 view .LVU4849
4631:Core/Src/bno055.c **** 
 17088              		.loc 1 4631 8 is_stmt 0 view .LVU4850
 17089 000c 8DF80630 		strb	r3, [sp, #6]
4635:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17090              		.loc 1 4635 5 is_stmt 1 view .LVU4851
4635:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17091              		.loc 1 4635 16 is_stmt 0 view .LVU4852
 17092 0010 0DF10600 		add	r0, sp, #6
 17093              	.LVL2176:
4635:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17094              		.loc 1 4635 16 view .LVU4853
 17095 0014 FFF7FEFF 		bl	bno055_get_temp_unit
 17096              	.LVL2177:
 17097 0018 0446     		mov	r4, r0
 17098              	.LVL2178:
4636:Core/Src/bno055.c ****     {
 17099              		.loc 1 4636 5 is_stmt 1 view .LVU4854
4636:Core/Src/bno055.c ****     {
 17100              		.loc 1 4636 22 is_stmt 0 view .LVU4855
 17101 001a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
4636:Core/Src/bno055.c ****     {
 17102              		.loc 1 4636 8 view .LVU4856
 17103 001e 93B9     		cbnz	r3, .L1264
 17104              	.L1259:
4640:Core/Src/bno055.c ****     {
 17105              		.loc 1 4640 5 is_stmt 1 view .LVU4857
4640:Core/Src/bno055.c ****     {
 17106              		.loc 1 4640 8 is_stmt 0 view .LVU4858
 17107 0020 C4B9     		cbnz	r4, .L1261
4643:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17108              		.loc 1 4643 9 is_stmt 1 view .LVU4859
4643:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17109              		.loc 1 4643 21 is_stmt 0 view .LVU4860
 17110 0022 0DF10700 		add	r0, sp, #7
 17111 0026 FFF7FEFF 		bl	bno055_read_temp_data
 17112              	.LVL2179:
4643:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17113              		.loc 1 4643 18 view .LVU4861
 17114 002a 54FA80F4 		uxtab	r4, r4, r0
 17115              	.LVL2180:
4643:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17116              		.loc 1 4643 18 view .LVU4862
 17117 002e 64B2     		sxtb	r4, r4
 17118              	.LVL2181:
4644:Core/Src/bno055.c ****         {
 17119              		.loc 1 4644 9 is_stmt 1 view .LVU4863
4644:Core/Src/bno055.c ****         {
 17120              		.loc 1 4644 12 is_stmt 0 view .LVU4864
 17121 0030 9CB9     		cbnz	r4, .L1262
ARM GAS  /tmp/ccOloYeZ.s 			page 494


4647:Core/Src/bno055.c ****             *temp_f = data_f;
 17122              		.loc 1 4647 13 is_stmt 1 view .LVU4865
4647:Core/Src/bno055.c ****             *temp_f = data_f;
 17123              		.loc 1 4647 42 is_stmt 0 view .LVU4866
 17124 0032 9DF90700 		ldrsb	r0, [sp, #7]
 17125 0036 FFF7FEFF 		bl	__aeabi_i2d
 17126              	.LVL2182:
4647:Core/Src/bno055.c ****             *temp_f = data_f;
 17127              		.loc 1 4647 20 view .LVU4867
 17128 003a FFF7FEFF 		bl	__aeabi_d2f
 17129              	.LVL2183:
4648:Core/Src/bno055.c ****         }
 17130              		.loc 1 4648 13 is_stmt 1 view .LVU4868
4648:Core/Src/bno055.c ****         }
 17131              		.loc 1 4648 21 is_stmt 0 view .LVU4869
 17132 003e 2860     		str	r0, [r5]	@ float
 17133              	.LVL2184:
 17134              	.L1260:
4660:Core/Src/bno055.c **** }
 17135              		.loc 1 4660 5 is_stmt 1 view .LVU4870
4661:Core/Src/bno055.c **** #endif
 17136              		.loc 1 4661 1 is_stmt 0 view .LVU4871
 17137 0040 2046     		mov	r0, r4
 17138 0042 03B0     		add	sp, sp, #12
 17139              		.cfi_remember_state
 17140              		.cfi_def_cfa_offset 12
 17141              		@ sp needed
 17142 0044 30BD     		pop	{r4, r5, pc}
 17143              	.LVL2185:
 17144              	.L1264:
 17145              		.cfi_restore_state
4638:Core/Src/bno055.c ****     }
 17146              		.loc 1 4638 9 is_stmt 1 view .LVU4872
4638:Core/Src/bno055.c ****     }
 17147              		.loc 1 4638 21 is_stmt 0 view .LVU4873
 17148 0046 0020     		movs	r0, #0
 17149 0048 FFF7FEFF 		bl	bno055_set_temp_unit
 17150              	.LVL2186:
4638:Core/Src/bno055.c ****     }
 17151              		.loc 1 4638 18 view .LVU4874
 17152 004c 54FA80F4 		uxtab	r4, r4, r0
 17153              	.LVL2187:
4638:Core/Src/bno055.c ****     }
 17154              		.loc 1 4638 18 view .LVU4875
 17155 0050 64B2     		sxtb	r4, r4
 17156              	.LVL2188:
4638:Core/Src/bno055.c ****     }
 17157              		.loc 1 4638 18 view .LVU4876
 17158 0052 E5E7     		b	.L1259
 17159              	.L1261:
4657:Core/Src/bno055.c ****     }
 17160              		.loc 1 4657 18 view .LVU4877
 17161 0054 4FF0FF34 		mov	r4, #-1
 17162              	.LVL2189:
4657:Core/Src/bno055.c ****     }
 17163              		.loc 1 4657 18 view .LVU4878
 17164 0058 F2E7     		b	.L1260
ARM GAS  /tmp/ccOloYeZ.s 			page 495


 17165              	.LVL2190:
 17166              	.L1262:
4652:Core/Src/bno055.c ****         }
 17167              		.loc 1 4652 22 view .LVU4879
 17168 005a 4FF0FF34 		mov	r4, #-1
 17169              	.LVL2191:
4652:Core/Src/bno055.c ****         }
 17170              		.loc 1 4652 22 view .LVU4880
 17171 005e EFE7     		b	.L1260
 17172              		.cfi_endproc
 17173              	.LFE78:
 17175              		.section	.text.bno055_convert_double_temp_fahrenheit,"ax",%progbits
 17176              		.align	1
 17177              		.global	bno055_convert_double_temp_fahrenheit
 17178              		.syntax unified
 17179              		.thumb
 17180              		.thumb_func
 17182              	bno055_convert_double_temp_fahrenheit:
 17183              	.LVL2192:
 17184              	.LFB115:
6399:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17185              		.loc 1 6399 1 is_stmt 1 view -0
 17186              		.cfi_startproc
 17187              		@ args = 0, pretend = 0, frame = 8
 17188              		@ frame_needed = 0, uses_anonymous_args = 0
6399:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17189              		.loc 1 6399 1 is_stmt 0 view .LVU4882
 17190 0000 30B5     		push	{r4, r5, lr}
 17191              		.cfi_def_cfa_offset 12
 17192              		.cfi_offset 4, -12
 17193              		.cfi_offset 5, -8
 17194              		.cfi_offset 14, -4
 17195 0002 83B0     		sub	sp, sp, #12
 17196              		.cfi_def_cfa_offset 24
 17197 0004 0546     		mov	r5, r0
6400:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
 17198              		.loc 1 6400 5 is_stmt 1 view .LVU4883
 17199              	.LVL2193:
6401:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 17200              		.loc 1 6401 5 view .LVU4884
6401:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 17201              		.loc 1 6401 8 is_stmt 0 view .LVU4885
 17202 0006 0023     		movs	r3, #0
 17203 0008 8DF80730 		strb	r3, [sp, #7]
6402:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
 17204              		.loc 1 6402 5 is_stmt 1 view .LVU4886
 17205              	.LVL2194:
6403:Core/Src/bno055.c **** 
 17206              		.loc 1 6403 5 view .LVU4887
6403:Core/Src/bno055.c **** 
 17207              		.loc 1 6403 8 is_stmt 0 view .LVU4888
 17208 000c 8DF80630 		strb	r3, [sp, #6]
6407:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17209              		.loc 1 6407 5 is_stmt 1 view .LVU4889
6407:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17210              		.loc 1 6407 16 is_stmt 0 view .LVU4890
 17211 0010 0DF10600 		add	r0, sp, #6
ARM GAS  /tmp/ccOloYeZ.s 			page 496


 17212              	.LVL2195:
6407:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17213              		.loc 1 6407 16 view .LVU4891
 17214 0014 FFF7FEFF 		bl	bno055_get_temp_unit
 17215              	.LVL2196:
 17216 0018 0446     		mov	r4, r0
 17217              	.LVL2197:
6408:Core/Src/bno055.c ****     {
 17218              		.loc 1 6408 5 is_stmt 1 view .LVU4892
6408:Core/Src/bno055.c ****     {
 17219              		.loc 1 6408 22 is_stmt 0 view .LVU4893
 17220 001a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
6408:Core/Src/bno055.c ****     {
 17221              		.loc 1 6408 8 view .LVU4894
 17222 001e 012B     		cmp	r3, #1
 17223 0020 05D1     		bne	.L1271
 17224              	.L1266:
6412:Core/Src/bno055.c ****     {
 17225              		.loc 1 6412 5 is_stmt 1 view .LVU4895
6412:Core/Src/bno055.c ****     {
 17226              		.loc 1 6412 8 is_stmt 0 view .LVU4896
 17227 0022 5CB1     		cbz	r4, .L1272
6429:Core/Src/bno055.c ****     }
 17228              		.loc 1 6429 9 is_stmt 1 view .LVU4897
6429:Core/Src/bno055.c ****     }
 17229              		.loc 1 6429 18 is_stmt 0 view .LVU4898
 17230 0024 013C     		subs	r4, r4, #1
 17231              	.LVL2198:
6429:Core/Src/bno055.c ****     }
 17232              		.loc 1 6429 18 view .LVU4899
 17233 0026 64B2     		sxtb	r4, r4
 17234              	.LVL2199:
 17235              	.L1269:
6432:Core/Src/bno055.c **** }
 17236              		.loc 1 6432 5 is_stmt 1 view .LVU4900
6433:Core/Src/bno055.c **** 
 17237              		.loc 1 6433 1 is_stmt 0 view .LVU4901
 17238 0028 2046     		mov	r0, r4
 17239 002a 03B0     		add	sp, sp, #12
 17240              		.cfi_remember_state
 17241              		.cfi_def_cfa_offset 12
 17242              		@ sp needed
 17243 002c 30BD     		pop	{r4, r5, pc}
 17244              	.LVL2200:
 17245              	.L1271:
 17246              		.cfi_restore_state
6410:Core/Src/bno055.c ****     }
 17247              		.loc 1 6410 9 is_stmt 1 view .LVU4902
6410:Core/Src/bno055.c ****     }
 17248              		.loc 1 6410 21 is_stmt 0 view .LVU4903
 17249 002e 0120     		movs	r0, #1
 17250 0030 FFF7FEFF 		bl	bno055_set_temp_unit
 17251              	.LVL2201:
6410:Core/Src/bno055.c ****     }
 17252              		.loc 1 6410 18 view .LVU4904
 17253 0034 54FA80F4 		uxtab	r4, r4, r0
 17254              	.LVL2202:
ARM GAS  /tmp/ccOloYeZ.s 			page 497


6410:Core/Src/bno055.c ****     }
 17255              		.loc 1 6410 18 view .LVU4905
 17256 0038 64B2     		sxtb	r4, r4
 17257              	.LVL2203:
6410:Core/Src/bno055.c ****     }
 17258              		.loc 1 6410 18 view .LVU4906
 17259 003a F2E7     		b	.L1266
 17260              	.L1272:
6415:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17261              		.loc 1 6415 9 is_stmt 1 view .LVU4907
6415:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17262              		.loc 1 6415 21 is_stmt 0 view .LVU4908
 17263 003c 0DF10700 		add	r0, sp, #7
 17264 0040 FFF7FEFF 		bl	bno055_read_temp_data
 17265              	.LVL2204:
6415:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17266              		.loc 1 6415 18 view .LVU4909
 17267 0044 54FA80F0 		uxtab	r0, r4, r0
 17268 0048 C3B2     		uxtb	r3, r0
 17269 004a 44B2     		sxtb	r4, r0
 17270              	.LVL2205:
6416:Core/Src/bno055.c ****         {
 17271              		.loc 1 6416 9 is_stmt 1 view .LVU4910
6416:Core/Src/bno055.c ****         {
 17272              		.loc 1 6416 12 is_stmt 0 view .LVU4911
 17273 004c 54B9     		cbnz	r4, .L1268
6419:Core/Src/bno055.c ****             *temp_d = data_d;
 17274              		.loc 1 6419 13 is_stmt 1 view .LVU4912
6419:Core/Src/bno055.c ****             *temp_d = data_d;
 17275              		.loc 1 6419 22 is_stmt 0 view .LVU4913
 17276 004e 9DF90700 		ldrsb	r0, [sp, #7]
 17277 0052 FFF7FEFF 		bl	__aeabi_i2d
 17278              	.LVL2206:
 17279 0056 0246     		mov	r2, r0
 17280 0058 0B46     		mov	r3, r1
6419:Core/Src/bno055.c ****             *temp_d = data_d;
 17281              		.loc 1 6419 20 view .LVU4914
 17282 005a FFF7FEFF 		bl	__aeabi_dadd
 17283              	.LVL2207:
6420:Core/Src/bno055.c ****         }
 17284              		.loc 1 6420 13 is_stmt 1 view .LVU4915
6420:Core/Src/bno055.c ****         }
 17285              		.loc 1 6420 21 is_stmt 0 view .LVU4916
 17286 005e C5E90001 		strd	r0, [r5]
 17287 0062 E1E7     		b	.L1269
 17288              	.LVL2208:
 17289              	.L1268:
6424:Core/Src/bno055.c ****         }
 17290              		.loc 1 6424 13 is_stmt 1 view .LVU4917
6424:Core/Src/bno055.c ****         }
 17291              		.loc 1 6424 22 is_stmt 0 view .LVU4918
 17292 0064 013B     		subs	r3, r3, #1
 17293 0066 5CB2     		sxtb	r4, r3
 17294              	.LVL2209:
6424:Core/Src/bno055.c ****         }
 17295              		.loc 1 6424 22 view .LVU4919
 17296 0068 DEE7     		b	.L1269
ARM GAS  /tmp/ccOloYeZ.s 			page 498


 17297              		.cfi_endproc
 17298              	.LFE115:
 17300              		.section	.text.bno055_convert_double_temp_celsius,"ax",%progbits
 17301              		.align	1
 17302              		.global	bno055_convert_double_temp_celsius
 17303              		.syntax unified
 17304              		.thumb
 17305              		.thumb_func
 17307              	bno055_convert_double_temp_celsius:
 17308              	.LVL2210:
 17309              	.LFB116:
6448:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17310              		.loc 1 6448 1 is_stmt 1 view -0
 17311              		.cfi_startproc
 17312              		@ args = 0, pretend = 0, frame = 8
 17313              		@ frame_needed = 0, uses_anonymous_args = 0
6448:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17314              		.loc 1 6448 1 is_stmt 0 view .LVU4921
 17315 0000 30B5     		push	{r4, r5, lr}
 17316              		.cfi_def_cfa_offset 12
 17317              		.cfi_offset 4, -12
 17318              		.cfi_offset 5, -8
 17319              		.cfi_offset 14, -4
 17320 0002 83B0     		sub	sp, sp, #12
 17321              		.cfi_def_cfa_offset 24
 17322 0004 0546     		mov	r5, r0
6449:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
 17323              		.loc 1 6449 5 is_stmt 1 view .LVU4922
 17324              	.LVL2211:
6450:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 17325              		.loc 1 6450 5 view .LVU4923
6450:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 17326              		.loc 1 6450 8 is_stmt 0 view .LVU4924
 17327 0006 0023     		movs	r3, #0
 17328 0008 8DF80730 		strb	r3, [sp, #7]
6451:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
 17329              		.loc 1 6451 5 is_stmt 1 view .LVU4925
 17330              	.LVL2212:
6452:Core/Src/bno055.c **** 
 17331              		.loc 1 6452 5 view .LVU4926
6452:Core/Src/bno055.c **** 
 17332              		.loc 1 6452 8 is_stmt 0 view .LVU4927
 17333 000c 8DF80630 		strb	r3, [sp, #6]
6456:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17334              		.loc 1 6456 5 is_stmt 1 view .LVU4928
6456:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17335              		.loc 1 6456 16 is_stmt 0 view .LVU4929
 17336 0010 0DF10600 		add	r0, sp, #6
 17337              	.LVL2213:
6456:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17338              		.loc 1 6456 16 view .LVU4930
 17339 0014 FFF7FEFF 		bl	bno055_get_temp_unit
 17340              	.LVL2214:
 17341 0018 0446     		mov	r4, r0
 17342              	.LVL2215:
6457:Core/Src/bno055.c ****     {
 17343              		.loc 1 6457 5 is_stmt 1 view .LVU4931
ARM GAS  /tmp/ccOloYeZ.s 			page 499


6457:Core/Src/bno055.c ****     {
 17344              		.loc 1 6457 22 is_stmt 0 view .LVU4932
 17345 001a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
6457:Core/Src/bno055.c ****     {
 17346              		.loc 1 6457 8 view .LVU4933
 17347 001e 2BB9     		cbnz	r3, .L1279
 17348              	.L1274:
6461:Core/Src/bno055.c ****     {
 17349              		.loc 1 6461 5 is_stmt 1 view .LVU4934
6461:Core/Src/bno055.c ****     {
 17350              		.loc 1 6461 8 is_stmt 0 view .LVU4935
 17351 0020 5CB1     		cbz	r4, .L1280
6478:Core/Src/bno055.c ****     }
 17352              		.loc 1 6478 9 is_stmt 1 view .LVU4936
6478:Core/Src/bno055.c ****     }
 17353              		.loc 1 6478 18 is_stmt 0 view .LVU4937
 17354 0022 013C     		subs	r4, r4, #1
 17355              	.LVL2216:
6478:Core/Src/bno055.c ****     }
 17356              		.loc 1 6478 18 view .LVU4938
 17357 0024 64B2     		sxtb	r4, r4
 17358              	.LVL2217:
 17359              	.L1277:
6481:Core/Src/bno055.c **** }
 17360              		.loc 1 6481 5 is_stmt 1 view .LVU4939
6482:Core/Src/bno055.c **** #endif
 17361              		.loc 1 6482 1 is_stmt 0 view .LVU4940
 17362 0026 2046     		mov	r0, r4
 17363 0028 03B0     		add	sp, sp, #12
 17364              		.cfi_remember_state
 17365              		.cfi_def_cfa_offset 12
 17366              		@ sp needed
 17367 002a 30BD     		pop	{r4, r5, pc}
 17368              	.LVL2218:
 17369              	.L1279:
 17370              		.cfi_restore_state
6459:Core/Src/bno055.c ****     }
 17371              		.loc 1 6459 9 is_stmt 1 view .LVU4941
6459:Core/Src/bno055.c ****     }
 17372              		.loc 1 6459 21 is_stmt 0 view .LVU4942
 17373 002c 0020     		movs	r0, #0
 17374 002e FFF7FEFF 		bl	bno055_set_temp_unit
 17375              	.LVL2219:
6459:Core/Src/bno055.c ****     }
 17376              		.loc 1 6459 18 view .LVU4943
 17377 0032 54FA80F4 		uxtab	r4, r4, r0
 17378              	.LVL2220:
6459:Core/Src/bno055.c ****     }
 17379              		.loc 1 6459 18 view .LVU4944
 17380 0036 64B2     		sxtb	r4, r4
 17381              	.LVL2221:
6459:Core/Src/bno055.c ****     }
 17382              		.loc 1 6459 18 view .LVU4945
 17383 0038 F2E7     		b	.L1274
 17384              	.L1280:
6464:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17385              		.loc 1 6464 9 is_stmt 1 view .LVU4946
ARM GAS  /tmp/ccOloYeZ.s 			page 500


6464:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17386              		.loc 1 6464 21 is_stmt 0 view .LVU4947
 17387 003a 0DF10700 		add	r0, sp, #7
 17388 003e FFF7FEFF 		bl	bno055_read_temp_data
 17389              	.LVL2222:
6464:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17390              		.loc 1 6464 18 view .LVU4948
 17391 0042 54FA80F0 		uxtab	r0, r4, r0
 17392 0046 C3B2     		uxtb	r3, r0
 17393 0048 44B2     		sxtb	r4, r0
 17394              	.LVL2223:
6465:Core/Src/bno055.c ****         {
 17395              		.loc 1 6465 9 is_stmt 1 view .LVU4949
6465:Core/Src/bno055.c ****         {
 17396              		.loc 1 6465 12 is_stmt 0 view .LVU4950
 17397 004a 34B9     		cbnz	r4, .L1276
6468:Core/Src/bno055.c ****             *temp_d = data_d;
 17398              		.loc 1 6468 13 is_stmt 1 view .LVU4951
6468:Core/Src/bno055.c ****             *temp_d = data_d;
 17399              		.loc 1 6468 20 is_stmt 0 view .LVU4952
 17400 004c 9DF90700 		ldrsb	r0, [sp, #7]
 17401 0050 FFF7FEFF 		bl	__aeabi_i2d
 17402              	.LVL2224:
6469:Core/Src/bno055.c ****         }
 17403              		.loc 1 6469 13 is_stmt 1 view .LVU4953
6469:Core/Src/bno055.c ****         }
 17404              		.loc 1 6469 21 is_stmt 0 view .LVU4954
 17405 0054 C5E90001 		strd	r0, [r5]
 17406 0058 E5E7     		b	.L1277
 17407              	.LVL2225:
 17408              	.L1276:
6473:Core/Src/bno055.c ****         }
 17409              		.loc 1 6473 13 is_stmt 1 view .LVU4955
6473:Core/Src/bno055.c ****         }
 17410              		.loc 1 6473 22 is_stmt 0 view .LVU4956
 17411 005a 013B     		subs	r3, r3, #1
 17412 005c 5CB2     		sxtb	r4, r3
 17413              	.LVL2226:
6473:Core/Src/bno055.c ****         }
 17414              		.loc 1 6473 22 view .LVU4957
 17415 005e E2E7     		b	.L1277
 17416              		.cfi_endproc
 17417              	.LFE116:
 17419              		.section	.text.bno055_set_data_output_format,"ax",%progbits
 17420              		.align	1
 17421              		.global	bno055_set_data_output_format
 17422              		.syntax unified
 17423              		.thumb
 17424              		.thumb_func
 17426              	bno055_set_data_output_format:
 17427              	.LVL2227:
 17428              	.LFB144:
8133:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17429              		.loc 1 8133 1 is_stmt 1 view -0
 17430              		.cfi_startproc
 17431              		@ args = 0, pretend = 0, frame = 8
 17432              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccOloYeZ.s 			page 501


8133:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17433              		.loc 1 8133 1 is_stmt 0 view .LVU4959
 17434 0000 30B5     		push	{r4, r5, lr}
 17435              		.cfi_def_cfa_offset 12
 17436              		.cfi_offset 4, -12
 17437              		.cfi_offset 5, -8
 17438              		.cfi_offset 14, -4
 17439 0002 83B0     		sub	sp, sp, #12
 17440              		.cfi_def_cfa_offset 24
8134:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 17441              		.loc 1 8134 5 is_stmt 1 view .LVU4960
 17442              	.LVL2228:
8135:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 17443              		.loc 1 8135 5 view .LVU4961
8135:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 17444              		.loc 1 8135 8 is_stmt 0 view .LVU4962
 17445 0004 0023     		movs	r3, #0
 17446 0006 8DF80730 		strb	r3, [sp, #7]
8136:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 17447              		.loc 1 8136 5 is_stmt 1 view .LVU4963
8136:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 17448              		.loc 1 8136 8 is_stmt 0 view .LVU4964
 17449 000a 8DF80630 		strb	r3, [sp, #6]
8137:Core/Src/bno055.c **** 
 17450              		.loc 1 8137 5 is_stmt 1 view .LVU4965
 17451              	.LVL2229:
8140:Core/Src/bno055.c ****     {
 17452              		.loc 1 8140 5 view .LVU4966
8140:Core/Src/bno055.c ****     {
 17453              		.loc 1 8140 18 is_stmt 0 view .LVU4967
 17454 000e 244B     		ldr	r3, .L1291
 17455 0010 1B68     		ldr	r3, [r3]
8140:Core/Src/bno055.c ****     {
 17456              		.loc 1 8140 8 view .LVU4968
 17457 0012 002B     		cmp	r3, #0
 17458 0014 41D0     		beq	.L1285
 17459 0016 0546     		mov	r5, r0
8149:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17460              		.loc 1 8149 9 is_stmt 1 view .LVU4969
8149:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17461              		.loc 1 8149 19 is_stmt 0 view .LVU4970
 17462 0018 0DF10600 		add	r0, sp, #6
 17463              	.LVL2230:
8149:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17464              		.loc 1 8149 19 view .LVU4971
 17465 001c FFF7FEFF 		bl	bno055_get_operation_mode
 17466              	.LVL2231:
8150:Core/Src/bno055.c ****         {
 17467              		.loc 1 8150 9 is_stmt 1 view .LVU4972
8150:Core/Src/bno055.c ****         {
 17468              		.loc 1 8150 12 is_stmt 0 view .LVU4973
 17469 0020 0446     		mov	r4, r0
 17470 0022 48BB     		cbnz	r0, .L1286
8152:Core/Src/bno055.c ****             {
 17471              		.loc 1 8152 13 is_stmt 1 view .LVU4974
8152:Core/Src/bno055.c ****             {
 17472              		.loc 1 8152 32 is_stmt 0 view .LVU4975
ARM GAS  /tmp/ccOloYeZ.s 			page 502


 17473 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
8152:Core/Src/bno055.c ****             {
 17474              		.loc 1 8152 16 view .LVU4976
 17475 0028 03BB     		cbnz	r3, .L1289
 17476              	.LVL2232:
 17477              	.L1284:
8156:Core/Src/bno055.c ****             {
 17478              		.loc 1 8156 13 is_stmt 1 view .LVU4977
8156:Core/Src/bno055.c ****             {
 17479              		.loc 1 8156 16 is_stmt 0 view .LVU4978
 17480 002a 6CBB     		cbnz	r4, .L1287
8159:Core/Src/bno055.c ****                                                           BNO055_DATA_OUTPUT_FORMAT_REG,
 17481              		.loc 1 8159 17 is_stmt 1 view .LVU4979
8159:Core/Src/bno055.c ****                                                           BNO055_DATA_OUTPUT_FORMAT_REG,
 17482              		.loc 1 8159 36 is_stmt 0 view .LVU4980
 17483 002c 1C4B     		ldr	r3, .L1291
 17484 002e 1868     		ldr	r0, [r3]
 17485 0030 0469     		ldr	r4, [r0, #16]
 17486              	.LVL2233:
8159:Core/Src/bno055.c ****                                                           BNO055_DATA_OUTPUT_FORMAT_REG,
 17487              		.loc 1 8159 28 view .LVU4981
 17488 0032 0123     		movs	r3, #1
 17489 0034 0DF10702 		add	r2, sp, #7
 17490 0038 3B21     		movs	r1, #59
 17491 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 17492 003c A047     		blx	r4
 17493              	.LVL2234:
8163:Core/Src/bno055.c ****                 {
 17494              		.loc 1 8163 17 is_stmt 1 view .LVU4982
8163:Core/Src/bno055.c ****                 {
 17495              		.loc 1 8163 20 is_stmt 0 view .LVU4983
 17496 003e 0446     		mov	r4, r0
 17497 0040 E0B9     		cbnz	r0, .L1283
8165:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17498              		.loc 1 8165 21 is_stmt 1 view .LVU4984
8165:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17499              		.loc 1 8165 32 is_stmt 0 view .LVU4985
 17500 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 17501 0046 03F07F03 		and	r3, r3, #127
 17502 004a 43EAC513 		orr	r3, r3, r5, lsl #7
8165:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17503              		.loc 1 8165 30 view .LVU4986
 17504 004e 8DF80730 		strb	r3, [sp, #7]
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 17505              		.loc 1 8166 21 is_stmt 1 view .LVU4987
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 17506              		.loc 1 8166 41 is_stmt 0 view .LVU4988
 17507 0052 134B     		ldr	r3, .L1291
 17508 0054 1868     		ldr	r0, [r3]
 17509              	.LVL2235:
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 17510              		.loc 1 8166 41 view .LVU4989
 17511 0056 C568     		ldr	r5, [r0, #12]
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 17512              		.loc 1 8166 33 view .LVU4990
 17513 0058 0123     		movs	r3, #1
 17514 005a 0DF10702 		add	r2, sp, #7
ARM GAS  /tmp/ccOloYeZ.s 			page 503


 17515 005e 3B21     		movs	r1, #59
 17516 0060 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 17517 0062 A847     		blx	r5
 17518              	.LVL2236:
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 17519              		.loc 1 8166 30 view .LVU4991
 17520 0064 54FA80F0 		uxtab	r0, r4, r0
 17521 0068 44B2     		sxtb	r4, r0
 17522              	.LVL2237:
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 17523              		.loc 1 8166 30 view .LVU4992
 17524 006a 07E0     		b	.L1283
 17525              	.LVL2238:
 17526              	.L1289:
8154:Core/Src/bno055.c ****             }
 17527              		.loc 1 8154 17 is_stmt 1 view .LVU4993
8154:Core/Src/bno055.c ****             }
 17528              		.loc 1 8154 28 is_stmt 0 view .LVU4994
 17529 006c FFF7FEFF 		bl	bno055_set_operation_mode
 17530              	.LVL2239:
8154:Core/Src/bno055.c ****             }
 17531              		.loc 1 8154 25 view .LVU4995
 17532 0070 54FA80F4 		uxtab	r4, r4, r0
 17533 0074 64B2     		sxtb	r4, r4
 17534              	.LVL2240:
8154:Core/Src/bno055.c ****             }
 17535              		.loc 1 8154 25 view .LVU4996
 17536 0076 D8E7     		b	.L1284
 17537              	.LVL2241:
 17538              	.L1286:
8179:Core/Src/bno055.c ****         }
 17539              		.loc 1 8179 22 view .LVU4997
 17540 0078 4FF0FF34 		mov	r4, #-1
 17541              	.LVL2242:
 17542              	.L1283:
8182:Core/Src/bno055.c ****     {
 17543              		.loc 1 8182 5 is_stmt 1 view .LVU4998
8182:Core/Src/bno055.c ****     {
 17544              		.loc 1 8182 24 is_stmt 0 view .LVU4999
 17545 007c 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
8182:Core/Src/bno055.c ****     {
 17546              		.loc 1 8182 8 view .LVU5000
 17547 0080 28B9     		cbnz	r0, .L1290
 17548              	.LVL2243:
 17549              	.L1282:
8190:Core/Src/bno055.c **** 
 17550              		.loc 1 8190 1 view .LVU5001
 17551 0082 2046     		mov	r0, r4
 17552 0084 03B0     		add	sp, sp, #12
 17553              		.cfi_remember_state
 17554              		.cfi_def_cfa_offset 12
 17555              		@ sp needed
 17556 0086 30BD     		pop	{r4, r5, pc}
 17557              	.LVL2244:
 17558              	.L1287:
 17559              		.cfi_restore_state
8174:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccOloYeZ.s 			page 504


 17560              		.loc 1 8174 26 view .LVU5002
 17561 0088 4FF0FF34 		mov	r4, #-1
 17562              	.LVL2245:
8174:Core/Src/bno055.c ****             }
 17563              		.loc 1 8174 26 view .LVU5003
 17564 008c F6E7     		b	.L1283
 17565              	.LVL2246:
 17566              	.L1290:
8186:Core/Src/bno055.c ****     }
 17567              		.loc 1 8186 9 is_stmt 1 view .LVU5004
8186:Core/Src/bno055.c ****     }
 17568              		.loc 1 8186 21 is_stmt 0 view .LVU5005
 17569 008e FFF7FEFF 		bl	bno055_set_operation_mode
 17570              	.LVL2247:
8186:Core/Src/bno055.c ****     }
 17571              		.loc 1 8186 18 view .LVU5006
 17572 0092 54FA80F0 		uxtab	r0, r4, r0
 17573 0096 44B2     		sxtb	r4, r0
 17574              	.LVL2248:
8186:Core/Src/bno055.c ****     }
 17575              		.loc 1 8186 18 view .LVU5007
 17576 0098 F3E7     		b	.L1282
 17577              	.LVL2249:
 17578              	.L1285:
8142:Core/Src/bno055.c ****     }
 17579              		.loc 1 8142 16 view .LVU5008
 17580 009a 6FF07E04 		mvn	r4, #126
 17581 009e F0E7     		b	.L1282
 17582              	.L1292:
 17583              		.align	2
 17584              	.L1291:
 17585 00a0 00000000 		.word	p_bno055
 17586              		.cfi_endproc
 17587              	.LFE144:
 17589              		.section	.text.bno055_get_power_mode,"ax",%progbits
 17590              		.align	1
 17591              		.global	bno055_get_power_mode
 17592              		.syntax unified
 17593              		.thumb
 17594              		.thumb_func
 17596              	bno055_get_power_mode:
 17597              	.LVL2250:
 17598              	.LFB147:
8403:Core/Src/bno055.c **** 
8404:Core/Src/bno055.c **** /*! @brief This API used to read the power mode
8405:Core/Src/bno055.c ****  *  from register from 0x3E bit 0 to 1
8406:Core/Src/bno055.c ****  *
8407:Core/Src/bno055.c ****  *  @param power_mode_u8 : The value of power mode
8408:Core/Src/bno055.c ****  *
8409:Core/Src/bno055.c ****  * power_mode_u8|      result           | comments
8410:Core/Src/bno055.c ****  * ---------|---------------------------|-------------------------------------
8411:Core/Src/bno055.c ****  *  0x00    |BNO055_POWER_MODE_NORMAL   | In the NORMAL mode the register
8412:Core/Src/bno055.c ****  *    -     |       -                   | map and the internal peripherals
8413:Core/Src/bno055.c ****  *    -     |       -                   | of the MCU are always
8414:Core/Src/bno055.c ****  *    -     |       -                   | operative in this mode
8415:Core/Src/bno055.c ****  *  0x01    |BNO055_POWER_MODE_LOWPOWER | This is first level of power
8416:Core/Src/bno055.c ****  *          |       -                   | saving mode
ARM GAS  /tmp/ccOloYeZ.s 			page 505


8417:Core/Src/bno055.c ****  *  0x02    |BNO055_POWER_MODE_SUSPEND  | In suspend mode the system is
8418:Core/Src/bno055.c ****  *   -      |      -                    | paused and all the sensors and
8419:Core/Src/bno055.c ****  *   -      |      -                    | the micro controller are
8420:Core/Src/bno055.c ****  *   -      |      -                    | put into sleep mode.
8421:Core/Src/bno055.c ****  *
8422:Core/Src/bno055.c ****  *  @return results of bus communication function
8423:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8424:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8425:Core/Src/bno055.c ****  *
8426:Core/Src/bno055.c ****  *  @note For detailed about LOWPOWER mode
8427:Core/Src/bno055.c ****  *  refer data sheet 3.4.2
8428:Core/Src/bno055.c ****  *
8429:Core/Src/bno055.c ****  */
8430:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_power_mode(u8 *power_mode_u8)
8431:Core/Src/bno055.c **** {
 17599              		.loc 1 8431 1 is_stmt 1 view -0
 17600              		.cfi_startproc
 17601              		@ args = 0, pretend = 0, frame = 8
 17602              		@ frame_needed = 0, uses_anonymous_args = 0
 17603              		.loc 1 8431 1 is_stmt 0 view .LVU5010
 17604 0000 30B5     		push	{r4, r5, lr}
 17605              		.cfi_def_cfa_offset 12
 17606              		.cfi_offset 4, -12
 17607              		.cfi_offset 5, -8
 17608              		.cfi_offset 14, -4
 17609 0002 83B0     		sub	sp, sp, #12
 17610              		.cfi_def_cfa_offset 24
8432:Core/Src/bno055.c ****     /* Variable used to return value of
8433:Core/Src/bno055.c ****      * communication routine*/
8434:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17611              		.loc 1 8434 5 is_stmt 1 view .LVU5011
 17612              	.LVL2251:
8435:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 17613              		.loc 1 8435 5 view .LVU5012
 17614              		.loc 1 8435 8 is_stmt 0 view .LVU5013
 17615 0004 0023     		movs	r3, #0
 17616 0006 8DF80730 		strb	r3, [sp, #7]
8436:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 17617              		.loc 1 8436 5 is_stmt 1 view .LVU5014
 17618              	.LVL2252:
8437:Core/Src/bno055.c **** 
8438:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8439:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 17619              		.loc 1 8439 5 view .LVU5015
 17620              		.loc 1 8439 18 is_stmt 0 view .LVU5016
 17621 000a 134B     		ldr	r3, .L1301
 17622 000c 1B68     		ldr	r3, [r3]
 17623              		.loc 1 8439 8 view .LVU5017
 17624 000e E3B1     		cbz	r3, .L1297
 17625 0010 0446     		mov	r4, r0
8440:Core/Src/bno055.c ****     {
8441:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8442:Core/Src/bno055.c ****     }
8443:Core/Src/bno055.c ****     else
8444:Core/Src/bno055.c ****     {
8445:Core/Src/bno055.c ****         /*condition check for page, power mode is
8446:Core/Src/bno055.c ****          * available in the page zero*/
ARM GAS  /tmp/ccOloYeZ.s 			page 506


8447:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 17626              		.loc 1 8447 9 is_stmt 1 view .LVU5018
 17627              		.loc 1 8447 21 is_stmt 0 view .LVU5019
 17628 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 17629              		.loc 1 8447 12 view .LVU5020
 17630 0014 9BB9     		cbnz	r3, .L1300
 17631              	.LVL2253:
 17632              	.L1295:
8448:Core/Src/bno055.c ****         {
8449:Core/Src/bno055.c ****             /* Write the page zero*/
8450:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8451:Core/Src/bno055.c ****         }
8452:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 17633              		.loc 1 8452 53 discriminator 1 view .LVU5021
 17634 0016 104B     		ldr	r3, .L1301
 17635 0018 1B68     		ldr	r3, [r3]
 17636 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 17637              		.loc 1 8452 41 discriminator 1 view .LVU5022
 17638 001c C3B9     		cbnz	r3, .L1298
 17639              	.L1296:
8453:Core/Src/bno055.c ****         {
8454:Core/Src/bno055.c ****             /* Read the value of power mode */
8455:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 17640              		.loc 1 8455 13 is_stmt 1 view .LVU5023
 17641              		.loc 1 8455 32 is_stmt 0 view .LVU5024
 17642 001e 0E4B     		ldr	r3, .L1301
 17643 0020 1868     		ldr	r0, [r3]
 17644 0022 0569     		ldr	r5, [r0, #16]
 17645              		.loc 1 8455 24 view .LVU5025
 17646 0024 0123     		movs	r3, #1
 17647 0026 0DF10702 		add	r2, sp, #7
 17648 002a 3E21     		movs	r1, #62
 17649 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 17650 002e A847     		blx	r5
 17651              	.LVL2254:
8456:Core/Src/bno055.c ****                                                       BNO055_POWER_MODE_REG,
8457:Core/Src/bno055.c ****                                                       &data_u8r,
8458:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8459:Core/Src/bno055.c ****             *power_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_POWER_MODE);
 17652              		.loc 1 8459 13 is_stmt 1 view .LVU5026
 17653              		.loc 1 8459 30 is_stmt 0 view .LVU5027
 17654 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 17655 0034 03F00303 		and	r3, r3, #3
 17656              		.loc 1 8459 28 view .LVU5028
 17657 0038 2370     		strb	r3, [r4]
 17658              	.LVL2255:
 17659              	.L1294:
8460:Core/Src/bno055.c ****         }
8461:Core/Src/bno055.c ****         else
8462:Core/Src/bno055.c ****         {
8463:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8464:Core/Src/bno055.c ****         }
8465:Core/Src/bno055.c ****     }
8466:Core/Src/bno055.c **** 
8467:Core/Src/bno055.c ****     return com_rslt;
8468:Core/Src/bno055.c **** }
 17660              		.loc 1 8468 1 view .LVU5029
ARM GAS  /tmp/ccOloYeZ.s 			page 507


 17661 003a 03B0     		add	sp, sp, #12
 17662              		.cfi_remember_state
 17663              		.cfi_def_cfa_offset 12
 17664              		@ sp needed
 17665 003c 30BD     		pop	{r4, r5, pc}
 17666              	.LVL2256:
 17667              	.L1300:
 17668              		.cfi_restore_state
8450:Core/Src/bno055.c ****         }
 17669              		.loc 1 8450 13 is_stmt 1 view .LVU5030
8450:Core/Src/bno055.c ****         }
 17670              		.loc 1 8450 23 is_stmt 0 view .LVU5031
 17671 003e 0020     		movs	r0, #0
 17672              	.LVL2257:
8450:Core/Src/bno055.c ****         }
 17673              		.loc 1 8450 23 view .LVU5032
 17674 0040 FFF7FEFF 		bl	bno055_write_page_id
 17675              	.LVL2258:
8452:Core/Src/bno055.c ****         {
 17676              		.loc 1 8452 9 is_stmt 1 view .LVU5033
8452:Core/Src/bno055.c ****         {
 17677              		.loc 1 8452 12 is_stmt 0 view .LVU5034
 17678 0044 0028     		cmp	r0, #0
 17679 0046 EAD0     		beq	.L1296
 17680 0048 E5E7     		b	.L1295
 17681              	.LVL2259:
 17682              	.L1297:
8441:Core/Src/bno055.c ****     }
 17683              		.loc 1 8441 16 view .LVU5035
 17684 004a 6FF07E00 		mvn	r0, #126
 17685              	.LVL2260:
8441:Core/Src/bno055.c ****     }
 17686              		.loc 1 8441 16 view .LVU5036
 17687 004e F4E7     		b	.L1294
 17688              	.LVL2261:
 17689              	.L1298:
8463:Core/Src/bno055.c ****         }
 17690              		.loc 1 8463 22 view .LVU5037
 17691 0050 4FF0FF30 		mov	r0, #-1
 17692 0054 F1E7     		b	.L1294
 17693              	.L1302:
 17694 0056 00BF     		.align	2
 17695              	.L1301:
 17696 0058 00000000 		.word	p_bno055
 17697              		.cfi_endproc
 17698              	.LFE147:
 17700              		.section	.text.bno055_set_power_mode,"ax",%progbits
 17701              		.align	1
 17702              		.global	bno055_set_power_mode
 17703              		.syntax unified
 17704              		.thumb
 17705              		.thumb_func
 17707              	bno055_set_power_mode:
 17708              	.LVL2262:
 17709              	.LFB148:
8469:Core/Src/bno055.c **** 
8470:Core/Src/bno055.c **** /*! @brief This API used to write the power mode
ARM GAS  /tmp/ccOloYeZ.s 			page 508


8471:Core/Src/bno055.c ****  *  from register from 0x3E bit 0 to 1
8472:Core/Src/bno055.c ****  *
8473:Core/Src/bno055.c ****  *  @param power_mode_u8 : The value of power mode
8474:Core/Src/bno055.c ****  *
8475:Core/Src/bno055.c ****  *
8476:Core/Src/bno055.c ****  * power_mode_u8|      result          | comments
8477:Core/Src/bno055.c ****  * -------|----------------------------|---------------------------------
8478:Core/Src/bno055.c ****  *  0x00  | BNO055_POWER_MODE_NORMAL   | In the NORMAL mode the register
8479:Core/Src/bno055.c ****  *    -   |       -                    | map and the internal peripherals
8480:Core/Src/bno055.c ****  *    -   |       -                    | of the MCU are always
8481:Core/Src/bno055.c ****  *    -   |       -                    | operative in this mode
8482:Core/Src/bno055.c ****  *  0x01  | BNO055_POWER_MODE_LOWPOWER | This is first level of power
8483:Core/Src/bno055.c ****  *        |     -                      | saving mode
8484:Core/Src/bno055.c ****  *  0x02  | BNO055_POWER_MODE_SUSPEND  | In suspend mode the system is
8485:Core/Src/bno055.c ****  *   -    |      -                     | paused and all the sensors and
8486:Core/Src/bno055.c ****  *   -    |      -                     | the micro controller are
8487:Core/Src/bno055.c ****  *   -    |      -                     | put into sleep mode.
8488:Core/Src/bno055.c ****  *
8489:Core/Src/bno055.c ****  *  @return results of bus communication function
8490:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8491:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8492:Core/Src/bno055.c ****  *
8493:Core/Src/bno055.c ****  *  @note For detailed about LOWPOWER mode
8494:Core/Src/bno055.c ****  *  refer data sheet 3.4.2
8495:Core/Src/bno055.c ****  *
8496:Core/Src/bno055.c ****  */
8497:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_power_mode(u8 power_mode_u8)
8498:Core/Src/bno055.c **** {
 17710              		.loc 1 8498 1 is_stmt 1 view -0
 17711              		.cfi_startproc
 17712              		@ args = 0, pretend = 0, frame = 8
 17713              		@ frame_needed = 0, uses_anonymous_args = 0
 17714              		.loc 1 8498 1 is_stmt 0 view .LVU5039
 17715 0000 30B5     		push	{r4, r5, lr}
 17716              		.cfi_def_cfa_offset 12
 17717              		.cfi_offset 4, -12
 17718              		.cfi_offset 5, -8
 17719              		.cfi_offset 14, -4
 17720 0002 83B0     		sub	sp, sp, #12
 17721              		.cfi_def_cfa_offset 24
8499:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17722              		.loc 1 8499 5 is_stmt 1 view .LVU5040
 17723              	.LVL2263:
8500:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 17724              		.loc 1 8500 5 view .LVU5041
 17725              		.loc 1 8500 8 is_stmt 0 view .LVU5042
 17726 0004 0023     		movs	r3, #0
 17727 0006 8DF80730 		strb	r3, [sp, #7]
8501:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 17728              		.loc 1 8501 5 is_stmt 1 view .LVU5043
 17729              		.loc 1 8501 8 is_stmt 0 view .LVU5044
 17730 000a 8DF80630 		strb	r3, [sp, #6]
8502:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 17731              		.loc 1 8502 5 is_stmt 1 view .LVU5045
 17732              	.LVL2264:
8503:Core/Src/bno055.c **** 
8504:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
ARM GAS  /tmp/ccOloYeZ.s 			page 509


8505:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 17733              		.loc 1 8505 5 view .LVU5046
 17734              		.loc 1 8505 18 is_stmt 0 view .LVU5047
 17735 000e 254B     		ldr	r3, .L1313
 17736 0010 1B68     		ldr	r3, [r3]
 17737              		.loc 1 8505 8 view .LVU5048
 17738 0012 002B     		cmp	r3, #0
 17739 0014 42D0     		beq	.L1307
 17740 0016 0546     		mov	r5, r0
8506:Core/Src/bno055.c ****     {
8507:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8508:Core/Src/bno055.c ****     }
8509:Core/Src/bno055.c ****     else
8510:Core/Src/bno055.c ****     {
8511:Core/Src/bno055.c ****         /* The write operation effective only if the operation
8512:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
8513:Core/Src/bno055.c ****          * current operation mode and set the config mode */
8514:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 17741              		.loc 1 8514 9 is_stmt 1 view .LVU5049
 17742              		.loc 1 8514 19 is_stmt 0 view .LVU5050
 17743 0018 0DF10600 		add	r0, sp, #6
 17744              	.LVL2265:
 17745              		.loc 1 8514 19 view .LVU5051
 17746 001c FFF7FEFF 		bl	bno055_get_operation_mode
 17747              	.LVL2266:
8515:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17748              		.loc 1 8515 9 is_stmt 1 view .LVU5052
 17749              		.loc 1 8515 12 is_stmt 0 view .LVU5053
 17750 0020 0446     		mov	r4, r0
 17751 0022 50BB     		cbnz	r0, .L1308
8516:Core/Src/bno055.c ****         {
8517:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 17752              		.loc 1 8517 13 is_stmt 1 view .LVU5054
 17753              		.loc 1 8517 32 is_stmt 0 view .LVU5055
 17754 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 17755              		.loc 1 8517 16 view .LVU5056
 17756 0028 0BBB     		cbnz	r3, .L1311
 17757              	.LVL2267:
 17758              	.L1306:
8518:Core/Src/bno055.c ****             {
8519:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
8520:Core/Src/bno055.c ****             }
8521:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 17759              		.loc 1 8521 13 is_stmt 1 view .LVU5057
 17760              		.loc 1 8521 16 is_stmt 0 view .LVU5058
 17761 002a 74BB     		cbnz	r4, .L1309
8522:Core/Src/bno055.c ****             {
8523:Core/Src/bno055.c ****                 /* Write the value of power mode */
8524:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 17762              		.loc 1 8524 17 is_stmt 1 view .LVU5059
 17763              		.loc 1 8524 36 is_stmt 0 view .LVU5060
 17764 002c 1D4B     		ldr	r3, .L1313
 17765 002e 1868     		ldr	r0, [r3]
 17766 0030 0469     		ldr	r4, [r0, #16]
 17767              	.LVL2268:
 17768              		.loc 1 8524 28 view .LVU5061
 17769 0032 0123     		movs	r3, #1
ARM GAS  /tmp/ccOloYeZ.s 			page 510


 17770 0034 0DF10702 		add	r2, sp, #7
 17771 0038 3E21     		movs	r1, #62
 17772 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 17773 003c A047     		blx	r4
 17774              	.LVL2269:
8525:Core/Src/bno055.c ****                                                           BNO055_POWER_MODE_REG,
8526:Core/Src/bno055.c ****                                                           &data_u8r,
8527:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8528:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 17775              		.loc 1 8528 17 is_stmt 1 view .LVU5062
 17776              		.loc 1 8528 20 is_stmt 0 view .LVU5063
 17777 003e 0446     		mov	r4, r0
 17778 0040 E8B9     		cbnz	r0, .L1305
8529:Core/Src/bno055.c ****                 {
8530:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_POWER_MODE, power_mode_u8);
 17779              		.loc 1 8530 21 is_stmt 1 view .LVU5064
 17780              		.loc 1 8530 32 is_stmt 0 view .LVU5065
 17781 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 17782              		.loc 1 8530 30 view .LVU5066
 17783 0046 23F00303 		bic	r3, r3, #3
 17784 004a 05F00300 		and	r0, r5, #3
 17785              	.LVL2270:
 17786              		.loc 1 8530 30 view .LVU5067
 17787 004e 0343     		orrs	r3, r3, r0
 17788 0050 8DF80730 		strb	r3, [sp, #7]
8531:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17789              		.loc 1 8531 21 is_stmt 1 view .LVU5068
 17790              		.loc 1 8531 41 is_stmt 0 view .LVU5069
 17791 0054 134B     		ldr	r3, .L1313
 17792 0056 1868     		ldr	r0, [r3]
 17793 0058 C568     		ldr	r5, [r0, #12]
 17794              		.loc 1 8531 33 view .LVU5070
 17795 005a 0123     		movs	r3, #1
 17796 005c 0DF10702 		add	r2, sp, #7
 17797 0060 3E21     		movs	r1, #62
 17798 0062 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 17799 0064 A847     		blx	r5
 17800              	.LVL2271:
 17801              		.loc 1 8531 30 view .LVU5071
 17802 0066 54FA80F0 		uxtab	r0, r4, r0
 17803 006a 44B2     		sxtb	r4, r0
 17804              	.LVL2272:
 17805              		.loc 1 8531 30 view .LVU5072
 17806 006c 07E0     		b	.L1305
 17807              	.LVL2273:
 17808              	.L1311:
8519:Core/Src/bno055.c ****             }
 17809              		.loc 1 8519 17 is_stmt 1 view .LVU5073
8519:Core/Src/bno055.c ****             }
 17810              		.loc 1 8519 28 is_stmt 0 view .LVU5074
 17811 006e FFF7FEFF 		bl	bno055_set_operation_mode
 17812              	.LVL2274:
8519:Core/Src/bno055.c ****             }
 17813              		.loc 1 8519 25 view .LVU5075
 17814 0072 54FA80F4 		uxtab	r4, r4, r0
 17815 0076 64B2     		sxtb	r4, r4
 17816              	.LVL2275:
ARM GAS  /tmp/ccOloYeZ.s 			page 511


8519:Core/Src/bno055.c ****             }
 17817              		.loc 1 8519 25 view .LVU5076
 17818 0078 D7E7     		b	.L1306
 17819              	.LVL2276:
 17820              	.L1308:
8532:Core/Src/bno055.c ****                                                                 BNO055_POWER_MODE_REG,
8533:Core/Src/bno055.c ****                                                                 &data_u8r,
8534:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
8535:Core/Src/bno055.c ****                 }
8536:Core/Src/bno055.c ****             }
8537:Core/Src/bno055.c ****             else
8538:Core/Src/bno055.c ****             {
8539:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
8540:Core/Src/bno055.c ****             }
8541:Core/Src/bno055.c ****         }
8542:Core/Src/bno055.c ****         else
8543:Core/Src/bno055.c ****         {
8544:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 17821              		.loc 1 8544 22 view .LVU5077
 17822 007a 4FF0FF34 		mov	r4, #-1
 17823              	.LVL2277:
 17824              	.L1305:
8545:Core/Src/bno055.c ****         }
8546:Core/Src/bno055.c ****     }
8547:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 17825              		.loc 1 8547 5 is_stmt 1 view .LVU5078
 17826              		.loc 1 8547 24 is_stmt 0 view .LVU5079
 17827 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 17828              		.loc 1 8547 8 view .LVU5080
 17829 0082 28B9     		cbnz	r0, .L1312
 17830              	.LVL2278:
 17831              	.L1304:
8548:Core/Src/bno055.c ****     {
8549:Core/Src/bno055.c ****         /* set the operation mode
8550:Core/Src/bno055.c ****          * of previous operation mode*/
8551:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
8552:Core/Src/bno055.c ****     }
8553:Core/Src/bno055.c **** 
8554:Core/Src/bno055.c ****     return com_rslt;
8555:Core/Src/bno055.c **** }
 17832              		.loc 1 8555 1 view .LVU5081
 17833 0084 2046     		mov	r0, r4
 17834 0086 03B0     		add	sp, sp, #12
 17835              		.cfi_remember_state
 17836              		.cfi_def_cfa_offset 12
 17837              		@ sp needed
 17838 0088 30BD     		pop	{r4, r5, pc}
 17839              	.LVL2279:
 17840              	.L1309:
 17841              		.cfi_restore_state
8539:Core/Src/bno055.c ****             }
 17842              		.loc 1 8539 26 view .LVU5082
 17843 008a 4FF0FF34 		mov	r4, #-1
 17844              	.LVL2280:
8539:Core/Src/bno055.c ****             }
 17845              		.loc 1 8539 26 view .LVU5083
 17846 008e F6E7     		b	.L1305
ARM GAS  /tmp/ccOloYeZ.s 			page 512


 17847              	.LVL2281:
 17848              	.L1312:
8551:Core/Src/bno055.c ****     }
 17849              		.loc 1 8551 9 is_stmt 1 view .LVU5084
8551:Core/Src/bno055.c ****     }
 17850              		.loc 1 8551 21 is_stmt 0 view .LVU5085
 17851 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 17852              	.LVL2282:
8551:Core/Src/bno055.c ****     }
 17853              		.loc 1 8551 18 view .LVU5086
 17854 0094 54FA80F0 		uxtab	r0, r4, r0
 17855 0098 44B2     		sxtb	r4, r0
 17856              	.LVL2283:
8551:Core/Src/bno055.c ****     }
 17857              		.loc 1 8551 18 view .LVU5087
 17858 009a F3E7     		b	.L1304
 17859              	.LVL2284:
 17860              	.L1307:
8507:Core/Src/bno055.c ****     }
 17861              		.loc 1 8507 16 view .LVU5088
 17862 009c 6FF07E04 		mvn	r4, #126
 17863 00a0 F0E7     		b	.L1304
 17864              	.L1314:
 17865 00a2 00BF     		.align	2
 17866              	.L1313:
 17867 00a4 00000000 		.word	p_bno055
 17868              		.cfi_endproc
 17869              	.LFE148:
 17871              		.section	.text.bno055_get_intr_rst,"ax",%progbits
 17872              		.align	1
 17873              		.global	bno055_get_intr_rst
 17874              		.syntax unified
 17875              		.thumb
 17876              		.thumb_func
 17878              	bno055_get_intr_rst:
 17879              	.LVL2285:
 17880              	.LFB149:
8556:Core/Src/bno055.c **** 
8557:Core/Src/bno055.c **** /*!
8558:Core/Src/bno055.c ****  *  @brief This API used to read the reset interrupt
8559:Core/Src/bno055.c ****  *  from register from 0x3F bit 6
8560:Core/Src/bno055.c ****  *  It resets all the interrupt bit and interrupt output
8561:Core/Src/bno055.c ****  *
8562:Core/Src/bno055.c ****  *  @param intr_rst_u8 : The value of reset interrupt
8563:Core/Src/bno055.c ****  *
8564:Core/Src/bno055.c ****  *    intr_rst_u8 | result
8565:Core/Src/bno055.c ****  *   ------------ |----------
8566:Core/Src/bno055.c ****  *     0x01       | BNO055_BIT_ENABLE
8567:Core/Src/bno055.c ****  *     0x00       | BNO055_BIT_DISABLE
8568:Core/Src/bno055.c ****  *
8569:Core/Src/bno055.c ****  *  @return results of bus communication function
8570:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8571:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8572:Core/Src/bno055.c ****  *
8573:Core/Src/bno055.c ****  */
8574:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_rst(u8 *intr_rst_u8)
8575:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccOloYeZ.s 			page 513


 17881              		.loc 1 8575 1 is_stmt 1 view -0
 17882              		.cfi_startproc
 17883              		@ args = 0, pretend = 0, frame = 8
 17884              		@ frame_needed = 0, uses_anonymous_args = 0
 17885              		.loc 1 8575 1 is_stmt 0 view .LVU5090
 17886 0000 30B5     		push	{r4, r5, lr}
 17887              		.cfi_def_cfa_offset 12
 17888              		.cfi_offset 4, -12
 17889              		.cfi_offset 5, -8
 17890              		.cfi_offset 14, -4
 17891 0002 83B0     		sub	sp, sp, #12
 17892              		.cfi_def_cfa_offset 24
8576:Core/Src/bno055.c ****     /* Variable used to return value of
8577:Core/Src/bno055.c ****      * communication routine*/
8578:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17893              		.loc 1 8578 5 is_stmt 1 view .LVU5091
 17894              	.LVL2286:
8579:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 17895              		.loc 1 8579 5 view .LVU5092
 17896              		.loc 1 8579 8 is_stmt 0 view .LVU5093
 17897 0004 0023     		movs	r3, #0
 17898 0006 8DF80730 		strb	r3, [sp, #7]
8580:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 17899              		.loc 1 8580 5 is_stmt 1 view .LVU5094
 17900              	.LVL2287:
8581:Core/Src/bno055.c **** 
8582:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8583:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 17901              		.loc 1 8583 5 view .LVU5095
 17902              		.loc 1 8583 18 is_stmt 0 view .LVU5096
 17903 000a 134B     		ldr	r3, .L1323
 17904 000c 1B68     		ldr	r3, [r3]
 17905              		.loc 1 8583 8 view .LVU5097
 17906 000e E3B1     		cbz	r3, .L1319
 17907 0010 0446     		mov	r4, r0
8584:Core/Src/bno055.c ****     {
8585:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8586:Core/Src/bno055.c ****     }
8587:Core/Src/bno055.c ****     else
8588:Core/Src/bno055.c ****     {
8589:Core/Src/bno055.c ****         /*condition check for page,  reset interrupt is
8590:Core/Src/bno055.c ****          * available in the page zero*/
8591:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 17908              		.loc 1 8591 9 is_stmt 1 view .LVU5098
 17909              		.loc 1 8591 21 is_stmt 0 view .LVU5099
 17910 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 17911              		.loc 1 8591 12 view .LVU5100
 17912 0014 9BB9     		cbnz	r3, .L1322
 17913              	.LVL2288:
 17914              	.L1317:
8592:Core/Src/bno055.c ****         {
8593:Core/Src/bno055.c ****             /* Write the page zero*/
8594:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8595:Core/Src/bno055.c ****         }
8596:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 17915              		.loc 1 8596 53 discriminator 1 view .LVU5101
 17916 0016 104B     		ldr	r3, .L1323
ARM GAS  /tmp/ccOloYeZ.s 			page 514


 17917 0018 1B68     		ldr	r3, [r3]
 17918 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 17919              		.loc 1 8596 41 discriminator 1 view .LVU5102
 17920 001c C3B9     		cbnz	r3, .L1320
 17921              	.L1318:
8597:Core/Src/bno055.c ****         {
8598:Core/Src/bno055.c ****             /* Read the value of reset interrupt*/
8599:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 17922              		.loc 1 8599 13 is_stmt 1 view .LVU5103
 17923              		.loc 1 8599 32 is_stmt 0 view .LVU5104
 17924 001e 0E4B     		ldr	r3, .L1323
 17925 0020 1868     		ldr	r0, [r3]
 17926 0022 0569     		ldr	r5, [r0, #16]
 17927              		.loc 1 8599 24 view .LVU5105
 17928 0024 0123     		movs	r3, #1
 17929 0026 0DF10702 		add	r2, sp, #7
 17930 002a 3F21     		movs	r1, #63
 17931 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 17932 002e A847     		blx	r5
 17933              	.LVL2289:
8600:Core/Src/bno055.c ****                                                       BNO055_INTR_RST_REG,
8601:Core/Src/bno055.c ****                                                       &data_u8r,
8602:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8603:Core/Src/bno055.c ****             *intr_rst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_RST);
 17934              		.loc 1 8603 13 is_stmt 1 view .LVU5106
 17935              		.loc 1 8603 28 is_stmt 0 view .LVU5107
 17936 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 17937 0034 C3F38013 		ubfx	r3, r3, #6, #1
 17938              		.loc 1 8603 26 view .LVU5108
 17939 0038 2370     		strb	r3, [r4]
 17940              	.LVL2290:
 17941              	.L1316:
8604:Core/Src/bno055.c ****         }
8605:Core/Src/bno055.c ****         else
8606:Core/Src/bno055.c ****         {
8607:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8608:Core/Src/bno055.c ****         }
8609:Core/Src/bno055.c ****     }
8610:Core/Src/bno055.c **** 
8611:Core/Src/bno055.c ****     return com_rslt;
8612:Core/Src/bno055.c **** }
 17942              		.loc 1 8612 1 view .LVU5109
 17943 003a 03B0     		add	sp, sp, #12
 17944              		.cfi_remember_state
 17945              		.cfi_def_cfa_offset 12
 17946              		@ sp needed
 17947 003c 30BD     		pop	{r4, r5, pc}
 17948              	.LVL2291:
 17949              	.L1322:
 17950              		.cfi_restore_state
8594:Core/Src/bno055.c ****         }
 17951              		.loc 1 8594 13 is_stmt 1 view .LVU5110
8594:Core/Src/bno055.c ****         }
 17952              		.loc 1 8594 23 is_stmt 0 view .LVU5111
 17953 003e 0020     		movs	r0, #0
 17954              	.LVL2292:
8594:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 515


 17955              		.loc 1 8594 23 view .LVU5112
 17956 0040 FFF7FEFF 		bl	bno055_write_page_id
 17957              	.LVL2293:
8596:Core/Src/bno055.c ****         {
 17958              		.loc 1 8596 9 is_stmt 1 view .LVU5113
8596:Core/Src/bno055.c ****         {
 17959              		.loc 1 8596 12 is_stmt 0 view .LVU5114
 17960 0044 0028     		cmp	r0, #0
 17961 0046 EAD0     		beq	.L1318
 17962 0048 E5E7     		b	.L1317
 17963              	.LVL2294:
 17964              	.L1319:
8585:Core/Src/bno055.c ****     }
 17965              		.loc 1 8585 16 view .LVU5115
 17966 004a 6FF07E00 		mvn	r0, #126
 17967              	.LVL2295:
8585:Core/Src/bno055.c ****     }
 17968              		.loc 1 8585 16 view .LVU5116
 17969 004e F4E7     		b	.L1316
 17970              	.LVL2296:
 17971              	.L1320:
8607:Core/Src/bno055.c ****         }
 17972              		.loc 1 8607 22 view .LVU5117
 17973 0050 4FF0FF30 		mov	r0, #-1
 17974 0054 F1E7     		b	.L1316
 17975              	.L1324:
 17976 0056 00BF     		.align	2
 17977              	.L1323:
 17978 0058 00000000 		.word	p_bno055
 17979              		.cfi_endproc
 17980              	.LFE149:
 17982              		.section	.text.bno055_set_intr_rst,"ax",%progbits
 17983              		.align	1
 17984              		.global	bno055_set_intr_rst
 17985              		.syntax unified
 17986              		.thumb
 17987              		.thumb_func
 17989              	bno055_set_intr_rst:
 17990              	.LVL2297:
 17991              	.LFB150:
8613:Core/Src/bno055.c **** 
8614:Core/Src/bno055.c **** /*!
8615:Core/Src/bno055.c ****  *  @brief This API used to write the reset interrupt
8616:Core/Src/bno055.c ****  *  from register from 0x3F bit 6
8617:Core/Src/bno055.c ****  *  It resets all the interrupt bit and interrupt output
8618:Core/Src/bno055.c ****  *
8619:Core/Src/bno055.c ****  *  @param intr_rst_u8 : The value of reset interrupt
8620:Core/Src/bno055.c ****  *
8621:Core/Src/bno055.c ****  *    intr_rst_u8 | result
8622:Core/Src/bno055.c ****  *   -------------- |----------
8623:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8624:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8625:Core/Src/bno055.c ****  *
8626:Core/Src/bno055.c ****  *  @return results of bus communication function
8627:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8628:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8629:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 516


8630:Core/Src/bno055.c ****  */
8631:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_rst(u8 intr_rst_u8)
8632:Core/Src/bno055.c **** {
 17992              		.loc 1 8632 1 is_stmt 1 view -0
 17993              		.cfi_startproc
 17994              		@ args = 0, pretend = 0, frame = 8
 17995              		@ frame_needed = 0, uses_anonymous_args = 0
 17996              		.loc 1 8632 1 is_stmt 0 view .LVU5119
 17997 0000 70B5     		push	{r4, r5, r6, lr}
 17998              		.cfi_def_cfa_offset 16
 17999              		.cfi_offset 4, -16
 18000              		.cfi_offset 5, -12
 18001              		.cfi_offset 6, -8
 18002              		.cfi_offset 14, -4
 18003 0002 82B0     		sub	sp, sp, #8
 18004              		.cfi_def_cfa_offset 24
8633:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18005              		.loc 1 8633 5 is_stmt 1 view .LVU5120
 18006              	.LVL2298:
8634:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18007              		.loc 1 8634 5 view .LVU5121
 18008              		.loc 1 8634 8 is_stmt 0 view .LVU5122
 18009 0004 0023     		movs	r3, #0
 18010 0006 8DF80730 		strb	r3, [sp, #7]
8635:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18011              		.loc 1 8635 5 is_stmt 1 view .LVU5123
 18012              	.LVL2299:
8636:Core/Src/bno055.c **** 
8637:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8638:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18013              		.loc 1 8638 5 view .LVU5124
 18014              		.loc 1 8638 18 is_stmt 0 view .LVU5125
 18015 000a 1D4B     		ldr	r3, .L1333
 18016 000c 1B68     		ldr	r3, [r3]
 18017              		.loc 1 8638 8 view .LVU5126
 18018 000e 002B     		cmp	r3, #0
 18019 0010 30D0     		beq	.L1329
 18020 0012 0546     		mov	r5, r0
8639:Core/Src/bno055.c ****     {
8640:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8641:Core/Src/bno055.c ****     }
8642:Core/Src/bno055.c ****     else
8643:Core/Src/bno055.c ****     {
8644:Core/Src/bno055.c ****         /*condition check for page, reset interrupt
8645:Core/Src/bno055.c ****          * available in the page zero*/
8646:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18021              		.loc 1 8646 9 is_stmt 1 view .LVU5127
 18022              		.loc 1 8646 21 is_stmt 0 view .LVU5128
 18023 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18024              		.loc 1 8646 12 view .LVU5129
 18025 0016 3BBB     		cbnz	r3, .L1332
 18026              	.LVL2300:
 18027              	.L1327:
8647:Core/Src/bno055.c ****         {
8648:Core/Src/bno055.c ****             /* Write the page zero*/
8649:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8650:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 517


8651:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18028              		.loc 1 8651 53 discriminator 1 view .LVU5130
 18029 0018 194B     		ldr	r3, .L1333
 18030 001a 1B68     		ldr	r3, [r3]
 18031 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18032              		.loc 1 8651 41 discriminator 1 view .LVU5131
 18033 001e 63BB     		cbnz	r3, .L1330
 18034              	.L1328:
8652:Core/Src/bno055.c ****         {
8653:Core/Src/bno055.c ****             /* Write the value of reset interrupt */
8654:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18035              		.loc 1 8654 13 is_stmt 1 view .LVU5132
 18036              		.loc 1 8654 32 is_stmt 0 view .LVU5133
 18037 0020 174B     		ldr	r3, .L1333
 18038 0022 1C68     		ldr	r4, [r3]
 18039 0024 2669     		ldr	r6, [r4, #16]
 18040              		.loc 1 8654 24 view .LVU5134
 18041 0026 0123     		movs	r3, #1
 18042 0028 0DF10702 		add	r2, sp, #7
 18043 002c 3F21     		movs	r1, #63
 18044 002e 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 18045 0030 B047     		blx	r6
 18046              	.LVL2301:
8655:Core/Src/bno055.c ****                                                       BNO055_INTR_RST_REG,
8656:Core/Src/bno055.c ****                                                       &data_u8r,
8657:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8658:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 18047              		.loc 1 8658 13 is_stmt 1 view .LVU5135
 18048              		.loc 1 8658 16 is_stmt 0 view .LVU5136
 18049 0032 0446     		mov	r4, r0
 18050 0034 A8B9     		cbnz	r0, .L1326
8659:Core/Src/bno055.c ****             {
8660:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_INTR_RST, intr_rst_u8);
 18051              		.loc 1 8660 17 is_stmt 1 view .LVU5137
 18052              		.loc 1 8660 28 is_stmt 0 view .LVU5138
 18053 0036 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18054 003a A801     		lsls	r0, r5, #6
 18055              	.LVL2302:
 18056              		.loc 1 8660 28 view .LVU5139
 18057 003c 00F04000 		and	r0, r0, #64
 18058 0040 23F04003 		bic	r3, r3, #64
 18059 0044 0343     		orrs	r3, r3, r0
 18060              		.loc 1 8660 26 view .LVU5140
 18061 0046 8DF80730 		strb	r3, [sp, #7]
8661:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18062              		.loc 1 8661 17 is_stmt 1 view .LVU5141
 18063              		.loc 1 8661 37 is_stmt 0 view .LVU5142
 18064 004a 0D4B     		ldr	r3, .L1333
 18065 004c 1868     		ldr	r0, [r3]
 18066 004e C568     		ldr	r5, [r0, #12]
 18067              		.loc 1 8661 29 view .LVU5143
 18068 0050 0123     		movs	r3, #1
 18069 0052 0DF10702 		add	r2, sp, #7
 18070 0056 3F21     		movs	r1, #63
 18071 0058 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18072 005a A847     		blx	r5
 18073              	.LVL2303:
ARM GAS  /tmp/ccOloYeZ.s 			page 518


 18074              		.loc 1 8661 26 view .LVU5144
 18075 005c 54FA80F0 		uxtab	r0, r4, r0
 18076 0060 44B2     		sxtb	r4, r0
 18077              	.LVL2304:
 18078              	.L1326:
8662:Core/Src/bno055.c ****                                                             BNO055_INTR_RST_REG,
8663:Core/Src/bno055.c ****                                                             &data_u8r,
8664:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
8665:Core/Src/bno055.c ****             }
8666:Core/Src/bno055.c ****         }
8667:Core/Src/bno055.c ****         else
8668:Core/Src/bno055.c ****         {
8669:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8670:Core/Src/bno055.c ****         }
8671:Core/Src/bno055.c ****     }
8672:Core/Src/bno055.c **** 
8673:Core/Src/bno055.c ****     return com_rslt;
8674:Core/Src/bno055.c **** }
 18079              		.loc 1 8674 1 view .LVU5145
 18080 0062 2046     		mov	r0, r4
 18081 0064 02B0     		add	sp, sp, #8
 18082              		.cfi_remember_state
 18083              		.cfi_def_cfa_offset 16
 18084              		@ sp needed
 18085 0066 70BD     		pop	{r4, r5, r6, pc}
 18086              	.LVL2305:
 18087              	.L1332:
 18088              		.cfi_restore_state
8649:Core/Src/bno055.c ****         }
 18089              		.loc 1 8649 13 is_stmt 1 view .LVU5146
8649:Core/Src/bno055.c ****         }
 18090              		.loc 1 8649 23 is_stmt 0 view .LVU5147
 18091 0068 0020     		movs	r0, #0
 18092              	.LVL2306:
8649:Core/Src/bno055.c ****         }
 18093              		.loc 1 8649 23 view .LVU5148
 18094 006a FFF7FEFF 		bl	bno055_write_page_id
 18095              	.LVL2307:
8651:Core/Src/bno055.c ****         {
 18096              		.loc 1 8651 9 is_stmt 1 view .LVU5149
8651:Core/Src/bno055.c ****         {
 18097              		.loc 1 8651 12 is_stmt 0 view .LVU5150
 18098 006e 0028     		cmp	r0, #0
 18099 0070 D6D0     		beq	.L1328
 18100 0072 D1E7     		b	.L1327
 18101              	.LVL2308:
 18102              	.L1329:
8640:Core/Src/bno055.c ****     }
 18103              		.loc 1 8640 16 view .LVU5151
 18104 0074 6FF07E04 		mvn	r4, #126
 18105 0078 F3E7     		b	.L1326
 18106              	.LVL2309:
 18107              	.L1330:
8669:Core/Src/bno055.c ****         }
 18108              		.loc 1 8669 22 view .LVU5152
 18109 007a 4FF0FF34 		mov	r4, #-1
 18110 007e F0E7     		b	.L1326
ARM GAS  /tmp/ccOloYeZ.s 			page 519


 18111              	.L1334:
 18112              		.align	2
 18113              	.L1333:
 18114 0080 00000000 		.word	p_bno055
 18115              		.cfi_endproc
 18116              	.LFE150:
 18118              		.section	.text.bno055_get_clk_src,"ax",%progbits
 18119              		.align	1
 18120              		.global	bno055_get_clk_src
 18121              		.syntax unified
 18122              		.thumb
 18123              		.thumb_func
 18125              	bno055_get_clk_src:
 18126              	.LVL2310:
 18127              	.LFB151:
8675:Core/Src/bno055.c **** 
8676:Core/Src/bno055.c **** /*!
8677:Core/Src/bno055.c ****  *  @brief This API used to read the clk source
8678:Core/Src/bno055.c ****  *  from register from 0x3F bit 7
8679:Core/Src/bno055.c ****  *
8680:Core/Src/bno055.c ****  *  @param clk_src_u8 : The value of clk source
8681:Core/Src/bno055.c ****  *
8682:Core/Src/bno055.c ****  *   clk_src_u8   | result
8683:Core/Src/bno055.c ****  *   -------------- |----------
8684:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8685:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8686:Core/Src/bno055.c ****  *
8687:Core/Src/bno055.c ****  *  @return results of bus communication function
8688:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8689:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8690:Core/Src/bno055.c ****  *
8691:Core/Src/bno055.c ****  */
8692:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_clk_src(u8 *clk_src_u8)
8693:Core/Src/bno055.c **** {
 18128              		.loc 1 8693 1 is_stmt 1 view -0
 18129              		.cfi_startproc
 18130              		@ args = 0, pretend = 0, frame = 8
 18131              		@ frame_needed = 0, uses_anonymous_args = 0
 18132              		.loc 1 8693 1 is_stmt 0 view .LVU5154
 18133 0000 30B5     		push	{r4, r5, lr}
 18134              		.cfi_def_cfa_offset 12
 18135              		.cfi_offset 4, -12
 18136              		.cfi_offset 5, -8
 18137              		.cfi_offset 14, -4
 18138 0002 83B0     		sub	sp, sp, #12
 18139              		.cfi_def_cfa_offset 24
8694:Core/Src/bno055.c ****     /* Variable used to return value of
8695:Core/Src/bno055.c ****      * communication routine*/
8696:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18140              		.loc 1 8696 5 is_stmt 1 view .LVU5155
 18141              	.LVL2311:
8697:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18142              		.loc 1 8697 5 view .LVU5156
 18143              		.loc 1 8697 8 is_stmt 0 view .LVU5157
 18144 0004 0023     		movs	r3, #0
 18145 0006 8DF80730 		strb	r3, [sp, #7]
8698:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/ccOloYeZ.s 			page 520


 18146              		.loc 1 8698 5 is_stmt 1 view .LVU5158
 18147              	.LVL2312:
8699:Core/Src/bno055.c **** 
8700:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8701:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18148              		.loc 1 8701 5 view .LVU5159
 18149              		.loc 1 8701 18 is_stmt 0 view .LVU5160
 18150 000a 124B     		ldr	r3, .L1343
 18151 000c 1B68     		ldr	r3, [r3]
 18152              		.loc 1 8701 8 view .LVU5161
 18153 000e DBB1     		cbz	r3, .L1339
 18154 0010 0446     		mov	r4, r0
8702:Core/Src/bno055.c ****     {
8703:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8704:Core/Src/bno055.c ****     }
8705:Core/Src/bno055.c ****     else
8706:Core/Src/bno055.c ****     {
8707:Core/Src/bno055.c ****         /*condition check for page, clk source is
8708:Core/Src/bno055.c ****          * available in the page zero*/
8709:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18155              		.loc 1 8709 9 is_stmt 1 view .LVU5162
 18156              		.loc 1 8709 21 is_stmt 0 view .LVU5163
 18157 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18158              		.loc 1 8709 12 view .LVU5164
 18159 0014 93B9     		cbnz	r3, .L1342
 18160              	.LVL2313:
 18161              	.L1337:
8710:Core/Src/bno055.c ****         {
8711:Core/Src/bno055.c ****             /* Write the page zero*/
8712:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8713:Core/Src/bno055.c ****         }
8714:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18162              		.loc 1 8714 53 discriminator 1 view .LVU5165
 18163 0016 0F4B     		ldr	r3, .L1343
 18164 0018 1B68     		ldr	r3, [r3]
 18165 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18166              		.loc 1 8714 41 discriminator 1 view .LVU5166
 18167 001c BBB9     		cbnz	r3, .L1340
 18168              	.L1338:
8715:Core/Src/bno055.c ****         {
8716:Core/Src/bno055.c ****             /* Read the value of clk source */
8717:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18169              		.loc 1 8717 13 is_stmt 1 view .LVU5167
 18170              		.loc 1 8717 32 is_stmt 0 view .LVU5168
 18171 001e 0D4B     		ldr	r3, .L1343
 18172 0020 1868     		ldr	r0, [r3]
 18173 0022 0569     		ldr	r5, [r0, #16]
 18174              		.loc 1 8717 24 view .LVU5169
 18175 0024 0123     		movs	r3, #1
 18176 0026 0DF10702 		add	r2, sp, #7
 18177 002a 3F21     		movs	r1, #63
 18178 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18179 002e A847     		blx	r5
 18180              	.LVL2314:
8718:Core/Src/bno055.c ****                                                       BNO055_CLK_SRC_REG,
8719:Core/Src/bno055.c ****                                                       &data_u8r,
8720:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/ccOloYeZ.s 			page 521


8721:Core/Src/bno055.c ****             *clk_src_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_CLK_SRC);
 18181              		.loc 1 8721 13 is_stmt 1 view .LVU5170
 18182              		.loc 1 8721 27 is_stmt 0 view .LVU5171
 18183 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18184 0034 DB09     		lsrs	r3, r3, #7
 18185              		.loc 1 8721 25 view .LVU5172
 18186 0036 2370     		strb	r3, [r4]
 18187              	.LVL2315:
 18188              	.L1336:
8722:Core/Src/bno055.c ****         }
8723:Core/Src/bno055.c ****         else
8724:Core/Src/bno055.c ****         {
8725:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8726:Core/Src/bno055.c ****         }
8727:Core/Src/bno055.c ****     }
8728:Core/Src/bno055.c **** 
8729:Core/Src/bno055.c ****     return com_rslt;
8730:Core/Src/bno055.c **** }
 18189              		.loc 1 8730 1 view .LVU5173
 18190 0038 03B0     		add	sp, sp, #12
 18191              		.cfi_remember_state
 18192              		.cfi_def_cfa_offset 12
 18193              		@ sp needed
 18194 003a 30BD     		pop	{r4, r5, pc}
 18195              	.LVL2316:
 18196              	.L1342:
 18197              		.cfi_restore_state
8712:Core/Src/bno055.c ****         }
 18198              		.loc 1 8712 13 is_stmt 1 view .LVU5174
8712:Core/Src/bno055.c ****         }
 18199              		.loc 1 8712 23 is_stmt 0 view .LVU5175
 18200 003c 0020     		movs	r0, #0
 18201              	.LVL2317:
8712:Core/Src/bno055.c ****         }
 18202              		.loc 1 8712 23 view .LVU5176
 18203 003e FFF7FEFF 		bl	bno055_write_page_id
 18204              	.LVL2318:
8714:Core/Src/bno055.c ****         {
 18205              		.loc 1 8714 9 is_stmt 1 view .LVU5177
8714:Core/Src/bno055.c ****         {
 18206              		.loc 1 8714 12 is_stmt 0 view .LVU5178
 18207 0042 0028     		cmp	r0, #0
 18208 0044 EBD0     		beq	.L1338
 18209 0046 E6E7     		b	.L1337
 18210              	.LVL2319:
 18211              	.L1339:
8703:Core/Src/bno055.c ****     }
 18212              		.loc 1 8703 16 view .LVU5179
 18213 0048 6FF07E00 		mvn	r0, #126
 18214              	.LVL2320:
8703:Core/Src/bno055.c ****     }
 18215              		.loc 1 8703 16 view .LVU5180
 18216 004c F4E7     		b	.L1336
 18217              	.LVL2321:
 18218              	.L1340:
8725:Core/Src/bno055.c ****         }
 18219              		.loc 1 8725 22 view .LVU5181
ARM GAS  /tmp/ccOloYeZ.s 			page 522


 18220 004e 4FF0FF30 		mov	r0, #-1
 18221 0052 F1E7     		b	.L1336
 18222              	.L1344:
 18223              		.align	2
 18224              	.L1343:
 18225 0054 00000000 		.word	p_bno055
 18226              		.cfi_endproc
 18227              	.LFE151:
 18229              		.section	.text.bno055_set_clk_src,"ax",%progbits
 18230              		.align	1
 18231              		.global	bno055_set_clk_src
 18232              		.syntax unified
 18233              		.thumb
 18234              		.thumb_func
 18236              	bno055_set_clk_src:
 18237              	.LVL2322:
 18238              	.LFB152:
8731:Core/Src/bno055.c **** 
8732:Core/Src/bno055.c **** /*!
8733:Core/Src/bno055.c ****  *  @brief This API used to write the clk source
8734:Core/Src/bno055.c ****  *  from register from 0x3F bit 7
8735:Core/Src/bno055.c ****  *
8736:Core/Src/bno055.c ****  *  @param clk_src_u8 : The value of clk source
8737:Core/Src/bno055.c ****  *
8738:Core/Src/bno055.c ****  *   clk_src_u8   | result
8739:Core/Src/bno055.c ****  *   -------------- |----------
8740:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8741:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8742:Core/Src/bno055.c ****  *
8743:Core/Src/bno055.c ****  *  @return results of bus communication function
8744:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8745:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8746:Core/Src/bno055.c ****  *
8747:Core/Src/bno055.c ****  */
8748:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_clk_src(u8 clk_src_u8)
8749:Core/Src/bno055.c **** {
 18239              		.loc 1 8749 1 is_stmt 1 view -0
 18240              		.cfi_startproc
 18241              		@ args = 0, pretend = 0, frame = 8
 18242              		@ frame_needed = 0, uses_anonymous_args = 0
 18243              		.loc 1 8749 1 is_stmt 0 view .LVU5183
 18244 0000 30B5     		push	{r4, r5, lr}
 18245              		.cfi_def_cfa_offset 12
 18246              		.cfi_offset 4, -12
 18247              		.cfi_offset 5, -8
 18248              		.cfi_offset 14, -4
 18249 0002 83B0     		sub	sp, sp, #12
 18250              		.cfi_def_cfa_offset 24
8750:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18251              		.loc 1 8750 5 is_stmt 1 view .LVU5184
 18252              	.LVL2323:
8751:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18253              		.loc 1 8751 5 view .LVU5185
 18254              		.loc 1 8751 8 is_stmt 0 view .LVU5186
 18255 0004 0023     		movs	r3, #0
 18256 0006 8DF80730 		strb	r3, [sp, #7]
8752:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/ccOloYeZ.s 			page 523


 18257              		.loc 1 8752 5 is_stmt 1 view .LVU5187
 18258              	.LVL2324:
8753:Core/Src/bno055.c **** 
8754:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8755:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18259              		.loc 1 8755 5 view .LVU5188
 18260              		.loc 1 8755 18 is_stmt 0 view .LVU5189
 18261 000a 1C4B     		ldr	r3, .L1353
 18262 000c 1B68     		ldr	r3, [r3]
 18263              		.loc 1 8755 8 view .LVU5190
 18264 000e 002B     		cmp	r3, #0
 18265 0010 2ED0     		beq	.L1349
 18266 0012 0446     		mov	r4, r0
8756:Core/Src/bno055.c ****     {
8757:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8758:Core/Src/bno055.c ****     }
8759:Core/Src/bno055.c ****     else
8760:Core/Src/bno055.c ****     {
8761:Core/Src/bno055.c ****         /*condition check for page, clk source is
8762:Core/Src/bno055.c ****          * available in the page zero*/
8763:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18267              		.loc 1 8763 9 is_stmt 1 view .LVU5191
 18268              		.loc 1 8763 21 is_stmt 0 view .LVU5192
 18269 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18270              		.loc 1 8763 12 view .LVU5193
 18271 0016 2BBB     		cbnz	r3, .L1352
 18272              	.LVL2325:
 18273              	.L1347:
8764:Core/Src/bno055.c ****         {
8765:Core/Src/bno055.c ****             /* Write the page zero*/
8766:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8767:Core/Src/bno055.c ****         }
8768:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18274              		.loc 1 8768 53 discriminator 1 view .LVU5194
 18275 0018 184B     		ldr	r3, .L1353
 18276 001a 1B68     		ldr	r3, [r3]
 18277 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18278              		.loc 1 8768 41 discriminator 1 view .LVU5195
 18279 001e 53BB     		cbnz	r3, .L1350
 18280              	.L1348:
8769:Core/Src/bno055.c ****         {
8770:Core/Src/bno055.c ****             /* Write the value of clk source */
8771:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18281              		.loc 1 8771 13 is_stmt 1 view .LVU5196
 18282              		.loc 1 8771 32 is_stmt 0 view .LVU5197
 18283 0020 164B     		ldr	r3, .L1353
 18284 0022 1868     		ldr	r0, [r3]
 18285 0024 0569     		ldr	r5, [r0, #16]
 18286              		.loc 1 8771 24 view .LVU5198
 18287 0026 0123     		movs	r3, #1
 18288 0028 0DF10702 		add	r2, sp, #7
 18289 002c 3F21     		movs	r1, #63
 18290 002e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18291 0030 A847     		blx	r5
 18292              	.LVL2326:
8772:Core/Src/bno055.c ****                                                       BNO055_CLK_SRC_REG,
8773:Core/Src/bno055.c ****                                                       &data_u8r,
ARM GAS  /tmp/ccOloYeZ.s 			page 524


8774:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8775:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 18293              		.loc 1 8775 13 is_stmt 1 view .LVU5199
 18294              		.loc 1 8775 16 is_stmt 0 view .LVU5200
 18295 0032 0546     		mov	r5, r0
 18296 0034 98B9     		cbnz	r0, .L1346
8776:Core/Src/bno055.c ****             {
8777:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_CLK_SRC, clk_src_u8);
 18297              		.loc 1 8777 17 is_stmt 1 view .LVU5201
 18298              		.loc 1 8777 28 is_stmt 0 view .LVU5202
 18299 0036 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18300 003a 03F07F03 		and	r3, r3, #127
 18301 003e 43EAC413 		orr	r3, r3, r4, lsl #7
 18302              		.loc 1 8777 26 view .LVU5203
 18303 0042 8DF80730 		strb	r3, [sp, #7]
8778:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18304              		.loc 1 8778 17 is_stmt 1 view .LVU5204
 18305              		.loc 1 8778 37 is_stmt 0 view .LVU5205
 18306 0046 0D4B     		ldr	r3, .L1353
 18307 0048 1868     		ldr	r0, [r3]
 18308              	.LVL2327:
 18309              		.loc 1 8778 37 view .LVU5206
 18310 004a C468     		ldr	r4, [r0, #12]
 18311              		.loc 1 8778 29 view .LVU5207
 18312 004c 0123     		movs	r3, #1
 18313 004e 0DF10702 		add	r2, sp, #7
 18314 0052 3F21     		movs	r1, #63
 18315 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18316 0056 A047     		blx	r4
 18317              	.LVL2328:
 18318              		.loc 1 8778 26 view .LVU5208
 18319 0058 55FA80F0 		uxtab	r0, r5, r0
 18320 005c 45B2     		sxtb	r5, r0
 18321              	.LVL2329:
 18322              	.L1346:
8779:Core/Src/bno055.c ****                                                             BNO055_CLK_SRC_REG,
8780:Core/Src/bno055.c ****                                                             &data_u8r,
8781:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
8782:Core/Src/bno055.c ****             }
8783:Core/Src/bno055.c ****         }
8784:Core/Src/bno055.c ****         else
8785:Core/Src/bno055.c ****         {
8786:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8787:Core/Src/bno055.c ****         }
8788:Core/Src/bno055.c ****     }
8789:Core/Src/bno055.c **** 
8790:Core/Src/bno055.c ****     return com_rslt;
8791:Core/Src/bno055.c **** }
 18323              		.loc 1 8791 1 view .LVU5209
 18324 005e 2846     		mov	r0, r5
 18325 0060 03B0     		add	sp, sp, #12
 18326              		.cfi_remember_state
 18327              		.cfi_def_cfa_offset 12
 18328              		@ sp needed
 18329 0062 30BD     		pop	{r4, r5, pc}
 18330              	.LVL2330:
 18331              	.L1352:
ARM GAS  /tmp/ccOloYeZ.s 			page 525


 18332              		.cfi_restore_state
8766:Core/Src/bno055.c ****         }
 18333              		.loc 1 8766 13 is_stmt 1 view .LVU5210
8766:Core/Src/bno055.c ****         }
 18334              		.loc 1 8766 23 is_stmt 0 view .LVU5211
 18335 0064 0020     		movs	r0, #0
 18336              	.LVL2331:
8766:Core/Src/bno055.c ****         }
 18337              		.loc 1 8766 23 view .LVU5212
 18338 0066 FFF7FEFF 		bl	bno055_write_page_id
 18339              	.LVL2332:
8768:Core/Src/bno055.c ****         {
 18340              		.loc 1 8768 9 is_stmt 1 view .LVU5213
8768:Core/Src/bno055.c ****         {
 18341              		.loc 1 8768 12 is_stmt 0 view .LVU5214
 18342 006a 0028     		cmp	r0, #0
 18343 006c D8D0     		beq	.L1348
 18344 006e D3E7     		b	.L1347
 18345              	.LVL2333:
 18346              	.L1349:
8757:Core/Src/bno055.c ****     }
 18347              		.loc 1 8757 16 view .LVU5215
 18348 0070 6FF07E05 		mvn	r5, #126
 18349 0074 F3E7     		b	.L1346
 18350              	.LVL2334:
 18351              	.L1350:
8786:Core/Src/bno055.c ****         }
 18352              		.loc 1 8786 22 view .LVU5216
 18353 0076 4FF0FF35 		mov	r5, #-1
 18354 007a F0E7     		b	.L1346
 18355              	.L1354:
 18356              		.align	2
 18357              	.L1353:
 18358 007c 00000000 		.word	p_bno055
 18359              		.cfi_endproc
 18360              	.LFE152:
 18362              		.section	.text.bno055_get_sys_rst,"ax",%progbits
 18363              		.align	1
 18364              		.global	bno055_get_sys_rst
 18365              		.syntax unified
 18366              		.thumb
 18367              		.thumb_func
 18369              	bno055_get_sys_rst:
 18370              	.LVL2335:
 18371              	.LFB153:
8792:Core/Src/bno055.c **** 
8793:Core/Src/bno055.c **** /*!
8794:Core/Src/bno055.c ****  *  @brief This API used to read the reset system
8795:Core/Src/bno055.c ****  *  from register from 0x3F bit 5
8796:Core/Src/bno055.c ****  *
8797:Core/Src/bno055.c ****  *  @param sys_rst_u8 : The value of reset system
8798:Core/Src/bno055.c ****  *
8799:Core/Src/bno055.c ****  *   sys_rst_u8   | result
8800:Core/Src/bno055.c ****  *   -------------- |----------
8801:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8802:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8803:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 526


8804:Core/Src/bno055.c ****  *  @return results of bus communication function
8805:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8806:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8807:Core/Src/bno055.c ****  *
8808:Core/Src/bno055.c ****  *  @note It resets the whole system
8809:Core/Src/bno055.c ****  */
8810:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_sys_rst(u8 *sys_rst_u8)
8811:Core/Src/bno055.c **** {
 18372              		.loc 1 8811 1 is_stmt 1 view -0
 18373              		.cfi_startproc
 18374              		@ args = 0, pretend = 0, frame = 8
 18375              		@ frame_needed = 0, uses_anonymous_args = 0
 18376              		.loc 1 8811 1 is_stmt 0 view .LVU5218
 18377 0000 30B5     		push	{r4, r5, lr}
 18378              		.cfi_def_cfa_offset 12
 18379              		.cfi_offset 4, -12
 18380              		.cfi_offset 5, -8
 18381              		.cfi_offset 14, -4
 18382 0002 83B0     		sub	sp, sp, #12
 18383              		.cfi_def_cfa_offset 24
8812:Core/Src/bno055.c ****     /* Variable used to return value of
8813:Core/Src/bno055.c ****      * communication routine*/
8814:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18384              		.loc 1 8814 5 is_stmt 1 view .LVU5219
 18385              	.LVL2336:
8815:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18386              		.loc 1 8815 5 view .LVU5220
 18387              		.loc 1 8815 8 is_stmt 0 view .LVU5221
 18388 0004 0023     		movs	r3, #0
 18389 0006 8DF80730 		strb	r3, [sp, #7]
8816:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18390              		.loc 1 8816 5 is_stmt 1 view .LVU5222
 18391              	.LVL2337:
8817:Core/Src/bno055.c **** 
8818:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8819:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18392              		.loc 1 8819 5 view .LVU5223
 18393              		.loc 1 8819 18 is_stmt 0 view .LVU5224
 18394 000a 134B     		ldr	r3, .L1363
 18395 000c 1B68     		ldr	r3, [r3]
 18396              		.loc 1 8819 8 view .LVU5225
 18397 000e E3B1     		cbz	r3, .L1359
 18398 0010 0446     		mov	r4, r0
8820:Core/Src/bno055.c ****     {
8821:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8822:Core/Src/bno055.c ****     }
8823:Core/Src/bno055.c ****     else
8824:Core/Src/bno055.c ****     {
8825:Core/Src/bno055.c ****         /*condition check for page, reset system is
8826:Core/Src/bno055.c ****          * available in the page zero*/
8827:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18399              		.loc 1 8827 9 is_stmt 1 view .LVU5226
 18400              		.loc 1 8827 21 is_stmt 0 view .LVU5227
 18401 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18402              		.loc 1 8827 12 view .LVU5228
 18403 0014 9BB9     		cbnz	r3, .L1362
 18404              	.LVL2338:
ARM GAS  /tmp/ccOloYeZ.s 			page 527


 18405              	.L1357:
8828:Core/Src/bno055.c ****         {
8829:Core/Src/bno055.c ****             /* Write the page zero*/
8830:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8831:Core/Src/bno055.c ****         }
8832:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18406              		.loc 1 8832 53 discriminator 1 view .LVU5229
 18407 0016 104B     		ldr	r3, .L1363
 18408 0018 1B68     		ldr	r3, [r3]
 18409 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18410              		.loc 1 8832 41 discriminator 1 view .LVU5230
 18411 001c C3B9     		cbnz	r3, .L1360
 18412              	.L1358:
8833:Core/Src/bno055.c ****         {
8834:Core/Src/bno055.c ****             /* Read the value of reset system */
8835:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18413              		.loc 1 8835 13 is_stmt 1 view .LVU5231
 18414              		.loc 1 8835 32 is_stmt 0 view .LVU5232
 18415 001e 0E4B     		ldr	r3, .L1363
 18416 0020 1868     		ldr	r0, [r3]
 18417 0022 0569     		ldr	r5, [r0, #16]
 18418              		.loc 1 8835 24 view .LVU5233
 18419 0024 0123     		movs	r3, #1
 18420 0026 0DF10702 		add	r2, sp, #7
 18421 002a 3F21     		movs	r1, #63
 18422 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18423 002e A847     		blx	r5
 18424              	.LVL2339:
8836:Core/Src/bno055.c ****                                                       BNO055_SYS_RST_REG,
8837:Core/Src/bno055.c ****                                                       &data_u8r,
8838:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8839:Core/Src/bno055.c ****             *sys_rst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_RST);
 18425              		.loc 1 8839 13 is_stmt 1 view .LVU5234
 18426              		.loc 1 8839 27 is_stmt 0 view .LVU5235
 18427 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18428 0034 C3F34013 		ubfx	r3, r3, #5, #1
 18429              		.loc 1 8839 25 view .LVU5236
 18430 0038 2370     		strb	r3, [r4]
 18431              	.LVL2340:
 18432              	.L1356:
8840:Core/Src/bno055.c ****         }
8841:Core/Src/bno055.c ****         else
8842:Core/Src/bno055.c ****         {
8843:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8844:Core/Src/bno055.c ****         }
8845:Core/Src/bno055.c ****     }
8846:Core/Src/bno055.c **** 
8847:Core/Src/bno055.c ****     return com_rslt;
8848:Core/Src/bno055.c **** }
 18433              		.loc 1 8848 1 view .LVU5237
 18434 003a 03B0     		add	sp, sp, #12
 18435              		.cfi_remember_state
 18436              		.cfi_def_cfa_offset 12
 18437              		@ sp needed
 18438 003c 30BD     		pop	{r4, r5, pc}
 18439              	.LVL2341:
 18440              	.L1362:
ARM GAS  /tmp/ccOloYeZ.s 			page 528


 18441              		.cfi_restore_state
8830:Core/Src/bno055.c ****         }
 18442              		.loc 1 8830 13 is_stmt 1 view .LVU5238
8830:Core/Src/bno055.c ****         }
 18443              		.loc 1 8830 23 is_stmt 0 view .LVU5239
 18444 003e 0020     		movs	r0, #0
 18445              	.LVL2342:
8830:Core/Src/bno055.c ****         }
 18446              		.loc 1 8830 23 view .LVU5240
 18447 0040 FFF7FEFF 		bl	bno055_write_page_id
 18448              	.LVL2343:
8832:Core/Src/bno055.c ****         {
 18449              		.loc 1 8832 9 is_stmt 1 view .LVU5241
8832:Core/Src/bno055.c ****         {
 18450              		.loc 1 8832 12 is_stmt 0 view .LVU5242
 18451 0044 0028     		cmp	r0, #0
 18452 0046 EAD0     		beq	.L1358
 18453 0048 E5E7     		b	.L1357
 18454              	.LVL2344:
 18455              	.L1359:
8821:Core/Src/bno055.c ****     }
 18456              		.loc 1 8821 16 view .LVU5243
 18457 004a 6FF07E00 		mvn	r0, #126
 18458              	.LVL2345:
8821:Core/Src/bno055.c ****     }
 18459              		.loc 1 8821 16 view .LVU5244
 18460 004e F4E7     		b	.L1356
 18461              	.LVL2346:
 18462              	.L1360:
8843:Core/Src/bno055.c ****         }
 18463              		.loc 1 8843 22 view .LVU5245
 18464 0050 4FF0FF30 		mov	r0, #-1
 18465 0054 F1E7     		b	.L1356
 18466              	.L1364:
 18467 0056 00BF     		.align	2
 18468              	.L1363:
 18469 0058 00000000 		.word	p_bno055
 18470              		.cfi_endproc
 18471              	.LFE153:
 18473              		.section	.text.bno055_set_sys_rst,"ax",%progbits
 18474              		.align	1
 18475              		.global	bno055_set_sys_rst
 18476              		.syntax unified
 18477              		.thumb
 18478              		.thumb_func
 18480              	bno055_set_sys_rst:
 18481              	.LVL2347:
 18482              	.LFB154:
8849:Core/Src/bno055.c **** 
8850:Core/Src/bno055.c **** /*!
8851:Core/Src/bno055.c ****  *  @brief This API used to write the reset system
8852:Core/Src/bno055.c ****  *  from register from 0x3F bit 5
8853:Core/Src/bno055.c ****  *
8854:Core/Src/bno055.c ****  *  @param sys_rst_u8 : The value of reset system
8855:Core/Src/bno055.c ****  *
8856:Core/Src/bno055.c ****  *   sys_rst_u8   | result
8857:Core/Src/bno055.c ****  *   -------------- |----------
ARM GAS  /tmp/ccOloYeZ.s 			page 529


8858:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8859:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8860:Core/Src/bno055.c ****  *
8861:Core/Src/bno055.c ****  *  @return results of bus communication function
8862:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8863:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8864:Core/Src/bno055.c ****  *
8865:Core/Src/bno055.c ****  *  @note It resets the whole system
8866:Core/Src/bno055.c ****  */
8867:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_sys_rst(u8 sys_rst_u8)
8868:Core/Src/bno055.c **** {
 18483              		.loc 1 8868 1 is_stmt 1 view -0
 18484              		.cfi_startproc
 18485              		@ args = 0, pretend = 0, frame = 8
 18486              		@ frame_needed = 0, uses_anonymous_args = 0
 18487              		.loc 1 8868 1 is_stmt 0 view .LVU5247
 18488 0000 70B5     		push	{r4, r5, r6, lr}
 18489              		.cfi_def_cfa_offset 16
 18490              		.cfi_offset 4, -16
 18491              		.cfi_offset 5, -12
 18492              		.cfi_offset 6, -8
 18493              		.cfi_offset 14, -4
 18494 0002 82B0     		sub	sp, sp, #8
 18495              		.cfi_def_cfa_offset 24
8869:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18496              		.loc 1 8869 5 is_stmt 1 view .LVU5248
 18497              	.LVL2348:
8870:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18498              		.loc 1 8870 5 view .LVU5249
 18499              		.loc 1 8870 8 is_stmt 0 view .LVU5250
 18500 0004 0023     		movs	r3, #0
 18501 0006 8DF80730 		strb	r3, [sp, #7]
8871:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18502              		.loc 1 8871 5 is_stmt 1 view .LVU5251
 18503              	.LVL2349:
8872:Core/Src/bno055.c **** 
8873:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8874:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18504              		.loc 1 8874 5 view .LVU5252
 18505              		.loc 1 8874 18 is_stmt 0 view .LVU5253
 18506 000a 1A4B     		ldr	r3, .L1373
 18507 000c 1B68     		ldr	r3, [r3]
 18508              		.loc 1 8874 8 view .LVU5254
 18509 000e 5BB3     		cbz	r3, .L1369
 18510 0010 0546     		mov	r5, r0
8875:Core/Src/bno055.c ****     {
8876:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8877:Core/Src/bno055.c ****     }
8878:Core/Src/bno055.c ****     else
8879:Core/Src/bno055.c ****     {
8880:Core/Src/bno055.c ****         /*condition check for page, reset system is
8881:Core/Src/bno055.c ****          * available in the page zero*/
8882:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18511              		.loc 1 8882 9 is_stmt 1 view .LVU5255
 18512              		.loc 1 8882 21 is_stmt 0 view .LVU5256
 18513 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18514              		.loc 1 8882 12 view .LVU5257
ARM GAS  /tmp/ccOloYeZ.s 			page 530


 18515 0014 13BB     		cbnz	r3, .L1372
 18516              	.LVL2350:
 18517              	.L1367:
8883:Core/Src/bno055.c ****         {
8884:Core/Src/bno055.c ****             /* Write the page zero*/
8885:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8886:Core/Src/bno055.c ****         }
8887:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18518              		.loc 1 8887 53 discriminator 1 view .LVU5258
 18519 0016 174B     		ldr	r3, .L1373
 18520 0018 1B68     		ldr	r3, [r3]
 18521 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18522              		.loc 1 8887 41 discriminator 1 view .LVU5259
 18523 001c 3BBB     		cbnz	r3, .L1370
 18524              	.L1368:
8888:Core/Src/bno055.c ****         {
8889:Core/Src/bno055.c ****             /* Write the value of reset system */
8890:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18525              		.loc 1 8890 13 is_stmt 1 view .LVU5260
 18526              		.loc 1 8890 32 is_stmt 0 view .LVU5261
 18527 001e 154B     		ldr	r3, .L1373
 18528 0020 1C68     		ldr	r4, [r3]
 18529 0022 2669     		ldr	r6, [r4, #16]
 18530              		.loc 1 8890 24 view .LVU5262
 18531 0024 0123     		movs	r3, #1
 18532 0026 0DF10702 		add	r2, sp, #7
 18533 002a 3F21     		movs	r1, #63
 18534 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 18535 002e B047     		blx	r6
 18536              	.LVL2351:
8891:Core/Src/bno055.c ****                                                       BNO055_SYS_RST_REG,
8892:Core/Src/bno055.c ****                                                       &data_u8r,
8893:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8894:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 18537              		.loc 1 8894 13 is_stmt 1 view .LVU5263
 18538              		.loc 1 8894 16 is_stmt 0 view .LVU5264
 18539 0030 90B9     		cbnz	r0, .L1366
8895:Core/Src/bno055.c ****             {
8896:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_SYS_RST, sys_rst_u8);
 18540              		.loc 1 8896 17 is_stmt 1 view .LVU5265
 18541              		.loc 1 8896 28 is_stmt 0 view .LVU5266
 18542 0032 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18543 0036 6801     		lsls	r0, r5, #5
 18544              	.LVL2352:
 18545              		.loc 1 8896 28 view .LVU5267
 18546 0038 00F02000 		and	r0, r0, #32
 18547 003c 23F02003 		bic	r3, r3, #32
 18548 0040 0343     		orrs	r3, r3, r0
 18549              		.loc 1 8896 26 view .LVU5268
 18550 0042 8DF80730 		strb	r3, [sp, #7]
8897:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18551              		.loc 1 8897 17 is_stmt 1 view .LVU5269
 18552              		.loc 1 8897 36 is_stmt 0 view .LVU5270
 18553 0046 0B4B     		ldr	r3, .L1373
 18554 0048 1868     		ldr	r0, [r3]
 18555 004a C468     		ldr	r4, [r0, #12]
 18556              		.loc 1 8897 28 view .LVU5271
ARM GAS  /tmp/ccOloYeZ.s 			page 531


 18557 004c 0123     		movs	r3, #1
 18558 004e 0DF10702 		add	r2, sp, #7
 18559 0052 3F21     		movs	r1, #63
 18560 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18561 0056 A047     		blx	r4
 18562              	.LVL2353:
 18563              	.L1366:
8898:Core/Src/bno055.c ****                                                            BNO055_SYS_RST_REG,
8899:Core/Src/bno055.c ****                                                            &data_u8r,
8900:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
8901:Core/Src/bno055.c ****             }
8902:Core/Src/bno055.c ****         }
8903:Core/Src/bno055.c ****         else
8904:Core/Src/bno055.c ****         {
8905:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8906:Core/Src/bno055.c ****         }
8907:Core/Src/bno055.c ****     }
8908:Core/Src/bno055.c **** 
8909:Core/Src/bno055.c ****     return com_rslt;
8910:Core/Src/bno055.c **** }
 18564              		.loc 1 8910 1 view .LVU5272
 18565 0058 02B0     		add	sp, sp, #8
 18566              		.cfi_remember_state
 18567              		.cfi_def_cfa_offset 16
 18568              		@ sp needed
 18569 005a 70BD     		pop	{r4, r5, r6, pc}
 18570              	.LVL2354:
 18571              	.L1372:
 18572              		.cfi_restore_state
8885:Core/Src/bno055.c ****         }
 18573              		.loc 1 8885 13 is_stmt 1 view .LVU5273
8885:Core/Src/bno055.c ****         }
 18574              		.loc 1 8885 23 is_stmt 0 view .LVU5274
 18575 005c 0020     		movs	r0, #0
 18576              	.LVL2355:
8885:Core/Src/bno055.c ****         }
 18577              		.loc 1 8885 23 view .LVU5275
 18578 005e FFF7FEFF 		bl	bno055_write_page_id
 18579              	.LVL2356:
8887:Core/Src/bno055.c ****         {
 18580              		.loc 1 8887 9 is_stmt 1 view .LVU5276
8887:Core/Src/bno055.c ****         {
 18581              		.loc 1 8887 12 is_stmt 0 view .LVU5277
 18582 0062 0028     		cmp	r0, #0
 18583 0064 DBD0     		beq	.L1368
 18584 0066 D6E7     		b	.L1367
 18585              	.LVL2357:
 18586              	.L1369:
8876:Core/Src/bno055.c ****     }
 18587              		.loc 1 8876 16 view .LVU5278
 18588 0068 6FF07E00 		mvn	r0, #126
 18589              	.LVL2358:
8876:Core/Src/bno055.c ****     }
 18590              		.loc 1 8876 16 view .LVU5279
 18591 006c F4E7     		b	.L1366
 18592              	.LVL2359:
 18593              	.L1370:
ARM GAS  /tmp/ccOloYeZ.s 			page 532


8905:Core/Src/bno055.c ****         }
 18594              		.loc 1 8905 22 view .LVU5280
 18595 006e 4FF0FF30 		mov	r0, #-1
 18596 0072 F1E7     		b	.L1366
 18597              	.L1374:
 18598              		.align	2
 18599              	.L1373:
 18600 0074 00000000 		.word	p_bno055
 18601              		.cfi_endproc
 18602              	.LFE154:
 18604              		.section	.text.bno055_get_selftest,"ax",%progbits
 18605              		.align	1
 18606              		.global	bno055_get_selftest
 18607              		.syntax unified
 18608              		.thumb
 18609              		.thumb_func
 18611              	bno055_get_selftest:
 18612              	.LVL2360:
 18613              	.LFB155:
8911:Core/Src/bno055.c **** 
8912:Core/Src/bno055.c **** /*!
8913:Core/Src/bno055.c ****  *  @brief This API used to read the self test
8914:Core/Src/bno055.c ****  *  from register from 0x3F bit 0
8915:Core/Src/bno055.c ****  *
8916:Core/Src/bno055.c ****  *  @param selftest_u8 : The value of self test
8917:Core/Src/bno055.c ****  *
8918:Core/Src/bno055.c ****  *   selftest_u8  | result
8919:Core/Src/bno055.c ****  *   -------------- |----------
8920:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8921:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8922:Core/Src/bno055.c ****  *
8923:Core/Src/bno055.c ****  *  @return results of bus communication function
8924:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8925:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8926:Core/Src/bno055.c ****  *
8927:Core/Src/bno055.c ****  *  @note It triggers the self test
8928:Core/Src/bno055.c ****  */
8929:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest(u8 *selftest_u8)
8930:Core/Src/bno055.c **** {
 18614              		.loc 1 8930 1 is_stmt 1 view -0
 18615              		.cfi_startproc
 18616              		@ args = 0, pretend = 0, frame = 8
 18617              		@ frame_needed = 0, uses_anonymous_args = 0
 18618              		.loc 1 8930 1 is_stmt 0 view .LVU5282
 18619 0000 30B5     		push	{r4, r5, lr}
 18620              		.cfi_def_cfa_offset 12
 18621              		.cfi_offset 4, -12
 18622              		.cfi_offset 5, -8
 18623              		.cfi_offset 14, -4
 18624 0002 83B0     		sub	sp, sp, #12
 18625              		.cfi_def_cfa_offset 24
8931:Core/Src/bno055.c ****     /* Variable used to return value of
8932:Core/Src/bno055.c ****      * communication routine*/
8933:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18626              		.loc 1 8933 5 is_stmt 1 view .LVU5283
 18627              	.LVL2361:
8934:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccOloYeZ.s 			page 533


 18628              		.loc 1 8934 5 view .LVU5284
 18629              		.loc 1 8934 8 is_stmt 0 view .LVU5285
 18630 0004 0023     		movs	r3, #0
 18631 0006 8DF80730 		strb	r3, [sp, #7]
8935:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18632              		.loc 1 8935 5 is_stmt 1 view .LVU5286
 18633              	.LVL2362:
8936:Core/Src/bno055.c **** 
8937:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8938:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18634              		.loc 1 8938 5 view .LVU5287
 18635              		.loc 1 8938 18 is_stmt 0 view .LVU5288
 18636 000a 134B     		ldr	r3, .L1383
 18637 000c 1B68     		ldr	r3, [r3]
 18638              		.loc 1 8938 8 view .LVU5289
 18639 000e E3B1     		cbz	r3, .L1379
 18640 0010 0446     		mov	r4, r0
8939:Core/Src/bno055.c ****     {
8940:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8941:Core/Src/bno055.c ****     }
8942:Core/Src/bno055.c ****     else
8943:Core/Src/bno055.c ****     {
8944:Core/Src/bno055.c ****         /*condition check for page, self test is
8945:Core/Src/bno055.c ****          * available in the page zero*/
8946:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18641              		.loc 1 8946 9 is_stmt 1 view .LVU5290
 18642              		.loc 1 8946 21 is_stmt 0 view .LVU5291
 18643 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18644              		.loc 1 8946 12 view .LVU5292
 18645 0014 9BB9     		cbnz	r3, .L1382
 18646              	.LVL2363:
 18647              	.L1377:
8947:Core/Src/bno055.c ****         {
8948:Core/Src/bno055.c ****             /* Write the page zero*/
8949:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8950:Core/Src/bno055.c ****         }
8951:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18648              		.loc 1 8951 53 discriminator 1 view .LVU5293
 18649 0016 104B     		ldr	r3, .L1383
 18650 0018 1B68     		ldr	r3, [r3]
 18651 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18652              		.loc 1 8951 41 discriminator 1 view .LVU5294
 18653 001c C3B9     		cbnz	r3, .L1380
 18654              	.L1378:
8952:Core/Src/bno055.c ****         {
8953:Core/Src/bno055.c ****             /* Read the value of self test */
8954:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18655              		.loc 1 8954 13 is_stmt 1 view .LVU5295
 18656              		.loc 1 8954 32 is_stmt 0 view .LVU5296
 18657 001e 0E4B     		ldr	r3, .L1383
 18658 0020 1868     		ldr	r0, [r3]
 18659 0022 0569     		ldr	r5, [r0, #16]
 18660              		.loc 1 8954 24 view .LVU5297
 18661 0024 0123     		movs	r3, #1
 18662 0026 0DF10702 		add	r2, sp, #7
 18663 002a 3F21     		movs	r1, #63
 18664 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccOloYeZ.s 			page 534


 18665 002e A847     		blx	r5
 18666              	.LVL2364:
8955:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_REG,
8956:Core/Src/bno055.c ****                                                       &data_u8r,
8957:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8958:Core/Src/bno055.c ****             *selftest_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST);
 18667              		.loc 1 8958 13 is_stmt 1 view .LVU5298
 18668              		.loc 1 8958 28 is_stmt 0 view .LVU5299
 18669 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18670 0034 03F00103 		and	r3, r3, #1
 18671              		.loc 1 8958 26 view .LVU5300
 18672 0038 2370     		strb	r3, [r4]
 18673              	.LVL2365:
 18674              	.L1376:
8959:Core/Src/bno055.c ****         }
8960:Core/Src/bno055.c ****         else
8961:Core/Src/bno055.c ****         {
8962:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8963:Core/Src/bno055.c ****         }
8964:Core/Src/bno055.c ****     }
8965:Core/Src/bno055.c **** 
8966:Core/Src/bno055.c ****     return com_rslt;
8967:Core/Src/bno055.c **** }
 18675              		.loc 1 8967 1 view .LVU5301
 18676 003a 03B0     		add	sp, sp, #12
 18677              		.cfi_remember_state
 18678              		.cfi_def_cfa_offset 12
 18679              		@ sp needed
 18680 003c 30BD     		pop	{r4, r5, pc}
 18681              	.LVL2366:
 18682              	.L1382:
 18683              		.cfi_restore_state
8949:Core/Src/bno055.c ****         }
 18684              		.loc 1 8949 13 is_stmt 1 view .LVU5302
8949:Core/Src/bno055.c ****         }
 18685              		.loc 1 8949 23 is_stmt 0 view .LVU5303
 18686 003e 0020     		movs	r0, #0
 18687              	.LVL2367:
8949:Core/Src/bno055.c ****         }
 18688              		.loc 1 8949 23 view .LVU5304
 18689 0040 FFF7FEFF 		bl	bno055_write_page_id
 18690              	.LVL2368:
8951:Core/Src/bno055.c ****         {
 18691              		.loc 1 8951 9 is_stmt 1 view .LVU5305
8951:Core/Src/bno055.c ****         {
 18692              		.loc 1 8951 12 is_stmt 0 view .LVU5306
 18693 0044 0028     		cmp	r0, #0
 18694 0046 EAD0     		beq	.L1378
 18695 0048 E5E7     		b	.L1377
 18696              	.LVL2369:
 18697              	.L1379:
8940:Core/Src/bno055.c ****     }
 18698              		.loc 1 8940 16 view .LVU5307
 18699 004a 6FF07E00 		mvn	r0, #126
 18700              	.LVL2370:
8940:Core/Src/bno055.c ****     }
 18701              		.loc 1 8940 16 view .LVU5308
ARM GAS  /tmp/ccOloYeZ.s 			page 535


 18702 004e F4E7     		b	.L1376
 18703              	.LVL2371:
 18704              	.L1380:
8962:Core/Src/bno055.c ****         }
 18705              		.loc 1 8962 22 view .LVU5309
 18706 0050 4FF0FF30 		mov	r0, #-1
 18707 0054 F1E7     		b	.L1376
 18708              	.L1384:
 18709 0056 00BF     		.align	2
 18710              	.L1383:
 18711 0058 00000000 		.word	p_bno055
 18712              		.cfi_endproc
 18713              	.LFE155:
 18715              		.section	.text.bno055_set_selftest,"ax",%progbits
 18716              		.align	1
 18717              		.global	bno055_set_selftest
 18718              		.syntax unified
 18719              		.thumb
 18720              		.thumb_func
 18722              	bno055_set_selftest:
 18723              	.LVL2372:
 18724              	.LFB156:
8968:Core/Src/bno055.c **** 
8969:Core/Src/bno055.c **** /*!
8970:Core/Src/bno055.c ****  *  @brief This API used to write the self test
8971:Core/Src/bno055.c ****  *  from register from 0x3F bit 0
8972:Core/Src/bno055.c ****  *
8973:Core/Src/bno055.c ****  *  @param selftest_u8 : The value of self test
8974:Core/Src/bno055.c ****  *
8975:Core/Src/bno055.c ****  *   selftest_u8  | result
8976:Core/Src/bno055.c ****  *   -------------- |----------
8977:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8978:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8979:Core/Src/bno055.c ****  *
8980:Core/Src/bno055.c ****  *  @return results of bus communication function
8981:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8982:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8983:Core/Src/bno055.c ****  *
8984:Core/Src/bno055.c ****  *  @note It triggers the self test
8985:Core/Src/bno055.c ****  *
8986:Core/Src/bno055.c ****  *
8987:Core/Src/bno055.c ****  */
8988:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_selftest(u8 selftest_u8)
8989:Core/Src/bno055.c **** {
 18725              		.loc 1 8989 1 is_stmt 1 view -0
 18726              		.cfi_startproc
 18727              		@ args = 0, pretend = 0, frame = 8
 18728              		@ frame_needed = 0, uses_anonymous_args = 0
 18729              		.loc 1 8989 1 is_stmt 0 view .LVU5311
 18730 0000 30B5     		push	{r4, r5, lr}
 18731              		.cfi_def_cfa_offset 12
 18732              		.cfi_offset 4, -12
 18733              		.cfi_offset 5, -8
 18734              		.cfi_offset 14, -4
 18735 0002 83B0     		sub	sp, sp, #12
 18736              		.cfi_def_cfa_offset 24
8990:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccOloYeZ.s 			page 536


 18737              		.loc 1 8990 5 is_stmt 1 view .LVU5312
 18738              	.LVL2373:
8991:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18739              		.loc 1 8991 5 view .LVU5313
 18740              		.loc 1 8991 8 is_stmt 0 view .LVU5314
 18741 0004 0023     		movs	r3, #0
 18742 0006 8DF80730 		strb	r3, [sp, #7]
8992:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 18743              		.loc 1 8992 5 is_stmt 1 view .LVU5315
 18744              		.loc 1 8992 8 is_stmt 0 view .LVU5316
 18745 000a 8DF80630 		strb	r3, [sp, #6]
8993:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18746              		.loc 1 8993 5 is_stmt 1 view .LVU5317
 18747              	.LVL2374:
8994:Core/Src/bno055.c **** 
8995:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8996:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18748              		.loc 1 8996 5 view .LVU5318
 18749              		.loc 1 8996 18 is_stmt 0 view .LVU5319
 18750 000e 254B     		ldr	r3, .L1395
 18751 0010 1B68     		ldr	r3, [r3]
 18752              		.loc 1 8996 8 view .LVU5320
 18753 0012 002B     		cmp	r3, #0
 18754 0014 42D0     		beq	.L1389
 18755 0016 0546     		mov	r5, r0
8997:Core/Src/bno055.c ****     {
8998:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8999:Core/Src/bno055.c ****     }
9000:Core/Src/bno055.c ****     else
9001:Core/Src/bno055.c ****     {
9002:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9003:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9004:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9005:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 18756              		.loc 1 9005 9 is_stmt 1 view .LVU5321
 18757              		.loc 1 9005 19 is_stmt 0 view .LVU5322
 18758 0018 0DF10600 		add	r0, sp, #6
 18759              	.LVL2375:
 18760              		.loc 1 9005 19 view .LVU5323
 18761 001c FFF7FEFF 		bl	bno055_get_operation_mode
 18762              	.LVL2376:
9006:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 18763              		.loc 1 9006 9 is_stmt 1 view .LVU5324
 18764              		.loc 1 9006 12 is_stmt 0 view .LVU5325
 18765 0020 0446     		mov	r4, r0
 18766 0022 50BB     		cbnz	r0, .L1390
9007:Core/Src/bno055.c ****         {
9008:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 18767              		.loc 1 9008 13 is_stmt 1 view .LVU5326
 18768              		.loc 1 9008 32 is_stmt 0 view .LVU5327
 18769 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 18770              		.loc 1 9008 16 view .LVU5328
 18771 0028 0BBB     		cbnz	r3, .L1393
 18772              	.LVL2377:
 18773              	.L1388:
9009:Core/Src/bno055.c ****             {
9010:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
ARM GAS  /tmp/ccOloYeZ.s 			page 537


9011:Core/Src/bno055.c ****             }
9012:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 18774              		.loc 1 9012 13 is_stmt 1 view .LVU5329
 18775              		.loc 1 9012 16 is_stmt 0 view .LVU5330
 18776 002a 74BB     		cbnz	r4, .L1391
9013:Core/Src/bno055.c ****             {
9014:Core/Src/bno055.c ****                 /* Write the value of self test */
9015:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18777              		.loc 1 9015 17 is_stmt 1 view .LVU5331
 18778              		.loc 1 9015 36 is_stmt 0 view .LVU5332
 18779 002c 1D4B     		ldr	r3, .L1395
 18780 002e 1868     		ldr	r0, [r3]
 18781 0030 0469     		ldr	r4, [r0, #16]
 18782              	.LVL2378:
 18783              		.loc 1 9015 28 view .LVU5333
 18784 0032 0123     		movs	r3, #1
 18785 0034 0DF10702 		add	r2, sp, #7
 18786 0038 3F21     		movs	r1, #63
 18787 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18788 003c A047     		blx	r4
 18789              	.LVL2379:
9016:Core/Src/bno055.c ****                                                           BNO055_SELFTEST_REG,
9017:Core/Src/bno055.c ****                                                           &data_u8r,
9018:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9019:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 18790              		.loc 1 9019 17 is_stmt 1 view .LVU5334
 18791              		.loc 1 9019 20 is_stmt 0 view .LVU5335
 18792 003e 0446     		mov	r4, r0
 18793 0040 E8B9     		cbnz	r0, .L1387
9020:Core/Src/bno055.c ****                 {
9021:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_SELFTEST, selftest_u8);
 18794              		.loc 1 9021 21 is_stmt 1 view .LVU5336
 18795              		.loc 1 9021 32 is_stmt 0 view .LVU5337
 18796 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18797              		.loc 1 9021 30 view .LVU5338
 18798 0046 23F00103 		bic	r3, r3, #1
 18799 004a 05F00100 		and	r0, r5, #1
 18800              	.LVL2380:
 18801              		.loc 1 9021 30 view .LVU5339
 18802 004e 0343     		orrs	r3, r3, r0
 18803 0050 8DF80730 		strb	r3, [sp, #7]
9022:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18804              		.loc 1 9022 21 is_stmt 1 view .LVU5340
 18805              		.loc 1 9022 41 is_stmt 0 view .LVU5341
 18806 0054 134B     		ldr	r3, .L1395
 18807 0056 1868     		ldr	r0, [r3]
 18808 0058 C568     		ldr	r5, [r0, #12]
 18809              		.loc 1 9022 33 view .LVU5342
 18810 005a 0123     		movs	r3, #1
 18811 005c 0DF10702 		add	r2, sp, #7
 18812 0060 3F21     		movs	r1, #63
 18813 0062 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18814 0064 A847     		blx	r5
 18815              	.LVL2381:
 18816              		.loc 1 9022 30 view .LVU5343
 18817 0066 54FA80F0 		uxtab	r0, r4, r0
 18818 006a 44B2     		sxtb	r4, r0
ARM GAS  /tmp/ccOloYeZ.s 			page 538


 18819              	.LVL2382:
 18820              		.loc 1 9022 30 view .LVU5344
 18821 006c 07E0     		b	.L1387
 18822              	.LVL2383:
 18823              	.L1393:
9010:Core/Src/bno055.c ****             }
 18824              		.loc 1 9010 17 is_stmt 1 view .LVU5345
9010:Core/Src/bno055.c ****             }
 18825              		.loc 1 9010 28 is_stmt 0 view .LVU5346
 18826 006e FFF7FEFF 		bl	bno055_set_operation_mode
 18827              	.LVL2384:
9010:Core/Src/bno055.c ****             }
 18828              		.loc 1 9010 25 view .LVU5347
 18829 0072 54FA80F4 		uxtab	r4, r4, r0
 18830 0076 64B2     		sxtb	r4, r4
 18831              	.LVL2385:
9010:Core/Src/bno055.c ****             }
 18832              		.loc 1 9010 25 view .LVU5348
 18833 0078 D7E7     		b	.L1388
 18834              	.LVL2386:
 18835              	.L1390:
9023:Core/Src/bno055.c ****                                                                 BNO055_SELFTEST_REG,
9024:Core/Src/bno055.c ****                                                                 &data_u8r,
9025:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9026:Core/Src/bno055.c ****                 }
9027:Core/Src/bno055.c ****             }
9028:Core/Src/bno055.c ****             else
9029:Core/Src/bno055.c ****             {
9030:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9031:Core/Src/bno055.c ****             }
9032:Core/Src/bno055.c ****         }
9033:Core/Src/bno055.c ****         else
9034:Core/Src/bno055.c ****         {
9035:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 18836              		.loc 1 9035 22 view .LVU5349
 18837 007a 4FF0FF34 		mov	r4, #-1
 18838              	.LVL2387:
 18839              	.L1387:
9036:Core/Src/bno055.c ****         }
9037:Core/Src/bno055.c ****     }
9038:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 18840              		.loc 1 9038 5 is_stmt 1 view .LVU5350
 18841              		.loc 1 9038 24 is_stmt 0 view .LVU5351
 18842 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 18843              		.loc 1 9038 8 view .LVU5352
 18844 0082 28B9     		cbnz	r0, .L1394
 18845              	.LVL2388:
 18846              	.L1386:
9039:Core/Src/bno055.c ****     {
9040:Core/Src/bno055.c ****         /* set the operation mode
9041:Core/Src/bno055.c ****          * of previous operation mode*/
9042:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9043:Core/Src/bno055.c ****     }
9044:Core/Src/bno055.c **** 
9045:Core/Src/bno055.c ****     return com_rslt;
9046:Core/Src/bno055.c **** }
 18847              		.loc 1 9046 1 view .LVU5353
ARM GAS  /tmp/ccOloYeZ.s 			page 539


 18848 0084 2046     		mov	r0, r4
 18849 0086 03B0     		add	sp, sp, #12
 18850              		.cfi_remember_state
 18851              		.cfi_def_cfa_offset 12
 18852              		@ sp needed
 18853 0088 30BD     		pop	{r4, r5, pc}
 18854              	.LVL2389:
 18855              	.L1391:
 18856              		.cfi_restore_state
9030:Core/Src/bno055.c ****             }
 18857              		.loc 1 9030 26 view .LVU5354
 18858 008a 4FF0FF34 		mov	r4, #-1
 18859              	.LVL2390:
9030:Core/Src/bno055.c ****             }
 18860              		.loc 1 9030 26 view .LVU5355
 18861 008e F6E7     		b	.L1387
 18862              	.LVL2391:
 18863              	.L1394:
9042:Core/Src/bno055.c ****     }
 18864              		.loc 1 9042 9 is_stmt 1 view .LVU5356
9042:Core/Src/bno055.c ****     }
 18865              		.loc 1 9042 21 is_stmt 0 view .LVU5357
 18866 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 18867              	.LVL2392:
9042:Core/Src/bno055.c ****     }
 18868              		.loc 1 9042 18 view .LVU5358
 18869 0094 54FA80F0 		uxtab	r0, r4, r0
 18870 0098 44B2     		sxtb	r4, r0
 18871              	.LVL2393:
9042:Core/Src/bno055.c ****     }
 18872              		.loc 1 9042 18 view .LVU5359
 18873 009a F3E7     		b	.L1386
 18874              	.LVL2394:
 18875              	.L1389:
8998:Core/Src/bno055.c ****     }
 18876              		.loc 1 8998 16 view .LVU5360
 18877 009c 6FF07E04 		mvn	r4, #126
 18878 00a0 F0E7     		b	.L1386
 18879              	.L1396:
 18880 00a2 00BF     		.align	2
 18881              	.L1395:
 18882 00a4 00000000 		.word	p_bno055
 18883              		.cfi_endproc
 18884              	.LFE156:
 18886              		.section	.text.bno055_get_temp_source,"ax",%progbits
 18887              		.align	1
 18888              		.global	bno055_get_temp_source
 18889              		.syntax unified
 18890              		.thumb
 18891              		.thumb_func
 18893              	bno055_get_temp_source:
 18894              	.LVL2395:
 18895              	.LFB157:
9047:Core/Src/bno055.c **** 
9048:Core/Src/bno055.c **** /*!
9049:Core/Src/bno055.c ****  *  @brief This API used to read the temperature source
9050:Core/Src/bno055.c ****  *  from register from 0x40 bit 0 and 1
ARM GAS  /tmp/ccOloYeZ.s 			page 540


9051:Core/Src/bno055.c ****  *
9052:Core/Src/bno055.c ****  *  @param temp_source_u8 : The value of selected temperature source
9053:Core/Src/bno055.c ****  *
9054:Core/Src/bno055.c ****  *     temp_source_u8 | result
9055:Core/Src/bno055.c ****  *    ----------------  |---------------
9056:Core/Src/bno055.c ****  *      0x00            | BNO055_ACCEL_TEMP_EN
9057:Core/Src/bno055.c ****  *      0X01            | BNO055_GYRO_TEMP_EN
9058:Core/Src/bno055.c ****  *      0X03            | BNO055_MCU_TEMP_EN
9059:Core/Src/bno055.c ****  *
9060:Core/Src/bno055.c ****  *  @return results of bus communication function
9061:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9062:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9063:Core/Src/bno055.c ****  *
9064:Core/Src/bno055.c ****  */
9065:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_temp_source(u8 *temp_source_u8)
9066:Core/Src/bno055.c **** {
 18896              		.loc 1 9066 1 is_stmt 1 view -0
 18897              		.cfi_startproc
 18898              		@ args = 0, pretend = 0, frame = 8
 18899              		@ frame_needed = 0, uses_anonymous_args = 0
 18900              		.loc 1 9066 1 is_stmt 0 view .LVU5362
 18901 0000 30B5     		push	{r4, r5, lr}
 18902              		.cfi_def_cfa_offset 12
 18903              		.cfi_offset 4, -12
 18904              		.cfi_offset 5, -8
 18905              		.cfi_offset 14, -4
 18906 0002 83B0     		sub	sp, sp, #12
 18907              		.cfi_def_cfa_offset 24
9067:Core/Src/bno055.c ****     /* Variable used to return value of
9068:Core/Src/bno055.c ****      * communication routine*/
9069:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18908              		.loc 1 9069 5 is_stmt 1 view .LVU5363
 18909              	.LVL2396:
9070:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18910              		.loc 1 9070 5 view .LVU5364
 18911              		.loc 1 9070 8 is_stmt 0 view .LVU5365
 18912 0004 0023     		movs	r3, #0
 18913 0006 8DF80730 		strb	r3, [sp, #7]
9071:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18914              		.loc 1 9071 5 is_stmt 1 view .LVU5366
 18915              	.LVL2397:
9072:Core/Src/bno055.c **** 
9073:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9074:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18916              		.loc 1 9074 5 view .LVU5367
 18917              		.loc 1 9074 18 is_stmt 0 view .LVU5368
 18918 000a 134B     		ldr	r3, .L1405
 18919 000c 1B68     		ldr	r3, [r3]
 18920              		.loc 1 9074 8 view .LVU5369
 18921 000e E3B1     		cbz	r3, .L1401
 18922 0010 0446     		mov	r4, r0
9075:Core/Src/bno055.c ****     {
9076:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9077:Core/Src/bno055.c ****     }
9078:Core/Src/bno055.c ****     else
9079:Core/Src/bno055.c ****     {
9080:Core/Src/bno055.c ****         /*condition check for page, temperature source is
ARM GAS  /tmp/ccOloYeZ.s 			page 541


9081:Core/Src/bno055.c ****          * available in the page zero*/
9082:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18923              		.loc 1 9082 9 is_stmt 1 view .LVU5370
 18924              		.loc 1 9082 21 is_stmt 0 view .LVU5371
 18925 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18926              		.loc 1 9082 12 view .LVU5372
 18927 0014 9BB9     		cbnz	r3, .L1404
 18928              	.LVL2398:
 18929              	.L1399:
9083:Core/Src/bno055.c ****         {
9084:Core/Src/bno055.c ****             /* Write the page zero*/
9085:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9086:Core/Src/bno055.c ****         }
9087:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18930              		.loc 1 9087 53 discriminator 1 view .LVU5373
 18931 0016 104B     		ldr	r3, .L1405
 18932 0018 1B68     		ldr	r3, [r3]
 18933 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18934              		.loc 1 9087 41 discriminator 1 view .LVU5374
 18935 001c C3B9     		cbnz	r3, .L1402
 18936              	.L1400:
9088:Core/Src/bno055.c ****         {
9089:Core/Src/bno055.c ****             /* Read the value of temperature source */
9090:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18937              		.loc 1 9090 13 is_stmt 1 view .LVU5375
 18938              		.loc 1 9090 32 is_stmt 0 view .LVU5376
 18939 001e 0E4B     		ldr	r3, .L1405
 18940 0020 1868     		ldr	r0, [r3]
 18941 0022 0569     		ldr	r5, [r0, #16]
 18942              		.loc 1 9090 24 view .LVU5377
 18943 0024 0123     		movs	r3, #1
 18944 0026 0DF10702 		add	r2, sp, #7
 18945 002a 4021     		movs	r1, #64
 18946 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18947 002e A847     		blx	r5
 18948              	.LVL2399:
9091:Core/Src/bno055.c ****                                                       BNO055_TEMP_SOURCE_REG,
9092:Core/Src/bno055.c ****                                                       &data_u8r,
9093:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
9094:Core/Src/bno055.c ****             *temp_source_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_TEMP_SOURCE);
 18949              		.loc 1 9094 13 is_stmt 1 view .LVU5378
 18950              		.loc 1 9094 31 is_stmt 0 view .LVU5379
 18951 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18952 0034 03F00303 		and	r3, r3, #3
 18953              		.loc 1 9094 29 view .LVU5380
 18954 0038 2370     		strb	r3, [r4]
 18955              	.LVL2400:
 18956              	.L1398:
9095:Core/Src/bno055.c ****         }
9096:Core/Src/bno055.c ****         else
9097:Core/Src/bno055.c ****         {
9098:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9099:Core/Src/bno055.c ****         }
9100:Core/Src/bno055.c ****     }
9101:Core/Src/bno055.c **** 
9102:Core/Src/bno055.c ****     return com_rslt;
9103:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccOloYeZ.s 			page 542


 18957              		.loc 1 9103 1 view .LVU5381
 18958 003a 03B0     		add	sp, sp, #12
 18959              		.cfi_remember_state
 18960              		.cfi_def_cfa_offset 12
 18961              		@ sp needed
 18962 003c 30BD     		pop	{r4, r5, pc}
 18963              	.LVL2401:
 18964              	.L1404:
 18965              		.cfi_restore_state
9085:Core/Src/bno055.c ****         }
 18966              		.loc 1 9085 13 is_stmt 1 view .LVU5382
9085:Core/Src/bno055.c ****         }
 18967              		.loc 1 9085 23 is_stmt 0 view .LVU5383
 18968 003e 0020     		movs	r0, #0
 18969              	.LVL2402:
9085:Core/Src/bno055.c ****         }
 18970              		.loc 1 9085 23 view .LVU5384
 18971 0040 FFF7FEFF 		bl	bno055_write_page_id
 18972              	.LVL2403:
9087:Core/Src/bno055.c ****         {
 18973              		.loc 1 9087 9 is_stmt 1 view .LVU5385
9087:Core/Src/bno055.c ****         {
 18974              		.loc 1 9087 12 is_stmt 0 view .LVU5386
 18975 0044 0028     		cmp	r0, #0
 18976 0046 EAD0     		beq	.L1400
 18977 0048 E5E7     		b	.L1399
 18978              	.LVL2404:
 18979              	.L1401:
9076:Core/Src/bno055.c ****     }
 18980              		.loc 1 9076 16 view .LVU5387
 18981 004a 6FF07E00 		mvn	r0, #126
 18982              	.LVL2405:
9076:Core/Src/bno055.c ****     }
 18983              		.loc 1 9076 16 view .LVU5388
 18984 004e F4E7     		b	.L1398
 18985              	.LVL2406:
 18986              	.L1402:
9098:Core/Src/bno055.c ****         }
 18987              		.loc 1 9098 22 view .LVU5389
 18988 0050 4FF0FF30 		mov	r0, #-1
 18989 0054 F1E7     		b	.L1398
 18990              	.L1406:
 18991 0056 00BF     		.align	2
 18992              	.L1405:
 18993 0058 00000000 		.word	p_bno055
 18994              		.cfi_endproc
 18995              	.LFE157:
 18997              		.section	.text.bno055_set_temp_source,"ax",%progbits
 18998              		.align	1
 18999              		.global	bno055_set_temp_source
 19000              		.syntax unified
 19001              		.thumb
 19002              		.thumb_func
 19004              	bno055_set_temp_source:
 19005              	.LVL2407:
 19006              	.LFB158:
9104:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 543


9105:Core/Src/bno055.c **** /*!
9106:Core/Src/bno055.c ****  *  @brief This API used to write the temperature source
9107:Core/Src/bno055.c ****  *  from register from 0x40 bit 0 and 1
9108:Core/Src/bno055.c ****  *
9109:Core/Src/bno055.c ****  *  @param temp_source_u8 : The value of selected temperature source
9110:Core/Src/bno055.c ****  *
9111:Core/Src/bno055.c ****  *     temp_source_u8 | result
9112:Core/Src/bno055.c ****  *    ----------------  |---------------
9113:Core/Src/bno055.c ****  *      0x00            | BNO055_ACCEL_TEMP_EN
9114:Core/Src/bno055.c ****  *      0X01            | BNO055_GYRO_TEMP_EN
9115:Core/Src/bno055.c ****  *      0X03            | BNO055_MCU_TEMP_EN
9116:Core/Src/bno055.c ****  *
9117:Core/Src/bno055.c ****  *  @return results of bus communication function
9118:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9119:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9120:Core/Src/bno055.c ****  *
9121:Core/Src/bno055.c ****  */
9122:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_temp_source(u8 temp_source_u8)
9123:Core/Src/bno055.c **** {
 19007              		.loc 1 9123 1 is_stmt 1 view -0
 19008              		.cfi_startproc
 19009              		@ args = 0, pretend = 0, frame = 8
 19010              		@ frame_needed = 0, uses_anonymous_args = 0
 19011              		.loc 1 9123 1 is_stmt 0 view .LVU5391
 19012 0000 30B5     		push	{r4, r5, lr}
 19013              		.cfi_def_cfa_offset 12
 19014              		.cfi_offset 4, -12
 19015              		.cfi_offset 5, -8
 19016              		.cfi_offset 14, -4
 19017 0002 83B0     		sub	sp, sp, #12
 19018              		.cfi_def_cfa_offset 24
9124:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19019              		.loc 1 9124 5 is_stmt 1 view .LVU5392
 19020              	.LVL2408:
9125:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19021              		.loc 1 9125 5 view .LVU5393
 19022              		.loc 1 9125 8 is_stmt 0 view .LVU5394
 19023 0004 0023     		movs	r3, #0
 19024 0006 8DF80730 		strb	r3, [sp, #7]
9126:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 19025              		.loc 1 9126 5 is_stmt 1 view .LVU5395
 19026              		.loc 1 9126 8 is_stmt 0 view .LVU5396
 19027 000a 8DF80630 		strb	r3, [sp, #6]
9127:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19028              		.loc 1 9127 5 is_stmt 1 view .LVU5397
 19029              	.LVL2409:
9128:Core/Src/bno055.c **** 
9129:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9130:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19030              		.loc 1 9130 5 view .LVU5398
 19031              		.loc 1 9130 18 is_stmt 0 view .LVU5399
 19032 000e 254B     		ldr	r3, .L1417
 19033 0010 1B68     		ldr	r3, [r3]
 19034              		.loc 1 9130 8 view .LVU5400
 19035 0012 002B     		cmp	r3, #0
 19036 0014 42D0     		beq	.L1411
 19037 0016 0546     		mov	r5, r0
ARM GAS  /tmp/ccOloYeZ.s 			page 544


9131:Core/Src/bno055.c ****     {
9132:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9133:Core/Src/bno055.c ****     }
9134:Core/Src/bno055.c ****     else
9135:Core/Src/bno055.c ****     {
9136:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9137:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9138:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9139:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 19038              		.loc 1 9139 9 is_stmt 1 view .LVU5401
 19039              		.loc 1 9139 19 is_stmt 0 view .LVU5402
 19040 0018 0DF10600 		add	r0, sp, #6
 19041              	.LVL2410:
 19042              		.loc 1 9139 19 view .LVU5403
 19043 001c FFF7FEFF 		bl	bno055_get_operation_mode
 19044              	.LVL2411:
9140:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 19045              		.loc 1 9140 9 is_stmt 1 view .LVU5404
 19046              		.loc 1 9140 12 is_stmt 0 view .LVU5405
 19047 0020 0446     		mov	r4, r0
 19048 0022 50BB     		cbnz	r0, .L1412
9141:Core/Src/bno055.c ****         {
9142:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19049              		.loc 1 9142 13 is_stmt 1 view .LVU5406
 19050              		.loc 1 9142 32 is_stmt 0 view .LVU5407
 19051 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 19052              		.loc 1 9142 16 view .LVU5408
 19053 0028 0BBB     		cbnz	r3, .L1415
 19054              	.LVL2412:
 19055              	.L1410:
9143:Core/Src/bno055.c ****             {
9144:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9145:Core/Src/bno055.c ****             }
9146:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 19056              		.loc 1 9146 13 is_stmt 1 view .LVU5409
 19057              		.loc 1 9146 16 is_stmt 0 view .LVU5410
 19058 002a 74BB     		cbnz	r4, .L1413
9147:Core/Src/bno055.c ****             {
9148:Core/Src/bno055.c ****                 /* Write the value of temperature source*/
9149:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19059              		.loc 1 9149 17 is_stmt 1 view .LVU5411
 19060              		.loc 1 9149 36 is_stmt 0 view .LVU5412
 19061 002c 1D4B     		ldr	r3, .L1417
 19062 002e 1868     		ldr	r0, [r3]
 19063 0030 0469     		ldr	r4, [r0, #16]
 19064              	.LVL2413:
 19065              		.loc 1 9149 28 view .LVU5413
 19066 0032 0123     		movs	r3, #1
 19067 0034 0DF10702 		add	r2, sp, #7
 19068 0038 4021     		movs	r1, #64
 19069 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19070 003c A047     		blx	r4
 19071              	.LVL2414:
9150:Core/Src/bno055.c ****                                                           BNO055_TEMP_SOURCE_REG,
9151:Core/Src/bno055.c ****                                                           &data_u8r,
9152:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9153:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/ccOloYeZ.s 			page 545


 19072              		.loc 1 9153 17 is_stmt 1 view .LVU5414
 19073              		.loc 1 9153 20 is_stmt 0 view .LVU5415
 19074 003e 0446     		mov	r4, r0
 19075 0040 E8B9     		cbnz	r0, .L1409
9154:Core/Src/bno055.c ****                 {
9155:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_TEMP_SOURCE, temp_source_u8);
 19076              		.loc 1 9155 21 is_stmt 1 view .LVU5416
 19077              		.loc 1 9155 32 is_stmt 0 view .LVU5417
 19078 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19079              		.loc 1 9155 30 view .LVU5418
 19080 0046 23F00303 		bic	r3, r3, #3
 19081 004a 05F00300 		and	r0, r5, #3
 19082              	.LVL2415:
 19083              		.loc 1 9155 30 view .LVU5419
 19084 004e 0343     		orrs	r3, r3, r0
 19085 0050 8DF80730 		strb	r3, [sp, #7]
9156:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 19086              		.loc 1 9156 21 is_stmt 1 view .LVU5420
 19087              		.loc 1 9156 41 is_stmt 0 view .LVU5421
 19088 0054 134B     		ldr	r3, .L1417
 19089 0056 1868     		ldr	r0, [r3]
 19090 0058 C568     		ldr	r5, [r0, #12]
 19091              		.loc 1 9156 33 view .LVU5422
 19092 005a 0123     		movs	r3, #1
 19093 005c 0DF10702 		add	r2, sp, #7
 19094 0060 4021     		movs	r1, #64
 19095 0062 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19096 0064 A847     		blx	r5
 19097              	.LVL2416:
 19098              		.loc 1 9156 30 view .LVU5423
 19099 0066 54FA80F0 		uxtab	r0, r4, r0
 19100 006a 44B2     		sxtb	r4, r0
 19101              	.LVL2417:
 19102              		.loc 1 9156 30 view .LVU5424
 19103 006c 07E0     		b	.L1409
 19104              	.LVL2418:
 19105              	.L1415:
9144:Core/Src/bno055.c ****             }
 19106              		.loc 1 9144 17 is_stmt 1 view .LVU5425
9144:Core/Src/bno055.c ****             }
 19107              		.loc 1 9144 28 is_stmt 0 view .LVU5426
 19108 006e FFF7FEFF 		bl	bno055_set_operation_mode
 19109              	.LVL2419:
9144:Core/Src/bno055.c ****             }
 19110              		.loc 1 9144 25 view .LVU5427
 19111 0072 54FA80F4 		uxtab	r4, r4, r0
 19112 0076 64B2     		sxtb	r4, r4
 19113              	.LVL2420:
9144:Core/Src/bno055.c ****             }
 19114              		.loc 1 9144 25 view .LVU5428
 19115 0078 D7E7     		b	.L1410
 19116              	.LVL2421:
 19117              	.L1412:
9157:Core/Src/bno055.c ****                                                                 BNO055_TEMP_SOURCE_REG,
9158:Core/Src/bno055.c ****                                                                 &data_u8r,
9159:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9160:Core/Src/bno055.c ****                 }
ARM GAS  /tmp/ccOloYeZ.s 			page 546


9161:Core/Src/bno055.c ****             }
9162:Core/Src/bno055.c ****             else
9163:Core/Src/bno055.c ****             {
9164:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9165:Core/Src/bno055.c ****             }
9166:Core/Src/bno055.c ****         }
9167:Core/Src/bno055.c ****         else
9168:Core/Src/bno055.c ****         {
9169:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 19118              		.loc 1 9169 22 view .LVU5429
 19119 007a 4FF0FF34 		mov	r4, #-1
 19120              	.LVL2422:
 19121              	.L1409:
9170:Core/Src/bno055.c ****         }
9171:Core/Src/bno055.c ****     }
9172:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19122              		.loc 1 9172 5 is_stmt 1 view .LVU5430
 19123              		.loc 1 9172 24 is_stmt 0 view .LVU5431
 19124 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 19125              		.loc 1 9172 8 view .LVU5432
 19126 0082 28B9     		cbnz	r0, .L1416
 19127              	.LVL2423:
 19128              	.L1408:
9173:Core/Src/bno055.c ****     {
9174:Core/Src/bno055.c ****         /* set the operation mode
9175:Core/Src/bno055.c ****          * of previous operation mode*/
9176:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9177:Core/Src/bno055.c ****     }
9178:Core/Src/bno055.c **** 
9179:Core/Src/bno055.c ****     return com_rslt;
9180:Core/Src/bno055.c **** }
 19129              		.loc 1 9180 1 view .LVU5433
 19130 0084 2046     		mov	r0, r4
 19131 0086 03B0     		add	sp, sp, #12
 19132              		.cfi_remember_state
 19133              		.cfi_def_cfa_offset 12
 19134              		@ sp needed
 19135 0088 30BD     		pop	{r4, r5, pc}
 19136              	.LVL2424:
 19137              	.L1413:
 19138              		.cfi_restore_state
9164:Core/Src/bno055.c ****             }
 19139              		.loc 1 9164 26 view .LVU5434
 19140 008a 4FF0FF34 		mov	r4, #-1
 19141              	.LVL2425:
9164:Core/Src/bno055.c ****             }
 19142              		.loc 1 9164 26 view .LVU5435
 19143 008e F6E7     		b	.L1409
 19144              	.LVL2426:
 19145              	.L1416:
9176:Core/Src/bno055.c ****     }
 19146              		.loc 1 9176 9 is_stmt 1 view .LVU5436
9176:Core/Src/bno055.c ****     }
 19147              		.loc 1 9176 21 is_stmt 0 view .LVU5437
 19148 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 19149              	.LVL2427:
9176:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccOloYeZ.s 			page 547


 19150              		.loc 1 9176 18 view .LVU5438
 19151 0094 54FA80F0 		uxtab	r0, r4, r0
 19152 0098 44B2     		sxtb	r4, r0
 19153              	.LVL2428:
9176:Core/Src/bno055.c ****     }
 19154              		.loc 1 9176 18 view .LVU5439
 19155 009a F3E7     		b	.L1408
 19156              	.LVL2429:
 19157              	.L1411:
9132:Core/Src/bno055.c ****     }
 19158              		.loc 1 9132 16 view .LVU5440
 19159 009c 6FF07E04 		mvn	r4, #126
 19160 00a0 F0E7     		b	.L1408
 19161              	.L1418:
 19162 00a2 00BF     		.align	2
 19163              	.L1417:
 19164 00a4 00000000 		.word	p_bno055
 19165              		.cfi_endproc
 19166              	.LFE158:
 19168              		.section	.text.bno055_get_axis_remap_value,"ax",%progbits
 19169              		.align	1
 19170              		.global	bno055_get_axis_remap_value
 19171              		.syntax unified
 19172              		.thumb
 19173              		.thumb_func
 19175              	bno055_get_axis_remap_value:
 19176              	.LVL2430:
 19177              	.LFB159:
9181:Core/Src/bno055.c **** 
9182:Core/Src/bno055.c **** /*!
9183:Core/Src/bno055.c ****  *  @brief This API used to read the axis remap value
9184:Core/Src/bno055.c ****  *  from register from 0x41 bit 0 and 5
9185:Core/Src/bno055.c ****  *
9186:Core/Src/bno055.c ****  *  @param remap_axis_u8 : The value of axis remapping
9187:Core/Src/bno055.c ****  *
9188:Core/Src/bno055.c ****  *    remap_axis_u8 |   result     | comments
9189:Core/Src/bno055.c ****  *   ------------|-------------------|------------
9190:Core/Src/bno055.c ****  *      0X21     | BNO055_REMAP_X_Y         | Z=Z;X=Y;Y=X
9191:Core/Src/bno055.c ****  *      0X18     | BNO055_REMAP_Y_Z         | X=X;Y=Z;Z=Y
9192:Core/Src/bno055.c ****  *      0X06     | BNO055_REMAP_Z_X         | Y=Y;X=Z;Z=X
9193:Core/Src/bno055.c ****  *      0X12     | BNO055_REMAP_X_Y_Z_TYPE0 | X=Z;Y=X;Z=Y
9194:Core/Src/bno055.c ****  *      0X09     | BNO055_REMAP_X_Y_Z_TYPE1 | X=Y;Y=Z;Z=X
9195:Core/Src/bno055.c ****  *      0X24     | BNO055_DEFAULT_AXIS      | X=X;Y=Y;Z=Z
9196:Core/Src/bno055.c ****  *
9197:Core/Src/bno055.c ****  *  @return results of bus communication function
9198:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9199:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9200:Core/Src/bno055.c ****  *
9201:Core/Src/bno055.c ****  *  @note : For axis sign remap refer the following APIs
9202:Core/Src/bno055.c ****  *  x-axis :
9203:Core/Src/bno055.c ****  *
9204:Core/Src/bno055.c ****  *  bno055_set_x_remap_sign()
9205:Core/Src/bno055.c ****  *
9206:Core/Src/bno055.c ****  *  y-axis :
9207:Core/Src/bno055.c ****  *
9208:Core/Src/bno055.c ****  *  bno055_set_y_remap_sign()
9209:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 548


9210:Core/Src/bno055.c ****  *  z-axis :
9211:Core/Src/bno055.c ****  *
9212:Core/Src/bno055.c ****  *  bno055_set_z_remap_sign()
9213:Core/Src/bno055.c ****  *
9214:Core/Src/bno055.c ****  */
9215:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_axis_remap_value(u8 *remap_axis_u8)
9216:Core/Src/bno055.c **** {
 19178              		.loc 1 9216 1 is_stmt 1 view -0
 19179              		.cfi_startproc
 19180              		@ args = 0, pretend = 0, frame = 8
 19181              		@ frame_needed = 0, uses_anonymous_args = 0
 19182              		.loc 1 9216 1 is_stmt 0 view .LVU5442
 19183 0000 30B5     		push	{r4, r5, lr}
 19184              		.cfi_def_cfa_offset 12
 19185              		.cfi_offset 4, -12
 19186              		.cfi_offset 5, -8
 19187              		.cfi_offset 14, -4
 19188 0002 83B0     		sub	sp, sp, #12
 19189              		.cfi_def_cfa_offset 24
9217:Core/Src/bno055.c ****     /* Variable used to return value of
9218:Core/Src/bno055.c ****      * communication routine*/
9219:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19190              		.loc 1 9219 5 is_stmt 1 view .LVU5443
 19191              	.LVL2431:
9220:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19192              		.loc 1 9220 5 view .LVU5444
 19193              		.loc 1 9220 8 is_stmt 0 view .LVU5445
 19194 0004 0023     		movs	r3, #0
 19195 0006 8DF80730 		strb	r3, [sp, #7]
9221:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19196              		.loc 1 9221 5 is_stmt 1 view .LVU5446
 19197              	.LVL2432:
9222:Core/Src/bno055.c **** 
9223:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9224:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19198              		.loc 1 9224 5 view .LVU5447
 19199              		.loc 1 9224 18 is_stmt 0 view .LVU5448
 19200 000a 134B     		ldr	r3, .L1427
 19201 000c 1B68     		ldr	r3, [r3]
 19202              		.loc 1 9224 8 view .LVU5449
 19203 000e E3B1     		cbz	r3, .L1423
 19204 0010 0446     		mov	r4, r0
9225:Core/Src/bno055.c ****     {
9226:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9227:Core/Src/bno055.c ****     }
9228:Core/Src/bno055.c ****     else
9229:Core/Src/bno055.c ****     {
9230:Core/Src/bno055.c ****         /*condition check for page, axis remap is
9231:Core/Src/bno055.c ****          * available in the page zero*/
9232:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 19205              		.loc 1 9232 9 is_stmt 1 view .LVU5450
 19206              		.loc 1 9232 21 is_stmt 0 view .LVU5451
 19207 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19208              		.loc 1 9232 12 view .LVU5452
 19209 0014 9BB9     		cbnz	r3, .L1426
 19210              	.LVL2433:
 19211              	.L1421:
ARM GAS  /tmp/ccOloYeZ.s 			page 549


9233:Core/Src/bno055.c ****         {
9234:Core/Src/bno055.c ****             /* Write the page zero*/
9235:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9236:Core/Src/bno055.c ****         }
9237:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 19212              		.loc 1 9237 53 discriminator 1 view .LVU5453
 19213 0016 104B     		ldr	r3, .L1427
 19214 0018 1B68     		ldr	r3, [r3]
 19215 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19216              		.loc 1 9237 41 discriminator 1 view .LVU5454
 19217 001c C3B9     		cbnz	r3, .L1424
 19218              	.L1422:
9238:Core/Src/bno055.c ****         {
9239:Core/Src/bno055.c ****             /* Read the value of axis remap*/
9240:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19219              		.loc 1 9240 13 is_stmt 1 view .LVU5455
 19220              		.loc 1 9240 32 is_stmt 0 view .LVU5456
 19221 001e 0E4B     		ldr	r3, .L1427
 19222 0020 1868     		ldr	r0, [r3]
 19223 0022 0569     		ldr	r5, [r0, #16]
 19224              		.loc 1 9240 24 view .LVU5457
 19225 0024 0123     		movs	r3, #1
 19226 0026 0DF10702 		add	r2, sp, #7
 19227 002a 4121     		movs	r1, #65
 19228 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19229 002e A847     		blx	r5
 19230              	.LVL2434:
9241:Core/Src/bno055.c ****                                                       BNO055_REMAP_AXIS_VALUE_REG,
9242:Core/Src/bno055.c ****                                                       &data_u8r,
9243:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
9244:Core/Src/bno055.c ****             *remap_axis_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_REMAP_AXIS_VALUE);
 19231              		.loc 1 9244 13 is_stmt 1 view .LVU5458
 19232              		.loc 1 9244 30 is_stmt 0 view .LVU5459
 19233 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19234 0034 03F03F03 		and	r3, r3, #63
 19235              		.loc 1 9244 28 view .LVU5460
 19236 0038 2370     		strb	r3, [r4]
 19237              	.LVL2435:
 19238              	.L1420:
9245:Core/Src/bno055.c ****         }
9246:Core/Src/bno055.c ****         else
9247:Core/Src/bno055.c ****         {
9248:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9249:Core/Src/bno055.c ****         }
9250:Core/Src/bno055.c ****     }
9251:Core/Src/bno055.c **** 
9252:Core/Src/bno055.c ****     return com_rslt;
9253:Core/Src/bno055.c **** }
 19239              		.loc 1 9253 1 view .LVU5461
 19240 003a 03B0     		add	sp, sp, #12
 19241              		.cfi_remember_state
 19242              		.cfi_def_cfa_offset 12
 19243              		@ sp needed
 19244 003c 30BD     		pop	{r4, r5, pc}
 19245              	.LVL2436:
 19246              	.L1426:
 19247              		.cfi_restore_state
ARM GAS  /tmp/ccOloYeZ.s 			page 550


9235:Core/Src/bno055.c ****         }
 19248              		.loc 1 9235 13 is_stmt 1 view .LVU5462
9235:Core/Src/bno055.c ****         }
 19249              		.loc 1 9235 23 is_stmt 0 view .LVU5463
 19250 003e 0020     		movs	r0, #0
 19251              	.LVL2437:
9235:Core/Src/bno055.c ****         }
 19252              		.loc 1 9235 23 view .LVU5464
 19253 0040 FFF7FEFF 		bl	bno055_write_page_id
 19254              	.LVL2438:
9237:Core/Src/bno055.c ****         {
 19255              		.loc 1 9237 9 is_stmt 1 view .LVU5465
9237:Core/Src/bno055.c ****         {
 19256              		.loc 1 9237 12 is_stmt 0 view .LVU5466
 19257 0044 0028     		cmp	r0, #0
 19258 0046 EAD0     		beq	.L1422
 19259 0048 E5E7     		b	.L1421
 19260              	.LVL2439:
 19261              	.L1423:
9226:Core/Src/bno055.c ****     }
 19262              		.loc 1 9226 16 view .LVU5467
 19263 004a 6FF07E00 		mvn	r0, #126
 19264              	.LVL2440:
9226:Core/Src/bno055.c ****     }
 19265              		.loc 1 9226 16 view .LVU5468
 19266 004e F4E7     		b	.L1420
 19267              	.LVL2441:
 19268              	.L1424:
9248:Core/Src/bno055.c ****         }
 19269              		.loc 1 9248 22 view .LVU5469
 19270 0050 4FF0FF30 		mov	r0, #-1
 19271 0054 F1E7     		b	.L1420
 19272              	.L1428:
 19273 0056 00BF     		.align	2
 19274              	.L1427:
 19275 0058 00000000 		.word	p_bno055
 19276              		.cfi_endproc
 19277              	.LFE159:
 19279              		.section	.text.bno055_set_axis_remap_value,"ax",%progbits
 19280              		.align	1
 19281              		.global	bno055_set_axis_remap_value
 19282              		.syntax unified
 19283              		.thumb
 19284              		.thumb_func
 19286              	bno055_set_axis_remap_value:
 19287              	.LVL2442:
 19288              	.LFB160:
9254:Core/Src/bno055.c **** 
9255:Core/Src/bno055.c **** /*!
9256:Core/Src/bno055.c ****  *  @brief This API used to write the axis remap value
9257:Core/Src/bno055.c ****  *  from register from 0x41 bit 0 and 5
9258:Core/Src/bno055.c ****  *
9259:Core/Src/bno055.c ****  *  @param remap_axis_u8 : The value of axis remapping
9260:Core/Src/bno055.c ****  *
9261:Core/Src/bno055.c ****  *    remap_axis_u8 |   result     | comments
9262:Core/Src/bno055.c ****  *   ------------|-------------------|------------
9263:Core/Src/bno055.c ****  *      0X21     | BNO055_REMAP_X_Y         | Z=Z;X=Y;Y=X
ARM GAS  /tmp/ccOloYeZ.s 			page 551


9264:Core/Src/bno055.c ****  *      0X18     | BNO055_REMAP_Y_Z         | X=X;Y=Z;Z=Y
9265:Core/Src/bno055.c ****  *      0X06     | BNO055_REMAP_Z_X         | Y=Y;X=Z;Z=X
9266:Core/Src/bno055.c ****  *      0X12     | BNO055_REMAP_X_Y_Z_TYPE0 | X=Z;Y=X;Z=Y
9267:Core/Src/bno055.c ****  *      0X09     | BNO055_REMAP_X_Y_Z_TYPE1 | X=Y;Y=Z;Z=X
9268:Core/Src/bno055.c ****  *      0X24     | BNO055_DEFAULT_AXIS      | X=X;Y=Y;Z=Z
9269:Core/Src/bno055.c ****  *
9270:Core/Src/bno055.c ****  *  @return results of bus communication function
9271:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9272:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9273:Core/Src/bno055.c ****  *
9274:Core/Src/bno055.c ****  *  @note : For axis sign remap refer the following APIs
9275:Core/Src/bno055.c ****  *  x-axis :
9276:Core/Src/bno055.c ****  *
9277:Core/Src/bno055.c ****  *  bno055_set_x_remap_sign()
9278:Core/Src/bno055.c ****  *
9279:Core/Src/bno055.c ****  *  y-axis :
9280:Core/Src/bno055.c ****  *
9281:Core/Src/bno055.c ****  *  bno055_set_y_remap_sign()
9282:Core/Src/bno055.c ****  *
9283:Core/Src/bno055.c ****  *  z-axis :
9284:Core/Src/bno055.c ****  *
9285:Core/Src/bno055.c ****  *  bno055_set_z_remap_sign()
9286:Core/Src/bno055.c ****  *
9287:Core/Src/bno055.c ****  */
9288:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_axis_remap_value(u8 remap_axis_u8)
9289:Core/Src/bno055.c **** {
 19289              		.loc 1 9289 1 is_stmt 1 view -0
 19290              		.cfi_startproc
 19291              		@ args = 0, pretend = 0, frame = 8
 19292              		@ frame_needed = 0, uses_anonymous_args = 0
 19293              		.loc 1 9289 1 is_stmt 0 view .LVU5471
 19294 0000 30B5     		push	{r4, r5, lr}
 19295              		.cfi_def_cfa_offset 12
 19296              		.cfi_offset 4, -12
 19297              		.cfi_offset 5, -8
 19298              		.cfi_offset 14, -4
 19299 0002 83B0     		sub	sp, sp, #12
 19300              		.cfi_def_cfa_offset 24
9290:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19301              		.loc 1 9290 5 is_stmt 1 view .LVU5472
 19302              	.LVL2443:
9291:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19303              		.loc 1 9291 5 view .LVU5473
 19304              		.loc 1 9291 8 is_stmt 0 view .LVU5474
 19305 0004 0023     		movs	r3, #0
 19306 0006 8DF80730 		strb	r3, [sp, #7]
9292:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 19307              		.loc 1 9292 5 is_stmt 1 view .LVU5475
 19308              		.loc 1 9292 8 is_stmt 0 view .LVU5476
 19309 000a 8DF80630 		strb	r3, [sp, #6]
9293:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19310              		.loc 1 9293 5 is_stmt 1 view .LVU5477
 19311              	.LVL2444:
9294:Core/Src/bno055.c **** 
9295:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9296:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19312              		.loc 1 9296 5 view .LVU5478
ARM GAS  /tmp/ccOloYeZ.s 			page 552


 19313              		.loc 1 9296 18 is_stmt 0 view .LVU5479
 19314 000e 3B4B     		ldr	r3, .L1441
 19315 0010 1B68     		ldr	r3, [r3]
 19316              		.loc 1 9296 8 view .LVU5480
 19317 0012 002B     		cmp	r3, #0
 19318 0014 6FD0     		beq	.L1434
 19319 0016 0546     		mov	r5, r0
9297:Core/Src/bno055.c ****     {
9298:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9299:Core/Src/bno055.c ****     }
9300:Core/Src/bno055.c ****     else
9301:Core/Src/bno055.c ****     {
9302:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9303:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9304:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9305:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 19320              		.loc 1 9305 9 is_stmt 1 view .LVU5481
 19321              		.loc 1 9305 19 is_stmt 0 view .LVU5482
 19322 0018 0DF10600 		add	r0, sp, #6
 19323              	.LVL2445:
 19324              		.loc 1 9305 19 view .LVU5483
 19325 001c FFF7FEFF 		bl	bno055_get_operation_mode
 19326              	.LVL2446:
9306:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 19327              		.loc 1 9306 9 is_stmt 1 view .LVU5484
 19328              		.loc 1 9306 12 is_stmt 0 view .LVU5485
 19329 0020 0446     		mov	r4, r0
 19330 0022 0028     		cmp	r0, #0
 19331 0024 56D1     		bne	.L1435
9307:Core/Src/bno055.c ****         {
9308:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19332              		.loc 1 9308 13 is_stmt 1 view .LVU5486
 19333              		.loc 1 9308 32 is_stmt 0 view .LVU5487
 19334 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 19335              		.loc 1 9308 16 view .LVU5488
 19336 002a 63BB     		cbnz	r3, .L1438
 19337              	.LVL2447:
 19338              	.L1432:
9309:Core/Src/bno055.c ****             {
9310:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9311:Core/Src/bno055.c ****             }
9312:Core/Src/bno055.c **** 
9313:Core/Src/bno055.c ****             /* Write the value of axis remap */
9314:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 19339              		.loc 1 9314 13 is_stmt 1 view .LVU5489
 19340              		.loc 1 9314 16 is_stmt 0 view .LVU5490
 19341 002c 002C     		cmp	r4, #0
 19342 002e 59D1     		bne	.L1436
9315:Core/Src/bno055.c ****             {
9316:Core/Src/bno055.c ****                 switch (remap_axis_u8)
 19343              		.loc 1 9316 17 is_stmt 1 view .LVU5491
 19344 0030 AB1F     		subs	r3, r5, #6
 19345 0032 DBB2     		uxtb	r3, r3
 19346 0034 1E2B     		cmp	r3, #30
 19347 0036 05D8     		bhi	.L1433
 19348 0038 314A     		ldr	r2, .L1441+4
 19349 003a 22FA03F3 		lsr	r3, r2, r3
ARM GAS  /tmp/ccOloYeZ.s 			page 553


 19350 003e 13F0010F 		tst	r3, #1
 19351 0042 26D1     		bne	.L1439
 19352              	.L1433:
9317:Core/Src/bno055.c ****                 {
9318:Core/Src/bno055.c ****                     case BNO055_REMAP_X_Y:
9319:Core/Src/bno055.c ****                     case BNO055_REMAP_Y_Z:
9320:Core/Src/bno055.c ****                     case BNO055_REMAP_Z_X:
9321:Core/Src/bno055.c ****                     case BNO055_REMAP_X_Y_Z_TYPE0:
9322:Core/Src/bno055.c ****                     case BNO055_REMAP_X_Y_Z_TYPE1:
9323:Core/Src/bno055.c ****                     case BNO055_DEFAULT_AXIS:
9324:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
9325:Core/Src/bno055.c ****                                                                   BNO055_REMAP_AXIS_VALUE_REG,
9326:Core/Src/bno055.c ****                                                                   &data_u8r,
9327:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
9328:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
9329:Core/Src/bno055.c ****                         {
9330:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_AXIS_VALUE, remap
9331:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
9332:Core/Src/bno055.c ****                                                                         BNO055_REMAP_AXIS_VALUE_REG
9333:Core/Src/bno055.c ****                                                                         &data_u8r,
9334:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
9335:Core/Src/bno055.c ****                         }
9336:Core/Src/bno055.c ****                         break;
9337:Core/Src/bno055.c ****                     default:
9338:Core/Src/bno055.c **** 
9339:Core/Src/bno055.c ****                         /* Write the default axis remap value */
9340:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19353              		.loc 1 9340 25 view .LVU5492
 19354              		.loc 1 9340 44 is_stmt 0 view .LVU5493
 19355 0044 2D4B     		ldr	r3, .L1441
 19356 0046 1868     		ldr	r0, [r3]
 19357 0048 0469     		ldr	r4, [r0, #16]
 19358              	.LVL2448:
 19359              		.loc 1 9340 36 view .LVU5494
 19360 004a 0123     		movs	r3, #1
 19361 004c 0DF10702 		add	r2, sp, #7
 19362 0050 4121     		movs	r1, #65
 19363 0052 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19364 0054 A047     		blx	r4
 19365              	.LVL2449:
9341:Core/Src/bno055.c ****                                                                   BNO055_REMAP_AXIS_VALUE_REG,
9342:Core/Src/bno055.c ****                                                                   &data_u8r,
9343:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
9344:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
 19366              		.loc 1 9344 25 is_stmt 1 view .LVU5495
 19367              		.loc 1 9344 28 is_stmt 0 view .LVU5496
 19368 0056 0446     		mov	r4, r0
 19369 0058 0028     		cmp	r0, #0
 19370 005a 3DD1     		bne	.L1431
9345:Core/Src/bno055.c ****                         {
9346:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_AXIS_VALUE, BNO05
 19371              		.loc 1 9346 29 is_stmt 1 view .LVU5497
 19372              		.loc 1 9346 40 is_stmt 0 view .LVU5498
 19373 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19374              		.loc 1 9346 38 view .LVU5499
 19375 0060 23F03F03 		bic	r3, r3, #63
 19376 0064 43F02403 		orr	r3, r3, #36
ARM GAS  /tmp/ccOloYeZ.s 			page 554


 19377 0068 8DF80730 		strb	r3, [sp, #7]
9347:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 19378              		.loc 1 9347 29 is_stmt 1 view .LVU5500
 19379              		.loc 1 9347 49 is_stmt 0 view .LVU5501
 19380 006c 234B     		ldr	r3, .L1441
 19381 006e 1868     		ldr	r0, [r3]
 19382              	.LVL2450:
 19383              		.loc 1 9347 49 view .LVU5502
 19384 0070 C568     		ldr	r5, [r0, #12]
 19385              		.loc 1 9347 41 view .LVU5503
 19386 0072 0123     		movs	r3, #1
 19387 0074 0DF10702 		add	r2, sp, #7
 19388 0078 4121     		movs	r1, #65
 19389 007a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19390 007c A847     		blx	r5
 19391              	.LVL2451:
 19392              		.loc 1 9347 38 view .LVU5504
 19393 007e 54FA80F0 		uxtab	r0, r4, r0
 19394 0082 44B2     		sxtb	r4, r0
 19395              	.LVL2452:
 19396              		.loc 1 9347 38 view .LVU5505
 19397 0084 28E0     		b	.L1431
 19398              	.LVL2453:
 19399              	.L1438:
9310:Core/Src/bno055.c ****             }
 19400              		.loc 1 9310 17 is_stmt 1 view .LVU5506
9310:Core/Src/bno055.c ****             }
 19401              		.loc 1 9310 28 is_stmt 0 view .LVU5507
 19402 0086 FFF7FEFF 		bl	bno055_set_operation_mode
 19403              	.LVL2454:
9310:Core/Src/bno055.c ****             }
 19404              		.loc 1 9310 25 view .LVU5508
 19405 008a 54FA80F4 		uxtab	r4, r4, r0
 19406 008e 64B2     		sxtb	r4, r4
 19407              	.LVL2455:
9310:Core/Src/bno055.c ****             }
 19408              		.loc 1 9310 25 view .LVU5509
 19409 0090 CCE7     		b	.L1432
 19410              	.L1439:
9324:Core/Src/bno055.c ****                                                                   BNO055_REMAP_AXIS_VALUE_REG,
 19411              		.loc 1 9324 25 is_stmt 1 view .LVU5510
9324:Core/Src/bno055.c ****                                                                   BNO055_REMAP_AXIS_VALUE_REG,
 19412              		.loc 1 9324 44 is_stmt 0 view .LVU5511
 19413 0092 1A4B     		ldr	r3, .L1441
 19414 0094 1868     		ldr	r0, [r3]
 19415 0096 0469     		ldr	r4, [r0, #16]
 19416              	.LVL2456:
9324:Core/Src/bno055.c ****                                                                   BNO055_REMAP_AXIS_VALUE_REG,
 19417              		.loc 1 9324 36 view .LVU5512
 19418 0098 0123     		movs	r3, #1
 19419 009a 0DF10702 		add	r2, sp, #7
 19420 009e 4121     		movs	r1, #65
 19421 00a0 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19422 00a2 A047     		blx	r4
 19423              	.LVL2457:
9328:Core/Src/bno055.c ****                         {
 19424              		.loc 1 9328 25 is_stmt 1 view .LVU5513
ARM GAS  /tmp/ccOloYeZ.s 			page 555


9328:Core/Src/bno055.c ****                         {
 19425              		.loc 1 9328 28 is_stmt 0 view .LVU5514
 19426 00a4 0446     		mov	r4, r0
 19427 00a6 B8B9     		cbnz	r0, .L1431
9330:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 19428              		.loc 1 9330 29 is_stmt 1 view .LVU5515
9330:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 19429              		.loc 1 9330 40 is_stmt 0 view .LVU5516
 19430 00a8 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
9330:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 19431              		.loc 1 9330 38 view .LVU5517
 19432 00ac 23F03F03 		bic	r3, r3, #63
 19433 00b0 05F03F00 		and	r0, r5, #63
 19434              	.LVL2458:
9330:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 19435              		.loc 1 9330 38 view .LVU5518
 19436 00b4 0343     		orrs	r3, r3, r0
 19437 00b6 8DF80730 		strb	r3, [sp, #7]
9331:Core/Src/bno055.c ****                                                                         BNO055_REMAP_AXIS_VALUE_REG
 19438              		.loc 1 9331 29 is_stmt 1 view .LVU5519
9331:Core/Src/bno055.c ****                                                                         BNO055_REMAP_AXIS_VALUE_REG
 19439              		.loc 1 9331 49 is_stmt 0 view .LVU5520
 19440 00ba 104B     		ldr	r3, .L1441
 19441 00bc 1868     		ldr	r0, [r3]
 19442 00be C568     		ldr	r5, [r0, #12]
9331:Core/Src/bno055.c ****                                                                         BNO055_REMAP_AXIS_VALUE_REG
 19443              		.loc 1 9331 41 view .LVU5521
 19444 00c0 0123     		movs	r3, #1
 19445 00c2 0DF10702 		add	r2, sp, #7
 19446 00c6 4121     		movs	r1, #65
 19447 00c8 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19448 00ca A847     		blx	r5
 19449              	.LVL2459:
9331:Core/Src/bno055.c ****                                                                         BNO055_REMAP_AXIS_VALUE_REG
 19450              		.loc 1 9331 38 view .LVU5522
 19451 00cc 54FA80F0 		uxtab	r0, r4, r0
 19452 00d0 44B2     		sxtb	r4, r0
 19453              	.LVL2460:
9331:Core/Src/bno055.c ****                                                                         BNO055_REMAP_AXIS_VALUE_REG
 19454              		.loc 1 9331 38 view .LVU5523
 19455 00d2 01E0     		b	.L1431
 19456              	.LVL2461:
 19457              	.L1435:
9348:Core/Src/bno055.c ****                                                                         BNO055_REMAP_AXIS_VALUE_REG
9349:Core/Src/bno055.c ****                                                                         &data_u8r,
9350:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
9351:Core/Src/bno055.c ****                         }
9352:Core/Src/bno055.c ****                         break;
9353:Core/Src/bno055.c ****                 }
9354:Core/Src/bno055.c ****             }
9355:Core/Src/bno055.c ****             else
9356:Core/Src/bno055.c ****             {
9357:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9358:Core/Src/bno055.c ****             }
9359:Core/Src/bno055.c ****         }
9360:Core/Src/bno055.c ****         else
9361:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccOloYeZ.s 			page 556


9362:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 19458              		.loc 1 9362 22 view .LVU5524
 19459 00d4 4FF0FF34 		mov	r4, #-1
 19460              	.LVL2462:
 19461              	.L1431:
9363:Core/Src/bno055.c ****         }
9364:Core/Src/bno055.c ****     }
9365:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19462              		.loc 1 9365 5 is_stmt 1 view .LVU5525
 19463              		.loc 1 9365 24 is_stmt 0 view .LVU5526
 19464 00d8 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 19465              		.loc 1 9365 8 view .LVU5527
 19466 00dc 28B9     		cbnz	r0, .L1440
 19467              	.LVL2463:
 19468              	.L1430:
9366:Core/Src/bno055.c ****     {
9367:Core/Src/bno055.c ****         /* set the operation mode
9368:Core/Src/bno055.c ****          * of previous operation mode*/
9369:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9370:Core/Src/bno055.c ****     }
9371:Core/Src/bno055.c **** 
9372:Core/Src/bno055.c ****     return com_rslt;
9373:Core/Src/bno055.c **** }
 19469              		.loc 1 9373 1 view .LVU5528
 19470 00de 2046     		mov	r0, r4
 19471 00e0 03B0     		add	sp, sp, #12
 19472              		.cfi_remember_state
 19473              		.cfi_def_cfa_offset 12
 19474              		@ sp needed
 19475 00e2 30BD     		pop	{r4, r5, pc}
 19476              	.LVL2464:
 19477              	.L1436:
 19478              		.cfi_restore_state
9357:Core/Src/bno055.c ****             }
 19479              		.loc 1 9357 26 view .LVU5529
 19480 00e4 4FF0FF34 		mov	r4, #-1
 19481              	.LVL2465:
9357:Core/Src/bno055.c ****             }
 19482              		.loc 1 9357 26 view .LVU5530
 19483 00e8 F6E7     		b	.L1431
 19484              	.LVL2466:
 19485              	.L1440:
9369:Core/Src/bno055.c ****     }
 19486              		.loc 1 9369 9 is_stmt 1 view .LVU5531
9369:Core/Src/bno055.c ****     }
 19487              		.loc 1 9369 21 is_stmt 0 view .LVU5532
 19488 00ea FFF7FEFF 		bl	bno055_set_operation_mode
 19489              	.LVL2467:
9369:Core/Src/bno055.c ****     }
 19490              		.loc 1 9369 18 view .LVU5533
 19491 00ee 54FA80F0 		uxtab	r0, r4, r0
 19492 00f2 44B2     		sxtb	r4, r0
 19493              	.LVL2468:
9369:Core/Src/bno055.c ****     }
 19494              		.loc 1 9369 18 view .LVU5534
 19495 00f4 F3E7     		b	.L1430
 19496              	.LVL2469:
ARM GAS  /tmp/ccOloYeZ.s 			page 557


 19497              	.L1434:
9298:Core/Src/bno055.c ****     }
 19498              		.loc 1 9298 16 view .LVU5535
 19499 00f6 6FF07E04 		mvn	r4, #126
 19500 00fa F0E7     		b	.L1430
 19501              	.L1442:
 19502              		.align	2
 19503              	.L1441:
 19504 00fc 00000000 		.word	p_bno055
 19505 0100 09100448 		.word	1208225801
 19506              		.cfi_endproc
 19507              	.LFE160:
 19509              		.section	.text.bno055_get_remap_x_sign,"ax",%progbits
 19510              		.align	1
 19511              		.global	bno055_get_remap_x_sign
 19512              		.syntax unified
 19513              		.thumb
 19514              		.thumb_func
 19516              	bno055_get_remap_x_sign:
 19517              	.LVL2470:
 19518              	.LFB161:
9374:Core/Src/bno055.c **** 
9375:Core/Src/bno055.c **** /*!
9376:Core/Src/bno055.c ****  *  @brief This API used to read the x-axis remap
9377:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 2
9378:Core/Src/bno055.c ****  *
9379:Core/Src/bno055.c ****  *  @param remap_x_sign_u8 : The value of x-axis remap sign
9380:Core/Src/bno055.c ****  *
9381:Core/Src/bno055.c ****  *    remap_x_sign_u8  |    result
9382:Core/Src/bno055.c ****  *   ------------------- |--------------------
9383:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9384:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9385:Core/Src/bno055.c ****  *
9386:Core/Src/bno055.c ****  *  @return results of bus communication function
9387:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9388:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9389:Core/Src/bno055.c ****  *
9390:Core/Src/bno055.c ****  */
9391:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_remap_x_sign(u8 *remap_x_sign_u8)
9392:Core/Src/bno055.c **** {
 19519              		.loc 1 9392 1 is_stmt 1 view -0
 19520              		.cfi_startproc
 19521              		@ args = 0, pretend = 0, frame = 8
 19522              		@ frame_needed = 0, uses_anonymous_args = 0
 19523              		.loc 1 9392 1 is_stmt 0 view .LVU5537
 19524 0000 30B5     		push	{r4, r5, lr}
 19525              		.cfi_def_cfa_offset 12
 19526              		.cfi_offset 4, -12
 19527              		.cfi_offset 5, -8
 19528              		.cfi_offset 14, -4
 19529 0002 83B0     		sub	sp, sp, #12
 19530              		.cfi_def_cfa_offset 24
9393:Core/Src/bno055.c ****     /* Variable used to return value of
9394:Core/Src/bno055.c ****      * communication routine*/
9395:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19531              		.loc 1 9395 5 is_stmt 1 view .LVU5538
 19532              	.LVL2471:
ARM GAS  /tmp/ccOloYeZ.s 			page 558


9396:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19533              		.loc 1 9396 5 view .LVU5539
 19534              		.loc 1 9396 8 is_stmt 0 view .LVU5540
 19535 0004 0023     		movs	r3, #0
 19536 0006 8DF80730 		strb	r3, [sp, #7]
9397:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19537              		.loc 1 9397 5 is_stmt 1 view .LVU5541
 19538              	.LVL2472:
9398:Core/Src/bno055.c **** 
9399:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9400:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19539              		.loc 1 9400 5 view .LVU5542
 19540              		.loc 1 9400 18 is_stmt 0 view .LVU5543
 19541 000a 134B     		ldr	r3, .L1451
 19542 000c 1B68     		ldr	r3, [r3]
 19543              		.loc 1 9400 8 view .LVU5544
 19544 000e E3B1     		cbz	r3, .L1447
 19545 0010 0446     		mov	r4, r0
9401:Core/Src/bno055.c ****     {
9402:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9403:Core/Src/bno055.c ****     }
9404:Core/Src/bno055.c ****     else
9405:Core/Src/bno055.c ****     {
9406:Core/Src/bno055.c ****         /*condition check for page, x-axis remap sign is
9407:Core/Src/bno055.c ****          * available in the page zero*/
9408:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 19546              		.loc 1 9408 9 is_stmt 1 view .LVU5545
 19547              		.loc 1 9408 21 is_stmt 0 view .LVU5546
 19548 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19549              		.loc 1 9408 12 view .LVU5547
 19550 0014 9BB9     		cbnz	r3, .L1450
 19551              	.LVL2473:
 19552              	.L1445:
9409:Core/Src/bno055.c ****         {
9410:Core/Src/bno055.c ****             /* Write the page zero*/
9411:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9412:Core/Src/bno055.c ****         }
9413:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 19553              		.loc 1 9413 53 discriminator 1 view .LVU5548
 19554 0016 104B     		ldr	r3, .L1451
 19555 0018 1B68     		ldr	r3, [r3]
 19556 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19557              		.loc 1 9413 41 discriminator 1 view .LVU5549
 19558 001c C3B9     		cbnz	r3, .L1448
 19559              	.L1446:
9414:Core/Src/bno055.c ****         {
9415:Core/Src/bno055.c ****             /* Read the value of x-axis remap sign */
9416:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19560              		.loc 1 9416 13 is_stmt 1 view .LVU5550
 19561              		.loc 1 9416 32 is_stmt 0 view .LVU5551
 19562 001e 0E4B     		ldr	r3, .L1451
 19563 0020 1868     		ldr	r0, [r3]
 19564 0022 0569     		ldr	r5, [r0, #16]
 19565              		.loc 1 9416 24 view .LVU5552
 19566 0024 0123     		movs	r3, #1
 19567 0026 0DF10702 		add	r2, sp, #7
 19568 002a 4221     		movs	r1, #66
ARM GAS  /tmp/ccOloYeZ.s 			page 559


 19569 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19570 002e A847     		blx	r5
 19571              	.LVL2474:
9417:Core/Src/bno055.c ****                                                       BNO055_REMAP_X_SIGN_REG,
9418:Core/Src/bno055.c ****                                                       &data_u8r,
9419:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
9420:Core/Src/bno055.c ****             *remap_x_sign_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_REMAP_X_SIGN);
 19572              		.loc 1 9420 13 is_stmt 1 view .LVU5553
 19573              		.loc 1 9420 32 is_stmt 0 view .LVU5554
 19574 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19575 0034 C3F38003 		ubfx	r3, r3, #2, #1
 19576              		.loc 1 9420 30 view .LVU5555
 19577 0038 2370     		strb	r3, [r4]
 19578              	.LVL2475:
 19579              	.L1444:
9421:Core/Src/bno055.c ****         }
9422:Core/Src/bno055.c ****         else
9423:Core/Src/bno055.c ****         {
9424:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9425:Core/Src/bno055.c ****         }
9426:Core/Src/bno055.c ****     }
9427:Core/Src/bno055.c **** 
9428:Core/Src/bno055.c ****     return com_rslt;
9429:Core/Src/bno055.c **** }
 19580              		.loc 1 9429 1 view .LVU5556
 19581 003a 03B0     		add	sp, sp, #12
 19582              		.cfi_remember_state
 19583              		.cfi_def_cfa_offset 12
 19584              		@ sp needed
 19585 003c 30BD     		pop	{r4, r5, pc}
 19586              	.LVL2476:
 19587              	.L1450:
 19588              		.cfi_restore_state
9411:Core/Src/bno055.c ****         }
 19589              		.loc 1 9411 13 is_stmt 1 view .LVU5557
9411:Core/Src/bno055.c ****         }
 19590              		.loc 1 9411 23 is_stmt 0 view .LVU5558
 19591 003e 0020     		movs	r0, #0
 19592              	.LVL2477:
9411:Core/Src/bno055.c ****         }
 19593              		.loc 1 9411 23 view .LVU5559
 19594 0040 FFF7FEFF 		bl	bno055_write_page_id
 19595              	.LVL2478:
9413:Core/Src/bno055.c ****         {
 19596              		.loc 1 9413 9 is_stmt 1 view .LVU5560
9413:Core/Src/bno055.c ****         {
 19597              		.loc 1 9413 12 is_stmt 0 view .LVU5561
 19598 0044 0028     		cmp	r0, #0
 19599 0046 EAD0     		beq	.L1446
 19600 0048 E5E7     		b	.L1445
 19601              	.LVL2479:
 19602              	.L1447:
9402:Core/Src/bno055.c ****     }
 19603              		.loc 1 9402 16 view .LVU5562
 19604 004a 6FF07E00 		mvn	r0, #126
 19605              	.LVL2480:
9402:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccOloYeZ.s 			page 560


 19606              		.loc 1 9402 16 view .LVU5563
 19607 004e F4E7     		b	.L1444
 19608              	.LVL2481:
 19609              	.L1448:
9424:Core/Src/bno055.c ****         }
 19610              		.loc 1 9424 22 view .LVU5564
 19611 0050 4FF0FF30 		mov	r0, #-1
 19612 0054 F1E7     		b	.L1444
 19613              	.L1452:
 19614 0056 00BF     		.align	2
 19615              	.L1451:
 19616 0058 00000000 		.word	p_bno055
 19617              		.cfi_endproc
 19618              	.LFE161:
 19620              		.section	.text.bno055_set_remap_x_sign,"ax",%progbits
 19621              		.align	1
 19622              		.global	bno055_set_remap_x_sign
 19623              		.syntax unified
 19624              		.thumb
 19625              		.thumb_func
 19627              	bno055_set_remap_x_sign:
 19628              	.LVL2482:
 19629              	.LFB162:
9430:Core/Src/bno055.c **** 
9431:Core/Src/bno055.c **** /*!
9432:Core/Src/bno055.c ****  *  @brief This API used to write the x-axis remap
9433:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 2
9434:Core/Src/bno055.c ****  *
9435:Core/Src/bno055.c ****  *  @param remap_x_sign_u8 : The value of x-axis remap sign
9436:Core/Src/bno055.c ****  *
9437:Core/Src/bno055.c ****  *    remap_x_sign_u8  |    result
9438:Core/Src/bno055.c ****  *   ------------------- |--------------------
9439:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9440:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9441:Core/Src/bno055.c ****  *
9442:Core/Src/bno055.c ****  *  @return results of bus communication function
9443:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9444:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9445:Core/Src/bno055.c ****  *
9446:Core/Src/bno055.c ****  */
9447:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_remap_x_sign(u8 remap_x_sign_u8)
9448:Core/Src/bno055.c **** {
 19630              		.loc 1 9448 1 is_stmt 1 view -0
 19631              		.cfi_startproc
 19632              		@ args = 0, pretend = 0, frame = 8
 19633              		@ frame_needed = 0, uses_anonymous_args = 0
 19634              		.loc 1 9448 1 is_stmt 0 view .LVU5566
 19635 0000 30B5     		push	{r4, r5, lr}
 19636              		.cfi_def_cfa_offset 12
 19637              		.cfi_offset 4, -12
 19638              		.cfi_offset 5, -8
 19639              		.cfi_offset 14, -4
 19640 0002 83B0     		sub	sp, sp, #12
 19641              		.cfi_def_cfa_offset 24
9449:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19642              		.loc 1 9449 5 is_stmt 1 view .LVU5567
 19643              	.LVL2483:
ARM GAS  /tmp/ccOloYeZ.s 			page 561


9450:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19644              		.loc 1 9450 5 view .LVU5568
 19645              		.loc 1 9450 8 is_stmt 0 view .LVU5569
 19646 0004 0023     		movs	r3, #0
 19647 0006 8DF80730 		strb	r3, [sp, #7]
9451:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 19648              		.loc 1 9451 5 is_stmt 1 view .LVU5570
 19649              		.loc 1 9451 8 is_stmt 0 view .LVU5571
 19650 000a 8DF80630 		strb	r3, [sp, #6]
9452:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19651              		.loc 1 9452 5 is_stmt 1 view .LVU5572
 19652              	.LVL2484:
9453:Core/Src/bno055.c **** 
9454:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9455:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19653              		.loc 1 9455 5 view .LVU5573
 19654              		.loc 1 9455 18 is_stmt 0 view .LVU5574
 19655 000e 254B     		ldr	r3, .L1463
 19656 0010 1B68     		ldr	r3, [r3]
 19657              		.loc 1 9455 8 view .LVU5575
 19658 0012 002B     		cmp	r3, #0
 19659 0014 43D0     		beq	.L1457
 19660 0016 0546     		mov	r5, r0
9456:Core/Src/bno055.c ****     {
9457:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9458:Core/Src/bno055.c ****     }
9459:Core/Src/bno055.c ****     else
9460:Core/Src/bno055.c ****     {
9461:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9462:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9463:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9464:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 19661              		.loc 1 9464 9 is_stmt 1 view .LVU5576
 19662              		.loc 1 9464 19 is_stmt 0 view .LVU5577
 19663 0018 0DF10600 		add	r0, sp, #6
 19664              	.LVL2485:
 19665              		.loc 1 9464 19 view .LVU5578
 19666 001c FFF7FEFF 		bl	bno055_get_operation_mode
 19667              	.LVL2486:
9465:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 19668              		.loc 1 9465 9 is_stmt 1 view .LVU5579
 19669              		.loc 1 9465 12 is_stmt 0 view .LVU5580
 19670 0020 0446     		mov	r4, r0
 19671 0022 58BB     		cbnz	r0, .L1458
9466:Core/Src/bno055.c ****         {
9467:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19672              		.loc 1 9467 13 is_stmt 1 view .LVU5581
 19673              		.loc 1 9467 32 is_stmt 0 view .LVU5582
 19674 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 19675              		.loc 1 9467 16 view .LVU5583
 19676 0028 13BB     		cbnz	r3, .L1461
 19677              	.LVL2487:
 19678              	.L1456:
9468:Core/Src/bno055.c ****             {
9469:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9470:Core/Src/bno055.c ****             }
9471:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
ARM GAS  /tmp/ccOloYeZ.s 			page 562


 19679              		.loc 1 9471 13 is_stmt 1 view .LVU5584
 19680              		.loc 1 9471 16 is_stmt 0 view .LVU5585
 19681 002a 7CBB     		cbnz	r4, .L1459
9472:Core/Src/bno055.c ****             {
9473:Core/Src/bno055.c ****                 /* Write the value of x-axis remap */
9474:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19682              		.loc 1 9474 17 is_stmt 1 view .LVU5586
 19683              		.loc 1 9474 36 is_stmt 0 view .LVU5587
 19684 002c 1D4B     		ldr	r3, .L1463
 19685 002e 1868     		ldr	r0, [r3]
 19686 0030 0469     		ldr	r4, [r0, #16]
 19687              	.LVL2488:
 19688              		.loc 1 9474 28 view .LVU5588
 19689 0032 0123     		movs	r3, #1
 19690 0034 0DF10702 		add	r2, sp, #7
 19691 0038 4221     		movs	r1, #66
 19692 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19693 003c A047     		blx	r4
 19694              	.LVL2489:
9475:Core/Src/bno055.c ****                                                           BNO055_REMAP_X_SIGN_REG,
9476:Core/Src/bno055.c ****                                                           &data_u8r,
9477:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9478:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 19695              		.loc 1 9478 17 is_stmt 1 view .LVU5589
 19696              		.loc 1 9478 20 is_stmt 0 view .LVU5590
 19697 003e 0446     		mov	r4, r0
 19698 0040 F0B9     		cbnz	r0, .L1455
9479:Core/Src/bno055.c ****                 {
9480:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_X_SIGN, remap_x_sign_u8);
 19699              		.loc 1 9480 21 is_stmt 1 view .LVU5591
 19700              		.loc 1 9480 32 is_stmt 0 view .LVU5592
 19701 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19702 0046 A800     		lsls	r0, r5, #2
 19703              	.LVL2490:
 19704              		.loc 1 9480 32 view .LVU5593
 19705 0048 00F00400 		and	r0, r0, #4
 19706 004c 23F00403 		bic	r3, r3, #4
 19707 0050 0343     		orrs	r3, r3, r0
 19708              		.loc 1 9480 30 view .LVU5594
 19709 0052 8DF80730 		strb	r3, [sp, #7]
9481:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 19710              		.loc 1 9481 21 is_stmt 1 view .LVU5595
 19711              		.loc 1 9481 41 is_stmt 0 view .LVU5596
 19712 0056 134B     		ldr	r3, .L1463
 19713 0058 1868     		ldr	r0, [r3]
 19714 005a C568     		ldr	r5, [r0, #12]
 19715              		.loc 1 9481 33 view .LVU5597
 19716 005c 0123     		movs	r3, #1
 19717 005e 0DF10702 		add	r2, sp, #7
 19718 0062 4221     		movs	r1, #66
 19719 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19720 0066 A847     		blx	r5
 19721              	.LVL2491:
 19722              		.loc 1 9481 30 view .LVU5598
 19723 0068 54FA80F0 		uxtab	r0, r4, r0
 19724 006c 44B2     		sxtb	r4, r0
 19725              	.LVL2492:
ARM GAS  /tmp/ccOloYeZ.s 			page 563


 19726              		.loc 1 9481 30 view .LVU5599
 19727 006e 07E0     		b	.L1455
 19728              	.LVL2493:
 19729              	.L1461:
9469:Core/Src/bno055.c ****             }
 19730              		.loc 1 9469 17 is_stmt 1 view .LVU5600
9469:Core/Src/bno055.c ****             }
 19731              		.loc 1 9469 28 is_stmt 0 view .LVU5601
 19732 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 19733              	.LVL2494:
9469:Core/Src/bno055.c ****             }
 19734              		.loc 1 9469 25 view .LVU5602
 19735 0074 54FA80F4 		uxtab	r4, r4, r0
 19736 0078 64B2     		sxtb	r4, r4
 19737              	.LVL2495:
9469:Core/Src/bno055.c ****             }
 19738              		.loc 1 9469 25 view .LVU5603
 19739 007a D6E7     		b	.L1456
 19740              	.LVL2496:
 19741              	.L1458:
9482:Core/Src/bno055.c ****                                                                 BNO055_REMAP_X_SIGN_REG,
9483:Core/Src/bno055.c ****                                                                 &data_u8r,
9484:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9485:Core/Src/bno055.c ****                 }
9486:Core/Src/bno055.c ****             }
9487:Core/Src/bno055.c ****             else
9488:Core/Src/bno055.c ****             {
9489:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9490:Core/Src/bno055.c ****             }
9491:Core/Src/bno055.c ****         }
9492:Core/Src/bno055.c ****         else
9493:Core/Src/bno055.c ****         {
9494:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 19742              		.loc 1 9494 22 view .LVU5604
 19743 007c 4FF0FF34 		mov	r4, #-1
 19744              	.LVL2497:
 19745              	.L1455:
9495:Core/Src/bno055.c ****         }
9496:Core/Src/bno055.c ****     }
9497:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19746              		.loc 1 9497 5 is_stmt 1 view .LVU5605
 19747              		.loc 1 9497 24 is_stmt 0 view .LVU5606
 19748 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 19749              		.loc 1 9497 8 view .LVU5607
 19750 0084 28B9     		cbnz	r0, .L1462
 19751              	.LVL2498:
 19752              	.L1454:
9498:Core/Src/bno055.c ****     {
9499:Core/Src/bno055.c ****         /* set the operation mode
9500:Core/Src/bno055.c ****          * of previous operation mode*/
9501:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9502:Core/Src/bno055.c ****     }
9503:Core/Src/bno055.c **** 
9504:Core/Src/bno055.c ****     return com_rslt;
9505:Core/Src/bno055.c **** }
 19753              		.loc 1 9505 1 view .LVU5608
 19754 0086 2046     		mov	r0, r4
ARM GAS  /tmp/ccOloYeZ.s 			page 564


 19755 0088 03B0     		add	sp, sp, #12
 19756              		.cfi_remember_state
 19757              		.cfi_def_cfa_offset 12
 19758              		@ sp needed
 19759 008a 30BD     		pop	{r4, r5, pc}
 19760              	.LVL2499:
 19761              	.L1459:
 19762              		.cfi_restore_state
9489:Core/Src/bno055.c ****             }
 19763              		.loc 1 9489 26 view .LVU5609
 19764 008c 4FF0FF34 		mov	r4, #-1
 19765              	.LVL2500:
9489:Core/Src/bno055.c ****             }
 19766              		.loc 1 9489 26 view .LVU5610
 19767 0090 F6E7     		b	.L1455
 19768              	.LVL2501:
 19769              	.L1462:
9501:Core/Src/bno055.c ****     }
 19770              		.loc 1 9501 9 is_stmt 1 view .LVU5611
9501:Core/Src/bno055.c ****     }
 19771              		.loc 1 9501 21 is_stmt 0 view .LVU5612
 19772 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 19773              	.LVL2502:
9501:Core/Src/bno055.c ****     }
 19774              		.loc 1 9501 18 view .LVU5613
 19775 0096 54FA80F0 		uxtab	r0, r4, r0
 19776 009a 44B2     		sxtb	r4, r0
 19777              	.LVL2503:
9501:Core/Src/bno055.c ****     }
 19778              		.loc 1 9501 18 view .LVU5614
 19779 009c F3E7     		b	.L1454
 19780              	.LVL2504:
 19781              	.L1457:
9457:Core/Src/bno055.c ****     }
 19782              		.loc 1 9457 16 view .LVU5615
 19783 009e 6FF07E04 		mvn	r4, #126
 19784 00a2 F0E7     		b	.L1454
 19785              	.L1464:
 19786              		.align	2
 19787              	.L1463:
 19788 00a4 00000000 		.word	p_bno055
 19789              		.cfi_endproc
 19790              	.LFE162:
 19792              		.section	.text.bno055_get_remap_y_sign,"ax",%progbits
 19793              		.align	1
 19794              		.global	bno055_get_remap_y_sign
 19795              		.syntax unified
 19796              		.thumb
 19797              		.thumb_func
 19799              	bno055_get_remap_y_sign:
 19800              	.LVL2505:
 19801              	.LFB163:
9506:Core/Src/bno055.c **** 
9507:Core/Src/bno055.c **** /*!
9508:Core/Src/bno055.c ****  *  @brief This API used to read the y-axis remap
9509:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 1
9510:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 565


9511:Core/Src/bno055.c ****  *  @param remap_y_sign_u8 : The value of y-axis remap sign
9512:Core/Src/bno055.c ****  *
9513:Core/Src/bno055.c ****  *    remap_y_sign_u8  |   result
9514:Core/Src/bno055.c ****  *   ------------------- |--------------------
9515:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9516:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9517:Core/Src/bno055.c ****  *
9518:Core/Src/bno055.c ****  *  @return results of bus communication function
9519:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9520:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9521:Core/Src/bno055.c ****  *
9522:Core/Src/bno055.c ****  */
9523:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_remap_y_sign(u8 *remap_y_sign_u8)
9524:Core/Src/bno055.c **** {
 19802              		.loc 1 9524 1 is_stmt 1 view -0
 19803              		.cfi_startproc
 19804              		@ args = 0, pretend = 0, frame = 8
 19805              		@ frame_needed = 0, uses_anonymous_args = 0
 19806              		.loc 1 9524 1 is_stmt 0 view .LVU5617
 19807 0000 30B5     		push	{r4, r5, lr}
 19808              		.cfi_def_cfa_offset 12
 19809              		.cfi_offset 4, -12
 19810              		.cfi_offset 5, -8
 19811              		.cfi_offset 14, -4
 19812 0002 83B0     		sub	sp, sp, #12
 19813              		.cfi_def_cfa_offset 24
9525:Core/Src/bno055.c ****     /* Variable used to return value of
9526:Core/Src/bno055.c ****      * communication routine*/
9527:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19814              		.loc 1 9527 5 is_stmt 1 view .LVU5618
 19815              	.LVL2506:
9528:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19816              		.loc 1 9528 5 view .LVU5619
 19817              		.loc 1 9528 8 is_stmt 0 view .LVU5620
 19818 0004 0023     		movs	r3, #0
 19819 0006 8DF80730 		strb	r3, [sp, #7]
9529:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19820              		.loc 1 9529 5 is_stmt 1 view .LVU5621
 19821              	.LVL2507:
9530:Core/Src/bno055.c **** 
9531:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9532:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19822              		.loc 1 9532 5 view .LVU5622
 19823              		.loc 1 9532 18 is_stmt 0 view .LVU5623
 19824 000a 134B     		ldr	r3, .L1473
 19825 000c 1B68     		ldr	r3, [r3]
 19826              		.loc 1 9532 8 view .LVU5624
 19827 000e E3B1     		cbz	r3, .L1469
 19828 0010 0446     		mov	r4, r0
9533:Core/Src/bno055.c ****     {
9534:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9535:Core/Src/bno055.c ****     }
9536:Core/Src/bno055.c ****     else
9537:Core/Src/bno055.c ****     {
9538:Core/Src/bno055.c ****         /*condition check for page, y-axis remap sign is
9539:Core/Src/bno055.c ****          * available in the page zero*/
9540:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
ARM GAS  /tmp/ccOloYeZ.s 			page 566


 19829              		.loc 1 9540 9 is_stmt 1 view .LVU5625
 19830              		.loc 1 9540 21 is_stmt 0 view .LVU5626
 19831 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19832              		.loc 1 9540 12 view .LVU5627
 19833 0014 9BB9     		cbnz	r3, .L1472
 19834              	.LVL2508:
 19835              	.L1467:
9541:Core/Src/bno055.c ****         {
9542:Core/Src/bno055.c ****             /* Write the page zero*/
9543:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9544:Core/Src/bno055.c ****         }
9545:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 19836              		.loc 1 9545 53 discriminator 1 view .LVU5628
 19837 0016 104B     		ldr	r3, .L1473
 19838 0018 1B68     		ldr	r3, [r3]
 19839 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19840              		.loc 1 9545 41 discriminator 1 view .LVU5629
 19841 001c C3B9     		cbnz	r3, .L1470
 19842              	.L1468:
9546:Core/Src/bno055.c ****         {
9547:Core/Src/bno055.c ****             /* Read the value of y-axis remap sign*/
9548:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19843              		.loc 1 9548 13 is_stmt 1 view .LVU5630
 19844              		.loc 1 9548 32 is_stmt 0 view .LVU5631
 19845 001e 0E4B     		ldr	r3, .L1473
 19846 0020 1868     		ldr	r0, [r3]
 19847 0022 0569     		ldr	r5, [r0, #16]
 19848              		.loc 1 9548 24 view .LVU5632
 19849 0024 0123     		movs	r3, #1
 19850 0026 0DF10702 		add	r2, sp, #7
 19851 002a 4221     		movs	r1, #66
 19852 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19853 002e A847     		blx	r5
 19854              	.LVL2509:
9549:Core/Src/bno055.c ****                                                       BNO055_REMAP_Y_SIGN_REG,
9550:Core/Src/bno055.c ****                                                       &data_u8r,
9551:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
9552:Core/Src/bno055.c ****             *remap_y_sign_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_REMAP_Y_SIGN);
 19855              		.loc 1 9552 13 is_stmt 1 view .LVU5633
 19856              		.loc 1 9552 32 is_stmt 0 view .LVU5634
 19857 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19858 0034 C3F34003 		ubfx	r3, r3, #1, #1
 19859              		.loc 1 9552 30 view .LVU5635
 19860 0038 2370     		strb	r3, [r4]
 19861              	.LVL2510:
 19862              	.L1466:
9553:Core/Src/bno055.c ****         }
9554:Core/Src/bno055.c ****         else
9555:Core/Src/bno055.c ****         {
9556:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9557:Core/Src/bno055.c ****         }
9558:Core/Src/bno055.c ****     }
9559:Core/Src/bno055.c **** 
9560:Core/Src/bno055.c ****     return com_rslt;
9561:Core/Src/bno055.c **** }
 19863              		.loc 1 9561 1 view .LVU5636
 19864 003a 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccOloYeZ.s 			page 567


 19865              		.cfi_remember_state
 19866              		.cfi_def_cfa_offset 12
 19867              		@ sp needed
 19868 003c 30BD     		pop	{r4, r5, pc}
 19869              	.LVL2511:
 19870              	.L1472:
 19871              		.cfi_restore_state
9543:Core/Src/bno055.c ****         }
 19872              		.loc 1 9543 13 is_stmt 1 view .LVU5637
9543:Core/Src/bno055.c ****         }
 19873              		.loc 1 9543 23 is_stmt 0 view .LVU5638
 19874 003e 0020     		movs	r0, #0
 19875              	.LVL2512:
9543:Core/Src/bno055.c ****         }
 19876              		.loc 1 9543 23 view .LVU5639
 19877 0040 FFF7FEFF 		bl	bno055_write_page_id
 19878              	.LVL2513:
9545:Core/Src/bno055.c ****         {
 19879              		.loc 1 9545 9 is_stmt 1 view .LVU5640
9545:Core/Src/bno055.c ****         {
 19880              		.loc 1 9545 12 is_stmt 0 view .LVU5641
 19881 0044 0028     		cmp	r0, #0
 19882 0046 EAD0     		beq	.L1468
 19883 0048 E5E7     		b	.L1467
 19884              	.LVL2514:
 19885              	.L1469:
9534:Core/Src/bno055.c ****     }
 19886              		.loc 1 9534 16 view .LVU5642
 19887 004a 6FF07E00 		mvn	r0, #126
 19888              	.LVL2515:
9534:Core/Src/bno055.c ****     }
 19889              		.loc 1 9534 16 view .LVU5643
 19890 004e F4E7     		b	.L1466
 19891              	.LVL2516:
 19892              	.L1470:
9556:Core/Src/bno055.c ****         }
 19893              		.loc 1 9556 22 view .LVU5644
 19894 0050 4FF0FF30 		mov	r0, #-1
 19895 0054 F1E7     		b	.L1466
 19896              	.L1474:
 19897 0056 00BF     		.align	2
 19898              	.L1473:
 19899 0058 00000000 		.word	p_bno055
 19900              		.cfi_endproc
 19901              	.LFE163:
 19903              		.section	.text.bno055_set_remap_y_sign,"ax",%progbits
 19904              		.align	1
 19905              		.global	bno055_set_remap_y_sign
 19906              		.syntax unified
 19907              		.thumb
 19908              		.thumb_func
 19910              	bno055_set_remap_y_sign:
 19911              	.LVL2517:
 19912              	.LFB164:
9562:Core/Src/bno055.c **** 
9563:Core/Src/bno055.c **** /*!
9564:Core/Src/bno055.c ****  *  @brief This API used to write the y-axis remap
ARM GAS  /tmp/ccOloYeZ.s 			page 568


9565:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 1
9566:Core/Src/bno055.c ****  *
9567:Core/Src/bno055.c ****  *  @param remap_y_sign_u8 : The value of y-axis remap sign
9568:Core/Src/bno055.c ****  *
9569:Core/Src/bno055.c ****  *    remap_y_sign_u8  |   result
9570:Core/Src/bno055.c ****  *   ------------------- |--------------------
9571:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9572:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9573:Core/Src/bno055.c ****  *
9574:Core/Src/bno055.c ****  *  @return results of bus communication function
9575:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9576:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9577:Core/Src/bno055.c ****  *
9578:Core/Src/bno055.c ****  */
9579:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_remap_y_sign(u8 remap_y_sign_u8)
9580:Core/Src/bno055.c **** {
 19913              		.loc 1 9580 1 is_stmt 1 view -0
 19914              		.cfi_startproc
 19915              		@ args = 0, pretend = 0, frame = 8
 19916              		@ frame_needed = 0, uses_anonymous_args = 0
 19917              		.loc 1 9580 1 is_stmt 0 view .LVU5646
 19918 0000 30B5     		push	{r4, r5, lr}
 19919              		.cfi_def_cfa_offset 12
 19920              		.cfi_offset 4, -12
 19921              		.cfi_offset 5, -8
 19922              		.cfi_offset 14, -4
 19923 0002 83B0     		sub	sp, sp, #12
 19924              		.cfi_def_cfa_offset 24
9581:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19925              		.loc 1 9581 5 is_stmt 1 view .LVU5647
 19926              	.LVL2518:
9582:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19927              		.loc 1 9582 5 view .LVU5648
 19928              		.loc 1 9582 8 is_stmt 0 view .LVU5649
 19929 0004 0023     		movs	r3, #0
 19930 0006 8DF80730 		strb	r3, [sp, #7]
9583:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 19931              		.loc 1 9583 5 is_stmt 1 view .LVU5650
 19932              		.loc 1 9583 8 is_stmt 0 view .LVU5651
 19933 000a 8DF80630 		strb	r3, [sp, #6]
9584:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19934              		.loc 1 9584 5 is_stmt 1 view .LVU5652
 19935              	.LVL2519:
9585:Core/Src/bno055.c **** 
9586:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9587:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19936              		.loc 1 9587 5 view .LVU5653
 19937              		.loc 1 9587 18 is_stmt 0 view .LVU5654
 19938 000e 254B     		ldr	r3, .L1485
 19939 0010 1B68     		ldr	r3, [r3]
 19940              		.loc 1 9587 8 view .LVU5655
 19941 0012 002B     		cmp	r3, #0
 19942 0014 43D0     		beq	.L1479
 19943 0016 0546     		mov	r5, r0
9588:Core/Src/bno055.c ****     {
9589:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9590:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccOloYeZ.s 			page 569


9591:Core/Src/bno055.c ****     else
9592:Core/Src/bno055.c ****     {
9593:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9594:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9595:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9596:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 19944              		.loc 1 9596 9 is_stmt 1 view .LVU5656
 19945              		.loc 1 9596 19 is_stmt 0 view .LVU5657
 19946 0018 0DF10600 		add	r0, sp, #6
 19947              	.LVL2520:
 19948              		.loc 1 9596 19 view .LVU5658
 19949 001c FFF7FEFF 		bl	bno055_get_operation_mode
 19950              	.LVL2521:
9597:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 19951              		.loc 1 9597 9 is_stmt 1 view .LVU5659
 19952              		.loc 1 9597 12 is_stmt 0 view .LVU5660
 19953 0020 0446     		mov	r4, r0
 19954 0022 58BB     		cbnz	r0, .L1480
9598:Core/Src/bno055.c ****         {
9599:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19955              		.loc 1 9599 13 is_stmt 1 view .LVU5661
 19956              		.loc 1 9599 32 is_stmt 0 view .LVU5662
 19957 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 19958              		.loc 1 9599 16 view .LVU5663
 19959 0028 13BB     		cbnz	r3, .L1483
 19960              	.LVL2522:
 19961              	.L1478:
9600:Core/Src/bno055.c ****             {
9601:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9602:Core/Src/bno055.c ****             }
9603:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 19962              		.loc 1 9603 13 is_stmt 1 view .LVU5664
 19963              		.loc 1 9603 16 is_stmt 0 view .LVU5665
 19964 002a 7CBB     		cbnz	r4, .L1481
9604:Core/Src/bno055.c ****             {
9605:Core/Src/bno055.c ****                 /* Write the value of y-axis remap sign*/
9606:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19965              		.loc 1 9606 17 is_stmt 1 view .LVU5666
 19966              		.loc 1 9606 36 is_stmt 0 view .LVU5667
 19967 002c 1D4B     		ldr	r3, .L1485
 19968 002e 1868     		ldr	r0, [r3]
 19969 0030 0469     		ldr	r4, [r0, #16]
 19970              	.LVL2523:
 19971              		.loc 1 9606 28 view .LVU5668
 19972 0032 0123     		movs	r3, #1
 19973 0034 0DF10702 		add	r2, sp, #7
 19974 0038 4221     		movs	r1, #66
 19975 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19976 003c A047     		blx	r4
 19977              	.LVL2524:
9607:Core/Src/bno055.c ****                                                           BNO055_REMAP_Y_SIGN_REG,
9608:Core/Src/bno055.c ****                                                           &data_u8r,
9609:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9610:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 19978              		.loc 1 9610 17 is_stmt 1 view .LVU5669
 19979              		.loc 1 9610 20 is_stmt 0 view .LVU5670
 19980 003e 0446     		mov	r4, r0
ARM GAS  /tmp/ccOloYeZ.s 			page 570


 19981 0040 F0B9     		cbnz	r0, .L1477
9611:Core/Src/bno055.c ****                 {
9612:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_Y_SIGN, remap_y_sign_u8);
 19982              		.loc 1 9612 21 is_stmt 1 view .LVU5671
 19983              		.loc 1 9612 32 is_stmt 0 view .LVU5672
 19984 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19985 0046 6800     		lsls	r0, r5, #1
 19986              	.LVL2525:
 19987              		.loc 1 9612 32 view .LVU5673
 19988 0048 00F00200 		and	r0, r0, #2
 19989 004c 23F00203 		bic	r3, r3, #2
 19990 0050 0343     		orrs	r3, r3, r0
 19991              		.loc 1 9612 30 view .LVU5674
 19992 0052 8DF80730 		strb	r3, [sp, #7]
9613:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 19993              		.loc 1 9613 21 is_stmt 1 view .LVU5675
 19994              		.loc 1 9613 41 is_stmt 0 view .LVU5676
 19995 0056 134B     		ldr	r3, .L1485
 19996 0058 1868     		ldr	r0, [r3]
 19997 005a C568     		ldr	r5, [r0, #12]
 19998              		.loc 1 9613 33 view .LVU5677
 19999 005c 0123     		movs	r3, #1
 20000 005e 0DF10702 		add	r2, sp, #7
 20001 0062 4221     		movs	r1, #66
 20002 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20003 0066 A847     		blx	r5
 20004              	.LVL2526:
 20005              		.loc 1 9613 30 view .LVU5678
 20006 0068 54FA80F0 		uxtab	r0, r4, r0
 20007 006c 44B2     		sxtb	r4, r0
 20008              	.LVL2527:
 20009              		.loc 1 9613 30 view .LVU5679
 20010 006e 07E0     		b	.L1477
 20011              	.LVL2528:
 20012              	.L1483:
9601:Core/Src/bno055.c ****             }
 20013              		.loc 1 9601 17 is_stmt 1 view .LVU5680
9601:Core/Src/bno055.c ****             }
 20014              		.loc 1 9601 28 is_stmt 0 view .LVU5681
 20015 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 20016              	.LVL2529:
9601:Core/Src/bno055.c ****             }
 20017              		.loc 1 9601 25 view .LVU5682
 20018 0074 54FA80F4 		uxtab	r4, r4, r0
 20019 0078 64B2     		sxtb	r4, r4
 20020              	.LVL2530:
9601:Core/Src/bno055.c ****             }
 20021              		.loc 1 9601 25 view .LVU5683
 20022 007a D6E7     		b	.L1478
 20023              	.LVL2531:
 20024              	.L1480:
9614:Core/Src/bno055.c ****                                                                 BNO055_REMAP_Y_SIGN_REG,
9615:Core/Src/bno055.c ****                                                                 &data_u8r,
9616:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9617:Core/Src/bno055.c ****                 }
9618:Core/Src/bno055.c ****             }
9619:Core/Src/bno055.c ****             else
ARM GAS  /tmp/ccOloYeZ.s 			page 571


9620:Core/Src/bno055.c ****             {
9621:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9622:Core/Src/bno055.c ****             }
9623:Core/Src/bno055.c ****         }
9624:Core/Src/bno055.c ****         else
9625:Core/Src/bno055.c ****         {
9626:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 20025              		.loc 1 9626 22 view .LVU5684
 20026 007c 4FF0FF34 		mov	r4, #-1
 20027              	.LVL2532:
 20028              	.L1477:
9627:Core/Src/bno055.c ****         }
9628:Core/Src/bno055.c ****     }
9629:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20029              		.loc 1 9629 5 is_stmt 1 view .LVU5685
 20030              		.loc 1 9629 24 is_stmt 0 view .LVU5686
 20031 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 20032              		.loc 1 9629 8 view .LVU5687
 20033 0084 28B9     		cbnz	r0, .L1484
 20034              	.LVL2533:
 20035              	.L1476:
9630:Core/Src/bno055.c ****     {
9631:Core/Src/bno055.c ****         /* set the operation mode
9632:Core/Src/bno055.c ****          * of previous operation mode*/
9633:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9634:Core/Src/bno055.c ****     }
9635:Core/Src/bno055.c **** 
9636:Core/Src/bno055.c ****     return com_rslt;
9637:Core/Src/bno055.c **** }
 20036              		.loc 1 9637 1 view .LVU5688
 20037 0086 2046     		mov	r0, r4
 20038 0088 03B0     		add	sp, sp, #12
 20039              		.cfi_remember_state
 20040              		.cfi_def_cfa_offset 12
 20041              		@ sp needed
 20042 008a 30BD     		pop	{r4, r5, pc}
 20043              	.LVL2534:
 20044              	.L1481:
 20045              		.cfi_restore_state
9621:Core/Src/bno055.c ****             }
 20046              		.loc 1 9621 26 view .LVU5689
 20047 008c 4FF0FF34 		mov	r4, #-1
 20048              	.LVL2535:
9621:Core/Src/bno055.c ****             }
 20049              		.loc 1 9621 26 view .LVU5690
 20050 0090 F6E7     		b	.L1477
 20051              	.LVL2536:
 20052              	.L1484:
9633:Core/Src/bno055.c ****     }
 20053              		.loc 1 9633 9 is_stmt 1 view .LVU5691
9633:Core/Src/bno055.c ****     }
 20054              		.loc 1 9633 21 is_stmt 0 view .LVU5692
 20055 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 20056              	.LVL2537:
9633:Core/Src/bno055.c ****     }
 20057              		.loc 1 9633 18 view .LVU5693
 20058 0096 54FA80F0 		uxtab	r0, r4, r0
ARM GAS  /tmp/ccOloYeZ.s 			page 572


 20059 009a 44B2     		sxtb	r4, r0
 20060              	.LVL2538:
9633:Core/Src/bno055.c ****     }
 20061              		.loc 1 9633 18 view .LVU5694
 20062 009c F3E7     		b	.L1476
 20063              	.LVL2539:
 20064              	.L1479:
9589:Core/Src/bno055.c ****     }
 20065              		.loc 1 9589 16 view .LVU5695
 20066 009e 6FF07E04 		mvn	r4, #126
 20067 00a2 F0E7     		b	.L1476
 20068              	.L1486:
 20069              		.align	2
 20070              	.L1485:
 20071 00a4 00000000 		.word	p_bno055
 20072              		.cfi_endproc
 20073              	.LFE164:
 20075              		.section	.text.bno055_get_remap_z_sign,"ax",%progbits
 20076              		.align	1
 20077              		.global	bno055_get_remap_z_sign
 20078              		.syntax unified
 20079              		.thumb
 20080              		.thumb_func
 20082              	bno055_get_remap_z_sign:
 20083              	.LVL2540:
 20084              	.LFB165:
9638:Core/Src/bno055.c **** 
9639:Core/Src/bno055.c **** /*!
9640:Core/Src/bno055.c ****  *  @brief This API used to read the z-axis remap
9641:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 0
9642:Core/Src/bno055.c ****  *
9643:Core/Src/bno055.c ****  *  @param remap_z_sign_u8 : The value of z-axis remap sign
9644:Core/Src/bno055.c ****  *
9645:Core/Src/bno055.c ****  *    remap_z_sign_u8  |   result
9646:Core/Src/bno055.c ****  *   ------------------- |--------------------
9647:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9648:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9649:Core/Src/bno055.c ****  *
9650:Core/Src/bno055.c ****  *  @return results of bus communication function
9651:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9652:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9653:Core/Src/bno055.c ****  *
9654:Core/Src/bno055.c ****  */
9655:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_remap_z_sign(u8 *remap_z_sign_u8)
9656:Core/Src/bno055.c **** {
 20085              		.loc 1 9656 1 is_stmt 1 view -0
 20086              		.cfi_startproc
 20087              		@ args = 0, pretend = 0, frame = 8
 20088              		@ frame_needed = 0, uses_anonymous_args = 0
 20089              		.loc 1 9656 1 is_stmt 0 view .LVU5697
 20090 0000 30B5     		push	{r4, r5, lr}
 20091              		.cfi_def_cfa_offset 12
 20092              		.cfi_offset 4, -12
 20093              		.cfi_offset 5, -8
 20094              		.cfi_offset 14, -4
 20095 0002 83B0     		sub	sp, sp, #12
 20096              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccOloYeZ.s 			page 573


9657:Core/Src/bno055.c ****     /* Variable used to return value of
9658:Core/Src/bno055.c ****      * communication routine*/
9659:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20097              		.loc 1 9659 5 is_stmt 1 view .LVU5698
 20098              	.LVL2541:
9660:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20099              		.loc 1 9660 5 view .LVU5699
 20100              		.loc 1 9660 8 is_stmt 0 view .LVU5700
 20101 0004 0023     		movs	r3, #0
 20102 0006 8DF80730 		strb	r3, [sp, #7]
9661:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20103              		.loc 1 9661 5 is_stmt 1 view .LVU5701
 20104              	.LVL2542:
9662:Core/Src/bno055.c **** 
9663:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9664:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20105              		.loc 1 9664 5 view .LVU5702
 20106              		.loc 1 9664 18 is_stmt 0 view .LVU5703
 20107 000a 134B     		ldr	r3, .L1495
 20108 000c 1B68     		ldr	r3, [r3]
 20109              		.loc 1 9664 8 view .LVU5704
 20110 000e E3B1     		cbz	r3, .L1491
 20111 0010 0446     		mov	r4, r0
9665:Core/Src/bno055.c ****     {
9666:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9667:Core/Src/bno055.c ****     }
9668:Core/Src/bno055.c ****     else
9669:Core/Src/bno055.c ****     {
9670:Core/Src/bno055.c ****         /*condition check for page, z-axis remap sign is
9671:Core/Src/bno055.c ****          * available in the page zero*/
9672:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 20112              		.loc 1 9672 9 is_stmt 1 view .LVU5705
 20113              		.loc 1 9672 21 is_stmt 0 view .LVU5706
 20114 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20115              		.loc 1 9672 12 view .LVU5707
 20116 0014 9BB9     		cbnz	r3, .L1494
 20117              	.LVL2543:
 20118              	.L1489:
9673:Core/Src/bno055.c ****         {
9674:Core/Src/bno055.c ****             /* Write the page zero*/
9675:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9676:Core/Src/bno055.c ****         }
9677:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 20119              		.loc 1 9677 53 discriminator 1 view .LVU5708
 20120 0016 104B     		ldr	r3, .L1495
 20121 0018 1B68     		ldr	r3, [r3]
 20122 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20123              		.loc 1 9677 41 discriminator 1 view .LVU5709
 20124 001c C3B9     		cbnz	r3, .L1492
 20125              	.L1490:
9678:Core/Src/bno055.c ****         {
9679:Core/Src/bno055.c ****             /* Read the value of z-axis remap sign*/
9680:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20126              		.loc 1 9680 13 is_stmt 1 view .LVU5710
 20127              		.loc 1 9680 32 is_stmt 0 view .LVU5711
 20128 001e 0E4B     		ldr	r3, .L1495
 20129 0020 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccOloYeZ.s 			page 574


 20130 0022 0569     		ldr	r5, [r0, #16]
 20131              		.loc 1 9680 24 view .LVU5712
 20132 0024 0123     		movs	r3, #1
 20133 0026 0DF10702 		add	r2, sp, #7
 20134 002a 4221     		movs	r1, #66
 20135 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20136 002e A847     		blx	r5
 20137              	.LVL2544:
9681:Core/Src/bno055.c ****                                                       BNO055_REMAP_Z_SIGN_REG,
9682:Core/Src/bno055.c ****                                                       &data_u8r,
9683:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
9684:Core/Src/bno055.c ****             *remap_z_sign_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_REMAP_Z_SIGN);
 20138              		.loc 1 9684 13 is_stmt 1 view .LVU5713
 20139              		.loc 1 9684 32 is_stmt 0 view .LVU5714
 20140 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 20141 0034 03F00103 		and	r3, r3, #1
 20142              		.loc 1 9684 30 view .LVU5715
 20143 0038 2370     		strb	r3, [r4]
 20144              	.LVL2545:
 20145              	.L1488:
9685:Core/Src/bno055.c ****         }
9686:Core/Src/bno055.c ****         else
9687:Core/Src/bno055.c ****         {
9688:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9689:Core/Src/bno055.c ****         }
9690:Core/Src/bno055.c ****     }
9691:Core/Src/bno055.c **** 
9692:Core/Src/bno055.c ****     return com_rslt;
9693:Core/Src/bno055.c **** }
 20146              		.loc 1 9693 1 view .LVU5716
 20147 003a 03B0     		add	sp, sp, #12
 20148              		.cfi_remember_state
 20149              		.cfi_def_cfa_offset 12
 20150              		@ sp needed
 20151 003c 30BD     		pop	{r4, r5, pc}
 20152              	.LVL2546:
 20153              	.L1494:
 20154              		.cfi_restore_state
9675:Core/Src/bno055.c ****         }
 20155              		.loc 1 9675 13 is_stmt 1 view .LVU5717
9675:Core/Src/bno055.c ****         }
 20156              		.loc 1 9675 23 is_stmt 0 view .LVU5718
 20157 003e 0020     		movs	r0, #0
 20158              	.LVL2547:
9675:Core/Src/bno055.c ****         }
 20159              		.loc 1 9675 23 view .LVU5719
 20160 0040 FFF7FEFF 		bl	bno055_write_page_id
 20161              	.LVL2548:
9677:Core/Src/bno055.c ****         {
 20162              		.loc 1 9677 9 is_stmt 1 view .LVU5720
9677:Core/Src/bno055.c ****         {
 20163              		.loc 1 9677 12 is_stmt 0 view .LVU5721
 20164 0044 0028     		cmp	r0, #0
 20165 0046 EAD0     		beq	.L1490
 20166 0048 E5E7     		b	.L1489
 20167              	.LVL2549:
 20168              	.L1491:
ARM GAS  /tmp/ccOloYeZ.s 			page 575


9666:Core/Src/bno055.c ****     }
 20169              		.loc 1 9666 16 view .LVU5722
 20170 004a 6FF07E00 		mvn	r0, #126
 20171              	.LVL2550:
9666:Core/Src/bno055.c ****     }
 20172              		.loc 1 9666 16 view .LVU5723
 20173 004e F4E7     		b	.L1488
 20174              	.LVL2551:
 20175              	.L1492:
9688:Core/Src/bno055.c ****         }
 20176              		.loc 1 9688 22 view .LVU5724
 20177 0050 4FF0FF30 		mov	r0, #-1
 20178 0054 F1E7     		b	.L1488
 20179              	.L1496:
 20180 0056 00BF     		.align	2
 20181              	.L1495:
 20182 0058 00000000 		.word	p_bno055
 20183              		.cfi_endproc
 20184              	.LFE165:
 20186              		.section	.text.bno055_set_remap_z_sign,"ax",%progbits
 20187              		.align	1
 20188              		.global	bno055_set_remap_z_sign
 20189              		.syntax unified
 20190              		.thumb
 20191              		.thumb_func
 20193              	bno055_set_remap_z_sign:
 20194              	.LVL2552:
 20195              	.LFB166:
9694:Core/Src/bno055.c **** 
9695:Core/Src/bno055.c **** /*!
9696:Core/Src/bno055.c ****  *  @brief This API used to write the z-axis remap
9697:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 0
9698:Core/Src/bno055.c ****  *
9699:Core/Src/bno055.c ****  *  @param remap_z_sign_u8 : The value of z-axis remap sign
9700:Core/Src/bno055.c ****  *
9701:Core/Src/bno055.c ****  *    remap_z_sign_u8  |   result
9702:Core/Src/bno055.c ****  *   ------------------- |--------------------
9703:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9704:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9705:Core/Src/bno055.c ****  *
9706:Core/Src/bno055.c ****  *  @return results of bus communication function
9707:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9708:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9709:Core/Src/bno055.c ****  *
9710:Core/Src/bno055.c ****  */
9711:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_remap_z_sign(u8 remap_z_sign_u8)
9712:Core/Src/bno055.c **** {
 20196              		.loc 1 9712 1 is_stmt 1 view -0
 20197              		.cfi_startproc
 20198              		@ args = 0, pretend = 0, frame = 8
 20199              		@ frame_needed = 0, uses_anonymous_args = 0
 20200              		.loc 1 9712 1 is_stmt 0 view .LVU5726
 20201 0000 30B5     		push	{r4, r5, lr}
 20202              		.cfi_def_cfa_offset 12
 20203              		.cfi_offset 4, -12
 20204              		.cfi_offset 5, -8
 20205              		.cfi_offset 14, -4
ARM GAS  /tmp/ccOloYeZ.s 			page 576


 20206 0002 83B0     		sub	sp, sp, #12
 20207              		.cfi_def_cfa_offset 24
9713:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20208              		.loc 1 9713 5 is_stmt 1 view .LVU5727
 20209              	.LVL2553:
9714:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20210              		.loc 1 9714 5 view .LVU5728
 20211              		.loc 1 9714 8 is_stmt 0 view .LVU5729
 20212 0004 0023     		movs	r3, #0
 20213 0006 8DF80730 		strb	r3, [sp, #7]
9715:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 20214              		.loc 1 9715 5 is_stmt 1 view .LVU5730
 20215              		.loc 1 9715 8 is_stmt 0 view .LVU5731
 20216 000a 8DF80630 		strb	r3, [sp, #6]
9716:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20217              		.loc 1 9716 5 is_stmt 1 view .LVU5732
 20218              	.LVL2554:
9717:Core/Src/bno055.c **** 
9718:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9719:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20219              		.loc 1 9719 5 view .LVU5733
 20220              		.loc 1 9719 18 is_stmt 0 view .LVU5734
 20221 000e 254B     		ldr	r3, .L1507
 20222 0010 1B68     		ldr	r3, [r3]
 20223              		.loc 1 9719 8 view .LVU5735
 20224 0012 002B     		cmp	r3, #0
 20225 0014 42D0     		beq	.L1501
 20226 0016 0546     		mov	r5, r0
9720:Core/Src/bno055.c ****     {
9721:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9722:Core/Src/bno055.c ****     }
9723:Core/Src/bno055.c ****     else
9724:Core/Src/bno055.c ****     {
9725:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9726:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9727:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9728:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 20227              		.loc 1 9728 9 is_stmt 1 view .LVU5736
 20228              		.loc 1 9728 19 is_stmt 0 view .LVU5737
 20229 0018 0DF10600 		add	r0, sp, #6
 20230              	.LVL2555:
 20231              		.loc 1 9728 19 view .LVU5738
 20232 001c FFF7FEFF 		bl	bno055_get_operation_mode
 20233              	.LVL2556:
9729:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 20234              		.loc 1 9729 9 is_stmt 1 view .LVU5739
 20235              		.loc 1 9729 12 is_stmt 0 view .LVU5740
 20236 0020 0446     		mov	r4, r0
 20237 0022 50BB     		cbnz	r0, .L1502
9730:Core/Src/bno055.c ****         {
9731:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20238              		.loc 1 9731 13 is_stmt 1 view .LVU5741
 20239              		.loc 1 9731 32 is_stmt 0 view .LVU5742
 20240 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 20241              		.loc 1 9731 16 view .LVU5743
 20242 0028 0BBB     		cbnz	r3, .L1505
 20243              	.LVL2557:
ARM GAS  /tmp/ccOloYeZ.s 			page 577


 20244              	.L1500:
9732:Core/Src/bno055.c ****             {
9733:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9734:Core/Src/bno055.c ****             }
9735:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 20245              		.loc 1 9735 13 is_stmt 1 view .LVU5744
 20246              		.loc 1 9735 16 is_stmt 0 view .LVU5745
 20247 002a 74BB     		cbnz	r4, .L1503
9736:Core/Src/bno055.c ****             {
9737:Core/Src/bno055.c ****                 /* Write the value of z-axis remap sign*/
9738:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20248              		.loc 1 9738 17 is_stmt 1 view .LVU5746
 20249              		.loc 1 9738 36 is_stmt 0 view .LVU5747
 20250 002c 1D4B     		ldr	r3, .L1507
 20251 002e 1868     		ldr	r0, [r3]
 20252 0030 0469     		ldr	r4, [r0, #16]
 20253              	.LVL2558:
 20254              		.loc 1 9738 28 view .LVU5748
 20255 0032 0123     		movs	r3, #1
 20256 0034 0DF10702 		add	r2, sp, #7
 20257 0038 4221     		movs	r1, #66
 20258 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20259 003c A047     		blx	r4
 20260              	.LVL2559:
9739:Core/Src/bno055.c ****                                                           BNO055_REMAP_Z_SIGN_REG,
9740:Core/Src/bno055.c ****                                                           &data_u8r,
9741:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9742:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 20261              		.loc 1 9742 17 is_stmt 1 view .LVU5749
 20262              		.loc 1 9742 20 is_stmt 0 view .LVU5750
 20263 003e 0446     		mov	r4, r0
 20264 0040 E8B9     		cbnz	r0, .L1499
9743:Core/Src/bno055.c ****                 {
9744:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_Z_SIGN, remap_z_sign_u8);
 20265              		.loc 1 9744 21 is_stmt 1 view .LVU5751
 20266              		.loc 1 9744 32 is_stmt 0 view .LVU5752
 20267 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 20268              		.loc 1 9744 30 view .LVU5753
 20269 0046 23F00103 		bic	r3, r3, #1
 20270 004a 05F00100 		and	r0, r5, #1
 20271              	.LVL2560:
 20272              		.loc 1 9744 30 view .LVU5754
 20273 004e 0343     		orrs	r3, r3, r0
 20274 0050 8DF80730 		strb	r3, [sp, #7]
9745:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20275              		.loc 1 9745 21 is_stmt 1 view .LVU5755
 20276              		.loc 1 9745 41 is_stmt 0 view .LVU5756
 20277 0054 134B     		ldr	r3, .L1507
 20278 0056 1868     		ldr	r0, [r3]
 20279 0058 C568     		ldr	r5, [r0, #12]
 20280              		.loc 1 9745 33 view .LVU5757
 20281 005a 0123     		movs	r3, #1
 20282 005c 0DF10702 		add	r2, sp, #7
 20283 0060 4221     		movs	r1, #66
 20284 0062 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20285 0064 A847     		blx	r5
 20286              	.LVL2561:
ARM GAS  /tmp/ccOloYeZ.s 			page 578


 20287              		.loc 1 9745 30 view .LVU5758
 20288 0066 54FA80F0 		uxtab	r0, r4, r0
 20289 006a 44B2     		sxtb	r4, r0
 20290              	.LVL2562:
 20291              		.loc 1 9745 30 view .LVU5759
 20292 006c 07E0     		b	.L1499
 20293              	.LVL2563:
 20294              	.L1505:
9733:Core/Src/bno055.c ****             }
 20295              		.loc 1 9733 17 is_stmt 1 view .LVU5760
9733:Core/Src/bno055.c ****             }
 20296              		.loc 1 9733 28 is_stmt 0 view .LVU5761
 20297 006e FFF7FEFF 		bl	bno055_set_operation_mode
 20298              	.LVL2564:
9733:Core/Src/bno055.c ****             }
 20299              		.loc 1 9733 25 view .LVU5762
 20300 0072 54FA80F4 		uxtab	r4, r4, r0
 20301 0076 64B2     		sxtb	r4, r4
 20302              	.LVL2565:
9733:Core/Src/bno055.c ****             }
 20303              		.loc 1 9733 25 view .LVU5763
 20304 0078 D7E7     		b	.L1500
 20305              	.LVL2566:
 20306              	.L1502:
9746:Core/Src/bno055.c ****                                                                 BNO055_REMAP_Z_SIGN_REG,
9747:Core/Src/bno055.c ****                                                                 &data_u8r,
9748:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9749:Core/Src/bno055.c ****                 }
9750:Core/Src/bno055.c ****             }
9751:Core/Src/bno055.c ****             else
9752:Core/Src/bno055.c ****             {
9753:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9754:Core/Src/bno055.c ****             }
9755:Core/Src/bno055.c ****         }
9756:Core/Src/bno055.c ****         else
9757:Core/Src/bno055.c ****         {
9758:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 20307              		.loc 1 9758 22 view .LVU5764
 20308 007a 4FF0FF34 		mov	r4, #-1
 20309              	.LVL2567:
 20310              	.L1499:
9759:Core/Src/bno055.c ****         }
9760:Core/Src/bno055.c ****     }
9761:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20311              		.loc 1 9761 5 is_stmt 1 view .LVU5765
 20312              		.loc 1 9761 24 is_stmt 0 view .LVU5766
 20313 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 20314              		.loc 1 9761 8 view .LVU5767
 20315 0082 28B9     		cbnz	r0, .L1506
 20316              	.LVL2568:
 20317              	.L1498:
9762:Core/Src/bno055.c ****     {
9763:Core/Src/bno055.c ****         /* set the operation mode
9764:Core/Src/bno055.c ****          * of previous operation mode*/
9765:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9766:Core/Src/bno055.c ****     }
9767:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 579


9768:Core/Src/bno055.c ****     return com_rslt;
9769:Core/Src/bno055.c **** }
 20318              		.loc 1 9769 1 view .LVU5768
 20319 0084 2046     		mov	r0, r4
 20320 0086 03B0     		add	sp, sp, #12
 20321              		.cfi_remember_state
 20322              		.cfi_def_cfa_offset 12
 20323              		@ sp needed
 20324 0088 30BD     		pop	{r4, r5, pc}
 20325              	.LVL2569:
 20326              	.L1503:
 20327              		.cfi_restore_state
9753:Core/Src/bno055.c ****             }
 20328              		.loc 1 9753 26 view .LVU5769
 20329 008a 4FF0FF34 		mov	r4, #-1
 20330              	.LVL2570:
9753:Core/Src/bno055.c ****             }
 20331              		.loc 1 9753 26 view .LVU5770
 20332 008e F6E7     		b	.L1499
 20333              	.LVL2571:
 20334              	.L1506:
9765:Core/Src/bno055.c ****     }
 20335              		.loc 1 9765 9 is_stmt 1 view .LVU5771
9765:Core/Src/bno055.c ****     }
 20336              		.loc 1 9765 21 is_stmt 0 view .LVU5772
 20337 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 20338              	.LVL2572:
9765:Core/Src/bno055.c ****     }
 20339              		.loc 1 9765 18 view .LVU5773
 20340 0094 54FA80F0 		uxtab	r0, r4, r0
 20341 0098 44B2     		sxtb	r4, r0
 20342              	.LVL2573:
9765:Core/Src/bno055.c ****     }
 20343              		.loc 1 9765 18 view .LVU5774
 20344 009a F3E7     		b	.L1498
 20345              	.LVL2574:
 20346              	.L1501:
9721:Core/Src/bno055.c ****     }
 20347              		.loc 1 9721 16 view .LVU5775
 20348 009c 6FF07E04 		mvn	r4, #126
 20349 00a0 F0E7     		b	.L1498
 20350              	.L1508:
 20351 00a2 00BF     		.align	2
 20352              	.L1507:
 20353 00a4 00000000 		.word	p_bno055
 20354              		.cfi_endproc
 20355              	.LFE166:
 20357              		.section	.text.bno055_read_sic_matrix,"ax",%progbits
 20358              		.align	1
 20359              		.global	bno055_read_sic_matrix
 20360              		.syntax unified
 20361              		.thumb
 20362              		.thumb_func
 20364              	bno055_read_sic_matrix:
 20365              	.LVL2575:
 20366              	.LFB167:
9770:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 580


9771:Core/Src/bno055.c **** /*!
9772:Core/Src/bno055.c ****  *  @brief This API is used to read soft iron calibration matrix
9773:Core/Src/bno055.c ****  *  from the register 0x43 to 0x53 it is a 18 bytes of data
9774:Core/Src/bno055.c ****  *
9775:Core/Src/bno055.c ****  *  @param sic_matrix : The value of soft iron calibration matrix
9776:Core/Src/bno055.c ****  *
9777:Core/Src/bno055.c ****  *  sic_matrix         |           result
9778:Core/Src/bno055.c ****  * --------------------|----------------------------------
9779:Core/Src/bno055.c ****  *       sic_0         | soft iron calibration matrix zero
9780:Core/Src/bno055.c ****  *       sic_1         | soft iron calibration matrix one
9781:Core/Src/bno055.c ****  *       sic_2         | soft iron calibration matrix two
9782:Core/Src/bno055.c ****  *       sic_3         | soft iron calibration matrix three
9783:Core/Src/bno055.c ****  *       sic_4         | soft iron calibration matrix four
9784:Core/Src/bno055.c ****  *       sic_5         | soft iron calibration matrix five
9785:Core/Src/bno055.c ****  *       sic_6         | soft iron calibration matrix six
9786:Core/Src/bno055.c ****  *       sic_7         | soft iron calibration matrix seven
9787:Core/Src/bno055.c ****  *       sic_8         | soft iron calibration matrix eight
9788:Core/Src/bno055.c ****  *
9789:Core/Src/bno055.c ****  *
9790:Core/Src/bno055.c ****  *  @return results of bus communication function
9791:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9792:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9793:Core/Src/bno055.c ****  *
9794:Core/Src/bno055.c ****  *  @note : Each soft iron calibration matrix range from -32768 to +32767
9795:Core/Src/bno055.c ****  */
9796:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_sic_matrix(struct bno055_sic_matrix_t  *sic_matrix)
9797:Core/Src/bno055.c **** {
 20367              		.loc 1 9797 1 is_stmt 1 view -0
 20368              		.cfi_startproc
 20369              		@ args = 0, pretend = 0, frame = 24
 20370              		@ frame_needed = 0, uses_anonymous_args = 0
 20371              		.loc 1 9797 1 is_stmt 0 view .LVU5777
 20372 0000 30B5     		push	{r4, r5, lr}
 20373              		.cfi_def_cfa_offset 12
 20374              		.cfi_offset 4, -12
 20375              		.cfi_offset 5, -8
 20376              		.cfi_offset 14, -4
 20377 0002 87B0     		sub	sp, sp, #28
 20378              		.cfi_def_cfa_offset 40
 20379 0004 0446     		mov	r4, r0
9798:Core/Src/bno055.c ****     /* Variable used to return value of
9799:Core/Src/bno055.c ****      * communication routine*/
9800:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20380              		.loc 1 9800 5 is_stmt 1 view .LVU5778
 20381              	.LVL2576:
9801:Core/Src/bno055.c **** 
9802:Core/Src/bno055.c ****     /* Array holding the soft iron calibration matrix values
9803:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_0_LSB] - sic_0->LSB
9804:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_0_MSB] - sic_0->MSB
9805:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_1_LSB] - sic_1->LSB
9806:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_1_MSB] - sic_1->MSB
9807:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_2_LSB] - sic_2->LSB
9808:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_2_MSB] - sic_2->MSB
9809:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_3_LSB] - sic_3->LSB
9810:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_3_MSB] - sic_3->MSB
9811:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_4_LSB] - sic_4->LSB
9812:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_4_MSB] - sic_4->MSB
ARM GAS  /tmp/ccOloYeZ.s 			page 581


9813:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_5_LSB] - sic_5->LSB
9814:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_5_MSB] - sic_5->MSB
9815:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_6_LSB] - sic_6->LSB
9816:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_6_MSB] - sic_6->MSB
9817:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_7_LSB] - sic_7->LSB
9818:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_7_MSB] - sic_7->MSB
9819:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_8_LSB] - sic_8->LSB
9820:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_8_MSB] - sic_8->MSB
9821:Core/Src/bno055.c ****      */
9822:Core/Src/bno055.c ****     u8 data_u8[BNO055_SOFT_IRON_CALIBRATION_MATRIX_SIZE] = {
 20382              		.loc 1 9822 5 view .LVU5779
 20383              		.loc 1 9822 8 is_stmt 0 view .LVU5780
 20384 0006 0DF1040C 		add	ip, sp, #4
 20385 000a 364D     		ldr	r5, .L1518
 20386 000c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20387              	.LVL2577:
 20388              		.loc 1 9822 8 view .LVU5781
 20389 000e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 20390 0012 2B68     		ldr	r3, [r5]
 20391 0014 ACF80030 		strh	r3, [ip]	@ movhi
9823:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
9824:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
9825:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
9826:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
9827:Core/Src/bno055.c ****     };
9828:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20392              		.loc 1 9828 5 is_stmt 1 view .LVU5782
 20393              	.LVL2578:
9829:Core/Src/bno055.c **** 
9830:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9831:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20394              		.loc 1 9831 5 view .LVU5783
 20395              		.loc 1 9831 18 is_stmt 0 view .LVU5784
 20396 0018 334B     		ldr	r3, .L1518+4
 20397 001a 1B68     		ldr	r3, [r3]
 20398              		.loc 1 9831 8 view .LVU5785
 20399 001c 002B     		cmp	r3, #0
 20400 001e 58D0     		beq	.L1513
9832:Core/Src/bno055.c ****     {
9833:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9834:Core/Src/bno055.c ****     }
9835:Core/Src/bno055.c ****     else
9836:Core/Src/bno055.c ****     {
9837:Core/Src/bno055.c ****         /*condition check for page, soft iron calibration matrix is
9838:Core/Src/bno055.c ****          * available in the page zero*/
9839:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 20401              		.loc 1 9839 9 is_stmt 1 view .LVU5786
 20402              		.loc 1 9839 21 is_stmt 0 view .LVU5787
 20403 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20404              		.loc 1 9839 12 view .LVU5788
 20405 0022 002B     		cmp	r3, #0
 20406 0024 4FD1     		bne	.L1517
 20407              	.LVL2579:
 20408              	.L1511:
9840:Core/Src/bno055.c ****         {
9841:Core/Src/bno055.c ****             /* Write the page zero*/
9842:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
ARM GAS  /tmp/ccOloYeZ.s 			page 582


9843:Core/Src/bno055.c ****         }
9844:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 20409              		.loc 1 9844 53 discriminator 1 view .LVU5789
 20410 0026 304B     		ldr	r3, .L1518+4
 20411 0028 1B68     		ldr	r3, [r3]
 20412 002a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20413              		.loc 1 9844 41 discriminator 1 view .LVU5790
 20414 002c 002B     		cmp	r3, #0
 20415 002e 53D1     		bne	.L1514
 20416              	.L1512:
9845:Core/Src/bno055.c ****         {
9846:Core/Src/bno055.c ****             /* Read soft iron calibration matrix value
9847:Core/Src/bno055.c ****              * it is eighteen bytes of data */
9848:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20417              		.loc 1 9848 13 is_stmt 1 view .LVU5791
 20418              		.loc 1 9848 32 is_stmt 0 view .LVU5792
 20419 0030 2D4B     		ldr	r3, .L1518+4
 20420 0032 1868     		ldr	r0, [r3]
 20421 0034 0569     		ldr	r5, [r0, #16]
 20422              		.loc 1 9848 24 view .LVU5793
 20423 0036 1223     		movs	r3, #18
 20424 0038 01AA     		add	r2, sp, #4
 20425 003a 4321     		movs	r1, #67
 20426 003c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20427 003e A847     		blx	r5
 20428              	.LVL2580:
9849:Core/Src/bno055.c ****                                                       BNO055_SIC_MATRIX_0_LSB_REG,
9850:Core/Src/bno055.c ****                                                       data_u8,
9851:Core/Src/bno055.c ****                                                       BNO055_SOFT_IRON_CALIBRATION_MATRIX_SIZE);
9852:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 20429              		.loc 1 9852 13 is_stmt 1 view .LVU5794
 20430              		.loc 1 9852 16 is_stmt 0 view .LVU5795
 20431 0040 0028     		cmp	r0, #0
 20432 0042 4CD1     		bne	.L1515
9853:Core/Src/bno055.c ****             {
9854:Core/Src/bno055.c ****                 /*soft iron calibration matrix zero*/
9855:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_0_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 20433              		.loc 1 9855 17 is_stmt 1 view .LVU5796
9856:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_0_LSB
9857:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_0_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 20434              		.loc 1 9857 17 view .LVU5797
9858:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_0_MSB
9859:Core/Src/bno055.c ****                 sic_matrix->sic_0 =
 20435              		.loc 1 9859 17 view .LVU5798
9860:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_0_MSB])) << (BNO055_SHIFT_EIGH
 20436              		.loc 1 9860 34 is_stmt 0 view .LVU5799
 20437 0044 9DF90520 		ldrsb	r2, [sp, #5]
9861:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_0_LSB]));
 20438              		.loc 1 9861 35 view .LVU5800
 20439 0048 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
9860:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_0_MSB])) << (BNO055_SHIFT_EIGH
 20440              		.loc 1 9860 21 view .LVU5801
 20441 004c 43EA0223 		orr	r3, r3, r2, lsl #8
9859:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_0_MSB])) << (BNO055_SHIFT_EIGH
 20442              		.loc 1 9859 35 view .LVU5802
 20443 0050 2380     		strh	r3, [r4]	@ movhi
9862:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 583


9863:Core/Src/bno055.c ****                 /*soft iron calibration matrix one*/
9864:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_1_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 20444              		.loc 1 9864 17 is_stmt 1 view .LVU5803
9865:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_1_LSB
9866:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_1_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 20445              		.loc 1 9866 17 view .LVU5804
9867:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_1_MSB
9868:Core/Src/bno055.c ****                 sic_matrix->sic_1 =
 20446              		.loc 1 9868 17 view .LVU5805
9869:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_1_MSB])) << (BNO055_SHIFT_EIGH
 20447              		.loc 1 9869 34 is_stmt 0 view .LVU5806
 20448 0052 9DF90720 		ldrsb	r2, [sp, #7]
9870:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_1_LSB]));
 20449              		.loc 1 9870 35 view .LVU5807
 20450 0056 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
9869:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_1_MSB])) << (BNO055_SHIFT_EIGH
 20451              		.loc 1 9869 21 view .LVU5808
 20452 005a 43EA0223 		orr	r3, r3, r2, lsl #8
9868:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_1_MSB])) << (BNO055_SHIFT_EIGH
 20453              		.loc 1 9868 35 view .LVU5809
 20454 005e 6380     		strh	r3, [r4, #2]	@ movhi
9871:Core/Src/bno055.c **** 
9872:Core/Src/bno055.c ****                 /*soft iron calibration matrix two*/
9873:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_2_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 20455              		.loc 1 9873 17 is_stmt 1 view .LVU5810
9874:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_2_LSB
9875:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_2_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 20456              		.loc 1 9875 17 view .LVU5811
9876:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_2_MSB
9877:Core/Src/bno055.c ****                 sic_matrix->sic_2 =
 20457              		.loc 1 9877 17 view .LVU5812
9878:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_2_MSB])) << (BNO055_SHIFT_EIGH
 20458              		.loc 1 9878 34 is_stmt 0 view .LVU5813
 20459 0060 9DF90920 		ldrsb	r2, [sp, #9]
9879:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_2_LSB]));
 20460              		.loc 1 9879 35 view .LVU5814
 20461 0064 9DF80830 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
9878:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_2_MSB])) << (BNO055_SHIFT_EIGH
 20462              		.loc 1 9878 21 view .LVU5815
 20463 0068 43EA0223 		orr	r3, r3, r2, lsl #8
9877:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_2_MSB])) << (BNO055_SHIFT_EIGH
 20464              		.loc 1 9877 35 view .LVU5816
 20465 006c A380     		strh	r3, [r4, #4]	@ movhi
9880:Core/Src/bno055.c **** 
9881:Core/Src/bno055.c ****                 /*soft iron calibration matrix three*/
9882:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_3_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 20466              		.loc 1 9882 17 is_stmt 1 view .LVU5817
9883:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_3_LSB
9884:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_3_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 20467              		.loc 1 9884 17 view .LVU5818
9885:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_3_LSB
9886:Core/Src/bno055.c ****                 sic_matrix->sic_3 =
 20468              		.loc 1 9886 17 view .LVU5819
9887:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_3_MSB])) << (BNO055_SHIFT_EIGH
 20469              		.loc 1 9887 34 is_stmt 0 view .LVU5820
 20470 006e 9DF90B20 		ldrsb	r2, [sp, #11]
9888:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_3_LSB]));
ARM GAS  /tmp/ccOloYeZ.s 			page 584


 20471              		.loc 1 9888 35 view .LVU5821
 20472 0072 9DF80A30 		ldrb	r3, [sp, #10]	@ zero_extendqisi2
9887:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_3_MSB])) << (BNO055_SHIFT_EIGH
 20473              		.loc 1 9887 21 view .LVU5822
 20474 0076 43EA0223 		orr	r3, r3, r2, lsl #8
9886:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_3_MSB])) << (BNO055_SHIFT_EIGH
 20475              		.loc 1 9886 35 view .LVU5823
 20476 007a E380     		strh	r3, [r4, #6]	@ movhi
9889:Core/Src/bno055.c **** 
9890:Core/Src/bno055.c ****                 /*soft iron calibration matrix four*/
9891:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_4_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 20477              		.loc 1 9891 17 is_stmt 1 view .LVU5824
9892:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_4_LSB
9893:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_4_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 20478              		.loc 1 9893 17 view .LVU5825
9894:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_4_LSB
9895:Core/Src/bno055.c ****                 sic_matrix->sic_4 =
 20479              		.loc 1 9895 17 view .LVU5826
9896:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_4_MSB])) << (BNO055_SHIFT_EIGH
 20480              		.loc 1 9896 34 is_stmt 0 view .LVU5827
 20481 007c 9DF90D20 		ldrsb	r2, [sp, #13]
9897:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_4_LSB]));
 20482              		.loc 1 9897 35 view .LVU5828
 20483 0080 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
9896:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_4_MSB])) << (BNO055_SHIFT_EIGH
 20484              		.loc 1 9896 21 view .LVU5829
 20485 0084 43EA0223 		orr	r3, r3, r2, lsl #8
9895:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_4_MSB])) << (BNO055_SHIFT_EIGH
 20486              		.loc 1 9895 35 view .LVU5830
 20487 0088 2381     		strh	r3, [r4, #8]	@ movhi
9898:Core/Src/bno055.c **** 
9899:Core/Src/bno055.c ****                 /*soft iron calibration matrix five*/
9900:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_5_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 20488              		.loc 1 9900 17 is_stmt 1 view .LVU5831
9901:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_5_LSB
9902:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_5_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 20489              		.loc 1 9902 17 view .LVU5832
9903:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_5_LSB
9904:Core/Src/bno055.c ****                 sic_matrix->sic_5 =
 20490              		.loc 1 9904 17 view .LVU5833
9905:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_5_MSB])) << (BNO055_SHIFT_EIGH
 20491              		.loc 1 9905 34 is_stmt 0 view .LVU5834
 20492 008a 9DF90F20 		ldrsb	r2, [sp, #15]
9906:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_5_LSB]));
 20493              		.loc 1 9906 35 view .LVU5835
 20494 008e 9DF80E30 		ldrb	r3, [sp, #14]	@ zero_extendqisi2
9905:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_5_MSB])) << (BNO055_SHIFT_EIGH
 20495              		.loc 1 9905 21 view .LVU5836
 20496 0092 43EA0223 		orr	r3, r3, r2, lsl #8
9904:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_5_MSB])) << (BNO055_SHIFT_EIGH
 20497              		.loc 1 9904 35 view .LVU5837
 20498 0096 6381     		strh	r3, [r4, #10]	@ movhi
9907:Core/Src/bno055.c **** 
9908:Core/Src/bno055.c ****                 /*soft iron calibration matrix six*/
9909:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_6_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 20499              		.loc 1 9909 17 is_stmt 1 view .LVU5838
9910:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_6_LSB
ARM GAS  /tmp/ccOloYeZ.s 			page 585


9911:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_6_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 20500              		.loc 1 9911 17 view .LVU5839
9912:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_6_LSB
9913:Core/Src/bno055.c ****                 sic_matrix->sic_6 =
 20501              		.loc 1 9913 17 view .LVU5840
9914:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_6_MSB])) << (BNO055_SHIFT_EIGH
 20502              		.loc 1 9914 34 is_stmt 0 view .LVU5841
 20503 0098 9DF91120 		ldrsb	r2, [sp, #17]
9915:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_6_LSB]));
 20504              		.loc 1 9915 35 view .LVU5842
 20505 009c 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
9914:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_6_MSB])) << (BNO055_SHIFT_EIGH
 20506              		.loc 1 9914 21 view .LVU5843
 20507 00a0 43EA0223 		orr	r3, r3, r2, lsl #8
9913:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_6_MSB])) << (BNO055_SHIFT_EIGH
 20508              		.loc 1 9913 35 view .LVU5844
 20509 00a4 A381     		strh	r3, [r4, #12]	@ movhi
9916:Core/Src/bno055.c **** 
9917:Core/Src/bno055.c ****                 /*soft iron calibration matrix seven*/
9918:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_7_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 20510              		.loc 1 9918 17 is_stmt 1 view .LVU5845
9919:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_7_LSB
9920:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_7_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 20511              		.loc 1 9920 17 view .LVU5846
9921:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_7_LSB
9922:Core/Src/bno055.c ****                 sic_matrix->sic_7 =
 20512              		.loc 1 9922 17 view .LVU5847
9923:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_7_MSB])) << (BNO055_SHIFT_EIGH
 20513              		.loc 1 9923 34 is_stmt 0 view .LVU5848
 20514 00a6 9DF91320 		ldrsb	r2, [sp, #19]
9924:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_7_LSB]));
 20515              		.loc 1 9924 35 view .LVU5849
 20516 00aa 9DF81230 		ldrb	r3, [sp, #18]	@ zero_extendqisi2
9923:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_7_MSB])) << (BNO055_SHIFT_EIGH
 20517              		.loc 1 9923 21 view .LVU5850
 20518 00ae 43EA0223 		orr	r3, r3, r2, lsl #8
9922:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_7_MSB])) << (BNO055_SHIFT_EIGH
 20519              		.loc 1 9922 35 view .LVU5851
 20520 00b2 E381     		strh	r3, [r4, #14]	@ movhi
9925:Core/Src/bno055.c **** 
9926:Core/Src/bno055.c ****                 /*soft iron calibration matrix eight*/
9927:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_8_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 20521              		.loc 1 9927 17 is_stmt 1 view .LVU5852
9928:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_8_LSB
9929:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_8_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 20522              		.loc 1 9929 17 view .LVU5853
9930:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_8_LSB
9931:Core/Src/bno055.c ****                 sic_matrix->sic_8 =
 20523              		.loc 1 9931 17 view .LVU5854
9932:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_8_MSB])) << (BNO055_SHIFT_EIGH
 20524              		.loc 1 9932 34 is_stmt 0 view .LVU5855
 20525 00b4 9DF91520 		ldrsb	r2, [sp, #21]
9933:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_8_LSB]));
 20526              		.loc 1 9933 35 view .LVU5856
 20527 00b8 9DF81430 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
9932:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_8_MSB])) << (BNO055_SHIFT_EIGH
 20528              		.loc 1 9932 21 view .LVU5857
ARM GAS  /tmp/ccOloYeZ.s 			page 586


 20529 00bc 43EA0223 		orr	r3, r3, r2, lsl #8
9931:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_8_MSB])) << (BNO055_SHIFT_EIGH
 20530              		.loc 1 9931 35 view .LVU5858
 20531 00c0 2382     		strh	r3, [r4, #16]	@ movhi
 20532              	.LVL2581:
 20533              	.L1510:
9934:Core/Src/bno055.c ****             }
9935:Core/Src/bno055.c ****             else
9936:Core/Src/bno055.c ****             {
9937:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9938:Core/Src/bno055.c ****             }
9939:Core/Src/bno055.c ****         }
9940:Core/Src/bno055.c ****         else
9941:Core/Src/bno055.c ****         {
9942:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9943:Core/Src/bno055.c ****         }
9944:Core/Src/bno055.c ****     }
9945:Core/Src/bno055.c **** 
9946:Core/Src/bno055.c ****     return com_rslt;
9947:Core/Src/bno055.c **** }
 20534              		.loc 1 9947 1 view .LVU5859
 20535 00c2 07B0     		add	sp, sp, #28
 20536              		.cfi_remember_state
 20537              		.cfi_def_cfa_offset 12
 20538              		@ sp needed
 20539 00c4 30BD     		pop	{r4, r5, pc}
 20540              	.LVL2582:
 20541              	.L1517:
 20542              		.cfi_restore_state
9842:Core/Src/bno055.c ****         }
 20543              		.loc 1 9842 13 is_stmt 1 view .LVU5860
9842:Core/Src/bno055.c ****         }
 20544              		.loc 1 9842 23 is_stmt 0 view .LVU5861
 20545 00c6 0020     		movs	r0, #0
 20546 00c8 FFF7FEFF 		bl	bno055_write_page_id
 20547              	.LVL2583:
9844:Core/Src/bno055.c ****         {
 20548              		.loc 1 9844 9 is_stmt 1 view .LVU5862
9844:Core/Src/bno055.c ****         {
 20549              		.loc 1 9844 12 is_stmt 0 view .LVU5863
 20550 00cc 0028     		cmp	r0, #0
 20551 00ce AFD0     		beq	.L1512
 20552 00d0 A9E7     		b	.L1511
 20553              	.LVL2584:
 20554              	.L1513:
9833:Core/Src/bno055.c ****     }
 20555              		.loc 1 9833 16 view .LVU5864
 20556 00d2 6FF07E00 		mvn	r0, #126
 20557 00d6 F4E7     		b	.L1510
 20558              	.LVL2585:
 20559              	.L1514:
9942:Core/Src/bno055.c ****         }
 20560              		.loc 1 9942 22 view .LVU5865
 20561 00d8 4FF0FF30 		mov	r0, #-1
 20562 00dc F1E7     		b	.L1510
 20563              	.LVL2586:
 20564              	.L1515:
ARM GAS  /tmp/ccOloYeZ.s 			page 587


9937:Core/Src/bno055.c ****             }
 20565              		.loc 1 9937 26 view .LVU5866
 20566 00de 4FF0FF30 		mov	r0, #-1
 20567              	.LVL2587:
9937:Core/Src/bno055.c ****             }
 20568              		.loc 1 9937 26 view .LVU5867
 20569 00e2 EEE7     		b	.L1510
 20570              	.L1519:
 20571              		.align	2
 20572              	.L1518:
 20573 00e4 10000000 		.word	.LANCHOR0+16
 20574 00e8 00000000 		.word	p_bno055
 20575              		.cfi_endproc
 20576              	.LFE167:
 20578              		.section	.text.bno055_write_sic_matrix,"ax",%progbits
 20579              		.align	1
 20580              		.global	bno055_write_sic_matrix
 20581              		.syntax unified
 20582              		.thumb
 20583              		.thumb_func
 20585              	bno055_write_sic_matrix:
 20586              	.LVL2588:
 20587              	.LFB168:
9948:Core/Src/bno055.c **** 
9949:Core/Src/bno055.c **** /*!
9950:Core/Src/bno055.c ****  *  @brief This API is used to write soft iron calibration matrix
9951:Core/Src/bno055.c ****  *  from the register 0x43 to 0x53 it is a 18 bytes of data
9952:Core/Src/bno055.c ****  *
9953:Core/Src/bno055.c ****  *  @param sic_matrix : The value of soft iron calibration matrix
9954:Core/Src/bno055.c ****  *
9955:Core/Src/bno055.c ****  *  sic_matrix         |           result
9956:Core/Src/bno055.c ****  * --------------------|----------------------------------
9957:Core/Src/bno055.c ****  *       sic_0         | soft iron calibration matrix zero
9958:Core/Src/bno055.c ****  *       sic_1         | soft iron calibration matrix one
9959:Core/Src/bno055.c ****  *       sic_2         | soft iron calibration matrix two
9960:Core/Src/bno055.c ****  *       sic_3         | soft iron calibration matrix three
9961:Core/Src/bno055.c ****  *       sic_4         | soft iron calibration matrix four
9962:Core/Src/bno055.c ****  *       sic_5         | soft iron calibration matrix five
9963:Core/Src/bno055.c ****  *       sic_6         | soft iron calibration matrix six
9964:Core/Src/bno055.c ****  *       sic_7         | soft iron calibration matrix seven
9965:Core/Src/bno055.c ****  *       sic_8         | soft iron calibration matrix eight
9966:Core/Src/bno055.c ****  *
9967:Core/Src/bno055.c ****  *
9968:Core/Src/bno055.c ****  *  @return results of bus communication function
9969:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9970:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9971:Core/Src/bno055.c ****  *
9972:Core/Src/bno055.c ****  *  @note : Each soft iron calibration matrix range from -32768 to +32767
9973:Core/Src/bno055.c ****  */
9974:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_sic_matrix(struct bno055_sic_matrix_t  *sic_matrix)
9975:Core/Src/bno055.c **** {
 20588              		.loc 1 9975 1 is_stmt 1 view -0
 20589              		.cfi_startproc
 20590              		@ args = 0, pretend = 0, frame = 8
 20591              		@ frame_needed = 0, uses_anonymous_args = 0
 20592              		.loc 1 9975 1 is_stmt 0 view .LVU5869
 20593 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /tmp/ccOloYeZ.s 			page 588


 20594              		.cfi_def_cfa_offset 16
 20595              		.cfi_offset 4, -16
 20596              		.cfi_offset 5, -12
 20597              		.cfi_offset 6, -8
 20598              		.cfi_offset 14, -4
 20599 0002 82B0     		sub	sp, sp, #8
 20600              		.cfi_def_cfa_offset 24
9976:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20601              		.loc 1 9976 5 is_stmt 1 view .LVU5870
 20602              	.LVL2589:
9977:Core/Src/bno055.c ****     u8 data1_u8r = BNO055_INIT_VALUE;
 20603              		.loc 1 9977 5 view .LVU5871
9978:Core/Src/bno055.c ****     u8 data2_u8r = BNO055_INIT_VALUE;
 20604              		.loc 1 9978 5 view .LVU5872
 20605              		.loc 1 9978 8 is_stmt 0 view .LVU5873
 20606 0004 0023     		movs	r3, #0
 20607 0006 8DF80730 		strb	r3, [sp, #7]
9979:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 20608              		.loc 1 9979 5 is_stmt 1 view .LVU5874
 20609              		.loc 1 9979 8 is_stmt 0 view .LVU5875
 20610 000a 8DF80630 		strb	r3, [sp, #6]
9980:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20611              		.loc 1 9980 5 is_stmt 1 view .LVU5876
 20612              	.LVL2590:
9981:Core/Src/bno055.c **** 
9982:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9983:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20613              		.loc 1 9983 5 view .LVU5877
 20614              		.loc 1 9983 18 is_stmt 0 view .LVU5878
 20615 000e A74B     		ldr	r3, .L1547
 20616 0010 1B68     		ldr	r3, [r3]
 20617              		.loc 1 9983 8 view .LVU5879
 20618 0012 002B     		cmp	r3, #0
 20619 0014 00F04682 		beq	.L1541
 20620 0018 0546     		mov	r5, r0
9984:Core/Src/bno055.c ****     {
9985:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9986:Core/Src/bno055.c ****     }
9987:Core/Src/bno055.c ****     else
9988:Core/Src/bno055.c ****     {
9989:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9990:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9991:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9992:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 20621              		.loc 1 9992 9 is_stmt 1 view .LVU5880
 20622              		.loc 1 9992 19 is_stmt 0 view .LVU5881
 20623 001a 0DF10600 		add	r0, sp, #6
 20624              	.LVL2591:
 20625              		.loc 1 9992 19 view .LVU5882
 20626 001e FFF7FEFF 		bl	bno055_get_operation_mode
 20627              	.LVL2592:
9993:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 20628              		.loc 1 9993 9 is_stmt 1 view .LVU5883
 20629              		.loc 1 9993 12 is_stmt 0 view .LVU5884
 20630 0022 0446     		mov	r4, r0
 20631 0024 0028     		cmp	r0, #0
 20632 0026 40F02C82 		bne	.L1542
ARM GAS  /tmp/ccOloYeZ.s 			page 589


9994:Core/Src/bno055.c ****         {
9995:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20633              		.loc 1 9995 13 is_stmt 1 view .LVU5885
 20634              		.loc 1 9995 32 is_stmt 0 view .LVU5886
 20635 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 20636              		.loc 1 9995 16 view .LVU5887
 20637 002e 002B     		cmp	r3, #0
 20638 0030 40F02182 		bne	.L1545
 20639              	.LVL2593:
 20640              	.L1523:
9996:Core/Src/bno055.c ****             {
9997:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9998:Core/Src/bno055.c ****             }
9999:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 20641              		.loc 1 9999 13 is_stmt 1 view .LVU5888
 20642              		.loc 1 9999 16 is_stmt 0 view .LVU5889
 20643 0034 002C     		cmp	r4, #0
 20644 0036 40F02C82 		bne	.L1543
10000:Core/Src/bno055.c ****             {
10001:Core/Src/bno055.c ****                 /* write soft iron calibration
10002:Core/Src/bno055.c ****                  * matrix zero value*/
10003:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20645              		.loc 1 10003 17 is_stmt 1 view .LVU5890
 20646              		.loc 1 10003 36 is_stmt 0 view .LVU5891
 20647 003a 9C4B     		ldr	r3, .L1547
 20648 003c 1868     		ldr	r0, [r3]
 20649 003e 0469     		ldr	r4, [r0, #16]
 20650              	.LVL2594:
 20651              		.loc 1 10003 28 view .LVU5892
 20652 0040 0123     		movs	r3, #1
 20653 0042 0DF10702 		add	r2, sp, #7
 20654 0046 4321     		movs	r1, #67
 20655 0048 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20656 004a A047     		blx	r4
 20657              	.LVL2595:
10004:Core/Src/bno055.c ****                                                           BNO055_SIC_MATRIX_0_LSB_REG,
10005:Core/Src/bno055.c ****                                                           &data2_u8r,
10006:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
10007:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 20658              		.loc 1 10007 17 is_stmt 1 view .LVU5893
 20659              		.loc 1 10007 20 is_stmt 0 view .LVU5894
 20660 004c 0446     		mov	r4, r0
 20661 004e 78B9     		cbnz	r0, .L1524
10008:Core/Src/bno055.c ****                 {
10009:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_0 & BNO055_SIC_HEX_0_0_F_F_DATA));
 20662              		.loc 1 10009 21 is_stmt 1 view .LVU5895
 20663              		.loc 1 10009 49 is_stmt 0 view .LVU5896
 20664 0050 B5F90030 		ldrsh	r3, [r5]
 20665              	.LVL2596:
10010:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_0_LSB, data1_u8r);
 20666              		.loc 1 10010 21 is_stmt 1 view .LVU5897
 20667              		.loc 1 10010 31 is_stmt 0 view .LVU5898
 20668 0054 8DF80730 		strb	r3, [sp, #7]
10011:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20669              		.loc 1 10011 21 is_stmt 1 view .LVU5899
 20670              		.loc 1 10011 41 is_stmt 0 view .LVU5900
 20671 0058 944B     		ldr	r3, .L1547
ARM GAS  /tmp/ccOloYeZ.s 			page 590


 20672              	.LVL2597:
 20673              		.loc 1 10011 41 view .LVU5901
 20674 005a 1868     		ldr	r0, [r3]
 20675              	.LVL2598:
 20676              		.loc 1 10011 41 view .LVU5902
 20677 005c C668     		ldr	r6, [r0, #12]
 20678              		.loc 1 10011 33 view .LVU5903
 20679 005e 0123     		movs	r3, #1
 20680 0060 0DF10702 		add	r2, sp, #7
 20681              	.LVL2599:
 20682              		.loc 1 10011 33 view .LVU5904
 20683 0064 4321     		movs	r1, #67
 20684 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20685 0068 B047     		blx	r6
 20686              	.LVL2600:
 20687              		.loc 1 10011 30 view .LVU5905
 20688 006a 54FA80F0 		uxtab	r0, r4, r0
 20689 006e 44B2     		sxtb	r4, r0
 20690              	.LVL2601:
 20691              	.L1524:
10012:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_0_LSB_REG,
10013:Core/Src/bno055.c ****                                                                 &data2_u8r,
10014:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10015:Core/Src/bno055.c ****                 }
10016:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20692              		.loc 1 10016 17 is_stmt 1 view .LVU5906
 20693              		.loc 1 10016 37 is_stmt 0 view .LVU5907
 20694 0070 8E4B     		ldr	r3, .L1547
 20695 0072 1868     		ldr	r0, [r3]
 20696 0074 0669     		ldr	r6, [r0, #16]
 20697              		.loc 1 10016 29 view .LVU5908
 20698 0076 0123     		movs	r3, #1
 20699 0078 0DF10702 		add	r2, sp, #7
 20700 007c 4421     		movs	r1, #68
 20701 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20702 0080 B047     		blx	r6
 20703              	.LVL2602:
 20704              		.loc 1 10016 26 view .LVU5909
 20705 0082 54FA80F4 		uxtab	r4, r4, r0
 20706              	.LVL2603:
 20707              		.loc 1 10016 26 view .LVU5910
 20708 0086 E6B2     		uxtb	r6, r4
 20709 0088 64B2     		sxtb	r4, r4
 20710              	.LVL2604:
10017:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_0_MSB_REG,
10018:Core/Src/bno055.c ****                                                            &data2_u8r,
10019:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10020:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 20711              		.loc 1 10020 17 is_stmt 1 view .LVU5911
 20712              		.loc 1 10020 20 is_stmt 0 view .LVU5912
 20713 008a 7CB9     		cbnz	r4, .L1525
10021:Core/Src/bno055.c ****                 {
10022:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_0 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 20714              		.loc 1 10022 21 is_stmt 1 view .LVU5913
 20715              		.loc 1 10022 34 is_stmt 0 view .LVU5914
 20716 008c 95F90130 		ldrsb	r3, [r5, #1]
 20717              	.LVL2605:
ARM GAS  /tmp/ccOloYeZ.s 			page 591


10023:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_0_MSB, data1_u8r);
 20718              		.loc 1 10023 21 is_stmt 1 view .LVU5915
 20719              		.loc 1 10023 31 is_stmt 0 view .LVU5916
 20720 0090 8DF80730 		strb	r3, [sp, #7]
10024:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20721              		.loc 1 10024 21 is_stmt 1 view .LVU5917
 20722              		.loc 1 10024 41 is_stmt 0 view .LVU5918
 20723 0094 854B     		ldr	r3, .L1547
 20724              	.LVL2606:
 20725              		.loc 1 10024 41 view .LVU5919
 20726 0096 1868     		ldr	r0, [r3]
 20727 0098 C468     		ldr	r4, [r0, #12]
 20728              	.LVL2607:
 20729              		.loc 1 10024 33 view .LVU5920
 20730 009a 0123     		movs	r3, #1
 20731 009c 0DF10702 		add	r2, sp, #7
 20732              	.LVL2608:
 20733              		.loc 1 10024 33 view .LVU5921
 20734 00a0 4421     		movs	r1, #68
 20735 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20736 00a4 A047     		blx	r4
 20737              	.LVL2609:
 20738              		.loc 1 10024 30 view .LVU5922
 20739 00a6 56FA80F4 		uxtab	r4, r6, r0
 20740 00aa 64B2     		sxtb	r4, r4
 20741              	.LVL2610:
 20742              	.L1525:
10025:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_0_MSB_REG,
10026:Core/Src/bno055.c ****                                                                 &data2_u8r,
10027:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10028:Core/Src/bno055.c ****                 }
10029:Core/Src/bno055.c **** 
10030:Core/Src/bno055.c ****                 /* write soft iron calibration
10031:Core/Src/bno055.c ****                  * matrix one value*/
10032:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20743              		.loc 1 10032 17 is_stmt 1 view .LVU5923
 20744              		.loc 1 10032 37 is_stmt 0 view .LVU5924
 20745 00ac 7F4B     		ldr	r3, .L1547
 20746 00ae 1868     		ldr	r0, [r3]
 20747 00b0 0669     		ldr	r6, [r0, #16]
 20748              		.loc 1 10032 29 view .LVU5925
 20749 00b2 0123     		movs	r3, #1
 20750 00b4 0DF10702 		add	r2, sp, #7
 20751 00b8 4521     		movs	r1, #69
 20752 00ba 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20753 00bc B047     		blx	r6
 20754              	.LVL2611:
 20755              		.loc 1 10032 26 view .LVU5926
 20756 00be 54FA80F4 		uxtab	r4, r4, r0
 20757              	.LVL2612:
 20758              		.loc 1 10032 26 view .LVU5927
 20759 00c2 E6B2     		uxtb	r6, r4
 20760 00c4 64B2     		sxtb	r4, r4
 20761              	.LVL2613:
10033:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_1_LSB_REG,
10034:Core/Src/bno055.c ****                                                            &data2_u8r,
10035:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/ccOloYeZ.s 			page 592


10036:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 20762              		.loc 1 10036 17 is_stmt 1 view .LVU5928
 20763              		.loc 1 10036 20 is_stmt 0 view .LVU5929
 20764 00c6 7CB9     		cbnz	r4, .L1526
10037:Core/Src/bno055.c ****                 {
10038:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_1 & BNO055_SIC_HEX_0_0_F_F_DATA));
 20765              		.loc 1 10038 21 is_stmt 1 view .LVU5930
 20766              		.loc 1 10038 49 is_stmt 0 view .LVU5931
 20767 00c8 B5F90230 		ldrsh	r3, [r5, #2]
 20768              	.LVL2614:
10039:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_1_LSB, data1_u8r);
 20769              		.loc 1 10039 21 is_stmt 1 view .LVU5932
 20770              		.loc 1 10039 31 is_stmt 0 view .LVU5933
 20771 00cc 8DF80730 		strb	r3, [sp, #7]
10040:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20772              		.loc 1 10040 21 is_stmt 1 view .LVU5934
 20773              		.loc 1 10040 41 is_stmt 0 view .LVU5935
 20774 00d0 764B     		ldr	r3, .L1547
 20775              	.LVL2615:
 20776              		.loc 1 10040 41 view .LVU5936
 20777 00d2 1868     		ldr	r0, [r3]
 20778 00d4 C468     		ldr	r4, [r0, #12]
 20779              	.LVL2616:
 20780              		.loc 1 10040 33 view .LVU5937
 20781 00d6 0123     		movs	r3, #1
 20782 00d8 0DF10702 		add	r2, sp, #7
 20783              	.LVL2617:
 20784              		.loc 1 10040 33 view .LVU5938
 20785 00dc 4521     		movs	r1, #69
 20786 00de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20787 00e0 A047     		blx	r4
 20788              	.LVL2618:
 20789              		.loc 1 10040 30 view .LVU5939
 20790 00e2 56FA80F4 		uxtab	r4, r6, r0
 20791 00e6 64B2     		sxtb	r4, r4
 20792              	.LVL2619:
 20793              	.L1526:
10041:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_1_LSB_REG,
10042:Core/Src/bno055.c ****                                                                 &data2_u8r,
10043:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10044:Core/Src/bno055.c ****                 }
10045:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20794              		.loc 1 10045 17 is_stmt 1 view .LVU5940
 20795              		.loc 1 10045 37 is_stmt 0 view .LVU5941
 20796 00e8 704B     		ldr	r3, .L1547
 20797 00ea 1868     		ldr	r0, [r3]
 20798 00ec 0669     		ldr	r6, [r0, #16]
 20799              		.loc 1 10045 29 view .LVU5942
 20800 00ee 0123     		movs	r3, #1
 20801 00f0 0DF10702 		add	r2, sp, #7
 20802 00f4 4621     		movs	r1, #70
 20803 00f6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20804 00f8 B047     		blx	r6
 20805              	.LVL2620:
 20806              		.loc 1 10045 26 view .LVU5943
 20807 00fa 54FA80F4 		uxtab	r4, r4, r0
 20808              	.LVL2621:
ARM GAS  /tmp/ccOloYeZ.s 			page 593


 20809              		.loc 1 10045 26 view .LVU5944
 20810 00fe E6B2     		uxtb	r6, r4
 20811 0100 64B2     		sxtb	r4, r4
 20812              	.LVL2622:
10046:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_1_MSB_REG,
10047:Core/Src/bno055.c ****                                                            &data2_u8r,
10048:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10049:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 20813              		.loc 1 10049 17 is_stmt 1 view .LVU5945
 20814              		.loc 1 10049 20 is_stmt 0 view .LVU5946
 20815 0102 7CB9     		cbnz	r4, .L1527
10050:Core/Src/bno055.c ****                 {
10051:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_1 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 20816              		.loc 1 10051 21 is_stmt 1 view .LVU5947
 20817              		.loc 1 10051 34 is_stmt 0 view .LVU5948
 20818 0104 95F90330 		ldrsb	r3, [r5, #3]
 20819              	.LVL2623:
10052:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_1_MSB, data1_u8r);
 20820              		.loc 1 10052 21 is_stmt 1 view .LVU5949
 20821              		.loc 1 10052 31 is_stmt 0 view .LVU5950
 20822 0108 8DF80730 		strb	r3, [sp, #7]
10053:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20823              		.loc 1 10053 21 is_stmt 1 view .LVU5951
 20824              		.loc 1 10053 41 is_stmt 0 view .LVU5952
 20825 010c 674B     		ldr	r3, .L1547
 20826              	.LVL2624:
 20827              		.loc 1 10053 41 view .LVU5953
 20828 010e 1868     		ldr	r0, [r3]
 20829 0110 C468     		ldr	r4, [r0, #12]
 20830              	.LVL2625:
 20831              		.loc 1 10053 33 view .LVU5954
 20832 0112 0123     		movs	r3, #1
 20833 0114 0DF10702 		add	r2, sp, #7
 20834              	.LVL2626:
 20835              		.loc 1 10053 33 view .LVU5955
 20836 0118 4621     		movs	r1, #70
 20837 011a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20838 011c A047     		blx	r4
 20839              	.LVL2627:
 20840              		.loc 1 10053 30 view .LVU5956
 20841 011e 56FA80F4 		uxtab	r4, r6, r0
 20842 0122 64B2     		sxtb	r4, r4
 20843              	.LVL2628:
 20844              	.L1527:
10054:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_1_MSB_REG,
10055:Core/Src/bno055.c ****                                                                 &data2_u8r,
10056:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10057:Core/Src/bno055.c ****                 }
10058:Core/Src/bno055.c **** 
10059:Core/Src/bno055.c ****                 /* write soft iron calibration
10060:Core/Src/bno055.c ****                  * matrix two value*/
10061:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20845              		.loc 1 10061 17 is_stmt 1 view .LVU5957
 20846              		.loc 1 10061 37 is_stmt 0 view .LVU5958
 20847 0124 614B     		ldr	r3, .L1547
 20848 0126 1868     		ldr	r0, [r3]
 20849 0128 0669     		ldr	r6, [r0, #16]
ARM GAS  /tmp/ccOloYeZ.s 			page 594


 20850              		.loc 1 10061 29 view .LVU5959
 20851 012a 0123     		movs	r3, #1
 20852 012c 0DF10702 		add	r2, sp, #7
 20853 0130 4721     		movs	r1, #71
 20854 0132 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20855 0134 B047     		blx	r6
 20856              	.LVL2629:
 20857              		.loc 1 10061 26 view .LVU5960
 20858 0136 54FA80F4 		uxtab	r4, r4, r0
 20859              	.LVL2630:
 20860              		.loc 1 10061 26 view .LVU5961
 20861 013a E6B2     		uxtb	r6, r4
 20862 013c 64B2     		sxtb	r4, r4
 20863              	.LVL2631:
10062:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_2_LSB_REG,
10063:Core/Src/bno055.c ****                                                            &data2_u8r,
10064:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10065:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 20864              		.loc 1 10065 17 is_stmt 1 view .LVU5962
 20865              		.loc 1 10065 20 is_stmt 0 view .LVU5963
 20866 013e 7CB9     		cbnz	r4, .L1528
10066:Core/Src/bno055.c ****                 {
10067:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_2 & BNO055_SIC_HEX_0_0_F_F_DATA));
 20867              		.loc 1 10067 21 is_stmt 1 view .LVU5964
 20868              		.loc 1 10067 49 is_stmt 0 view .LVU5965
 20869 0140 B5F90430 		ldrsh	r3, [r5, #4]
 20870              	.LVL2632:
10068:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_2_LSB, data1_u8r);
 20871              		.loc 1 10068 21 is_stmt 1 view .LVU5966
 20872              		.loc 1 10068 31 is_stmt 0 view .LVU5967
 20873 0144 8DF80730 		strb	r3, [sp, #7]
10069:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20874              		.loc 1 10069 21 is_stmt 1 view .LVU5968
 20875              		.loc 1 10069 41 is_stmt 0 view .LVU5969
 20876 0148 584B     		ldr	r3, .L1547
 20877              	.LVL2633:
 20878              		.loc 1 10069 41 view .LVU5970
 20879 014a 1868     		ldr	r0, [r3]
 20880 014c C468     		ldr	r4, [r0, #12]
 20881              	.LVL2634:
 20882              		.loc 1 10069 33 view .LVU5971
 20883 014e 0123     		movs	r3, #1
 20884 0150 0DF10702 		add	r2, sp, #7
 20885              	.LVL2635:
 20886              		.loc 1 10069 33 view .LVU5972
 20887 0154 4721     		movs	r1, #71
 20888 0156 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20889 0158 A047     		blx	r4
 20890              	.LVL2636:
 20891              		.loc 1 10069 30 view .LVU5973
 20892 015a 56FA80F4 		uxtab	r4, r6, r0
 20893 015e 64B2     		sxtb	r4, r4
 20894              	.LVL2637:
 20895              	.L1528:
10070:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_2_LSB_REG,
10071:Core/Src/bno055.c ****                                                                 &data2_u8r,
10072:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/ccOloYeZ.s 			page 595


10073:Core/Src/bno055.c ****                 }
10074:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20896              		.loc 1 10074 17 is_stmt 1 view .LVU5974
 20897              		.loc 1 10074 37 is_stmt 0 view .LVU5975
 20898 0160 524B     		ldr	r3, .L1547
 20899 0162 1868     		ldr	r0, [r3]
 20900 0164 0669     		ldr	r6, [r0, #16]
 20901              		.loc 1 10074 29 view .LVU5976
 20902 0166 0123     		movs	r3, #1
 20903 0168 0DF10702 		add	r2, sp, #7
 20904 016c 4821     		movs	r1, #72
 20905 016e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20906 0170 B047     		blx	r6
 20907              	.LVL2638:
 20908              		.loc 1 10074 26 view .LVU5977
 20909 0172 54FA80F4 		uxtab	r4, r4, r0
 20910              	.LVL2639:
 20911              		.loc 1 10074 26 view .LVU5978
 20912 0176 E6B2     		uxtb	r6, r4
 20913 0178 64B2     		sxtb	r4, r4
 20914              	.LVL2640:
10075:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_2_MSB_REG,
10076:Core/Src/bno055.c ****                                                            &data2_u8r,
10077:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10078:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 20915              		.loc 1 10078 17 is_stmt 1 view .LVU5979
 20916              		.loc 1 10078 20 is_stmt 0 view .LVU5980
 20917 017a 7CB9     		cbnz	r4, .L1529
10079:Core/Src/bno055.c ****                 {
10080:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_2 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 20918              		.loc 1 10080 21 is_stmt 1 view .LVU5981
 20919              		.loc 1 10080 34 is_stmt 0 view .LVU5982
 20920 017c 95F90530 		ldrsb	r3, [r5, #5]
 20921              	.LVL2641:
10081:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_2_MSB, data1_u8r);
 20922              		.loc 1 10081 21 is_stmt 1 view .LVU5983
 20923              		.loc 1 10081 31 is_stmt 0 view .LVU5984
 20924 0180 8DF80730 		strb	r3, [sp, #7]
10082:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20925              		.loc 1 10082 21 is_stmt 1 view .LVU5985
 20926              		.loc 1 10082 41 is_stmt 0 view .LVU5986
 20927 0184 494B     		ldr	r3, .L1547
 20928              	.LVL2642:
 20929              		.loc 1 10082 41 view .LVU5987
 20930 0186 1868     		ldr	r0, [r3]
 20931 0188 C468     		ldr	r4, [r0, #12]
 20932              	.LVL2643:
 20933              		.loc 1 10082 33 view .LVU5988
 20934 018a 0123     		movs	r3, #1
 20935 018c 0DF10702 		add	r2, sp, #7
 20936              	.LVL2644:
 20937              		.loc 1 10082 33 view .LVU5989
 20938 0190 4821     		movs	r1, #72
 20939 0192 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20940 0194 A047     		blx	r4
 20941              	.LVL2645:
 20942              		.loc 1 10082 30 view .LVU5990
ARM GAS  /tmp/ccOloYeZ.s 			page 596


 20943 0196 56FA80F4 		uxtab	r4, r6, r0
 20944 019a 64B2     		sxtb	r4, r4
 20945              	.LVL2646:
 20946              	.L1529:
10083:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_2_MSB_REG,
10084:Core/Src/bno055.c ****                                                                 &data2_u8r,
10085:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10086:Core/Src/bno055.c ****                 }
10087:Core/Src/bno055.c **** 
10088:Core/Src/bno055.c ****                 /* write soft iron calibration
10089:Core/Src/bno055.c ****                  * matrix three value*/
10090:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20947              		.loc 1 10090 17 is_stmt 1 view .LVU5991
 20948              		.loc 1 10090 37 is_stmt 0 view .LVU5992
 20949 019c 434B     		ldr	r3, .L1547
 20950 019e 1868     		ldr	r0, [r3]
 20951 01a0 0669     		ldr	r6, [r0, #16]
 20952              		.loc 1 10090 29 view .LVU5993
 20953 01a2 0123     		movs	r3, #1
 20954 01a4 0DF10702 		add	r2, sp, #7
 20955 01a8 4921     		movs	r1, #73
 20956 01aa 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20957 01ac B047     		blx	r6
 20958              	.LVL2647:
 20959              		.loc 1 10090 26 view .LVU5994
 20960 01ae 54FA80F4 		uxtab	r4, r4, r0
 20961              	.LVL2648:
 20962              		.loc 1 10090 26 view .LVU5995
 20963 01b2 E6B2     		uxtb	r6, r4
 20964 01b4 64B2     		sxtb	r4, r4
 20965              	.LVL2649:
10091:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_3_LSB_REG,
10092:Core/Src/bno055.c ****                                                            &data2_u8r,
10093:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10094:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 20966              		.loc 1 10094 17 is_stmt 1 view .LVU5996
 20967              		.loc 1 10094 20 is_stmt 0 view .LVU5997
 20968 01b6 7CB9     		cbnz	r4, .L1530
10095:Core/Src/bno055.c ****                 {
10096:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_3 & BNO055_SIC_HEX_0_0_F_F_DATA));
 20969              		.loc 1 10096 21 is_stmt 1 view .LVU5998
 20970              		.loc 1 10096 49 is_stmt 0 view .LVU5999
 20971 01b8 B5F90630 		ldrsh	r3, [r5, #6]
 20972              	.LVL2650:
10097:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_3_LSB, data1_u8r);
 20973              		.loc 1 10097 21 is_stmt 1 view .LVU6000
 20974              		.loc 1 10097 31 is_stmt 0 view .LVU6001
 20975 01bc 8DF80730 		strb	r3, [sp, #7]
10098:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20976              		.loc 1 10098 21 is_stmt 1 view .LVU6002
 20977              		.loc 1 10098 41 is_stmt 0 view .LVU6003
 20978 01c0 3A4B     		ldr	r3, .L1547
 20979              	.LVL2651:
 20980              		.loc 1 10098 41 view .LVU6004
 20981 01c2 1868     		ldr	r0, [r3]
 20982 01c4 C468     		ldr	r4, [r0, #12]
 20983              	.LVL2652:
ARM GAS  /tmp/ccOloYeZ.s 			page 597


 20984              		.loc 1 10098 33 view .LVU6005
 20985 01c6 0123     		movs	r3, #1
 20986 01c8 0DF10702 		add	r2, sp, #7
 20987              	.LVL2653:
 20988              		.loc 1 10098 33 view .LVU6006
 20989 01cc 4921     		movs	r1, #73
 20990 01ce 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20991 01d0 A047     		blx	r4
 20992              	.LVL2654:
 20993              		.loc 1 10098 30 view .LVU6007
 20994 01d2 56FA80F4 		uxtab	r4, r6, r0
 20995 01d6 64B2     		sxtb	r4, r4
 20996              	.LVL2655:
 20997              	.L1530:
10099:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_3_LSB_REG,
10100:Core/Src/bno055.c ****                                                                 &data2_u8r,
10101:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10102:Core/Src/bno055.c ****                 }
10103:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20998              		.loc 1 10103 17 is_stmt 1 view .LVU6008
 20999              		.loc 1 10103 37 is_stmt 0 view .LVU6009
 21000 01d8 344B     		ldr	r3, .L1547
 21001 01da 1868     		ldr	r0, [r3]
 21002 01dc 0669     		ldr	r6, [r0, #16]
 21003              		.loc 1 10103 29 view .LVU6010
 21004 01de 0123     		movs	r3, #1
 21005 01e0 0DF10702 		add	r2, sp, #7
 21006 01e4 4A21     		movs	r1, #74
 21007 01e6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21008 01e8 B047     		blx	r6
 21009              	.LVL2656:
 21010              		.loc 1 10103 26 view .LVU6011
 21011 01ea 54FA80F4 		uxtab	r4, r4, r0
 21012              	.LVL2657:
 21013              		.loc 1 10103 26 view .LVU6012
 21014 01ee E6B2     		uxtb	r6, r4
 21015 01f0 64B2     		sxtb	r4, r4
 21016              	.LVL2658:
10104:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_3_MSB_REG,
10105:Core/Src/bno055.c ****                                                            &data2_u8r,
10106:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10107:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21017              		.loc 1 10107 17 is_stmt 1 view .LVU6013
 21018              		.loc 1 10107 20 is_stmt 0 view .LVU6014
 21019 01f2 7CB9     		cbnz	r4, .L1531
10108:Core/Src/bno055.c ****                 {
10109:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_3 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21020              		.loc 1 10109 21 is_stmt 1 view .LVU6015
 21021              		.loc 1 10109 34 is_stmt 0 view .LVU6016
 21022 01f4 95F90730 		ldrsb	r3, [r5, #7]
 21023              	.LVL2659:
10110:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_3_MSB, data1_u8r);
 21024              		.loc 1 10110 21 is_stmt 1 view .LVU6017
 21025              		.loc 1 10110 31 is_stmt 0 view .LVU6018
 21026 01f8 8DF80730 		strb	r3, [sp, #7]
10111:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21027              		.loc 1 10111 21 is_stmt 1 view .LVU6019
ARM GAS  /tmp/ccOloYeZ.s 			page 598


 21028              		.loc 1 10111 41 is_stmt 0 view .LVU6020
 21029 01fc 2B4B     		ldr	r3, .L1547
 21030              	.LVL2660:
 21031              		.loc 1 10111 41 view .LVU6021
 21032 01fe 1868     		ldr	r0, [r3]
 21033 0200 C468     		ldr	r4, [r0, #12]
 21034              	.LVL2661:
 21035              		.loc 1 10111 33 view .LVU6022
 21036 0202 0123     		movs	r3, #1
 21037 0204 0DF10702 		add	r2, sp, #7
 21038              	.LVL2662:
 21039              		.loc 1 10111 33 view .LVU6023
 21040 0208 4A21     		movs	r1, #74
 21041 020a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21042 020c A047     		blx	r4
 21043              	.LVL2663:
 21044              		.loc 1 10111 30 view .LVU6024
 21045 020e 56FA80F4 		uxtab	r4, r6, r0
 21046 0212 64B2     		sxtb	r4, r4
 21047              	.LVL2664:
 21048              	.L1531:
10112:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_3_MSB_REG,
10113:Core/Src/bno055.c ****                                                                 &data2_u8r,
10114:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10115:Core/Src/bno055.c ****                 }
10116:Core/Src/bno055.c **** 
10117:Core/Src/bno055.c ****                 /* write soft iron calibration
10118:Core/Src/bno055.c ****                  * matrix four value*/
10119:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21049              		.loc 1 10119 17 is_stmt 1 view .LVU6025
 21050              		.loc 1 10119 37 is_stmt 0 view .LVU6026
 21051 0214 254B     		ldr	r3, .L1547
 21052 0216 1868     		ldr	r0, [r3]
 21053 0218 0669     		ldr	r6, [r0, #16]
 21054              		.loc 1 10119 29 view .LVU6027
 21055 021a 0123     		movs	r3, #1
 21056 021c 0DF10702 		add	r2, sp, #7
 21057 0220 4B21     		movs	r1, #75
 21058 0222 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21059 0224 B047     		blx	r6
 21060              	.LVL2665:
 21061              		.loc 1 10119 26 view .LVU6028
 21062 0226 54FA80F4 		uxtab	r4, r4, r0
 21063              	.LVL2666:
 21064              		.loc 1 10119 26 view .LVU6029
 21065 022a E6B2     		uxtb	r6, r4
 21066 022c 64B2     		sxtb	r4, r4
 21067              	.LVL2667:
10120:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_4_LSB_REG,
10121:Core/Src/bno055.c ****                                                            &data2_u8r,
10122:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10123:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21068              		.loc 1 10123 17 is_stmt 1 view .LVU6030
 21069              		.loc 1 10123 20 is_stmt 0 view .LVU6031
 21070 022e 7CB9     		cbnz	r4, .L1532
10124:Core/Src/bno055.c ****                 {
10125:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_4 & BNO055_SIC_HEX_0_0_F_F_DATA));
ARM GAS  /tmp/ccOloYeZ.s 			page 599


 21071              		.loc 1 10125 21 is_stmt 1 view .LVU6032
 21072              		.loc 1 10125 49 is_stmt 0 view .LVU6033
 21073 0230 B5F90830 		ldrsh	r3, [r5, #8]
 21074              	.LVL2668:
10126:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_4_LSB, data1_u8r);
 21075              		.loc 1 10126 21 is_stmt 1 view .LVU6034
 21076              		.loc 1 10126 31 is_stmt 0 view .LVU6035
 21077 0234 8DF80730 		strb	r3, [sp, #7]
10127:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21078              		.loc 1 10127 21 is_stmt 1 view .LVU6036
 21079              		.loc 1 10127 41 is_stmt 0 view .LVU6037
 21080 0238 1C4B     		ldr	r3, .L1547
 21081              	.LVL2669:
 21082              		.loc 1 10127 41 view .LVU6038
 21083 023a 1868     		ldr	r0, [r3]
 21084 023c C468     		ldr	r4, [r0, #12]
 21085              	.LVL2670:
 21086              		.loc 1 10127 33 view .LVU6039
 21087 023e 0123     		movs	r3, #1
 21088 0240 0DF10702 		add	r2, sp, #7
 21089              	.LVL2671:
 21090              		.loc 1 10127 33 view .LVU6040
 21091 0244 4B21     		movs	r1, #75
 21092 0246 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21093 0248 A047     		blx	r4
 21094              	.LVL2672:
 21095              		.loc 1 10127 30 view .LVU6041
 21096 024a 56FA80F4 		uxtab	r4, r6, r0
 21097 024e 64B2     		sxtb	r4, r4
 21098              	.LVL2673:
 21099              	.L1532:
10128:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_4_LSB_REG,
10129:Core/Src/bno055.c ****                                                                 &data2_u8r,
10130:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10131:Core/Src/bno055.c ****                 }
10132:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21100              		.loc 1 10132 17 is_stmt 1 view .LVU6042
 21101              		.loc 1 10132 37 is_stmt 0 view .LVU6043
 21102 0250 164B     		ldr	r3, .L1547
 21103 0252 1868     		ldr	r0, [r3]
 21104 0254 0669     		ldr	r6, [r0, #16]
 21105              		.loc 1 10132 29 view .LVU6044
 21106 0256 0123     		movs	r3, #1
 21107 0258 0DF10702 		add	r2, sp, #7
 21108 025c 4C21     		movs	r1, #76
 21109 025e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21110 0260 B047     		blx	r6
 21111              	.LVL2674:
 21112              		.loc 1 10132 26 view .LVU6045
 21113 0262 54FA80F4 		uxtab	r4, r4, r0
 21114              	.LVL2675:
 21115              		.loc 1 10132 26 view .LVU6046
 21116 0266 E6B2     		uxtb	r6, r4
 21117 0268 64B2     		sxtb	r4, r4
 21118              	.LVL2676:
10133:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_4_MSB_REG,
10134:Core/Src/bno055.c ****                                                            &data2_u8r,
ARM GAS  /tmp/ccOloYeZ.s 			page 600


10135:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10136:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21119              		.loc 1 10136 17 is_stmt 1 view .LVU6047
 21120              		.loc 1 10136 20 is_stmt 0 view .LVU6048
 21121 026a 7CB9     		cbnz	r4, .L1533
10137:Core/Src/bno055.c ****                 {
10138:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_4 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21122              		.loc 1 10138 21 is_stmt 1 view .LVU6049
 21123              		.loc 1 10138 34 is_stmt 0 view .LVU6050
 21124 026c 95F90930 		ldrsb	r3, [r5, #9]
 21125              	.LVL2677:
10139:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_4_MSB, data1_u8r);
 21126              		.loc 1 10139 21 is_stmt 1 view .LVU6051
 21127              		.loc 1 10139 31 is_stmt 0 view .LVU6052
 21128 0270 8DF80730 		strb	r3, [sp, #7]
10140:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21129              		.loc 1 10140 21 is_stmt 1 view .LVU6053
 21130              		.loc 1 10140 41 is_stmt 0 view .LVU6054
 21131 0274 0D4B     		ldr	r3, .L1547
 21132              	.LVL2678:
 21133              		.loc 1 10140 41 view .LVU6055
 21134 0276 1868     		ldr	r0, [r3]
 21135 0278 C468     		ldr	r4, [r0, #12]
 21136              	.LVL2679:
 21137              		.loc 1 10140 33 view .LVU6056
 21138 027a 0123     		movs	r3, #1
 21139 027c 0DF10702 		add	r2, sp, #7
 21140              	.LVL2680:
 21141              		.loc 1 10140 33 view .LVU6057
 21142 0280 4C21     		movs	r1, #76
 21143 0282 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21144 0284 A047     		blx	r4
 21145              	.LVL2681:
 21146              		.loc 1 10140 30 view .LVU6058
 21147 0286 56FA80F4 		uxtab	r4, r6, r0
 21148 028a 64B2     		sxtb	r4, r4
 21149              	.LVL2682:
 21150              	.L1533:
10141:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_4_MSB_REG,
10142:Core/Src/bno055.c ****                                                                 &data2_u8r,
10143:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10144:Core/Src/bno055.c ****                 }
10145:Core/Src/bno055.c **** 
10146:Core/Src/bno055.c ****                 /* write soft iron calibration
10147:Core/Src/bno055.c ****                  * matrix five value*/
10148:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21151              		.loc 1 10148 17 is_stmt 1 view .LVU6059
 21152              		.loc 1 10148 37 is_stmt 0 view .LVU6060
 21153 028c 074B     		ldr	r3, .L1547
 21154 028e 1868     		ldr	r0, [r3]
 21155 0290 0669     		ldr	r6, [r0, #16]
 21156              		.loc 1 10148 29 view .LVU6061
 21157 0292 0123     		movs	r3, #1
 21158 0294 0DF10702 		add	r2, sp, #7
 21159 0298 4D21     		movs	r1, #77
 21160 029a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21161 029c B047     		blx	r6
ARM GAS  /tmp/ccOloYeZ.s 			page 601


 21162              	.LVL2683:
 21163              		.loc 1 10148 26 view .LVU6062
 21164 029e 54FA80F4 		uxtab	r4, r4, r0
 21165              	.LVL2684:
 21166              		.loc 1 10148 26 view .LVU6063
 21167 02a2 E6B2     		uxtb	r6, r4
 21168 02a4 64B2     		sxtb	r4, r4
 21169              	.LVL2685:
10149:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_5_LSB_REG,
10150:Core/Src/bno055.c ****                                                            &data2_u8r,
10151:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10152:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21170              		.loc 1 10152 17 is_stmt 1 view .LVU6064
 21171              		.loc 1 10152 20 is_stmt 0 view .LVU6065
 21172 02a6 9CB9     		cbnz	r4, .L1534
 21173 02a8 02E0     		b	.L1548
 21174              	.L1549:
 21175 02aa 00BF     		.align	2
 21176              	.L1547:
 21177 02ac 00000000 		.word	p_bno055
 21178              	.L1548:
10153:Core/Src/bno055.c ****                 {
10154:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_5 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21179              		.loc 1 10154 21 is_stmt 1 view .LVU6066
 21180              		.loc 1 10154 49 is_stmt 0 view .LVU6067
 21181 02b0 B5F90A30 		ldrsh	r3, [r5, #10]
 21182              	.LVL2686:
10155:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_5_LSB, data1_u8r);
 21183              		.loc 1 10155 21 is_stmt 1 view .LVU6068
 21184              		.loc 1 10155 31 is_stmt 0 view .LVU6069
 21185 02b4 8DF80730 		strb	r3, [sp, #7]
10156:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21186              		.loc 1 10156 21 is_stmt 1 view .LVU6070
 21187              		.loc 1 10156 41 is_stmt 0 view .LVU6071
 21188 02b8 7C4B     		ldr	r3, .L1550
 21189              	.LVL2687:
 21190              		.loc 1 10156 41 view .LVU6072
 21191 02ba 1868     		ldr	r0, [r3]
 21192 02bc C468     		ldr	r4, [r0, #12]
 21193              	.LVL2688:
 21194              		.loc 1 10156 33 view .LVU6073
 21195 02be 0123     		movs	r3, #1
 21196 02c0 0DF10702 		add	r2, sp, #7
 21197              	.LVL2689:
 21198              		.loc 1 10156 33 view .LVU6074
 21199 02c4 4D21     		movs	r1, #77
 21200 02c6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21201 02c8 A047     		blx	r4
 21202              	.LVL2690:
 21203              		.loc 1 10156 30 view .LVU6075
 21204 02ca 56FA80F4 		uxtab	r4, r6, r0
 21205 02ce 64B2     		sxtb	r4, r4
 21206              	.LVL2691:
 21207              	.L1534:
10157:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_5_LSB_REG,
10158:Core/Src/bno055.c ****                                                                 &data2_u8r,
10159:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/ccOloYeZ.s 			page 602


10160:Core/Src/bno055.c ****                 }
10161:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21208              		.loc 1 10161 17 is_stmt 1 view .LVU6076
 21209              		.loc 1 10161 37 is_stmt 0 view .LVU6077
 21210 02d0 764B     		ldr	r3, .L1550
 21211 02d2 1868     		ldr	r0, [r3]
 21212 02d4 0669     		ldr	r6, [r0, #16]
 21213              		.loc 1 10161 29 view .LVU6078
 21214 02d6 0123     		movs	r3, #1
 21215 02d8 0DF10702 		add	r2, sp, #7
 21216 02dc 4E21     		movs	r1, #78
 21217 02de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21218 02e0 B047     		blx	r6
 21219              	.LVL2692:
 21220              		.loc 1 10161 26 view .LVU6079
 21221 02e2 54FA80F4 		uxtab	r4, r4, r0
 21222              	.LVL2693:
 21223              		.loc 1 10161 26 view .LVU6080
 21224 02e6 E6B2     		uxtb	r6, r4
 21225 02e8 64B2     		sxtb	r4, r4
 21226              	.LVL2694:
10162:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_5_MSB_REG,
10163:Core/Src/bno055.c ****                                                            &data2_u8r,
10164:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10165:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21227              		.loc 1 10165 17 is_stmt 1 view .LVU6081
 21228              		.loc 1 10165 20 is_stmt 0 view .LVU6082
 21229 02ea 7CB9     		cbnz	r4, .L1535
10166:Core/Src/bno055.c ****                 {
10167:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_5 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21230              		.loc 1 10167 21 is_stmt 1 view .LVU6083
 21231              		.loc 1 10167 34 is_stmt 0 view .LVU6084
 21232 02ec 95F90B30 		ldrsb	r3, [r5, #11]
 21233              	.LVL2695:
10168:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_5_MSB, data1_u8r);
 21234              		.loc 1 10168 21 is_stmt 1 view .LVU6085
 21235              		.loc 1 10168 31 is_stmt 0 view .LVU6086
 21236 02f0 8DF80730 		strb	r3, [sp, #7]
10169:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21237              		.loc 1 10169 21 is_stmt 1 view .LVU6087
 21238              		.loc 1 10169 41 is_stmt 0 view .LVU6088
 21239 02f4 6D4B     		ldr	r3, .L1550
 21240              	.LVL2696:
 21241              		.loc 1 10169 41 view .LVU6089
 21242 02f6 1868     		ldr	r0, [r3]
 21243 02f8 C468     		ldr	r4, [r0, #12]
 21244              	.LVL2697:
 21245              		.loc 1 10169 33 view .LVU6090
 21246 02fa 0123     		movs	r3, #1
 21247 02fc 0DF10702 		add	r2, sp, #7
 21248              	.LVL2698:
 21249              		.loc 1 10169 33 view .LVU6091
 21250 0300 4E21     		movs	r1, #78
 21251 0302 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21252 0304 A047     		blx	r4
 21253              	.LVL2699:
 21254              		.loc 1 10169 30 view .LVU6092
ARM GAS  /tmp/ccOloYeZ.s 			page 603


 21255 0306 56FA80F4 		uxtab	r4, r6, r0
 21256 030a 64B2     		sxtb	r4, r4
 21257              	.LVL2700:
 21258              	.L1535:
10170:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_5_MSB_REG,
10171:Core/Src/bno055.c ****                                                                 &data2_u8r,
10172:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10173:Core/Src/bno055.c ****                 }
10174:Core/Src/bno055.c **** 
10175:Core/Src/bno055.c ****                 /* write soft iron calibration
10176:Core/Src/bno055.c ****                  * matrix six value*/
10177:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21259              		.loc 1 10177 17 is_stmt 1 view .LVU6093
 21260              		.loc 1 10177 37 is_stmt 0 view .LVU6094
 21261 030c 674B     		ldr	r3, .L1550
 21262 030e 1868     		ldr	r0, [r3]
 21263 0310 0669     		ldr	r6, [r0, #16]
 21264              		.loc 1 10177 29 view .LVU6095
 21265 0312 0123     		movs	r3, #1
 21266 0314 0DF10702 		add	r2, sp, #7
 21267 0318 4F21     		movs	r1, #79
 21268 031a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21269 031c B047     		blx	r6
 21270              	.LVL2701:
 21271              		.loc 1 10177 26 view .LVU6096
 21272 031e 54FA80F4 		uxtab	r4, r4, r0
 21273              	.LVL2702:
 21274              		.loc 1 10177 26 view .LVU6097
 21275 0322 E6B2     		uxtb	r6, r4
 21276 0324 64B2     		sxtb	r4, r4
 21277              	.LVL2703:
10178:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_6_LSB_REG,
10179:Core/Src/bno055.c ****                                                            &data2_u8r,
10180:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10181:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21278              		.loc 1 10181 17 is_stmt 1 view .LVU6098
 21279              		.loc 1 10181 20 is_stmt 0 view .LVU6099
 21280 0326 7CB9     		cbnz	r4, .L1536
10182:Core/Src/bno055.c ****                 {
10183:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_6 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21281              		.loc 1 10183 21 is_stmt 1 view .LVU6100
 21282              		.loc 1 10183 49 is_stmt 0 view .LVU6101
 21283 0328 B5F90C30 		ldrsh	r3, [r5, #12]
 21284              	.LVL2704:
10184:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_6_LSB, data1_u8r);
 21285              		.loc 1 10184 21 is_stmt 1 view .LVU6102
 21286              		.loc 1 10184 31 is_stmt 0 view .LVU6103
 21287 032c 8DF80730 		strb	r3, [sp, #7]
10185:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21288              		.loc 1 10185 21 is_stmt 1 view .LVU6104
 21289              		.loc 1 10185 41 is_stmt 0 view .LVU6105
 21290 0330 5E4B     		ldr	r3, .L1550
 21291              	.LVL2705:
 21292              		.loc 1 10185 41 view .LVU6106
 21293 0332 1868     		ldr	r0, [r3]
 21294 0334 C468     		ldr	r4, [r0, #12]
 21295              	.LVL2706:
ARM GAS  /tmp/ccOloYeZ.s 			page 604


 21296              		.loc 1 10185 33 view .LVU6107
 21297 0336 0123     		movs	r3, #1
 21298 0338 0DF10702 		add	r2, sp, #7
 21299              	.LVL2707:
 21300              		.loc 1 10185 33 view .LVU6108
 21301 033c 4F21     		movs	r1, #79
 21302 033e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21303 0340 A047     		blx	r4
 21304              	.LVL2708:
 21305              		.loc 1 10185 30 view .LVU6109
 21306 0342 56FA80F4 		uxtab	r4, r6, r0
 21307 0346 64B2     		sxtb	r4, r4
 21308              	.LVL2709:
 21309              	.L1536:
10186:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_6_LSB_REG,
10187:Core/Src/bno055.c ****                                                                 &data2_u8r,
10188:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10189:Core/Src/bno055.c ****                 }
10190:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21310              		.loc 1 10190 17 is_stmt 1 view .LVU6110
 21311              		.loc 1 10190 37 is_stmt 0 view .LVU6111
 21312 0348 584B     		ldr	r3, .L1550
 21313 034a 1868     		ldr	r0, [r3]
 21314 034c 0669     		ldr	r6, [r0, #16]
 21315              		.loc 1 10190 29 view .LVU6112
 21316 034e 0123     		movs	r3, #1
 21317 0350 0DF10702 		add	r2, sp, #7
 21318 0354 5021     		movs	r1, #80
 21319 0356 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21320 0358 B047     		blx	r6
 21321              	.LVL2710:
 21322              		.loc 1 10190 26 view .LVU6113
 21323 035a 54FA80F4 		uxtab	r4, r4, r0
 21324              	.LVL2711:
 21325              		.loc 1 10190 26 view .LVU6114
 21326 035e E6B2     		uxtb	r6, r4
 21327 0360 64B2     		sxtb	r4, r4
 21328              	.LVL2712:
10191:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_6_MSB_REG,
10192:Core/Src/bno055.c ****                                                            &data2_u8r,
10193:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10194:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21329              		.loc 1 10194 17 is_stmt 1 view .LVU6115
 21330              		.loc 1 10194 20 is_stmt 0 view .LVU6116
 21331 0362 7CB9     		cbnz	r4, .L1537
10195:Core/Src/bno055.c ****                 {
10196:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_6 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21332              		.loc 1 10196 21 is_stmt 1 view .LVU6117
 21333              		.loc 1 10196 34 is_stmt 0 view .LVU6118
 21334 0364 95F90D30 		ldrsb	r3, [r5, #13]
 21335              	.LVL2713:
10197:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_6_MSB, data1_u8r);
 21336              		.loc 1 10197 21 is_stmt 1 view .LVU6119
 21337              		.loc 1 10197 31 is_stmt 0 view .LVU6120
 21338 0368 8DF80730 		strb	r3, [sp, #7]
10198:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21339              		.loc 1 10198 21 is_stmt 1 view .LVU6121
ARM GAS  /tmp/ccOloYeZ.s 			page 605


 21340              		.loc 1 10198 41 is_stmt 0 view .LVU6122
 21341 036c 4F4B     		ldr	r3, .L1550
 21342              	.LVL2714:
 21343              		.loc 1 10198 41 view .LVU6123
 21344 036e 1868     		ldr	r0, [r3]
 21345 0370 C468     		ldr	r4, [r0, #12]
 21346              	.LVL2715:
 21347              		.loc 1 10198 33 view .LVU6124
 21348 0372 0123     		movs	r3, #1
 21349 0374 0DF10702 		add	r2, sp, #7
 21350              	.LVL2716:
 21351              		.loc 1 10198 33 view .LVU6125
 21352 0378 5021     		movs	r1, #80
 21353 037a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21354 037c A047     		blx	r4
 21355              	.LVL2717:
 21356              		.loc 1 10198 30 view .LVU6126
 21357 037e 56FA80F4 		uxtab	r4, r6, r0
 21358 0382 64B2     		sxtb	r4, r4
 21359              	.LVL2718:
 21360              	.L1537:
10199:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_6_MSB_REG,
10200:Core/Src/bno055.c ****                                                                 &data2_u8r,
10201:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10202:Core/Src/bno055.c ****                 }
10203:Core/Src/bno055.c **** 
10204:Core/Src/bno055.c ****                 /* write soft iron calibration
10205:Core/Src/bno055.c ****                  * matrix seven value*/
10206:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21361              		.loc 1 10206 17 is_stmt 1 view .LVU6127
 21362              		.loc 1 10206 37 is_stmt 0 view .LVU6128
 21363 0384 494B     		ldr	r3, .L1550
 21364 0386 1868     		ldr	r0, [r3]
 21365 0388 0669     		ldr	r6, [r0, #16]
 21366              		.loc 1 10206 29 view .LVU6129
 21367 038a 0123     		movs	r3, #1
 21368 038c 0DF10702 		add	r2, sp, #7
 21369 0390 5121     		movs	r1, #81
 21370 0392 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21371 0394 B047     		blx	r6
 21372              	.LVL2719:
 21373              		.loc 1 10206 26 view .LVU6130
 21374 0396 54FA80F4 		uxtab	r4, r4, r0
 21375              	.LVL2720:
 21376              		.loc 1 10206 26 view .LVU6131
 21377 039a E6B2     		uxtb	r6, r4
 21378 039c 64B2     		sxtb	r4, r4
 21379              	.LVL2721:
10207:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_7_LSB_REG,
10208:Core/Src/bno055.c ****                                                            &data2_u8r,
10209:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10210:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21380              		.loc 1 10210 17 is_stmt 1 view .LVU6132
 21381              		.loc 1 10210 20 is_stmt 0 view .LVU6133
 21382 039e 7CB9     		cbnz	r4, .L1538
10211:Core/Src/bno055.c ****                 {
10212:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_7 & BNO055_SIC_HEX_0_0_F_F_DATA));
ARM GAS  /tmp/ccOloYeZ.s 			page 606


 21383              		.loc 1 10212 21 is_stmt 1 view .LVU6134
 21384              		.loc 1 10212 49 is_stmt 0 view .LVU6135
 21385 03a0 B5F90E30 		ldrsh	r3, [r5, #14]
 21386              	.LVL2722:
10213:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_7_LSB, data1_u8r);
 21387              		.loc 1 10213 21 is_stmt 1 view .LVU6136
 21388              		.loc 1 10213 31 is_stmt 0 view .LVU6137
 21389 03a4 8DF80730 		strb	r3, [sp, #7]
10214:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21390              		.loc 1 10214 21 is_stmt 1 view .LVU6138
 21391              		.loc 1 10214 41 is_stmt 0 view .LVU6139
 21392 03a8 404B     		ldr	r3, .L1550
 21393              	.LVL2723:
 21394              		.loc 1 10214 41 view .LVU6140
 21395 03aa 1868     		ldr	r0, [r3]
 21396 03ac C468     		ldr	r4, [r0, #12]
 21397              	.LVL2724:
 21398              		.loc 1 10214 33 view .LVU6141
 21399 03ae 0123     		movs	r3, #1
 21400 03b0 0DF10702 		add	r2, sp, #7
 21401              	.LVL2725:
 21402              		.loc 1 10214 33 view .LVU6142
 21403 03b4 5121     		movs	r1, #81
 21404 03b6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21405 03b8 A047     		blx	r4
 21406              	.LVL2726:
 21407              		.loc 1 10214 30 view .LVU6143
 21408 03ba 56FA80F4 		uxtab	r4, r6, r0
 21409 03be 64B2     		sxtb	r4, r4
 21410              	.LVL2727:
 21411              	.L1538:
10215:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_7_LSB_REG,
10216:Core/Src/bno055.c ****                                                                 &data2_u8r,
10217:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10218:Core/Src/bno055.c ****                 }
10219:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21412              		.loc 1 10219 17 is_stmt 1 view .LVU6144
 21413              		.loc 1 10219 37 is_stmt 0 view .LVU6145
 21414 03c0 3A4B     		ldr	r3, .L1550
 21415 03c2 1868     		ldr	r0, [r3]
 21416 03c4 0669     		ldr	r6, [r0, #16]
 21417              		.loc 1 10219 29 view .LVU6146
 21418 03c6 0123     		movs	r3, #1
 21419 03c8 0DF10702 		add	r2, sp, #7
 21420 03cc 5221     		movs	r1, #82
 21421 03ce 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21422 03d0 B047     		blx	r6
 21423              	.LVL2728:
 21424              		.loc 1 10219 26 view .LVU6147
 21425 03d2 54FA80F4 		uxtab	r4, r4, r0
 21426              	.LVL2729:
 21427              		.loc 1 10219 26 view .LVU6148
 21428 03d6 E6B2     		uxtb	r6, r4
 21429 03d8 64B2     		sxtb	r4, r4
 21430              	.LVL2730:
10220:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_7_MSB_REG,
10221:Core/Src/bno055.c ****                                                            &data2_u8r,
ARM GAS  /tmp/ccOloYeZ.s 			page 607


10222:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10223:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21431              		.loc 1 10223 17 is_stmt 1 view .LVU6149
 21432              		.loc 1 10223 20 is_stmt 0 view .LVU6150
 21433 03da 7CB9     		cbnz	r4, .L1539
10224:Core/Src/bno055.c ****                 {
10225:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_7 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21434              		.loc 1 10225 21 is_stmt 1 view .LVU6151
 21435              		.loc 1 10225 34 is_stmt 0 view .LVU6152
 21436 03dc 95F90F30 		ldrsb	r3, [r5, #15]
 21437              	.LVL2731:
10226:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_7_MSB, data1_u8r);
 21438              		.loc 1 10226 21 is_stmt 1 view .LVU6153
 21439              		.loc 1 10226 31 is_stmt 0 view .LVU6154
 21440 03e0 8DF80730 		strb	r3, [sp, #7]
10227:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21441              		.loc 1 10227 21 is_stmt 1 view .LVU6155
 21442              		.loc 1 10227 41 is_stmt 0 view .LVU6156
 21443 03e4 314B     		ldr	r3, .L1550
 21444              	.LVL2732:
 21445              		.loc 1 10227 41 view .LVU6157
 21446 03e6 1868     		ldr	r0, [r3]
 21447 03e8 C468     		ldr	r4, [r0, #12]
 21448              	.LVL2733:
 21449              		.loc 1 10227 33 view .LVU6158
 21450 03ea 0123     		movs	r3, #1
 21451 03ec 0DF10702 		add	r2, sp, #7
 21452              	.LVL2734:
 21453              		.loc 1 10227 33 view .LVU6159
 21454 03f0 5221     		movs	r1, #82
 21455 03f2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21456 03f4 A047     		blx	r4
 21457              	.LVL2735:
 21458              		.loc 1 10227 30 view .LVU6160
 21459 03f6 56FA80F4 		uxtab	r4, r6, r0
 21460 03fa 64B2     		sxtb	r4, r4
 21461              	.LVL2736:
 21462              	.L1539:
10228:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_7_MSB_REG,
10229:Core/Src/bno055.c ****                                                                 &data2_u8r,
10230:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10231:Core/Src/bno055.c ****                 }
10232:Core/Src/bno055.c **** 
10233:Core/Src/bno055.c ****                 /* write soft iron calibration
10234:Core/Src/bno055.c ****                  * matrix eight value*/
10235:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21463              		.loc 1 10235 17 is_stmt 1 view .LVU6161
 21464              		.loc 1 10235 37 is_stmt 0 view .LVU6162
 21465 03fc 2B4B     		ldr	r3, .L1550
 21466 03fe 1868     		ldr	r0, [r3]
 21467 0400 0669     		ldr	r6, [r0, #16]
 21468              		.loc 1 10235 29 view .LVU6163
 21469 0402 0123     		movs	r3, #1
 21470 0404 0DF10702 		add	r2, sp, #7
 21471 0408 5321     		movs	r1, #83
 21472 040a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21473 040c B047     		blx	r6
ARM GAS  /tmp/ccOloYeZ.s 			page 608


 21474              	.LVL2737:
 21475              		.loc 1 10235 26 view .LVU6164
 21476 040e 54FA80F4 		uxtab	r4, r4, r0
 21477              	.LVL2738:
 21478              		.loc 1 10235 26 view .LVU6165
 21479 0412 E6B2     		uxtb	r6, r4
 21480 0414 64B2     		sxtb	r4, r4
 21481              	.LVL2739:
10236:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_8_LSB_REG,
10237:Core/Src/bno055.c ****                                                            &data2_u8r,
10238:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10239:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21482              		.loc 1 10239 17 is_stmt 1 view .LVU6166
 21483              		.loc 1 10239 20 is_stmt 0 view .LVU6167
 21484 0416 7CB9     		cbnz	r4, .L1540
10240:Core/Src/bno055.c ****                 {
10241:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_8 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21485              		.loc 1 10241 21 is_stmt 1 view .LVU6168
 21486              		.loc 1 10241 49 is_stmt 0 view .LVU6169
 21487 0418 B5F91030 		ldrsh	r3, [r5, #16]
 21488              	.LVL2740:
10242:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_8_LSB, data1_u8r);
 21489              		.loc 1 10242 21 is_stmt 1 view .LVU6170
 21490              		.loc 1 10242 31 is_stmt 0 view .LVU6171
 21491 041c 8DF80730 		strb	r3, [sp, #7]
10243:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21492              		.loc 1 10243 21 is_stmt 1 view .LVU6172
 21493              		.loc 1 10243 41 is_stmt 0 view .LVU6173
 21494 0420 224B     		ldr	r3, .L1550
 21495              	.LVL2741:
 21496              		.loc 1 10243 41 view .LVU6174
 21497 0422 1868     		ldr	r0, [r3]
 21498 0424 C468     		ldr	r4, [r0, #12]
 21499              	.LVL2742:
 21500              		.loc 1 10243 33 view .LVU6175
 21501 0426 0123     		movs	r3, #1
 21502 0428 0DF10702 		add	r2, sp, #7
 21503              	.LVL2743:
 21504              		.loc 1 10243 33 view .LVU6176
 21505 042c 5321     		movs	r1, #83
 21506 042e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21507 0430 A047     		blx	r4
 21508              	.LVL2744:
 21509              		.loc 1 10243 30 view .LVU6177
 21510 0432 56FA80F4 		uxtab	r4, r6, r0
 21511 0436 64B2     		sxtb	r4, r4
 21512              	.LVL2745:
 21513              	.L1540:
10244:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_8_LSB_REG,
10245:Core/Src/bno055.c ****                                                                 &data2_u8r,
10246:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10247:Core/Src/bno055.c ****                 }
10248:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21514              		.loc 1 10248 17 is_stmt 1 view .LVU6178
 21515              		.loc 1 10248 37 is_stmt 0 view .LVU6179
 21516 0438 1C4B     		ldr	r3, .L1550
 21517 043a 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccOloYeZ.s 			page 609


 21518 043c 0669     		ldr	r6, [r0, #16]
 21519              		.loc 1 10248 29 view .LVU6180
 21520 043e 0123     		movs	r3, #1
 21521 0440 0DF10702 		add	r2, sp, #7
 21522 0444 5421     		movs	r1, #84
 21523 0446 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21524 0448 B047     		blx	r6
 21525              	.LVL2746:
 21526              		.loc 1 10248 26 view .LVU6181
 21527 044a 54FA80F4 		uxtab	r4, r4, r0
 21528              	.LVL2747:
 21529              		.loc 1 10248 26 view .LVU6182
 21530 044e E6B2     		uxtb	r6, r4
 21531 0450 64B2     		sxtb	r4, r4
 21532              	.LVL2748:
10249:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_8_MSB_REG,
10250:Core/Src/bno055.c ****                                                            &data2_u8r,
10251:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10252:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21533              		.loc 1 10252 17 is_stmt 1 view .LVU6183
 21534              		.loc 1 10252 20 is_stmt 0 view .LVU6184
 21535 0452 C4B9     		cbnz	r4, .L1522
10253:Core/Src/bno055.c ****                 {
10254:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_8 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21536              		.loc 1 10254 21 is_stmt 1 view .LVU6185
 21537              		.loc 1 10254 34 is_stmt 0 view .LVU6186
 21538 0454 95F91130 		ldrsb	r3, [r5, #17]
 21539              	.LVL2749:
10255:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_8_MSB, data1_u8r);
 21540              		.loc 1 10255 21 is_stmt 1 view .LVU6187
 21541              		.loc 1 10255 31 is_stmt 0 view .LVU6188
 21542 0458 8DF80730 		strb	r3, [sp, #7]
10256:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21543              		.loc 1 10256 21 is_stmt 1 view .LVU6189
 21544              		.loc 1 10256 41 is_stmt 0 view .LVU6190
 21545 045c 134B     		ldr	r3, .L1550
 21546              	.LVL2750:
 21547              		.loc 1 10256 41 view .LVU6191
 21548 045e 1868     		ldr	r0, [r3]
 21549 0460 C468     		ldr	r4, [r0, #12]
 21550              	.LVL2751:
 21551              		.loc 1 10256 33 view .LVU6192
 21552 0462 0123     		movs	r3, #1
 21553 0464 0DF10702 		add	r2, sp, #7
 21554              	.LVL2752:
 21555              		.loc 1 10256 33 view .LVU6193
 21556 0468 5421     		movs	r1, #84
 21557 046a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21558 046c A047     		blx	r4
 21559              	.LVL2753:
 21560              		.loc 1 10256 30 view .LVU6194
 21561 046e 56FA80F4 		uxtab	r4, r6, r0
 21562 0472 64B2     		sxtb	r4, r4
 21563              	.LVL2754:
 21564              		.loc 1 10256 30 view .LVU6195
 21565 0474 07E0     		b	.L1522
 21566              	.LVL2755:
ARM GAS  /tmp/ccOloYeZ.s 			page 610


 21567              	.L1545:
9997:Core/Src/bno055.c ****             }
 21568              		.loc 1 9997 17 is_stmt 1 view .LVU6196
9997:Core/Src/bno055.c ****             }
 21569              		.loc 1 9997 28 is_stmt 0 view .LVU6197
 21570 0476 FFF7FEFF 		bl	bno055_set_operation_mode
 21571              	.LVL2756:
9997:Core/Src/bno055.c ****             }
 21572              		.loc 1 9997 25 view .LVU6198
 21573 047a 54FA80F4 		uxtab	r4, r4, r0
 21574 047e 64B2     		sxtb	r4, r4
 21575              	.LVL2757:
9997:Core/Src/bno055.c ****             }
 21576              		.loc 1 9997 25 view .LVU6199
 21577 0480 D8E5     		b	.L1523
 21578              	.LVL2758:
 21579              	.L1542:
10257:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_8_MSB_REG,
10258:Core/Src/bno055.c ****                                                                 &data2_u8r,
10259:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10260:Core/Src/bno055.c ****                 }
10261:Core/Src/bno055.c ****             }
10262:Core/Src/bno055.c ****             else
10263:Core/Src/bno055.c ****             {
10264:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10265:Core/Src/bno055.c ****             }
10266:Core/Src/bno055.c ****         }
10267:Core/Src/bno055.c ****         else
10268:Core/Src/bno055.c ****         {
10269:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 21580              		.loc 1 10269 22 view .LVU6200
 21581 0482 4FF0FF34 		mov	r4, #-1
 21582              	.LVL2759:
 21583              	.L1522:
10270:Core/Src/bno055.c ****         }
10271:Core/Src/bno055.c ****     }
10272:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 21584              		.loc 1 10272 5 is_stmt 1 view .LVU6201
 21585              		.loc 1 10272 24 is_stmt 0 view .LVU6202
 21586 0486 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 21587              		.loc 1 10272 8 view .LVU6203
 21588 048a 28B9     		cbnz	r0, .L1546
 21589              	.LVL2760:
 21590              	.L1521:
10273:Core/Src/bno055.c ****     {
10274:Core/Src/bno055.c ****         /* set the operation mode
10275:Core/Src/bno055.c ****          * of previous operation mode*/
10276:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
10277:Core/Src/bno055.c ****     }
10278:Core/Src/bno055.c **** 
10279:Core/Src/bno055.c ****     return com_rslt;
10280:Core/Src/bno055.c **** }
 21591              		.loc 1 10280 1 view .LVU6204
 21592 048c 2046     		mov	r0, r4
 21593 048e 02B0     		add	sp, sp, #8
 21594              		.cfi_remember_state
 21595              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccOloYeZ.s 			page 611


 21596              		@ sp needed
 21597 0490 70BD     		pop	{r4, r5, r6, pc}
 21598              	.LVL2761:
 21599              	.L1543:
 21600              		.cfi_restore_state
10264:Core/Src/bno055.c ****             }
 21601              		.loc 1 10264 26 view .LVU6205
 21602 0492 4FF0FF34 		mov	r4, #-1
 21603              	.LVL2762:
10264:Core/Src/bno055.c ****             }
 21604              		.loc 1 10264 26 view .LVU6206
 21605 0496 F6E7     		b	.L1522
 21606              	.LVL2763:
 21607              	.L1546:
10276:Core/Src/bno055.c ****     }
 21608              		.loc 1 10276 9 is_stmt 1 view .LVU6207
10276:Core/Src/bno055.c ****     }
 21609              		.loc 1 10276 21 is_stmt 0 view .LVU6208
 21610 0498 FFF7FEFF 		bl	bno055_set_operation_mode
 21611              	.LVL2764:
10276:Core/Src/bno055.c ****     }
 21612              		.loc 1 10276 18 view .LVU6209
 21613 049c 54FA80F4 		uxtab	r4, r4, r0
 21614              	.LVL2765:
10276:Core/Src/bno055.c ****     }
 21615              		.loc 1 10276 18 view .LVU6210
 21616 04a0 64B2     		sxtb	r4, r4
 21617              	.LVL2766:
10276:Core/Src/bno055.c ****     }
 21618              		.loc 1 10276 18 view .LVU6211
 21619 04a2 F3E7     		b	.L1521
 21620              	.LVL2767:
 21621              	.L1541:
9985:Core/Src/bno055.c ****     }
 21622              		.loc 1 9985 16 view .LVU6212
 21623 04a4 6FF07E04 		mvn	r4, #126
 21624 04a8 F0E7     		b	.L1521
 21625              	.L1551:
 21626 04aa 00BF     		.align	2
 21627              	.L1550:
 21628 04ac 00000000 		.word	p_bno055
 21629              		.cfi_endproc
 21630              	.LFE168:
 21632              		.section	.text.bno055_read_accel_offset,"ax",%progbits
 21633              		.align	1
 21634              		.global	bno055_read_accel_offset
 21635              		.syntax unified
 21636              		.thumb
 21637              		.thumb_func
 21639              	bno055_read_accel_offset:
 21640              	.LVL2768:
 21641              	.LFB169:
10281:Core/Src/bno055.c **** 
10282:Core/Src/bno055.c **** /*!
10283:Core/Src/bno055.c ****  *  @brief This API is used to read accel offset and accel radius
10284:Core/Src/bno055.c ****  *  offset form register 0x55 to 0x5A and radius form 0x67 and 0x68
10285:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 612


10286:Core/Src/bno055.c ****  *  @param accel_offset : The value of accel offset and radius
10287:Core/Src/bno055.c ****  *
10288:Core/Src/bno055.c ****  *      bno055_accel_offset_t |     result
10289:Core/Src/bno055.c ****  *      ------------------- | ----------------
10290:Core/Src/bno055.c ****  *               x          |  accel offset x
10291:Core/Src/bno055.c ****  *               y          |  accel offset y
10292:Core/Src/bno055.c ****  *               z          |  accel offset z
10293:Core/Src/bno055.c ****  *               r          |  accel offset r
10294:Core/Src/bno055.c ****  *
10295:Core/Src/bno055.c ****  *
10296:Core/Src/bno055.c ****  *  @return results of bus communication function
10297:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10298:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10299:Core/Src/bno055.c ****  *
10300:Core/Src/bno055.c ****  *  @note  The range of the accel offset varies based on
10301:Core/Src/bno055.c ****  *  the G-range of accel sensor.
10302:Core/Src/bno055.c ****  *
10303:Core/Src/bno055.c ****  *  accel G range   |  offset range
10304:Core/Src/bno055.c ****  * ---------------  |  --------------
10305:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_2G  |   +/-2000
10306:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_4G  |   +/-4000
10307:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_8G  |   +/-8000
10308:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_16G |   +/-16000
10309:Core/Src/bno055.c ****  *
10310:Core/Src/bno055.c ****  *  accel G range can be configured by using the
10311:Core/Src/bno055.c ****  *  bno055_set_accel_range() API
10312:Core/Src/bno055.c ****  */
10313:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_offset(struct bno055_accel_offset_t  *accel_offset)
10314:Core/Src/bno055.c **** {
 21642              		.loc 1 10314 1 is_stmt 1 view -0
 21643              		.cfi_startproc
 21644              		@ args = 0, pretend = 0, frame = 8
 21645              		@ frame_needed = 0, uses_anonymous_args = 0
 21646              		.loc 1 10314 1 is_stmt 0 view .LVU6214
 21647 0000 70B5     		push	{r4, r5, r6, lr}
 21648              		.cfi_def_cfa_offset 16
 21649              		.cfi_offset 4, -16
 21650              		.cfi_offset 5, -12
 21651              		.cfi_offset 6, -8
 21652              		.cfi_offset 14, -4
 21653 0002 82B0     		sub	sp, sp, #8
 21654              		.cfi_def_cfa_offset 24
 21655 0004 0446     		mov	r4, r0
10315:Core/Src/bno055.c ****     /* Variable used to return value of
10316:Core/Src/bno055.c ****      * communication routine*/
10317:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 21656              		.loc 1 10317 5 is_stmt 1 view .LVU6215
 21657              	.LVL2769:
10318:Core/Src/bno055.c **** 
10319:Core/Src/bno055.c ****     /* Array holding the accel offset values
10320:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] - offset x->LSB
10321:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] - offset x->MSB
10322:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] - offset y->LSB
10323:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] - offset y->MSB
10324:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] - offset z->LSB
10325:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] - offset z->MSB
10326:Core/Src/bno055.c ****      */
ARM GAS  /tmp/ccOloYeZ.s 			page 613


10327:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_OFFSET_ARRAY] = {
 21658              		.loc 1 10327 5 view .LVU6216
 21659              		.loc 1 10327 8 is_stmt 0 view .LVU6217
 21660 0006 2C4B     		ldr	r3, .L1562
 21661 0008 93E80300 		ldm	r3, {r0, r1}
 21662              	.LVL2770:
 21663              		.loc 1 10327 8 view .LVU6218
 21664 000c 0090     		str	r0, [sp]
 21665 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
10328:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
10329:Core/Src/bno055.c ****     };
10330:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 21666              		.loc 1 10330 5 is_stmt 1 view .LVU6219
 21667              	.LVL2771:
10331:Core/Src/bno055.c **** 
10332:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
10333:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 21668              		.loc 1 10333 5 view .LVU6220
 21669              		.loc 1 10333 18 is_stmt 0 view .LVU6221
 21670 0012 2A4B     		ldr	r3, .L1562+4
 21671 0014 1B68     		ldr	r3, [r3]
 21672              		.loc 1 10333 8 view .LVU6222
 21673 0016 002B     		cmp	r3, #0
 21674 0018 42D0     		beq	.L1556
10334:Core/Src/bno055.c ****     {
10335:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10336:Core/Src/bno055.c ****     }
10337:Core/Src/bno055.c ****     else
10338:Core/Src/bno055.c ****     {
10339:Core/Src/bno055.c ****         /*condition check for page, accel offset is
10340:Core/Src/bno055.c ****          * available in the page zero*/
10341:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 21675              		.loc 1 10341 9 is_stmt 1 view .LVU6223
 21676              		.loc 1 10341 21 is_stmt 0 view .LVU6224
 21677 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 21678              		.loc 1 10341 12 view .LVU6225
 21679 001c 002B     		cmp	r3, #0
 21680 001e 39D1     		bne	.L1561
 21681              	.LVL2772:
 21682              	.L1554:
10342:Core/Src/bno055.c ****         {
10343:Core/Src/bno055.c ****             /* Write the page zero*/
10344:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
10345:Core/Src/bno055.c ****         }
10346:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 21683              		.loc 1 10346 53 discriminator 1 view .LVU6226
 21684 0020 264B     		ldr	r3, .L1562+4
 21685 0022 1B68     		ldr	r3, [r3]
 21686 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 21687              		.loc 1 10346 41 discriminator 1 view .LVU6227
 21688 0026 002B     		cmp	r3, #0
 21689 0028 3DD1     		bne	.L1557
 21690              	.L1555:
10347:Core/Src/bno055.c ****         {
10348:Core/Src/bno055.c ****             /* Read accel offset value it is six bytes of data*/
10349:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21691              		.loc 1 10349 13 is_stmt 1 view .LVU6228
ARM GAS  /tmp/ccOloYeZ.s 			page 614


 21692              		.loc 1 10349 32 is_stmt 0 view .LVU6229
 21693 002a 244B     		ldr	r3, .L1562+4
 21694 002c 1868     		ldr	r0, [r3]
 21695 002e 0569     		ldr	r5, [r0, #16]
 21696              		.loc 1 10349 24 view .LVU6230
 21697 0030 0623     		movs	r3, #6
 21698 0032 6A46     		mov	r2, sp
 21699 0034 5521     		movs	r1, #85
 21700 0036 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21701 0038 A847     		blx	r5
 21702              	.LVL2773:
10350:Core/Src/bno055.c ****                                                       BNO055_ACCEL_OFFSET_X_LSB_REG,
10351:Core/Src/bno055.c ****                                                       data_u8,
10352:Core/Src/bno055.c ****                                                       BNO055_ACCEL_OFFSET_ARRAY);
10353:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 21703              		.loc 1 10353 13 is_stmt 1 view .LVU6231
 21704              		.loc 1 10353 16 is_stmt 0 view .LVU6232
 21705 003a 0546     		mov	r5, r0
 21706 003c 0028     		cmp	r0, #0
 21707 003e 35D1     		bne	.L1558
10354:Core/Src/bno055.c ****             {
10355:Core/Src/bno055.c ****                 /* Read accel x offset value*/
10356:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 21708              		.loc 1 10356 17 is_stmt 1 view .LVU6233
10357:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10358:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 21709              		.loc 1 10358 17 view .LVU6234
10359:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10360:Core/Src/bno055.c ****                 accel_offset->x =
 21710              		.loc 1 10360 17 view .LVU6235
10361:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 21711              		.loc 1 10361 34 is_stmt 0 view .LVU6236
 21712 0040 9DF90120 		ldrsb	r2, [sp, #1]
10362:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB]));
 21713              		.loc 1 10362 35 view .LVU6237
 21714 0044 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
10361:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 21715              		.loc 1 10361 21 view .LVU6238
 21716 0048 43EA0223 		orr	r3, r3, r2, lsl #8
10360:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 21717              		.loc 1 10360 33 view .LVU6239
 21718 004c 2380     		strh	r3, [r4]	@ movhi
10363:Core/Src/bno055.c **** 
10364:Core/Src/bno055.c ****                 /* Read accel y offset value*/
10365:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 21719              		.loc 1 10365 17 is_stmt 1 view .LVU6240
10366:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10367:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 21720              		.loc 1 10367 17 view .LVU6241
10368:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10369:Core/Src/bno055.c ****                 accel_offset->y =
 21721              		.loc 1 10369 17 view .LVU6242
10370:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 21722              		.loc 1 10370 34 is_stmt 0 view .LVU6243
 21723 004e 9DF90320 		ldrsb	r2, [sp, #3]
10371:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB]));
 21724              		.loc 1 10371 35 view .LVU6244
ARM GAS  /tmp/ccOloYeZ.s 			page 615


 21725 0052 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
10370:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 21726              		.loc 1 10370 21 view .LVU6245
 21727 0056 43EA0223 		orr	r3, r3, r2, lsl #8
10369:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 21728              		.loc 1 10369 33 view .LVU6246
 21729 005a 6380     		strh	r3, [r4, #2]	@ movhi
10372:Core/Src/bno055.c **** 
10373:Core/Src/bno055.c ****                 /* Read accel z offset value*/
10374:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 21730              		.loc 1 10374 17 is_stmt 1 view .LVU6247
10375:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10376:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 21731              		.loc 1 10376 17 view .LVU6248
10377:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10378:Core/Src/bno055.c ****                 accel_offset->z =
 21732              		.loc 1 10378 17 view .LVU6249
10379:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 21733              		.loc 1 10379 34 is_stmt 0 view .LVU6250
 21734 005c 9DF90520 		ldrsb	r2, [sp, #5]
10380:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB]));
 21735              		.loc 1 10380 35 view .LVU6251
 21736 0060 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
10379:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 21737              		.loc 1 10379 21 view .LVU6252
 21738 0064 43EA0223 		orr	r3, r3, r2, lsl #8
10378:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 21739              		.loc 1 10378 33 view .LVU6253
 21740 0068 A380     		strh	r3, [r4, #4]	@ movhi
10381:Core/Src/bno055.c **** 
10382:Core/Src/bno055.c ****                 /* Read accel radius value
10383:Core/Src/bno055.c ****                  * it is two bytes of data*/
10384:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21741              		.loc 1 10384 17 is_stmt 1 view .LVU6254
 21742              		.loc 1 10384 37 is_stmt 0 view .LVU6255
 21743 006a 144B     		ldr	r3, .L1562+4
 21744 006c 1868     		ldr	r0, [r3]
 21745              	.LVL2774:
 21746              		.loc 1 10384 37 view .LVU6256
 21747 006e 0669     		ldr	r6, [r0, #16]
 21748              		.loc 1 10384 29 view .LVU6257
 21749 0070 0223     		movs	r3, #2
 21750 0072 6A46     		mov	r2, sp
 21751 0074 6721     		movs	r1, #103
 21752 0076 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21753 0078 B047     		blx	r6
 21754              	.LVL2775:
 21755              		.loc 1 10384 26 view .LVU6258
 21756 007a 55FA80F0 		uxtab	r0, r5, r0
 21757 007e 40B2     		sxtb	r0, r0
 21758              	.LVL2776:
10385:Core/Src/bno055.c ****                                                            BNO055_ACCEL_RADIUS_LSB_REG,
10386:Core/Src/bno055.c ****                                                            data_u8,
10387:Core/Src/bno055.c ****                                                            BNO055_LSB_MSB_READ_LENGTH);
10388:Core/Src/bno055.c **** 
10389:Core/Src/bno055.c ****                 /* Array holding the accel radius values
10390:Core/Src/bno055.c ****                  * data_u8[BNO055_OFFSET_RADIUS_LSB] - radius->LSB
ARM GAS  /tmp/ccOloYeZ.s 			page 616


10391:Core/Src/bno055.c ****                  * data_u8[BNO055_OFFSET_RADIUS_MSB] - radius->MSB
10392:Core/Src/bno055.c ****                  */
10393:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21759              		.loc 1 10393 17 is_stmt 1 view .LVU6259
 21760              		.loc 1 10393 20 is_stmt 0 view .LVU6260
 21761 0080 B8B9     		cbnz	r0, .L1559
10394:Core/Src/bno055.c ****                 {
10395:Core/Src/bno055.c ****                     data_u8[BNO055_OFFSET_RADIUS_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_OFFSET_R
 21762              		.loc 1 10395 21 is_stmt 1 view .LVU6261
10396:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_RADIUS_LSB
10397:Core/Src/bno055.c ****                     data_u8[BNO055_OFFSET_RADIUS_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_OFFSET_R
 21763              		.loc 1 10397 21 view .LVU6262
10398:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_RADIUS_MSB
10399:Core/Src/bno055.c ****                     accel_offset->r =
 21764              		.loc 1 10399 21 view .LVU6263
10400:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 21765              		.loc 1 10400 38 is_stmt 0 view .LVU6264
 21766 0082 9DF90120 		ldrsb	r2, [sp, #1]
10401:Core/Src/bno055.c ****                               (data_u8[BNO055_OFFSET_RADIUS_LSB]));
 21767              		.loc 1 10401 39 view .LVU6265
 21768 0086 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
10400:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 21769              		.loc 1 10400 25 view .LVU6266
 21770 008a 43EA0223 		orr	r3, r3, r2, lsl #8
10399:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 21771              		.loc 1 10399 37 view .LVU6267
 21772 008e E380     		strh	r3, [r4, #6]	@ movhi
 21773              	.LVL2777:
 21774              	.L1553:
10402:Core/Src/bno055.c ****                 }
10403:Core/Src/bno055.c ****                 else
10404:Core/Src/bno055.c ****                 {
10405:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
10406:Core/Src/bno055.c ****                 }
10407:Core/Src/bno055.c ****             }
10408:Core/Src/bno055.c ****             else
10409:Core/Src/bno055.c ****             {
10410:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10411:Core/Src/bno055.c ****             }
10412:Core/Src/bno055.c ****         }
10413:Core/Src/bno055.c ****         else
10414:Core/Src/bno055.c ****         {
10415:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
10416:Core/Src/bno055.c ****         }
10417:Core/Src/bno055.c ****     }
10418:Core/Src/bno055.c **** 
10419:Core/Src/bno055.c ****     return com_rslt;
10420:Core/Src/bno055.c **** }
 21775              		.loc 1 10420 1 view .LVU6268
 21776 0090 02B0     		add	sp, sp, #8
 21777              		.cfi_remember_state
 21778              		.cfi_def_cfa_offset 16
 21779              		@ sp needed
 21780 0092 70BD     		pop	{r4, r5, r6, pc}
 21781              	.LVL2778:
 21782              	.L1561:
 21783              		.cfi_restore_state
ARM GAS  /tmp/ccOloYeZ.s 			page 617


10344:Core/Src/bno055.c ****         }
 21784              		.loc 1 10344 13 is_stmt 1 view .LVU6269
10344:Core/Src/bno055.c ****         }
 21785              		.loc 1 10344 23 is_stmt 0 view .LVU6270
 21786 0094 0020     		movs	r0, #0
 21787 0096 FFF7FEFF 		bl	bno055_write_page_id
 21788              	.LVL2779:
10346:Core/Src/bno055.c ****         {
 21789              		.loc 1 10346 9 is_stmt 1 view .LVU6271
10346:Core/Src/bno055.c ****         {
 21790              		.loc 1 10346 12 is_stmt 0 view .LVU6272
 21791 009a 0028     		cmp	r0, #0
 21792 009c C5D0     		beq	.L1555
 21793 009e BFE7     		b	.L1554
 21794              	.LVL2780:
 21795              	.L1556:
10335:Core/Src/bno055.c ****     }
 21796              		.loc 1 10335 16 view .LVU6273
 21797 00a0 6FF07E00 		mvn	r0, #126
 21798 00a4 F4E7     		b	.L1553
 21799              	.LVL2781:
 21800              	.L1557:
10415:Core/Src/bno055.c ****         }
 21801              		.loc 1 10415 22 view .LVU6274
 21802 00a6 4FF0FF30 		mov	r0, #-1
 21803 00aa F1E7     		b	.L1553
 21804              	.LVL2782:
 21805              	.L1558:
10410:Core/Src/bno055.c ****             }
 21806              		.loc 1 10410 26 view .LVU6275
 21807 00ac 4FF0FF30 		mov	r0, #-1
 21808              	.LVL2783:
10410:Core/Src/bno055.c ****             }
 21809              		.loc 1 10410 26 view .LVU6276
 21810 00b0 EEE7     		b	.L1553
 21811              	.LVL2784:
 21812              	.L1559:
10405:Core/Src/bno055.c ****                 }
 21813              		.loc 1 10405 30 view .LVU6277
 21814 00b2 4FF0FF30 		mov	r0, #-1
 21815              	.LVL2785:
10405:Core/Src/bno055.c ****                 }
 21816              		.loc 1 10405 30 view .LVU6278
 21817 00b6 EBE7     		b	.L1553
 21818              	.L1563:
 21819              		.align	2
 21820              	.L1562:
 21821 00b8 00000000 		.word	.LANCHOR0
 21822 00bc 00000000 		.word	p_bno055
 21823              		.cfi_endproc
 21824              	.LFE169:
 21826              		.section	.text.bno055_write_accel_offset,"ax",%progbits
 21827              		.align	1
 21828              		.global	bno055_write_accel_offset
 21829              		.syntax unified
 21830              		.thumb
 21831              		.thumb_func
ARM GAS  /tmp/ccOloYeZ.s 			page 618


 21833              	bno055_write_accel_offset:
 21834              	.LVL2786:
 21835              	.LFB170:
10421:Core/Src/bno055.c **** 
10422:Core/Src/bno055.c **** /*!
10423:Core/Src/bno055.c ****  *  @brief This API is used to write accel offset and accel radius
10424:Core/Src/bno055.c ****  *  offset form register 0x55 to 0x5A and radius form 0x67 and 0x68
10425:Core/Src/bno055.c ****  *
10426:Core/Src/bno055.c ****  *  @param accel_offset : The value of accel offset and radius
10427:Core/Src/bno055.c ****  *
10428:Core/Src/bno055.c ****  *      bno055_accel_offset_t |     result
10429:Core/Src/bno055.c ****  *      ------------------- | ----------------
10430:Core/Src/bno055.c ****  *               x          |  accel offset x
10431:Core/Src/bno055.c ****  *               y          |  accel offset y
10432:Core/Src/bno055.c ****  *               z          |  accel offset z
10433:Core/Src/bno055.c ****  *               r          |  accel offset r
10434:Core/Src/bno055.c ****  *
10435:Core/Src/bno055.c ****  *
10436:Core/Src/bno055.c ****  *  @return results of bus communication function
10437:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10438:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10439:Core/Src/bno055.c ****  *
10440:Core/Src/bno055.c ****  *  @note  The range of the accel offset varies based on
10441:Core/Src/bno055.c ****  *  the G-range of accel sensor.
10442:Core/Src/bno055.c ****  *
10443:Core/Src/bno055.c ****  *  accel G range   |  offset range
10444:Core/Src/bno055.c ****  * ---------------  |  --------------
10445:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_2G  |   +/-2000
10446:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_4G  |   +/-4000
10447:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_8G  |   +/-8000
10448:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_16G |   +/-16000
10449:Core/Src/bno055.c ****  *
10450:Core/Src/bno055.c ****  *  accel G range can be configured by using the
10451:Core/Src/bno055.c ****  *  bno055_set_accel_range() API
10452:Core/Src/bno055.c ****  */
10453:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_accel_offset(struct bno055_accel_offset_t  *accel_offset)
10454:Core/Src/bno055.c **** {
 21836              		.loc 1 10454 1 is_stmt 1 view -0
 21837              		.cfi_startproc
 21838              		@ args = 0, pretend = 0, frame = 8
 21839              		@ frame_needed = 0, uses_anonymous_args = 0
 21840              		.loc 1 10454 1 is_stmt 0 view .LVU6280
 21841 0000 70B5     		push	{r4, r5, r6, lr}
 21842              		.cfi_def_cfa_offset 16
 21843              		.cfi_offset 4, -16
 21844              		.cfi_offset 5, -12
 21845              		.cfi_offset 6, -8
 21846              		.cfi_offset 14, -4
 21847 0002 82B0     		sub	sp, sp, #8
 21848              		.cfi_def_cfa_offset 24
10455:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 21849              		.loc 1 10455 5 is_stmt 1 view .LVU6281
 21850              	.LVL2787:
10456:Core/Src/bno055.c ****     u8 data1_u8r = BNO055_INIT_VALUE;
 21851              		.loc 1 10456 5 view .LVU6282
10457:Core/Src/bno055.c ****     u8 data2_u8r = BNO055_INIT_VALUE;
 21852              		.loc 1 10457 5 view .LVU6283
ARM GAS  /tmp/ccOloYeZ.s 			page 619


 21853              		.loc 1 10457 8 is_stmt 0 view .LVU6284
 21854 0004 0023     		movs	r3, #0
 21855 0006 8DF80730 		strb	r3, [sp, #7]
10458:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 21856              		.loc 1 10458 5 is_stmt 1 view .LVU6285
 21857              		.loc 1 10458 8 is_stmt 0 view .LVU6286
 21858 000a 8DF80630 		strb	r3, [sp, #6]
10459:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 21859              		.loc 1 10459 5 is_stmt 1 view .LVU6287
 21860              	.LVL2788:
10460:Core/Src/bno055.c **** 
10461:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
10462:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 21861              		.loc 1 10462 5 view .LVU6288
 21862              		.loc 1 10462 18 is_stmt 0 view .LVU6289
 21863 000e 8C4B     		ldr	r3, .L1581
 21864 0010 1B68     		ldr	r3, [r3]
 21865              		.loc 1 10462 8 view .LVU6290
 21866 0012 002B     		cmp	r3, #0
 21867 0014 00F01081 		beq	.L1575
 21868 0018 0546     		mov	r5, r0
10463:Core/Src/bno055.c ****     {
10464:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10465:Core/Src/bno055.c ****     }
10466:Core/Src/bno055.c ****     else
10467:Core/Src/bno055.c ****     {
10468:Core/Src/bno055.c ****         /* The write operation effective only if the operation
10469:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
10470:Core/Src/bno055.c ****          * current operation mode and set the config mode */
10471:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 21869              		.loc 1 10471 9 is_stmt 1 view .LVU6291
 21870              		.loc 1 10471 19 is_stmt 0 view .LVU6292
 21871 001a 0DF10600 		add	r0, sp, #6
 21872              	.LVL2789:
 21873              		.loc 1 10471 19 view .LVU6293
 21874 001e FFF7FEFF 		bl	bno055_get_operation_mode
 21875              	.LVL2790:
10472:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 21876              		.loc 1 10472 9 is_stmt 1 view .LVU6294
 21877              		.loc 1 10472 12 is_stmt 0 view .LVU6295
 21878 0022 0446     		mov	r4, r0
 21879 0024 0028     		cmp	r0, #0
 21880 0026 40F0F680 		bne	.L1576
10473:Core/Src/bno055.c ****         {
10474:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 21881              		.loc 1 10474 13 is_stmt 1 view .LVU6296
 21882              		.loc 1 10474 32 is_stmt 0 view .LVU6297
 21883 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 21884              		.loc 1 10474 16 view .LVU6298
 21885 002e 002B     		cmp	r3, #0
 21886 0030 40F0EB80 		bne	.L1579
 21887              	.LVL2791:
 21888              	.L1567:
10475:Core/Src/bno055.c ****             {
10476:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
10477:Core/Src/bno055.c ****             }
10478:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
ARM GAS  /tmp/ccOloYeZ.s 			page 620


 21889              		.loc 1 10478 13 is_stmt 1 view .LVU6299
 21890              		.loc 1 10478 16 is_stmt 0 view .LVU6300
 21891 0034 002C     		cmp	r4, #0
 21892 0036 40F0F680 		bne	.L1577
10479:Core/Src/bno055.c ****             {
10480:Core/Src/bno055.c ****                 /* write accel offset x value*/
10481:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21893              		.loc 1 10481 17 is_stmt 1 view .LVU6301
 21894              		.loc 1 10481 36 is_stmt 0 view .LVU6302
 21895 003a 814B     		ldr	r3, .L1581
 21896 003c 1868     		ldr	r0, [r3]
 21897 003e 0469     		ldr	r4, [r0, #16]
 21898              	.LVL2792:
 21899              		.loc 1 10481 28 view .LVU6303
 21900 0040 0123     		movs	r3, #1
 21901 0042 0DF10702 		add	r2, sp, #7
 21902 0046 5521     		movs	r1, #85
 21903 0048 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21904 004a A047     		blx	r4
 21905              	.LVL2793:
10482:Core/Src/bno055.c ****                                                           BNO055_ACCEL_OFFSET_X_LSB_REG,
10483:Core/Src/bno055.c ****                                                           &data2_u8r,
10484:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
10485:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21906              		.loc 1 10485 17 is_stmt 1 view .LVU6304
 21907              		.loc 1 10485 20 is_stmt 0 view .LVU6305
 21908 004c 0446     		mov	r4, r0
 21909 004e 78B9     		cbnz	r0, .L1568
10486:Core/Src/bno055.c ****                 {
10487:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->x & BNO055_SIC_HEX_0_0_F_F_DATA));
 21910              		.loc 1 10487 21 is_stmt 1 view .LVU6306
 21911              		.loc 1 10487 51 is_stmt 0 view .LVU6307
 21912 0050 B5F90030 		ldrsh	r3, [r5]
 21913              	.LVL2794:
10488:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_X_LSB, data1_u8r
 21914              		.loc 1 10488 21 is_stmt 1 view .LVU6308
 21915              		.loc 1 10488 31 is_stmt 0 view .LVU6309
 21916 0054 8DF80730 		strb	r3, [sp, #7]
10489:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21917              		.loc 1 10489 21 is_stmt 1 view .LVU6310
 21918              		.loc 1 10489 41 is_stmt 0 view .LVU6311
 21919 0058 794B     		ldr	r3, .L1581
 21920              	.LVL2795:
 21921              		.loc 1 10489 41 view .LVU6312
 21922 005a 1868     		ldr	r0, [r3]
 21923              	.LVL2796:
 21924              		.loc 1 10489 41 view .LVU6313
 21925 005c C668     		ldr	r6, [r0, #12]
 21926              		.loc 1 10489 33 view .LVU6314
 21927 005e 0123     		movs	r3, #1
 21928 0060 0DF10702 		add	r2, sp, #7
 21929              	.LVL2797:
 21930              		.loc 1 10489 33 view .LVU6315
 21931 0064 5521     		movs	r1, #85
 21932 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21933 0068 B047     		blx	r6
 21934              	.LVL2798:
ARM GAS  /tmp/ccOloYeZ.s 			page 621


 21935              		.loc 1 10489 30 view .LVU6316
 21936 006a 54FA80F0 		uxtab	r0, r4, r0
 21937 006e 44B2     		sxtb	r4, r0
 21938              	.LVL2799:
 21939              	.L1568:
10490:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_X_LSB_REG,
10491:Core/Src/bno055.c ****                                                                 &data2_u8r,
10492:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10493:Core/Src/bno055.c ****                 }
10494:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21940              		.loc 1 10494 17 is_stmt 1 view .LVU6317
 21941              		.loc 1 10494 37 is_stmt 0 view .LVU6318
 21942 0070 734B     		ldr	r3, .L1581
 21943 0072 1868     		ldr	r0, [r3]
 21944 0074 0669     		ldr	r6, [r0, #16]
 21945              		.loc 1 10494 29 view .LVU6319
 21946 0076 0123     		movs	r3, #1
 21947 0078 0DF10702 		add	r2, sp, #7
 21948 007c 5621     		movs	r1, #86
 21949 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21950 0080 B047     		blx	r6
 21951              	.LVL2800:
 21952              		.loc 1 10494 26 view .LVU6320
 21953 0082 54FA80F4 		uxtab	r4, r4, r0
 21954              	.LVL2801:
 21955              		.loc 1 10494 26 view .LVU6321
 21956 0086 E6B2     		uxtb	r6, r4
 21957 0088 64B2     		sxtb	r4, r4
 21958              	.LVL2802:
10495:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_X_MSB_REG,
10496:Core/Src/bno055.c ****                                                            &data2_u8r,
10497:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10498:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21959              		.loc 1 10498 17 is_stmt 1 view .LVU6322
 21960              		.loc 1 10498 20 is_stmt 0 view .LVU6323
 21961 008a 7CB9     		cbnz	r4, .L1569
10499:Core/Src/bno055.c ****                 {
10500:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->x >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_
 21962              		.loc 1 10500 21 is_stmt 1 view .LVU6324
 21963              		.loc 1 10500 34 is_stmt 0 view .LVU6325
 21964 008c 95F90130 		ldrsb	r3, [r5, #1]
 21965              	.LVL2803:
10501:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_X_MSB, data1_u8r
 21966              		.loc 1 10501 21 is_stmt 1 view .LVU6326
 21967              		.loc 1 10501 31 is_stmt 0 view .LVU6327
 21968 0090 8DF80730 		strb	r3, [sp, #7]
10502:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21969              		.loc 1 10502 21 is_stmt 1 view .LVU6328
 21970              		.loc 1 10502 41 is_stmt 0 view .LVU6329
 21971 0094 6A4B     		ldr	r3, .L1581
 21972              	.LVL2804:
 21973              		.loc 1 10502 41 view .LVU6330
 21974 0096 1868     		ldr	r0, [r3]
 21975 0098 C468     		ldr	r4, [r0, #12]
 21976              	.LVL2805:
 21977              		.loc 1 10502 33 view .LVU6331
 21978 009a 0123     		movs	r3, #1
ARM GAS  /tmp/ccOloYeZ.s 			page 622


 21979 009c 0DF10702 		add	r2, sp, #7
 21980              	.LVL2806:
 21981              		.loc 1 10502 33 view .LVU6332
 21982 00a0 5621     		movs	r1, #86
 21983 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21984 00a4 A047     		blx	r4
 21985              	.LVL2807:
 21986              		.loc 1 10502 30 view .LVU6333
 21987 00a6 56FA80F4 		uxtab	r4, r6, r0
 21988 00aa 64B2     		sxtb	r4, r4
 21989              	.LVL2808:
 21990              	.L1569:
10503:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_X_MSB_REG,
10504:Core/Src/bno055.c ****                                                                 &data2_u8r,
10505:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10506:Core/Src/bno055.c ****                 }
10507:Core/Src/bno055.c **** 
10508:Core/Src/bno055.c ****                 /* write accel offset y value*/
10509:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21991              		.loc 1 10509 17 is_stmt 1 view .LVU6334
 21992              		.loc 1 10509 37 is_stmt 0 view .LVU6335
 21993 00ac 644B     		ldr	r3, .L1581
 21994 00ae 1868     		ldr	r0, [r3]
 21995 00b0 0669     		ldr	r6, [r0, #16]
 21996              		.loc 1 10509 29 view .LVU6336
 21997 00b2 0123     		movs	r3, #1
 21998 00b4 0DF10702 		add	r2, sp, #7
 21999 00b8 5721     		movs	r1, #87
 22000 00ba 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22001 00bc B047     		blx	r6
 22002              	.LVL2809:
 22003              		.loc 1 10509 26 view .LVU6337
 22004 00be 54FA80F4 		uxtab	r4, r4, r0
 22005              	.LVL2810:
 22006              		.loc 1 10509 26 view .LVU6338
 22007 00c2 E6B2     		uxtb	r6, r4
 22008 00c4 64B2     		sxtb	r4, r4
 22009              	.LVL2811:
10510:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_Y_LSB_REG,
10511:Core/Src/bno055.c ****                                                            &data2_u8r,
10512:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10513:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22010              		.loc 1 10513 17 is_stmt 1 view .LVU6339
 22011              		.loc 1 10513 20 is_stmt 0 view .LVU6340
 22012 00c6 7CB9     		cbnz	r4, .L1570
10514:Core/Src/bno055.c ****                 {
10515:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->y & BNO055_SIC_HEX_0_0_F_F_DATA));
 22013              		.loc 1 10515 21 is_stmt 1 view .LVU6341
 22014              		.loc 1 10515 51 is_stmt 0 view .LVU6342
 22015 00c8 B5F90230 		ldrsh	r3, [r5, #2]
 22016              	.LVL2812:
10516:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_Y_LSB, data1_u8r
 22017              		.loc 1 10516 21 is_stmt 1 view .LVU6343
 22018              		.loc 1 10516 31 is_stmt 0 view .LVU6344
 22019 00cc 8DF80730 		strb	r3, [sp, #7]
10517:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22020              		.loc 1 10517 21 is_stmt 1 view .LVU6345
ARM GAS  /tmp/ccOloYeZ.s 			page 623


 22021              		.loc 1 10517 41 is_stmt 0 view .LVU6346
 22022 00d0 5B4B     		ldr	r3, .L1581
 22023              	.LVL2813:
 22024              		.loc 1 10517 41 view .LVU6347
 22025 00d2 1868     		ldr	r0, [r3]
 22026 00d4 C468     		ldr	r4, [r0, #12]
 22027              	.LVL2814:
 22028              		.loc 1 10517 33 view .LVU6348
 22029 00d6 0123     		movs	r3, #1
 22030 00d8 0DF10702 		add	r2, sp, #7
 22031              	.LVL2815:
 22032              		.loc 1 10517 33 view .LVU6349
 22033 00dc 5721     		movs	r1, #87
 22034 00de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22035 00e0 A047     		blx	r4
 22036              	.LVL2816:
 22037              		.loc 1 10517 30 view .LVU6350
 22038 00e2 56FA80F4 		uxtab	r4, r6, r0
 22039 00e6 64B2     		sxtb	r4, r4
 22040              	.LVL2817:
 22041              	.L1570:
10518:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_Y_LSB_REG,
10519:Core/Src/bno055.c ****                                                                 &data2_u8r,
10520:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10521:Core/Src/bno055.c ****                 }
10522:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22042              		.loc 1 10522 17 is_stmt 1 view .LVU6351
 22043              		.loc 1 10522 37 is_stmt 0 view .LVU6352
 22044 00e8 554B     		ldr	r3, .L1581
 22045 00ea 1868     		ldr	r0, [r3]
 22046 00ec 0669     		ldr	r6, [r0, #16]
 22047              		.loc 1 10522 29 view .LVU6353
 22048 00ee 0123     		movs	r3, #1
 22049 00f0 0DF10702 		add	r2, sp, #7
 22050 00f4 5821     		movs	r1, #88
 22051 00f6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22052 00f8 B047     		blx	r6
 22053              	.LVL2818:
 22054              		.loc 1 10522 26 view .LVU6354
 22055 00fa 54FA80F4 		uxtab	r4, r4, r0
 22056              	.LVL2819:
 22057              		.loc 1 10522 26 view .LVU6355
 22058 00fe E6B2     		uxtb	r6, r4
 22059 0100 64B2     		sxtb	r4, r4
 22060              	.LVL2820:
10523:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_Y_MSB_REG,
10524:Core/Src/bno055.c ****                                                            &data2_u8r,
10525:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10526:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22061              		.loc 1 10526 17 is_stmt 1 view .LVU6356
 22062              		.loc 1 10526 20 is_stmt 0 view .LVU6357
 22063 0102 7CB9     		cbnz	r4, .L1571
10527:Core/Src/bno055.c ****                 {
10528:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->y >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_
 22064              		.loc 1 10528 21 is_stmt 1 view .LVU6358
 22065              		.loc 1 10528 34 is_stmt 0 view .LVU6359
 22066 0104 95F90330 		ldrsb	r3, [r5, #3]
ARM GAS  /tmp/ccOloYeZ.s 			page 624


 22067              	.LVL2821:
10529:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_Y_MSB, data1_u8r
 22068              		.loc 1 10529 21 is_stmt 1 view .LVU6360
 22069              		.loc 1 10529 31 is_stmt 0 view .LVU6361
 22070 0108 8DF80730 		strb	r3, [sp, #7]
10530:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22071              		.loc 1 10530 21 is_stmt 1 view .LVU6362
 22072              		.loc 1 10530 41 is_stmt 0 view .LVU6363
 22073 010c 4C4B     		ldr	r3, .L1581
 22074              	.LVL2822:
 22075              		.loc 1 10530 41 view .LVU6364
 22076 010e 1868     		ldr	r0, [r3]
 22077 0110 C468     		ldr	r4, [r0, #12]
 22078              	.LVL2823:
 22079              		.loc 1 10530 33 view .LVU6365
 22080 0112 0123     		movs	r3, #1
 22081 0114 0DF10702 		add	r2, sp, #7
 22082              	.LVL2824:
 22083              		.loc 1 10530 33 view .LVU6366
 22084 0118 5821     		movs	r1, #88
 22085 011a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22086 011c A047     		blx	r4
 22087              	.LVL2825:
 22088              		.loc 1 10530 30 view .LVU6367
 22089 011e 56FA80F4 		uxtab	r4, r6, r0
 22090 0122 64B2     		sxtb	r4, r4
 22091              	.LVL2826:
 22092              	.L1571:
10531:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_Y_MSB_REG,
10532:Core/Src/bno055.c ****                                                                 &data2_u8r,
10533:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10534:Core/Src/bno055.c ****                 }
10535:Core/Src/bno055.c **** 
10536:Core/Src/bno055.c ****                 /* write accel offset z value*/
10537:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22093              		.loc 1 10537 17 is_stmt 1 view .LVU6368
 22094              		.loc 1 10537 37 is_stmt 0 view .LVU6369
 22095 0124 464B     		ldr	r3, .L1581
 22096 0126 1868     		ldr	r0, [r3]
 22097 0128 0669     		ldr	r6, [r0, #16]
 22098              		.loc 1 10537 29 view .LVU6370
 22099 012a 0123     		movs	r3, #1
 22100 012c 0DF10702 		add	r2, sp, #7
 22101 0130 5921     		movs	r1, #89
 22102 0132 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22103 0134 B047     		blx	r6
 22104              	.LVL2827:
 22105              		.loc 1 10537 26 view .LVU6371
 22106 0136 54FA80F4 		uxtab	r4, r4, r0
 22107              	.LVL2828:
 22108              		.loc 1 10537 26 view .LVU6372
 22109 013a E6B2     		uxtb	r6, r4
 22110 013c 64B2     		sxtb	r4, r4
 22111              	.LVL2829:
10538:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_Z_LSB_REG,
10539:Core/Src/bno055.c ****                                                            &data2_u8r,
10540:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/ccOloYeZ.s 			page 625


10541:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22112              		.loc 1 10541 17 is_stmt 1 view .LVU6373
 22113              		.loc 1 10541 20 is_stmt 0 view .LVU6374
 22114 013e 7CB9     		cbnz	r4, .L1572
10542:Core/Src/bno055.c ****                 {
10543:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->z & BNO055_SIC_HEX_0_0_F_F_DATA));
 22115              		.loc 1 10543 21 is_stmt 1 view .LVU6375
 22116              		.loc 1 10543 51 is_stmt 0 view .LVU6376
 22117 0140 B5F90430 		ldrsh	r3, [r5, #4]
 22118              	.LVL2830:
10544:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_Z_LSB, data1_u8r
 22119              		.loc 1 10544 21 is_stmt 1 view .LVU6377
 22120              		.loc 1 10544 31 is_stmt 0 view .LVU6378
 22121 0144 8DF80730 		strb	r3, [sp, #7]
10545:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22122              		.loc 1 10545 21 is_stmt 1 view .LVU6379
 22123              		.loc 1 10545 41 is_stmt 0 view .LVU6380
 22124 0148 3D4B     		ldr	r3, .L1581
 22125              	.LVL2831:
 22126              		.loc 1 10545 41 view .LVU6381
 22127 014a 1868     		ldr	r0, [r3]
 22128 014c C468     		ldr	r4, [r0, #12]
 22129              	.LVL2832:
 22130              		.loc 1 10545 33 view .LVU6382
 22131 014e 0123     		movs	r3, #1
 22132 0150 0DF10702 		add	r2, sp, #7
 22133              	.LVL2833:
 22134              		.loc 1 10545 33 view .LVU6383
 22135 0154 5921     		movs	r1, #89
 22136 0156 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22137 0158 A047     		blx	r4
 22138              	.LVL2834:
 22139              		.loc 1 10545 30 view .LVU6384
 22140 015a 56FA80F4 		uxtab	r4, r6, r0
 22141 015e 64B2     		sxtb	r4, r4
 22142              	.LVL2835:
 22143              	.L1572:
10546:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_Z_LSB_REG,
10547:Core/Src/bno055.c ****                                                                 &data2_u8r,
10548:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10549:Core/Src/bno055.c ****                 }
10550:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22144              		.loc 1 10550 17 is_stmt 1 view .LVU6385
 22145              		.loc 1 10550 37 is_stmt 0 view .LVU6386
 22146 0160 374B     		ldr	r3, .L1581
 22147 0162 1868     		ldr	r0, [r3]
 22148 0164 0669     		ldr	r6, [r0, #16]
 22149              		.loc 1 10550 29 view .LVU6387
 22150 0166 0123     		movs	r3, #1
 22151 0168 0DF10702 		add	r2, sp, #7
 22152 016c 5A21     		movs	r1, #90
 22153 016e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22154 0170 B047     		blx	r6
 22155              	.LVL2836:
 22156              		.loc 1 10550 26 view .LVU6388
 22157 0172 54FA80F4 		uxtab	r4, r4, r0
 22158              	.LVL2837:
ARM GAS  /tmp/ccOloYeZ.s 			page 626


 22159              		.loc 1 10550 26 view .LVU6389
 22160 0176 E6B2     		uxtb	r6, r4
 22161 0178 64B2     		sxtb	r4, r4
 22162              	.LVL2838:
10551:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_Z_MSB_REG,
10552:Core/Src/bno055.c ****                                                            &data2_u8r,
10553:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10554:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22163              		.loc 1 10554 17 is_stmt 1 view .LVU6390
 22164              		.loc 1 10554 20 is_stmt 0 view .LVU6391
 22165 017a 7CB9     		cbnz	r4, .L1573
10555:Core/Src/bno055.c ****                 {
10556:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->z >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_
 22166              		.loc 1 10556 21 is_stmt 1 view .LVU6392
 22167              		.loc 1 10556 34 is_stmt 0 view .LVU6393
 22168 017c 95F90530 		ldrsb	r3, [r5, #5]
 22169              	.LVL2839:
10557:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_Z_MSB, data1_u8r
 22170              		.loc 1 10557 21 is_stmt 1 view .LVU6394
 22171              		.loc 1 10557 31 is_stmt 0 view .LVU6395
 22172 0180 8DF80730 		strb	r3, [sp, #7]
10558:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22173              		.loc 1 10558 21 is_stmt 1 view .LVU6396
 22174              		.loc 1 10558 41 is_stmt 0 view .LVU6397
 22175 0184 2E4B     		ldr	r3, .L1581
 22176              	.LVL2840:
 22177              		.loc 1 10558 41 view .LVU6398
 22178 0186 1868     		ldr	r0, [r3]
 22179 0188 C468     		ldr	r4, [r0, #12]
 22180              	.LVL2841:
 22181              		.loc 1 10558 33 view .LVU6399
 22182 018a 0123     		movs	r3, #1
 22183 018c 0DF10702 		add	r2, sp, #7
 22184              	.LVL2842:
 22185              		.loc 1 10558 33 view .LVU6400
 22186 0190 5A21     		movs	r1, #90
 22187 0192 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22188 0194 A047     		blx	r4
 22189              	.LVL2843:
 22190              		.loc 1 10558 30 view .LVU6401
 22191 0196 56FA80F4 		uxtab	r4, r6, r0
 22192 019a 64B2     		sxtb	r4, r4
 22193              	.LVL2844:
 22194              	.L1573:
10559:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_Z_MSB_REG,
10560:Core/Src/bno055.c ****                                                                 &data2_u8r,
10561:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10562:Core/Src/bno055.c ****                 }
10563:Core/Src/bno055.c **** 
10564:Core/Src/bno055.c ****                 /*write accel radius value*/
10565:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22195              		.loc 1 10565 17 is_stmt 1 view .LVU6402
 22196              		.loc 1 10565 37 is_stmt 0 view .LVU6403
 22197 019c 284B     		ldr	r3, .L1581
 22198 019e 1868     		ldr	r0, [r3]
 22199 01a0 0669     		ldr	r6, [r0, #16]
 22200              		.loc 1 10565 29 view .LVU6404
ARM GAS  /tmp/ccOloYeZ.s 			page 627


 22201 01a2 0123     		movs	r3, #1
 22202 01a4 0DF10702 		add	r2, sp, #7
 22203 01a8 6721     		movs	r1, #103
 22204 01aa 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22205 01ac B047     		blx	r6
 22206              	.LVL2845:
 22207              		.loc 1 10565 26 view .LVU6405
 22208 01ae 54FA80F4 		uxtab	r4, r4, r0
 22209              	.LVL2846:
 22210              		.loc 1 10565 26 view .LVU6406
 22211 01b2 64B2     		sxtb	r4, r4
 22212              	.LVL2847:
10566:Core/Src/bno055.c ****                                                            BNO055_ACCEL_RADIUS_LSB_REG,
10567:Core/Src/bno055.c ****                                                            &data2_u8r,
10568:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10569:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22213              		.loc 1 10569 17 is_stmt 1 view .LVU6407
 22214              		.loc 1 10569 20 is_stmt 0 view .LVU6408
 22215 01b4 6CB9     		cbnz	r4, .L1574
10570:Core/Src/bno055.c ****                 {
10571:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->r & BNO055_SIC_HEX_0_0_F_F_DATA));
 22216              		.loc 1 10571 21 is_stmt 1 view .LVU6409
 22217              		.loc 1 10571 51 is_stmt 0 view .LVU6410
 22218 01b6 B5F90630 		ldrsh	r3, [r5, #6]
 22219              	.LVL2848:
10572:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_RADIUS_LSB, data1_u8r);
 22220              		.loc 1 10572 21 is_stmt 1 view .LVU6411
 22221              		.loc 1 10572 31 is_stmt 0 view .LVU6412
 22222 01ba 8DF80730 		strb	r3, [sp, #7]
10573:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22223              		.loc 1 10573 21 is_stmt 1 view .LVU6413
 22224              		.loc 1 10573 40 is_stmt 0 view .LVU6414
 22225 01be 204B     		ldr	r3, .L1581
 22226              	.LVL2849:
 22227              		.loc 1 10573 40 view .LVU6415
 22228 01c0 1868     		ldr	r0, [r3]
 22229 01c2 C468     		ldr	r4, [r0, #12]
 22230              	.LVL2850:
 22231              		.loc 1 10573 32 view .LVU6416
 22232 01c4 0123     		movs	r3, #1
 22233 01c6 0DF10702 		add	r2, sp, #7
 22234              	.LVL2851:
 22235              		.loc 1 10573 32 view .LVU6417
 22236 01ca 6721     		movs	r1, #103
 22237 01cc 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22238 01ce A047     		blx	r4
 22239              	.LVL2852:
 22240              		.loc 1 10573 32 view .LVU6418
 22241 01d0 0446     		mov	r4, r0
 22242              	.LVL2853:
 22243              	.L1574:
10574:Core/Src/bno055.c ****                                                                BNO055_ACCEL_RADIUS_LSB_REG,
10575:Core/Src/bno055.c ****                                                                &data2_u8r,
10576:Core/Src/bno055.c ****                                                                BNO055_GEN_READ_WRITE_LENGTH);
10577:Core/Src/bno055.c ****                 }
10578:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22244              		.loc 1 10578 17 is_stmt 1 view .LVU6419
ARM GAS  /tmp/ccOloYeZ.s 			page 628


 22245              		.loc 1 10578 37 is_stmt 0 view .LVU6420
 22246 01d2 1B4B     		ldr	r3, .L1581
 22247 01d4 1868     		ldr	r0, [r3]
 22248 01d6 0669     		ldr	r6, [r0, #16]
 22249              		.loc 1 10578 29 view .LVU6421
 22250 01d8 0123     		movs	r3, #1
 22251 01da 0DF10702 		add	r2, sp, #7
 22252 01de 6821     		movs	r1, #104
 22253 01e0 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22254 01e2 B047     		blx	r6
 22255              	.LVL2854:
 22256              		.loc 1 10578 26 view .LVU6422
 22257 01e4 54FA80F4 		uxtab	r4, r4, r0
 22258              	.LVL2855:
 22259              		.loc 1 10578 26 view .LVU6423
 22260 01e8 64B2     		sxtb	r4, r4
 22261              	.LVL2856:
10579:Core/Src/bno055.c ****                                                            BNO055_ACCEL_RADIUS_MSB_REG,
10580:Core/Src/bno055.c ****                                                            &data2_u8r,
10581:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10582:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22262              		.loc 1 10582 17 is_stmt 1 view .LVU6424
 22263              		.loc 1 10582 20 is_stmt 0 view .LVU6425
 22264 01ea B4B9     		cbnz	r4, .L1566
10583:Core/Src/bno055.c ****                 {
10584:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->r >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_
 22265              		.loc 1 10584 21 is_stmt 1 view .LVU6426
 22266              		.loc 1 10584 34 is_stmt 0 view .LVU6427
 22267 01ec 95F90730 		ldrsb	r3, [r5, #7]
 22268              	.LVL2857:
10585:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_RADIUS_MSB, data1_u8r);
 22269              		.loc 1 10585 21 is_stmt 1 view .LVU6428
 22270              		.loc 1 10585 31 is_stmt 0 view .LVU6429
 22271 01f0 8DF80730 		strb	r3, [sp, #7]
10586:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22272              		.loc 1 10586 21 is_stmt 1 view .LVU6430
 22273              		.loc 1 10586 40 is_stmt 0 view .LVU6431
 22274 01f4 124B     		ldr	r3, .L1581
 22275              	.LVL2858:
 22276              		.loc 1 10586 40 view .LVU6432
 22277 01f6 1868     		ldr	r0, [r3]
 22278 01f8 C468     		ldr	r4, [r0, #12]
 22279              	.LVL2859:
 22280              		.loc 1 10586 32 view .LVU6433
 22281 01fa 0123     		movs	r3, #1
 22282 01fc 0DF10702 		add	r2, sp, #7
 22283              	.LVL2860:
 22284              		.loc 1 10586 32 view .LVU6434
 22285 0200 6821     		movs	r1, #104
 22286 0202 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22287 0204 A047     		blx	r4
 22288              	.LVL2861:
 22289              		.loc 1 10586 32 view .LVU6435
 22290 0206 0446     		mov	r4, r0
 22291              	.LVL2862:
 22292              		.loc 1 10586 32 view .LVU6436
 22293 0208 07E0     		b	.L1566
ARM GAS  /tmp/ccOloYeZ.s 			page 629


 22294              	.LVL2863:
 22295              	.L1579:
10476:Core/Src/bno055.c ****             }
 22296              		.loc 1 10476 17 is_stmt 1 view .LVU6437
10476:Core/Src/bno055.c ****             }
 22297              		.loc 1 10476 28 is_stmt 0 view .LVU6438
 22298 020a FFF7FEFF 		bl	bno055_set_operation_mode
 22299              	.LVL2864:
10476:Core/Src/bno055.c ****             }
 22300              		.loc 1 10476 25 view .LVU6439
 22301 020e 54FA80F4 		uxtab	r4, r4, r0
 22302 0212 64B2     		sxtb	r4, r4
 22303              	.LVL2865:
10476:Core/Src/bno055.c ****             }
 22304              		.loc 1 10476 25 view .LVU6440
 22305 0214 0EE7     		b	.L1567
 22306              	.LVL2866:
 22307              	.L1576:
10587:Core/Src/bno055.c ****                                                                BNO055_ACCEL_RADIUS_MSB_REG,
10588:Core/Src/bno055.c ****                                                                &data2_u8r,
10589:Core/Src/bno055.c ****                                                                BNO055_GEN_READ_WRITE_LENGTH);
10590:Core/Src/bno055.c ****                 }
10591:Core/Src/bno055.c ****             }
10592:Core/Src/bno055.c ****             else
10593:Core/Src/bno055.c ****             {
10594:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10595:Core/Src/bno055.c ****             }
10596:Core/Src/bno055.c ****         }
10597:Core/Src/bno055.c ****         else
10598:Core/Src/bno055.c ****         {
10599:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 22308              		.loc 1 10599 22 view .LVU6441
 22309 0216 4FF0FF34 		mov	r4, #-1
 22310              	.LVL2867:
 22311              	.L1566:
10600:Core/Src/bno055.c ****         }
10601:Core/Src/bno055.c ****     }
10602:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 22312              		.loc 1 10602 5 is_stmt 1 view .LVU6442
 22313              		.loc 1 10602 24 is_stmt 0 view .LVU6443
 22314 021a 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 22315              		.loc 1 10602 8 view .LVU6444
 22316 021e 28B9     		cbnz	r0, .L1580
 22317              	.LVL2868:
 22318              	.L1565:
10603:Core/Src/bno055.c ****     {
10604:Core/Src/bno055.c ****         /* set the operation mode
10605:Core/Src/bno055.c ****          * of previous operation mode*/
10606:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
10607:Core/Src/bno055.c ****     }
10608:Core/Src/bno055.c **** 
10609:Core/Src/bno055.c ****     return com_rslt;
10610:Core/Src/bno055.c **** }
 22319              		.loc 1 10610 1 view .LVU6445
 22320 0220 2046     		mov	r0, r4
 22321 0222 02B0     		add	sp, sp, #8
 22322              		.cfi_remember_state
ARM GAS  /tmp/ccOloYeZ.s 			page 630


 22323              		.cfi_def_cfa_offset 16
 22324              		@ sp needed
 22325 0224 70BD     		pop	{r4, r5, r6, pc}
 22326              	.LVL2869:
 22327              	.L1577:
 22328              		.cfi_restore_state
10594:Core/Src/bno055.c ****             }
 22329              		.loc 1 10594 26 view .LVU6446
 22330 0226 4FF0FF34 		mov	r4, #-1
 22331              	.LVL2870:
10594:Core/Src/bno055.c ****             }
 22332              		.loc 1 10594 26 view .LVU6447
 22333 022a F6E7     		b	.L1566
 22334              	.LVL2871:
 22335              	.L1580:
10606:Core/Src/bno055.c ****     }
 22336              		.loc 1 10606 9 is_stmt 1 view .LVU6448
10606:Core/Src/bno055.c ****     }
 22337              		.loc 1 10606 21 is_stmt 0 view .LVU6449
 22338 022c FFF7FEFF 		bl	bno055_set_operation_mode
 22339              	.LVL2872:
10606:Core/Src/bno055.c ****     }
 22340              		.loc 1 10606 18 view .LVU6450
 22341 0230 54FA80F4 		uxtab	r4, r4, r0
 22342              	.LVL2873:
10606:Core/Src/bno055.c ****     }
 22343              		.loc 1 10606 18 view .LVU6451
 22344 0234 64B2     		sxtb	r4, r4
 22345              	.LVL2874:
10606:Core/Src/bno055.c ****     }
 22346              		.loc 1 10606 18 view .LVU6452
 22347 0236 F3E7     		b	.L1565
 22348              	.LVL2875:
 22349              	.L1575:
10464:Core/Src/bno055.c ****     }
 22350              		.loc 1 10464 16 view .LVU6453
 22351 0238 6FF07E04 		mvn	r4, #126
 22352 023c F0E7     		b	.L1565
 22353              	.L1582:
 22354 023e 00BF     		.align	2
 22355              	.L1581:
 22356 0240 00000000 		.word	p_bno055
 22357              		.cfi_endproc
 22358              	.LFE170:
 22360              		.section	.text.bno055_read_mag_offset,"ax",%progbits
 22361              		.align	1
 22362              		.global	bno055_read_mag_offset
 22363              		.syntax unified
 22364              		.thumb
 22365              		.thumb_func
 22367              	bno055_read_mag_offset:
 22368              	.LVL2876:
 22369              	.LFB171:
10611:Core/Src/bno055.c **** 
10612:Core/Src/bno055.c **** /*!
10613:Core/Src/bno055.c ****  *  @brief This API is used to read mag offset
10614:Core/Src/bno055.c ****  *  offset form register 0x69 to 0x6A
ARM GAS  /tmp/ccOloYeZ.s 			page 631


10615:Core/Src/bno055.c ****  *
10616:Core/Src/bno055.c ****  *  @param mag_offset :  The value of mag offset and radius
10617:Core/Src/bno055.c ****  *
10618:Core/Src/bno055.c ****  *      bno055_mag_offset_t   |     result
10619:Core/Src/bno055.c ****  *      ------------------- | ----------------
10620:Core/Src/bno055.c ****  *               x          |  mag offset x
10621:Core/Src/bno055.c ****  *               y          |  mag offset y
10622:Core/Src/bno055.c ****  *               z          |  mag offset z
10623:Core/Src/bno055.c ****  *               r          |  mag radius r
10624:Core/Src/bno055.c ****  *
10625:Core/Src/bno055.c ****  *
10626:Core/Src/bno055.c ****  *  @return results of bus communication function
10627:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10628:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10629:Core/Src/bno055.c ****  *
10630:Core/Src/bno055.c ****  *  @note  The range of the magnetometer offset is +/-6400 in LSB
10631:Core/Src/bno055.c ****  */
10632:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_offset(struct bno055_mag_offset_t  *mag_offset)
10633:Core/Src/bno055.c **** {
 22370              		.loc 1 10633 1 is_stmt 1 view -0
 22371              		.cfi_startproc
 22372              		@ args = 0, pretend = 0, frame = 8
 22373              		@ frame_needed = 0, uses_anonymous_args = 0
 22374              		.loc 1 10633 1 is_stmt 0 view .LVU6455
 22375 0000 70B5     		push	{r4, r5, r6, lr}
 22376              		.cfi_def_cfa_offset 16
 22377              		.cfi_offset 4, -16
 22378              		.cfi_offset 5, -12
 22379              		.cfi_offset 6, -8
 22380              		.cfi_offset 14, -4
 22381 0002 82B0     		sub	sp, sp, #8
 22382              		.cfi_def_cfa_offset 24
 22383 0004 0446     		mov	r4, r0
10634:Core/Src/bno055.c ****     /* Variable used to return value of
10635:Core/Src/bno055.c ****      * communication routine*/
10636:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 22384              		.loc 1 10636 5 is_stmt 1 view .LVU6456
 22385              	.LVL2877:
10637:Core/Src/bno055.c **** 
10638:Core/Src/bno055.c ****     /* Array holding the mag offset values
10639:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] - offset x->LSB
10640:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] - offset x->MSB
10641:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] - offset y->LSB
10642:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] - offset y->MSB
10643:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] - offset z->LSB
10644:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] - offset z->MSB
10645:Core/Src/bno055.c ****      */
10646:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_OFFSET_ARRAY] = {
 22386              		.loc 1 10646 5 view .LVU6457
 22387              		.loc 1 10646 8 is_stmt 0 view .LVU6458
 22388 0006 2C4B     		ldr	r3, .L1593
 22389 0008 93E80300 		ldm	r3, {r0, r1}
 22390              	.LVL2878:
 22391              		.loc 1 10646 8 view .LVU6459
 22392 000c 0090     		str	r0, [sp]
 22393 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
10647:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
ARM GAS  /tmp/ccOloYeZ.s 			page 632


10648:Core/Src/bno055.c ****     };
10649:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 22394              		.loc 1 10649 5 is_stmt 1 view .LVU6460
 22395              	.LVL2879:
10650:Core/Src/bno055.c **** 
10651:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
10652:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 22396              		.loc 1 10652 5 view .LVU6461
 22397              		.loc 1 10652 18 is_stmt 0 view .LVU6462
 22398 0012 2A4B     		ldr	r3, .L1593+4
 22399 0014 1B68     		ldr	r3, [r3]
 22400              		.loc 1 10652 8 view .LVU6463
 22401 0016 002B     		cmp	r3, #0
 22402 0018 42D0     		beq	.L1587
10653:Core/Src/bno055.c ****     {
10654:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10655:Core/Src/bno055.c ****     }
10656:Core/Src/bno055.c ****     else
10657:Core/Src/bno055.c ****     {
10658:Core/Src/bno055.c ****         /*condition check for page, mag offset is
10659:Core/Src/bno055.c ****          * available in the page zero*/
10660:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 22403              		.loc 1 10660 9 is_stmt 1 view .LVU6464
 22404              		.loc 1 10660 21 is_stmt 0 view .LVU6465
 22405 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 22406              		.loc 1 10660 12 view .LVU6466
 22407 001c 002B     		cmp	r3, #0
 22408 001e 39D1     		bne	.L1592
 22409              	.LVL2880:
 22410              	.L1585:
10661:Core/Src/bno055.c ****         {
10662:Core/Src/bno055.c ****             /* Write the page zero*/
10663:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
10664:Core/Src/bno055.c ****         }
10665:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 22411              		.loc 1 10665 53 discriminator 1 view .LVU6467
 22412 0020 264B     		ldr	r3, .L1593+4
 22413 0022 1B68     		ldr	r3, [r3]
 22414 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 22415              		.loc 1 10665 41 discriminator 1 view .LVU6468
 22416 0026 002B     		cmp	r3, #0
 22417 0028 3DD1     		bne	.L1588
 22418              	.L1586:
10666:Core/Src/bno055.c ****         {
10667:Core/Src/bno055.c ****             /* Read mag offset value it the six bytes of data */
10668:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22419              		.loc 1 10668 13 is_stmt 1 view .LVU6469
 22420              		.loc 1 10668 32 is_stmt 0 view .LVU6470
 22421 002a 244B     		ldr	r3, .L1593+4
 22422 002c 1868     		ldr	r0, [r3]
 22423 002e 0569     		ldr	r5, [r0, #16]
 22424              		.loc 1 10668 24 view .LVU6471
 22425 0030 0623     		movs	r3, #6
 22426 0032 6A46     		mov	r2, sp
 22427 0034 5B21     		movs	r1, #91
 22428 0036 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22429 0038 A847     		blx	r5
ARM GAS  /tmp/ccOloYeZ.s 			page 633


 22430              	.LVL2881:
10669:Core/Src/bno055.c ****                                                       BNO055_MAG_OFFSET_X_LSB_REG,
10670:Core/Src/bno055.c ****                                                       data_u8,
10671:Core/Src/bno055.c ****                                                       BNO055_MAG_OFFSET_ARRAY);
10672:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 22431              		.loc 1 10672 13 is_stmt 1 view .LVU6472
 22432              		.loc 1 10672 16 is_stmt 0 view .LVU6473
 22433 003a 0546     		mov	r5, r0
 22434 003c 0028     		cmp	r0, #0
 22435 003e 35D1     		bne	.L1589
10673:Core/Src/bno055.c ****             {
10674:Core/Src/bno055.c ****                 /* Read mag x offset value*/
10675:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22436              		.loc 1 10675 17 is_stmt 1 view .LVU6474
10676:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_X_
10677:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22437              		.loc 1 10677 17 view .LVU6475
10678:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_X_
10679:Core/Src/bno055.c ****                 mag_offset->x =
 22438              		.loc 1 10679 17 view .LVU6476
10680:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 22439              		.loc 1 10680 34 is_stmt 0 view .LVU6477
 22440 0040 9DF90120 		ldrsb	r2, [sp, #1]
10681:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB]));
 22441              		.loc 1 10681 35 view .LVU6478
 22442 0044 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
10680:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 22443              		.loc 1 10680 21 view .LVU6479
 22444 0048 43EA0223 		orr	r3, r3, r2, lsl #8
10679:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 22445              		.loc 1 10679 31 view .LVU6480
 22446 004c 2380     		strh	r3, [r4]	@ movhi
10682:Core/Src/bno055.c **** 
10683:Core/Src/bno055.c ****                 /* Read mag y offset value*/
10684:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22447              		.loc 1 10684 17 is_stmt 1 view .LVU6481
10685:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_Y_
10686:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22448              		.loc 1 10686 17 view .LVU6482
10687:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_Y_
10688:Core/Src/bno055.c ****                 mag_offset->y =
 22449              		.loc 1 10688 17 view .LVU6483
10689:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 22450              		.loc 1 10689 34 is_stmt 0 view .LVU6484
 22451 004e 9DF90320 		ldrsb	r2, [sp, #3]
10690:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB]));
 22452              		.loc 1 10690 35 view .LVU6485
 22453 0052 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
10689:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 22454              		.loc 1 10689 21 view .LVU6486
 22455 0056 43EA0223 		orr	r3, r3, r2, lsl #8
10688:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 22456              		.loc 1 10688 31 view .LVU6487
 22457 005a 6380     		strh	r3, [r4, #2]	@ movhi
10691:Core/Src/bno055.c **** 
10692:Core/Src/bno055.c ****                 /* Read mag z offset value*/
10693:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
ARM GAS  /tmp/ccOloYeZ.s 			page 634


 22458              		.loc 1 10693 17 is_stmt 1 view .LVU6488
10694:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_Z_
10695:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22459              		.loc 1 10695 17 view .LVU6489
10696:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_Z_
10697:Core/Src/bno055.c ****                 mag_offset->z =
 22460              		.loc 1 10697 17 view .LVU6490
10698:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 22461              		.loc 1 10698 34 is_stmt 0 view .LVU6491
 22462 005c 9DF90520 		ldrsb	r2, [sp, #5]
10699:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB]));
 22463              		.loc 1 10699 35 view .LVU6492
 22464 0060 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
10698:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 22465              		.loc 1 10698 21 view .LVU6493
 22466 0064 43EA0223 		orr	r3, r3, r2, lsl #8
10697:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 22467              		.loc 1 10697 31 view .LVU6494
 22468 0068 A380     		strh	r3, [r4, #4]	@ movhi
10700:Core/Src/bno055.c **** 
10701:Core/Src/bno055.c ****                 /* Read mag radius value
10702:Core/Src/bno055.c ****                  * it the two bytes of data */
10703:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22469              		.loc 1 10703 17 is_stmt 1 view .LVU6495
 22470              		.loc 1 10703 37 is_stmt 0 view .LVU6496
 22471 006a 144B     		ldr	r3, .L1593+4
 22472 006c 1868     		ldr	r0, [r3]
 22473              	.LVL2882:
 22474              		.loc 1 10703 37 view .LVU6497
 22475 006e 0669     		ldr	r6, [r0, #16]
 22476              		.loc 1 10703 29 view .LVU6498
 22477 0070 0223     		movs	r3, #2
 22478 0072 6A46     		mov	r2, sp
 22479 0074 6921     		movs	r1, #105
 22480 0076 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22481 0078 B047     		blx	r6
 22482              	.LVL2883:
 22483              		.loc 1 10703 26 view .LVU6499
 22484 007a 55FA80F0 		uxtab	r0, r5, r0
 22485 007e 40B2     		sxtb	r0, r0
 22486              	.LVL2884:
10704:Core/Src/bno055.c ****                                                            BNO055_MAG_RADIUS_LSB_REG,
10705:Core/Src/bno055.c ****                                                            data_u8,
10706:Core/Src/bno055.c ****                                                            BNO055_LSB_MSB_READ_LENGTH);
10707:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22487              		.loc 1 10707 17 is_stmt 1 view .LVU6500
 22488              		.loc 1 10707 20 is_stmt 0 view .LVU6501
 22489 0080 B8B9     		cbnz	r0, .L1590
10708:Core/Src/bno055.c ****                 {
10709:Core/Src/bno055.c ****                     /* Array holding the mag radius values
10710:Core/Src/bno055.c ****                      * data_u8[BNO055_OFFSET_RADIUS_LSB] -
10711:Core/Src/bno055.c ****                      * radius->LSB
10712:Core/Src/bno055.c ****                      * data_u8[BNO055_OFFSET_RADIUS_MSB] -
10713:Core/Src/bno055.c ****                      * radius->MSB
10714:Core/Src/bno055.c ****                      */
10715:Core/Src/bno055.c ****                     data_u8[BNO055_OFFSET_RADIUS_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_OFFSET_R
 22490              		.loc 1 10715 21 is_stmt 1 view .LVU6502
ARM GAS  /tmp/ccOloYeZ.s 			page 635


10716:Core/Src/bno055.c ****                                                                             BNO055_MAG_RADIUS_LSB);
10717:Core/Src/bno055.c ****                     data_u8[BNO055_OFFSET_RADIUS_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_OFFSET_R
 22491              		.loc 1 10717 21 view .LVU6503
10718:Core/Src/bno055.c ****                                                                             BNO055_MAG_RADIUS_MSB);
10719:Core/Src/bno055.c ****                     mag_offset->r =
 22492              		.loc 1 10719 21 view .LVU6504
10720:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 22493              		.loc 1 10720 38 is_stmt 0 view .LVU6505
 22494 0082 9DF90120 		ldrsb	r2, [sp, #1]
10721:Core/Src/bno055.c ****                               (data_u8[BNO055_OFFSET_RADIUS_LSB]));
 22495              		.loc 1 10721 39 view .LVU6506
 22496 0086 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
10720:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 22497              		.loc 1 10720 25 view .LVU6507
 22498 008a 43EA0223 		orr	r3, r3, r2, lsl #8
10719:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 22499              		.loc 1 10719 35 view .LVU6508
 22500 008e E380     		strh	r3, [r4, #6]	@ movhi
 22501              	.LVL2885:
 22502              	.L1584:
10722:Core/Src/bno055.c ****                 }
10723:Core/Src/bno055.c ****                 else
10724:Core/Src/bno055.c ****                 {
10725:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
10726:Core/Src/bno055.c ****                 }
10727:Core/Src/bno055.c ****             }
10728:Core/Src/bno055.c ****             else
10729:Core/Src/bno055.c ****             {
10730:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10731:Core/Src/bno055.c ****             }
10732:Core/Src/bno055.c ****         }
10733:Core/Src/bno055.c ****         else
10734:Core/Src/bno055.c ****         {
10735:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
10736:Core/Src/bno055.c ****         }
10737:Core/Src/bno055.c ****     }
10738:Core/Src/bno055.c **** 
10739:Core/Src/bno055.c ****     return com_rslt;
10740:Core/Src/bno055.c **** }
 22503              		.loc 1 10740 1 view .LVU6509
 22504 0090 02B0     		add	sp, sp, #8
 22505              		.cfi_remember_state
 22506              		.cfi_def_cfa_offset 16
 22507              		@ sp needed
 22508 0092 70BD     		pop	{r4, r5, r6, pc}
 22509              	.LVL2886:
 22510              	.L1592:
 22511              		.cfi_restore_state
10663:Core/Src/bno055.c ****         }
 22512              		.loc 1 10663 13 is_stmt 1 view .LVU6510
10663:Core/Src/bno055.c ****         }
 22513              		.loc 1 10663 23 is_stmt 0 view .LVU6511
 22514 0094 0020     		movs	r0, #0
 22515 0096 FFF7FEFF 		bl	bno055_write_page_id
 22516              	.LVL2887:
10665:Core/Src/bno055.c ****         {
 22517              		.loc 1 10665 9 is_stmt 1 view .LVU6512
ARM GAS  /tmp/ccOloYeZ.s 			page 636


10665:Core/Src/bno055.c ****         {
 22518              		.loc 1 10665 12 is_stmt 0 view .LVU6513
 22519 009a 0028     		cmp	r0, #0
 22520 009c C5D0     		beq	.L1586
 22521 009e BFE7     		b	.L1585
 22522              	.LVL2888:
 22523              	.L1587:
10654:Core/Src/bno055.c ****     }
 22524              		.loc 1 10654 16 view .LVU6514
 22525 00a0 6FF07E00 		mvn	r0, #126
 22526 00a4 F4E7     		b	.L1584
 22527              	.LVL2889:
 22528              	.L1588:
10735:Core/Src/bno055.c ****         }
 22529              		.loc 1 10735 22 view .LVU6515
 22530 00a6 4FF0FF30 		mov	r0, #-1
 22531 00aa F1E7     		b	.L1584
 22532              	.LVL2890:
 22533              	.L1589:
10730:Core/Src/bno055.c ****             }
 22534              		.loc 1 10730 26 view .LVU6516
 22535 00ac 4FF0FF30 		mov	r0, #-1
 22536              	.LVL2891:
10730:Core/Src/bno055.c ****             }
 22537              		.loc 1 10730 26 view .LVU6517
 22538 00b0 EEE7     		b	.L1584
 22539              	.LVL2892:
 22540              	.L1590:
10725:Core/Src/bno055.c ****                 }
 22541              		.loc 1 10725 30 view .LVU6518
 22542 00b2 4FF0FF30 		mov	r0, #-1
 22543              	.LVL2893:
10725:Core/Src/bno055.c ****                 }
 22544              		.loc 1 10725 30 view .LVU6519
 22545 00b6 EBE7     		b	.L1584
 22546              	.L1594:
 22547              		.align	2
 22548              	.L1593:
 22549 00b8 00000000 		.word	.LANCHOR0
 22550 00bc 00000000 		.word	p_bno055
 22551              		.cfi_endproc
 22552              	.LFE171:
 22554              		.section	.text.bno055_write_mag_offset,"ax",%progbits
 22555              		.align	1
 22556              		.global	bno055_write_mag_offset
 22557              		.syntax unified
 22558              		.thumb
 22559              		.thumb_func
 22561              	bno055_write_mag_offset:
 22562              	.LVL2894:
 22563              	.LFB172:
10741:Core/Src/bno055.c **** 
10742:Core/Src/bno055.c **** /*!
10743:Core/Src/bno055.c ****  *  @brief This API is used to read mag offset
10744:Core/Src/bno055.c ****  *  offset form register 0x69 to 0x6A
10745:Core/Src/bno055.c ****  *
10746:Core/Src/bno055.c ****  *  @param mag_offset :  The value of mag offset and radius
ARM GAS  /tmp/ccOloYeZ.s 			page 637


10747:Core/Src/bno055.c ****  *
10748:Core/Src/bno055.c ****  *      bno055_mag_offset_t |     result
10749:Core/Src/bno055.c ****  *      ------------------- | ----------------
10750:Core/Src/bno055.c ****  *               x          |  mag offset x
10751:Core/Src/bno055.c ****  *               y          |  mag offset y
10752:Core/Src/bno055.c ****  *               z          |  mag offset z
10753:Core/Src/bno055.c ****  *               r          |  mag radius r
10754:Core/Src/bno055.c ****  *
10755:Core/Src/bno055.c ****  *
10756:Core/Src/bno055.c ****  *  @return results of bus communication function
10757:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10758:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10759:Core/Src/bno055.c ****  *
10760:Core/Src/bno055.c ****  *  @note  The range of the magnetometer offset is +/-6400 in LSB
10761:Core/Src/bno055.c ****  */
10762:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_mag_offset(struct bno055_mag_offset_t *mag_offset)
10763:Core/Src/bno055.c **** {
 22564              		.loc 1 10763 1 is_stmt 1 view -0
 22565              		.cfi_startproc
 22566              		@ args = 0, pretend = 0, frame = 8
 22567              		@ frame_needed = 0, uses_anonymous_args = 0
 22568              		.loc 1 10763 1 is_stmt 0 view .LVU6521
 22569 0000 70B5     		push	{r4, r5, r6, lr}
 22570              		.cfi_def_cfa_offset 16
 22571              		.cfi_offset 4, -16
 22572              		.cfi_offset 5, -12
 22573              		.cfi_offset 6, -8
 22574              		.cfi_offset 14, -4
 22575 0002 82B0     		sub	sp, sp, #8
 22576              		.cfi_def_cfa_offset 24
10764:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 22577              		.loc 1 10764 5 is_stmt 1 view .LVU6522
 22578              	.LVL2895:
10765:Core/Src/bno055.c ****     u8 data1_u8r = BNO055_INIT_VALUE;
 22579              		.loc 1 10765 5 view .LVU6523
10766:Core/Src/bno055.c ****     u8 data2_u8r = BNO055_INIT_VALUE;
 22580              		.loc 1 10766 5 view .LVU6524
 22581              		.loc 1 10766 8 is_stmt 0 view .LVU6525
 22582 0004 0023     		movs	r3, #0
 22583 0006 8DF80730 		strb	r3, [sp, #7]
10767:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 22584              		.loc 1 10767 5 is_stmt 1 view .LVU6526
 22585              		.loc 1 10767 8 is_stmt 0 view .LVU6527
 22586 000a 8DF80630 		strb	r3, [sp, #6]
10768:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 22587              		.loc 1 10768 5 is_stmt 1 view .LVU6528
 22588              	.LVL2896:
10769:Core/Src/bno055.c **** 
10770:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
10771:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 22589              		.loc 1 10771 5 view .LVU6529
 22590              		.loc 1 10771 18 is_stmt 0 view .LVU6530
 22591 000e 8F4B     		ldr	r3, .L1612
 22592 0010 1B68     		ldr	r3, [r3]
 22593              		.loc 1 10771 8 view .LVU6531
 22594 0012 002B     		cmp	r3, #0
 22595 0014 00F01681 		beq	.L1606
ARM GAS  /tmp/ccOloYeZ.s 			page 638


 22596 0018 0546     		mov	r5, r0
10772:Core/Src/bno055.c ****     {
10773:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10774:Core/Src/bno055.c ****     }
10775:Core/Src/bno055.c ****     else
10776:Core/Src/bno055.c ****     {
10777:Core/Src/bno055.c ****         /* The write operation effective only if the operation
10778:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
10779:Core/Src/bno055.c ****          * current operation mode and set the config mode */
10780:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 22597              		.loc 1 10780 9 is_stmt 1 view .LVU6532
 22598              		.loc 1 10780 19 is_stmt 0 view .LVU6533
 22599 001a 0DF10600 		add	r0, sp, #6
 22600              	.LVL2897:
 22601              		.loc 1 10780 19 view .LVU6534
 22602 001e FFF7FEFF 		bl	bno055_get_operation_mode
 22603              	.LVL2898:
10781:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 22604              		.loc 1 10781 9 is_stmt 1 view .LVU6535
 22605              		.loc 1 10781 12 is_stmt 0 view .LVU6536
 22606 0022 0446     		mov	r4, r0
 22607 0024 0028     		cmp	r0, #0
 22608 0026 40F0FC80 		bne	.L1607
10782:Core/Src/bno055.c ****         {
10783:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 22609              		.loc 1 10783 13 is_stmt 1 view .LVU6537
 22610              		.loc 1 10783 32 is_stmt 0 view .LVU6538
 22611 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 22612              		.loc 1 10783 16 view .LVU6539
 22613 002e 002B     		cmp	r3, #0
 22614 0030 40F0F180 		bne	.L1610
 22615              	.LVL2899:
 22616              	.L1598:
10784:Core/Src/bno055.c ****             {
10785:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
10786:Core/Src/bno055.c ****             }
10787:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 22617              		.loc 1 10787 13 is_stmt 1 view .LVU6540
 22618              		.loc 1 10787 16 is_stmt 0 view .LVU6541
 22619 0034 002C     		cmp	r4, #0
 22620 0036 40F0FC80 		bne	.L1608
10788:Core/Src/bno055.c ****             {
10789:Core/Src/bno055.c ****                 /* write Mag offset x value*/
10790:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22621              		.loc 1 10790 17 is_stmt 1 view .LVU6542
 22622              		.loc 1 10790 36 is_stmt 0 view .LVU6543
 22623 003a 844B     		ldr	r3, .L1612
 22624 003c 1868     		ldr	r0, [r3]
 22625 003e 0469     		ldr	r4, [r0, #16]
 22626              	.LVL2900:
 22627              		.loc 1 10790 28 view .LVU6544
 22628 0040 0123     		movs	r3, #1
 22629 0042 0DF10702 		add	r2, sp, #7
 22630 0046 5B21     		movs	r1, #91
 22631 0048 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22632 004a A047     		blx	r4
 22633              	.LVL2901:
ARM GAS  /tmp/ccOloYeZ.s 			page 639


10791:Core/Src/bno055.c ****                                                           BNO055_MAG_OFFSET_X_LSB_REG,
10792:Core/Src/bno055.c ****                                                           &data2_u8r,
10793:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
10794:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22634              		.loc 1 10794 17 is_stmt 1 view .LVU6545
 22635              		.loc 1 10794 20 is_stmt 0 view .LVU6546
 22636 004c 0446     		mov	r4, r0
 22637 004e 78B9     		cbnz	r0, .L1599
10795:Core/Src/bno055.c ****                 {
10796:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->x & BNO055_SIC_HEX_0_0_F_F_DATA));
 22638              		.loc 1 10796 21 is_stmt 1 view .LVU6547
 22639              		.loc 1 10796 49 is_stmt 0 view .LVU6548
 22640 0050 B5F90030 		ldrsh	r3, [r5]
 22641              	.LVL2902:
10797:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_X_LSB, data1_u8r);
 22642              		.loc 1 10797 21 is_stmt 1 view .LVU6549
 22643              		.loc 1 10797 31 is_stmt 0 view .LVU6550
 22644 0054 8DF80730 		strb	r3, [sp, #7]
10798:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22645              		.loc 1 10798 21 is_stmt 1 view .LVU6551
 22646              		.loc 1 10798 41 is_stmt 0 view .LVU6552
 22647 0058 7C4B     		ldr	r3, .L1612
 22648              	.LVL2903:
 22649              		.loc 1 10798 41 view .LVU6553
 22650 005a 1868     		ldr	r0, [r3]
 22651              	.LVL2904:
 22652              		.loc 1 10798 41 view .LVU6554
 22653 005c C668     		ldr	r6, [r0, #12]
 22654              		.loc 1 10798 33 view .LVU6555
 22655 005e 0123     		movs	r3, #1
 22656 0060 0DF10702 		add	r2, sp, #7
 22657              	.LVL2905:
 22658              		.loc 1 10798 33 view .LVU6556
 22659 0064 5B21     		movs	r1, #91
 22660 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22661 0068 B047     		blx	r6
 22662              	.LVL2906:
 22663              		.loc 1 10798 30 view .LVU6557
 22664 006a 54FA80F0 		uxtab	r0, r4, r0
 22665 006e 44B2     		sxtb	r4, r0
 22666              	.LVL2907:
 22667              	.L1599:
10799:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_X_LSB_REG,
10800:Core/Src/bno055.c ****                                                                 &data2_u8r,
10801:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10802:Core/Src/bno055.c ****                 }
10803:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22668              		.loc 1 10803 17 is_stmt 1 view .LVU6558
 22669              		.loc 1 10803 37 is_stmt 0 view .LVU6559
 22670 0070 764B     		ldr	r3, .L1612
 22671 0072 1868     		ldr	r0, [r3]
 22672 0074 0669     		ldr	r6, [r0, #16]
 22673              		.loc 1 10803 29 view .LVU6560
 22674 0076 0123     		movs	r3, #1
 22675 0078 0DF10702 		add	r2, sp, #7
 22676 007c 5C21     		movs	r1, #92
 22677 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccOloYeZ.s 			page 640


 22678 0080 B047     		blx	r6
 22679              	.LVL2908:
 22680              		.loc 1 10803 26 view .LVU6561
 22681 0082 54FA80F4 		uxtab	r4, r4, r0
 22682              	.LVL2909:
 22683              		.loc 1 10803 26 view .LVU6562
 22684 0086 E6B2     		uxtb	r6, r4
 22685 0088 64B2     		sxtb	r4, r4
 22686              	.LVL2910:
10804:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_X_MSB_REG,
10805:Core/Src/bno055.c ****                                                            &data2_u8r,
10806:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10807:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22687              		.loc 1 10807 17 is_stmt 1 view .LVU6563
 22688              		.loc 1 10807 20 is_stmt 0 view .LVU6564
 22689 008a 7CB9     		cbnz	r4, .L1600
10808:Core/Src/bno055.c ****                 {
10809:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->x >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0_
 22690              		.loc 1 10809 21 is_stmt 1 view .LVU6565
 22691              		.loc 1 10809 34 is_stmt 0 view .LVU6566
 22692 008c 95F90130 		ldrsb	r3, [r5, #1]
 22693              	.LVL2911:
10810:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_X_MSB, data1_u8r);
 22694              		.loc 1 10810 21 is_stmt 1 view .LVU6567
 22695              		.loc 1 10810 31 is_stmt 0 view .LVU6568
 22696 0090 8DF80730 		strb	r3, [sp, #7]
10811:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22697              		.loc 1 10811 21 is_stmt 1 view .LVU6569
 22698              		.loc 1 10811 41 is_stmt 0 view .LVU6570
 22699 0094 6D4B     		ldr	r3, .L1612
 22700              	.LVL2912:
 22701              		.loc 1 10811 41 view .LVU6571
 22702 0096 1868     		ldr	r0, [r3]
 22703 0098 C468     		ldr	r4, [r0, #12]
 22704              	.LVL2913:
 22705              		.loc 1 10811 33 view .LVU6572
 22706 009a 0123     		movs	r3, #1
 22707 009c 0DF10702 		add	r2, sp, #7
 22708              	.LVL2914:
 22709              		.loc 1 10811 33 view .LVU6573
 22710 00a0 5C21     		movs	r1, #92
 22711 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22712 00a4 A047     		blx	r4
 22713              	.LVL2915:
 22714              		.loc 1 10811 30 view .LVU6574
 22715 00a6 56FA80F4 		uxtab	r4, r6, r0
 22716 00aa 64B2     		sxtb	r4, r4
 22717              	.LVL2916:
 22718              	.L1600:
10812:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_X_MSB_REG,
10813:Core/Src/bno055.c ****                                                                 &data2_u8r,
10814:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10815:Core/Src/bno055.c ****                 }
10816:Core/Src/bno055.c **** 
10817:Core/Src/bno055.c ****                 /* write Mag offset y value*/
10818:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22719              		.loc 1 10818 17 is_stmt 1 view .LVU6575
ARM GAS  /tmp/ccOloYeZ.s 			page 641


 22720              		.loc 1 10818 37 is_stmt 0 view .LVU6576
 22721 00ac 674B     		ldr	r3, .L1612
 22722 00ae 1868     		ldr	r0, [r3]
 22723 00b0 0669     		ldr	r6, [r0, #16]
 22724              		.loc 1 10818 29 view .LVU6577
 22725 00b2 0123     		movs	r3, #1
 22726 00b4 0DF10702 		add	r2, sp, #7
 22727 00b8 5D21     		movs	r1, #93
 22728 00ba 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22729 00bc B047     		blx	r6
 22730              	.LVL2917:
 22731              		.loc 1 10818 26 view .LVU6578
 22732 00be 54FA80F4 		uxtab	r4, r4, r0
 22733              	.LVL2918:
 22734              		.loc 1 10818 26 view .LVU6579
 22735 00c2 E6B2     		uxtb	r6, r4
 22736 00c4 64B2     		sxtb	r4, r4
 22737              	.LVL2919:
10819:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_Y_LSB_REG,
10820:Core/Src/bno055.c ****                                                            &data2_u8r,
10821:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10822:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22738              		.loc 1 10822 17 is_stmt 1 view .LVU6580
 22739              		.loc 1 10822 20 is_stmt 0 view .LVU6581
 22740 00c6 7CB9     		cbnz	r4, .L1601
10823:Core/Src/bno055.c ****                 {
10824:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->y & BNO055_SIC_HEX_0_0_F_F_DATA));
 22741              		.loc 1 10824 21 is_stmt 1 view .LVU6582
 22742              		.loc 1 10824 49 is_stmt 0 view .LVU6583
 22743 00c8 B5F90230 		ldrsh	r3, [r5, #2]
 22744              	.LVL2920:
10825:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_Y_LSB, data1_u8r);
 22745              		.loc 1 10825 21 is_stmt 1 view .LVU6584
 22746              		.loc 1 10825 31 is_stmt 0 view .LVU6585
 22747 00cc 8DF80730 		strb	r3, [sp, #7]
10826:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22748              		.loc 1 10826 21 is_stmt 1 view .LVU6586
 22749              		.loc 1 10826 41 is_stmt 0 view .LVU6587
 22750 00d0 5E4B     		ldr	r3, .L1612
 22751              	.LVL2921:
 22752              		.loc 1 10826 41 view .LVU6588
 22753 00d2 1868     		ldr	r0, [r3]
 22754 00d4 C468     		ldr	r4, [r0, #12]
 22755              	.LVL2922:
 22756              		.loc 1 10826 33 view .LVU6589
 22757 00d6 0123     		movs	r3, #1
 22758 00d8 0DF10702 		add	r2, sp, #7
 22759              	.LVL2923:
 22760              		.loc 1 10826 33 view .LVU6590
 22761 00dc 5D21     		movs	r1, #93
 22762 00de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22763 00e0 A047     		blx	r4
 22764              	.LVL2924:
 22765              		.loc 1 10826 30 view .LVU6591
 22766 00e2 56FA80F4 		uxtab	r4, r6, r0
 22767 00e6 64B2     		sxtb	r4, r4
 22768              	.LVL2925:
ARM GAS  /tmp/ccOloYeZ.s 			page 642


 22769              	.L1601:
10827:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_Y_LSB_REG,
10828:Core/Src/bno055.c ****                                                                 &data2_u8r,
10829:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10830:Core/Src/bno055.c ****                 }
10831:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22770              		.loc 1 10831 17 is_stmt 1 view .LVU6592
 22771              		.loc 1 10831 37 is_stmt 0 view .LVU6593
 22772 00e8 584B     		ldr	r3, .L1612
 22773 00ea 1868     		ldr	r0, [r3]
 22774 00ec 0669     		ldr	r6, [r0, #16]
 22775              		.loc 1 10831 29 view .LVU6594
 22776 00ee 0123     		movs	r3, #1
 22777 00f0 0DF10702 		add	r2, sp, #7
 22778 00f4 5E21     		movs	r1, #94
 22779 00f6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22780 00f8 B047     		blx	r6
 22781              	.LVL2926:
 22782              		.loc 1 10831 26 view .LVU6595
 22783 00fa 54FA80F4 		uxtab	r4, r4, r0
 22784              	.LVL2927:
 22785              		.loc 1 10831 26 view .LVU6596
 22786 00fe E6B2     		uxtb	r6, r4
 22787 0100 64B2     		sxtb	r4, r4
 22788              	.LVL2928:
10832:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_Y_MSB_REG,
10833:Core/Src/bno055.c ****                                                            &data2_u8r,
10834:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10835:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22789              		.loc 1 10835 17 is_stmt 1 view .LVU6597
 22790              		.loc 1 10835 20 is_stmt 0 view .LVU6598
 22791 0102 7CB9     		cbnz	r4, .L1602
10836:Core/Src/bno055.c ****                 {
10837:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->y >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0_
 22792              		.loc 1 10837 21 is_stmt 1 view .LVU6599
 22793              		.loc 1 10837 34 is_stmt 0 view .LVU6600
 22794 0104 95F90330 		ldrsb	r3, [r5, #3]
 22795              	.LVL2929:
10838:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_Y_MSB, data1_u8r);
 22796              		.loc 1 10838 21 is_stmt 1 view .LVU6601
 22797              		.loc 1 10838 31 is_stmt 0 view .LVU6602
 22798 0108 8DF80730 		strb	r3, [sp, #7]
10839:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22799              		.loc 1 10839 21 is_stmt 1 view .LVU6603
 22800              		.loc 1 10839 41 is_stmt 0 view .LVU6604
 22801 010c 4F4B     		ldr	r3, .L1612
 22802              	.LVL2930:
 22803              		.loc 1 10839 41 view .LVU6605
 22804 010e 1868     		ldr	r0, [r3]
 22805 0110 C468     		ldr	r4, [r0, #12]
 22806              	.LVL2931:
 22807              		.loc 1 10839 33 view .LVU6606
 22808 0112 0123     		movs	r3, #1
 22809 0114 0DF10702 		add	r2, sp, #7
 22810              	.LVL2932:
 22811              		.loc 1 10839 33 view .LVU6607
 22812 0118 5E21     		movs	r1, #94
ARM GAS  /tmp/ccOloYeZ.s 			page 643


 22813 011a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22814 011c A047     		blx	r4
 22815              	.LVL2933:
 22816              		.loc 1 10839 30 view .LVU6608
 22817 011e 56FA80F4 		uxtab	r4, r6, r0
 22818 0122 64B2     		sxtb	r4, r4
 22819              	.LVL2934:
 22820              	.L1602:
10840:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_Y_MSB_REG,
10841:Core/Src/bno055.c ****                                                                 &data2_u8r,
10842:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10843:Core/Src/bno055.c ****                 }
10844:Core/Src/bno055.c **** 
10845:Core/Src/bno055.c ****                 /* write Mag offset z value*/
10846:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22821              		.loc 1 10846 17 is_stmt 1 view .LVU6609
 22822              		.loc 1 10846 37 is_stmt 0 view .LVU6610
 22823 0124 494B     		ldr	r3, .L1612
 22824 0126 1868     		ldr	r0, [r3]
 22825 0128 0669     		ldr	r6, [r0, #16]
 22826              		.loc 1 10846 29 view .LVU6611
 22827 012a 0123     		movs	r3, #1
 22828 012c 0DF10702 		add	r2, sp, #7
 22829 0130 5F21     		movs	r1, #95
 22830 0132 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22831 0134 B047     		blx	r6
 22832              	.LVL2935:
 22833              		.loc 1 10846 26 view .LVU6612
 22834 0136 54FA80F4 		uxtab	r4, r4, r0
 22835              	.LVL2936:
 22836              		.loc 1 10846 26 view .LVU6613
 22837 013a E6B2     		uxtb	r6, r4
 22838 013c 64B2     		sxtb	r4, r4
 22839              	.LVL2937:
10847:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_Z_LSB_REG,
10848:Core/Src/bno055.c ****                                                            &data2_u8r,
10849:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10850:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22840              		.loc 1 10850 17 is_stmt 1 view .LVU6614
 22841              		.loc 1 10850 20 is_stmt 0 view .LVU6615
 22842 013e 7CB9     		cbnz	r4, .L1603
10851:Core/Src/bno055.c ****                 {
10852:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->z & BNO055_SIC_HEX_0_0_F_F_DATA));
 22843              		.loc 1 10852 21 is_stmt 1 view .LVU6616
 22844              		.loc 1 10852 49 is_stmt 0 view .LVU6617
 22845 0140 B5F90430 		ldrsh	r3, [r5, #4]
 22846              	.LVL2938:
10853:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_Z_LSB, data1_u8r);
 22847              		.loc 1 10853 21 is_stmt 1 view .LVU6618
 22848              		.loc 1 10853 31 is_stmt 0 view .LVU6619
 22849 0144 8DF80730 		strb	r3, [sp, #7]
10854:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22850              		.loc 1 10854 21 is_stmt 1 view .LVU6620
 22851              		.loc 1 10854 41 is_stmt 0 view .LVU6621
 22852 0148 404B     		ldr	r3, .L1612
 22853              	.LVL2939:
 22854              		.loc 1 10854 41 view .LVU6622
ARM GAS  /tmp/ccOloYeZ.s 			page 644


 22855 014a 1868     		ldr	r0, [r3]
 22856 014c C468     		ldr	r4, [r0, #12]
 22857              	.LVL2940:
 22858              		.loc 1 10854 33 view .LVU6623
 22859 014e 0123     		movs	r3, #1
 22860 0150 0DF10702 		add	r2, sp, #7
 22861              	.LVL2941:
 22862              		.loc 1 10854 33 view .LVU6624
 22863 0154 5F21     		movs	r1, #95
 22864 0156 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22865 0158 A047     		blx	r4
 22866              	.LVL2942:
 22867              		.loc 1 10854 30 view .LVU6625
 22868 015a 56FA80F4 		uxtab	r4, r6, r0
 22869 015e 64B2     		sxtb	r4, r4
 22870              	.LVL2943:
 22871              	.L1603:
10855:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_Z_LSB_REG,
10856:Core/Src/bno055.c ****                                                                 &data2_u8r,
10857:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10858:Core/Src/bno055.c ****                 }
10859:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22872              		.loc 1 10859 17 is_stmt 1 view .LVU6626
 22873              		.loc 1 10859 37 is_stmt 0 view .LVU6627
 22874 0160 3A4B     		ldr	r3, .L1612
 22875 0162 1868     		ldr	r0, [r3]
 22876 0164 0669     		ldr	r6, [r0, #16]
 22877              		.loc 1 10859 29 view .LVU6628
 22878 0166 0123     		movs	r3, #1
 22879 0168 0DF10702 		add	r2, sp, #7
 22880 016c 6021     		movs	r1, #96
 22881 016e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22882 0170 B047     		blx	r6
 22883              	.LVL2944:
 22884              		.loc 1 10859 26 view .LVU6629
 22885 0172 54FA80F4 		uxtab	r4, r4, r0
 22886              	.LVL2945:
 22887              		.loc 1 10859 26 view .LVU6630
 22888 0176 E6B2     		uxtb	r6, r4
 22889 0178 64B2     		sxtb	r4, r4
 22890              	.LVL2946:
10860:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_Z_MSB_REG,
10861:Core/Src/bno055.c ****                                                            &data2_u8r,
10862:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10863:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22891              		.loc 1 10863 17 is_stmt 1 view .LVU6631
 22892              		.loc 1 10863 20 is_stmt 0 view .LVU6632
 22893 017a 7CB9     		cbnz	r4, .L1604
10864:Core/Src/bno055.c ****                 {
10865:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->z >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0_
 22894              		.loc 1 10865 21 is_stmt 1 view .LVU6633
 22895              		.loc 1 10865 34 is_stmt 0 view .LVU6634
 22896 017c 95F90530 		ldrsb	r3, [r5, #5]
 22897              	.LVL2947:
10866:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_Z_MSB, data1_u8r);
 22898              		.loc 1 10866 21 is_stmt 1 view .LVU6635
 22899              		.loc 1 10866 31 is_stmt 0 view .LVU6636
ARM GAS  /tmp/ccOloYeZ.s 			page 645


 22900 0180 8DF80730 		strb	r3, [sp, #7]
10867:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22901              		.loc 1 10867 21 is_stmt 1 view .LVU6637
 22902              		.loc 1 10867 41 is_stmt 0 view .LVU6638
 22903 0184 314B     		ldr	r3, .L1612
 22904              	.LVL2948:
 22905              		.loc 1 10867 41 view .LVU6639
 22906 0186 1868     		ldr	r0, [r3]
 22907 0188 C468     		ldr	r4, [r0, #12]
 22908              	.LVL2949:
 22909              		.loc 1 10867 33 view .LVU6640
 22910 018a 0123     		movs	r3, #1
 22911 018c 0DF10702 		add	r2, sp, #7
 22912              	.LVL2950:
 22913              		.loc 1 10867 33 view .LVU6641
 22914 0190 6021     		movs	r1, #96
 22915 0192 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22916 0194 A047     		blx	r4
 22917              	.LVL2951:
 22918              		.loc 1 10867 30 view .LVU6642
 22919 0196 56FA80F4 		uxtab	r4, r6, r0
 22920 019a 64B2     		sxtb	r4, r4
 22921              	.LVL2952:
 22922              	.L1604:
10868:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_Z_MSB_REG,
10869:Core/Src/bno055.c ****                                                                 &data2_u8r,
10870:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10871:Core/Src/bno055.c ****                 }
10872:Core/Src/bno055.c **** 
10873:Core/Src/bno055.c ****                 /* write Mag radius value*/
10874:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22923              		.loc 1 10874 17 is_stmt 1 view .LVU6643
 22924              		.loc 1 10874 37 is_stmt 0 view .LVU6644
 22925 019c 2B4B     		ldr	r3, .L1612
 22926 019e 1868     		ldr	r0, [r3]
 22927 01a0 0669     		ldr	r6, [r0, #16]
 22928              		.loc 1 10874 29 view .LVU6645
 22929 01a2 0123     		movs	r3, #1
 22930 01a4 0DF10702 		add	r2, sp, #7
 22931 01a8 6921     		movs	r1, #105
 22932 01aa 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22933 01ac B047     		blx	r6
 22934              	.LVL2953:
 22935              		.loc 1 10874 26 view .LVU6646
 22936 01ae 54FA80F4 		uxtab	r4, r4, r0
 22937              	.LVL2954:
 22938              		.loc 1 10874 26 view .LVU6647
 22939 01b2 E6B2     		uxtb	r6, r4
 22940 01b4 64B2     		sxtb	r4, r4
 22941              	.LVL2955:
10875:Core/Src/bno055.c ****                                                            BNO055_MAG_RADIUS_LSB_REG,
10876:Core/Src/bno055.c ****                                                            &data2_u8r,
10877:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10878:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22942              		.loc 1 10878 17 is_stmt 1 view .LVU6648
 22943              		.loc 1 10878 20 is_stmt 0 view .LVU6649
 22944 01b6 7CB9     		cbnz	r4, .L1605
ARM GAS  /tmp/ccOloYeZ.s 			page 646


10879:Core/Src/bno055.c ****                 {
10880:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->r & BNO055_SIC_HEX_0_0_F_F_DATA));
 22945              		.loc 1 10880 21 is_stmt 1 view .LVU6650
 22946              		.loc 1 10880 49 is_stmt 0 view .LVU6651
 22947 01b8 B5F90630 		ldrsh	r3, [r5, #6]
 22948              	.LVL2956:
10881:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_RADIUS_LSB, data1_u8r);
 22949              		.loc 1 10881 21 is_stmt 1 view .LVU6652
 22950              		.loc 1 10881 31 is_stmt 0 view .LVU6653
 22951 01bc 8DF80730 		strb	r3, [sp, #7]
10882:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22952              		.loc 1 10882 21 is_stmt 1 view .LVU6654
 22953              		.loc 1 10882 41 is_stmt 0 view .LVU6655
 22954 01c0 224B     		ldr	r3, .L1612
 22955              	.LVL2957:
 22956              		.loc 1 10882 41 view .LVU6656
 22957 01c2 1868     		ldr	r0, [r3]
 22958 01c4 C468     		ldr	r4, [r0, #12]
 22959              	.LVL2958:
 22960              		.loc 1 10882 33 view .LVU6657
 22961 01c6 0123     		movs	r3, #1
 22962 01c8 0DF10702 		add	r2, sp, #7
 22963              	.LVL2959:
 22964              		.loc 1 10882 33 view .LVU6658
 22965 01cc 6921     		movs	r1, #105
 22966 01ce 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22967 01d0 A047     		blx	r4
 22968              	.LVL2960:
 22969              		.loc 1 10882 30 view .LVU6659
 22970 01d2 56FA80F4 		uxtab	r4, r6, r0
 22971 01d6 64B2     		sxtb	r4, r4
 22972              	.LVL2961:
 22973              	.L1605:
10883:Core/Src/bno055.c ****                                                                 BNO055_MAG_RADIUS_LSB_REG,
10884:Core/Src/bno055.c ****                                                                 &data2_u8r,
10885:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10886:Core/Src/bno055.c ****                 }
10887:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22974              		.loc 1 10887 17 is_stmt 1 view .LVU6660
 22975              		.loc 1 10887 37 is_stmt 0 view .LVU6661
 22976 01d8 1C4B     		ldr	r3, .L1612
 22977 01da 1868     		ldr	r0, [r3]
 22978 01dc 0669     		ldr	r6, [r0, #16]
 22979              		.loc 1 10887 29 view .LVU6662
 22980 01de 0123     		movs	r3, #1
 22981 01e0 0DF10702 		add	r2, sp, #7
 22982 01e4 6A21     		movs	r1, #106
 22983 01e6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22984 01e8 B047     		blx	r6
 22985              	.LVL2962:
 22986              		.loc 1 10887 26 view .LVU6663
 22987 01ea 54FA80F4 		uxtab	r4, r4, r0
 22988              	.LVL2963:
 22989              		.loc 1 10887 26 view .LVU6664
 22990 01ee E6B2     		uxtb	r6, r4
 22991 01f0 64B2     		sxtb	r4, r4
 22992              	.LVL2964:
ARM GAS  /tmp/ccOloYeZ.s 			page 647


10888:Core/Src/bno055.c ****                                                            BNO055_MAG_RADIUS_MSB_REG,
10889:Core/Src/bno055.c ****                                                            &data2_u8r,
10890:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10891:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22993              		.loc 1 10891 17 is_stmt 1 view .LVU6665
 22994              		.loc 1 10891 20 is_stmt 0 view .LVU6666
 22995 01f2 C4B9     		cbnz	r4, .L1597
10892:Core/Src/bno055.c ****                 {
10893:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->r >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0_
 22996              		.loc 1 10893 21 is_stmt 1 view .LVU6667
 22997              		.loc 1 10893 34 is_stmt 0 view .LVU6668
 22998 01f4 95F90730 		ldrsb	r3, [r5, #7]
 22999              	.LVL2965:
10894:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_RADIUS_MSB, data1_u8r);
 23000              		.loc 1 10894 21 is_stmt 1 view .LVU6669
 23001              		.loc 1 10894 31 is_stmt 0 view .LVU6670
 23002 01f8 8DF80730 		strb	r3, [sp, #7]
10895:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23003              		.loc 1 10895 21 is_stmt 1 view .LVU6671
 23004              		.loc 1 10895 41 is_stmt 0 view .LVU6672
 23005 01fc 134B     		ldr	r3, .L1612
 23006              	.LVL2966:
 23007              		.loc 1 10895 41 view .LVU6673
 23008 01fe 1868     		ldr	r0, [r3]
 23009 0200 C468     		ldr	r4, [r0, #12]
 23010              	.LVL2967:
 23011              		.loc 1 10895 33 view .LVU6674
 23012 0202 0123     		movs	r3, #1
 23013 0204 0DF10702 		add	r2, sp, #7
 23014              	.LVL2968:
 23015              		.loc 1 10895 33 view .LVU6675
 23016 0208 6A21     		movs	r1, #106
 23017 020a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23018 020c A047     		blx	r4
 23019              	.LVL2969:
 23020              		.loc 1 10895 30 view .LVU6676
 23021 020e 56FA80F4 		uxtab	r4, r6, r0
 23022 0212 64B2     		sxtb	r4, r4
 23023              	.LVL2970:
 23024              		.loc 1 10895 30 view .LVU6677
 23025 0214 07E0     		b	.L1597
 23026              	.LVL2971:
 23027              	.L1610:
10785:Core/Src/bno055.c ****             }
 23028              		.loc 1 10785 17 is_stmt 1 view .LVU6678
10785:Core/Src/bno055.c ****             }
 23029              		.loc 1 10785 28 is_stmt 0 view .LVU6679
 23030 0216 FFF7FEFF 		bl	bno055_set_operation_mode
 23031              	.LVL2972:
10785:Core/Src/bno055.c ****             }
 23032              		.loc 1 10785 25 view .LVU6680
 23033 021a 54FA80F4 		uxtab	r4, r4, r0
 23034 021e 64B2     		sxtb	r4, r4
 23035              	.LVL2973:
10785:Core/Src/bno055.c ****             }
 23036              		.loc 1 10785 25 view .LVU6681
 23037 0220 08E7     		b	.L1598
ARM GAS  /tmp/ccOloYeZ.s 			page 648


 23038              	.LVL2974:
 23039              	.L1607:
10896:Core/Src/bno055.c ****                                                                 BNO055_MAG_RADIUS_MSB_REG,
10897:Core/Src/bno055.c ****                                                                 &data2_u8r,
10898:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10899:Core/Src/bno055.c ****                 }
10900:Core/Src/bno055.c ****             }
10901:Core/Src/bno055.c ****             else
10902:Core/Src/bno055.c ****             {
10903:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10904:Core/Src/bno055.c ****             }
10905:Core/Src/bno055.c ****         }
10906:Core/Src/bno055.c ****         else
10907:Core/Src/bno055.c ****         {
10908:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 23040              		.loc 1 10908 22 view .LVU6682
 23041 0222 4FF0FF34 		mov	r4, #-1
 23042              	.LVL2975:
 23043              	.L1597:
10909:Core/Src/bno055.c ****         }
10910:Core/Src/bno055.c ****     }
10911:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 23044              		.loc 1 10911 5 is_stmt 1 view .LVU6683
 23045              		.loc 1 10911 24 is_stmt 0 view .LVU6684
 23046 0226 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 23047              		.loc 1 10911 8 view .LVU6685
 23048 022a 28B9     		cbnz	r0, .L1611
 23049              	.LVL2976:
 23050              	.L1596:
10912:Core/Src/bno055.c ****     {
10913:Core/Src/bno055.c ****         /* set the operation mode
10914:Core/Src/bno055.c ****          * of previous operation mode*/
10915:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
10916:Core/Src/bno055.c ****     }
10917:Core/Src/bno055.c **** 
10918:Core/Src/bno055.c ****     return com_rslt;
10919:Core/Src/bno055.c **** }
 23051              		.loc 1 10919 1 view .LVU6686
 23052 022c 2046     		mov	r0, r4
 23053 022e 02B0     		add	sp, sp, #8
 23054              		.cfi_remember_state
 23055              		.cfi_def_cfa_offset 16
 23056              		@ sp needed
 23057 0230 70BD     		pop	{r4, r5, r6, pc}
 23058              	.LVL2977:
 23059              	.L1608:
 23060              		.cfi_restore_state
10903:Core/Src/bno055.c ****             }
 23061              		.loc 1 10903 26 view .LVU6687
 23062 0232 4FF0FF34 		mov	r4, #-1
 23063              	.LVL2978:
10903:Core/Src/bno055.c ****             }
 23064              		.loc 1 10903 26 view .LVU6688
 23065 0236 F6E7     		b	.L1597
 23066              	.LVL2979:
 23067              	.L1611:
10915:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccOloYeZ.s 			page 649


 23068              		.loc 1 10915 9 is_stmt 1 view .LVU6689
10915:Core/Src/bno055.c ****     }
 23069              		.loc 1 10915 21 is_stmt 0 view .LVU6690
 23070 0238 FFF7FEFF 		bl	bno055_set_operation_mode
 23071              	.LVL2980:
10915:Core/Src/bno055.c ****     }
 23072              		.loc 1 10915 18 view .LVU6691
 23073 023c 54FA80F4 		uxtab	r4, r4, r0
 23074              	.LVL2981:
10915:Core/Src/bno055.c ****     }
 23075              		.loc 1 10915 18 view .LVU6692
 23076 0240 64B2     		sxtb	r4, r4
 23077              	.LVL2982:
10915:Core/Src/bno055.c ****     }
 23078              		.loc 1 10915 18 view .LVU6693
 23079 0242 F3E7     		b	.L1596
 23080              	.LVL2983:
 23081              	.L1606:
10773:Core/Src/bno055.c ****     }
 23082              		.loc 1 10773 16 view .LVU6694
 23083 0244 6FF07E04 		mvn	r4, #126
 23084 0248 F0E7     		b	.L1596
 23085              	.L1613:
 23086 024a 00BF     		.align	2
 23087              	.L1612:
 23088 024c 00000000 		.word	p_bno055
 23089              		.cfi_endproc
 23090              	.LFE172:
 23092              		.section	.text.bno055_read_gyro_offset,"ax",%progbits
 23093              		.align	1
 23094              		.global	bno055_read_gyro_offset
 23095              		.syntax unified
 23096              		.thumb
 23097              		.thumb_func
 23099              	bno055_read_gyro_offset:
 23100              	.LVL2984:
 23101              	.LFB173:
10920:Core/Src/bno055.c **** 
10921:Core/Src/bno055.c **** /*!
10922:Core/Src/bno055.c ****  *  @brief This API is used to read gyro offset
10923:Core/Src/bno055.c ****  *  offset form register 0x61 to 0x66
10924:Core/Src/bno055.c ****  *
10925:Core/Src/bno055.c ****  *  @param gyro_offset : The value of gyro offset
10926:Core/Src/bno055.c ****  *
10927:Core/Src/bno055.c ****  *      bno055_gyro_offset_t  |     result
10928:Core/Src/bno055.c ****  *      ------------------- | ----------------
10929:Core/Src/bno055.c ****  *               x          |  gyro offset x
10930:Core/Src/bno055.c ****  *               y          |  gyro offset y
10931:Core/Src/bno055.c ****  *               z          |  gyro offset z
10932:Core/Src/bno055.c ****  *
10933:Core/Src/bno055.c ****  *
10934:Core/Src/bno055.c ****  *  @return results of bus communication function
10935:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10936:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10937:Core/Src/bno055.c ****  *
10938:Core/Src/bno055.c ****  *  @note  The range of the gyro offset varies based on
10939:Core/Src/bno055.c ****  *  the range of gyro sensor
ARM GAS  /tmp/ccOloYeZ.s 			page 650


10940:Core/Src/bno055.c ****  *
10941:Core/Src/bno055.c ****  *  gyro G range         | offset range
10942:Core/Src/bno055.c ****  * --------------------  | ------------
10943:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_2000DPS   | +/-32000
10944:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_1000DPS   | +/-16000
10945:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_500DPS    | +/-8000
10946:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_250DPS    | +/-4000
10947:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_125DPS    | +/-2000
10948:Core/Src/bno055.c ****  *
10949:Core/Src/bno055.c ****  *  Gyro range can be configured by using the
10950:Core/Src/bno055.c ****  *  bno055_set_gyro_range() API
10951:Core/Src/bno055.c ****  */
10952:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_offset(struct bno055_gyro_offset_t  *gyro_offset)
10953:Core/Src/bno055.c **** {
 23102              		.loc 1 10953 1 is_stmt 1 view -0
 23103              		.cfi_startproc
 23104              		@ args = 0, pretend = 0, frame = 8
 23105              		@ frame_needed = 0, uses_anonymous_args = 0
 23106              		.loc 1 10953 1 is_stmt 0 view .LVU6696
 23107 0000 30B5     		push	{r4, r5, lr}
 23108              		.cfi_def_cfa_offset 12
 23109              		.cfi_offset 4, -12
 23110              		.cfi_offset 5, -8
 23111              		.cfi_offset 14, -4
 23112 0002 83B0     		sub	sp, sp, #12
 23113              		.cfi_def_cfa_offset 24
 23114 0004 0446     		mov	r4, r0
10954:Core/Src/bno055.c ****     /* Variable used to return value of
10955:Core/Src/bno055.c ****      * communication routine*/
10956:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 23115              		.loc 1 10956 5 is_stmt 1 view .LVU6697
 23116              	.LVL2985:
10957:Core/Src/bno055.c **** 
10958:Core/Src/bno055.c ****     /* Array holding the gyro offset values
10959:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] - offset x->LSB
10960:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] - offset x->MSB
10961:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] - offset y->LSB
10962:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] - offset y->MSB
10963:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] - offset z->LSB
10964:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] - offset z->MSB
10965:Core/Src/bno055.c ****      */
10966:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_OFFSET_ARRAY] = {
 23117              		.loc 1 10966 5 view .LVU6698
 23118              		.loc 1 10966 8 is_stmt 0 view .LVU6699
 23119 0006 1F4B     		ldr	r3, .L1623
 23120 0008 93E80300 		ldm	r3, {r0, r1}
 23121              	.LVL2986:
 23122              		.loc 1 10966 8 view .LVU6700
 23123 000c 0090     		str	r0, [sp]
 23124 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
10967:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
10968:Core/Src/bno055.c ****     };
10969:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 23125              		.loc 1 10969 5 is_stmt 1 view .LVU6701
 23126              	.LVL2987:
10970:Core/Src/bno055.c **** 
10971:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
ARM GAS  /tmp/ccOloYeZ.s 			page 651


10972:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 23127              		.loc 1 10972 5 view .LVU6702
 23128              		.loc 1 10972 18 is_stmt 0 view .LVU6703
 23129 0012 1D4B     		ldr	r3, .L1623+4
 23130 0014 1B68     		ldr	r3, [r3]
 23131              		.loc 1 10972 8 view .LVU6704
 23132 0016 5BB3     		cbz	r3, .L1618
10973:Core/Src/bno055.c ****     {
10974:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10975:Core/Src/bno055.c ****     }
10976:Core/Src/bno055.c ****     else
10977:Core/Src/bno055.c ****     {
10978:Core/Src/bno055.c ****         /*condition check for page, gyro offset is
10979:Core/Src/bno055.c ****          * available in the page zero*/
10980:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 23133              		.loc 1 10980 9 is_stmt 1 view .LVU6705
 23134              		.loc 1 10980 21 is_stmt 0 view .LVU6706
 23135 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 23136              		.loc 1 10980 12 view .LVU6707
 23137 001a 1BBB     		cbnz	r3, .L1622
 23138              	.LVL2988:
 23139              	.L1616:
10981:Core/Src/bno055.c ****         {
10982:Core/Src/bno055.c ****             /* Write the page zero*/
10983:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
10984:Core/Src/bno055.c ****         }
10985:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 23140              		.loc 1 10985 53 discriminator 1 view .LVU6708
 23141 001c 1A4B     		ldr	r3, .L1623+4
 23142 001e 1B68     		ldr	r3, [r3]
 23143 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 23144              		.loc 1 10985 41 discriminator 1 view .LVU6709
 23145 0022 43BB     		cbnz	r3, .L1619
 23146              	.L1617:
10986:Core/Src/bno055.c ****         {
10987:Core/Src/bno055.c ****             /* Read gyro offset value it the six bytes of data*/
10988:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23147              		.loc 1 10988 13 is_stmt 1 view .LVU6710
 23148              		.loc 1 10988 32 is_stmt 0 view .LVU6711
 23149 0024 184B     		ldr	r3, .L1623+4
 23150 0026 1868     		ldr	r0, [r3]
 23151 0028 0569     		ldr	r5, [r0, #16]
 23152              		.loc 1 10988 24 view .LVU6712
 23153 002a 0623     		movs	r3, #6
 23154 002c 6A46     		mov	r2, sp
 23155 002e 6121     		movs	r1, #97
 23156 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23157 0032 A847     		blx	r5
 23158              	.LVL2989:
10989:Core/Src/bno055.c ****                                                       BNO055_GYRO_OFFSET_X_LSB_REG,
10990:Core/Src/bno055.c ****                                                       data_u8,
10991:Core/Src/bno055.c ****                                                       BNO055_GYRO_OFFSET_ARRAY);
10992:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 23159              		.loc 1 10992 13 is_stmt 1 view .LVU6713
 23160              		.loc 1 10992 16 is_stmt 0 view .LVU6714
 23161 0034 10BB     		cbnz	r0, .L1620
10993:Core/Src/bno055.c ****             {
ARM GAS  /tmp/ccOloYeZ.s 			page 652


10994:Core/Src/bno055.c ****                 /* Read gyro x offset value*/
10995:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23162              		.loc 1 10995 17 is_stmt 1 view .LVU6715
10996:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_X
10997:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23163              		.loc 1 10997 17 view .LVU6716
10998:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_X
10999:Core/Src/bno055.c ****                 gyro_offset->x =
 23164              		.loc 1 10999 17 view .LVU6717
11000:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 23165              		.loc 1 11000 34 is_stmt 0 view .LVU6718
 23166 0036 9DF90120 		ldrsb	r2, [sp, #1]
11001:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB]));
 23167              		.loc 1 11001 35 view .LVU6719
 23168 003a 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
11000:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 23169              		.loc 1 11000 21 view .LVU6720
 23170 003e 43EA0223 		orr	r3, r3, r2, lsl #8
10999:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 23171              		.loc 1 10999 32 view .LVU6721
 23172 0042 2380     		strh	r3, [r4]	@ movhi
11002:Core/Src/bno055.c **** 
11003:Core/Src/bno055.c ****                 /* Read gyro y offset value*/
11004:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23173              		.loc 1 11004 17 is_stmt 1 view .LVU6722
11005:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_Y
11006:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23174              		.loc 1 11006 17 view .LVU6723
11007:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_Y
11008:Core/Src/bno055.c ****                 gyro_offset->y =
 23175              		.loc 1 11008 17 view .LVU6724
11009:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 23176              		.loc 1 11009 34 is_stmt 0 view .LVU6725
 23177 0044 9DF90320 		ldrsb	r2, [sp, #3]
11010:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB]));
 23178              		.loc 1 11010 35 view .LVU6726
 23179 0048 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
11009:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 23180              		.loc 1 11009 21 view .LVU6727
 23181 004c 43EA0223 		orr	r3, r3, r2, lsl #8
11008:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 23182              		.loc 1 11008 32 view .LVU6728
 23183 0050 6380     		strh	r3, [r4, #2]	@ movhi
11011:Core/Src/bno055.c **** 
11012:Core/Src/bno055.c ****                 /* Read gyro z offset value*/
11013:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23184              		.loc 1 11013 17 is_stmt 1 view .LVU6729
11014:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_Z
11015:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23185              		.loc 1 11015 17 view .LVU6730
11016:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_Z
11017:Core/Src/bno055.c ****                 gyro_offset->z =
 23186              		.loc 1 11017 17 view .LVU6731
11018:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 23187              		.loc 1 11018 34 is_stmt 0 view .LVU6732
 23188 0052 9DF90520 		ldrsb	r2, [sp, #5]
11019:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB]));
ARM GAS  /tmp/ccOloYeZ.s 			page 653


 23189              		.loc 1 11019 35 view .LVU6733
 23190 0056 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
11018:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 23191              		.loc 1 11018 21 view .LVU6734
 23192 005a 43EA0223 		orr	r3, r3, r2, lsl #8
11017:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 23193              		.loc 1 11017 32 view .LVU6735
 23194 005e A380     		strh	r3, [r4, #4]	@ movhi
 23195              	.LVL2990:
 23196              	.L1615:
11020:Core/Src/bno055.c ****             }
11021:Core/Src/bno055.c ****             else
11022:Core/Src/bno055.c ****             {
11023:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
11024:Core/Src/bno055.c ****             }
11025:Core/Src/bno055.c ****         }
11026:Core/Src/bno055.c ****         else
11027:Core/Src/bno055.c ****         {
11028:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11029:Core/Src/bno055.c ****         }
11030:Core/Src/bno055.c ****     }
11031:Core/Src/bno055.c **** 
11032:Core/Src/bno055.c ****     return com_rslt;
11033:Core/Src/bno055.c **** }
 23197              		.loc 1 11033 1 view .LVU6736
 23198 0060 03B0     		add	sp, sp, #12
 23199              		.cfi_remember_state
 23200              		.cfi_def_cfa_offset 12
 23201              		@ sp needed
 23202 0062 30BD     		pop	{r4, r5, pc}
 23203              	.LVL2991:
 23204              	.L1622:
 23205              		.cfi_restore_state
10983:Core/Src/bno055.c ****         }
 23206              		.loc 1 10983 13 is_stmt 1 view .LVU6737
10983:Core/Src/bno055.c ****         }
 23207              		.loc 1 10983 23 is_stmt 0 view .LVU6738
 23208 0064 0020     		movs	r0, #0
 23209 0066 FFF7FEFF 		bl	bno055_write_page_id
 23210              	.LVL2992:
10985:Core/Src/bno055.c ****         {
 23211              		.loc 1 10985 9 is_stmt 1 view .LVU6739
10985:Core/Src/bno055.c ****         {
 23212              		.loc 1 10985 12 is_stmt 0 view .LVU6740
 23213 006a 0028     		cmp	r0, #0
 23214 006c DAD0     		beq	.L1617
 23215 006e D5E7     		b	.L1616
 23216              	.LVL2993:
 23217              	.L1618:
10974:Core/Src/bno055.c ****     }
 23218              		.loc 1 10974 16 view .LVU6741
 23219 0070 6FF07E00 		mvn	r0, #126
 23220 0074 F4E7     		b	.L1615
 23221              	.LVL2994:
 23222              	.L1619:
11028:Core/Src/bno055.c ****         }
 23223              		.loc 1 11028 22 view .LVU6742
ARM GAS  /tmp/ccOloYeZ.s 			page 654


 23224 0076 4FF0FF30 		mov	r0, #-1
 23225 007a F1E7     		b	.L1615
 23226              	.LVL2995:
 23227              	.L1620:
11023:Core/Src/bno055.c ****             }
 23228              		.loc 1 11023 26 view .LVU6743
 23229 007c 4FF0FF30 		mov	r0, #-1
 23230              	.LVL2996:
11023:Core/Src/bno055.c ****             }
 23231              		.loc 1 11023 26 view .LVU6744
 23232 0080 EEE7     		b	.L1615
 23233              	.L1624:
 23234 0082 00BF     		.align	2
 23235              	.L1623:
 23236 0084 00000000 		.word	.LANCHOR0
 23237 0088 00000000 		.word	p_bno055
 23238              		.cfi_endproc
 23239              	.LFE173:
 23241              		.section	.text.bno055_write_gyro_offset,"ax",%progbits
 23242              		.align	1
 23243              		.global	bno055_write_gyro_offset
 23244              		.syntax unified
 23245              		.thumb
 23246              		.thumb_func
 23248              	bno055_write_gyro_offset:
 23249              	.LVL2997:
 23250              	.LFB174:
11034:Core/Src/bno055.c **** 
11035:Core/Src/bno055.c **** /*!
11036:Core/Src/bno055.c ****  *  @brief This API is used to read gyro offset
11037:Core/Src/bno055.c ****  *  offset form register 0x61 to 0x66
11038:Core/Src/bno055.c ****  *
11039:Core/Src/bno055.c ****  *  @param gyro_offset : The value of gyro offset
11040:Core/Src/bno055.c ****  *
11041:Core/Src/bno055.c ****  *      bno055_gyro_offset_t  |     result
11042:Core/Src/bno055.c ****  *      ------------------- | ----------------
11043:Core/Src/bno055.c ****  *               x          |  gyro offset x
11044:Core/Src/bno055.c ****  *               y          |  gyro offset y
11045:Core/Src/bno055.c ****  *               z          |  gyro offset z
11046:Core/Src/bno055.c ****  *
11047:Core/Src/bno055.c ****  *
11048:Core/Src/bno055.c ****  *  @return results of bus communication function
11049:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11050:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11051:Core/Src/bno055.c ****  *
11052:Core/Src/bno055.c ****  *  @note  The range of the gyro offset varies based on
11053:Core/Src/bno055.c ****  *  the range of gyro sensor
11054:Core/Src/bno055.c ****  *
11055:Core/Src/bno055.c ****  *  gyro G range         | offset range
11056:Core/Src/bno055.c ****  * --------------------  | ------------
11057:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_2000DPS   | +/-32000
11058:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_1000DPS   | +/-16000
11059:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_500DPS    | +/-8000
11060:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_250DPS    | +/-4000
11061:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_125DPS    | +/-2000
11062:Core/Src/bno055.c ****  *
11063:Core/Src/bno055.c ****  *  Gyro range can be configured by using the
ARM GAS  /tmp/ccOloYeZ.s 			page 655


11064:Core/Src/bno055.c ****  *  bno055_set_gyro_range() API
11065:Core/Src/bno055.c ****  */
11066:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_gyro_offset(struct bno055_gyro_offset_t  *gyro_offset)
11067:Core/Src/bno055.c **** {
 23251              		.loc 1 11067 1 is_stmt 1 view -0
 23252              		.cfi_startproc
 23253              		@ args = 0, pretend = 0, frame = 8
 23254              		@ frame_needed = 0, uses_anonymous_args = 0
 23255              		.loc 1 11067 1 is_stmt 0 view .LVU6746
 23256 0000 70B5     		push	{r4, r5, r6, lr}
 23257              		.cfi_def_cfa_offset 16
 23258              		.cfi_offset 4, -16
 23259              		.cfi_offset 5, -12
 23260              		.cfi_offset 6, -8
 23261              		.cfi_offset 14, -4
 23262 0002 82B0     		sub	sp, sp, #8
 23263              		.cfi_def_cfa_offset 24
11068:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 23264              		.loc 1 11068 5 is_stmt 1 view .LVU6747
 23265              	.LVL2998:
11069:Core/Src/bno055.c ****     u8 data1_u8r = BNO055_INIT_VALUE;
 23266              		.loc 1 11069 5 view .LVU6748
11070:Core/Src/bno055.c ****     u8 data2_u8r = BNO055_INIT_VALUE;
 23267              		.loc 1 11070 5 view .LVU6749
 23268              		.loc 1 11070 8 is_stmt 0 view .LVU6750
 23269 0004 0023     		movs	r3, #0
 23270 0006 8DF80730 		strb	r3, [sp, #7]
11071:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 23271              		.loc 1 11071 5 is_stmt 1 view .LVU6751
 23272              		.loc 1 11071 8 is_stmt 0 view .LVU6752
 23273 000a 8DF80630 		strb	r3, [sp, #6]
11072:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 23274              		.loc 1 11072 5 is_stmt 1 view .LVU6753
 23275              	.LVL2999:
11073:Core/Src/bno055.c **** 
11074:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11075:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 23276              		.loc 1 11075 5 view .LVU6754
 23277              		.loc 1 11075 18 is_stmt 0 view .LVU6755
 23278 000e 714B     		ldr	r3, .L1640
 23279 0010 1B68     		ldr	r3, [r3]
 23280              		.loc 1 11075 8 view .LVU6756
 23281 0012 002B     		cmp	r3, #0
 23282 0014 00F0DA80 		beq	.L1634
 23283 0018 0546     		mov	r5, r0
11076:Core/Src/bno055.c ****     {
11077:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11078:Core/Src/bno055.c ****     }
11079:Core/Src/bno055.c ****     else
11080:Core/Src/bno055.c ****     {
11081:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11082:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11083:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11084:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 23284              		.loc 1 11084 9 is_stmt 1 view .LVU6757
 23285              		.loc 1 11084 19 is_stmt 0 view .LVU6758
 23286 001a 0DF10600 		add	r0, sp, #6
ARM GAS  /tmp/ccOloYeZ.s 			page 656


 23287              	.LVL3000:
 23288              		.loc 1 11084 19 view .LVU6759
 23289 001e FFF7FEFF 		bl	bno055_get_operation_mode
 23290              	.LVL3001:
11085:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 23291              		.loc 1 11085 9 is_stmt 1 view .LVU6760
 23292              		.loc 1 11085 12 is_stmt 0 view .LVU6761
 23293 0022 0446     		mov	r4, r0
 23294 0024 0028     		cmp	r0, #0
 23295 0026 40F0C080 		bne	.L1635
11086:Core/Src/bno055.c ****         {
11087:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 23296              		.loc 1 11087 13 is_stmt 1 view .LVU6762
 23297              		.loc 1 11087 32 is_stmt 0 view .LVU6763
 23298 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 23299              		.loc 1 11087 16 view .LVU6764
 23300 002e 002B     		cmp	r3, #0
 23301 0030 40F0B580 		bne	.L1638
 23302              	.LVL3002:
 23303              	.L1628:
11088:Core/Src/bno055.c ****             {
11089:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11090:Core/Src/bno055.c ****             }
11091:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 23304              		.loc 1 11091 13 is_stmt 1 view .LVU6765
 23305              		.loc 1 11091 16 is_stmt 0 view .LVU6766
 23306 0034 002C     		cmp	r4, #0
 23307 0036 40F0C080 		bne	.L1636
11092:Core/Src/bno055.c ****             {
11093:Core/Src/bno055.c ****                 /* write gryo offset x value*/
11094:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23308              		.loc 1 11094 17 is_stmt 1 view .LVU6767
 23309              		.loc 1 11094 36 is_stmt 0 view .LVU6768
 23310 003a 664B     		ldr	r3, .L1640
 23311 003c 1868     		ldr	r0, [r3]
 23312 003e 0469     		ldr	r4, [r0, #16]
 23313              	.LVL3003:
 23314              		.loc 1 11094 28 view .LVU6769
 23315 0040 0123     		movs	r3, #1
 23316 0042 0DF10702 		add	r2, sp, #7
 23317 0046 6121     		movs	r1, #97
 23318 0048 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23319 004a A047     		blx	r4
 23320              	.LVL3004:
11095:Core/Src/bno055.c ****                                                           BNO055_GYRO_OFFSET_X_LSB_REG,
11096:Core/Src/bno055.c ****                                                           &data2_u8r,
11097:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
11098:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23321              		.loc 1 11098 17 is_stmt 1 view .LVU6770
 23322              		.loc 1 11098 20 is_stmt 0 view .LVU6771
 23323 004c 0446     		mov	r4, r0
 23324 004e 78B9     		cbnz	r0, .L1629
11099:Core/Src/bno055.c ****                 {
11100:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->x & BNO055_SIC_HEX_0_0_F_F_DATA));
 23325              		.loc 1 11100 21 is_stmt 1 view .LVU6772
 23326              		.loc 1 11100 50 is_stmt 0 view .LVU6773
 23327 0050 B5F90030 		ldrsh	r3, [r5]
ARM GAS  /tmp/ccOloYeZ.s 			page 657


 23328              	.LVL3005:
11101:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_X_LSB, data1_u8r)
 23329              		.loc 1 11101 21 is_stmt 1 view .LVU6774
 23330              		.loc 1 11101 31 is_stmt 0 view .LVU6775
 23331 0054 8DF80730 		strb	r3, [sp, #7]
11102:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23332              		.loc 1 11102 21 is_stmt 1 view .LVU6776
 23333              		.loc 1 11102 41 is_stmt 0 view .LVU6777
 23334 0058 5E4B     		ldr	r3, .L1640
 23335              	.LVL3006:
 23336              		.loc 1 11102 41 view .LVU6778
 23337 005a 1868     		ldr	r0, [r3]
 23338              	.LVL3007:
 23339              		.loc 1 11102 41 view .LVU6779
 23340 005c C668     		ldr	r6, [r0, #12]
 23341              		.loc 1 11102 33 view .LVU6780
 23342 005e 0123     		movs	r3, #1
 23343 0060 0DF10702 		add	r2, sp, #7
 23344              	.LVL3008:
 23345              		.loc 1 11102 33 view .LVU6781
 23346 0064 6121     		movs	r1, #97
 23347 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23348 0068 B047     		blx	r6
 23349              	.LVL3009:
 23350              		.loc 1 11102 30 view .LVU6782
 23351 006a 54FA80F0 		uxtab	r0, r4, r0
 23352 006e 44B2     		sxtb	r4, r0
 23353              	.LVL3010:
 23354              	.L1629:
11103:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_X_LSB_REG,
11104:Core/Src/bno055.c ****                                                                 &data2_u8r,
11105:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11106:Core/Src/bno055.c ****                 }
11107:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23355              		.loc 1 11107 17 is_stmt 1 view .LVU6783
 23356              		.loc 1 11107 37 is_stmt 0 view .LVU6784
 23357 0070 584B     		ldr	r3, .L1640
 23358 0072 1868     		ldr	r0, [r3]
 23359 0074 0669     		ldr	r6, [r0, #16]
 23360              		.loc 1 11107 29 view .LVU6785
 23361 0076 0123     		movs	r3, #1
 23362 0078 0DF10702 		add	r2, sp, #7
 23363 007c 6221     		movs	r1, #98
 23364 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23365 0080 B047     		blx	r6
 23366              	.LVL3011:
 23367              		.loc 1 11107 26 view .LVU6786
 23368 0082 54FA80F4 		uxtab	r4, r4, r0
 23369              	.LVL3012:
 23370              		.loc 1 11107 26 view .LVU6787
 23371 0086 E6B2     		uxtb	r6, r4
 23372 0088 64B2     		sxtb	r4, r4
 23373              	.LVL3013:
11108:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_X_MSB_REG,
11109:Core/Src/bno055.c ****                                                            &data2_u8r,
11110:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11111:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/ccOloYeZ.s 			page 658


 23374              		.loc 1 11111 17 is_stmt 1 view .LVU6788
 23375              		.loc 1 11111 20 is_stmt 0 view .LVU6789
 23376 008a 7CB9     		cbnz	r4, .L1630
11112:Core/Src/bno055.c ****                 {
11113:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->x >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0
 23377              		.loc 1 11113 21 is_stmt 1 view .LVU6790
 23378              		.loc 1 11113 34 is_stmt 0 view .LVU6791
 23379 008c 95F90130 		ldrsb	r3, [r5, #1]
 23380              	.LVL3014:
11114:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_X_MSB, data1_u8r)
 23381              		.loc 1 11114 21 is_stmt 1 view .LVU6792
 23382              		.loc 1 11114 31 is_stmt 0 view .LVU6793
 23383 0090 8DF80730 		strb	r3, [sp, #7]
11115:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23384              		.loc 1 11115 21 is_stmt 1 view .LVU6794
 23385              		.loc 1 11115 41 is_stmt 0 view .LVU6795
 23386 0094 4F4B     		ldr	r3, .L1640
 23387              	.LVL3015:
 23388              		.loc 1 11115 41 view .LVU6796
 23389 0096 1868     		ldr	r0, [r3]
 23390 0098 C468     		ldr	r4, [r0, #12]
 23391              	.LVL3016:
 23392              		.loc 1 11115 33 view .LVU6797
 23393 009a 0123     		movs	r3, #1
 23394 009c 0DF10702 		add	r2, sp, #7
 23395              	.LVL3017:
 23396              		.loc 1 11115 33 view .LVU6798
 23397 00a0 6221     		movs	r1, #98
 23398 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23399 00a4 A047     		blx	r4
 23400              	.LVL3018:
 23401              		.loc 1 11115 30 view .LVU6799
 23402 00a6 56FA80F4 		uxtab	r4, r6, r0
 23403 00aa 64B2     		sxtb	r4, r4
 23404              	.LVL3019:
 23405              	.L1630:
11116:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_X_MSB_REG,
11117:Core/Src/bno055.c ****                                                                 &data2_u8r,
11118:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11119:Core/Src/bno055.c ****                 }
11120:Core/Src/bno055.c **** 
11121:Core/Src/bno055.c ****                 /* write gryo offset y value*/
11122:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23406              		.loc 1 11122 17 is_stmt 1 view .LVU6800
 23407              		.loc 1 11122 37 is_stmt 0 view .LVU6801
 23408 00ac 494B     		ldr	r3, .L1640
 23409 00ae 1868     		ldr	r0, [r3]
 23410 00b0 0669     		ldr	r6, [r0, #16]
 23411              		.loc 1 11122 29 view .LVU6802
 23412 00b2 0123     		movs	r3, #1
 23413 00b4 0DF10702 		add	r2, sp, #7
 23414 00b8 6321     		movs	r1, #99
 23415 00ba 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23416 00bc B047     		blx	r6
 23417              	.LVL3020:
 23418              		.loc 1 11122 26 view .LVU6803
 23419 00be 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/ccOloYeZ.s 			page 659


 23420              	.LVL3021:
 23421              		.loc 1 11122 26 view .LVU6804
 23422 00c2 E6B2     		uxtb	r6, r4
 23423 00c4 64B2     		sxtb	r4, r4
 23424              	.LVL3022:
11123:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_Y_LSB_REG,
11124:Core/Src/bno055.c ****                                                            &data2_u8r,
11125:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11126:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23425              		.loc 1 11126 17 is_stmt 1 view .LVU6805
 23426              		.loc 1 11126 20 is_stmt 0 view .LVU6806
 23427 00c6 7CB9     		cbnz	r4, .L1631
11127:Core/Src/bno055.c ****                 {
11128:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->y & BNO055_SIC_HEX_0_0_F_F_DATA));
 23428              		.loc 1 11128 21 is_stmt 1 view .LVU6807
 23429              		.loc 1 11128 50 is_stmt 0 view .LVU6808
 23430 00c8 B5F90230 		ldrsh	r3, [r5, #2]
 23431              	.LVL3023:
11129:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_Y_LSB, data1_u8r)
 23432              		.loc 1 11129 21 is_stmt 1 view .LVU6809
 23433              		.loc 1 11129 31 is_stmt 0 view .LVU6810
 23434 00cc 8DF80730 		strb	r3, [sp, #7]
11130:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23435              		.loc 1 11130 21 is_stmt 1 view .LVU6811
 23436              		.loc 1 11130 41 is_stmt 0 view .LVU6812
 23437 00d0 404B     		ldr	r3, .L1640
 23438              	.LVL3024:
 23439              		.loc 1 11130 41 view .LVU6813
 23440 00d2 1868     		ldr	r0, [r3]
 23441 00d4 C468     		ldr	r4, [r0, #12]
 23442              	.LVL3025:
 23443              		.loc 1 11130 33 view .LVU6814
 23444 00d6 0123     		movs	r3, #1
 23445 00d8 0DF10702 		add	r2, sp, #7
 23446              	.LVL3026:
 23447              		.loc 1 11130 33 view .LVU6815
 23448 00dc 6321     		movs	r1, #99
 23449 00de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23450 00e0 A047     		blx	r4
 23451              	.LVL3027:
 23452              		.loc 1 11130 30 view .LVU6816
 23453 00e2 56FA80F4 		uxtab	r4, r6, r0
 23454 00e6 64B2     		sxtb	r4, r4
 23455              	.LVL3028:
 23456              	.L1631:
11131:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_Y_LSB_REG,
11132:Core/Src/bno055.c ****                                                                 &data2_u8r,
11133:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11134:Core/Src/bno055.c ****                 }
11135:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23457              		.loc 1 11135 17 is_stmt 1 view .LVU6817
 23458              		.loc 1 11135 37 is_stmt 0 view .LVU6818
 23459 00e8 3A4B     		ldr	r3, .L1640
 23460 00ea 1868     		ldr	r0, [r3]
 23461 00ec 0669     		ldr	r6, [r0, #16]
 23462              		.loc 1 11135 29 view .LVU6819
 23463 00ee 0123     		movs	r3, #1
ARM GAS  /tmp/ccOloYeZ.s 			page 660


 23464 00f0 0DF10702 		add	r2, sp, #7
 23465 00f4 6421     		movs	r1, #100
 23466 00f6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23467 00f8 B047     		blx	r6
 23468              	.LVL3029:
 23469              		.loc 1 11135 26 view .LVU6820
 23470 00fa 54FA80F4 		uxtab	r4, r4, r0
 23471              	.LVL3030:
 23472              		.loc 1 11135 26 view .LVU6821
 23473 00fe E6B2     		uxtb	r6, r4
 23474 0100 64B2     		sxtb	r4, r4
 23475              	.LVL3031:
11136:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_Y_MSB_REG,
11137:Core/Src/bno055.c ****                                                            &data2_u8r,
11138:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11139:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23476              		.loc 1 11139 17 is_stmt 1 view .LVU6822
 23477              		.loc 1 11139 20 is_stmt 0 view .LVU6823
 23478 0102 7CB9     		cbnz	r4, .L1632
11140:Core/Src/bno055.c ****                 {
11141:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->y >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0
 23479              		.loc 1 11141 21 is_stmt 1 view .LVU6824
 23480              		.loc 1 11141 34 is_stmt 0 view .LVU6825
 23481 0104 95F90330 		ldrsb	r3, [r5, #3]
 23482              	.LVL3032:
11142:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_Y_MSB, data1_u8r)
 23483              		.loc 1 11142 21 is_stmt 1 view .LVU6826
 23484              		.loc 1 11142 31 is_stmt 0 view .LVU6827
 23485 0108 8DF80730 		strb	r3, [sp, #7]
11143:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23486              		.loc 1 11143 21 is_stmt 1 view .LVU6828
 23487              		.loc 1 11143 41 is_stmt 0 view .LVU6829
 23488 010c 314B     		ldr	r3, .L1640
 23489              	.LVL3033:
 23490              		.loc 1 11143 41 view .LVU6830
 23491 010e 1868     		ldr	r0, [r3]
 23492 0110 C468     		ldr	r4, [r0, #12]
 23493              	.LVL3034:
 23494              		.loc 1 11143 33 view .LVU6831
 23495 0112 0123     		movs	r3, #1
 23496 0114 0DF10702 		add	r2, sp, #7
 23497              	.LVL3035:
 23498              		.loc 1 11143 33 view .LVU6832
 23499 0118 6421     		movs	r1, #100
 23500 011a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23501 011c A047     		blx	r4
 23502              	.LVL3036:
 23503              		.loc 1 11143 30 view .LVU6833
 23504 011e 56FA80F4 		uxtab	r4, r6, r0
 23505 0122 64B2     		sxtb	r4, r4
 23506              	.LVL3037:
 23507              	.L1632:
11144:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_Y_MSB_REG,
11145:Core/Src/bno055.c ****                                                                 &data2_u8r,
11146:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11147:Core/Src/bno055.c ****                 }
11148:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 661


11149:Core/Src/bno055.c ****                 /* write gryo offset z value*/
11150:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23508              		.loc 1 11150 17 is_stmt 1 view .LVU6834
 23509              		.loc 1 11150 37 is_stmt 0 view .LVU6835
 23510 0124 2B4B     		ldr	r3, .L1640
 23511 0126 1868     		ldr	r0, [r3]
 23512 0128 0669     		ldr	r6, [r0, #16]
 23513              		.loc 1 11150 29 view .LVU6836
 23514 012a 0123     		movs	r3, #1
 23515 012c 0DF10702 		add	r2, sp, #7
 23516 0130 6521     		movs	r1, #101
 23517 0132 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23518 0134 B047     		blx	r6
 23519              	.LVL3038:
 23520              		.loc 1 11150 26 view .LVU6837
 23521 0136 54FA80F4 		uxtab	r4, r4, r0
 23522              	.LVL3039:
 23523              		.loc 1 11150 26 view .LVU6838
 23524 013a E6B2     		uxtb	r6, r4
 23525 013c 64B2     		sxtb	r4, r4
 23526              	.LVL3040:
11151:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_Z_LSB_REG,
11152:Core/Src/bno055.c ****                                                            &data2_u8r,
11153:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11154:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23527              		.loc 1 11154 17 is_stmt 1 view .LVU6839
 23528              		.loc 1 11154 20 is_stmt 0 view .LVU6840
 23529 013e 7CB9     		cbnz	r4, .L1633
11155:Core/Src/bno055.c ****                 {
11156:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->z & BNO055_SIC_HEX_0_0_F_F_DATA));
 23530              		.loc 1 11156 21 is_stmt 1 view .LVU6841
 23531              		.loc 1 11156 50 is_stmt 0 view .LVU6842
 23532 0140 B5F90430 		ldrsh	r3, [r5, #4]
 23533              	.LVL3041:
11157:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_Z_LSB, data1_u8r)
 23534              		.loc 1 11157 21 is_stmt 1 view .LVU6843
 23535              		.loc 1 11157 31 is_stmt 0 view .LVU6844
 23536 0144 8DF80730 		strb	r3, [sp, #7]
11158:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23537              		.loc 1 11158 21 is_stmt 1 view .LVU6845
 23538              		.loc 1 11158 41 is_stmt 0 view .LVU6846
 23539 0148 224B     		ldr	r3, .L1640
 23540              	.LVL3042:
 23541              		.loc 1 11158 41 view .LVU6847
 23542 014a 1868     		ldr	r0, [r3]
 23543 014c C468     		ldr	r4, [r0, #12]
 23544              	.LVL3043:
 23545              		.loc 1 11158 33 view .LVU6848
 23546 014e 0123     		movs	r3, #1
 23547 0150 0DF10702 		add	r2, sp, #7
 23548              	.LVL3044:
 23549              		.loc 1 11158 33 view .LVU6849
 23550 0154 6521     		movs	r1, #101
 23551 0156 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23552 0158 A047     		blx	r4
 23553              	.LVL3045:
 23554              		.loc 1 11158 30 view .LVU6850
ARM GAS  /tmp/ccOloYeZ.s 			page 662


 23555 015a 56FA80F4 		uxtab	r4, r6, r0
 23556 015e 64B2     		sxtb	r4, r4
 23557              	.LVL3046:
 23558              	.L1633:
11159:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_Z_LSB_REG,
11160:Core/Src/bno055.c ****                                                                 &data2_u8r,
11161:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11162:Core/Src/bno055.c ****                 }
11163:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23559              		.loc 1 11163 17 is_stmt 1 view .LVU6851
 23560              		.loc 1 11163 37 is_stmt 0 view .LVU6852
 23561 0160 1C4B     		ldr	r3, .L1640
 23562 0162 1868     		ldr	r0, [r3]
 23563 0164 0669     		ldr	r6, [r0, #16]
 23564              		.loc 1 11163 29 view .LVU6853
 23565 0166 0123     		movs	r3, #1
 23566 0168 0DF10702 		add	r2, sp, #7
 23567 016c 6621     		movs	r1, #102
 23568 016e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23569 0170 B047     		blx	r6
 23570              	.LVL3047:
 23571              		.loc 1 11163 26 view .LVU6854
 23572 0172 54FA80F4 		uxtab	r4, r4, r0
 23573              	.LVL3048:
 23574              		.loc 1 11163 26 view .LVU6855
 23575 0176 E6B2     		uxtb	r6, r4
 23576 0178 64B2     		sxtb	r4, r4
 23577              	.LVL3049:
11164:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_Z_MSB_REG,
11165:Core/Src/bno055.c ****                                                            &data2_u8r,
11166:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11167:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23578              		.loc 1 11167 17 is_stmt 1 view .LVU6856
 23579              		.loc 1 11167 20 is_stmt 0 view .LVU6857
 23580 017a C4B9     		cbnz	r4, .L1627
11168:Core/Src/bno055.c ****                 {
11169:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->z >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0
 23581              		.loc 1 11169 21 is_stmt 1 view .LVU6858
 23582              		.loc 1 11169 34 is_stmt 0 view .LVU6859
 23583 017c 95F90530 		ldrsb	r3, [r5, #5]
 23584              	.LVL3050:
11170:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_Z_MSB, data1_u8r)
 23585              		.loc 1 11170 21 is_stmt 1 view .LVU6860
 23586              		.loc 1 11170 31 is_stmt 0 view .LVU6861
 23587 0180 8DF80730 		strb	r3, [sp, #7]
11171:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23588              		.loc 1 11171 21 is_stmt 1 view .LVU6862
 23589              		.loc 1 11171 41 is_stmt 0 view .LVU6863
 23590 0184 134B     		ldr	r3, .L1640
 23591              	.LVL3051:
 23592              		.loc 1 11171 41 view .LVU6864
 23593 0186 1868     		ldr	r0, [r3]
 23594 0188 C468     		ldr	r4, [r0, #12]
 23595              	.LVL3052:
 23596              		.loc 1 11171 33 view .LVU6865
 23597 018a 0123     		movs	r3, #1
 23598 018c 0DF10702 		add	r2, sp, #7
ARM GAS  /tmp/ccOloYeZ.s 			page 663


 23599              	.LVL3053:
 23600              		.loc 1 11171 33 view .LVU6866
 23601 0190 6621     		movs	r1, #102
 23602 0192 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23603 0194 A047     		blx	r4
 23604              	.LVL3054:
 23605              		.loc 1 11171 30 view .LVU6867
 23606 0196 56FA80F4 		uxtab	r4, r6, r0
 23607 019a 64B2     		sxtb	r4, r4
 23608              	.LVL3055:
 23609              		.loc 1 11171 30 view .LVU6868
 23610 019c 07E0     		b	.L1627
 23611              	.LVL3056:
 23612              	.L1638:
11089:Core/Src/bno055.c ****             }
 23613              		.loc 1 11089 17 is_stmt 1 view .LVU6869
11089:Core/Src/bno055.c ****             }
 23614              		.loc 1 11089 28 is_stmt 0 view .LVU6870
 23615 019e FFF7FEFF 		bl	bno055_set_operation_mode
 23616              	.LVL3057:
11089:Core/Src/bno055.c ****             }
 23617              		.loc 1 11089 25 view .LVU6871
 23618 01a2 54FA80F4 		uxtab	r4, r4, r0
 23619 01a6 64B2     		sxtb	r4, r4
 23620              	.LVL3058:
11089:Core/Src/bno055.c ****             }
 23621              		.loc 1 11089 25 view .LVU6872
 23622 01a8 44E7     		b	.L1628
 23623              	.LVL3059:
 23624              	.L1635:
11172:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_Z_MSB_REG,
11173:Core/Src/bno055.c ****                                                                 &data2_u8r,
11174:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11175:Core/Src/bno055.c ****                 }
11176:Core/Src/bno055.c ****             }
11177:Core/Src/bno055.c ****             else
11178:Core/Src/bno055.c ****             {
11179:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
11180:Core/Src/bno055.c ****             }
11181:Core/Src/bno055.c ****         }
11182:Core/Src/bno055.c ****         else
11183:Core/Src/bno055.c ****         {
11184:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 23625              		.loc 1 11184 22 view .LVU6873
 23626 01aa 4FF0FF34 		mov	r4, #-1
 23627              	.LVL3060:
 23628              	.L1627:
11185:Core/Src/bno055.c ****         }
11186:Core/Src/bno055.c ****     }
11187:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 23629              		.loc 1 11187 5 is_stmt 1 view .LVU6874
 23630              		.loc 1 11187 24 is_stmt 0 view .LVU6875
 23631 01ae 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 23632              		.loc 1 11187 8 view .LVU6876
 23633 01b2 28B9     		cbnz	r0, .L1639
 23634              	.LVL3061:
 23635              	.L1626:
ARM GAS  /tmp/ccOloYeZ.s 			page 664


11188:Core/Src/bno055.c ****     {
11189:Core/Src/bno055.c ****         /* set the operation mode
11190:Core/Src/bno055.c ****          * of previous operation mode*/
11191:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11192:Core/Src/bno055.c ****     }
11193:Core/Src/bno055.c **** 
11194:Core/Src/bno055.c ****     return com_rslt;
11195:Core/Src/bno055.c **** }
 23636              		.loc 1 11195 1 view .LVU6877
 23637 01b4 2046     		mov	r0, r4
 23638 01b6 02B0     		add	sp, sp, #8
 23639              		.cfi_remember_state
 23640              		.cfi_def_cfa_offset 16
 23641              		@ sp needed
 23642 01b8 70BD     		pop	{r4, r5, r6, pc}
 23643              	.LVL3062:
 23644              	.L1636:
 23645              		.cfi_restore_state
11179:Core/Src/bno055.c ****             }
 23646              		.loc 1 11179 26 view .LVU6878
 23647 01ba 4FF0FF34 		mov	r4, #-1
 23648              	.LVL3063:
11179:Core/Src/bno055.c ****             }
 23649              		.loc 1 11179 26 view .LVU6879
 23650 01be F6E7     		b	.L1627
 23651              	.LVL3064:
 23652              	.L1639:
11191:Core/Src/bno055.c ****     }
 23653              		.loc 1 11191 9 is_stmt 1 view .LVU6880
11191:Core/Src/bno055.c ****     }
 23654              		.loc 1 11191 21 is_stmt 0 view .LVU6881
 23655 01c0 FFF7FEFF 		bl	bno055_set_operation_mode
 23656              	.LVL3065:
11191:Core/Src/bno055.c ****     }
 23657              		.loc 1 11191 18 view .LVU6882
 23658 01c4 54FA80F4 		uxtab	r4, r4, r0
 23659              	.LVL3066:
11191:Core/Src/bno055.c ****     }
 23660              		.loc 1 11191 18 view .LVU6883
 23661 01c8 64B2     		sxtb	r4, r4
 23662              	.LVL3067:
11191:Core/Src/bno055.c ****     }
 23663              		.loc 1 11191 18 view .LVU6884
 23664 01ca F3E7     		b	.L1626
 23665              	.LVL3068:
 23666              	.L1634:
11077:Core/Src/bno055.c ****     }
 23667              		.loc 1 11077 16 view .LVU6885
 23668 01cc 6FF07E04 		mvn	r4, #126
 23669 01d0 F0E7     		b	.L1626
 23670              	.L1641:
 23671 01d2 00BF     		.align	2
 23672              	.L1640:
 23673 01d4 00000000 		.word	p_bno055
 23674              		.cfi_endproc
 23675              	.LFE174:
 23677              		.section	.text.bno055_get_accel_range,"ax",%progbits
ARM GAS  /tmp/ccOloYeZ.s 			page 665


 23678              		.align	1
 23679              		.global	bno055_get_accel_range
 23680              		.syntax unified
 23681              		.thumb
 23682              		.thumb_func
 23684              	bno055_get_accel_range:
 23685              	.LVL3069:
 23686              	.LFB175:
11196:Core/Src/bno055.c **** 
11197:Core/Src/bno055.c **** /********************************************************/
11198:Core/Src/bno055.c **** /************** PAGE1 Functions *********************/
11199:Core/Src/bno055.c **** /********************************************************/
11200:Core/Src/bno055.c **** 
11201:Core/Src/bno055.c **** /*!
11202:Core/Src/bno055.c ****  *  @brief This API used to read the accel range
11203:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 0 and 1
11204:Core/Src/bno055.c ****  *
11205:Core/Src/bno055.c ****  *  @param accel_range_u8 : The value of accel range
11206:Core/Src/bno055.c ****  *        accel_range_u8 |   result
11207:Core/Src/bno055.c ****  *       ----------------- | --------------
11208:Core/Src/bno055.c ****  *              0x00       | BNO055_ACCEL_RANGE_2G
11209:Core/Src/bno055.c ****  *              0x01       | BNO055_ACCEL_RANGE_4G
11210:Core/Src/bno055.c ****  *              0x02       | BNO055_ACCEL_RANGE_8G
11211:Core/Src/bno055.c ****  *              0x03       | BNO055_ACCEL_RANGE_16G
11212:Core/Src/bno055.c ****  *
11213:Core/Src/bno055.c ****  *  @return results of bus communication function
11214:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11215:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11216:Core/Src/bno055.c ****  *
11217:Core/Src/bno055.c ****  *
11218:Core/Src/bno055.c ****  */
11219:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_range(u8 *accel_range_u8)
11220:Core/Src/bno055.c **** {
 23687              		.loc 1 11220 1 is_stmt 1 view -0
 23688              		.cfi_startproc
 23689              		@ args = 0, pretend = 0, frame = 8
 23690              		@ frame_needed = 0, uses_anonymous_args = 0
 23691              		.loc 1 11220 1 is_stmt 0 view .LVU6887
 23692 0000 30B5     		push	{r4, r5, lr}
 23693              		.cfi_def_cfa_offset 12
 23694              		.cfi_offset 4, -12
 23695              		.cfi_offset 5, -8
 23696              		.cfi_offset 14, -4
 23697 0002 83B0     		sub	sp, sp, #12
 23698              		.cfi_def_cfa_offset 24
11221:Core/Src/bno055.c ****     /* Variable used to return value of
11222:Core/Src/bno055.c ****      * communication routine*/
11223:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 23699              		.loc 1 11223 5 is_stmt 1 view .LVU6888
 23700              	.LVL3070:
11224:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 23701              		.loc 1 11224 5 view .LVU6889
 23702              		.loc 1 11224 8 is_stmt 0 view .LVU6890
 23703 0004 0023     		movs	r3, #0
 23704 0006 8DF80730 		strb	r3, [sp, #7]
11225:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 23705              		.loc 1 11225 5 is_stmt 1 view .LVU6891
ARM GAS  /tmp/ccOloYeZ.s 			page 666


 23706              	.LVL3071:
11226:Core/Src/bno055.c **** 
11227:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11228:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 23707              		.loc 1 11228 5 view .LVU6892
 23708              		.loc 1 11228 18 is_stmt 0 view .LVU6893
 23709 000a 144B     		ldr	r3, .L1650
 23710 000c 1B68     		ldr	r3, [r3]
 23711              		.loc 1 11228 8 view .LVU6894
 23712 000e F3B1     		cbz	r3, .L1646
 23713 0010 0446     		mov	r4, r0
11229:Core/Src/bno055.c ****     {
11230:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11231:Core/Src/bno055.c ****     }
11232:Core/Src/bno055.c ****     else
11233:Core/Src/bno055.c ****     {
11234:Core/Src/bno055.c ****         /*condition check for page, accel range is
11235:Core/Src/bno055.c ****          * available in the page one*/
11236:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 23714              		.loc 1 11236 9 is_stmt 1 view .LVU6895
 23715              		.loc 1 11236 21 is_stmt 0 view .LVU6896
 23716 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 23717              		.loc 1 11236 12 view .LVU6897
 23718 0014 012B     		cmp	r3, #1
 23719 0016 14D1     		bne	.L1649
 23720              	.LVL3072:
 23721              	.L1644:
11237:Core/Src/bno055.c ****         {
11238:Core/Src/bno055.c ****             /* Write page as one */
11239:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11240:Core/Src/bno055.c ****         }
11241:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 23722              		.loc 1 11241 53 discriminator 1 view .LVU6898
 23723 0018 104B     		ldr	r3, .L1650
 23724 001a 1B68     		ldr	r3, [r3]
 23725 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 23726              		.loc 1 11241 41 discriminator 1 view .LVU6899
 23727 001e 012B     		cmp	r3, #1
 23728 0020 18D1     		bne	.L1647
 23729              	.L1645:
11242:Core/Src/bno055.c ****         {
11243:Core/Src/bno055.c ****             /* Read the value of accel g range */
11244:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23730              		.loc 1 11244 13 is_stmt 1 view .LVU6900
 23731              		.loc 1 11244 32 is_stmt 0 view .LVU6901
 23732 0022 0E4B     		ldr	r3, .L1650
 23733 0024 1868     		ldr	r0, [r3]
 23734 0026 0569     		ldr	r5, [r0, #16]
 23735              		.loc 1 11244 24 view .LVU6902
 23736 0028 0123     		movs	r3, #1
 23737 002a 0DF10702 		add	r2, sp, #7
 23738 002e 0821     		movs	r1, #8
 23739 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23740 0032 A847     		blx	r5
 23741              	.LVL3073:
11245:Core/Src/bno055.c ****                                                       BNO055_ACCEL_RANGE_REG,
11246:Core/Src/bno055.c ****                                                       &data_u8r,
ARM GAS  /tmp/ccOloYeZ.s 			page 667


11247:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
11248:Core/Src/bno055.c ****             *accel_range_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_RANGE);
 23742              		.loc 1 11248 13 is_stmt 1 view .LVU6903
 23743              		.loc 1 11248 31 is_stmt 0 view .LVU6904
 23744 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 23745 0038 03F00303 		and	r3, r3, #3
 23746              		.loc 1 11248 29 view .LVU6905
 23747 003c 2370     		strb	r3, [r4]
 23748              	.LVL3074:
 23749              	.L1643:
11249:Core/Src/bno055.c ****         }
11250:Core/Src/bno055.c ****         else
11251:Core/Src/bno055.c ****         {
11252:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11253:Core/Src/bno055.c ****         }
11254:Core/Src/bno055.c ****     }
11255:Core/Src/bno055.c **** 
11256:Core/Src/bno055.c ****     return com_rslt;
11257:Core/Src/bno055.c **** }
 23750              		.loc 1 11257 1 view .LVU6906
 23751 003e 03B0     		add	sp, sp, #12
 23752              		.cfi_remember_state
 23753              		.cfi_def_cfa_offset 12
 23754              		@ sp needed
 23755 0040 30BD     		pop	{r4, r5, pc}
 23756              	.LVL3075:
 23757              	.L1649:
 23758              		.cfi_restore_state
11239:Core/Src/bno055.c ****         }
 23759              		.loc 1 11239 13 is_stmt 1 view .LVU6907
11239:Core/Src/bno055.c ****         }
 23760              		.loc 1 11239 23 is_stmt 0 view .LVU6908
 23761 0042 0120     		movs	r0, #1
 23762              	.LVL3076:
11239:Core/Src/bno055.c ****         }
 23763              		.loc 1 11239 23 view .LVU6909
 23764 0044 FFF7FEFF 		bl	bno055_write_page_id
 23765              	.LVL3077:
11241:Core/Src/bno055.c ****         {
 23766              		.loc 1 11241 9 is_stmt 1 view .LVU6910
11241:Core/Src/bno055.c ****         {
 23767              		.loc 1 11241 12 is_stmt 0 view .LVU6911
 23768 0048 0028     		cmp	r0, #0
 23769 004a EAD0     		beq	.L1645
 23770 004c E4E7     		b	.L1644
 23771              	.LVL3078:
 23772              	.L1646:
11230:Core/Src/bno055.c ****     }
 23773              		.loc 1 11230 16 view .LVU6912
 23774 004e 6FF07E00 		mvn	r0, #126
 23775              	.LVL3079:
11230:Core/Src/bno055.c ****     }
 23776              		.loc 1 11230 16 view .LVU6913
 23777 0052 F4E7     		b	.L1643
 23778              	.LVL3080:
 23779              	.L1647:
11252:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 668


 23780              		.loc 1 11252 22 view .LVU6914
 23781 0054 4FF0FF30 		mov	r0, #-1
 23782 0058 F1E7     		b	.L1643
 23783              	.L1651:
 23784 005a 00BF     		.align	2
 23785              	.L1650:
 23786 005c 00000000 		.word	p_bno055
 23787              		.cfi_endproc
 23788              	.LFE175:
 23790              		.section	.text.bno055_set_accel_range,"ax",%progbits
 23791              		.align	1
 23792              		.global	bno055_set_accel_range
 23793              		.syntax unified
 23794              		.thumb
 23795              		.thumb_func
 23797              	bno055_set_accel_range:
 23798              	.LVL3081:
 23799              	.LFB176:
11258:Core/Src/bno055.c **** 
11259:Core/Src/bno055.c **** /*!
11260:Core/Src/bno055.c ****  *  @brief This API used to write the accel range
11261:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 0 and 1
11262:Core/Src/bno055.c ****  *
11263:Core/Src/bno055.c ****  *  @param accel_range_u8 : The value of accel range
11264:Core/Src/bno055.c ****  *
11265:Core/Src/bno055.c ****  *        accel_range_u8 |   result
11266:Core/Src/bno055.c ****  *       ----------------- | --------------
11267:Core/Src/bno055.c ****  *              0x00       | BNO055_ACCEL_RANGE_2G
11268:Core/Src/bno055.c ****  *              0x01       | BNO055_ACCEL_RANGE_4G
11269:Core/Src/bno055.c ****  *              0x02       | BNO055_ACCEL_RANGE_8G
11270:Core/Src/bno055.c ****  *              0x03       | BNO055_ACCEL_RANGE_16G
11271:Core/Src/bno055.c ****  *
11272:Core/Src/bno055.c ****  *  @return results of bus communication function
11273:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11274:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11275:Core/Src/bno055.c ****  *
11276:Core/Src/bno055.c ****  *
11277:Core/Src/bno055.c ****  */
11278:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_range(u8 accel_range_u8)
11279:Core/Src/bno055.c **** {
 23800              		.loc 1 11279 1 is_stmt 1 view -0
 23801              		.cfi_startproc
 23802              		@ args = 0, pretend = 0, frame = 8
 23803              		@ frame_needed = 0, uses_anonymous_args = 0
 23804              		.loc 1 11279 1 is_stmt 0 view .LVU6916
 23805 0000 30B5     		push	{r4, r5, lr}
 23806              		.cfi_def_cfa_offset 12
 23807              		.cfi_offset 4, -12
 23808              		.cfi_offset 5, -8
 23809              		.cfi_offset 14, -4
 23810 0002 83B0     		sub	sp, sp, #12
 23811              		.cfi_def_cfa_offset 24
11280:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 23812              		.loc 1 11280 5 is_stmt 1 view .LVU6917
 23813              	.LVL3082:
11281:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 23814              		.loc 1 11281 5 view .LVU6918
ARM GAS  /tmp/ccOloYeZ.s 			page 669


 23815              		.loc 1 11281 8 is_stmt 0 view .LVU6919
 23816 0004 0023     		movs	r3, #0
 23817 0006 8DF80730 		strb	r3, [sp, #7]
11282:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 23818              		.loc 1 11282 5 is_stmt 1 view .LVU6920
 23819              	.LVL3083:
11283:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 23820              		.loc 1 11283 5 view .LVU6921
 23821              		.loc 1 11283 8 is_stmt 0 view .LVU6922
 23822 000a 8DF80630 		strb	r3, [sp, #6]
11284:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 23823              		.loc 1 11284 5 is_stmt 1 view .LVU6923
 23824              	.LVL3084:
11285:Core/Src/bno055.c **** 
11286:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11287:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 23825              		.loc 1 11287 5 view .LVU6924
 23826              		.loc 1 11287 18 is_stmt 0 view .LVU6925
 23827 000e 2B4B     		ldr	r3, .L1665
 23828 0010 1B68     		ldr	r3, [r3]
 23829              		.loc 1 11287 8 view .LVU6926
 23830 0012 002B     		cmp	r3, #0
 23831 0014 4ED0     		beq	.L1656
 23832 0016 0546     		mov	r5, r0
11288:Core/Src/bno055.c ****     {
11289:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11290:Core/Src/bno055.c ****     }
11291:Core/Src/bno055.c ****     else
11292:Core/Src/bno055.c ****     {
11293:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11294:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11295:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11296:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 23833              		.loc 1 11296 9 is_stmt 1 view .LVU6927
 23834              		.loc 1 11296 19 is_stmt 0 view .LVU6928
 23835 0018 0DF10600 		add	r0, sp, #6
 23836              	.LVL3085:
 23837              		.loc 1 11296 19 view .LVU6929
 23838 001c FFF7FEFF 		bl	bno055_get_operation_mode
 23839              	.LVL3086:
11297:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 23840              		.loc 1 11297 9 is_stmt 1 view .LVU6930
 23841              		.loc 1 11297 12 is_stmt 0 view .LVU6931
 23842 0020 0446     		mov	r4, r0
 23843 0022 98BB     		cbnz	r0, .L1657
11298:Core/Src/bno055.c ****         {
11299:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 23844              		.loc 1 11299 13 is_stmt 1 view .LVU6932
 23845              		.loc 1 11299 32 is_stmt 0 view .LVU6933
 23846 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 23847              		.loc 1 11299 16 view .LVU6934
 23848 0028 1BB9     		cbnz	r3, .L1662
 23849              	.LVL3087:
 23850              	.L1655:
11300:Core/Src/bno055.c ****             {
11301:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11302:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccOloYeZ.s 			page 670


11303:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 23851              		.loc 1 11303 13 is_stmt 1 view .LVU6935
 23852              		.loc 1 11303 16 is_stmt 0 view .LVU6936
 23853 002a 44B1     		cbz	r4, .L1663
11304:Core/Src/bno055.c ****             {
11305:Core/Src/bno055.c ****                 /* Write page as one */
11306:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11307:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11308:Core/Src/bno055.c ****                 {
11309:Core/Src/bno055.c ****                     if (accel_range_u8 < BNO055_ACCEL_RANGE)
11310:Core/Src/bno055.c ****                     {
11311:Core/Src/bno055.c ****                         /* Write the value of accel range*/
11312:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11313:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
11314:Core/Src/bno055.c ****                                                                   &data_u8r,
11315:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11316:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11317:Core/Src/bno055.c ****                         {
11318:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_RANGE, accel_rang
11319:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11320:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
11321:Core/Src/bno055.c ****                                                                         &data_u8r,
11322:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11323:Core/Src/bno055.c ****                         }
11324:Core/Src/bno055.c ****                     }
11325:Core/Src/bno055.c ****                     else
11326:Core/Src/bno055.c ****                     {
11327:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11328:Core/Src/bno055.c ****                     }
11329:Core/Src/bno055.c ****                 }
11330:Core/Src/bno055.c ****                 else
11331:Core/Src/bno055.c ****                 {
11332:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11333:Core/Src/bno055.c ****                 }
11334:Core/Src/bno055.c ****             }
11335:Core/Src/bno055.c ****             else
11336:Core/Src/bno055.c ****             {
11337:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 23854              		.loc 1 11337 26 view .LVU6937
 23855 002c 4FF0FF34 		mov	r4, #-1
 23856              	.LVL3088:
 23857              		.loc 1 11337 26 view .LVU6938
 23858 0030 2EE0     		b	.L1654
 23859              	.LVL3089:
 23860              	.L1662:
11301:Core/Src/bno055.c ****             }
 23861              		.loc 1 11301 17 is_stmt 1 view .LVU6939
11301:Core/Src/bno055.c ****             }
 23862              		.loc 1 11301 28 is_stmt 0 view .LVU6940
 23863 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 23864              	.LVL3090:
11301:Core/Src/bno055.c ****             }
 23865              		.loc 1 11301 25 view .LVU6941
 23866 0036 54FA80F4 		uxtab	r4, r4, r0
 23867 003a 64B2     		sxtb	r4, r4
 23868              	.LVL3091:
11301:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccOloYeZ.s 			page 671


 23869              		.loc 1 11301 25 view .LVU6942
 23870 003c F5E7     		b	.L1655
 23871              	.L1663:
11306:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 23872              		.loc 1 11306 17 is_stmt 1 view .LVU6943
11306:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 23873              		.loc 1 11306 30 is_stmt 0 view .LVU6944
 23874 003e 0120     		movs	r0, #1
 23875 0040 FFF7FEFF 		bl	bno055_write_page_id
 23876              	.LVL3092:
11307:Core/Src/bno055.c ****                 {
 23877              		.loc 1 11307 17 is_stmt 1 view .LVU6945
11307:Core/Src/bno055.c ****                 {
 23878              		.loc 1 11307 20 is_stmt 0 view .LVU6946
 23879 0044 50BB     		cbnz	r0, .L1659
11309:Core/Src/bno055.c ****                     {
 23880              		.loc 1 11309 21 is_stmt 1 view .LVU6947
11309:Core/Src/bno055.c ****                     {
 23881              		.loc 1 11309 24 is_stmt 0 view .LVU6948
 23882 0046 042D     		cmp	r5, #4
 23883 0048 2BD8     		bhi	.L1660
11312:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
 23884              		.loc 1 11312 25 is_stmt 1 view .LVU6949
11312:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
 23885              		.loc 1 11312 44 is_stmt 0 view .LVU6950
 23886 004a 1C4B     		ldr	r3, .L1665
 23887 004c 1868     		ldr	r0, [r3]
 23888              	.LVL3093:
11312:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
 23889              		.loc 1 11312 44 view .LVU6951
 23890 004e 0469     		ldr	r4, [r0, #16]
 23891              	.LVL3094:
11312:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
 23892              		.loc 1 11312 36 view .LVU6952
 23893 0050 0123     		movs	r3, #1
 23894 0052 0DF10702 		add	r2, sp, #7
 23895 0056 0821     		movs	r1, #8
 23896 0058 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23897 005a A047     		blx	r4
 23898              	.LVL3095:
11316:Core/Src/bno055.c ****                         {
 23899              		.loc 1 11316 25 is_stmt 1 view .LVU6953
11316:Core/Src/bno055.c ****                         {
 23900              		.loc 1 11316 28 is_stmt 0 view .LVU6954
 23901 005c 0446     		mov	r4, r0
 23902 005e B8B9     		cbnz	r0, .L1654
11318:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23903              		.loc 1 11318 29 is_stmt 1 view .LVU6955
11318:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23904              		.loc 1 11318 40 is_stmt 0 view .LVU6956
 23905 0060 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
11318:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23906              		.loc 1 11318 38 view .LVU6957
 23907 0064 23F00303 		bic	r3, r3, #3
 23908 0068 05F00300 		and	r0, r5, #3
 23909              	.LVL3096:
11318:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccOloYeZ.s 			page 672


 23910              		.loc 1 11318 38 view .LVU6958
 23911 006c 0343     		orrs	r3, r3, r0
 23912 006e 8DF80730 		strb	r3, [sp, #7]
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
 23913              		.loc 1 11319 29 is_stmt 1 view .LVU6959
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
 23914              		.loc 1 11319 49 is_stmt 0 view .LVU6960
 23915 0072 124B     		ldr	r3, .L1665
 23916 0074 1868     		ldr	r0, [r3]
 23917 0076 C568     		ldr	r5, [r0, #12]
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
 23918              		.loc 1 11319 41 view .LVU6961
 23919 0078 0123     		movs	r3, #1
 23920 007a 0DF10702 		add	r2, sp, #7
 23921 007e 0821     		movs	r1, #8
 23922 0080 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23923 0082 A847     		blx	r5
 23924              	.LVL3097:
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
 23925              		.loc 1 11319 38 view .LVU6962
 23926 0084 54FA80F0 		uxtab	r0, r4, r0
 23927 0088 44B2     		sxtb	r4, r0
 23928              	.LVL3098:
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
 23929              		.loc 1 11319 38 view .LVU6963
 23930 008a 01E0     		b	.L1654
 23931              	.LVL3099:
 23932              	.L1657:
11338:Core/Src/bno055.c ****             }
11339:Core/Src/bno055.c ****         }
11340:Core/Src/bno055.c ****         else
11341:Core/Src/bno055.c ****         {
11342:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 23933              		.loc 1 11342 22 view .LVU6964
 23934 008c 4FF0FF34 		mov	r4, #-1
 23935              	.LVL3100:
 23936              	.L1654:
11343:Core/Src/bno055.c ****         }
11344:Core/Src/bno055.c ****     }
11345:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 23937              		.loc 1 11345 5 is_stmt 1 view .LVU6965
 23938              		.loc 1 11345 24 is_stmt 0 view .LVU6966
 23939 0090 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 23940              		.loc 1 11345 8 view .LVU6967
 23941 0094 40B9     		cbnz	r0, .L1664
 23942              	.LVL3101:
 23943              	.L1653:
11346:Core/Src/bno055.c ****     {
11347:Core/Src/bno055.c ****         /* set the operation mode of
11348:Core/Src/bno055.c ****          * previous operation mode*/
11349:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11350:Core/Src/bno055.c ****     }
11351:Core/Src/bno055.c **** 
11352:Core/Src/bno055.c ****     return com_rslt;
11353:Core/Src/bno055.c **** }
 23944              		.loc 1 11353 1 view .LVU6968
 23945 0096 2046     		mov	r0, r4
ARM GAS  /tmp/ccOloYeZ.s 			page 673


 23946 0098 03B0     		add	sp, sp, #12
 23947              		.cfi_remember_state
 23948              		.cfi_def_cfa_offset 12
 23949              		@ sp needed
 23950 009a 30BD     		pop	{r4, r5, pc}
 23951              	.LVL3102:
 23952              	.L1659:
 23953              		.cfi_restore_state
11332:Core/Src/bno055.c ****                 }
 23954              		.loc 1 11332 30 view .LVU6969
 23955 009c 4FF0FF34 		mov	r4, #-1
 23956              	.LVL3103:
11332:Core/Src/bno055.c ****                 }
 23957              		.loc 1 11332 30 view .LVU6970
 23958 00a0 F6E7     		b	.L1654
 23959              	.LVL3104:
 23960              	.L1660:
11327:Core/Src/bno055.c ****                     }
 23961              		.loc 1 11327 34 view .LVU6971
 23962 00a2 6FF00104 		mvn	r4, #1
 23963              	.LVL3105:
11327:Core/Src/bno055.c ****                     }
 23964              		.loc 1 11327 34 view .LVU6972
 23965 00a6 F3E7     		b	.L1654
 23966              	.LVL3106:
 23967              	.L1664:
11349:Core/Src/bno055.c ****     }
 23968              		.loc 1 11349 9 is_stmt 1 view .LVU6973
11349:Core/Src/bno055.c ****     }
 23969              		.loc 1 11349 21 is_stmt 0 view .LVU6974
 23970 00a8 FFF7FEFF 		bl	bno055_set_operation_mode
 23971              	.LVL3107:
11349:Core/Src/bno055.c ****     }
 23972              		.loc 1 11349 18 view .LVU6975
 23973 00ac 54FA80F0 		uxtab	r0, r4, r0
 23974 00b0 44B2     		sxtb	r4, r0
 23975              	.LVL3108:
11349:Core/Src/bno055.c ****     }
 23976              		.loc 1 11349 18 view .LVU6976
 23977 00b2 F0E7     		b	.L1653
 23978              	.LVL3109:
 23979              	.L1656:
11289:Core/Src/bno055.c ****     }
 23980              		.loc 1 11289 16 view .LVU6977
 23981 00b4 6FF07E04 		mvn	r4, #126
 23982 00b8 EDE7     		b	.L1653
 23983              	.L1666:
 23984 00ba 00BF     		.align	2
 23985              	.L1665:
 23986 00bc 00000000 		.word	p_bno055
 23987              		.cfi_endproc
 23988              	.LFE176:
 23990              		.section	.text.bno055_get_accel_bw,"ax",%progbits
 23991              		.align	1
 23992              		.global	bno055_get_accel_bw
 23993              		.syntax unified
 23994              		.thumb
ARM GAS  /tmp/ccOloYeZ.s 			page 674


 23995              		.thumb_func
 23997              	bno055_get_accel_bw:
 23998              	.LVL3110:
 23999              	.LFB177:
11354:Core/Src/bno055.c **** 
11355:Core/Src/bno055.c **** /*!
11356:Core/Src/bno055.c ****  *  @brief This API used to read the accel bandwidth
11357:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 2 to 4
11358:Core/Src/bno055.c ****  *
11359:Core/Src/bno055.c ****  *  @param accel_bw_u8 : The value of accel bandwidth
11360:Core/Src/bno055.c ****  *
11361:Core/Src/bno055.c ****  *           accel_bw_u8 |     result
11362:Core/Src/bno055.c ****  *       ----------------- | ---------------
11363:Core/Src/bno055.c ****  *              0x00       | BNO055_ACCEL_BW_7_81HZ
11364:Core/Src/bno055.c ****  *              0x01       | BNO055_ACCEL_BW_15_63HZ
11365:Core/Src/bno055.c ****  *              0x02       | BNO055_ACCEL_BW_31_25HZ
11366:Core/Src/bno055.c ****  *              0x03       | BNO055_ACCEL_BW_62_5HZ
11367:Core/Src/bno055.c ****  *              0x04       | BNO055_ACCEL_BW_125HZ
11368:Core/Src/bno055.c ****  *              0x05       | BNO055_ACCEL_BW_250HZ
11369:Core/Src/bno055.c ****  *              0x06       | BNO055_ACCEL_BW_500HZ
11370:Core/Src/bno055.c ****  *              0x07       | BNO055_ACCEL_BW_1000HZ
11371:Core/Src/bno055.c ****  *
11372:Core/Src/bno055.c ****  *  @return results of bus communication function
11373:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11374:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11375:Core/Src/bno055.c ****  *
11376:Core/Src/bno055.c ****  *
11377:Core/Src/bno055.c ****  */
11378:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_bw(u8 *accel_bw_u8)
11379:Core/Src/bno055.c **** {
 24000              		.loc 1 11379 1 is_stmt 1 view -0
 24001              		.cfi_startproc
 24002              		@ args = 0, pretend = 0, frame = 8
 24003              		@ frame_needed = 0, uses_anonymous_args = 0
 24004              		.loc 1 11379 1 is_stmt 0 view .LVU6979
 24005 0000 30B5     		push	{r4, r5, lr}
 24006              		.cfi_def_cfa_offset 12
 24007              		.cfi_offset 4, -12
 24008              		.cfi_offset 5, -8
 24009              		.cfi_offset 14, -4
 24010 0002 83B0     		sub	sp, sp, #12
 24011              		.cfi_def_cfa_offset 24
11380:Core/Src/bno055.c ****     /* Variable used to return value of
11381:Core/Src/bno055.c ****      * communication routine*/
11382:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24012              		.loc 1 11382 5 is_stmt 1 view .LVU6980
 24013              	.LVL3111:
11383:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 24014              		.loc 1 11383 5 view .LVU6981
 24015              		.loc 1 11383 8 is_stmt 0 view .LVU6982
 24016 0004 0023     		movs	r3, #0
 24017 0006 8DF80730 		strb	r3, [sp, #7]
11384:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24018              		.loc 1 11384 5 is_stmt 1 view .LVU6983
 24019              	.LVL3112:
11385:Core/Src/bno055.c **** 
11386:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
ARM GAS  /tmp/ccOloYeZ.s 			page 675


11387:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24020              		.loc 1 11387 5 view .LVU6984
 24021              		.loc 1 11387 18 is_stmt 0 view .LVU6985
 24022 000a 144B     		ldr	r3, .L1675
 24023 000c 1B68     		ldr	r3, [r3]
 24024              		.loc 1 11387 8 view .LVU6986
 24025 000e F3B1     		cbz	r3, .L1671
 24026 0010 0446     		mov	r4, r0
11388:Core/Src/bno055.c ****     {
11389:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11390:Core/Src/bno055.c ****     }
11391:Core/Src/bno055.c ****     else
11392:Core/Src/bno055.c ****     {
11393:Core/Src/bno055.c ****         /*condition check for page, accel bandwidth is
11394:Core/Src/bno055.c ****          * available in the page one*/
11395:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 24027              		.loc 1 11395 9 is_stmt 1 view .LVU6987
 24028              		.loc 1 11395 21 is_stmt 0 view .LVU6988
 24029 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24030              		.loc 1 11395 12 view .LVU6989
 24031 0014 012B     		cmp	r3, #1
 24032 0016 14D1     		bne	.L1674
 24033              	.LVL3113:
 24034              	.L1669:
11396:Core/Src/bno055.c ****         {
11397:Core/Src/bno055.c ****             /* Write page as one */
11398:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11399:Core/Src/bno055.c ****         }
11400:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 24035              		.loc 1 11400 53 discriminator 1 view .LVU6990
 24036 0018 104B     		ldr	r3, .L1675
 24037 001a 1B68     		ldr	r3, [r3]
 24038 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24039              		.loc 1 11400 41 discriminator 1 view .LVU6991
 24040 001e 012B     		cmp	r3, #1
 24041 0020 18D1     		bne	.L1672
 24042              	.L1670:
11401:Core/Src/bno055.c ****         {
11402:Core/Src/bno055.c ****             /* Read the value of accel bandwidth */
11403:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24043              		.loc 1 11403 13 is_stmt 1 view .LVU6992
 24044              		.loc 1 11403 32 is_stmt 0 view .LVU6993
 24045 0022 0E4B     		ldr	r3, .L1675
 24046 0024 1868     		ldr	r0, [r3]
 24047 0026 0569     		ldr	r5, [r0, #16]
 24048              		.loc 1 11403 24 view .LVU6994
 24049 0028 0123     		movs	r3, #1
 24050 002a 0DF10702 		add	r2, sp, #7
 24051 002e 0821     		movs	r1, #8
 24052 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24053 0032 A847     		blx	r5
 24054              	.LVL3114:
11404:Core/Src/bno055.c ****                                                       BNO055_ACCEL_BW_REG,
11405:Core/Src/bno055.c ****                                                       &data_u8r,
11406:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
11407:Core/Src/bno055.c ****             *accel_bw_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_BW);
 24055              		.loc 1 11407 13 is_stmt 1 view .LVU6995
ARM GAS  /tmp/ccOloYeZ.s 			page 676


 24056              		.loc 1 11407 28 is_stmt 0 view .LVU6996
 24057 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 24058 0038 C3F38203 		ubfx	r3, r3, #2, #3
 24059              		.loc 1 11407 26 view .LVU6997
 24060 003c 2370     		strb	r3, [r4]
 24061              	.LVL3115:
 24062              	.L1668:
11408:Core/Src/bno055.c ****         }
11409:Core/Src/bno055.c ****         else
11410:Core/Src/bno055.c ****         {
11411:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11412:Core/Src/bno055.c ****         }
11413:Core/Src/bno055.c ****     }
11414:Core/Src/bno055.c **** 
11415:Core/Src/bno055.c ****     return com_rslt;
11416:Core/Src/bno055.c **** }
 24063              		.loc 1 11416 1 view .LVU6998
 24064 003e 03B0     		add	sp, sp, #12
 24065              		.cfi_remember_state
 24066              		.cfi_def_cfa_offset 12
 24067              		@ sp needed
 24068 0040 30BD     		pop	{r4, r5, pc}
 24069              	.LVL3116:
 24070              	.L1674:
 24071              		.cfi_restore_state
11398:Core/Src/bno055.c ****         }
 24072              		.loc 1 11398 13 is_stmt 1 view .LVU6999
11398:Core/Src/bno055.c ****         }
 24073              		.loc 1 11398 23 is_stmt 0 view .LVU7000
 24074 0042 0120     		movs	r0, #1
 24075              	.LVL3117:
11398:Core/Src/bno055.c ****         }
 24076              		.loc 1 11398 23 view .LVU7001
 24077 0044 FFF7FEFF 		bl	bno055_write_page_id
 24078              	.LVL3118:
11400:Core/Src/bno055.c ****         {
 24079              		.loc 1 11400 9 is_stmt 1 view .LVU7002
11400:Core/Src/bno055.c ****         {
 24080              		.loc 1 11400 12 is_stmt 0 view .LVU7003
 24081 0048 0028     		cmp	r0, #0
 24082 004a EAD0     		beq	.L1670
 24083 004c E4E7     		b	.L1669
 24084              	.LVL3119:
 24085              	.L1671:
11389:Core/Src/bno055.c ****     }
 24086              		.loc 1 11389 16 view .LVU7004
 24087 004e 6FF07E00 		mvn	r0, #126
 24088              	.LVL3120:
11389:Core/Src/bno055.c ****     }
 24089              		.loc 1 11389 16 view .LVU7005
 24090 0052 F4E7     		b	.L1668
 24091              	.LVL3121:
 24092              	.L1672:
11411:Core/Src/bno055.c ****         }
 24093              		.loc 1 11411 22 view .LVU7006
 24094 0054 4FF0FF30 		mov	r0, #-1
 24095 0058 F1E7     		b	.L1668
ARM GAS  /tmp/ccOloYeZ.s 			page 677


 24096              	.L1676:
 24097 005a 00BF     		.align	2
 24098              	.L1675:
 24099 005c 00000000 		.word	p_bno055
 24100              		.cfi_endproc
 24101              	.LFE177:
 24103              		.section	.text.bno055_set_accel_bw,"ax",%progbits
 24104              		.align	1
 24105              		.global	bno055_set_accel_bw
 24106              		.syntax unified
 24107              		.thumb
 24108              		.thumb_func
 24110              	bno055_set_accel_bw:
 24111              	.LVL3122:
 24112              	.LFB178:
11417:Core/Src/bno055.c **** 
11418:Core/Src/bno055.c **** /*!
11419:Core/Src/bno055.c ****  *  @brief This API used to write the accel bandwidth
11420:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 2 to 4
11421:Core/Src/bno055.c ****  *
11422:Core/Src/bno055.c ****  *  @param accel_bw_u8 : The value of accel bandwidth
11423:Core/Src/bno055.c ****  *
11424:Core/Src/bno055.c ****  *           accel_bw_u8 |     result
11425:Core/Src/bno055.c ****  *       ----------------- | ---------------
11426:Core/Src/bno055.c ****  *              0x00       | BNO055_ACCEL_BW_7_81HZ
11427:Core/Src/bno055.c ****  *              0x01       | BNO055_ACCEL_BW_15_63HZ
11428:Core/Src/bno055.c ****  *              0x02       | BNO055_ACCEL_BW_31_25HZ
11429:Core/Src/bno055.c ****  *              0x03       | BNO055_ACCEL_BW_62_5HZ
11430:Core/Src/bno055.c ****  *              0x04       | BNO055_ACCEL_BW_125HZ
11431:Core/Src/bno055.c ****  *              0x05       | BNO055_ACCEL_BW_250HZ
11432:Core/Src/bno055.c ****  *              0x06       | BNO055_ACCEL_BW_500HZ
11433:Core/Src/bno055.c ****  *              0x07       | BNO055_ACCEL_BW_1000HZ
11434:Core/Src/bno055.c ****  *
11435:Core/Src/bno055.c ****  *  @return results of bus communication function
11436:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11437:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11438:Core/Src/bno055.c ****  *
11439:Core/Src/bno055.c ****  *
11440:Core/Src/bno055.c ****  */
11441:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_bw(u8 accel_bw_u8)
11442:Core/Src/bno055.c **** {
 24113              		.loc 1 11442 1 is_stmt 1 view -0
 24114              		.cfi_startproc
 24115              		@ args = 0, pretend = 0, frame = 8
 24116              		@ frame_needed = 0, uses_anonymous_args = 0
 24117              		.loc 1 11442 1 is_stmt 0 view .LVU7008
 24118 0000 30B5     		push	{r4, r5, lr}
 24119              		.cfi_def_cfa_offset 12
 24120              		.cfi_offset 4, -12
 24121              		.cfi_offset 5, -8
 24122              		.cfi_offset 14, -4
 24123 0002 83B0     		sub	sp, sp, #12
 24124              		.cfi_def_cfa_offset 24
11443:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24125              		.loc 1 11443 5 is_stmt 1 view .LVU7009
 24126              	.LVL3123:
11444:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccOloYeZ.s 			page 678


 24127              		.loc 1 11444 5 view .LVU7010
 24128              		.loc 1 11444 8 is_stmt 0 view .LVU7011
 24129 0004 0023     		movs	r3, #0
 24130 0006 8DF80730 		strb	r3, [sp, #7]
11445:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24131              		.loc 1 11445 5 is_stmt 1 view .LVU7012
 24132              	.LVL3124:
11446:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 24133              		.loc 1 11446 5 view .LVU7013
 24134              		.loc 1 11446 8 is_stmt 0 view .LVU7014
 24135 000a 8DF80630 		strb	r3, [sp, #6]
11447:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 24136              		.loc 1 11447 5 is_stmt 1 view .LVU7015
 24137              	.LVL3125:
11448:Core/Src/bno055.c **** 
11449:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11450:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24138              		.loc 1 11450 5 view .LVU7016
 24139              		.loc 1 11450 18 is_stmt 0 view .LVU7017
 24140 000e 2C4B     		ldr	r3, .L1690
 24141 0010 1B68     		ldr	r3, [r3]
 24142              		.loc 1 11450 8 view .LVU7018
 24143 0012 002B     		cmp	r3, #0
 24144 0014 50D0     		beq	.L1681
 24145 0016 0546     		mov	r5, r0
11451:Core/Src/bno055.c ****     {
11452:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11453:Core/Src/bno055.c ****     }
11454:Core/Src/bno055.c ****     else
11455:Core/Src/bno055.c ****     {
11456:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11457:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11458:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11459:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 24146              		.loc 1 11459 9 is_stmt 1 view .LVU7019
 24147              		.loc 1 11459 19 is_stmt 0 view .LVU7020
 24148 0018 0DF10600 		add	r0, sp, #6
 24149              	.LVL3126:
 24150              		.loc 1 11459 19 view .LVU7021
 24151 001c FFF7FEFF 		bl	bno055_get_operation_mode
 24152              	.LVL3127:
11460:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 24153              		.loc 1 11460 9 is_stmt 1 view .LVU7022
 24154              		.loc 1 11460 12 is_stmt 0 view .LVU7023
 24155 0020 0446     		mov	r4, r0
 24156 0022 0028     		cmp	r0, #0
 24157 0024 34D1     		bne	.L1682
11461:Core/Src/bno055.c ****         {
11462:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24158              		.loc 1 11462 13 is_stmt 1 view .LVU7024
 24159              		.loc 1 11462 32 is_stmt 0 view .LVU7025
 24160 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 24161              		.loc 1 11462 16 view .LVU7026
 24162 002a 1BB9     		cbnz	r3, .L1687
 24163              	.LVL3128:
 24164              	.L1680:
11463:Core/Src/bno055.c ****             {
ARM GAS  /tmp/ccOloYeZ.s 			page 679


11464:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11465:Core/Src/bno055.c ****             }
11466:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 24165              		.loc 1 11466 13 is_stmt 1 view .LVU7027
 24166              		.loc 1 11466 16 is_stmt 0 view .LVU7028
 24167 002c 44B1     		cbz	r4, .L1688
11467:Core/Src/bno055.c ****             {
11468:Core/Src/bno055.c ****                 /* Write page as one */
11469:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11470:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11471:Core/Src/bno055.c ****                 {
11472:Core/Src/bno055.c ****                     if (accel_bw_u8 < BNO055_ACCEL_GYRO_BW_RANGE)
11473:Core/Src/bno055.c ****                     {
11474:Core/Src/bno055.c ****                         /* Write the accel */
11475:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11476:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
11477:Core/Src/bno055.c ****                                                                   &data_u8r,
11478:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11479:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11480:Core/Src/bno055.c ****                         {
11481:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_BW, accel_bw_u8);
11482:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11483:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
11484:Core/Src/bno055.c ****                                                                         &data_u8r,
11485:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11486:Core/Src/bno055.c ****                         }
11487:Core/Src/bno055.c ****                     }
11488:Core/Src/bno055.c ****                     else
11489:Core/Src/bno055.c ****                     {
11490:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11491:Core/Src/bno055.c ****                     }
11492:Core/Src/bno055.c ****                 }
11493:Core/Src/bno055.c ****                 else
11494:Core/Src/bno055.c ****                 {
11495:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11496:Core/Src/bno055.c ****                 }
11497:Core/Src/bno055.c ****             }
11498:Core/Src/bno055.c ****             else
11499:Core/Src/bno055.c ****             {
11500:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 24168              		.loc 1 11500 26 view .LVU7029
 24169 002e 4FF0FF34 		mov	r4, #-1
 24170              	.LVL3129:
 24171              		.loc 1 11500 26 view .LVU7030
 24172 0032 2FE0     		b	.L1679
 24173              	.LVL3130:
 24174              	.L1687:
11464:Core/Src/bno055.c ****             }
 24175              		.loc 1 11464 17 is_stmt 1 view .LVU7031
11464:Core/Src/bno055.c ****             }
 24176              		.loc 1 11464 28 is_stmt 0 view .LVU7032
 24177 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 24178              	.LVL3131:
11464:Core/Src/bno055.c ****             }
 24179              		.loc 1 11464 25 view .LVU7033
 24180 0038 54FA80F4 		uxtab	r4, r4, r0
 24181 003c 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccOloYeZ.s 			page 680


 24182              	.LVL3132:
11464:Core/Src/bno055.c ****             }
 24183              		.loc 1 11464 25 view .LVU7034
 24184 003e F5E7     		b	.L1680
 24185              	.L1688:
11469:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 24186              		.loc 1 11469 17 is_stmt 1 view .LVU7035
11469:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 24187              		.loc 1 11469 30 is_stmt 0 view .LVU7036
 24188 0040 0120     		movs	r0, #1
 24189 0042 FFF7FEFF 		bl	bno055_write_page_id
 24190              	.LVL3133:
11470:Core/Src/bno055.c ****                 {
 24191              		.loc 1 11470 17 is_stmt 1 view .LVU7037
11470:Core/Src/bno055.c ****                 {
 24192              		.loc 1 11470 20 is_stmt 0 view .LVU7038
 24193 0046 58BB     		cbnz	r0, .L1684
11472:Core/Src/bno055.c ****                     {
 24194              		.loc 1 11472 21 is_stmt 1 view .LVU7039
11472:Core/Src/bno055.c ****                     {
 24195              		.loc 1 11472 24 is_stmt 0 view .LVU7040
 24196 0048 072D     		cmp	r5, #7
 24197 004a 2CD8     		bhi	.L1685
11475:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
 24198              		.loc 1 11475 25 is_stmt 1 view .LVU7041
11475:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
 24199              		.loc 1 11475 44 is_stmt 0 view .LVU7042
 24200 004c 1C4B     		ldr	r3, .L1690
 24201 004e 1868     		ldr	r0, [r3]
 24202              	.LVL3134:
11475:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
 24203              		.loc 1 11475 44 view .LVU7043
 24204 0050 0469     		ldr	r4, [r0, #16]
 24205              	.LVL3135:
11475:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
 24206              		.loc 1 11475 36 view .LVU7044
 24207 0052 0123     		movs	r3, #1
 24208 0054 0DF10702 		add	r2, sp, #7
 24209 0058 0821     		movs	r1, #8
 24210 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24211 005c A047     		blx	r4
 24212              	.LVL3136:
11479:Core/Src/bno055.c ****                         {
 24213              		.loc 1 11479 25 is_stmt 1 view .LVU7045
11479:Core/Src/bno055.c ****                         {
 24214              		.loc 1 11479 28 is_stmt 0 view .LVU7046
 24215 005e 0446     		mov	r4, r0
 24216 0060 C0B9     		cbnz	r0, .L1679
11481:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24217              		.loc 1 11481 29 is_stmt 1 view .LVU7047
11481:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24218              		.loc 1 11481 40 is_stmt 0 view .LVU7048
 24219 0062 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 24220 0066 A800     		lsls	r0, r5, #2
 24221              	.LVL3137:
11481:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24222              		.loc 1 11481 40 view .LVU7049
ARM GAS  /tmp/ccOloYeZ.s 			page 681


 24223 0068 00F01C00 		and	r0, r0, #28
 24224 006c 23F01C03 		bic	r3, r3, #28
 24225 0070 0343     		orrs	r3, r3, r0
11481:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24226              		.loc 1 11481 38 view .LVU7050
 24227 0072 8DF80730 		strb	r3, [sp, #7]
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 24228              		.loc 1 11482 29 is_stmt 1 view .LVU7051
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 24229              		.loc 1 11482 49 is_stmt 0 view .LVU7052
 24230 0076 124B     		ldr	r3, .L1690
 24231 0078 1868     		ldr	r0, [r3]
 24232 007a C568     		ldr	r5, [r0, #12]
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 24233              		.loc 1 11482 41 view .LVU7053
 24234 007c 0123     		movs	r3, #1
 24235 007e 0DF10702 		add	r2, sp, #7
 24236 0082 0821     		movs	r1, #8
 24237 0084 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24238 0086 A847     		blx	r5
 24239              	.LVL3138:
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 24240              		.loc 1 11482 38 view .LVU7054
 24241 0088 54FA80F0 		uxtab	r0, r4, r0
 24242 008c 44B2     		sxtb	r4, r0
 24243              	.LVL3139:
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 24244              		.loc 1 11482 38 view .LVU7055
 24245 008e 01E0     		b	.L1679
 24246              	.LVL3140:
 24247              	.L1682:
11501:Core/Src/bno055.c ****             }
11502:Core/Src/bno055.c ****         }
11503:Core/Src/bno055.c ****         else
11504:Core/Src/bno055.c ****         {
11505:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 24248              		.loc 1 11505 22 view .LVU7056
 24249 0090 4FF0FF34 		mov	r4, #-1
 24250              	.LVL3141:
 24251              	.L1679:
11506:Core/Src/bno055.c ****         }
11507:Core/Src/bno055.c ****     }
11508:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24252              		.loc 1 11508 5 is_stmt 1 view .LVU7057
 24253              		.loc 1 11508 24 is_stmt 0 view .LVU7058
 24254 0094 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 24255              		.loc 1 11508 8 view .LVU7059
 24256 0098 40B9     		cbnz	r0, .L1689
 24257              	.LVL3142:
 24258              	.L1678:
11509:Core/Src/bno055.c ****     {
11510:Core/Src/bno055.c ****         /* set the operation mode of
11511:Core/Src/bno055.c ****          * previous operation mode*/
11512:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11513:Core/Src/bno055.c ****     }
11514:Core/Src/bno055.c **** 
11515:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/ccOloYeZ.s 			page 682


11516:Core/Src/bno055.c **** }
 24259              		.loc 1 11516 1 view .LVU7060
 24260 009a 2046     		mov	r0, r4
 24261 009c 03B0     		add	sp, sp, #12
 24262              		.cfi_remember_state
 24263              		.cfi_def_cfa_offset 12
 24264              		@ sp needed
 24265 009e 30BD     		pop	{r4, r5, pc}
 24266              	.LVL3143:
 24267              	.L1684:
 24268              		.cfi_restore_state
11495:Core/Src/bno055.c ****                 }
 24269              		.loc 1 11495 30 view .LVU7061
 24270 00a0 4FF0FF34 		mov	r4, #-1
 24271              	.LVL3144:
11495:Core/Src/bno055.c ****                 }
 24272              		.loc 1 11495 30 view .LVU7062
 24273 00a4 F6E7     		b	.L1679
 24274              	.LVL3145:
 24275              	.L1685:
11490:Core/Src/bno055.c ****                     }
 24276              		.loc 1 11490 34 view .LVU7063
 24277 00a6 6FF00104 		mvn	r4, #1
 24278              	.LVL3146:
11490:Core/Src/bno055.c ****                     }
 24279              		.loc 1 11490 34 view .LVU7064
 24280 00aa F3E7     		b	.L1679
 24281              	.LVL3147:
 24282              	.L1689:
11512:Core/Src/bno055.c ****     }
 24283              		.loc 1 11512 9 is_stmt 1 view .LVU7065
11512:Core/Src/bno055.c ****     }
 24284              		.loc 1 11512 21 is_stmt 0 view .LVU7066
 24285 00ac FFF7FEFF 		bl	bno055_set_operation_mode
 24286              	.LVL3148:
11512:Core/Src/bno055.c ****     }
 24287              		.loc 1 11512 18 view .LVU7067
 24288 00b0 54FA80F0 		uxtab	r0, r4, r0
 24289 00b4 44B2     		sxtb	r4, r0
 24290              	.LVL3149:
11512:Core/Src/bno055.c ****     }
 24291              		.loc 1 11512 18 view .LVU7068
 24292 00b6 F0E7     		b	.L1678
 24293              	.LVL3150:
 24294              	.L1681:
11452:Core/Src/bno055.c ****     }
 24295              		.loc 1 11452 16 view .LVU7069
 24296 00b8 6FF07E04 		mvn	r4, #126
 24297 00bc EDE7     		b	.L1678
 24298              	.L1691:
 24299 00be 00BF     		.align	2
 24300              	.L1690:
 24301 00c0 00000000 		.word	p_bno055
 24302              		.cfi_endproc
 24303              	.LFE178:
 24305              		.section	.text.bno055_get_accel_power_mode,"ax",%progbits
 24306              		.align	1
ARM GAS  /tmp/ccOloYeZ.s 			page 683


 24307              		.global	bno055_get_accel_power_mode
 24308              		.syntax unified
 24309              		.thumb
 24310              		.thumb_func
 24312              	bno055_get_accel_power_mode:
 24313              	.LVL3151:
 24314              	.LFB179:
11517:Core/Src/bno055.c **** 
11518:Core/Src/bno055.c **** /*!
11519:Core/Src/bno055.c ****  *  @brief This API used to read the accel power mode
11520:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 5 to 7
11521:Core/Src/bno055.c ****  *
11522:Core/Src/bno055.c ****  *  @param accel_power_mode_u8 : The value of accel power mode
11523:Core/Src/bno055.c ****  * accel_power_mode_u8 |   result
11524:Core/Src/bno055.c ****  *   -----------------   | -------------
11525:Core/Src/bno055.c ****  *              0x00     | BNO055_ACCEL_NORMAL
11526:Core/Src/bno055.c ****  *              0x01     | BNO055_ACCEL_SUSPEND
11527:Core/Src/bno055.c ****  *              0x02     | BNO055_ACCEL_LOWPOWER_1
11528:Core/Src/bno055.c ****  *              0x03     | BNO055_ACCEL_STANDBY
11529:Core/Src/bno055.c ****  *              0x04     | BNO055_ACCEL_LOWPOWER_2
11530:Core/Src/bno055.c ****  *              0x05     | BNO055_ACCEL_DEEPSUSPEND
11531:Core/Src/bno055.c ****  *
11532:Core/Src/bno055.c ****  *  @return results of bus communication function
11533:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11534:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11535:Core/Src/bno055.c ****  *
11536:Core/Src/bno055.c ****  *
11537:Core/Src/bno055.c ****  */
11538:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_power_mode(u8 *accel_power_mode_u8)
11539:Core/Src/bno055.c **** {
 24315              		.loc 1 11539 1 is_stmt 1 view -0
 24316              		.cfi_startproc
 24317              		@ args = 0, pretend = 0, frame = 8
 24318              		@ frame_needed = 0, uses_anonymous_args = 0
 24319              		.loc 1 11539 1 is_stmt 0 view .LVU7071
 24320 0000 30B5     		push	{r4, r5, lr}
 24321              		.cfi_def_cfa_offset 12
 24322              		.cfi_offset 4, -12
 24323              		.cfi_offset 5, -8
 24324              		.cfi_offset 14, -4
 24325 0002 83B0     		sub	sp, sp, #12
 24326              		.cfi_def_cfa_offset 24
11540:Core/Src/bno055.c ****     /* Variable used to return value of
11541:Core/Src/bno055.c ****      * communication routine*/
11542:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24327              		.loc 1 11542 5 is_stmt 1 view .LVU7072
 24328              	.LVL3152:
11543:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 24329              		.loc 1 11543 5 view .LVU7073
 24330              		.loc 1 11543 8 is_stmt 0 view .LVU7074
 24331 0004 0023     		movs	r3, #0
 24332 0006 8DF80730 		strb	r3, [sp, #7]
11544:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24333              		.loc 1 11544 5 is_stmt 1 view .LVU7075
 24334              	.LVL3153:
11545:Core/Src/bno055.c **** 
11546:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
ARM GAS  /tmp/ccOloYeZ.s 			page 684


11547:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24335              		.loc 1 11547 5 view .LVU7076
 24336              		.loc 1 11547 18 is_stmt 0 view .LVU7077
 24337 000a 134B     		ldr	r3, .L1700
 24338 000c 1B68     		ldr	r3, [r3]
 24339              		.loc 1 11547 8 view .LVU7078
 24340 000e EBB1     		cbz	r3, .L1696
 24341 0010 0446     		mov	r4, r0
11548:Core/Src/bno055.c ****     {
11549:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11550:Core/Src/bno055.c ****     }
11551:Core/Src/bno055.c ****     else
11552:Core/Src/bno055.c ****     {
11553:Core/Src/bno055.c ****         /*condition check for page, accel power mode is
11554:Core/Src/bno055.c ****          * available in the page one*/
11555:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 24342              		.loc 1 11555 9 is_stmt 1 view .LVU7079
 24343              		.loc 1 11555 21 is_stmt 0 view .LVU7080
 24344 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24345              		.loc 1 11555 12 view .LVU7081
 24346 0014 012B     		cmp	r3, #1
 24347 0016 13D1     		bne	.L1699
 24348              	.LVL3154:
 24349              	.L1694:
11556:Core/Src/bno055.c ****         {
11557:Core/Src/bno055.c ****             /* Write page as one */
11558:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11559:Core/Src/bno055.c ****         }
11560:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 24350              		.loc 1 11560 53 discriminator 1 view .LVU7082
 24351 0018 0F4B     		ldr	r3, .L1700
 24352 001a 1B68     		ldr	r3, [r3]
 24353 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24354              		.loc 1 11560 41 discriminator 1 view .LVU7083
 24355 001e 012B     		cmp	r3, #1
 24356 0020 17D1     		bne	.L1697
 24357              	.L1695:
11561:Core/Src/bno055.c ****         {
11562:Core/Src/bno055.c ****             /* Read the value of accel bandwidth */
11563:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24358              		.loc 1 11563 13 is_stmt 1 view .LVU7084
 24359              		.loc 1 11563 32 is_stmt 0 view .LVU7085
 24360 0022 0D4B     		ldr	r3, .L1700
 24361 0024 1868     		ldr	r0, [r3]
 24362 0026 0569     		ldr	r5, [r0, #16]
 24363              		.loc 1 11563 24 view .LVU7086
 24364 0028 0123     		movs	r3, #1
 24365 002a 0DF10702 		add	r2, sp, #7
 24366 002e 0821     		movs	r1, #8
 24367 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24368 0032 A847     		blx	r5
 24369              	.LVL3155:
11564:Core/Src/bno055.c ****                                                       BNO055_ACCEL_POWER_MODE_REG,
11565:Core/Src/bno055.c ****                                                       &data_u8r,
11566:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
11567:Core/Src/bno055.c ****             *accel_power_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_POWER_MODE);
 24370              		.loc 1 11567 13 is_stmt 1 view .LVU7087
ARM GAS  /tmp/ccOloYeZ.s 			page 685


 24371              		.loc 1 11567 36 is_stmt 0 view .LVU7088
 24372 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 24373 0038 5B09     		lsrs	r3, r3, #5
 24374              		.loc 1 11567 34 view .LVU7089
 24375 003a 2370     		strb	r3, [r4]
 24376              	.LVL3156:
 24377              	.L1693:
11568:Core/Src/bno055.c ****         }
11569:Core/Src/bno055.c ****         else
11570:Core/Src/bno055.c ****         {
11571:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11572:Core/Src/bno055.c ****         }
11573:Core/Src/bno055.c ****     }
11574:Core/Src/bno055.c **** 
11575:Core/Src/bno055.c ****     return com_rslt;
11576:Core/Src/bno055.c **** }
 24378              		.loc 1 11576 1 view .LVU7090
 24379 003c 03B0     		add	sp, sp, #12
 24380              		.cfi_remember_state
 24381              		.cfi_def_cfa_offset 12
 24382              		@ sp needed
 24383 003e 30BD     		pop	{r4, r5, pc}
 24384              	.LVL3157:
 24385              	.L1699:
 24386              		.cfi_restore_state
11558:Core/Src/bno055.c ****         }
 24387              		.loc 1 11558 13 is_stmt 1 view .LVU7091
11558:Core/Src/bno055.c ****         }
 24388              		.loc 1 11558 23 is_stmt 0 view .LVU7092
 24389 0040 0120     		movs	r0, #1
 24390              	.LVL3158:
11558:Core/Src/bno055.c ****         }
 24391              		.loc 1 11558 23 view .LVU7093
 24392 0042 FFF7FEFF 		bl	bno055_write_page_id
 24393              	.LVL3159:
11560:Core/Src/bno055.c ****         {
 24394              		.loc 1 11560 9 is_stmt 1 view .LVU7094
11560:Core/Src/bno055.c ****         {
 24395              		.loc 1 11560 12 is_stmt 0 view .LVU7095
 24396 0046 0028     		cmp	r0, #0
 24397 0048 EBD0     		beq	.L1695
 24398 004a E5E7     		b	.L1694
 24399              	.LVL3160:
 24400              	.L1696:
11549:Core/Src/bno055.c ****     }
 24401              		.loc 1 11549 16 view .LVU7096
 24402 004c 6FF07E00 		mvn	r0, #126
 24403              	.LVL3161:
11549:Core/Src/bno055.c ****     }
 24404              		.loc 1 11549 16 view .LVU7097
 24405 0050 F4E7     		b	.L1693
 24406              	.LVL3162:
 24407              	.L1697:
11571:Core/Src/bno055.c ****         }
 24408              		.loc 1 11571 22 view .LVU7098
 24409 0052 4FF0FF30 		mov	r0, #-1
 24410 0056 F1E7     		b	.L1693
ARM GAS  /tmp/ccOloYeZ.s 			page 686


 24411              	.L1701:
 24412              		.align	2
 24413              	.L1700:
 24414 0058 00000000 		.word	p_bno055
 24415              		.cfi_endproc
 24416              	.LFE179:
 24418              		.section	.text.bno055_set_accel_power_mode,"ax",%progbits
 24419              		.align	1
 24420              		.global	bno055_set_accel_power_mode
 24421              		.syntax unified
 24422              		.thumb
 24423              		.thumb_func
 24425              	bno055_set_accel_power_mode:
 24426              	.LVL3163:
 24427              	.LFB180:
11577:Core/Src/bno055.c **** 
11578:Core/Src/bno055.c **** /*!
11579:Core/Src/bno055.c ****  *  @brief This API used to write the accel power mode
11580:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 5 to 7
11581:Core/Src/bno055.c ****  *
11582:Core/Src/bno055.c ****  *  @param accel_power_mode_u8 : The value of accel power mode
11583:Core/Src/bno055.c ****  * accel_power_mode_u8 |   result
11584:Core/Src/bno055.c ****  *   -----------------   | -------------
11585:Core/Src/bno055.c ****  *              0x00     | BNO055_ACCEL_NORMAL
11586:Core/Src/bno055.c ****  *              0x01     | BNO055_ACCEL_SUSPEND
11587:Core/Src/bno055.c ****  *              0x02     | BNO055_ACCEL_LOWPOWER_1
11588:Core/Src/bno055.c ****  *              0x03     | BNO055_ACCEL_STANDBY
11589:Core/Src/bno055.c ****  *              0x04     | BNO055_ACCEL_LOWPOWER_2
11590:Core/Src/bno055.c ****  *              0x05     | BNO055_ACCEL_DEEPSUSPEND
11591:Core/Src/bno055.c ****  *
11592:Core/Src/bno055.c ****  *  @return results of bus communication function
11593:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11594:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11595:Core/Src/bno055.c ****  *
11596:Core/Src/bno055.c ****  *
11597:Core/Src/bno055.c ****  */
11598:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_power_mode(u8 accel_power_mode_u8)
11599:Core/Src/bno055.c **** {
 24428              		.loc 1 11599 1 is_stmt 1 view -0
 24429              		.cfi_startproc
 24430              		@ args = 0, pretend = 0, frame = 8
 24431              		@ frame_needed = 0, uses_anonymous_args = 0
 24432              		.loc 1 11599 1 is_stmt 0 view .LVU7100
 24433 0000 30B5     		push	{r4, r5, lr}
 24434              		.cfi_def_cfa_offset 12
 24435              		.cfi_offset 4, -12
 24436              		.cfi_offset 5, -8
 24437              		.cfi_offset 14, -4
 24438 0002 83B0     		sub	sp, sp, #12
 24439              		.cfi_def_cfa_offset 24
11600:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24440              		.loc 1 11600 5 is_stmt 1 view .LVU7101
 24441              	.LVL3164:
11601:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 24442              		.loc 1 11601 5 view .LVU7102
 24443              		.loc 1 11601 8 is_stmt 0 view .LVU7103
 24444 0004 0023     		movs	r3, #0
ARM GAS  /tmp/ccOloYeZ.s 			page 687


 24445 0006 8DF80730 		strb	r3, [sp, #7]
11602:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24446              		.loc 1 11602 5 is_stmt 1 view .LVU7104
 24447              	.LVL3165:
11603:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 24448              		.loc 1 11603 5 view .LVU7105
 24449              		.loc 1 11603 8 is_stmt 0 view .LVU7106
 24450 000a 8DF80630 		strb	r3, [sp, #6]
11604:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 24451              		.loc 1 11604 5 is_stmt 1 view .LVU7107
 24452              	.LVL3166:
11605:Core/Src/bno055.c **** 
11606:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11607:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24453              		.loc 1 11607 5 view .LVU7108
 24454              		.loc 1 11607 18 is_stmt 0 view .LVU7109
 24455 000e 2A4B     		ldr	r3, .L1715
 24456 0010 1B68     		ldr	r3, [r3]
 24457              		.loc 1 11607 8 view .LVU7110
 24458 0012 002B     		cmp	r3, #0
 24459 0014 4DD0     		beq	.L1706
 24460 0016 0546     		mov	r5, r0
11608:Core/Src/bno055.c ****     {
11609:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11610:Core/Src/bno055.c ****     }
11611:Core/Src/bno055.c ****     else
11612:Core/Src/bno055.c ****     {
11613:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11614:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11615:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11616:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 24461              		.loc 1 11616 9 is_stmt 1 view .LVU7111
 24462              		.loc 1 11616 19 is_stmt 0 view .LVU7112
 24463 0018 0DF10600 		add	r0, sp, #6
 24464              	.LVL3167:
 24465              		.loc 1 11616 19 view .LVU7113
 24466 001c FFF7FEFF 		bl	bno055_get_operation_mode
 24467              	.LVL3168:
11617:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 24468              		.loc 1 11617 9 is_stmt 1 view .LVU7114
 24469              		.loc 1 11617 12 is_stmt 0 view .LVU7115
 24470 0020 0446     		mov	r4, r0
 24471 0022 90BB     		cbnz	r0, .L1707
11618:Core/Src/bno055.c ****         {
11619:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24472              		.loc 1 11619 13 is_stmt 1 view .LVU7116
 24473              		.loc 1 11619 32 is_stmt 0 view .LVU7117
 24474 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 24475              		.loc 1 11619 16 view .LVU7118
 24476 0028 1BB9     		cbnz	r3, .L1712
 24477              	.LVL3169:
 24478              	.L1705:
11620:Core/Src/bno055.c ****             {
11621:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11622:Core/Src/bno055.c ****             }
11623:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 24479              		.loc 1 11623 13 is_stmt 1 view .LVU7119
ARM GAS  /tmp/ccOloYeZ.s 			page 688


 24480              		.loc 1 11623 16 is_stmt 0 view .LVU7120
 24481 002a 44B1     		cbz	r4, .L1713
11624:Core/Src/bno055.c ****             {
11625:Core/Src/bno055.c ****                 /* Write page as one */
11626:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11627:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11628:Core/Src/bno055.c ****                 {
11629:Core/Src/bno055.c ****                     if (accel_power_mode_u8 < BNO055_ACCEL_POWER_MODE_RANGE)
11630:Core/Src/bno055.c ****                     {
11631:Core/Src/bno055.c ****                         /* Write the value of accel bandwidth*/
11632:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11633:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
11634:Core/Src/bno055.c ****                                                                   &data_u8r,
11635:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11636:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11637:Core/Src/bno055.c ****                         {
11638:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_POWER_MODE, accel
11639:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11640:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
11641:Core/Src/bno055.c ****                                                                         &data_u8r,
11642:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11643:Core/Src/bno055.c ****                         }
11644:Core/Src/bno055.c ****                     }
11645:Core/Src/bno055.c ****                     else
11646:Core/Src/bno055.c ****                     {
11647:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11648:Core/Src/bno055.c ****                     }
11649:Core/Src/bno055.c ****                 }
11650:Core/Src/bno055.c ****                 else
11651:Core/Src/bno055.c ****                 {
11652:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11653:Core/Src/bno055.c ****                 }
11654:Core/Src/bno055.c ****             }
11655:Core/Src/bno055.c ****             else
11656:Core/Src/bno055.c ****             {
11657:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 24482              		.loc 1 11657 26 view .LVU7121
 24483 002c 4FF0FF34 		mov	r4, #-1
 24484              	.LVL3170:
 24485              		.loc 1 11657 26 view .LVU7122
 24486 0030 2DE0     		b	.L1704
 24487              	.LVL3171:
 24488              	.L1712:
11621:Core/Src/bno055.c ****             }
 24489              		.loc 1 11621 17 is_stmt 1 view .LVU7123
11621:Core/Src/bno055.c ****             }
 24490              		.loc 1 11621 28 is_stmt 0 view .LVU7124
 24491 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 24492              	.LVL3172:
11621:Core/Src/bno055.c ****             }
 24493              		.loc 1 11621 25 view .LVU7125
 24494 0036 54FA80F4 		uxtab	r4, r4, r0
 24495 003a 64B2     		sxtb	r4, r4
 24496              	.LVL3173:
11621:Core/Src/bno055.c ****             }
 24497              		.loc 1 11621 25 view .LVU7126
 24498 003c F5E7     		b	.L1705
ARM GAS  /tmp/ccOloYeZ.s 			page 689


 24499              	.L1713:
11626:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 24500              		.loc 1 11626 17 is_stmt 1 view .LVU7127
11626:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 24501              		.loc 1 11626 30 is_stmt 0 view .LVU7128
 24502 003e 0120     		movs	r0, #1
 24503 0040 FFF7FEFF 		bl	bno055_write_page_id
 24504              	.LVL3174:
11627:Core/Src/bno055.c ****                 {
 24505              		.loc 1 11627 17 is_stmt 1 view .LVU7129
11627:Core/Src/bno055.c ****                 {
 24506              		.loc 1 11627 20 is_stmt 0 view .LVU7130
 24507 0044 48BB     		cbnz	r0, .L1709
11629:Core/Src/bno055.c ****                     {
 24508              		.loc 1 11629 21 is_stmt 1 view .LVU7131
11629:Core/Src/bno055.c ****                     {
 24509              		.loc 1 11629 24 is_stmt 0 view .LVU7132
 24510 0046 052D     		cmp	r5, #5
 24511 0048 2AD8     		bhi	.L1710
11632:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
 24512              		.loc 1 11632 25 is_stmt 1 view .LVU7133
11632:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
 24513              		.loc 1 11632 44 is_stmt 0 view .LVU7134
 24514 004a 1B4B     		ldr	r3, .L1715
 24515 004c 1868     		ldr	r0, [r3]
 24516              	.LVL3175:
11632:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
 24517              		.loc 1 11632 44 view .LVU7135
 24518 004e 0469     		ldr	r4, [r0, #16]
 24519              	.LVL3176:
11632:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
 24520              		.loc 1 11632 36 view .LVU7136
 24521 0050 0123     		movs	r3, #1
 24522 0052 0DF10702 		add	r2, sp, #7
 24523 0056 0821     		movs	r1, #8
 24524 0058 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24525 005a A047     		blx	r4
 24526              	.LVL3177:
11636:Core/Src/bno055.c ****                         {
 24527              		.loc 1 11636 25 is_stmt 1 view .LVU7137
11636:Core/Src/bno055.c ****                         {
 24528              		.loc 1 11636 28 is_stmt 0 view .LVU7138
 24529 005c 0446     		mov	r4, r0
 24530 005e B0B9     		cbnz	r0, .L1704
11638:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24531              		.loc 1 11638 29 is_stmt 1 view .LVU7139
11638:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24532              		.loc 1 11638 40 is_stmt 0 view .LVU7140
 24533 0060 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 24534 0064 03F01F03 		and	r3, r3, #31
 24535 0068 43EA4513 		orr	r3, r3, r5, lsl #5
11638:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24536              		.loc 1 11638 38 view .LVU7141
 24537 006c 8DF80730 		strb	r3, [sp, #7]
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 24538              		.loc 1 11639 29 is_stmt 1 view .LVU7142
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
ARM GAS  /tmp/ccOloYeZ.s 			page 690


 24539              		.loc 1 11639 49 is_stmt 0 view .LVU7143
 24540 0070 114B     		ldr	r3, .L1715
 24541 0072 1868     		ldr	r0, [r3]
 24542              	.LVL3178:
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 24543              		.loc 1 11639 49 view .LVU7144
 24544 0074 C568     		ldr	r5, [r0, #12]
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 24545              		.loc 1 11639 41 view .LVU7145
 24546 0076 0123     		movs	r3, #1
 24547 0078 0DF10702 		add	r2, sp, #7
 24548 007c 0821     		movs	r1, #8
 24549 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24550 0080 A847     		blx	r5
 24551              	.LVL3179:
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 24552              		.loc 1 11639 38 view .LVU7146
 24553 0082 54FA80F0 		uxtab	r0, r4, r0
 24554 0086 44B2     		sxtb	r4, r0
 24555              	.LVL3180:
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 24556              		.loc 1 11639 38 view .LVU7147
 24557 0088 01E0     		b	.L1704
 24558              	.LVL3181:
 24559              	.L1707:
11658:Core/Src/bno055.c ****             }
11659:Core/Src/bno055.c ****         }
11660:Core/Src/bno055.c ****         else
11661:Core/Src/bno055.c ****         {
11662:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 24560              		.loc 1 11662 22 view .LVU7148
 24561 008a 4FF0FF34 		mov	r4, #-1
 24562              	.LVL3182:
 24563              	.L1704:
11663:Core/Src/bno055.c ****         }
11664:Core/Src/bno055.c ****     }
11665:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24564              		.loc 1 11665 5 is_stmt 1 view .LVU7149
 24565              		.loc 1 11665 24 is_stmt 0 view .LVU7150
 24566 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 24567              		.loc 1 11665 8 view .LVU7151
 24568 0092 40B9     		cbnz	r0, .L1714
 24569              	.LVL3183:
 24570              	.L1703:
11666:Core/Src/bno055.c ****     {
11667:Core/Src/bno055.c ****         /* set the operation mode of
11668:Core/Src/bno055.c ****          * previous operation mode*/
11669:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11670:Core/Src/bno055.c ****     }
11671:Core/Src/bno055.c **** 
11672:Core/Src/bno055.c ****     return com_rslt;
11673:Core/Src/bno055.c **** }
 24571              		.loc 1 11673 1 view .LVU7152
 24572 0094 2046     		mov	r0, r4
 24573 0096 03B0     		add	sp, sp, #12
 24574              		.cfi_remember_state
 24575              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccOloYeZ.s 			page 691


 24576              		@ sp needed
 24577 0098 30BD     		pop	{r4, r5, pc}
 24578              	.LVL3184:
 24579              	.L1709:
 24580              		.cfi_restore_state
11652:Core/Src/bno055.c ****                 }
 24581              		.loc 1 11652 30 view .LVU7153
 24582 009a 4FF0FF34 		mov	r4, #-1
 24583              	.LVL3185:
11652:Core/Src/bno055.c ****                 }
 24584              		.loc 1 11652 30 view .LVU7154
 24585 009e F6E7     		b	.L1704
 24586              	.LVL3186:
 24587              	.L1710:
11647:Core/Src/bno055.c ****                     }
 24588              		.loc 1 11647 34 view .LVU7155
 24589 00a0 6FF00104 		mvn	r4, #1
 24590              	.LVL3187:
11647:Core/Src/bno055.c ****                     }
 24591              		.loc 1 11647 34 view .LVU7156
 24592 00a4 F3E7     		b	.L1704
 24593              	.LVL3188:
 24594              	.L1714:
11669:Core/Src/bno055.c ****     }
 24595              		.loc 1 11669 9 is_stmt 1 view .LVU7157
11669:Core/Src/bno055.c ****     }
 24596              		.loc 1 11669 21 is_stmt 0 view .LVU7158
 24597 00a6 FFF7FEFF 		bl	bno055_set_operation_mode
 24598              	.LVL3189:
11669:Core/Src/bno055.c ****     }
 24599              		.loc 1 11669 18 view .LVU7159
 24600 00aa 54FA80F0 		uxtab	r0, r4, r0
 24601 00ae 44B2     		sxtb	r4, r0
 24602              	.LVL3190:
11669:Core/Src/bno055.c ****     }
 24603              		.loc 1 11669 18 view .LVU7160
 24604 00b0 F0E7     		b	.L1703
 24605              	.LVL3191:
 24606              	.L1706:
11609:Core/Src/bno055.c ****     }
 24607              		.loc 1 11609 16 view .LVU7161
 24608 00b2 6FF07E04 		mvn	r4, #126
 24609 00b6 EDE7     		b	.L1703
 24610              	.L1716:
 24611              		.align	2
 24612              	.L1715:
 24613 00b8 00000000 		.word	p_bno055
 24614              		.cfi_endproc
 24615              	.LFE180:
 24617              		.section	.text.bno055_get_mag_data_output_rate,"ax",%progbits
 24618              		.align	1
 24619              		.global	bno055_get_mag_data_output_rate
 24620              		.syntax unified
 24621              		.thumb
 24622              		.thumb_func
 24624              	bno055_get_mag_data_output_rate:
 24625              	.LVL3192:
ARM GAS  /tmp/ccOloYeZ.s 			page 692


 24626              	.LFB181:
11674:Core/Src/bno055.c **** 
11675:Core/Src/bno055.c **** /*!
11676:Core/Src/bno055.c ****  *  @brief This API used to read the mag output data rate
11677:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 0 to 2
11678:Core/Src/bno055.c ****  *
11679:Core/Src/bno055.c ****  *  @param mag_data_output_rate_u8 : The value of mag output data rate
11680:Core/Src/bno055.c ****  *
11681:Core/Src/bno055.c ****  *  mag_data_output_rate_u8 |   result
11682:Core/Src/bno055.c ****  *  ----------------------    |----------------------
11683:Core/Src/bno055.c ****  *     0x00                   | MAG_DATA_OUTPUT_RATE_2HZ
11684:Core/Src/bno055.c ****  *     0x01                   | MAG_DATA_OUTPUT_RATE_6HZ
11685:Core/Src/bno055.c ****  *     0x02                   | MAG_DATA_OUTPUT_RATE_8HZ
11686:Core/Src/bno055.c ****  *     0x03                   | MAG_DATA_OUTPUT_RATE_10HZ
11687:Core/Src/bno055.c ****  *     0x04                   | MAG_DATA_OUTPUT_RATE_15HZ
11688:Core/Src/bno055.c ****  *     0x05                   | MAG_DATA_OUTPUT_RATE_20HZ
11689:Core/Src/bno055.c ****  *     0x06                   | MAG_DATA_OUTPUT_RATE_25HZ
11690:Core/Src/bno055.c ****  *     0x07                   | MAG_DATA_OUTPUT_RATE_30HZ
11691:Core/Src/bno055.c ****  *
11692:Core/Src/bno055.c ****  *  @return results of bus communication function
11693:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11694:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11695:Core/Src/bno055.c ****  *
11696:Core/Src/bno055.c ****  *
11697:Core/Src/bno055.c ****  */
11698:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_data_output_rate(u8 *mag_data_output_rate_u8)
11699:Core/Src/bno055.c **** {
 24627              		.loc 1 11699 1 is_stmt 1 view -0
 24628              		.cfi_startproc
 24629              		@ args = 0, pretend = 0, frame = 8
 24630              		@ frame_needed = 0, uses_anonymous_args = 0
 24631              		.loc 1 11699 1 is_stmt 0 view .LVU7163
 24632 0000 30B5     		push	{r4, r5, lr}
 24633              		.cfi_def_cfa_offset 12
 24634              		.cfi_offset 4, -12
 24635              		.cfi_offset 5, -8
 24636              		.cfi_offset 14, -4
 24637 0002 83B0     		sub	sp, sp, #12
 24638              		.cfi_def_cfa_offset 24
11700:Core/Src/bno055.c ****     /* Variable used to return value of
11701:Core/Src/bno055.c ****      * communication routine*/
11702:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24639              		.loc 1 11702 5 is_stmt 1 view .LVU7164
 24640              	.LVL3193:
11703:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 24641              		.loc 1 11703 5 view .LVU7165
 24642              		.loc 1 11703 8 is_stmt 0 view .LVU7166
 24643 0004 0023     		movs	r3, #0
 24644 0006 8DF80730 		strb	r3, [sp, #7]
11704:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24645              		.loc 1 11704 5 is_stmt 1 view .LVU7167
 24646              	.LVL3194:
11705:Core/Src/bno055.c **** 
11706:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11707:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24647              		.loc 1 11707 5 view .LVU7168
 24648              		.loc 1 11707 18 is_stmt 0 view .LVU7169
ARM GAS  /tmp/ccOloYeZ.s 			page 693


 24649 000a 144B     		ldr	r3, .L1725
 24650 000c 1B68     		ldr	r3, [r3]
 24651              		.loc 1 11707 8 view .LVU7170
 24652 000e F3B1     		cbz	r3, .L1721
 24653 0010 0446     		mov	r4, r0
11708:Core/Src/bno055.c ****     {
11709:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11710:Core/Src/bno055.c ****     }
11711:Core/Src/bno055.c ****     else
11712:Core/Src/bno055.c ****     {
11713:Core/Src/bno055.c ****         /*condition check for page, output data rate
11714:Core/Src/bno055.c ****          * available in the page one*/
11715:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 24654              		.loc 1 11715 9 is_stmt 1 view .LVU7171
 24655              		.loc 1 11715 21 is_stmt 0 view .LVU7172
 24656 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24657              		.loc 1 11715 12 view .LVU7173
 24658 0014 012B     		cmp	r3, #1
 24659 0016 14D1     		bne	.L1724
 24660              	.LVL3195:
 24661              	.L1719:
11716:Core/Src/bno055.c ****         {
11717:Core/Src/bno055.c ****             /* Write page as one */
11718:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11719:Core/Src/bno055.c ****         }
11720:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 24662              		.loc 1 11720 53 discriminator 1 view .LVU7174
 24663 0018 104B     		ldr	r3, .L1725
 24664 001a 1B68     		ldr	r3, [r3]
 24665 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24666              		.loc 1 11720 41 discriminator 1 view .LVU7175
 24667 001e 012B     		cmp	r3, #1
 24668 0020 18D1     		bne	.L1722
 24669              	.L1720:
11721:Core/Src/bno055.c ****         {
11722:Core/Src/bno055.c ****             /* Read the mag output data rate*/
11723:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24670              		.loc 1 11723 13 is_stmt 1 view .LVU7176
 24671              		.loc 1 11723 32 is_stmt 0 view .LVU7177
 24672 0022 0E4B     		ldr	r3, .L1725
 24673 0024 1868     		ldr	r0, [r3]
 24674 0026 0569     		ldr	r5, [r0, #16]
 24675              		.loc 1 11723 24 view .LVU7178
 24676 0028 0123     		movs	r3, #1
 24677 002a 0DF10702 		add	r2, sp, #7
 24678 002e 0921     		movs	r1, #9
 24679 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24680 0032 A847     		blx	r5
 24681              	.LVL3196:
11724:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_OUTPUT_RATE_REG,
11725:Core/Src/bno055.c ****                                                       &data_u8r,
11726:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
11727:Core/Src/bno055.c ****             *mag_data_output_rate_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_DATA_OUTPUT_RATE);
 24682              		.loc 1 11727 13 is_stmt 1 view .LVU7179
 24683              		.loc 1 11727 40 is_stmt 0 view .LVU7180
 24684 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 24685 0038 03F00703 		and	r3, r3, #7
ARM GAS  /tmp/ccOloYeZ.s 			page 694


 24686              		.loc 1 11727 38 view .LVU7181
 24687 003c 2370     		strb	r3, [r4]
 24688              	.LVL3197:
 24689              	.L1718:
11728:Core/Src/bno055.c ****         }
11729:Core/Src/bno055.c ****         else
11730:Core/Src/bno055.c ****         {
11731:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11732:Core/Src/bno055.c ****         }
11733:Core/Src/bno055.c ****     }
11734:Core/Src/bno055.c **** 
11735:Core/Src/bno055.c ****     return com_rslt;
11736:Core/Src/bno055.c **** }
 24690              		.loc 1 11736 1 view .LVU7182
 24691 003e 03B0     		add	sp, sp, #12
 24692              		.cfi_remember_state
 24693              		.cfi_def_cfa_offset 12
 24694              		@ sp needed
 24695 0040 30BD     		pop	{r4, r5, pc}
 24696              	.LVL3198:
 24697              	.L1724:
 24698              		.cfi_restore_state
11718:Core/Src/bno055.c ****         }
 24699              		.loc 1 11718 13 is_stmt 1 view .LVU7183
11718:Core/Src/bno055.c ****         }
 24700              		.loc 1 11718 23 is_stmt 0 view .LVU7184
 24701 0042 0120     		movs	r0, #1
 24702              	.LVL3199:
11718:Core/Src/bno055.c ****         }
 24703              		.loc 1 11718 23 view .LVU7185
 24704 0044 FFF7FEFF 		bl	bno055_write_page_id
 24705              	.LVL3200:
11720:Core/Src/bno055.c ****         {
 24706              		.loc 1 11720 9 is_stmt 1 view .LVU7186
11720:Core/Src/bno055.c ****         {
 24707              		.loc 1 11720 12 is_stmt 0 view .LVU7187
 24708 0048 0028     		cmp	r0, #0
 24709 004a EAD0     		beq	.L1720
 24710 004c E4E7     		b	.L1719
 24711              	.LVL3201:
 24712              	.L1721:
11709:Core/Src/bno055.c ****     }
 24713              		.loc 1 11709 16 view .LVU7188
 24714 004e 6FF07E00 		mvn	r0, #126
 24715              	.LVL3202:
11709:Core/Src/bno055.c ****     }
 24716              		.loc 1 11709 16 view .LVU7189
 24717 0052 F4E7     		b	.L1718
 24718              	.LVL3203:
 24719              	.L1722:
11731:Core/Src/bno055.c ****         }
 24720              		.loc 1 11731 22 view .LVU7190
 24721 0054 4FF0FF30 		mov	r0, #-1
 24722 0058 F1E7     		b	.L1718
 24723              	.L1726:
 24724 005a 00BF     		.align	2
 24725              	.L1725:
ARM GAS  /tmp/ccOloYeZ.s 			page 695


 24726 005c 00000000 		.word	p_bno055
 24727              		.cfi_endproc
 24728              	.LFE181:
 24730              		.section	.text.bno055_set_mag_data_output_rate,"ax",%progbits
 24731              		.align	1
 24732              		.global	bno055_set_mag_data_output_rate
 24733              		.syntax unified
 24734              		.thumb
 24735              		.thumb_func
 24737              	bno055_set_mag_data_output_rate:
 24738              	.LVL3204:
 24739              	.LFB182:
11737:Core/Src/bno055.c **** 
11738:Core/Src/bno055.c **** /*!
11739:Core/Src/bno055.c ****  *  @brief This API used to write the mag output data rate
11740:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 0 to 2
11741:Core/Src/bno055.c ****  *
11742:Core/Src/bno055.c ****  *  @param mag_data_output_rate_u8 : The value of mag output data rate
11743:Core/Src/bno055.c ****  *
11744:Core/Src/bno055.c ****  *  mag_data_output_rate_u8 |   result
11745:Core/Src/bno055.c ****  *  ----------------------    |----------------------
11746:Core/Src/bno055.c ****  *     0x00                   | MAG_DATA_OUTPUT_RATE_2HZ
11747:Core/Src/bno055.c ****  *     0x01                   | MAG_DATA_OUTPUT_RATE_6HZ
11748:Core/Src/bno055.c ****  *     0x02                   | MAG_DATA_OUTPUT_RATE_8HZ
11749:Core/Src/bno055.c ****  *     0x03                   | MAG_DATA_OUTPUT_RATE_10HZ
11750:Core/Src/bno055.c ****  *     0x04                   | MAG_DATA_OUTPUT_RATE_15HZ
11751:Core/Src/bno055.c ****  *     0x05                   | MAG_DATA_OUTPUT_RATE_20HZ
11752:Core/Src/bno055.c ****  *     0x06                   | MAG_DATA_OUTPUT_RATE_25HZ
11753:Core/Src/bno055.c ****  *     0x07                   | MAG_DATA_OUTPUT_RATE_30HZ
11754:Core/Src/bno055.c ****  *
11755:Core/Src/bno055.c ****  *  @return results of bus communication function
11756:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11757:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11758:Core/Src/bno055.c ****  *
11759:Core/Src/bno055.c ****  *
11760:Core/Src/bno055.c ****  */
11761:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_data_output_rate(u8 mag_data_output_rate_u8)
11762:Core/Src/bno055.c **** {
 24740              		.loc 1 11762 1 is_stmt 1 view -0
 24741              		.cfi_startproc
 24742              		@ args = 0, pretend = 0, frame = 8
 24743              		@ frame_needed = 0, uses_anonymous_args = 0
 24744              		.loc 1 11762 1 is_stmt 0 view .LVU7192
 24745 0000 30B5     		push	{r4, r5, lr}
 24746              		.cfi_def_cfa_offset 12
 24747              		.cfi_offset 4, -12
 24748              		.cfi_offset 5, -8
 24749              		.cfi_offset 14, -4
 24750 0002 83B0     		sub	sp, sp, #12
 24751              		.cfi_def_cfa_offset 24
11763:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24752              		.loc 1 11763 5 is_stmt 1 view .LVU7193
 24753              	.LVL3205:
11764:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 24754              		.loc 1 11764 5 view .LVU7194
 24755              		.loc 1 11764 8 is_stmt 0 view .LVU7195
 24756 0004 0023     		movs	r3, #0
ARM GAS  /tmp/ccOloYeZ.s 			page 696


 24757 0006 8DF80730 		strb	r3, [sp, #7]
11765:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24758              		.loc 1 11765 5 is_stmt 1 view .LVU7196
 24759              	.LVL3206:
11766:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 24760              		.loc 1 11766 5 view .LVU7197
11767:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 24761              		.loc 1 11767 5 view .LVU7198
 24762              		.loc 1 11767 8 is_stmt 0 view .LVU7199
 24763 000a 8DF80630 		strb	r3, [sp, #6]
11768:Core/Src/bno055.c **** 
11769:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11770:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24764              		.loc 1 11770 5 is_stmt 1 view .LVU7200
 24765              		.loc 1 11770 18 is_stmt 0 view .LVU7201
 24766 000e 2B4B     		ldr	r3, .L1740
 24767 0010 1B68     		ldr	r3, [r3]
 24768              		.loc 1 11770 8 view .LVU7202
 24769 0012 002B     		cmp	r3, #0
 24770 0014 4ED0     		beq	.L1731
 24771 0016 0546     		mov	r5, r0
11771:Core/Src/bno055.c ****     {
11772:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11773:Core/Src/bno055.c ****     }
11774:Core/Src/bno055.c ****     else
11775:Core/Src/bno055.c ****     {
11776:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11777:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11778:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11779:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 24772              		.loc 1 11779 9 is_stmt 1 view .LVU7203
 24773              		.loc 1 11779 19 is_stmt 0 view .LVU7204
 24774 0018 0DF10600 		add	r0, sp, #6
 24775              	.LVL3207:
 24776              		.loc 1 11779 19 view .LVU7205
 24777 001c FFF7FEFF 		bl	bno055_get_operation_mode
 24778              	.LVL3208:
11780:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 24779              		.loc 1 11780 9 is_stmt 1 view .LVU7206
 24780              		.loc 1 11780 12 is_stmt 0 view .LVU7207
 24781 0020 0446     		mov	r4, r0
 24782 0022 98BB     		cbnz	r0, .L1732
11781:Core/Src/bno055.c ****         {
11782:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24783              		.loc 1 11782 13 is_stmt 1 view .LVU7208
 24784              		.loc 1 11782 32 is_stmt 0 view .LVU7209
 24785 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 24786              		.loc 1 11782 16 view .LVU7210
 24787 0028 1BB9     		cbnz	r3, .L1737
 24788              	.LVL3209:
 24789              	.L1730:
11783:Core/Src/bno055.c ****             {
11784:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11785:Core/Src/bno055.c ****             }
11786:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 24790              		.loc 1 11786 13 is_stmt 1 view .LVU7211
 24791              		.loc 1 11786 16 is_stmt 0 view .LVU7212
ARM GAS  /tmp/ccOloYeZ.s 			page 697


 24792 002a 44B1     		cbz	r4, .L1738
11787:Core/Src/bno055.c ****             {
11788:Core/Src/bno055.c ****                 /* Write page as one */
11789:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11790:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11791:Core/Src/bno055.c ****                 {
11792:Core/Src/bno055.c ****                     if (mag_data_output_rate_u8 < BNO055_MAG_OUTPUT_RANGE)
11793:Core/Src/bno055.c ****                     {
11794:Core/Src/bno055.c ****                         /* Write the value of
11795:Core/Src/bno055.c ****                          * mag output data rate*/
11796:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11797:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
11798:Core/Src/bno055.c ****                                                                   &data_u8r,
11799:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11800:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11801:Core/Src/bno055.c ****                         {
11802:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r,
11803:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
11804:Core/Src/bno055.c ****                                                            mag_data_output_rate_u8);
11805:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11806:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
11807:Core/Src/bno055.c ****                                                                         &data_u8r,
11808:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11809:Core/Src/bno055.c ****                         }
11810:Core/Src/bno055.c ****                     }
11811:Core/Src/bno055.c ****                     else
11812:Core/Src/bno055.c ****                     {
11813:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11814:Core/Src/bno055.c ****                     }
11815:Core/Src/bno055.c ****                 }
11816:Core/Src/bno055.c ****                 else
11817:Core/Src/bno055.c ****                 {
11818:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11819:Core/Src/bno055.c ****                 }
11820:Core/Src/bno055.c ****             }
11821:Core/Src/bno055.c ****             else
11822:Core/Src/bno055.c ****             {
11823:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 24793              		.loc 1 11823 26 view .LVU7213
 24794 002c 4FF0FF34 		mov	r4, #-1
 24795              	.LVL3210:
 24796              		.loc 1 11823 26 view .LVU7214
 24797 0030 2EE0     		b	.L1729
 24798              	.LVL3211:
 24799              	.L1737:
11784:Core/Src/bno055.c ****             }
 24800              		.loc 1 11784 17 is_stmt 1 view .LVU7215
11784:Core/Src/bno055.c ****             }
 24801              		.loc 1 11784 28 is_stmt 0 view .LVU7216
 24802 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 24803              	.LVL3212:
11784:Core/Src/bno055.c ****             }
 24804              		.loc 1 11784 25 view .LVU7217
 24805 0036 54FA80F4 		uxtab	r4, r4, r0
 24806 003a 64B2     		sxtb	r4, r4
 24807              	.LVL3213:
11784:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccOloYeZ.s 			page 698


 24808              		.loc 1 11784 25 view .LVU7218
 24809 003c F5E7     		b	.L1730
 24810              	.L1738:
11789:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 24811              		.loc 1 11789 17 is_stmt 1 view .LVU7219
11789:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 24812              		.loc 1 11789 30 is_stmt 0 view .LVU7220
 24813 003e 0120     		movs	r0, #1
 24814 0040 FFF7FEFF 		bl	bno055_write_page_id
 24815              	.LVL3214:
11790:Core/Src/bno055.c ****                 {
 24816              		.loc 1 11790 17 is_stmt 1 view .LVU7221
11790:Core/Src/bno055.c ****                 {
 24817              		.loc 1 11790 20 is_stmt 0 view .LVU7222
 24818 0044 50BB     		cbnz	r0, .L1734
11792:Core/Src/bno055.c ****                     {
 24819              		.loc 1 11792 21 is_stmt 1 view .LVU7223
11792:Core/Src/bno055.c ****                     {
 24820              		.loc 1 11792 24 is_stmt 0 view .LVU7224
 24821 0046 072D     		cmp	r5, #7
 24822 0048 2BD8     		bhi	.L1735
11796:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
 24823              		.loc 1 11796 25 is_stmt 1 view .LVU7225
11796:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
 24824              		.loc 1 11796 44 is_stmt 0 view .LVU7226
 24825 004a 1C4B     		ldr	r3, .L1740
 24826 004c 1868     		ldr	r0, [r3]
 24827              	.LVL3215:
11796:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
 24828              		.loc 1 11796 44 view .LVU7227
 24829 004e 0469     		ldr	r4, [r0, #16]
 24830              	.LVL3216:
11796:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
 24831              		.loc 1 11796 36 view .LVU7228
 24832 0050 0123     		movs	r3, #1
 24833 0052 0DF10702 		add	r2, sp, #7
 24834 0056 0921     		movs	r1, #9
 24835 0058 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24836 005a A047     		blx	r4
 24837              	.LVL3217:
11800:Core/Src/bno055.c ****                         {
 24838              		.loc 1 11800 25 is_stmt 1 view .LVU7229
11800:Core/Src/bno055.c ****                         {
 24839              		.loc 1 11800 28 is_stmt 0 view .LVU7230
 24840 005c 0446     		mov	r4, r0
 24841 005e B8B9     		cbnz	r0, .L1729
11802:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
 24842              		.loc 1 11802 29 is_stmt 1 view .LVU7231
11802:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
 24843              		.loc 1 11802 40 is_stmt 0 view .LVU7232
 24844 0060 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
11802:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
 24845              		.loc 1 11802 38 view .LVU7233
 24846 0064 23F00703 		bic	r3, r3, #7
 24847 0068 05F00700 		and	r0, r5, #7
 24848              	.LVL3218:
11802:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
ARM GAS  /tmp/ccOloYeZ.s 			page 699


 24849              		.loc 1 11802 38 view .LVU7234
 24850 006c 0343     		orrs	r3, r3, r0
 24851 006e 8DF80730 		strb	r3, [sp, #7]
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 24852              		.loc 1 11805 29 is_stmt 1 view .LVU7235
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 24853              		.loc 1 11805 49 is_stmt 0 view .LVU7236
 24854 0072 124B     		ldr	r3, .L1740
 24855 0074 1868     		ldr	r0, [r3]
 24856 0076 C568     		ldr	r5, [r0, #12]
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 24857              		.loc 1 11805 41 view .LVU7237
 24858 0078 0123     		movs	r3, #1
 24859 007a 0DF10702 		add	r2, sp, #7
 24860 007e 0921     		movs	r1, #9
 24861 0080 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24862 0082 A847     		blx	r5
 24863              	.LVL3219:
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 24864              		.loc 1 11805 38 view .LVU7238
 24865 0084 54FA80F0 		uxtab	r0, r4, r0
 24866 0088 44B2     		sxtb	r4, r0
 24867              	.LVL3220:
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 24868              		.loc 1 11805 38 view .LVU7239
 24869 008a 01E0     		b	.L1729
 24870              	.LVL3221:
 24871              	.L1732:
11824:Core/Src/bno055.c ****             }
11825:Core/Src/bno055.c ****         }
11826:Core/Src/bno055.c ****         else
11827:Core/Src/bno055.c ****         {
11828:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 24872              		.loc 1 11828 22 view .LVU7240
 24873 008c 4FF0FF34 		mov	r4, #-1
 24874              	.LVL3222:
 24875              	.L1729:
11829:Core/Src/bno055.c ****         }
11830:Core/Src/bno055.c ****     }
11831:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24876              		.loc 1 11831 5 is_stmt 1 view .LVU7241
 24877              		.loc 1 11831 24 is_stmt 0 view .LVU7242
 24878 0090 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 24879              		.loc 1 11831 8 view .LVU7243
 24880 0094 40B9     		cbnz	r0, .L1739
 24881              	.LVL3223:
 24882              	.L1728:
11832:Core/Src/bno055.c ****     {
11833:Core/Src/bno055.c ****         /* set the operation mode of
11834:Core/Src/bno055.c ****          * previous operation mode*/
11835:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11836:Core/Src/bno055.c ****     }
11837:Core/Src/bno055.c **** 
11838:Core/Src/bno055.c ****     return com_rslt;
11839:Core/Src/bno055.c **** }
 24883              		.loc 1 11839 1 view .LVU7244
 24884 0096 2046     		mov	r0, r4
ARM GAS  /tmp/ccOloYeZ.s 			page 700


 24885 0098 03B0     		add	sp, sp, #12
 24886              		.cfi_remember_state
 24887              		.cfi_def_cfa_offset 12
 24888              		@ sp needed
 24889 009a 30BD     		pop	{r4, r5, pc}
 24890              	.LVL3224:
 24891              	.L1734:
 24892              		.cfi_restore_state
11818:Core/Src/bno055.c ****                 }
 24893              		.loc 1 11818 30 view .LVU7245
 24894 009c 4FF0FF34 		mov	r4, #-1
 24895              	.LVL3225:
11818:Core/Src/bno055.c ****                 }
 24896              		.loc 1 11818 30 view .LVU7246
 24897 00a0 F6E7     		b	.L1729
 24898              	.LVL3226:
 24899              	.L1735:
11813:Core/Src/bno055.c ****                     }
 24900              		.loc 1 11813 34 view .LVU7247
 24901 00a2 6FF00104 		mvn	r4, #1
 24902              	.LVL3227:
11813:Core/Src/bno055.c ****                     }
 24903              		.loc 1 11813 34 view .LVU7248
 24904 00a6 F3E7     		b	.L1729
 24905              	.LVL3228:
 24906              	.L1739:
11835:Core/Src/bno055.c ****     }
 24907              		.loc 1 11835 9 is_stmt 1 view .LVU7249
11835:Core/Src/bno055.c ****     }
 24908              		.loc 1 11835 21 is_stmt 0 view .LVU7250
 24909 00a8 FFF7FEFF 		bl	bno055_set_operation_mode
 24910              	.LVL3229:
11835:Core/Src/bno055.c ****     }
 24911              		.loc 1 11835 18 view .LVU7251
 24912 00ac 54FA80F0 		uxtab	r0, r4, r0
 24913 00b0 44B2     		sxtb	r4, r0
 24914              	.LVL3230:
11835:Core/Src/bno055.c ****     }
 24915              		.loc 1 11835 18 view .LVU7252
 24916 00b2 F0E7     		b	.L1728
 24917              	.LVL3231:
 24918              	.L1731:
11772:Core/Src/bno055.c ****     }
 24919              		.loc 1 11772 16 view .LVU7253
 24920 00b4 6FF07E04 		mvn	r4, #126
 24921 00b8 EDE7     		b	.L1728
 24922              	.L1741:
 24923 00ba 00BF     		.align	2
 24924              	.L1740:
 24925 00bc 00000000 		.word	p_bno055
 24926              		.cfi_endproc
 24927              	.LFE182:
 24929              		.section	.text.bno055_get_mag_operation_mode,"ax",%progbits
 24930              		.align	1
 24931              		.global	bno055_get_mag_operation_mode
 24932              		.syntax unified
 24933              		.thumb
ARM GAS  /tmp/ccOloYeZ.s 			page 701


 24934              		.thumb_func
 24936              	bno055_get_mag_operation_mode:
 24937              	.LVL3232:
 24938              	.LFB183:
11840:Core/Src/bno055.c **** 
11841:Core/Src/bno055.c **** /*!
11842:Core/Src/bno055.c ****  *  @brief This API used to read the mag operation mode
11843:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 3 to 4
11844:Core/Src/bno055.c ****  *
11845:Core/Src/bno055.c ****  *  @param mag_operation_mode_u8 : The value of mag operation mode
11846:Core/Src/bno055.c ****  *
11847:Core/Src/bno055.c ****  *  mag_operation_mode_u8  |      result
11848:Core/Src/bno055.c ****  * ------------------------- |--------------------------
11849:Core/Src/bno055.c ****  *     0x00                  | MAG_OPR_MODE_LOWPOWER
11850:Core/Src/bno055.c ****  *     0x01                  | MAG_OPR_MODE_REGULAR
11851:Core/Src/bno055.c ****  *     0x02                  | MAG_OPR_MODE_ENHANCED_REGULAR
11852:Core/Src/bno055.c ****  *     0x03                  | MAG_OPR_MODE_HIGH_ACCURACY
11853:Core/Src/bno055.c ****  *
11854:Core/Src/bno055.c ****  *  @return results of bus communication function
11855:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11856:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11857:Core/Src/bno055.c ****  *
11858:Core/Src/bno055.c ****  *
11859:Core/Src/bno055.c ****  */
11860:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_operation_mode(u8 *mag_operation_mode_u8)
11861:Core/Src/bno055.c **** {
 24939              		.loc 1 11861 1 is_stmt 1 view -0
 24940              		.cfi_startproc
 24941              		@ args = 0, pretend = 0, frame = 8
 24942              		@ frame_needed = 0, uses_anonymous_args = 0
 24943              		.loc 1 11861 1 is_stmt 0 view .LVU7255
 24944 0000 30B5     		push	{r4, r5, lr}
 24945              		.cfi_def_cfa_offset 12
 24946              		.cfi_offset 4, -12
 24947              		.cfi_offset 5, -8
 24948              		.cfi_offset 14, -4
 24949 0002 83B0     		sub	sp, sp, #12
 24950              		.cfi_def_cfa_offset 24
11862:Core/Src/bno055.c ****     /* Variable used to return value of
11863:Core/Src/bno055.c ****      * communication routine*/
11864:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24951              		.loc 1 11864 5 is_stmt 1 view .LVU7256
 24952              	.LVL3233:
11865:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 24953              		.loc 1 11865 5 view .LVU7257
 24954              		.loc 1 11865 8 is_stmt 0 view .LVU7258
 24955 0004 0023     		movs	r3, #0
 24956 0006 8DF80730 		strb	r3, [sp, #7]
11866:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24957              		.loc 1 11866 5 is_stmt 1 view .LVU7259
 24958              	.LVL3234:
11867:Core/Src/bno055.c **** 
11868:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11869:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24959              		.loc 1 11869 5 view .LVU7260
 24960              		.loc 1 11869 18 is_stmt 0 view .LVU7261
 24961 000a 144B     		ldr	r3, .L1750
ARM GAS  /tmp/ccOloYeZ.s 			page 702


 24962 000c 1B68     		ldr	r3, [r3]
 24963              		.loc 1 11869 8 view .LVU7262
 24964 000e F3B1     		cbz	r3, .L1746
 24965 0010 0446     		mov	r4, r0
11870:Core/Src/bno055.c ****     {
11871:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11872:Core/Src/bno055.c ****     }
11873:Core/Src/bno055.c ****     else
11874:Core/Src/bno055.c ****     {
11875:Core/Src/bno055.c ****         /*condition check for page, mag operation mode is
11876:Core/Src/bno055.c ****          * available in the page one*/
11877:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 24966              		.loc 1 11877 9 is_stmt 1 view .LVU7263
 24967              		.loc 1 11877 21 is_stmt 0 view .LVU7264
 24968 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24969              		.loc 1 11877 12 view .LVU7265
 24970 0014 012B     		cmp	r3, #1
 24971 0016 14D1     		bne	.L1749
 24972              	.LVL3235:
 24973              	.L1744:
11878:Core/Src/bno055.c ****         {
11879:Core/Src/bno055.c ****             /* Write page as one */
11880:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11881:Core/Src/bno055.c ****         }
11882:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 24974              		.loc 1 11882 53 discriminator 1 view .LVU7266
 24975 0018 104B     		ldr	r3, .L1750
 24976 001a 1B68     		ldr	r3, [r3]
 24977 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24978              		.loc 1 11882 41 discriminator 1 view .LVU7267
 24979 001e 012B     		cmp	r3, #1
 24980 0020 18D1     		bne	.L1747
 24981              	.L1745:
11883:Core/Src/bno055.c ****         {
11884:Core/Src/bno055.c ****             /* Read the value of mag operation mode*/
11885:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24982              		.loc 1 11885 13 is_stmt 1 view .LVU7268
 24983              		.loc 1 11885 32 is_stmt 0 view .LVU7269
 24984 0022 0E4B     		ldr	r3, .L1750
 24985 0024 1868     		ldr	r0, [r3]
 24986 0026 0569     		ldr	r5, [r0, #16]
 24987              		.loc 1 11885 24 view .LVU7270
 24988 0028 0123     		movs	r3, #1
 24989 002a 0DF10702 		add	r2, sp, #7
 24990 002e 0921     		movs	r1, #9
 24991 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24992 0032 A847     		blx	r5
 24993              	.LVL3236:
11886:Core/Src/bno055.c ****                                                       BNO055_MAG_OPERATION_MODE_REG,
11887:Core/Src/bno055.c ****                                                       &data_u8r,
11888:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
11889:Core/Src/bno055.c ****             *mag_operation_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_OPERATION_MODE);
 24994              		.loc 1 11889 13 is_stmt 1 view .LVU7271
 24995              		.loc 1 11889 38 is_stmt 0 view .LVU7272
 24996 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 24997 0038 C3F3C103 		ubfx	r3, r3, #3, #2
 24998              		.loc 1 11889 36 view .LVU7273
ARM GAS  /tmp/ccOloYeZ.s 			page 703


 24999 003c 2370     		strb	r3, [r4]
 25000              	.LVL3237:
 25001              	.L1743:
11890:Core/Src/bno055.c ****         }
11891:Core/Src/bno055.c ****         else
11892:Core/Src/bno055.c ****         {
11893:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11894:Core/Src/bno055.c ****         }
11895:Core/Src/bno055.c ****     }
11896:Core/Src/bno055.c **** 
11897:Core/Src/bno055.c ****     return com_rslt;
11898:Core/Src/bno055.c **** }
 25002              		.loc 1 11898 1 view .LVU7274
 25003 003e 03B0     		add	sp, sp, #12
 25004              		.cfi_remember_state
 25005              		.cfi_def_cfa_offset 12
 25006              		@ sp needed
 25007 0040 30BD     		pop	{r4, r5, pc}
 25008              	.LVL3238:
 25009              	.L1749:
 25010              		.cfi_restore_state
11880:Core/Src/bno055.c ****         }
 25011              		.loc 1 11880 13 is_stmt 1 view .LVU7275
11880:Core/Src/bno055.c ****         }
 25012              		.loc 1 11880 23 is_stmt 0 view .LVU7276
 25013 0042 0120     		movs	r0, #1
 25014              	.LVL3239:
11880:Core/Src/bno055.c ****         }
 25015              		.loc 1 11880 23 view .LVU7277
 25016 0044 FFF7FEFF 		bl	bno055_write_page_id
 25017              	.LVL3240:
11882:Core/Src/bno055.c ****         {
 25018              		.loc 1 11882 9 is_stmt 1 view .LVU7278
11882:Core/Src/bno055.c ****         {
 25019              		.loc 1 11882 12 is_stmt 0 view .LVU7279
 25020 0048 0028     		cmp	r0, #0
 25021 004a EAD0     		beq	.L1745
 25022 004c E4E7     		b	.L1744
 25023              	.LVL3241:
 25024              	.L1746:
11871:Core/Src/bno055.c ****     }
 25025              		.loc 1 11871 16 view .LVU7280
 25026 004e 6FF07E00 		mvn	r0, #126
 25027              	.LVL3242:
11871:Core/Src/bno055.c ****     }
 25028              		.loc 1 11871 16 view .LVU7281
 25029 0052 F4E7     		b	.L1743
 25030              	.LVL3243:
 25031              	.L1747:
11893:Core/Src/bno055.c ****         }
 25032              		.loc 1 11893 22 view .LVU7282
 25033 0054 4FF0FF30 		mov	r0, #-1
 25034 0058 F1E7     		b	.L1743
 25035              	.L1751:
 25036 005a 00BF     		.align	2
 25037              	.L1750:
 25038 005c 00000000 		.word	p_bno055
ARM GAS  /tmp/ccOloYeZ.s 			page 704


 25039              		.cfi_endproc
 25040              	.LFE183:
 25042              		.section	.text.bno055_set_mag_operation_mode,"ax",%progbits
 25043              		.align	1
 25044              		.global	bno055_set_mag_operation_mode
 25045              		.syntax unified
 25046              		.thumb
 25047              		.thumb_func
 25049              	bno055_set_mag_operation_mode:
 25050              	.LVL3244:
 25051              	.LFB184:
11899:Core/Src/bno055.c **** 
11900:Core/Src/bno055.c **** /*!
11901:Core/Src/bno055.c ****  *  @brief This API used to write the mag operation mode
11902:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 3 to 4
11903:Core/Src/bno055.c ****  *
11904:Core/Src/bno055.c ****  *  @param mag_operation_mode_u8 : The value of mag operation mode
11905:Core/Src/bno055.c ****  *
11906:Core/Src/bno055.c ****  *  mag_operation_mode_u8  |      result
11907:Core/Src/bno055.c ****  * ------------------------- |--------------------------
11908:Core/Src/bno055.c ****  *     0x00                  | MAG_OPR_MODE_LOWPOWER
11909:Core/Src/bno055.c ****  *     0x01                  | MAG_OPR_MODE_REGULAR
11910:Core/Src/bno055.c ****  *     0x02                  | MAG_OPR_MODE_ENHANCED_REGULAR
11911:Core/Src/bno055.c ****  *     0x03                  | MAG_OPR_MODE_HIGH_ACCURACY
11912:Core/Src/bno055.c ****  *
11913:Core/Src/bno055.c ****  *  @return results of bus communication function
11914:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11915:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11916:Core/Src/bno055.c ****  *
11917:Core/Src/bno055.c ****  *
11918:Core/Src/bno055.c ****  */
11919:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_operation_mode(u8 mag_operation_mode_u8)
11920:Core/Src/bno055.c **** {
 25052              		.loc 1 11920 1 is_stmt 1 view -0
 25053              		.cfi_startproc
 25054              		@ args = 0, pretend = 0, frame = 8
 25055              		@ frame_needed = 0, uses_anonymous_args = 0
 25056              		.loc 1 11920 1 is_stmt 0 view .LVU7284
 25057 0000 30B5     		push	{r4, r5, lr}
 25058              		.cfi_def_cfa_offset 12
 25059              		.cfi_offset 4, -12
 25060              		.cfi_offset 5, -8
 25061              		.cfi_offset 14, -4
 25062 0002 83B0     		sub	sp, sp, #12
 25063              		.cfi_def_cfa_offset 24
11921:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25064              		.loc 1 11921 5 is_stmt 1 view .LVU7285
 25065              	.LVL3245:
11922:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25066              		.loc 1 11922 5 view .LVU7286
 25067              		.loc 1 11922 8 is_stmt 0 view .LVU7287
 25068 0004 0023     		movs	r3, #0
 25069 0006 8DF80730 		strb	r3, [sp, #7]
11923:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25070              		.loc 1 11923 5 is_stmt 1 view .LVU7288
 25071              	.LVL3246:
11924:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/ccOloYeZ.s 			page 705


 25072              		.loc 1 11924 5 view .LVU7289
11925:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 25073              		.loc 1 11925 5 view .LVU7290
 25074              		.loc 1 11925 8 is_stmt 0 view .LVU7291
 25075 000a 8DF80630 		strb	r3, [sp, #6]
11926:Core/Src/bno055.c **** 
11927:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11928:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25076              		.loc 1 11928 5 is_stmt 1 view .LVU7292
 25077              		.loc 1 11928 18 is_stmt 0 view .LVU7293
 25078 000e 2C4B     		ldr	r3, .L1765
 25079 0010 1B68     		ldr	r3, [r3]
 25080              		.loc 1 11928 8 view .LVU7294
 25081 0012 002B     		cmp	r3, #0
 25082 0014 50D0     		beq	.L1756
 25083 0016 0546     		mov	r5, r0
11929:Core/Src/bno055.c ****     {
11930:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11931:Core/Src/bno055.c ****     }
11932:Core/Src/bno055.c ****     else
11933:Core/Src/bno055.c ****     {
11934:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11935:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11936:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11937:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 25084              		.loc 1 11937 9 is_stmt 1 view .LVU7295
 25085              		.loc 1 11937 19 is_stmt 0 view .LVU7296
 25086 0018 0DF10600 		add	r0, sp, #6
 25087              	.LVL3247:
 25088              		.loc 1 11937 19 view .LVU7297
 25089 001c FFF7FEFF 		bl	bno055_get_operation_mode
 25090              	.LVL3248:
11938:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 25091              		.loc 1 11938 9 is_stmt 1 view .LVU7298
 25092              		.loc 1 11938 12 is_stmt 0 view .LVU7299
 25093 0020 0446     		mov	r4, r0
 25094 0022 0028     		cmp	r0, #0
 25095 0024 34D1     		bne	.L1757
11939:Core/Src/bno055.c ****         {
11940:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25096              		.loc 1 11940 13 is_stmt 1 view .LVU7300
 25097              		.loc 1 11940 32 is_stmt 0 view .LVU7301
 25098 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 25099              		.loc 1 11940 16 view .LVU7302
 25100 002a 1BB9     		cbnz	r3, .L1762
 25101              	.LVL3249:
 25102              	.L1755:
11941:Core/Src/bno055.c ****             {
11942:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11943:Core/Src/bno055.c ****             }
11944:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 25103              		.loc 1 11944 13 is_stmt 1 view .LVU7303
 25104              		.loc 1 11944 16 is_stmt 0 view .LVU7304
 25105 002c 44B1     		cbz	r4, .L1763
11945:Core/Src/bno055.c ****             {
11946:Core/Src/bno055.c ****                 /* Write page as one */
11947:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
ARM GAS  /tmp/ccOloYeZ.s 			page 706


11948:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11949:Core/Src/bno055.c ****                 {
11950:Core/Src/bno055.c ****                     if (mag_operation_mode_u8 < BNO055_MAG_OPR_MODE_RANGE)
11951:Core/Src/bno055.c ****                     {
11952:Core/Src/bno055.c ****                         /* Write the value
11953:Core/Src/bno055.c ****                          * of mag operation mode*/
11954:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11955:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
11956:Core/Src/bno055.c ****                                                                   &data_u8r,
11957:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11958:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11959:Core/Src/bno055.c ****                         {
11960:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_MAG_OPERATION_MODE, mag
11961:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11962:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
11963:Core/Src/bno055.c ****                                                                         &data_u8r,
11964:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11965:Core/Src/bno055.c ****                         }
11966:Core/Src/bno055.c ****                     }
11967:Core/Src/bno055.c ****                     else
11968:Core/Src/bno055.c ****                     {
11969:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11970:Core/Src/bno055.c ****                     }
11971:Core/Src/bno055.c ****                 }
11972:Core/Src/bno055.c ****                 else
11973:Core/Src/bno055.c ****                 {
11974:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11975:Core/Src/bno055.c ****                 }
11976:Core/Src/bno055.c ****             }
11977:Core/Src/bno055.c ****             else
11978:Core/Src/bno055.c ****             {
11979:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 25106              		.loc 1 11979 26 view .LVU7305
 25107 002e 4FF0FF34 		mov	r4, #-1
 25108              	.LVL3250:
 25109              		.loc 1 11979 26 view .LVU7306
 25110 0032 2FE0     		b	.L1754
 25111              	.LVL3251:
 25112              	.L1762:
11942:Core/Src/bno055.c ****             }
 25113              		.loc 1 11942 17 is_stmt 1 view .LVU7307
11942:Core/Src/bno055.c ****             }
 25114              		.loc 1 11942 28 is_stmt 0 view .LVU7308
 25115 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 25116              	.LVL3252:
11942:Core/Src/bno055.c ****             }
 25117              		.loc 1 11942 25 view .LVU7309
 25118 0038 54FA80F4 		uxtab	r4, r4, r0
 25119 003c 64B2     		sxtb	r4, r4
 25120              	.LVL3253:
11942:Core/Src/bno055.c ****             }
 25121              		.loc 1 11942 25 view .LVU7310
 25122 003e F5E7     		b	.L1755
 25123              	.L1763:
11947:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25124              		.loc 1 11947 17 is_stmt 1 view .LVU7311
11947:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
ARM GAS  /tmp/ccOloYeZ.s 			page 707


 25125              		.loc 1 11947 30 is_stmt 0 view .LVU7312
 25126 0040 0120     		movs	r0, #1
 25127 0042 FFF7FEFF 		bl	bno055_write_page_id
 25128              	.LVL3254:
11948:Core/Src/bno055.c ****                 {
 25129              		.loc 1 11948 17 is_stmt 1 view .LVU7313
11948:Core/Src/bno055.c ****                 {
 25130              		.loc 1 11948 20 is_stmt 0 view .LVU7314
 25131 0046 58BB     		cbnz	r0, .L1759
11950:Core/Src/bno055.c ****                     {
 25132              		.loc 1 11950 21 is_stmt 1 view .LVU7315
11950:Core/Src/bno055.c ****                     {
 25133              		.loc 1 11950 24 is_stmt 0 view .LVU7316
 25134 0048 042D     		cmp	r5, #4
 25135 004a 2CD8     		bhi	.L1760
11954:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
 25136              		.loc 1 11954 25 is_stmt 1 view .LVU7317
11954:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
 25137              		.loc 1 11954 44 is_stmt 0 view .LVU7318
 25138 004c 1C4B     		ldr	r3, .L1765
 25139 004e 1868     		ldr	r0, [r3]
 25140              	.LVL3255:
11954:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
 25141              		.loc 1 11954 44 view .LVU7319
 25142 0050 0469     		ldr	r4, [r0, #16]
 25143              	.LVL3256:
11954:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
 25144              		.loc 1 11954 36 view .LVU7320
 25145 0052 0123     		movs	r3, #1
 25146 0054 0DF10702 		add	r2, sp, #7
 25147 0058 0921     		movs	r1, #9
 25148 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25149 005c A047     		blx	r4
 25150              	.LVL3257:
11958:Core/Src/bno055.c ****                         {
 25151              		.loc 1 11958 25 is_stmt 1 view .LVU7321
11958:Core/Src/bno055.c ****                         {
 25152              		.loc 1 11958 28 is_stmt 0 view .LVU7322
 25153 005e 0446     		mov	r4, r0
 25154 0060 C0B9     		cbnz	r0, .L1754
11960:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25155              		.loc 1 11960 29 is_stmt 1 view .LVU7323
11960:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25156              		.loc 1 11960 40 is_stmt 0 view .LVU7324
 25157 0062 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 25158 0066 E800     		lsls	r0, r5, #3
 25159              	.LVL3258:
11960:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25160              		.loc 1 11960 40 view .LVU7325
 25161 0068 00F01800 		and	r0, r0, #24
 25162 006c 23F01803 		bic	r3, r3, #24
 25163 0070 0343     		orrs	r3, r3, r0
11960:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25164              		.loc 1 11960 38 view .LVU7326
 25165 0072 8DF80730 		strb	r3, [sp, #7]
11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 25166              		.loc 1 11961 29 is_stmt 1 view .LVU7327
ARM GAS  /tmp/ccOloYeZ.s 			page 708


11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 25167              		.loc 1 11961 49 is_stmt 0 view .LVU7328
 25168 0076 124B     		ldr	r3, .L1765
 25169 0078 1868     		ldr	r0, [r3]
 25170 007a C568     		ldr	r5, [r0, #12]
11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 25171              		.loc 1 11961 41 view .LVU7329
 25172 007c 0123     		movs	r3, #1
 25173 007e 0DF10702 		add	r2, sp, #7
 25174 0082 0921     		movs	r1, #9
 25175 0084 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25176 0086 A847     		blx	r5
 25177              	.LVL3259:
11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 25178              		.loc 1 11961 38 view .LVU7330
 25179 0088 54FA80F0 		uxtab	r0, r4, r0
 25180 008c 44B2     		sxtb	r4, r0
 25181              	.LVL3260:
11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 25182              		.loc 1 11961 38 view .LVU7331
 25183 008e 01E0     		b	.L1754
 25184              	.LVL3261:
 25185              	.L1757:
11980:Core/Src/bno055.c ****             }
11981:Core/Src/bno055.c ****         }
11982:Core/Src/bno055.c ****         else
11983:Core/Src/bno055.c ****         {
11984:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 25186              		.loc 1 11984 22 view .LVU7332
 25187 0090 4FF0FF34 		mov	r4, #-1
 25188              	.LVL3262:
 25189              	.L1754:
11985:Core/Src/bno055.c ****         }
11986:Core/Src/bno055.c ****     }
11987:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25190              		.loc 1 11987 5 is_stmt 1 view .LVU7333
 25191              		.loc 1 11987 24 is_stmt 0 view .LVU7334
 25192 0094 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 25193              		.loc 1 11987 8 view .LVU7335
 25194 0098 40B9     		cbnz	r0, .L1764
 25195              	.LVL3263:
 25196              	.L1753:
11988:Core/Src/bno055.c ****     {
11989:Core/Src/bno055.c ****         /* set the operation mode of
11990:Core/Src/bno055.c ****          * previous operation mode*/
11991:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11992:Core/Src/bno055.c ****     }
11993:Core/Src/bno055.c **** 
11994:Core/Src/bno055.c ****     return com_rslt;
11995:Core/Src/bno055.c **** }
 25197              		.loc 1 11995 1 view .LVU7336
 25198 009a 2046     		mov	r0, r4
 25199 009c 03B0     		add	sp, sp, #12
 25200              		.cfi_remember_state
 25201              		.cfi_def_cfa_offset 12
 25202              		@ sp needed
 25203 009e 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccOloYeZ.s 			page 709


 25204              	.LVL3264:
 25205              	.L1759:
 25206              		.cfi_restore_state
11974:Core/Src/bno055.c ****                 }
 25207              		.loc 1 11974 30 view .LVU7337
 25208 00a0 4FF0FF34 		mov	r4, #-1
 25209              	.LVL3265:
11974:Core/Src/bno055.c ****                 }
 25210              		.loc 1 11974 30 view .LVU7338
 25211 00a4 F6E7     		b	.L1754
 25212              	.LVL3266:
 25213              	.L1760:
11969:Core/Src/bno055.c ****                     }
 25214              		.loc 1 11969 34 view .LVU7339
 25215 00a6 6FF00104 		mvn	r4, #1
 25216              	.LVL3267:
11969:Core/Src/bno055.c ****                     }
 25217              		.loc 1 11969 34 view .LVU7340
 25218 00aa F3E7     		b	.L1754
 25219              	.LVL3268:
 25220              	.L1764:
11991:Core/Src/bno055.c ****     }
 25221              		.loc 1 11991 9 is_stmt 1 view .LVU7341
11991:Core/Src/bno055.c ****     }
 25222              		.loc 1 11991 21 is_stmt 0 view .LVU7342
 25223 00ac FFF7FEFF 		bl	bno055_set_operation_mode
 25224              	.LVL3269:
11991:Core/Src/bno055.c ****     }
 25225              		.loc 1 11991 18 view .LVU7343
 25226 00b0 54FA80F0 		uxtab	r0, r4, r0
 25227 00b4 44B2     		sxtb	r4, r0
 25228              	.LVL3270:
11991:Core/Src/bno055.c ****     }
 25229              		.loc 1 11991 18 view .LVU7344
 25230 00b6 F0E7     		b	.L1753
 25231              	.LVL3271:
 25232              	.L1756:
11930:Core/Src/bno055.c ****     }
 25233              		.loc 1 11930 16 view .LVU7345
 25234 00b8 6FF07E04 		mvn	r4, #126
 25235 00bc EDE7     		b	.L1753
 25236              	.L1766:
 25237 00be 00BF     		.align	2
 25238              	.L1765:
 25239 00c0 00000000 		.word	p_bno055
 25240              		.cfi_endproc
 25241              	.LFE184:
 25243              		.section	.text.bno055_get_mag_power_mode,"ax",%progbits
 25244              		.align	1
 25245              		.global	bno055_get_mag_power_mode
 25246              		.syntax unified
 25247              		.thumb
 25248              		.thumb_func
 25250              	bno055_get_mag_power_mode:
 25251              	.LVL3272:
 25252              	.LFB185:
11996:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 710


11997:Core/Src/bno055.c **** /*!
11998:Core/Src/bno055.c ****  *  @brief This API used to read the mag power mode
11999:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 4 to 6
12000:Core/Src/bno055.c ****  *
12001:Core/Src/bno055.c ****  *  @param mag_power_mode_u8 : The value of mag power mode
12002:Core/Src/bno055.c ****  *
12003:Core/Src/bno055.c ****  * mag_power_mode_u8 |   result
12004:Core/Src/bno055.c ****  * --------------------|-----------------
12005:Core/Src/bno055.c ****  *     0x00            | BNO055_MAG_POWER_MODE_NORMAL
12006:Core/Src/bno055.c ****  *     0x01            | BNO055_MAG_POWER_MODE_SLEEP
12007:Core/Src/bno055.c ****  *     0x02            | BNO055_MAG_POWER_MODE_SUSPEND
12008:Core/Src/bno055.c ****  *     0x03            | BNO055_MAG_POWER_MODE_FORCE_MODE
12009:Core/Src/bno055.c ****  *
12010:Core/Src/bno055.c ****  *  @return results of bus communication function
12011:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12012:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12013:Core/Src/bno055.c ****  *
12014:Core/Src/bno055.c ****  *
12015:Core/Src/bno055.c ****  */
12016:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_power_mode(u8 *mag_power_mode_u8)
12017:Core/Src/bno055.c **** {
 25253              		.loc 1 12017 1 is_stmt 1 view -0
 25254              		.cfi_startproc
 25255              		@ args = 0, pretend = 0, frame = 8
 25256              		@ frame_needed = 0, uses_anonymous_args = 0
 25257              		.loc 1 12017 1 is_stmt 0 view .LVU7347
 25258 0000 30B5     		push	{r4, r5, lr}
 25259              		.cfi_def_cfa_offset 12
 25260              		.cfi_offset 4, -12
 25261              		.cfi_offset 5, -8
 25262              		.cfi_offset 14, -4
 25263 0002 83B0     		sub	sp, sp, #12
 25264              		.cfi_def_cfa_offset 24
12018:Core/Src/bno055.c ****     /* Variable used to return value of
12019:Core/Src/bno055.c ****      * communication routine*/
12020:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25265              		.loc 1 12020 5 is_stmt 1 view .LVU7348
 25266              	.LVL3273:
12021:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25267              		.loc 1 12021 5 view .LVU7349
 25268              		.loc 1 12021 8 is_stmt 0 view .LVU7350
 25269 0004 0023     		movs	r3, #0
 25270 0006 8DF80730 		strb	r3, [sp, #7]
12022:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25271              		.loc 1 12022 5 is_stmt 1 view .LVU7351
 25272              	.LVL3274:
12023:Core/Src/bno055.c **** 
12024:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12025:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25273              		.loc 1 12025 5 view .LVU7352
 25274              		.loc 1 12025 18 is_stmt 0 view .LVU7353
 25275 000a 144B     		ldr	r3, .L1775
 25276 000c 1B68     		ldr	r3, [r3]
 25277              		.loc 1 12025 8 view .LVU7354
 25278 000e F3B1     		cbz	r3, .L1771
 25279 0010 0446     		mov	r4, r0
12026:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 711


12027:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12028:Core/Src/bno055.c ****     }
12029:Core/Src/bno055.c ****     else
12030:Core/Src/bno055.c ****     {
12031:Core/Src/bno055.c ****         /*condition check for page, mag power mode is
12032:Core/Src/bno055.c ****          * available in the page one*/
12033:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 25280              		.loc 1 12033 9 is_stmt 1 view .LVU7355
 25281              		.loc 1 12033 21 is_stmt 0 view .LVU7356
 25282 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25283              		.loc 1 12033 12 view .LVU7357
 25284 0014 012B     		cmp	r3, #1
 25285 0016 14D1     		bne	.L1774
 25286              	.LVL3275:
 25287              	.L1769:
12034:Core/Src/bno055.c ****         {
12035:Core/Src/bno055.c ****             /* Write page as one */
12036:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12037:Core/Src/bno055.c ****         }
12038:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 25288              		.loc 1 12038 53 discriminator 1 view .LVU7358
 25289 0018 104B     		ldr	r3, .L1775
 25290 001a 1B68     		ldr	r3, [r3]
 25291 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25292              		.loc 1 12038 41 discriminator 1 view .LVU7359
 25293 001e 012B     		cmp	r3, #1
 25294 0020 18D1     		bne	.L1772
 25295              	.L1770:
12039:Core/Src/bno055.c ****         {
12040:Core/Src/bno055.c ****             /* Read the value of mag power mode */
12041:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 25296              		.loc 1 12041 13 is_stmt 1 view .LVU7360
 25297              		.loc 1 12041 32 is_stmt 0 view .LVU7361
 25298 0022 0E4B     		ldr	r3, .L1775
 25299 0024 1868     		ldr	r0, [r3]
 25300 0026 0569     		ldr	r5, [r0, #16]
 25301              		.loc 1 12041 24 view .LVU7362
 25302 0028 0123     		movs	r3, #1
 25303 002a 0DF10702 		add	r2, sp, #7
 25304 002e 0921     		movs	r1, #9
 25305 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25306 0032 A847     		blx	r5
 25307              	.LVL3276:
12042:Core/Src/bno055.c ****                                                       BNO055_MAG_POWER_MODE_REG,
12043:Core/Src/bno055.c ****                                                       &data_u8r,
12044:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12045:Core/Src/bno055.c ****             *mag_power_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_POWER_MODE);
 25308              		.loc 1 12045 13 is_stmt 1 view .LVU7363
 25309              		.loc 1 12045 34 is_stmt 0 view .LVU7364
 25310 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 25311 0038 C3F34113 		ubfx	r3, r3, #5, #2
 25312              		.loc 1 12045 32 view .LVU7365
 25313 003c 2370     		strb	r3, [r4]
 25314              	.LVL3277:
 25315              	.L1768:
12046:Core/Src/bno055.c ****         }
12047:Core/Src/bno055.c ****         else
ARM GAS  /tmp/ccOloYeZ.s 			page 712


12048:Core/Src/bno055.c ****         {
12049:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12050:Core/Src/bno055.c ****         }
12051:Core/Src/bno055.c ****     }
12052:Core/Src/bno055.c **** 
12053:Core/Src/bno055.c ****     return com_rslt;
12054:Core/Src/bno055.c **** }
 25316              		.loc 1 12054 1 view .LVU7366
 25317 003e 03B0     		add	sp, sp, #12
 25318              		.cfi_remember_state
 25319              		.cfi_def_cfa_offset 12
 25320              		@ sp needed
 25321 0040 30BD     		pop	{r4, r5, pc}
 25322              	.LVL3278:
 25323              	.L1774:
 25324              		.cfi_restore_state
12036:Core/Src/bno055.c ****         }
 25325              		.loc 1 12036 13 is_stmt 1 view .LVU7367
12036:Core/Src/bno055.c ****         }
 25326              		.loc 1 12036 23 is_stmt 0 view .LVU7368
 25327 0042 0120     		movs	r0, #1
 25328              	.LVL3279:
12036:Core/Src/bno055.c ****         }
 25329              		.loc 1 12036 23 view .LVU7369
 25330 0044 FFF7FEFF 		bl	bno055_write_page_id
 25331              	.LVL3280:
12038:Core/Src/bno055.c ****         {
 25332              		.loc 1 12038 9 is_stmt 1 view .LVU7370
12038:Core/Src/bno055.c ****         {
 25333              		.loc 1 12038 12 is_stmt 0 view .LVU7371
 25334 0048 0028     		cmp	r0, #0
 25335 004a EAD0     		beq	.L1770
 25336 004c E4E7     		b	.L1769
 25337              	.LVL3281:
 25338              	.L1771:
12027:Core/Src/bno055.c ****     }
 25339              		.loc 1 12027 16 view .LVU7372
 25340 004e 6FF07E00 		mvn	r0, #126
 25341              	.LVL3282:
12027:Core/Src/bno055.c ****     }
 25342              		.loc 1 12027 16 view .LVU7373
 25343 0052 F4E7     		b	.L1768
 25344              	.LVL3283:
 25345              	.L1772:
12049:Core/Src/bno055.c ****         }
 25346              		.loc 1 12049 22 view .LVU7374
 25347 0054 4FF0FF30 		mov	r0, #-1
 25348 0058 F1E7     		b	.L1768
 25349              	.L1776:
 25350 005a 00BF     		.align	2
 25351              	.L1775:
 25352 005c 00000000 		.word	p_bno055
 25353              		.cfi_endproc
 25354              	.LFE185:
 25356              		.section	.text.bno055_set_mag_power_mode,"ax",%progbits
 25357              		.align	1
 25358              		.global	bno055_set_mag_power_mode
ARM GAS  /tmp/ccOloYeZ.s 			page 713


 25359              		.syntax unified
 25360              		.thumb
 25361              		.thumb_func
 25363              	bno055_set_mag_power_mode:
 25364              	.LVL3284:
 25365              	.LFB186:
12055:Core/Src/bno055.c **** 
12056:Core/Src/bno055.c **** /*!
12057:Core/Src/bno055.c ****  *  @brief This API used to write the mag power mode
12058:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 4 to 6
12059:Core/Src/bno055.c ****  *
12060:Core/Src/bno055.c ****  *  @param mag_power_mode_u8 : The value of mag power mode
12061:Core/Src/bno055.c ****  *
12062:Core/Src/bno055.c ****  * mag_power_mode_u8 |   result
12063:Core/Src/bno055.c ****  * --------------------|-----------------
12064:Core/Src/bno055.c ****  *     0x00            | BNO055_MAG_POWER_MODE_NORMAL
12065:Core/Src/bno055.c ****  *     0x01            | BNO055_MAG_POWER_MODE_SLEEP
12066:Core/Src/bno055.c ****  *     0x02            | BNO055_MAG_POWER_MODE_SUSPEND
12067:Core/Src/bno055.c ****  *     0x03            | BNO055_MAG_POWER_MODE_FORCE_MODE
12068:Core/Src/bno055.c ****  *
12069:Core/Src/bno055.c ****  *  @return results of bus communication function
12070:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12071:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12072:Core/Src/bno055.c ****  *
12073:Core/Src/bno055.c ****  *
12074:Core/Src/bno055.c ****  */
12075:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_power_mode(u8 mag_power_mode_u8)
12076:Core/Src/bno055.c **** {
 25366              		.loc 1 12076 1 is_stmt 1 view -0
 25367              		.cfi_startproc
 25368              		@ args = 0, pretend = 0, frame = 8
 25369              		@ frame_needed = 0, uses_anonymous_args = 0
 25370              		.loc 1 12076 1 is_stmt 0 view .LVU7376
 25371 0000 30B5     		push	{r4, r5, lr}
 25372              		.cfi_def_cfa_offset 12
 25373              		.cfi_offset 4, -12
 25374              		.cfi_offset 5, -8
 25375              		.cfi_offset 14, -4
 25376 0002 83B0     		sub	sp, sp, #12
 25377              		.cfi_def_cfa_offset 24
12077:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25378              		.loc 1 12077 5 is_stmt 1 view .LVU7377
 25379              	.LVL3285:
12078:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25380              		.loc 1 12078 5 view .LVU7378
 25381              		.loc 1 12078 8 is_stmt 0 view .LVU7379
 25382 0004 0023     		movs	r3, #0
 25383 0006 8DF80730 		strb	r3, [sp, #7]
12079:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25384              		.loc 1 12079 5 is_stmt 1 view .LVU7380
 25385              	.LVL3286:
12080:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 25386              		.loc 1 12080 5 view .LVU7381
12081:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 25387              		.loc 1 12081 5 view .LVU7382
 25388              		.loc 1 12081 8 is_stmt 0 view .LVU7383
 25389 000a 8DF80630 		strb	r3, [sp, #6]
ARM GAS  /tmp/ccOloYeZ.s 			page 714


12082:Core/Src/bno055.c **** 
12083:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12084:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25390              		.loc 1 12084 5 is_stmt 1 view .LVU7384
 25391              		.loc 1 12084 18 is_stmt 0 view .LVU7385
 25392 000e 2C4B     		ldr	r3, .L1790
 25393 0010 1B68     		ldr	r3, [r3]
 25394              		.loc 1 12084 8 view .LVU7386
 25395 0012 002B     		cmp	r3, #0
 25396 0014 50D0     		beq	.L1781
 25397 0016 0546     		mov	r5, r0
12085:Core/Src/bno055.c ****     {
12086:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12087:Core/Src/bno055.c ****     }
12088:Core/Src/bno055.c ****     else
12089:Core/Src/bno055.c ****     {
12090:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12091:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12092:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12093:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 25398              		.loc 1 12093 9 is_stmt 1 view .LVU7387
 25399              		.loc 1 12093 19 is_stmt 0 view .LVU7388
 25400 0018 0DF10600 		add	r0, sp, #6
 25401              	.LVL3287:
 25402              		.loc 1 12093 19 view .LVU7389
 25403 001c FFF7FEFF 		bl	bno055_get_operation_mode
 25404              	.LVL3288:
12094:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 25405              		.loc 1 12094 9 is_stmt 1 view .LVU7390
 25406              		.loc 1 12094 12 is_stmt 0 view .LVU7391
 25407 0020 0446     		mov	r4, r0
 25408 0022 0028     		cmp	r0, #0
 25409 0024 34D1     		bne	.L1782
12095:Core/Src/bno055.c ****         {
12096:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25410              		.loc 1 12096 13 is_stmt 1 view .LVU7392
 25411              		.loc 1 12096 32 is_stmt 0 view .LVU7393
 25412 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 25413              		.loc 1 12096 16 view .LVU7394
 25414 002a 1BB9     		cbnz	r3, .L1787
 25415              	.LVL3289:
 25416              	.L1780:
12097:Core/Src/bno055.c ****             {
12098:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12099:Core/Src/bno055.c ****             }
12100:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 25417              		.loc 1 12100 13 is_stmt 1 view .LVU7395
 25418              		.loc 1 12100 16 is_stmt 0 view .LVU7396
 25419 002c 44B1     		cbz	r4, .L1788
12101:Core/Src/bno055.c ****             {
12102:Core/Src/bno055.c ****                 /* Write page as one */
12103:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12104:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12105:Core/Src/bno055.c ****                 {
12106:Core/Src/bno055.c ****                     if (mag_power_mode_u8 < BNO055_MAG_POWER_MODE_RANGE)
12107:Core/Src/bno055.c ****                     {
12108:Core/Src/bno055.c ****                         /* Write the value of mag power mode*/
ARM GAS  /tmp/ccOloYeZ.s 			page 715


12109:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12110:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
12111:Core/Src/bno055.c ****                                                                   &data_u8r,
12112:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12113:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12114:Core/Src/bno055.c ****                         {
12115:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_MAG_POWER_MODE, mag_pow
12116:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12117:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
12118:Core/Src/bno055.c ****                                                                         &data_u8r,
12119:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12120:Core/Src/bno055.c ****                         }
12121:Core/Src/bno055.c ****                     }
12122:Core/Src/bno055.c ****                     else
12123:Core/Src/bno055.c ****                     {
12124:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12125:Core/Src/bno055.c ****                     }
12126:Core/Src/bno055.c ****                 }
12127:Core/Src/bno055.c ****                 else
12128:Core/Src/bno055.c ****                 {
12129:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12130:Core/Src/bno055.c ****                 }
12131:Core/Src/bno055.c ****             }
12132:Core/Src/bno055.c ****             else
12133:Core/Src/bno055.c ****             {
12134:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 25420              		.loc 1 12134 26 view .LVU7397
 25421 002e 4FF0FF34 		mov	r4, #-1
 25422              	.LVL3290:
 25423              		.loc 1 12134 26 view .LVU7398
 25424 0032 2FE0     		b	.L1779
 25425              	.LVL3291:
 25426              	.L1787:
12098:Core/Src/bno055.c ****             }
 25427              		.loc 1 12098 17 is_stmt 1 view .LVU7399
12098:Core/Src/bno055.c ****             }
 25428              		.loc 1 12098 28 is_stmt 0 view .LVU7400
 25429 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 25430              	.LVL3292:
12098:Core/Src/bno055.c ****             }
 25431              		.loc 1 12098 25 view .LVU7401
 25432 0038 54FA80F4 		uxtab	r4, r4, r0
 25433 003c 64B2     		sxtb	r4, r4
 25434              	.LVL3293:
12098:Core/Src/bno055.c ****             }
 25435              		.loc 1 12098 25 view .LVU7402
 25436 003e F5E7     		b	.L1780
 25437              	.L1788:
12103:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25438              		.loc 1 12103 17 is_stmt 1 view .LVU7403
12103:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25439              		.loc 1 12103 30 is_stmt 0 view .LVU7404
 25440 0040 0120     		movs	r0, #1
 25441 0042 FFF7FEFF 		bl	bno055_write_page_id
 25442              	.LVL3294:
12104:Core/Src/bno055.c ****                 {
 25443              		.loc 1 12104 17 is_stmt 1 view .LVU7405
ARM GAS  /tmp/ccOloYeZ.s 			page 716


12104:Core/Src/bno055.c ****                 {
 25444              		.loc 1 12104 20 is_stmt 0 view .LVU7406
 25445 0046 58BB     		cbnz	r0, .L1784
12106:Core/Src/bno055.c ****                     {
 25446              		.loc 1 12106 21 is_stmt 1 view .LVU7407
12106:Core/Src/bno055.c ****                     {
 25447              		.loc 1 12106 24 is_stmt 0 view .LVU7408
 25448 0048 032D     		cmp	r5, #3
 25449 004a 2CD8     		bhi	.L1785
12109:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
 25450              		.loc 1 12109 25 is_stmt 1 view .LVU7409
12109:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
 25451              		.loc 1 12109 44 is_stmt 0 view .LVU7410
 25452 004c 1C4B     		ldr	r3, .L1790
 25453 004e 1868     		ldr	r0, [r3]
 25454              	.LVL3295:
12109:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
 25455              		.loc 1 12109 44 view .LVU7411
 25456 0050 0469     		ldr	r4, [r0, #16]
 25457              	.LVL3296:
12109:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
 25458              		.loc 1 12109 36 view .LVU7412
 25459 0052 0123     		movs	r3, #1
 25460 0054 0DF10702 		add	r2, sp, #7
 25461 0058 0921     		movs	r1, #9
 25462 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25463 005c A047     		blx	r4
 25464              	.LVL3297:
12113:Core/Src/bno055.c ****                         {
 25465              		.loc 1 12113 25 is_stmt 1 view .LVU7413
12113:Core/Src/bno055.c ****                         {
 25466              		.loc 1 12113 28 is_stmt 0 view .LVU7414
 25467 005e 0446     		mov	r4, r0
 25468 0060 C0B9     		cbnz	r0, .L1779
12115:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25469              		.loc 1 12115 29 is_stmt 1 view .LVU7415
12115:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25470              		.loc 1 12115 40 is_stmt 0 view .LVU7416
 25471 0062 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 25472 0066 6801     		lsls	r0, r5, #5
 25473              	.LVL3298:
12115:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25474              		.loc 1 12115 40 view .LVU7417
 25475 0068 00F06000 		and	r0, r0, #96
 25476 006c 23F06003 		bic	r3, r3, #96
 25477 0070 0343     		orrs	r3, r3, r0
12115:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25478              		.loc 1 12115 38 view .LVU7418
 25479 0072 8DF80730 		strb	r3, [sp, #7]
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
 25480              		.loc 1 12116 29 is_stmt 1 view .LVU7419
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
 25481              		.loc 1 12116 49 is_stmt 0 view .LVU7420
 25482 0076 124B     		ldr	r3, .L1790
 25483 0078 1868     		ldr	r0, [r3]
 25484 007a C568     		ldr	r5, [r0, #12]
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
ARM GAS  /tmp/ccOloYeZ.s 			page 717


 25485              		.loc 1 12116 41 view .LVU7421
 25486 007c 0123     		movs	r3, #1
 25487 007e 0DF10702 		add	r2, sp, #7
 25488 0082 0921     		movs	r1, #9
 25489 0084 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25490 0086 A847     		blx	r5
 25491              	.LVL3299:
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
 25492              		.loc 1 12116 38 view .LVU7422
 25493 0088 54FA80F0 		uxtab	r0, r4, r0
 25494 008c 44B2     		sxtb	r4, r0
 25495              	.LVL3300:
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
 25496              		.loc 1 12116 38 view .LVU7423
 25497 008e 01E0     		b	.L1779
 25498              	.LVL3301:
 25499              	.L1782:
12135:Core/Src/bno055.c ****             }
12136:Core/Src/bno055.c ****         }
12137:Core/Src/bno055.c ****         else
12138:Core/Src/bno055.c ****         {
12139:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 25500              		.loc 1 12139 22 view .LVU7424
 25501 0090 4FF0FF34 		mov	r4, #-1
 25502              	.LVL3302:
 25503              	.L1779:
12140:Core/Src/bno055.c ****         }
12141:Core/Src/bno055.c ****     }
12142:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25504              		.loc 1 12142 5 is_stmt 1 view .LVU7425
 25505              		.loc 1 12142 24 is_stmt 0 view .LVU7426
 25506 0094 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 25507              		.loc 1 12142 8 view .LVU7427
 25508 0098 40B9     		cbnz	r0, .L1789
 25509              	.LVL3303:
 25510              	.L1778:
12143:Core/Src/bno055.c ****     {
12144:Core/Src/bno055.c ****         /* set the operation mode of
12145:Core/Src/bno055.c ****          * previous operation mode*/
12146:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12147:Core/Src/bno055.c ****     }
12148:Core/Src/bno055.c **** 
12149:Core/Src/bno055.c ****     return com_rslt;
12150:Core/Src/bno055.c **** }
 25511              		.loc 1 12150 1 view .LVU7428
 25512 009a 2046     		mov	r0, r4
 25513 009c 03B0     		add	sp, sp, #12
 25514              		.cfi_remember_state
 25515              		.cfi_def_cfa_offset 12
 25516              		@ sp needed
 25517 009e 30BD     		pop	{r4, r5, pc}
 25518              	.LVL3304:
 25519              	.L1784:
 25520              		.cfi_restore_state
12129:Core/Src/bno055.c ****                 }
 25521              		.loc 1 12129 30 view .LVU7429
 25522 00a0 4FF0FF34 		mov	r4, #-1
ARM GAS  /tmp/ccOloYeZ.s 			page 718


 25523              	.LVL3305:
12129:Core/Src/bno055.c ****                 }
 25524              		.loc 1 12129 30 view .LVU7430
 25525 00a4 F6E7     		b	.L1779
 25526              	.LVL3306:
 25527              	.L1785:
12124:Core/Src/bno055.c ****                     }
 25528              		.loc 1 12124 34 view .LVU7431
 25529 00a6 6FF00104 		mvn	r4, #1
 25530              	.LVL3307:
12124:Core/Src/bno055.c ****                     }
 25531              		.loc 1 12124 34 view .LVU7432
 25532 00aa F3E7     		b	.L1779
 25533              	.LVL3308:
 25534              	.L1789:
12146:Core/Src/bno055.c ****     }
 25535              		.loc 1 12146 9 is_stmt 1 view .LVU7433
12146:Core/Src/bno055.c ****     }
 25536              		.loc 1 12146 21 is_stmt 0 view .LVU7434
 25537 00ac FFF7FEFF 		bl	bno055_set_operation_mode
 25538              	.LVL3309:
12146:Core/Src/bno055.c ****     }
 25539              		.loc 1 12146 18 view .LVU7435
 25540 00b0 54FA80F0 		uxtab	r0, r4, r0
 25541 00b4 44B2     		sxtb	r4, r0
 25542              	.LVL3310:
12146:Core/Src/bno055.c ****     }
 25543              		.loc 1 12146 18 view .LVU7436
 25544 00b6 F0E7     		b	.L1778
 25545              	.LVL3311:
 25546              	.L1781:
12086:Core/Src/bno055.c ****     }
 25547              		.loc 1 12086 16 view .LVU7437
 25548 00b8 6FF07E04 		mvn	r4, #126
 25549 00bc EDE7     		b	.L1778
 25550              	.L1791:
 25551 00be 00BF     		.align	2
 25552              	.L1790:
 25553 00c0 00000000 		.word	p_bno055
 25554              		.cfi_endproc
 25555              	.LFE186:
 25557              		.section	.text.bno055_get_gyro_range,"ax",%progbits
 25558              		.align	1
 25559              		.global	bno055_get_gyro_range
 25560              		.syntax unified
 25561              		.thumb
 25562              		.thumb_func
 25564              	bno055_get_gyro_range:
 25565              	.LVL3312:
 25566              	.LFB187:
12151:Core/Src/bno055.c **** 
12152:Core/Src/bno055.c **** /*!
12153:Core/Src/bno055.c ****  *  @brief This API used to read the gyro range
12154:Core/Src/bno055.c ****  *  from page one register from 0x0A bit 0 to 3
12155:Core/Src/bno055.c ****  *
12156:Core/Src/bno055.c ****  *  @param gyro_range_u8 : The value of gyro range
12157:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 719


12158:Core/Src/bno055.c ****  *     gyro_range_u8 |   result
12159:Core/Src/bno055.c ****  * --------------------|-----------------
12160:Core/Src/bno055.c ****  *     0x00            | BNO055_GYRO_RANGE_2000DPS
12161:Core/Src/bno055.c ****  *     0x01            | BNO055_GYRO_RANGE_1000DPS
12162:Core/Src/bno055.c ****  *     0x02            | BNO055_GYRO_RANGE_500DPS
12163:Core/Src/bno055.c ****  *     0x03            | BNO055_GYRO_RANGE_250DPS
12164:Core/Src/bno055.c ****  *     0x04            | BNO055_GYRO_RANGE_125DPS
12165:Core/Src/bno055.c ****  *
12166:Core/Src/bno055.c ****  *  @return results of bus communication function
12167:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12168:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12169:Core/Src/bno055.c ****  *
12170:Core/Src/bno055.c ****  *
12171:Core/Src/bno055.c ****  */
12172:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_range(u8 *gyro_range_u8)
12173:Core/Src/bno055.c **** {
 25567              		.loc 1 12173 1 is_stmt 1 view -0
 25568              		.cfi_startproc
 25569              		@ args = 0, pretend = 0, frame = 8
 25570              		@ frame_needed = 0, uses_anonymous_args = 0
 25571              		.loc 1 12173 1 is_stmt 0 view .LVU7439
 25572 0000 30B5     		push	{r4, r5, lr}
 25573              		.cfi_def_cfa_offset 12
 25574              		.cfi_offset 4, -12
 25575              		.cfi_offset 5, -8
 25576              		.cfi_offset 14, -4
 25577 0002 83B0     		sub	sp, sp, #12
 25578              		.cfi_def_cfa_offset 24
12174:Core/Src/bno055.c ****     /* Variable used to return value of
12175:Core/Src/bno055.c ****      * communication routine*/
12176:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25579              		.loc 1 12176 5 is_stmt 1 view .LVU7440
 25580              	.LVL3313:
12177:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25581              		.loc 1 12177 5 view .LVU7441
 25582              		.loc 1 12177 8 is_stmt 0 view .LVU7442
 25583 0004 0023     		movs	r3, #0
 25584 0006 8DF80730 		strb	r3, [sp, #7]
12178:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25585              		.loc 1 12178 5 is_stmt 1 view .LVU7443
 25586              	.LVL3314:
12179:Core/Src/bno055.c **** 
12180:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12181:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25587              		.loc 1 12181 5 view .LVU7444
 25588              		.loc 1 12181 18 is_stmt 0 view .LVU7445
 25589 000a 144B     		ldr	r3, .L1800
 25590 000c 1B68     		ldr	r3, [r3]
 25591              		.loc 1 12181 8 view .LVU7446
 25592 000e F3B1     		cbz	r3, .L1796
 25593 0010 0446     		mov	r4, r0
12182:Core/Src/bno055.c ****     {
12183:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12184:Core/Src/bno055.c ****     }
12185:Core/Src/bno055.c ****     else
12186:Core/Src/bno055.c ****     {
12187:Core/Src/bno055.c ****         /*condition check for page, gyro range is
ARM GAS  /tmp/ccOloYeZ.s 			page 720


12188:Core/Src/bno055.c ****          * available in the page one*/
12189:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 25594              		.loc 1 12189 9 is_stmt 1 view .LVU7447
 25595              		.loc 1 12189 21 is_stmt 0 view .LVU7448
 25596 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25597              		.loc 1 12189 12 view .LVU7449
 25598 0014 012B     		cmp	r3, #1
 25599 0016 14D1     		bne	.L1799
 25600              	.LVL3315:
 25601              	.L1794:
12190:Core/Src/bno055.c ****         {
12191:Core/Src/bno055.c ****             /* Write page as one */
12192:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12193:Core/Src/bno055.c ****         }
12194:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 25602              		.loc 1 12194 53 discriminator 1 view .LVU7450
 25603 0018 104B     		ldr	r3, .L1800
 25604 001a 1B68     		ldr	r3, [r3]
 25605 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25606              		.loc 1 12194 41 discriminator 1 view .LVU7451
 25607 001e 012B     		cmp	r3, #1
 25608 0020 18D1     		bne	.L1797
 25609              	.L1795:
12195:Core/Src/bno055.c ****         {
12196:Core/Src/bno055.c ****             /* Read the value of gyro range */
12197:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 25610              		.loc 1 12197 13 is_stmt 1 view .LVU7452
 25611              		.loc 1 12197 32 is_stmt 0 view .LVU7453
 25612 0022 0E4B     		ldr	r3, .L1800
 25613 0024 1868     		ldr	r0, [r3]
 25614 0026 0569     		ldr	r5, [r0, #16]
 25615              		.loc 1 12197 24 view .LVU7454
 25616 0028 0123     		movs	r3, #1
 25617 002a 0DF10702 		add	r2, sp, #7
 25618 002e 0A21     		movs	r1, #10
 25619 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25620 0032 A847     		blx	r5
 25621              	.LVL3316:
12198:Core/Src/bno055.c ****                                                       BNO055_GYRO_RANGE_REG,
12199:Core/Src/bno055.c ****                                                       &data_u8r,
12200:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12201:Core/Src/bno055.c ****             *gyro_range_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_RANGE);
 25622              		.loc 1 12201 13 is_stmt 1 view .LVU7455
 25623              		.loc 1 12201 30 is_stmt 0 view .LVU7456
 25624 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 25625 0038 03F00703 		and	r3, r3, #7
 25626              		.loc 1 12201 28 view .LVU7457
 25627 003c 2370     		strb	r3, [r4]
 25628              	.LVL3317:
 25629              	.L1793:
12202:Core/Src/bno055.c ****         }
12203:Core/Src/bno055.c ****         else
12204:Core/Src/bno055.c ****         {
12205:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12206:Core/Src/bno055.c ****         }
12207:Core/Src/bno055.c ****     }
12208:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 721


12209:Core/Src/bno055.c ****     return com_rslt;
12210:Core/Src/bno055.c **** }
 25630              		.loc 1 12210 1 view .LVU7458
 25631 003e 03B0     		add	sp, sp, #12
 25632              		.cfi_remember_state
 25633              		.cfi_def_cfa_offset 12
 25634              		@ sp needed
 25635 0040 30BD     		pop	{r4, r5, pc}
 25636              	.LVL3318:
 25637              	.L1799:
 25638              		.cfi_restore_state
12192:Core/Src/bno055.c ****         }
 25639              		.loc 1 12192 13 is_stmt 1 view .LVU7459
12192:Core/Src/bno055.c ****         }
 25640              		.loc 1 12192 23 is_stmt 0 view .LVU7460
 25641 0042 0120     		movs	r0, #1
 25642              	.LVL3319:
12192:Core/Src/bno055.c ****         }
 25643              		.loc 1 12192 23 view .LVU7461
 25644 0044 FFF7FEFF 		bl	bno055_write_page_id
 25645              	.LVL3320:
12194:Core/Src/bno055.c ****         {
 25646              		.loc 1 12194 9 is_stmt 1 view .LVU7462
12194:Core/Src/bno055.c ****         {
 25647              		.loc 1 12194 12 is_stmt 0 view .LVU7463
 25648 0048 0028     		cmp	r0, #0
 25649 004a EAD0     		beq	.L1795
 25650 004c E4E7     		b	.L1794
 25651              	.LVL3321:
 25652              	.L1796:
12183:Core/Src/bno055.c ****     }
 25653              		.loc 1 12183 16 view .LVU7464
 25654 004e 6FF07E00 		mvn	r0, #126
 25655              	.LVL3322:
12183:Core/Src/bno055.c ****     }
 25656              		.loc 1 12183 16 view .LVU7465
 25657 0052 F4E7     		b	.L1793
 25658              	.LVL3323:
 25659              	.L1797:
12205:Core/Src/bno055.c ****         }
 25660              		.loc 1 12205 22 view .LVU7466
 25661 0054 4FF0FF30 		mov	r0, #-1
 25662 0058 F1E7     		b	.L1793
 25663              	.L1801:
 25664 005a 00BF     		.align	2
 25665              	.L1800:
 25666 005c 00000000 		.word	p_bno055
 25667              		.cfi_endproc
 25668              	.LFE187:
 25670              		.section	.text.bno055_set_gyro_range,"ax",%progbits
 25671              		.align	1
 25672              		.global	bno055_set_gyro_range
 25673              		.syntax unified
 25674              		.thumb
 25675              		.thumb_func
 25677              	bno055_set_gyro_range:
 25678              	.LVL3324:
ARM GAS  /tmp/ccOloYeZ.s 			page 722


 25679              	.LFB188:
12211:Core/Src/bno055.c **** 
12212:Core/Src/bno055.c **** /*!
12213:Core/Src/bno055.c ****  *  @brief This API used to write the gyro range
12214:Core/Src/bno055.c ****  *  from page one register from 0x0A bit 0 to 3
12215:Core/Src/bno055.c ****  *
12216:Core/Src/bno055.c ****  *  @param gyro_range_u8 : The value of gyro range
12217:Core/Src/bno055.c ****  *
12218:Core/Src/bno055.c ****  *     gyro_range_u8 |   result
12219:Core/Src/bno055.c ****  * --------------------|-----------------
12220:Core/Src/bno055.c ****  *     0x00            | BNO055_GYRO_RANGE_2000DPS
12221:Core/Src/bno055.c ****  *     0x01            | BNO055_GYRO_RANGE_1000DPS
12222:Core/Src/bno055.c ****  *     0x02            | BNO055_GYRO_RANGE_500DPS
12223:Core/Src/bno055.c ****  *     0x03            | BNO055_GYRO_RANGE_250DPS
12224:Core/Src/bno055.c ****  *     0x04            | BNO055_GYRO_RANGE_125DPS
12225:Core/Src/bno055.c ****  *
12226:Core/Src/bno055.c ****  *  @return results of bus communication function
12227:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12228:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12229:Core/Src/bno055.c ****  *
12230:Core/Src/bno055.c ****  *
12231:Core/Src/bno055.c ****  */
12232:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_range(u8 gyro_range_u8)
12233:Core/Src/bno055.c **** {
 25680              		.loc 1 12233 1 is_stmt 1 view -0
 25681              		.cfi_startproc
 25682              		@ args = 0, pretend = 0, frame = 8
 25683              		@ frame_needed = 0, uses_anonymous_args = 0
 25684              		.loc 1 12233 1 is_stmt 0 view .LVU7468
 25685 0000 30B5     		push	{r4, r5, lr}
 25686              		.cfi_def_cfa_offset 12
 25687              		.cfi_offset 4, -12
 25688              		.cfi_offset 5, -8
 25689              		.cfi_offset 14, -4
 25690 0002 83B0     		sub	sp, sp, #12
 25691              		.cfi_def_cfa_offset 24
12234:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25692              		.loc 1 12234 5 is_stmt 1 view .LVU7469
 25693              	.LVL3325:
12235:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25694              		.loc 1 12235 5 view .LVU7470
 25695              		.loc 1 12235 8 is_stmt 0 view .LVU7471
 25696 0004 0023     		movs	r3, #0
 25697 0006 8DF80730 		strb	r3, [sp, #7]
12236:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25698              		.loc 1 12236 5 is_stmt 1 view .LVU7472
 25699              	.LVL3326:
12237:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 25700              		.loc 1 12237 5 view .LVU7473
12238:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 25701              		.loc 1 12238 5 view .LVU7474
 25702              		.loc 1 12238 8 is_stmt 0 view .LVU7475
 25703 000a 8DF80630 		strb	r3, [sp, #6]
12239:Core/Src/bno055.c **** 
12240:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12241:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25704              		.loc 1 12241 5 is_stmt 1 view .LVU7476
ARM GAS  /tmp/ccOloYeZ.s 			page 723


 25705              		.loc 1 12241 18 is_stmt 0 view .LVU7477
 25706 000e 2B4B     		ldr	r3, .L1815
 25707 0010 1B68     		ldr	r3, [r3]
 25708              		.loc 1 12241 8 view .LVU7478
 25709 0012 002B     		cmp	r3, #0
 25710 0014 4ED0     		beq	.L1806
 25711 0016 0546     		mov	r5, r0
12242:Core/Src/bno055.c ****     {
12243:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12244:Core/Src/bno055.c ****     }
12245:Core/Src/bno055.c ****     else
12246:Core/Src/bno055.c ****     {
12247:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12248:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12249:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12250:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 25712              		.loc 1 12250 9 is_stmt 1 view .LVU7479
 25713              		.loc 1 12250 19 is_stmt 0 view .LVU7480
 25714 0018 0DF10600 		add	r0, sp, #6
 25715              	.LVL3327:
 25716              		.loc 1 12250 19 view .LVU7481
 25717 001c FFF7FEFF 		bl	bno055_get_operation_mode
 25718              	.LVL3328:
12251:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 25719              		.loc 1 12251 9 is_stmt 1 view .LVU7482
 25720              		.loc 1 12251 12 is_stmt 0 view .LVU7483
 25721 0020 0446     		mov	r4, r0
 25722 0022 98BB     		cbnz	r0, .L1807
12252:Core/Src/bno055.c ****         {
12253:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25723              		.loc 1 12253 13 is_stmt 1 view .LVU7484
 25724              		.loc 1 12253 32 is_stmt 0 view .LVU7485
 25725 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 25726              		.loc 1 12253 16 view .LVU7486
 25727 0028 1BB9     		cbnz	r3, .L1812
 25728              	.LVL3329:
 25729              	.L1805:
12254:Core/Src/bno055.c ****             {
12255:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12256:Core/Src/bno055.c ****             }
12257:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 25730              		.loc 1 12257 13 is_stmt 1 view .LVU7487
 25731              		.loc 1 12257 16 is_stmt 0 view .LVU7488
 25732 002a 44B1     		cbz	r4, .L1813
12258:Core/Src/bno055.c ****             {
12259:Core/Src/bno055.c ****                 /* Write page as one */
12260:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12261:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12262:Core/Src/bno055.c ****                 {
12263:Core/Src/bno055.c ****                     if (gyro_range_u8 < BNO055_GYRO_RANGE)
12264:Core/Src/bno055.c ****                     {
12265:Core/Src/bno055.c ****                         /* Write the value of gyro range*/
12266:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12267:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
12268:Core/Src/bno055.c ****                                                                   &data_u8r,
12269:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12270:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/ccOloYeZ.s 			page 724


12271:Core/Src/bno055.c ****                         {
12272:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_RANGE, gyro_range_
12273:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12274:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
12275:Core/Src/bno055.c ****                                                                         &data_u8r,
12276:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12277:Core/Src/bno055.c ****                         }
12278:Core/Src/bno055.c ****                     }
12279:Core/Src/bno055.c ****                     else
12280:Core/Src/bno055.c ****                     {
12281:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12282:Core/Src/bno055.c ****                     }
12283:Core/Src/bno055.c ****                 }
12284:Core/Src/bno055.c ****                 else
12285:Core/Src/bno055.c ****                 {
12286:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12287:Core/Src/bno055.c ****                 }
12288:Core/Src/bno055.c ****             }
12289:Core/Src/bno055.c ****             else
12290:Core/Src/bno055.c ****             {
12291:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 25733              		.loc 1 12291 26 view .LVU7489
 25734 002c 4FF0FF34 		mov	r4, #-1
 25735              	.LVL3330:
 25736              		.loc 1 12291 26 view .LVU7490
 25737 0030 2EE0     		b	.L1804
 25738              	.LVL3331:
 25739              	.L1812:
12255:Core/Src/bno055.c ****             }
 25740              		.loc 1 12255 17 is_stmt 1 view .LVU7491
12255:Core/Src/bno055.c ****             }
 25741              		.loc 1 12255 28 is_stmt 0 view .LVU7492
 25742 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 25743              	.LVL3332:
12255:Core/Src/bno055.c ****             }
 25744              		.loc 1 12255 25 view .LVU7493
 25745 0036 54FA80F4 		uxtab	r4, r4, r0
 25746 003a 64B2     		sxtb	r4, r4
 25747              	.LVL3333:
12255:Core/Src/bno055.c ****             }
 25748              		.loc 1 12255 25 view .LVU7494
 25749 003c F5E7     		b	.L1805
 25750              	.L1813:
12260:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25751              		.loc 1 12260 17 is_stmt 1 view .LVU7495
12260:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25752              		.loc 1 12260 30 is_stmt 0 view .LVU7496
 25753 003e 0120     		movs	r0, #1
 25754 0040 FFF7FEFF 		bl	bno055_write_page_id
 25755              	.LVL3334:
12261:Core/Src/bno055.c ****                 {
 25756              		.loc 1 12261 17 is_stmt 1 view .LVU7497
12261:Core/Src/bno055.c ****                 {
 25757              		.loc 1 12261 20 is_stmt 0 view .LVU7498
 25758 0044 50BB     		cbnz	r0, .L1809
12263:Core/Src/bno055.c ****                     {
 25759              		.loc 1 12263 21 is_stmt 1 view .LVU7499
ARM GAS  /tmp/ccOloYeZ.s 			page 725


12263:Core/Src/bno055.c ****                     {
 25760              		.loc 1 12263 24 is_stmt 0 view .LVU7500
 25761 0046 042D     		cmp	r5, #4
 25762 0048 2BD8     		bhi	.L1810
12266:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
 25763              		.loc 1 12266 25 is_stmt 1 view .LVU7501
12266:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
 25764              		.loc 1 12266 44 is_stmt 0 view .LVU7502
 25765 004a 1C4B     		ldr	r3, .L1815
 25766 004c 1868     		ldr	r0, [r3]
 25767              	.LVL3335:
12266:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
 25768              		.loc 1 12266 44 view .LVU7503
 25769 004e 0469     		ldr	r4, [r0, #16]
 25770              	.LVL3336:
12266:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
 25771              		.loc 1 12266 36 view .LVU7504
 25772 0050 0123     		movs	r3, #1
 25773 0052 0DF10702 		add	r2, sp, #7
 25774 0056 0A21     		movs	r1, #10
 25775 0058 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25776 005a A047     		blx	r4
 25777              	.LVL3337:
12270:Core/Src/bno055.c ****                         {
 25778              		.loc 1 12270 25 is_stmt 1 view .LVU7505
12270:Core/Src/bno055.c ****                         {
 25779              		.loc 1 12270 28 is_stmt 0 view .LVU7506
 25780 005c 0446     		mov	r4, r0
 25781 005e B8B9     		cbnz	r0, .L1804
12272:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25782              		.loc 1 12272 29 is_stmt 1 view .LVU7507
12272:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25783              		.loc 1 12272 40 is_stmt 0 view .LVU7508
 25784 0060 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
12272:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25785              		.loc 1 12272 38 view .LVU7509
 25786 0064 23F00703 		bic	r3, r3, #7
 25787 0068 05F00700 		and	r0, r5, #7
 25788              	.LVL3338:
12272:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25789              		.loc 1 12272 38 view .LVU7510
 25790 006c 0343     		orrs	r3, r3, r0
 25791 006e 8DF80730 		strb	r3, [sp, #7]
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 25792              		.loc 1 12273 29 is_stmt 1 view .LVU7511
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 25793              		.loc 1 12273 49 is_stmt 0 view .LVU7512
 25794 0072 124B     		ldr	r3, .L1815
 25795 0074 1868     		ldr	r0, [r3]
 25796 0076 C568     		ldr	r5, [r0, #12]
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 25797              		.loc 1 12273 41 view .LVU7513
 25798 0078 0123     		movs	r3, #1
 25799 007a 0DF10702 		add	r2, sp, #7
 25800 007e 0A21     		movs	r1, #10
 25801 0080 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25802 0082 A847     		blx	r5
ARM GAS  /tmp/ccOloYeZ.s 			page 726


 25803              	.LVL3339:
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 25804              		.loc 1 12273 38 view .LVU7514
 25805 0084 54FA80F0 		uxtab	r0, r4, r0
 25806 0088 44B2     		sxtb	r4, r0
 25807              	.LVL3340:
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 25808              		.loc 1 12273 38 view .LVU7515
 25809 008a 01E0     		b	.L1804
 25810              	.LVL3341:
 25811              	.L1807:
12292:Core/Src/bno055.c ****             }
12293:Core/Src/bno055.c ****         }
12294:Core/Src/bno055.c ****         else
12295:Core/Src/bno055.c ****         {
12296:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 25812              		.loc 1 12296 22 view .LVU7516
 25813 008c 4FF0FF34 		mov	r4, #-1
 25814              	.LVL3342:
 25815              	.L1804:
12297:Core/Src/bno055.c ****         }
12298:Core/Src/bno055.c ****     }
12299:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25816              		.loc 1 12299 5 is_stmt 1 view .LVU7517
 25817              		.loc 1 12299 24 is_stmt 0 view .LVU7518
 25818 0090 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 25819              		.loc 1 12299 8 view .LVU7519
 25820 0094 40B9     		cbnz	r0, .L1814
 25821              	.LVL3343:
 25822              	.L1803:
12300:Core/Src/bno055.c ****     {
12301:Core/Src/bno055.c ****         /* set the operation mode of
12302:Core/Src/bno055.c ****          * previous operation mode*/
12303:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12304:Core/Src/bno055.c ****     }
12305:Core/Src/bno055.c **** 
12306:Core/Src/bno055.c ****     return com_rslt;
12307:Core/Src/bno055.c **** }
 25823              		.loc 1 12307 1 view .LVU7520
 25824 0096 2046     		mov	r0, r4
 25825 0098 03B0     		add	sp, sp, #12
 25826              		.cfi_remember_state
 25827              		.cfi_def_cfa_offset 12
 25828              		@ sp needed
 25829 009a 30BD     		pop	{r4, r5, pc}
 25830              	.LVL3344:
 25831              	.L1809:
 25832              		.cfi_restore_state
12286:Core/Src/bno055.c ****                 }
 25833              		.loc 1 12286 30 view .LVU7521
 25834 009c 4FF0FF34 		mov	r4, #-1
 25835              	.LVL3345:
12286:Core/Src/bno055.c ****                 }
 25836              		.loc 1 12286 30 view .LVU7522
 25837 00a0 F6E7     		b	.L1804
 25838              	.LVL3346:
 25839              	.L1810:
ARM GAS  /tmp/ccOloYeZ.s 			page 727


12281:Core/Src/bno055.c ****                     }
 25840              		.loc 1 12281 34 view .LVU7523
 25841 00a2 6FF00104 		mvn	r4, #1
 25842              	.LVL3347:
12281:Core/Src/bno055.c ****                     }
 25843              		.loc 1 12281 34 view .LVU7524
 25844 00a6 F3E7     		b	.L1804
 25845              	.LVL3348:
 25846              	.L1814:
12303:Core/Src/bno055.c ****     }
 25847              		.loc 1 12303 9 is_stmt 1 view .LVU7525
12303:Core/Src/bno055.c ****     }
 25848              		.loc 1 12303 21 is_stmt 0 view .LVU7526
 25849 00a8 FFF7FEFF 		bl	bno055_set_operation_mode
 25850              	.LVL3349:
12303:Core/Src/bno055.c ****     }
 25851              		.loc 1 12303 18 view .LVU7527
 25852 00ac 54FA80F0 		uxtab	r0, r4, r0
 25853 00b0 44B2     		sxtb	r4, r0
 25854              	.LVL3350:
12303:Core/Src/bno055.c ****     }
 25855              		.loc 1 12303 18 view .LVU7528
 25856 00b2 F0E7     		b	.L1803
 25857              	.LVL3351:
 25858              	.L1806:
12243:Core/Src/bno055.c ****     }
 25859              		.loc 1 12243 16 view .LVU7529
 25860 00b4 6FF07E04 		mvn	r4, #126
 25861 00b8 EDE7     		b	.L1803
 25862              	.L1816:
 25863 00ba 00BF     		.align	2
 25864              	.L1815:
 25865 00bc 00000000 		.word	p_bno055
 25866              		.cfi_endproc
 25867              	.LFE188:
 25869              		.section	.text.bno055_get_gyro_bw,"ax",%progbits
 25870              		.align	1
 25871              		.global	bno055_get_gyro_bw
 25872              		.syntax unified
 25873              		.thumb
 25874              		.thumb_func
 25876              	bno055_get_gyro_bw:
 25877              	.LVL3352:
 25878              	.LFB189:
12308:Core/Src/bno055.c **** 
12309:Core/Src/bno055.c **** /*!
12310:Core/Src/bno055.c ****  *  @brief This API used to read the gyro bandwidth
12311:Core/Src/bno055.c ****  *  from page one register from 0x0A bit 3 to 5
12312:Core/Src/bno055.c ****  *
12313:Core/Src/bno055.c ****  *  @param gyro_bw_u8 : The value of gyro bandwidth
12314:Core/Src/bno055.c ****  *
12315:Core/Src/bno055.c ****  *     gyro_bw_u8    |   result
12316:Core/Src/bno055.c ****  * --------------------|-----------------
12317:Core/Src/bno055.c ****  *     0x00            | BNO055_GYRO_BW_523HZ
12318:Core/Src/bno055.c ****  *     0x01            | BNO055_GYRO_BW_230HZ
12319:Core/Src/bno055.c ****  *     0x02            | BNO055_GYRO_BW_116HZ
12320:Core/Src/bno055.c ****  *     0x03            | BNO055_GYRO_BW_47HZ
ARM GAS  /tmp/ccOloYeZ.s 			page 728


12321:Core/Src/bno055.c ****  *     0x04            | BNO055_GYRO_BW_23HZ
12322:Core/Src/bno055.c ****  *     0x05            | BNO055_GYRO_BW_12HZ
12323:Core/Src/bno055.c ****  *     0x06            | BNO055_GYRO_BW_64HZ
12324:Core/Src/bno055.c ****  *     0x07            | BNO055_GYRO_BW_32HZ
12325:Core/Src/bno055.c ****  *
12326:Core/Src/bno055.c ****  *  @return results of bus communication function
12327:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12328:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12329:Core/Src/bno055.c ****  *
12330:Core/Src/bno055.c ****  *
12331:Core/Src/bno055.c ****  */
12332:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_bw(u8 *gyro_bw_u8)
12333:Core/Src/bno055.c **** {
 25879              		.loc 1 12333 1 is_stmt 1 view -0
 25880              		.cfi_startproc
 25881              		@ args = 0, pretend = 0, frame = 8
 25882              		@ frame_needed = 0, uses_anonymous_args = 0
 25883              		.loc 1 12333 1 is_stmt 0 view .LVU7531
 25884 0000 30B5     		push	{r4, r5, lr}
 25885              		.cfi_def_cfa_offset 12
 25886              		.cfi_offset 4, -12
 25887              		.cfi_offset 5, -8
 25888              		.cfi_offset 14, -4
 25889 0002 83B0     		sub	sp, sp, #12
 25890              		.cfi_def_cfa_offset 24
12334:Core/Src/bno055.c ****     /* Variable used to return value of
12335:Core/Src/bno055.c ****      * communication routine*/
12336:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25891              		.loc 1 12336 5 is_stmt 1 view .LVU7532
 25892              	.LVL3353:
12337:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25893              		.loc 1 12337 5 view .LVU7533
 25894              		.loc 1 12337 8 is_stmt 0 view .LVU7534
 25895 0004 0023     		movs	r3, #0
 25896 0006 8DF80730 		strb	r3, [sp, #7]
12338:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25897              		.loc 1 12338 5 is_stmt 1 view .LVU7535
 25898              	.LVL3354:
12339:Core/Src/bno055.c **** 
12340:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12341:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25899              		.loc 1 12341 5 view .LVU7536
 25900              		.loc 1 12341 18 is_stmt 0 view .LVU7537
 25901 000a 144B     		ldr	r3, .L1825
 25902 000c 1B68     		ldr	r3, [r3]
 25903              		.loc 1 12341 8 view .LVU7538
 25904 000e F3B1     		cbz	r3, .L1821
 25905 0010 0446     		mov	r4, r0
12342:Core/Src/bno055.c ****     {
12343:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12344:Core/Src/bno055.c ****     }
12345:Core/Src/bno055.c ****     else
12346:Core/Src/bno055.c ****     {
12347:Core/Src/bno055.c ****         /*condition check for page, gyro bandwidth is
12348:Core/Src/bno055.c ****          * available in the page one*/
12349:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 25906              		.loc 1 12349 9 is_stmt 1 view .LVU7539
ARM GAS  /tmp/ccOloYeZ.s 			page 729


 25907              		.loc 1 12349 21 is_stmt 0 view .LVU7540
 25908 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25909              		.loc 1 12349 12 view .LVU7541
 25910 0014 012B     		cmp	r3, #1
 25911 0016 14D1     		bne	.L1824
 25912              	.LVL3355:
 25913              	.L1819:
12350:Core/Src/bno055.c ****         {
12351:Core/Src/bno055.c ****             /* Write page as one */
12352:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12353:Core/Src/bno055.c ****         }
12354:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 25914              		.loc 1 12354 53 discriminator 1 view .LVU7542
 25915 0018 104B     		ldr	r3, .L1825
 25916 001a 1B68     		ldr	r3, [r3]
 25917 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25918              		.loc 1 12354 41 discriminator 1 view .LVU7543
 25919 001e 012B     		cmp	r3, #1
 25920 0020 18D1     		bne	.L1822
 25921              	.L1820:
12355:Core/Src/bno055.c ****         {
12356:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 25922              		.loc 1 12356 13 is_stmt 1 view .LVU7544
 25923              		.loc 1 12356 32 is_stmt 0 view .LVU7545
 25924 0022 0E4B     		ldr	r3, .L1825
 25925 0024 1868     		ldr	r0, [r3]
 25926 0026 0569     		ldr	r5, [r0, #16]
 25927              		.loc 1 12356 24 view .LVU7546
 25928 0028 0123     		movs	r3, #1
 25929 002a 0DF10702 		add	r2, sp, #7
 25930 002e 0A21     		movs	r1, #10
 25931 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25932 0032 A847     		blx	r5
 25933              	.LVL3356:
12357:Core/Src/bno055.c ****                                                       BNO055_GYRO_BW_REG,
12358:Core/Src/bno055.c ****                                                       &data_u8r,
12359:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12360:Core/Src/bno055.c ****             *gyro_bw_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_BW);
 25934              		.loc 1 12360 13 is_stmt 1 view .LVU7547
 25935              		.loc 1 12360 27 is_stmt 0 view .LVU7548
 25936 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 25937 0038 C3F3C203 		ubfx	r3, r3, #3, #3
 25938              		.loc 1 12360 25 view .LVU7549
 25939 003c 2370     		strb	r3, [r4]
 25940              	.LVL3357:
 25941              	.L1818:
12361:Core/Src/bno055.c ****         }
12362:Core/Src/bno055.c ****         else
12363:Core/Src/bno055.c ****         {
12364:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12365:Core/Src/bno055.c ****         }
12366:Core/Src/bno055.c ****     }
12367:Core/Src/bno055.c **** 
12368:Core/Src/bno055.c ****     return com_rslt;
12369:Core/Src/bno055.c **** }
 25942              		.loc 1 12369 1 view .LVU7550
 25943 003e 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccOloYeZ.s 			page 730


 25944              		.cfi_remember_state
 25945              		.cfi_def_cfa_offset 12
 25946              		@ sp needed
 25947 0040 30BD     		pop	{r4, r5, pc}
 25948              	.LVL3358:
 25949              	.L1824:
 25950              		.cfi_restore_state
12352:Core/Src/bno055.c ****         }
 25951              		.loc 1 12352 13 is_stmt 1 view .LVU7551
12352:Core/Src/bno055.c ****         }
 25952              		.loc 1 12352 23 is_stmt 0 view .LVU7552
 25953 0042 0120     		movs	r0, #1
 25954              	.LVL3359:
12352:Core/Src/bno055.c ****         }
 25955              		.loc 1 12352 23 view .LVU7553
 25956 0044 FFF7FEFF 		bl	bno055_write_page_id
 25957              	.LVL3360:
12354:Core/Src/bno055.c ****         {
 25958              		.loc 1 12354 9 is_stmt 1 view .LVU7554
12354:Core/Src/bno055.c ****         {
 25959              		.loc 1 12354 12 is_stmt 0 view .LVU7555
 25960 0048 0028     		cmp	r0, #0
 25961 004a EAD0     		beq	.L1820
 25962 004c E4E7     		b	.L1819
 25963              	.LVL3361:
 25964              	.L1821:
12343:Core/Src/bno055.c ****     }
 25965              		.loc 1 12343 16 view .LVU7556
 25966 004e 6FF07E00 		mvn	r0, #126
 25967              	.LVL3362:
12343:Core/Src/bno055.c ****     }
 25968              		.loc 1 12343 16 view .LVU7557
 25969 0052 F4E7     		b	.L1818
 25970              	.LVL3363:
 25971              	.L1822:
12364:Core/Src/bno055.c ****         }
 25972              		.loc 1 12364 22 view .LVU7558
 25973 0054 4FF0FF30 		mov	r0, #-1
 25974 0058 F1E7     		b	.L1818
 25975              	.L1826:
 25976 005a 00BF     		.align	2
 25977              	.L1825:
 25978 005c 00000000 		.word	p_bno055
 25979              		.cfi_endproc
 25980              	.LFE189:
 25982              		.section	.text.bno055_get_gyro_power_mode,"ax",%progbits
 25983              		.align	1
 25984              		.global	bno055_get_gyro_power_mode
 25985              		.syntax unified
 25986              		.thumb
 25987              		.thumb_func
 25989              	bno055_get_gyro_power_mode:
 25990              	.LVL3364:
 25991              	.LFB191:
12370:Core/Src/bno055.c **** 
12371:Core/Src/bno055.c **** /*!
12372:Core/Src/bno055.c ****  *  @brief This API used to write the gyro bandwidth
ARM GAS  /tmp/ccOloYeZ.s 			page 731


12373:Core/Src/bno055.c ****  *  from page one register from 0x0A bit 3 to 5
12374:Core/Src/bno055.c ****  *
12375:Core/Src/bno055.c ****  *  @param gyro_bw_u8 : The value of gyro bandwidth
12376:Core/Src/bno055.c ****  *
12377:Core/Src/bno055.c ****  *     gyro_bw_u8    |   result
12378:Core/Src/bno055.c ****  * --------------------|-----------------
12379:Core/Src/bno055.c ****  *     0x00            | BNO055_GYRO_BW_523HZ
12380:Core/Src/bno055.c ****  *     0x01            | BNO055_GYRO_BW_230HZ
12381:Core/Src/bno055.c ****  *     0x02            | BNO055_GYRO_BW_116HZ
12382:Core/Src/bno055.c ****  *     0x03            | BNO055_GYRO_BW_47HZ
12383:Core/Src/bno055.c ****  *     0x04            | BNO055_GYRO_BW_23HZ
12384:Core/Src/bno055.c ****  *     0x05            | BNO055_GYRO_BW_12HZ
12385:Core/Src/bno055.c ****  *     0x06            | BNO055_GYRO_BW_64HZ
12386:Core/Src/bno055.c ****  *     0x07            | BNO055_GYRO_BW_32HZ
12387:Core/Src/bno055.c ****  *
12388:Core/Src/bno055.c ****  *  @return results of bus communication function
12389:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12390:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12391:Core/Src/bno055.c ****  *
12392:Core/Src/bno055.c ****  *
12393:Core/Src/bno055.c ****  */
12394:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_bw(u8 gyro_bw_u8)
12395:Core/Src/bno055.c **** {
12396:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
12397:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
12398:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
12399:Core/Src/bno055.c ****     u8 gyro_opmode = BNO055_INIT_VALUE;
12400:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
12401:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
12402:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
12403:Core/Src/bno055.c **** 
12404:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12405:Core/Src/bno055.c ****     if (p_bno055 == NULL)
12406:Core/Src/bno055.c ****     {
12407:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12408:Core/Src/bno055.c ****     }
12409:Core/Src/bno055.c ****     else
12410:Core/Src/bno055.c ****     {
12411:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12412:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12413:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12414:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
12415:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
12416:Core/Src/bno055.c ****         {
12417:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
12418:Core/Src/bno055.c ****             {
12419:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12420:Core/Src/bno055.c ****             }
12421:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
12422:Core/Src/bno055.c ****             {
12423:Core/Src/bno055.c ****                 /* Write page as one */
12424:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12425:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12426:Core/Src/bno055.c ****                 {
12427:Core/Src/bno055.c ****                     /* Write the value of gyro bandwidth */
12428:Core/Src/bno055.c ****                     if ((gyro_bw_u8 == BNO055_INIT_VALUE || gyro_bw_u8 > BNO055_INIT_VALUE) &&
12429:Core/Src/bno055.c ****                         gyro_bw_u8 < BNO055_ACCEL_GYRO_BW_RANGE)
ARM GAS  /tmp/ccOloYeZ.s 			page 732


12430:Core/Src/bno055.c ****                     {
12431:Core/Src/bno055.c ****                         switch (gyro_bw_u8)
12432:Core/Src/bno055.c ****                         {
12433:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_523HZ:
12434:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_523HZ;
12435:Core/Src/bno055.c ****                                 break;
12436:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_230HZ:
12437:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_230HZ;
12438:Core/Src/bno055.c ****                                 break;
12439:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_116HZ:
12440:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_116HZ;
12441:Core/Src/bno055.c ****                                 break;
12442:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_47HZ:
12443:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_47HZ;
12444:Core/Src/bno055.c ****                                 break;
12445:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_23HZ:
12446:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_23HZ;
12447:Core/Src/bno055.c ****                                 break;
12448:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_12HZ:
12449:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_12HZ;
12450:Core/Src/bno055.c ****                                 break;
12451:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_64HZ:
12452:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_64HZ;
12453:Core/Src/bno055.c ****                                 break;
12454:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_32HZ:
12455:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_32HZ;
12456:Core/Src/bno055.c ****                                 break;
12457:Core/Src/bno055.c ****                             default:
12458:Core/Src/bno055.c ****                                 break;
12459:Core/Src/bno055.c ****                         }
12460:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12461:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
12462:Core/Src/bno055.c ****                                                                   &data_u8r,
12463:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12464:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12465:Core/Src/bno055.c ****                         {
12466:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_BW, gyro_bw_u8);
12467:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12468:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
12469:Core/Src/bno055.c ****                                                                         &data_u8r,
12470:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12471:Core/Src/bno055.c ****                         }
12472:Core/Src/bno055.c ****                         com_rslt = bno055_get_gyro_power_mode(&gyro_opmode);
12473:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12474:Core/Src/bno055.c ****                         {
12475:Core/Src/bno055.c ****                             if (gyro_opmode == BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE)
12476:Core/Src/bno055.c ****                             {
12477:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
12478:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
12479:Core/Src/bno055.c ****                                 {
12480:Core/Src/bno055.c ****                                     com_rslt += bno055_gyro_set_auto_sleep_durn(gyro_auto_sleep_dur
12481:Core/Src/bno055.c ****                                 }
12482:Core/Src/bno055.c ****                             }
12483:Core/Src/bno055.c ****                         }
12484:Core/Src/bno055.c ****                     }
12485:Core/Src/bno055.c ****                     else
12486:Core/Src/bno055.c ****                     {
ARM GAS  /tmp/ccOloYeZ.s 			page 733


12487:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12488:Core/Src/bno055.c ****                     }
12489:Core/Src/bno055.c ****                 }
12490:Core/Src/bno055.c ****                 else
12491:Core/Src/bno055.c ****                 {
12492:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12493:Core/Src/bno055.c ****                 }
12494:Core/Src/bno055.c ****             }
12495:Core/Src/bno055.c ****             else
12496:Core/Src/bno055.c ****             {
12497:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
12498:Core/Src/bno055.c ****             }
12499:Core/Src/bno055.c ****         }
12500:Core/Src/bno055.c ****         else
12501:Core/Src/bno055.c ****         {
12502:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12503:Core/Src/bno055.c ****         }
12504:Core/Src/bno055.c ****     }
12505:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
12506:Core/Src/bno055.c ****     {
12507:Core/Src/bno055.c ****         /* set the operation mode of
12508:Core/Src/bno055.c ****          * previous operation mode*/
12509:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12510:Core/Src/bno055.c ****     }
12511:Core/Src/bno055.c **** 
12512:Core/Src/bno055.c ****     return com_rslt;
12513:Core/Src/bno055.c **** }
12514:Core/Src/bno055.c **** 
12515:Core/Src/bno055.c **** /*!
12516:Core/Src/bno055.c ****  *  @brief This API used to read the gyro power mode
12517:Core/Src/bno055.c ****  *  from page one register from 0x0B bit 0 to 2
12518:Core/Src/bno055.c ****  *
12519:Core/Src/bno055.c ****  *  @param gyro_power_mode_u8 : The value of gyro power mode
12520:Core/Src/bno055.c ****  *
12521:Core/Src/bno055.c ****  *  gyro_power_mode_u8 |          result
12522:Core/Src/bno055.c ****  * ----------------------|----------------------------
12523:Core/Src/bno055.c ****  *     0x00              | GYRO_OPR_MODE_NORMAL
12524:Core/Src/bno055.c ****  *     0x01              | GYRO_OPR_MODE_FASTPOWERUP
12525:Core/Src/bno055.c ****  *     0x02              | GYRO_OPR_MODE_DEEPSUSPEND
12526:Core/Src/bno055.c ****  *     0x03              | GYRO_OPR_MODE_SUSPEND
12527:Core/Src/bno055.c ****  *     0x04              | GYRO_OPR_MODE_ADVANCE_POWERSAVE
12528:Core/Src/bno055.c ****  *
12529:Core/Src/bno055.c ****  *  @return results of bus communication function
12530:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12531:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12532:Core/Src/bno055.c ****  *
12533:Core/Src/bno055.c ****  *
12534:Core/Src/bno055.c ****  */
12535:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_power_mode(u8 *gyro_power_mode_u8)
12536:Core/Src/bno055.c **** {
 25992              		.loc 1 12536 1 is_stmt 1 view -0
 25993              		.cfi_startproc
 25994              		@ args = 0, pretend = 0, frame = 8
 25995              		@ frame_needed = 0, uses_anonymous_args = 0
 25996              		.loc 1 12536 1 is_stmt 0 view .LVU7560
 25997 0000 30B5     		push	{r4, r5, lr}
 25998              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccOloYeZ.s 			page 734


 25999              		.cfi_offset 4, -12
 26000              		.cfi_offset 5, -8
 26001              		.cfi_offset 14, -4
 26002 0002 83B0     		sub	sp, sp, #12
 26003              		.cfi_def_cfa_offset 24
12537:Core/Src/bno055.c ****     /* Variable used to return value of
12538:Core/Src/bno055.c ****      * communication routine*/
12539:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26004              		.loc 1 12539 5 is_stmt 1 view .LVU7561
 26005              	.LVL3365:
12540:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26006              		.loc 1 12540 5 view .LVU7562
 26007              		.loc 1 12540 8 is_stmt 0 view .LVU7563
 26008 0004 0023     		movs	r3, #0
 26009 0006 8DF80730 		strb	r3, [sp, #7]
12541:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26010              		.loc 1 12541 5 is_stmt 1 view .LVU7564
 26011              	.LVL3366:
12542:Core/Src/bno055.c **** 
12543:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12544:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26012              		.loc 1 12544 5 view .LVU7565
 26013              		.loc 1 12544 18 is_stmt 0 view .LVU7566
 26014 000a 144B     		ldr	r3, .L1835
 26015 000c 1B68     		ldr	r3, [r3]
 26016              		.loc 1 12544 8 view .LVU7567
 26017 000e F3B1     		cbz	r3, .L1831
 26018 0010 0446     		mov	r4, r0
12545:Core/Src/bno055.c ****     {
12546:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12547:Core/Src/bno055.c ****     }
12548:Core/Src/bno055.c ****     else
12549:Core/Src/bno055.c ****     {
12550:Core/Src/bno055.c ****         /*condition check for page, gyro power mode is
12551:Core/Src/bno055.c ****          * available in the page one*/
12552:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 26019              		.loc 1 12552 9 is_stmt 1 view .LVU7568
 26020              		.loc 1 12552 21 is_stmt 0 view .LVU7569
 26021 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26022              		.loc 1 12552 12 view .LVU7570
 26023 0014 012B     		cmp	r3, #1
 26024 0016 14D1     		bne	.L1834
 26025              	.LVL3367:
 26026              	.L1829:
12553:Core/Src/bno055.c ****         {
12554:Core/Src/bno055.c ****             /* Write page as one */
12555:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12556:Core/Src/bno055.c ****         }
12557:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 26027              		.loc 1 12557 53 discriminator 1 view .LVU7571
 26028 0018 104B     		ldr	r3, .L1835
 26029 001a 1B68     		ldr	r3, [r3]
 26030 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26031              		.loc 1 12557 41 discriminator 1 view .LVU7572
 26032 001e 012B     		cmp	r3, #1
 26033 0020 18D1     		bne	.L1832
 26034              	.L1830:
ARM GAS  /tmp/ccOloYeZ.s 			page 735


12558:Core/Src/bno055.c ****         {
12559:Core/Src/bno055.c ****             /* Write the value of gyro power mode*/
12560:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 26035              		.loc 1 12560 13 is_stmt 1 view .LVU7573
 26036              		.loc 1 12560 32 is_stmt 0 view .LVU7574
 26037 0022 0E4B     		ldr	r3, .L1835
 26038 0024 1868     		ldr	r0, [r3]
 26039 0026 0569     		ldr	r5, [r0, #16]
 26040              		.loc 1 12560 24 view .LVU7575
 26041 0028 0123     		movs	r3, #1
 26042 002a 0DF10702 		add	r2, sp, #7
 26043 002e 0B21     		movs	r1, #11
 26044 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26045 0032 A847     		blx	r5
 26046              	.LVL3368:
12561:Core/Src/bno055.c ****                                                       BNO055_GYRO_POWER_MODE_REG,
12562:Core/Src/bno055.c ****                                                       &data_u8r,
12563:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12564:Core/Src/bno055.c ****             *gyro_power_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_POWER_MODE);
 26047              		.loc 1 12564 13 is_stmt 1 view .LVU7576
 26048              		.loc 1 12564 35 is_stmt 0 view .LVU7577
 26049 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26050 0038 03F00703 		and	r3, r3, #7
 26051              		.loc 1 12564 33 view .LVU7578
 26052 003c 2370     		strb	r3, [r4]
 26053              	.LVL3369:
 26054              	.L1828:
12565:Core/Src/bno055.c ****         }
12566:Core/Src/bno055.c ****         else
12567:Core/Src/bno055.c ****         {
12568:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12569:Core/Src/bno055.c ****         }
12570:Core/Src/bno055.c ****     }
12571:Core/Src/bno055.c **** 
12572:Core/Src/bno055.c ****     return com_rslt;
12573:Core/Src/bno055.c **** }
 26055              		.loc 1 12573 1 view .LVU7579
 26056 003e 03B0     		add	sp, sp, #12
 26057              		.cfi_remember_state
 26058              		.cfi_def_cfa_offset 12
 26059              		@ sp needed
 26060 0040 30BD     		pop	{r4, r5, pc}
 26061              	.LVL3370:
 26062              	.L1834:
 26063              		.cfi_restore_state
12555:Core/Src/bno055.c ****         }
 26064              		.loc 1 12555 13 is_stmt 1 view .LVU7580
12555:Core/Src/bno055.c ****         }
 26065              		.loc 1 12555 23 is_stmt 0 view .LVU7581
 26066 0042 0120     		movs	r0, #1
 26067              	.LVL3371:
12555:Core/Src/bno055.c ****         }
 26068              		.loc 1 12555 23 view .LVU7582
 26069 0044 FFF7FEFF 		bl	bno055_write_page_id
 26070              	.LVL3372:
12557:Core/Src/bno055.c ****         {
 26071              		.loc 1 12557 9 is_stmt 1 view .LVU7583
ARM GAS  /tmp/ccOloYeZ.s 			page 736


12557:Core/Src/bno055.c ****         {
 26072              		.loc 1 12557 12 is_stmt 0 view .LVU7584
 26073 0048 0028     		cmp	r0, #0
 26074 004a EAD0     		beq	.L1830
 26075 004c E4E7     		b	.L1829
 26076              	.LVL3373:
 26077              	.L1831:
12546:Core/Src/bno055.c ****     }
 26078              		.loc 1 12546 16 view .LVU7585
 26079 004e 6FF07E00 		mvn	r0, #126
 26080              	.LVL3374:
12546:Core/Src/bno055.c ****     }
 26081              		.loc 1 12546 16 view .LVU7586
 26082 0052 F4E7     		b	.L1828
 26083              	.LVL3375:
 26084              	.L1832:
12568:Core/Src/bno055.c ****         }
 26085              		.loc 1 12568 22 view .LVU7587
 26086 0054 4FF0FF30 		mov	r0, #-1
 26087 0058 F1E7     		b	.L1828
 26088              	.L1836:
 26089 005a 00BF     		.align	2
 26090              	.L1835:
 26091 005c 00000000 		.word	p_bno055
 26092              		.cfi_endproc
 26093              	.LFE191:
 26095              		.section	.text.bno055_get_accel_sleep_tmr_mode,"ax",%progbits
 26096              		.align	1
 26097              		.global	bno055_get_accel_sleep_tmr_mode
 26098              		.syntax unified
 26099              		.thumb
 26100              		.thumb_func
 26102              	bno055_get_accel_sleep_tmr_mode:
 26103              	.LVL3376:
 26104              	.LFB193:
12574:Core/Src/bno055.c **** 
12575:Core/Src/bno055.c **** /*!
12576:Core/Src/bno055.c ****  *  @brief This API used to write the gyro power mode
12577:Core/Src/bno055.c ****  *  from page one register from 0x0B bit 0 to 2
12578:Core/Src/bno055.c ****  *
12579:Core/Src/bno055.c ****  *  @param gyro_power_mode_u8 : The value of gyro power mode
12580:Core/Src/bno055.c ****  *
12581:Core/Src/bno055.c ****  *  gyro_power_mode_u8 |          result
12582:Core/Src/bno055.c ****  * ----------------------|----------------------------
12583:Core/Src/bno055.c ****  *     0x00              | GYRO_OPR_MODE_NORMAL
12584:Core/Src/bno055.c ****  *     0x01              | GYRO_OPR_MODE_FASTPOWERUP
12585:Core/Src/bno055.c ****  *     0x02              | GYRO_OPR_MODE_DEEPSUSPEND
12586:Core/Src/bno055.c ****  *     0x03              | GYRO_OPR_MODE_SUSPEND
12587:Core/Src/bno055.c ****  *     0x04              | GYRO_OPR_MODE_ADVANCE_POWERSAVE
12588:Core/Src/bno055.c ****  *
12589:Core/Src/bno055.c ****  *  @return results of bus communication function
12590:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12591:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12592:Core/Src/bno055.c ****  *
12593:Core/Src/bno055.c ****  *
12594:Core/Src/bno055.c ****  */
12595:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_power_mode(u8 gyro_power_mode_u8)
ARM GAS  /tmp/ccOloYeZ.s 			page 737


12596:Core/Src/bno055.c **** {
12597:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
12598:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
12599:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
12600:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
12601:Core/Src/bno055.c ****     u8 gyro_bw_u8 = BNO055_INIT_VALUE;
12602:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
12603:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
12604:Core/Src/bno055.c **** 
12605:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12606:Core/Src/bno055.c ****     if (p_bno055 == NULL)
12607:Core/Src/bno055.c ****     {
12608:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12609:Core/Src/bno055.c ****     }
12610:Core/Src/bno055.c ****     else
12611:Core/Src/bno055.c ****     {
12612:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12613:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12614:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12615:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
12616:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
12617:Core/Src/bno055.c ****         {
12618:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
12619:Core/Src/bno055.c ****             {
12620:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12621:Core/Src/bno055.c ****             }
12622:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
12623:Core/Src/bno055.c ****             {
12624:Core/Src/bno055.c ****                 /* Write page as one */
12625:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12626:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12627:Core/Src/bno055.c ****                 {
12628:Core/Src/bno055.c ****                     /* Write the value of power mode*/
12629:Core/Src/bno055.c ****                     if ((gyro_power_mode_u8 == BNO055_INIT_VALUE || gyro_power_mode_u8 > BNO055_INI
12630:Core/Src/bno055.c ****                         gyro_power_mode_u8 < BNO055_GYRO_RANGE)
12631:Core/Src/bno055.c ****                     {
12632:Core/Src/bno055.c ****                         switch (gyro_power_mode_u8)
12633:Core/Src/bno055.c ****                         {
12634:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_NORMAL:
12635:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_NORMAL;
12636:Core/Src/bno055.c ****                                 break;
12637:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_FASTPOWERUP:
12638:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_FASTPOWERUP;
12639:Core/Src/bno055.c ****                                 break;
12640:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_DEEPSUSPEND:
12641:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_DEEPSUSPEND;
12642:Core/Src/bno055.c ****                                 break;
12643:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_SUSPEND:
12644:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_SUSPEND;
12645:Core/Src/bno055.c ****                                 break;
12646:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE:
12647:Core/Src/bno055.c ****                                 com_rslt = bno055_get_gyro_bw(&gyro_bw_u8);
12648:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
12649:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
12650:Core/Src/bno055.c ****                                 {
12651:Core/Src/bno055.c ****                                     com_rslt += bno055_gyro_set_auto_sleep_durn(gyro_auto_sleep_dur
12652:Core/Src/bno055.c ****                                 }
ARM GAS  /tmp/ccOloYeZ.s 			page 738


12653:Core/Src/bno055.c ****                                 com_rslt += bno055_write_page_id(BNO055_PAGE_ONE);
12654:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE;
12655:Core/Src/bno055.c ****                                 break;
12656:Core/Src/bno055.c ****                             default:
12657:Core/Src/bno055.c ****                                 break;
12658:Core/Src/bno055.c ****                         }
12659:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12660:Core/Src/bno055.c ****                                                                   BNO055_GYRO_POWER_MODE_REG,
12661:Core/Src/bno055.c ****                                                                   &data_u8r,
12662:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12663:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12664:Core/Src/bno055.c ****                         {
12665:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_POWER_MODE, gyro_p
12666:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12667:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
12668:Core/Src/bno055.c ****                                                                         &data_u8r,
12669:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12670:Core/Src/bno055.c ****                         }
12671:Core/Src/bno055.c ****                     }
12672:Core/Src/bno055.c ****                     else
12673:Core/Src/bno055.c ****                     {
12674:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12675:Core/Src/bno055.c ****                     }
12676:Core/Src/bno055.c ****                 }
12677:Core/Src/bno055.c ****                 else
12678:Core/Src/bno055.c ****                 {
12679:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12680:Core/Src/bno055.c ****                 }
12681:Core/Src/bno055.c ****             }
12682:Core/Src/bno055.c ****             else
12683:Core/Src/bno055.c ****             {
12684:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
12685:Core/Src/bno055.c ****             }
12686:Core/Src/bno055.c ****         }
12687:Core/Src/bno055.c ****         else
12688:Core/Src/bno055.c ****         {
12689:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12690:Core/Src/bno055.c ****         }
12691:Core/Src/bno055.c ****     }
12692:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
12693:Core/Src/bno055.c ****     {
12694:Core/Src/bno055.c ****         /* set the operation mode of
12695:Core/Src/bno055.c ****          * previous operation mode*/
12696:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12697:Core/Src/bno055.c ****     }
12698:Core/Src/bno055.c **** 
12699:Core/Src/bno055.c ****     return com_rslt;
12700:Core/Src/bno055.c **** }
12701:Core/Src/bno055.c **** 
12702:Core/Src/bno055.c **** /*!
12703:Core/Src/bno055.c ****  *  @brief This API used to read the accel sleep mode
12704:Core/Src/bno055.c ****  *  from page one register from 0x0C bit 0
12705:Core/Src/bno055.c ****  *
12706:Core/Src/bno055.c ****  *  @param sleep_tmr_u8 : The value of accel sleep mode
12707:Core/Src/bno055.c ****  *
12708:Core/Src/bno055.c ****  *  sleep_tmr_u8   |   result
12709:Core/Src/bno055.c ****  * ----------------- |------------------------------------
ARM GAS  /tmp/ccOloYeZ.s 			page 739


12710:Core/Src/bno055.c ****  *     0x00          | enable EventDrivenSampling(EDT)
12711:Core/Src/bno055.c ****  *     0x01          | enable Equidistant sampling mode(EST)
12712:Core/Src/bno055.c ****  *
12713:Core/Src/bno055.c ****  *  @return results of bus communication function
12714:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12715:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12716:Core/Src/bno055.c ****  *
12717:Core/Src/bno055.c ****  *
12718:Core/Src/bno055.c ****  */
12719:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_sleep_tmr_mode(u8 *sleep_tmr_u8)
12720:Core/Src/bno055.c **** {
 26105              		.loc 1 12720 1 is_stmt 1 view -0
 26106              		.cfi_startproc
 26107              		@ args = 0, pretend = 0, frame = 8
 26108              		@ frame_needed = 0, uses_anonymous_args = 0
 26109              		.loc 1 12720 1 is_stmt 0 view .LVU7589
 26110 0000 30B5     		push	{r4, r5, lr}
 26111              		.cfi_def_cfa_offset 12
 26112              		.cfi_offset 4, -12
 26113              		.cfi_offset 5, -8
 26114              		.cfi_offset 14, -4
 26115 0002 83B0     		sub	sp, sp, #12
 26116              		.cfi_def_cfa_offset 24
12721:Core/Src/bno055.c ****     /* Variable used to return value of
12722:Core/Src/bno055.c ****      * communication routine*/
12723:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26117              		.loc 1 12723 5 is_stmt 1 view .LVU7590
 26118              	.LVL3377:
12724:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26119              		.loc 1 12724 5 view .LVU7591
 26120              		.loc 1 12724 8 is_stmt 0 view .LVU7592
 26121 0004 0023     		movs	r3, #0
 26122 0006 8DF80730 		strb	r3, [sp, #7]
12725:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26123              		.loc 1 12725 5 is_stmt 1 view .LVU7593
 26124              	.LVL3378:
12726:Core/Src/bno055.c **** 
12727:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12728:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26125              		.loc 1 12728 5 view .LVU7594
 26126              		.loc 1 12728 18 is_stmt 0 view .LVU7595
 26127 000a 144B     		ldr	r3, .L1845
 26128 000c 1B68     		ldr	r3, [r3]
 26129              		.loc 1 12728 8 view .LVU7596
 26130 000e F3B1     		cbz	r3, .L1841
 26131 0010 0446     		mov	r4, r0
12729:Core/Src/bno055.c ****     {
12730:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12731:Core/Src/bno055.c ****     }
12732:Core/Src/bno055.c ****     else
12733:Core/Src/bno055.c ****     {
12734:Core/Src/bno055.c ****         /*condition check for page, accel sleep mode is
12735:Core/Src/bno055.c ****          * available in the page one*/
12736:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 26132              		.loc 1 12736 9 is_stmt 1 view .LVU7597
 26133              		.loc 1 12736 21 is_stmt 0 view .LVU7598
 26134 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccOloYeZ.s 			page 740


 26135              		.loc 1 12736 12 view .LVU7599
 26136 0014 012B     		cmp	r3, #1
 26137 0016 14D1     		bne	.L1844
 26138              	.LVL3379:
 26139              	.L1839:
12737:Core/Src/bno055.c ****         {
12738:Core/Src/bno055.c ****             /* Write page as one */
12739:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12740:Core/Src/bno055.c ****         }
12741:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 26140              		.loc 1 12741 53 discriminator 1 view .LVU7600
 26141 0018 104B     		ldr	r3, .L1845
 26142 001a 1B68     		ldr	r3, [r3]
 26143 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26144              		.loc 1 12741 41 discriminator 1 view .LVU7601
 26145 001e 012B     		cmp	r3, #1
 26146 0020 18D1     		bne	.L1842
 26147              	.L1840:
12742:Core/Src/bno055.c ****         {
12743:Core/Src/bno055.c ****             /* read the value of accel sleep mode */
12744:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 26148              		.loc 1 12744 13 is_stmt 1 view .LVU7602
 26149              		.loc 1 12744 32 is_stmt 0 view .LVU7603
 26150 0022 0E4B     		ldr	r3, .L1845
 26151 0024 1868     		ldr	r0, [r3]
 26152 0026 0569     		ldr	r5, [r0, #16]
 26153              		.loc 1 12744 24 view .LVU7604
 26154 0028 0123     		movs	r3, #1
 26155 002a 0DF10702 		add	r2, sp, #7
 26156 002e 0C21     		movs	r1, #12
 26157 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26158 0032 A847     		blx	r5
 26159              	.LVL3380:
12745:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLEEP_MODE_REG,
12746:Core/Src/bno055.c ****                                                       &data_u8r,
12747:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12748:Core/Src/bno055.c ****             *sleep_tmr_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLEEP_MODE);
 26160              		.loc 1 12748 13 is_stmt 1 view .LVU7605
 26161              		.loc 1 12748 29 is_stmt 0 view .LVU7606
 26162 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26163 0038 03F00103 		and	r3, r3, #1
 26164              		.loc 1 12748 27 view .LVU7607
 26165 003c 2370     		strb	r3, [r4]
 26166              	.LVL3381:
 26167              	.L1838:
12749:Core/Src/bno055.c ****         }
12750:Core/Src/bno055.c ****         else
12751:Core/Src/bno055.c ****         {
12752:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12753:Core/Src/bno055.c ****         }
12754:Core/Src/bno055.c ****     }
12755:Core/Src/bno055.c **** 
12756:Core/Src/bno055.c ****     return com_rslt;
12757:Core/Src/bno055.c **** }
 26168              		.loc 1 12757 1 view .LVU7608
 26169 003e 03B0     		add	sp, sp, #12
 26170              		.cfi_remember_state
ARM GAS  /tmp/ccOloYeZ.s 			page 741


 26171              		.cfi_def_cfa_offset 12
 26172              		@ sp needed
 26173 0040 30BD     		pop	{r4, r5, pc}
 26174              	.LVL3382:
 26175              	.L1844:
 26176              		.cfi_restore_state
12739:Core/Src/bno055.c ****         }
 26177              		.loc 1 12739 13 is_stmt 1 view .LVU7609
12739:Core/Src/bno055.c ****         }
 26178              		.loc 1 12739 23 is_stmt 0 view .LVU7610
 26179 0042 0120     		movs	r0, #1
 26180              	.LVL3383:
12739:Core/Src/bno055.c ****         }
 26181              		.loc 1 12739 23 view .LVU7611
 26182 0044 FFF7FEFF 		bl	bno055_write_page_id
 26183              	.LVL3384:
12741:Core/Src/bno055.c ****         {
 26184              		.loc 1 12741 9 is_stmt 1 view .LVU7612
12741:Core/Src/bno055.c ****         {
 26185              		.loc 1 12741 12 is_stmt 0 view .LVU7613
 26186 0048 0028     		cmp	r0, #0
 26187 004a EAD0     		beq	.L1840
 26188 004c E4E7     		b	.L1839
 26189              	.LVL3385:
 26190              	.L1841:
12730:Core/Src/bno055.c ****     }
 26191              		.loc 1 12730 16 view .LVU7614
 26192 004e 6FF07E00 		mvn	r0, #126
 26193              	.LVL3386:
12730:Core/Src/bno055.c ****     }
 26194              		.loc 1 12730 16 view .LVU7615
 26195 0052 F4E7     		b	.L1838
 26196              	.LVL3387:
 26197              	.L1842:
12752:Core/Src/bno055.c ****         }
 26198              		.loc 1 12752 22 view .LVU7616
 26199 0054 4FF0FF30 		mov	r0, #-1
 26200 0058 F1E7     		b	.L1838
 26201              	.L1846:
 26202 005a 00BF     		.align	2
 26203              	.L1845:
 26204 005c 00000000 		.word	p_bno055
 26205              		.cfi_endproc
 26206              	.LFE193:
 26208              		.section	.text.bno055_set_accel_sleep_tmr_mode,"ax",%progbits
 26209              		.align	1
 26210              		.global	bno055_set_accel_sleep_tmr_mode
 26211              		.syntax unified
 26212              		.thumb
 26213              		.thumb_func
 26215              	bno055_set_accel_sleep_tmr_mode:
 26216              	.LVL3388:
 26217              	.LFB194:
12758:Core/Src/bno055.c **** 
12759:Core/Src/bno055.c **** /*!
12760:Core/Src/bno055.c ****  *  @brief This API used to write the accel sleep mode
12761:Core/Src/bno055.c ****  *  from page one register from 0x0C bit 0
ARM GAS  /tmp/ccOloYeZ.s 			page 742


12762:Core/Src/bno055.c ****  *
12763:Core/Src/bno055.c ****  *  @param sleep_tmr_u8 : The value of accel sleep mode
12764:Core/Src/bno055.c ****  *
12765:Core/Src/bno055.c ****  *  sleep_tmr_u8   |   result
12766:Core/Src/bno055.c ****  * ----------------- |------------------------------------
12767:Core/Src/bno055.c ****  *     0x00          | enable EventDrivenSampling(EDT)
12768:Core/Src/bno055.c ****  *     0x01          | enable Equidistant sampling mode(EST)
12769:Core/Src/bno055.c ****  *
12770:Core/Src/bno055.c ****  *  @return results of bus communication function
12771:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12772:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12773:Core/Src/bno055.c ****  *
12774:Core/Src/bno055.c ****  *
12775:Core/Src/bno055.c ****  */
12776:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_sleep_tmr_mode(u8 sleep_tmr_u8)
12777:Core/Src/bno055.c **** {
 26218              		.loc 1 12777 1 is_stmt 1 view -0
 26219              		.cfi_startproc
 26220              		@ args = 0, pretend = 0, frame = 8
 26221              		@ frame_needed = 0, uses_anonymous_args = 0
 26222              		.loc 1 12777 1 is_stmt 0 view .LVU7618
 26223 0000 30B5     		push	{r4, r5, lr}
 26224              		.cfi_def_cfa_offset 12
 26225              		.cfi_offset 4, -12
 26226              		.cfi_offset 5, -8
 26227              		.cfi_offset 14, -4
 26228 0002 83B0     		sub	sp, sp, #12
 26229              		.cfi_def_cfa_offset 24
12778:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26230              		.loc 1 12778 5 is_stmt 1 view .LVU7619
 26231              	.LVL3389:
12779:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26232              		.loc 1 12779 5 view .LVU7620
 26233              		.loc 1 12779 8 is_stmt 0 view .LVU7621
 26234 0004 0023     		movs	r3, #0
 26235 0006 8DF80730 		strb	r3, [sp, #7]
12780:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26236              		.loc 1 12780 5 is_stmt 1 view .LVU7622
 26237              	.LVL3390:
12781:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 26238              		.loc 1 12781 5 view .LVU7623
 26239              		.loc 1 12781 8 is_stmt 0 view .LVU7624
 26240 000a 8DF80630 		strb	r3, [sp, #6]
12782:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 26241              		.loc 1 12782 5 is_stmt 1 view .LVU7625
 26242              	.LVL3391:
12783:Core/Src/bno055.c **** 
12784:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12785:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26243              		.loc 1 12785 5 view .LVU7626
 26244              		.loc 1 12785 18 is_stmt 0 view .LVU7627
 26245 000e 2B4B     		ldr	r3, .L1861
 26246 0010 1B68     		ldr	r3, [r3]
 26247              		.loc 1 12785 8 view .LVU7628
 26248 0012 002B     		cmp	r3, #0
 26249 0014 4FD0     		beq	.L1851
 26250 0016 0546     		mov	r5, r0
ARM GAS  /tmp/ccOloYeZ.s 			page 743


12786:Core/Src/bno055.c ****     {
12787:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12788:Core/Src/bno055.c ****     }
12789:Core/Src/bno055.c ****     else
12790:Core/Src/bno055.c ****     {
12791:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12792:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12793:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12794:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 26251              		.loc 1 12794 9 is_stmt 1 view .LVU7629
 26252              		.loc 1 12794 19 is_stmt 0 view .LVU7630
 26253 0018 0DF10600 		add	r0, sp, #6
 26254              	.LVL3392:
 26255              		.loc 1 12794 19 view .LVU7631
 26256 001c FFF7FEFF 		bl	bno055_get_operation_mode
 26257              	.LVL3393:
12795:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 26258              		.loc 1 12795 9 is_stmt 1 view .LVU7632
 26259              		.loc 1 12795 12 is_stmt 0 view .LVU7633
 26260 0020 0446     		mov	r4, r0
 26261 0022 0028     		cmp	r0, #0
 26262 0024 36D1     		bne	.L1852
12796:Core/Src/bno055.c ****         {
12797:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26263              		.loc 1 12797 13 is_stmt 1 view .LVU7634
 26264              		.loc 1 12797 32 is_stmt 0 view .LVU7635
 26265 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 26266              		.loc 1 12797 16 view .LVU7636
 26267 002a 1BB9     		cbnz	r3, .L1857
 26268              	.LVL3394:
 26269              	.L1850:
12798:Core/Src/bno055.c ****             {
12799:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12800:Core/Src/bno055.c ****             }
12801:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 26270              		.loc 1 12801 13 is_stmt 1 view .LVU7637
 26271              		.loc 1 12801 16 is_stmt 0 view .LVU7638
 26272 002c 44B1     		cbz	r4, .L1858
12802:Core/Src/bno055.c ****             {
12803:Core/Src/bno055.c ****                 /* Write page as one */
12804:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12805:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12806:Core/Src/bno055.c ****                 {
12807:Core/Src/bno055.c ****                     if (sleep_tmr_u8 < BNO055_ACCEL_SLEEP_MODE_RANGE)
12808:Core/Src/bno055.c ****                     {
12809:Core/Src/bno055.c ****                         /*Write the value
12810:Core/Src/bno055.c ****                          * of accel sleep mode*/
12811:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12812:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
12813:Core/Src/bno055.c ****                                                                   &data_u8r,
12814:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12815:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12816:Core/Src/bno055.c ****                         {
12817:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_SLEEP_MODE, sleep
12818:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12819:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
12820:Core/Src/bno055.c ****                                                                         &data_u8r,
ARM GAS  /tmp/ccOloYeZ.s 			page 744


12821:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12822:Core/Src/bno055.c ****                         }
12823:Core/Src/bno055.c ****                     }
12824:Core/Src/bno055.c ****                     else
12825:Core/Src/bno055.c ****                     {
12826:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12827:Core/Src/bno055.c ****                     }
12828:Core/Src/bno055.c ****                 }
12829:Core/Src/bno055.c ****                 else
12830:Core/Src/bno055.c ****                 {
12831:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12832:Core/Src/bno055.c ****                 }
12833:Core/Src/bno055.c ****             }
12834:Core/Src/bno055.c ****             else
12835:Core/Src/bno055.c ****             {
12836:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 26273              		.loc 1 12836 26 view .LVU7639
 26274 002e 4FF0FF34 		mov	r4, #-1
 26275              	.LVL3395:
 26276              		.loc 1 12836 26 view .LVU7640
 26277 0032 31E0     		b	.L1849
 26278              	.LVL3396:
 26279              	.L1857:
12799:Core/Src/bno055.c ****             }
 26280              		.loc 1 12799 17 is_stmt 1 view .LVU7641
12799:Core/Src/bno055.c ****             }
 26281              		.loc 1 12799 28 is_stmt 0 view .LVU7642
 26282 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 26283              	.LVL3397:
12799:Core/Src/bno055.c ****             }
 26284              		.loc 1 12799 25 view .LVU7643
 26285 0038 54FA80F4 		uxtab	r4, r4, r0
 26286 003c 64B2     		sxtb	r4, r4
 26287              	.LVL3398:
12799:Core/Src/bno055.c ****             }
 26288              		.loc 1 12799 25 view .LVU7644
 26289 003e F5E7     		b	.L1850
 26290              	.L1858:
12804:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 26291              		.loc 1 12804 17 is_stmt 1 view .LVU7645
12804:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 26292              		.loc 1 12804 30 is_stmt 0 view .LVU7646
 26293 0040 0120     		movs	r0, #1
 26294 0042 FFF7FEFF 		bl	bno055_write_page_id
 26295              	.LVL3399:
12805:Core/Src/bno055.c ****                 {
 26296              		.loc 1 12805 17 is_stmt 1 view .LVU7647
12805:Core/Src/bno055.c ****                 {
 26297              		.loc 1 12805 20 is_stmt 0 view .LVU7648
 26298 0046 68BB     		cbnz	r0, .L1854
12807:Core/Src/bno055.c ****                     {
 26299              		.loc 1 12807 21 is_stmt 1 view .LVU7649
12807:Core/Src/bno055.c ****                     {
 26300              		.loc 1 12807 24 is_stmt 0 view .LVU7650
 26301 0048 012D     		cmp	r5, #1
 26302 004a 02D9     		bls	.L1859
12826:Core/Src/bno055.c ****                     }
ARM GAS  /tmp/ccOloYeZ.s 			page 745


 26303              		.loc 1 12826 34 view .LVU7651
 26304 004c 6FF00104 		mvn	r4, #1
 26305              	.LVL3400:
12826:Core/Src/bno055.c ****                     }
 26306              		.loc 1 12826 34 view .LVU7652
 26307 0050 22E0     		b	.L1849
 26308              	.LVL3401:
 26309              	.L1859:
12811:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
 26310              		.loc 1 12811 25 is_stmt 1 view .LVU7653
12811:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
 26311              		.loc 1 12811 44 is_stmt 0 view .LVU7654
 26312 0052 1A4B     		ldr	r3, .L1861
 26313 0054 1868     		ldr	r0, [r3]
 26314              	.LVL3402:
12811:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
 26315              		.loc 1 12811 44 view .LVU7655
 26316 0056 0469     		ldr	r4, [r0, #16]
 26317              	.LVL3403:
12811:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
 26318              		.loc 1 12811 36 view .LVU7656
 26319 0058 0123     		movs	r3, #1
 26320 005a 0DF10702 		add	r2, sp, #7
 26321 005e 0C21     		movs	r1, #12
 26322 0060 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26323 0062 A047     		blx	r4
 26324              	.LVL3404:
12815:Core/Src/bno055.c ****                         {
 26325              		.loc 1 12815 25 is_stmt 1 view .LVU7657
12815:Core/Src/bno055.c ****                         {
 26326              		.loc 1 12815 28 is_stmt 0 view .LVU7658
 26327 0064 0446     		mov	r4, r0
 26328 0066 B8B9     		cbnz	r0, .L1849
12817:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26329              		.loc 1 12817 29 is_stmt 1 view .LVU7659
12817:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26330              		.loc 1 12817 40 is_stmt 0 view .LVU7660
 26331 0068 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
12817:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26332              		.loc 1 12817 38 view .LVU7661
 26333 006c 23F00103 		bic	r3, r3, #1
 26334 0070 05F00100 		and	r0, r5, #1
 26335              	.LVL3405:
12817:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26336              		.loc 1 12817 38 view .LVU7662
 26337 0074 0343     		orrs	r3, r3, r0
 26338 0076 8DF80730 		strb	r3, [sp, #7]
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
 26339              		.loc 1 12818 29 is_stmt 1 view .LVU7663
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
 26340              		.loc 1 12818 49 is_stmt 0 view .LVU7664
 26341 007a 104B     		ldr	r3, .L1861
 26342 007c 1868     		ldr	r0, [r3]
 26343 007e C568     		ldr	r5, [r0, #12]
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
 26344              		.loc 1 12818 41 view .LVU7665
 26345 0080 0123     		movs	r3, #1
ARM GAS  /tmp/ccOloYeZ.s 			page 746


 26346 0082 0DF10702 		add	r2, sp, #7
 26347 0086 0C21     		movs	r1, #12
 26348 0088 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26349 008a A847     		blx	r5
 26350              	.LVL3406:
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
 26351              		.loc 1 12818 38 view .LVU7666
 26352 008c 54FA80F0 		uxtab	r0, r4, r0
 26353 0090 44B2     		sxtb	r4, r0
 26354              	.LVL3407:
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
 26355              		.loc 1 12818 38 view .LVU7667
 26356 0092 01E0     		b	.L1849
 26357              	.LVL3408:
 26358              	.L1852:
12837:Core/Src/bno055.c ****             }
12838:Core/Src/bno055.c ****         }
12839:Core/Src/bno055.c ****         else
12840:Core/Src/bno055.c ****         {
12841:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 26359              		.loc 1 12841 22 view .LVU7668
 26360 0094 4FF0FF34 		mov	r4, #-1
 26361              	.LVL3409:
 26362              	.L1849:
12842:Core/Src/bno055.c ****         }
12843:Core/Src/bno055.c ****     }
12844:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26363              		.loc 1 12844 5 is_stmt 1 view .LVU7669
 26364              		.loc 1 12844 24 is_stmt 0 view .LVU7670
 26365 0098 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 26366              		.loc 1 12844 8 view .LVU7671
 26367 009c 28B9     		cbnz	r0, .L1860
 26368              	.LVL3410:
 26369              	.L1848:
12845:Core/Src/bno055.c ****     {
12846:Core/Src/bno055.c ****         /* set the operation mode of
12847:Core/Src/bno055.c ****          * previous operation mode*/
12848:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12849:Core/Src/bno055.c ****     }
12850:Core/Src/bno055.c **** 
12851:Core/Src/bno055.c ****     return com_rslt;
12852:Core/Src/bno055.c **** }
 26370              		.loc 1 12852 1 view .LVU7672
 26371 009e 2046     		mov	r0, r4
 26372 00a0 03B0     		add	sp, sp, #12
 26373              		.cfi_remember_state
 26374              		.cfi_def_cfa_offset 12
 26375              		@ sp needed
 26376 00a2 30BD     		pop	{r4, r5, pc}
 26377              	.LVL3411:
 26378              	.L1854:
 26379              		.cfi_restore_state
12831:Core/Src/bno055.c ****                 }
 26380              		.loc 1 12831 30 view .LVU7673
 26381 00a4 4FF0FF34 		mov	r4, #-1
 26382              	.LVL3412:
12831:Core/Src/bno055.c ****                 }
ARM GAS  /tmp/ccOloYeZ.s 			page 747


 26383              		.loc 1 12831 30 view .LVU7674
 26384 00a8 F6E7     		b	.L1849
 26385              	.LVL3413:
 26386              	.L1860:
12848:Core/Src/bno055.c ****     }
 26387              		.loc 1 12848 9 is_stmt 1 view .LVU7675
12848:Core/Src/bno055.c ****     }
 26388              		.loc 1 12848 21 is_stmt 0 view .LVU7676
 26389 00aa FFF7FEFF 		bl	bno055_set_operation_mode
 26390              	.LVL3414:
12848:Core/Src/bno055.c ****     }
 26391              		.loc 1 12848 18 view .LVU7677
 26392 00ae 54FA80F0 		uxtab	r0, r4, r0
 26393 00b2 44B2     		sxtb	r4, r0
 26394              	.LVL3415:
12848:Core/Src/bno055.c ****     }
 26395              		.loc 1 12848 18 view .LVU7678
 26396 00b4 F3E7     		b	.L1848
 26397              	.LVL3416:
 26398              	.L1851:
12787:Core/Src/bno055.c ****     }
 26399              		.loc 1 12787 16 view .LVU7679
 26400 00b6 6FF07E04 		mvn	r4, #126
 26401 00ba F0E7     		b	.L1848
 26402              	.L1862:
 26403              		.align	2
 26404              	.L1861:
 26405 00bc 00000000 		.word	p_bno055
 26406              		.cfi_endproc
 26407              	.LFE194:
 26409              		.section	.text.bno055_get_accel_sleep_durn,"ax",%progbits
 26410              		.align	1
 26411              		.global	bno055_get_accel_sleep_durn
 26412              		.syntax unified
 26413              		.thumb
 26414              		.thumb_func
 26416              	bno055_get_accel_sleep_durn:
 26417              	.LVL3417:
 26418              	.LFB195:
12853:Core/Src/bno055.c **** 
12854:Core/Src/bno055.c **** /*!
12855:Core/Src/bno055.c ****  *  @brief This API used to read the accel sleep duration
12856:Core/Src/bno055.c ****  *  from page one register from 0x0C bit 1 to 4
12857:Core/Src/bno055.c ****  *
12858:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of accel sleep duration
12859:Core/Src/bno055.c ****  *
12860:Core/Src/bno055.c ****  * sleep_durn_u8  |      result
12861:Core/Src/bno055.c ****  * ---------------- |-----------------------------
12862:Core/Src/bno055.c ****  *     0x05         | BNO055_ACCEL_SLEEP_DURN_0_5MS
12863:Core/Src/bno055.c ****  *     0x06         | BNO055_ACCEL_SLEEP_DURN_1MS
12864:Core/Src/bno055.c ****  *     0x07         | BNO055_ACCEL_SLEEP_DURN_2MS
12865:Core/Src/bno055.c ****  *     0x08         | BNO055_ACCEL_SLEEP_DURN_4MS
12866:Core/Src/bno055.c ****  *     0x09         | BNO055_ACCEL_SLEEP_DURN_6MS
12867:Core/Src/bno055.c ****  *     0x0A         | BNO055_ACCEL_SLEEP_DURN_10MS
12868:Core/Src/bno055.c ****  *     0x0B         | BNO055_ACCEL_SLEEP_DURN_25MS
12869:Core/Src/bno055.c ****  *     0x0C         | BNO055_ACCEL_SLEEP_DURN_50MS
12870:Core/Src/bno055.c ****  *     0x0D         | BNO055_ACCEL_SLEEP_DURN_100MS
ARM GAS  /tmp/ccOloYeZ.s 			page 748


12871:Core/Src/bno055.c ****  *     0x0E         | BNO055_ACCEL_SLEEP_DURN_500MS
12872:Core/Src/bno055.c ****  *     0x0F         | BNO055_ACCEL_SLEEP_DURN_1S
12873:Core/Src/bno055.c ****  *
12874:Core/Src/bno055.c ****  *  @return results of bus communication function
12875:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12876:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12877:Core/Src/bno055.c ****  *
12878:Core/Src/bno055.c ****  *
12879:Core/Src/bno055.c ****  */
12880:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_sleep_durn(u8 *sleep_durn_u8)
12881:Core/Src/bno055.c **** {
 26419              		.loc 1 12881 1 is_stmt 1 view -0
 26420              		.cfi_startproc
 26421              		@ args = 0, pretend = 0, frame = 8
 26422              		@ frame_needed = 0, uses_anonymous_args = 0
 26423              		.loc 1 12881 1 is_stmt 0 view .LVU7681
 26424 0000 30B5     		push	{r4, r5, lr}
 26425              		.cfi_def_cfa_offset 12
 26426              		.cfi_offset 4, -12
 26427              		.cfi_offset 5, -8
 26428              		.cfi_offset 14, -4
 26429 0002 83B0     		sub	sp, sp, #12
 26430              		.cfi_def_cfa_offset 24
12882:Core/Src/bno055.c ****     /* Variable used to return value of
12883:Core/Src/bno055.c ****      * communication routine*/
12884:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26431              		.loc 1 12884 5 is_stmt 1 view .LVU7682
 26432              	.LVL3418:
12885:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26433              		.loc 1 12885 5 view .LVU7683
 26434              		.loc 1 12885 8 is_stmt 0 view .LVU7684
 26435 0004 0023     		movs	r3, #0
 26436 0006 8DF80730 		strb	r3, [sp, #7]
12886:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26437              		.loc 1 12886 5 is_stmt 1 view .LVU7685
 26438              	.LVL3419:
12887:Core/Src/bno055.c **** 
12888:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12889:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26439              		.loc 1 12889 5 view .LVU7686
 26440              		.loc 1 12889 18 is_stmt 0 view .LVU7687
 26441 000a 144B     		ldr	r3, .L1871
 26442 000c 1B68     		ldr	r3, [r3]
 26443              		.loc 1 12889 8 view .LVU7688
 26444 000e F3B1     		cbz	r3, .L1867
 26445 0010 0446     		mov	r4, r0
12890:Core/Src/bno055.c ****     {
12891:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12892:Core/Src/bno055.c ****     }
12893:Core/Src/bno055.c ****     else
12894:Core/Src/bno055.c ****     {
12895:Core/Src/bno055.c ****         /*condition check for page, accel sleep duration
12896:Core/Src/bno055.c ****          * available in the page one*/
12897:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 26446              		.loc 1 12897 9 is_stmt 1 view .LVU7689
 26447              		.loc 1 12897 21 is_stmt 0 view .LVU7690
 26448 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccOloYeZ.s 			page 749


 26449              		.loc 1 12897 12 view .LVU7691
 26450 0014 012B     		cmp	r3, #1
 26451 0016 14D1     		bne	.L1870
 26452              	.LVL3420:
 26453              	.L1865:
12898:Core/Src/bno055.c ****         {
12899:Core/Src/bno055.c ****             /* Write page as one */
12900:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12901:Core/Src/bno055.c ****         }
12902:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 26454              		.loc 1 12902 53 discriminator 1 view .LVU7692
 26455 0018 104B     		ldr	r3, .L1871
 26456 001a 1B68     		ldr	r3, [r3]
 26457 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26458              		.loc 1 12902 41 discriminator 1 view .LVU7693
 26459 001e 012B     		cmp	r3, #1
 26460 0020 18D1     		bne	.L1868
 26461              	.L1866:
12903:Core/Src/bno055.c ****         {
12904:Core/Src/bno055.c ****             /* Read the value of accel sleep duration */
12905:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 26462              		.loc 1 12905 13 is_stmt 1 view .LVU7694
 26463              		.loc 1 12905 32 is_stmt 0 view .LVU7695
 26464 0022 0E4B     		ldr	r3, .L1871
 26465 0024 1868     		ldr	r0, [r3]
 26466 0026 0569     		ldr	r5, [r0, #16]
 26467              		.loc 1 12905 24 view .LVU7696
 26468 0028 0123     		movs	r3, #1
 26469 002a 0DF10702 		add	r2, sp, #7
 26470 002e 0C21     		movs	r1, #12
 26471 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26472 0032 A847     		blx	r5
 26473              	.LVL3421:
12906:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLEEP_DURN_REG,
12907:Core/Src/bno055.c ****                                                       &data_u8r,
12908:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12909:Core/Src/bno055.c ****             *sleep_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLEEP_DURN);
 26474              		.loc 1 12909 13 is_stmt 1 view .LVU7697
 26475              		.loc 1 12909 30 is_stmt 0 view .LVU7698
 26476 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26477 0038 C3F34303 		ubfx	r3, r3, #1, #4
 26478              		.loc 1 12909 28 view .LVU7699
 26479 003c 2370     		strb	r3, [r4]
 26480              	.LVL3422:
 26481              	.L1864:
12910:Core/Src/bno055.c ****         }
12911:Core/Src/bno055.c ****         else
12912:Core/Src/bno055.c ****         {
12913:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12914:Core/Src/bno055.c ****         }
12915:Core/Src/bno055.c ****     }
12916:Core/Src/bno055.c **** 
12917:Core/Src/bno055.c ****     return com_rslt;
12918:Core/Src/bno055.c **** }
 26482              		.loc 1 12918 1 view .LVU7700
 26483 003e 03B0     		add	sp, sp, #12
 26484              		.cfi_remember_state
ARM GAS  /tmp/ccOloYeZ.s 			page 750


 26485              		.cfi_def_cfa_offset 12
 26486              		@ sp needed
 26487 0040 30BD     		pop	{r4, r5, pc}
 26488              	.LVL3423:
 26489              	.L1870:
 26490              		.cfi_restore_state
12900:Core/Src/bno055.c ****         }
 26491              		.loc 1 12900 13 is_stmt 1 view .LVU7701
12900:Core/Src/bno055.c ****         }
 26492              		.loc 1 12900 23 is_stmt 0 view .LVU7702
 26493 0042 0120     		movs	r0, #1
 26494              	.LVL3424:
12900:Core/Src/bno055.c ****         }
 26495              		.loc 1 12900 23 view .LVU7703
 26496 0044 FFF7FEFF 		bl	bno055_write_page_id
 26497              	.LVL3425:
12902:Core/Src/bno055.c ****         {
 26498              		.loc 1 12902 9 is_stmt 1 view .LVU7704
12902:Core/Src/bno055.c ****         {
 26499              		.loc 1 12902 12 is_stmt 0 view .LVU7705
 26500 0048 0028     		cmp	r0, #0
 26501 004a EAD0     		beq	.L1866
 26502 004c E4E7     		b	.L1865
 26503              	.LVL3426:
 26504              	.L1867:
12891:Core/Src/bno055.c ****     }
 26505              		.loc 1 12891 16 view .LVU7706
 26506 004e 6FF07E00 		mvn	r0, #126
 26507              	.LVL3427:
12891:Core/Src/bno055.c ****     }
 26508              		.loc 1 12891 16 view .LVU7707
 26509 0052 F4E7     		b	.L1864
 26510              	.LVL3428:
 26511              	.L1868:
12913:Core/Src/bno055.c ****         }
 26512              		.loc 1 12913 22 view .LVU7708
 26513 0054 4FF0FF30 		mov	r0, #-1
 26514 0058 F1E7     		b	.L1864
 26515              	.L1872:
 26516 005a 00BF     		.align	2
 26517              	.L1871:
 26518 005c 00000000 		.word	p_bno055
 26519              		.cfi_endproc
 26520              	.LFE195:
 26522              		.section	.text.bno055_set_accel_sleep_durn,"ax",%progbits
 26523              		.align	1
 26524              		.global	bno055_set_accel_sleep_durn
 26525              		.syntax unified
 26526              		.thumb
 26527              		.thumb_func
 26529              	bno055_set_accel_sleep_durn:
 26530              	.LVL3429:
 26531              	.LFB196:
12919:Core/Src/bno055.c **** 
12920:Core/Src/bno055.c **** /*!
12921:Core/Src/bno055.c ****  *  @brief This API used to write the accel sleep duration
12922:Core/Src/bno055.c ****  *  from page one register from 0x0C bit 1 to 4
ARM GAS  /tmp/ccOloYeZ.s 			page 751


12923:Core/Src/bno055.c ****  *
12924:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of accel sleep duration
12925:Core/Src/bno055.c ****  *
12926:Core/Src/bno055.c ****  * sleep_durn_u8  |      result
12927:Core/Src/bno055.c ****  * ---------------|-----------------------------
12928:Core/Src/bno055.c ****  *     0x05       | BNO055_ACCEL_SLEEP_DURN_0_5MS
12929:Core/Src/bno055.c ****  *     0x06       | BNO055_ACCEL_SLEEP_DURN_1MS
12930:Core/Src/bno055.c ****  *     0x07       | BNO055_ACCEL_SLEEP_DURN_2MS
12931:Core/Src/bno055.c ****  *     0x08       | BNO055_ACCEL_SLEEP_DURN_4MS
12932:Core/Src/bno055.c ****  *     0x09       | BNO055_ACCEL_SLEEP_DURN_6MS
12933:Core/Src/bno055.c ****  *     0x0A       | BNO055_ACCEL_SLEEP_DURN_10MS
12934:Core/Src/bno055.c ****  *     0x0B       | BNO055_ACCEL_SLEEP_DURN_25MS
12935:Core/Src/bno055.c ****  *     0x0C       | BNO055_ACCEL_SLEEP_DURN_50MS
12936:Core/Src/bno055.c ****  *     0x0D       | BNO055_ACCEL_SLEEP_DURN_100MS
12937:Core/Src/bno055.c ****  *     0x0E       | BNO055_ACCEL_SLEEP_DURN_500MS
12938:Core/Src/bno055.c ****  *     0x0F       | BNO055_ACCEL_SLEEP_DURN_1S
12939:Core/Src/bno055.c ****  *
12940:Core/Src/bno055.c ****  *  @return results of bus communication function
12941:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12942:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12943:Core/Src/bno055.c ****  *
12944:Core/Src/bno055.c ****  *
12945:Core/Src/bno055.c ****  */
12946:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_sleep_durn(u8 sleep_durn_u8)
12947:Core/Src/bno055.c **** {
 26532              		.loc 1 12947 1 is_stmt 1 view -0
 26533              		.cfi_startproc
 26534              		@ args = 0, pretend = 0, frame = 8
 26535              		@ frame_needed = 0, uses_anonymous_args = 0
 26536              		.loc 1 12947 1 is_stmt 0 view .LVU7710
 26537 0000 30B5     		push	{r4, r5, lr}
 26538              		.cfi_def_cfa_offset 12
 26539              		.cfi_offset 4, -12
 26540              		.cfi_offset 5, -8
 26541              		.cfi_offset 14, -4
 26542 0002 83B0     		sub	sp, sp, #12
 26543              		.cfi_def_cfa_offset 24
12948:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26544              		.loc 1 12948 5 is_stmt 1 view .LVU7711
 26545              	.LVL3430:
12949:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26546              		.loc 1 12949 5 view .LVU7712
 26547              		.loc 1 12949 8 is_stmt 0 view .LVU7713
 26548 0004 0023     		movs	r3, #0
 26549 0006 8DF80730 		strb	r3, [sp, #7]
12950:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26550              		.loc 1 12950 5 is_stmt 1 view .LVU7714
 26551              	.LVL3431:
12951:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 26552              		.loc 1 12951 5 view .LVU7715
 26553              		.loc 1 12951 8 is_stmt 0 view .LVU7716
 26554 000a 8DF80630 		strb	r3, [sp, #6]
12952:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 26555              		.loc 1 12952 5 is_stmt 1 view .LVU7717
 26556              	.LVL3432:
12953:Core/Src/bno055.c **** 
12954:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
ARM GAS  /tmp/ccOloYeZ.s 			page 752


12955:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26557              		.loc 1 12955 5 view .LVU7718
 26558              		.loc 1 12955 18 is_stmt 0 view .LVU7719
 26559 000e 2C4B     		ldr	r3, .L1886
 26560 0010 1B68     		ldr	r3, [r3]
 26561              		.loc 1 12955 8 view .LVU7720
 26562 0012 002B     		cmp	r3, #0
 26563 0014 50D0     		beq	.L1877
 26564 0016 0546     		mov	r5, r0
12956:Core/Src/bno055.c ****     {
12957:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12958:Core/Src/bno055.c ****     }
12959:Core/Src/bno055.c ****     else
12960:Core/Src/bno055.c ****     {
12961:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12962:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12963:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12964:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 26565              		.loc 1 12964 9 is_stmt 1 view .LVU7721
 26566              		.loc 1 12964 19 is_stmt 0 view .LVU7722
 26567 0018 0DF10600 		add	r0, sp, #6
 26568              	.LVL3433:
 26569              		.loc 1 12964 19 view .LVU7723
 26570 001c FFF7FEFF 		bl	bno055_get_operation_mode
 26571              	.LVL3434:
12965:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 26572              		.loc 1 12965 9 is_stmt 1 view .LVU7724
 26573              		.loc 1 12965 12 is_stmt 0 view .LVU7725
 26574 0020 0446     		mov	r4, r0
 26575 0022 0028     		cmp	r0, #0
 26576 0024 34D1     		bne	.L1878
12966:Core/Src/bno055.c ****         {
12967:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26577              		.loc 1 12967 13 is_stmt 1 view .LVU7726
 26578              		.loc 1 12967 32 is_stmt 0 view .LVU7727
 26579 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 26580              		.loc 1 12967 16 view .LVU7728
 26581 002a 1BB9     		cbnz	r3, .L1883
 26582              	.LVL3435:
 26583              	.L1876:
12968:Core/Src/bno055.c ****             {
12969:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12970:Core/Src/bno055.c ****             }
12971:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 26584              		.loc 1 12971 13 is_stmt 1 view .LVU7729
 26585              		.loc 1 12971 16 is_stmt 0 view .LVU7730
 26586 002c 44B1     		cbz	r4, .L1884
12972:Core/Src/bno055.c ****             {
12973:Core/Src/bno055.c ****                 /* Write page as one */
12974:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12975:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12976:Core/Src/bno055.c ****                 {
12977:Core/Src/bno055.c ****                     if (sleep_durn_u8 < BNO055_ACCEL_SLEEP_DURATION_RANGE)
12978:Core/Src/bno055.c ****                     {
12979:Core/Src/bno055.c ****                         /* Write the accel
12980:Core/Src/bno055.c ****                         * sleep duration*/
12981:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccOloYeZ.s 			page 753


12982:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
12983:Core/Src/bno055.c ****                                                                   &data_u8r,
12984:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12985:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12986:Core/Src/bno055.c ****                         {
12987:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_SLEEP_DURN, sleep
12988:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12989:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
12990:Core/Src/bno055.c ****                                                                         &data_u8r,
12991:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12992:Core/Src/bno055.c ****                         }
12993:Core/Src/bno055.c ****                     }
12994:Core/Src/bno055.c ****                     else
12995:Core/Src/bno055.c ****                     {
12996:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12997:Core/Src/bno055.c ****                     }
12998:Core/Src/bno055.c ****                 }
12999:Core/Src/bno055.c ****                 else
13000:Core/Src/bno055.c ****                 {
13001:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
13002:Core/Src/bno055.c ****                 }
13003:Core/Src/bno055.c ****             }
13004:Core/Src/bno055.c ****             else
13005:Core/Src/bno055.c ****             {
13006:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 26587              		.loc 1 13006 26 view .LVU7731
 26588 002e 4FF0FF34 		mov	r4, #-1
 26589              	.LVL3436:
 26590              		.loc 1 13006 26 view .LVU7732
 26591 0032 2FE0     		b	.L1875
 26592              	.LVL3437:
 26593              	.L1883:
12969:Core/Src/bno055.c ****             }
 26594              		.loc 1 12969 17 is_stmt 1 view .LVU7733
12969:Core/Src/bno055.c ****             }
 26595              		.loc 1 12969 28 is_stmt 0 view .LVU7734
 26596 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 26597              	.LVL3438:
12969:Core/Src/bno055.c ****             }
 26598              		.loc 1 12969 25 view .LVU7735
 26599 0038 54FA80F4 		uxtab	r4, r4, r0
 26600 003c 64B2     		sxtb	r4, r4
 26601              	.LVL3439:
12969:Core/Src/bno055.c ****             }
 26602              		.loc 1 12969 25 view .LVU7736
 26603 003e F5E7     		b	.L1876
 26604              	.L1884:
12974:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 26605              		.loc 1 12974 17 is_stmt 1 view .LVU7737
12974:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 26606              		.loc 1 12974 30 is_stmt 0 view .LVU7738
 26607 0040 0120     		movs	r0, #1
 26608 0042 FFF7FEFF 		bl	bno055_write_page_id
 26609              	.LVL3440:
12975:Core/Src/bno055.c ****                 {
 26610              		.loc 1 12975 17 is_stmt 1 view .LVU7739
12975:Core/Src/bno055.c ****                 {
ARM GAS  /tmp/ccOloYeZ.s 			page 754


 26611              		.loc 1 12975 20 is_stmt 0 view .LVU7740
 26612 0046 58BB     		cbnz	r0, .L1880
12977:Core/Src/bno055.c ****                     {
 26613              		.loc 1 12977 21 is_stmt 1 view .LVU7741
12977:Core/Src/bno055.c ****                     {
 26614              		.loc 1 12977 24 is_stmt 0 view .LVU7742
 26615 0048 0F2D     		cmp	r5, #15
 26616 004a 2CD8     		bhi	.L1881
12981:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
 26617              		.loc 1 12981 25 is_stmt 1 view .LVU7743
12981:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
 26618              		.loc 1 12981 44 is_stmt 0 view .LVU7744
 26619 004c 1C4B     		ldr	r3, .L1886
 26620 004e 1868     		ldr	r0, [r3]
 26621              	.LVL3441:
12981:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
 26622              		.loc 1 12981 44 view .LVU7745
 26623 0050 0469     		ldr	r4, [r0, #16]
 26624              	.LVL3442:
12981:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
 26625              		.loc 1 12981 36 view .LVU7746
 26626 0052 0123     		movs	r3, #1
 26627 0054 0DF10702 		add	r2, sp, #7
 26628 0058 0C21     		movs	r1, #12
 26629 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26630 005c A047     		blx	r4
 26631              	.LVL3443:
12985:Core/Src/bno055.c ****                         {
 26632              		.loc 1 12985 25 is_stmt 1 view .LVU7747
12985:Core/Src/bno055.c ****                         {
 26633              		.loc 1 12985 28 is_stmt 0 view .LVU7748
 26634 005e 0446     		mov	r4, r0
 26635 0060 C0B9     		cbnz	r0, .L1875
12987:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26636              		.loc 1 12987 29 is_stmt 1 view .LVU7749
12987:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26637              		.loc 1 12987 40 is_stmt 0 view .LVU7750
 26638 0062 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26639 0066 6800     		lsls	r0, r5, #1
 26640              	.LVL3444:
12987:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26641              		.loc 1 12987 40 view .LVU7751
 26642 0068 00F01E00 		and	r0, r0, #30
 26643 006c 23F01E03 		bic	r3, r3, #30
 26644 0070 0343     		orrs	r3, r3, r0
12987:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26645              		.loc 1 12987 38 view .LVU7752
 26646 0072 8DF80730 		strb	r3, [sp, #7]
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 26647              		.loc 1 12988 29 is_stmt 1 view .LVU7753
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 26648              		.loc 1 12988 49 is_stmt 0 view .LVU7754
 26649 0076 124B     		ldr	r3, .L1886
 26650 0078 1868     		ldr	r0, [r3]
 26651 007a C568     		ldr	r5, [r0, #12]
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 26652              		.loc 1 12988 41 view .LVU7755
ARM GAS  /tmp/ccOloYeZ.s 			page 755


 26653 007c 0123     		movs	r3, #1
 26654 007e 0DF10702 		add	r2, sp, #7
 26655 0082 0C21     		movs	r1, #12
 26656 0084 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26657 0086 A847     		blx	r5
 26658              	.LVL3445:
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 26659              		.loc 1 12988 38 view .LVU7756
 26660 0088 54FA80F0 		uxtab	r0, r4, r0
 26661 008c 44B2     		sxtb	r4, r0
 26662              	.LVL3446:
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 26663              		.loc 1 12988 38 view .LVU7757
 26664 008e 01E0     		b	.L1875
 26665              	.LVL3447:
 26666              	.L1878:
13007:Core/Src/bno055.c ****             }
13008:Core/Src/bno055.c ****         }
13009:Core/Src/bno055.c ****         else
13010:Core/Src/bno055.c ****         {
13011:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 26667              		.loc 1 13011 22 view .LVU7758
 26668 0090 4FF0FF34 		mov	r4, #-1
 26669              	.LVL3448:
 26670              	.L1875:
13012:Core/Src/bno055.c ****         }
13013:Core/Src/bno055.c ****     }
13014:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26671              		.loc 1 13014 5 is_stmt 1 view .LVU7759
 26672              		.loc 1 13014 24 is_stmt 0 view .LVU7760
 26673 0094 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 26674              		.loc 1 13014 8 view .LVU7761
 26675 0098 40B9     		cbnz	r0, .L1885
 26676              	.LVL3449:
 26677              	.L1874:
13015:Core/Src/bno055.c ****     {
13016:Core/Src/bno055.c ****         /* set the operation mode of
13017:Core/Src/bno055.c ****          * previous operation mode*/
13018:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
13019:Core/Src/bno055.c ****     }
13020:Core/Src/bno055.c **** 
13021:Core/Src/bno055.c ****     return com_rslt;
13022:Core/Src/bno055.c **** }
 26678              		.loc 1 13022 1 view .LVU7762
 26679 009a 2046     		mov	r0, r4
 26680 009c 03B0     		add	sp, sp, #12
 26681              		.cfi_remember_state
 26682              		.cfi_def_cfa_offset 12
 26683              		@ sp needed
 26684 009e 30BD     		pop	{r4, r5, pc}
 26685              	.LVL3450:
 26686              	.L1880:
 26687              		.cfi_restore_state
13001:Core/Src/bno055.c ****                 }
 26688              		.loc 1 13001 30 view .LVU7763
 26689 00a0 4FF0FF34 		mov	r4, #-1
 26690              	.LVL3451:
ARM GAS  /tmp/ccOloYeZ.s 			page 756


13001:Core/Src/bno055.c ****                 }
 26691              		.loc 1 13001 30 view .LVU7764
 26692 00a4 F6E7     		b	.L1875
 26693              	.LVL3452:
 26694              	.L1881:
12996:Core/Src/bno055.c ****                     }
 26695              		.loc 1 12996 34 view .LVU7765
 26696 00a6 6FF00104 		mvn	r4, #1
 26697              	.LVL3453:
12996:Core/Src/bno055.c ****                     }
 26698              		.loc 1 12996 34 view .LVU7766
 26699 00aa F3E7     		b	.L1875
 26700              	.LVL3454:
 26701              	.L1885:
13018:Core/Src/bno055.c ****     }
 26702              		.loc 1 13018 9 is_stmt 1 view .LVU7767
13018:Core/Src/bno055.c ****     }
 26703              		.loc 1 13018 21 is_stmt 0 view .LVU7768
 26704 00ac FFF7FEFF 		bl	bno055_set_operation_mode
 26705              	.LVL3455:
13018:Core/Src/bno055.c ****     }
 26706              		.loc 1 13018 18 view .LVU7769
 26707 00b0 54FA80F0 		uxtab	r0, r4, r0
 26708 00b4 44B2     		sxtb	r4, r0
 26709              	.LVL3456:
13018:Core/Src/bno055.c ****     }
 26710              		.loc 1 13018 18 view .LVU7770
 26711 00b6 F0E7     		b	.L1874
 26712              	.LVL3457:
 26713              	.L1877:
12957:Core/Src/bno055.c ****     }
 26714              		.loc 1 12957 16 view .LVU7771
 26715 00b8 6FF07E04 		mvn	r4, #126
 26716 00bc EDE7     		b	.L1874
 26717              	.L1887:
 26718 00be 00BF     		.align	2
 26719              	.L1886:
 26720 00c0 00000000 		.word	p_bno055
 26721              		.cfi_endproc
 26722              	.LFE196:
 26724              		.section	.text.bno055_get_gyro_sleep_durn,"ax",%progbits
 26725              		.align	1
 26726              		.global	bno055_get_gyro_sleep_durn
 26727              		.syntax unified
 26728              		.thumb
 26729              		.thumb_func
 26731              	bno055_get_gyro_sleep_durn:
 26732              	.LVL3458:
 26733              	.LFB197:
13023:Core/Src/bno055.c **** 
13024:Core/Src/bno055.c **** /*!
13025:Core/Src/bno055.c ****  *  @brief This API used to write the gyro sleep duration
13026:Core/Src/bno055.c ****  *  from page one register from 0x0D bit 0 to 2
13027:Core/Src/bno055.c ****  *
13028:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of gyro sleep duration
13029:Core/Src/bno055.c ****  *
13030:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/ccOloYeZ.s 			page 757


13031:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13032:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13033:Core/Src/bno055.c ****  *
13034:Core/Src/bno055.c ****  *
13035:Core/Src/bno055.c ****  */
13036:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_sleep_durn(u8 *sleep_durn_u8)
13037:Core/Src/bno055.c **** {
 26734              		.loc 1 13037 1 is_stmt 1 view -0
 26735              		.cfi_startproc
 26736              		@ args = 0, pretend = 0, frame = 8
 26737              		@ frame_needed = 0, uses_anonymous_args = 0
 26738              		.loc 1 13037 1 is_stmt 0 view .LVU7773
 26739 0000 30B5     		push	{r4, r5, lr}
 26740              		.cfi_def_cfa_offset 12
 26741              		.cfi_offset 4, -12
 26742              		.cfi_offset 5, -8
 26743              		.cfi_offset 14, -4
 26744 0002 83B0     		sub	sp, sp, #12
 26745              		.cfi_def_cfa_offset 24
13038:Core/Src/bno055.c ****     /* Variable used to return value of
13039:Core/Src/bno055.c ****      * communication routine*/
13040:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26746              		.loc 1 13040 5 is_stmt 1 view .LVU7774
 26747              	.LVL3459:
13041:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26748              		.loc 1 13041 5 view .LVU7775
 26749              		.loc 1 13041 8 is_stmt 0 view .LVU7776
 26750 0004 0023     		movs	r3, #0
 26751 0006 8DF80730 		strb	r3, [sp, #7]
13042:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26752              		.loc 1 13042 5 is_stmt 1 view .LVU7777
 26753              	.LVL3460:
13043:Core/Src/bno055.c **** 
13044:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13045:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26754              		.loc 1 13045 5 view .LVU7778
 26755              		.loc 1 13045 18 is_stmt 0 view .LVU7779
 26756 000a 144B     		ldr	r3, .L1896
 26757 000c 1B68     		ldr	r3, [r3]
 26758              		.loc 1 13045 8 view .LVU7780
 26759 000e F3B1     		cbz	r3, .L1892
 26760 0010 0446     		mov	r4, r0
13046:Core/Src/bno055.c ****     {
13047:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13048:Core/Src/bno055.c ****     }
13049:Core/Src/bno055.c ****     else
13050:Core/Src/bno055.c ****     {
13051:Core/Src/bno055.c ****         /*condition check for page, accel range is
13052:Core/Src/bno055.c ****          * available in the page one*/
13053:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 26761              		.loc 1 13053 9 is_stmt 1 view .LVU7781
 26762              		.loc 1 13053 21 is_stmt 0 view .LVU7782
 26763 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26764              		.loc 1 13053 12 view .LVU7783
 26765 0014 012B     		cmp	r3, #1
 26766 0016 14D1     		bne	.L1895
 26767              	.LVL3461:
ARM GAS  /tmp/ccOloYeZ.s 			page 758


 26768              	.L1890:
13054:Core/Src/bno055.c ****         {
13055:Core/Src/bno055.c ****             /* Write page as one */
13056:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13057:Core/Src/bno055.c ****         }
13058:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 26769              		.loc 1 13058 53 discriminator 1 view .LVU7784
 26770 0018 104B     		ldr	r3, .L1896
 26771 001a 1B68     		ldr	r3, [r3]
 26772 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26773              		.loc 1 13058 41 discriminator 1 view .LVU7785
 26774 001e 012B     		cmp	r3, #1
 26775 0020 18D1     		bne	.L1893
 26776              	.L1891:
13059:Core/Src/bno055.c ****         {
13060:Core/Src/bno055.c ****             /* Read the gyro sleep duration */
13061:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 26777              		.loc 1 13061 13 is_stmt 1 view .LVU7786
 26778              		.loc 1 13061 32 is_stmt 0 view .LVU7787
 26779 0022 0E4B     		ldr	r3, .L1896
 26780 0024 1868     		ldr	r0, [r3]
 26781 0026 0569     		ldr	r5, [r0, #16]
 26782              		.loc 1 13061 24 view .LVU7788
 26783 0028 0123     		movs	r3, #1
 26784 002a 0DF10702 		add	r2, sp, #7
 26785 002e 0D21     		movs	r1, #13
 26786 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26787 0032 A847     		blx	r5
 26788              	.LVL3462:
13062:Core/Src/bno055.c ****                                                       BNO055_GYRO_SLEEP_DURN_REG,
13063:Core/Src/bno055.c ****                                                       &data_u8r,
13064:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13065:Core/Src/bno055.c ****             *sleep_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_SLEEP_DURN);
 26789              		.loc 1 13065 13 is_stmt 1 view .LVU7789
 26790              		.loc 1 13065 30 is_stmt 0 view .LVU7790
 26791 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26792 0038 03F00703 		and	r3, r3, #7
 26793              		.loc 1 13065 28 view .LVU7791
 26794 003c 2370     		strb	r3, [r4]
 26795              	.LVL3463:
 26796              	.L1889:
13066:Core/Src/bno055.c ****         }
13067:Core/Src/bno055.c ****         else
13068:Core/Src/bno055.c ****         {
13069:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13070:Core/Src/bno055.c ****         }
13071:Core/Src/bno055.c ****     }
13072:Core/Src/bno055.c **** 
13073:Core/Src/bno055.c ****     return com_rslt;
13074:Core/Src/bno055.c **** }
 26797              		.loc 1 13074 1 view .LVU7792
 26798 003e 03B0     		add	sp, sp, #12
 26799              		.cfi_remember_state
 26800              		.cfi_def_cfa_offset 12
 26801              		@ sp needed
 26802 0040 30BD     		pop	{r4, r5, pc}
 26803              	.LVL3464:
ARM GAS  /tmp/ccOloYeZ.s 			page 759


 26804              	.L1895:
 26805              		.cfi_restore_state
13056:Core/Src/bno055.c ****         }
 26806              		.loc 1 13056 13 is_stmt 1 view .LVU7793
13056:Core/Src/bno055.c ****         }
 26807              		.loc 1 13056 23 is_stmt 0 view .LVU7794
 26808 0042 0120     		movs	r0, #1
 26809              	.LVL3465:
13056:Core/Src/bno055.c ****         }
 26810              		.loc 1 13056 23 view .LVU7795
 26811 0044 FFF7FEFF 		bl	bno055_write_page_id
 26812              	.LVL3466:
13058:Core/Src/bno055.c ****         {
 26813              		.loc 1 13058 9 is_stmt 1 view .LVU7796
13058:Core/Src/bno055.c ****         {
 26814              		.loc 1 13058 12 is_stmt 0 view .LVU7797
 26815 0048 0028     		cmp	r0, #0
 26816 004a EAD0     		beq	.L1891
 26817 004c E4E7     		b	.L1890
 26818              	.LVL3467:
 26819              	.L1892:
13047:Core/Src/bno055.c ****     }
 26820              		.loc 1 13047 16 view .LVU7798
 26821 004e 6FF07E00 		mvn	r0, #126
 26822              	.LVL3468:
13047:Core/Src/bno055.c ****     }
 26823              		.loc 1 13047 16 view .LVU7799
 26824 0052 F4E7     		b	.L1889
 26825              	.LVL3469:
 26826              	.L1893:
13069:Core/Src/bno055.c ****         }
 26827              		.loc 1 13069 22 view .LVU7800
 26828 0054 4FF0FF30 		mov	r0, #-1
 26829 0058 F1E7     		b	.L1889
 26830              	.L1897:
 26831 005a 00BF     		.align	2
 26832              	.L1896:
 26833 005c 00000000 		.word	p_bno055
 26834              		.cfi_endproc
 26835              	.LFE197:
 26837              		.section	.text.bno055_set_gyro_sleep_durn,"ax",%progbits
 26838              		.align	1
 26839              		.global	bno055_set_gyro_sleep_durn
 26840              		.syntax unified
 26841              		.thumb
 26842              		.thumb_func
 26844              	bno055_set_gyro_sleep_durn:
 26845              	.LVL3470:
 26846              	.LFB198:
13075:Core/Src/bno055.c **** 
13076:Core/Src/bno055.c **** /*!
13077:Core/Src/bno055.c ****  *  @brief This API used to write the gyro sleep duration
13078:Core/Src/bno055.c ****  *  from page one register from 0x0D bit 0 to 2
13079:Core/Src/bno055.c ****  *
13080:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of gyro sleep duration
13081:Core/Src/bno055.c ****  *
13082:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/ccOloYeZ.s 			page 760


13083:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13084:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13085:Core/Src/bno055.c ****  *
13086:Core/Src/bno055.c ****  *
13087:Core/Src/bno055.c ****  */
13088:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_sleep_durn(u8 sleep_durn_u8)
13089:Core/Src/bno055.c **** {
 26847              		.loc 1 13089 1 is_stmt 1 view -0
 26848              		.cfi_startproc
 26849              		@ args = 0, pretend = 0, frame = 8
 26850              		@ frame_needed = 0, uses_anonymous_args = 0
 26851              		.loc 1 13089 1 is_stmt 0 view .LVU7802
 26852 0000 30B5     		push	{r4, r5, lr}
 26853              		.cfi_def_cfa_offset 12
 26854              		.cfi_offset 4, -12
 26855              		.cfi_offset 5, -8
 26856              		.cfi_offset 14, -4
 26857 0002 83B0     		sub	sp, sp, #12
 26858              		.cfi_def_cfa_offset 24
13090:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26859              		.loc 1 13090 5 is_stmt 1 view .LVU7803
 26860              	.LVL3471:
13091:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26861              		.loc 1 13091 5 view .LVU7804
 26862              		.loc 1 13091 8 is_stmt 0 view .LVU7805
 26863 0004 0023     		movs	r3, #0
 26864 0006 8DF80730 		strb	r3, [sp, #7]
13092:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26865              		.loc 1 13092 5 is_stmt 1 view .LVU7806
 26866              	.LVL3472:
13093:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 26867              		.loc 1 13093 5 view .LVU7807
13094:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 26868              		.loc 1 13094 5 view .LVU7808
 26869              		.loc 1 13094 8 is_stmt 0 view .LVU7809
 26870 000a 8DF80630 		strb	r3, [sp, #6]
13095:Core/Src/bno055.c **** 
13096:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13097:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26871              		.loc 1 13097 5 is_stmt 1 view .LVU7810
 26872              		.loc 1 13097 18 is_stmt 0 view .LVU7811
 26873 000e 2B4B     		ldr	r3, .L1911
 26874 0010 1B68     		ldr	r3, [r3]
 26875              		.loc 1 13097 8 view .LVU7812
 26876 0012 002B     		cmp	r3, #0
 26877 0014 4ED0     		beq	.L1902
 26878 0016 0546     		mov	r5, r0
13098:Core/Src/bno055.c ****     {
13099:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13100:Core/Src/bno055.c ****     }
13101:Core/Src/bno055.c ****     else
13102:Core/Src/bno055.c ****     {
13103:Core/Src/bno055.c ****         /* The write operation effective only if the operation
13104:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
13105:Core/Src/bno055.c ****          * current operation mode and set the config mode */
13106:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 26879              		.loc 1 13106 9 is_stmt 1 view .LVU7813
ARM GAS  /tmp/ccOloYeZ.s 			page 761


 26880              		.loc 1 13106 19 is_stmt 0 view .LVU7814
 26881 0018 0DF10600 		add	r0, sp, #6
 26882              	.LVL3473:
 26883              		.loc 1 13106 19 view .LVU7815
 26884 001c FFF7FEFF 		bl	bno055_get_operation_mode
 26885              	.LVL3474:
13107:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 26886              		.loc 1 13107 9 is_stmt 1 view .LVU7816
 26887              		.loc 1 13107 12 is_stmt 0 view .LVU7817
 26888 0020 0446     		mov	r4, r0
 26889 0022 98BB     		cbnz	r0, .L1903
13108:Core/Src/bno055.c ****         {
13109:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26890              		.loc 1 13109 13 is_stmt 1 view .LVU7818
 26891              		.loc 1 13109 32 is_stmt 0 view .LVU7819
 26892 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 26893              		.loc 1 13109 16 view .LVU7820
 26894 0028 1BB9     		cbnz	r3, .L1908
 26895              	.LVL3475:
 26896              	.L1901:
13110:Core/Src/bno055.c ****             {
13111:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
13112:Core/Src/bno055.c ****             }
13113:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 26897              		.loc 1 13113 13 is_stmt 1 view .LVU7821
 26898              		.loc 1 13113 16 is_stmt 0 view .LVU7822
 26899 002a 44B1     		cbz	r4, .L1909
13114:Core/Src/bno055.c ****             {
13115:Core/Src/bno055.c ****                 /* Write page as one */
13116:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13117:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
13118:Core/Src/bno055.c ****                 {
13119:Core/Src/bno055.c ****                     if (sleep_durn_u8 < BNO055_GYRO_AUTO_SLEEP_DURATION_RANGE)
13120:Core/Src/bno055.c ****                     {
13121:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
13122:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
13123:Core/Src/bno055.c ****                                                                   &data_u8r,
13124:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
13125:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
13126:Core/Src/bno055.c ****                         {
13127:Core/Src/bno055.c ****                             /* Write the gyro
13128:Core/Src/bno055.c ****                              *  sleep duration */
13129:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_SLEEP_DURN, sleep_
13130:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
13131:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
13132:Core/Src/bno055.c ****                                                                         &data_u8r,
13133:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
13134:Core/Src/bno055.c ****                         }
13135:Core/Src/bno055.c ****                     }
13136:Core/Src/bno055.c ****                     else
13137:Core/Src/bno055.c ****                     {
13138:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
13139:Core/Src/bno055.c ****                     }
13140:Core/Src/bno055.c ****                 }
13141:Core/Src/bno055.c ****                 else
13142:Core/Src/bno055.c ****                 {
13143:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccOloYeZ.s 			page 762


13144:Core/Src/bno055.c ****                 }
13145:Core/Src/bno055.c ****             }
13146:Core/Src/bno055.c ****             else
13147:Core/Src/bno055.c ****             {
13148:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 26900              		.loc 1 13148 26 view .LVU7823
 26901 002c 4FF0FF34 		mov	r4, #-1
 26902              	.LVL3476:
 26903              		.loc 1 13148 26 view .LVU7824
 26904 0030 2EE0     		b	.L1900
 26905              	.LVL3477:
 26906              	.L1908:
13111:Core/Src/bno055.c ****             }
 26907              		.loc 1 13111 17 is_stmt 1 view .LVU7825
13111:Core/Src/bno055.c ****             }
 26908              		.loc 1 13111 28 is_stmt 0 view .LVU7826
 26909 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 26910              	.LVL3478:
13111:Core/Src/bno055.c ****             }
 26911              		.loc 1 13111 25 view .LVU7827
 26912 0036 54FA80F4 		uxtab	r4, r4, r0
 26913 003a 64B2     		sxtb	r4, r4
 26914              	.LVL3479:
13111:Core/Src/bno055.c ****             }
 26915              		.loc 1 13111 25 view .LVU7828
 26916 003c F5E7     		b	.L1901
 26917              	.L1909:
13116:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 26918              		.loc 1 13116 17 is_stmt 1 view .LVU7829
13116:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 26919              		.loc 1 13116 30 is_stmt 0 view .LVU7830
 26920 003e 0120     		movs	r0, #1
 26921 0040 FFF7FEFF 		bl	bno055_write_page_id
 26922              	.LVL3480:
13117:Core/Src/bno055.c ****                 {
 26923              		.loc 1 13117 17 is_stmt 1 view .LVU7831
13117:Core/Src/bno055.c ****                 {
 26924              		.loc 1 13117 20 is_stmt 0 view .LVU7832
 26925 0044 50BB     		cbnz	r0, .L1905
13119:Core/Src/bno055.c ****                     {
 26926              		.loc 1 13119 21 is_stmt 1 view .LVU7833
13119:Core/Src/bno055.c ****                     {
 26927              		.loc 1 13119 24 is_stmt 0 view .LVU7834
 26928 0046 072D     		cmp	r5, #7
 26929 0048 2BD8     		bhi	.L1906
13121:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
 26930              		.loc 1 13121 25 is_stmt 1 view .LVU7835
13121:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
 26931              		.loc 1 13121 44 is_stmt 0 view .LVU7836
 26932 004a 1C4B     		ldr	r3, .L1911
 26933 004c 1868     		ldr	r0, [r3]
 26934              	.LVL3481:
13121:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
 26935              		.loc 1 13121 44 view .LVU7837
 26936 004e 0469     		ldr	r4, [r0, #16]
 26937              	.LVL3482:
13121:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
ARM GAS  /tmp/ccOloYeZ.s 			page 763


 26938              		.loc 1 13121 36 view .LVU7838
 26939 0050 0123     		movs	r3, #1
 26940 0052 0DF10702 		add	r2, sp, #7
 26941 0056 0D21     		movs	r1, #13
 26942 0058 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26943 005a A047     		blx	r4
 26944              	.LVL3483:
13125:Core/Src/bno055.c ****                         {
 26945              		.loc 1 13125 25 is_stmt 1 view .LVU7839
13125:Core/Src/bno055.c ****                         {
 26946              		.loc 1 13125 28 is_stmt 0 view .LVU7840
 26947 005c 0446     		mov	r4, r0
 26948 005e B8B9     		cbnz	r0, .L1900
13129:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26949              		.loc 1 13129 29 is_stmt 1 view .LVU7841
13129:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26950              		.loc 1 13129 40 is_stmt 0 view .LVU7842
 26951 0060 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
13129:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26952              		.loc 1 13129 38 view .LVU7843
 26953 0064 23F00703 		bic	r3, r3, #7
 26954 0068 05F00700 		and	r0, r5, #7
 26955              	.LVL3484:
13129:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26956              		.loc 1 13129 38 view .LVU7844
 26957 006c 0343     		orrs	r3, r3, r0
 26958 006e 8DF80730 		strb	r3, [sp, #7]
13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 26959              		.loc 1 13130 29 is_stmt 1 view .LVU7845
13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 26960              		.loc 1 13130 49 is_stmt 0 view .LVU7846
 26961 0072 124B     		ldr	r3, .L1911
 26962 0074 1868     		ldr	r0, [r3]
 26963 0076 C568     		ldr	r5, [r0, #12]
13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 26964              		.loc 1 13130 41 view .LVU7847
 26965 0078 0123     		movs	r3, #1
 26966 007a 0DF10702 		add	r2, sp, #7
 26967 007e 0D21     		movs	r1, #13
 26968 0080 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26969 0082 A847     		blx	r5
 26970              	.LVL3485:
13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 26971              		.loc 1 13130 38 view .LVU7848
 26972 0084 54FA80F0 		uxtab	r0, r4, r0
 26973 0088 44B2     		sxtb	r4, r0
 26974              	.LVL3486:
13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 26975              		.loc 1 13130 38 view .LVU7849
 26976 008a 01E0     		b	.L1900
 26977              	.LVL3487:
 26978              	.L1903:
13149:Core/Src/bno055.c ****             }
13150:Core/Src/bno055.c ****         }
13151:Core/Src/bno055.c ****         else
13152:Core/Src/bno055.c ****         {
13153:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccOloYeZ.s 			page 764


 26979              		.loc 1 13153 22 view .LVU7850
 26980 008c 4FF0FF34 		mov	r4, #-1
 26981              	.LVL3488:
 26982              	.L1900:
13154:Core/Src/bno055.c ****         }
13155:Core/Src/bno055.c ****     }
13156:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26983              		.loc 1 13156 5 is_stmt 1 view .LVU7851
 26984              		.loc 1 13156 24 is_stmt 0 view .LVU7852
 26985 0090 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 26986              		.loc 1 13156 8 view .LVU7853
 26987 0094 40B9     		cbnz	r0, .L1910
 26988              	.LVL3489:
 26989              	.L1899:
13157:Core/Src/bno055.c ****     {
13158:Core/Src/bno055.c ****         /* set the operation mode of
13159:Core/Src/bno055.c ****          * previous operation mode*/
13160:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
13161:Core/Src/bno055.c ****     }
13162:Core/Src/bno055.c **** 
13163:Core/Src/bno055.c ****     return com_rslt;
13164:Core/Src/bno055.c **** }
 26990              		.loc 1 13164 1 view .LVU7854
 26991 0096 2046     		mov	r0, r4
 26992 0098 03B0     		add	sp, sp, #12
 26993              		.cfi_remember_state
 26994              		.cfi_def_cfa_offset 12
 26995              		@ sp needed
 26996 009a 30BD     		pop	{r4, r5, pc}
 26997              	.LVL3490:
 26998              	.L1905:
 26999              		.cfi_restore_state
13143:Core/Src/bno055.c ****                 }
 27000              		.loc 1 13143 30 view .LVU7855
 27001 009c 4FF0FF34 		mov	r4, #-1
 27002              	.LVL3491:
13143:Core/Src/bno055.c ****                 }
 27003              		.loc 1 13143 30 view .LVU7856
 27004 00a0 F6E7     		b	.L1900
 27005              	.LVL3492:
 27006              	.L1906:
13138:Core/Src/bno055.c ****                     }
 27007              		.loc 1 13138 34 view .LVU7857
 27008 00a2 6FF00104 		mvn	r4, #1
 27009              	.LVL3493:
13138:Core/Src/bno055.c ****                     }
 27010              		.loc 1 13138 34 view .LVU7858
 27011 00a6 F3E7     		b	.L1900
 27012              	.LVL3494:
 27013              	.L1910:
13160:Core/Src/bno055.c ****     }
 27014              		.loc 1 13160 9 is_stmt 1 view .LVU7859
13160:Core/Src/bno055.c ****     }
 27015              		.loc 1 13160 21 is_stmt 0 view .LVU7860
 27016 00a8 FFF7FEFF 		bl	bno055_set_operation_mode
 27017              	.LVL3495:
13160:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccOloYeZ.s 			page 765


 27018              		.loc 1 13160 18 view .LVU7861
 27019 00ac 54FA80F0 		uxtab	r0, r4, r0
 27020 00b0 44B2     		sxtb	r4, r0
 27021              	.LVL3496:
13160:Core/Src/bno055.c ****     }
 27022              		.loc 1 13160 18 view .LVU7862
 27023 00b2 F0E7     		b	.L1899
 27024              	.LVL3497:
 27025              	.L1902:
13099:Core/Src/bno055.c ****     }
 27026              		.loc 1 13099 16 view .LVU7863
 27027 00b4 6FF07E04 		mvn	r4, #126
 27028 00b8 EDE7     		b	.L1899
 27029              	.L1912:
 27030 00ba 00BF     		.align	2
 27031              	.L1911:
 27032 00bc 00000000 		.word	p_bno055
 27033              		.cfi_endproc
 27034              	.LFE198:
 27036              		.section	.text.bno055_get_gyro_auto_sleep_durn,"ax",%progbits
 27037              		.align	1
 27038              		.global	bno055_get_gyro_auto_sleep_durn
 27039              		.syntax unified
 27040              		.thumb
 27041              		.thumb_func
 27043              	bno055_get_gyro_auto_sleep_durn:
 27044              	.LVL3498:
 27045              	.LFB199:
13165:Core/Src/bno055.c **** 
13166:Core/Src/bno055.c **** /*!
13167:Core/Src/bno055.c ****  *  @brief This API used to read the gyro auto sleep duration
13168:Core/Src/bno055.c ****  *  from page one register from 0x0D bit 3 to 5
13169:Core/Src/bno055.c ****  *
13170:Core/Src/bno055.c ****  *  @param auto_sleep_durn_u8 : The value of gyro auto sleep duration
13171:Core/Src/bno055.c ****  *
13172:Core/Src/bno055.c ****  *  @return results of bus communication function
13173:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13174:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13175:Core/Src/bno055.c ****  *
13176:Core/Src/bno055.c ****  *
13177:Core/Src/bno055.c ****  */
13178:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_auto_sleep_durn(u8 *auto_sleep_durn_u8)
13179:Core/Src/bno055.c **** {
 27046              		.loc 1 13179 1 is_stmt 1 view -0
 27047              		.cfi_startproc
 27048              		@ args = 0, pretend = 0, frame = 8
 27049              		@ frame_needed = 0, uses_anonymous_args = 0
 27050              		.loc 1 13179 1 is_stmt 0 view .LVU7865
 27051 0000 30B5     		push	{r4, r5, lr}
 27052              		.cfi_def_cfa_offset 12
 27053              		.cfi_offset 4, -12
 27054              		.cfi_offset 5, -8
 27055              		.cfi_offset 14, -4
 27056 0002 83B0     		sub	sp, sp, #12
 27057              		.cfi_def_cfa_offset 24
13180:Core/Src/bno055.c ****     /* Variable used to return value of
13181:Core/Src/bno055.c ****      * communication routine*/
ARM GAS  /tmp/ccOloYeZ.s 			page 766


13182:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27058              		.loc 1 13182 5 is_stmt 1 view .LVU7866
 27059              	.LVL3499:
13183:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27060              		.loc 1 13183 5 view .LVU7867
 27061              		.loc 1 13183 8 is_stmt 0 view .LVU7868
 27062 0004 0023     		movs	r3, #0
 27063 0006 8DF80730 		strb	r3, [sp, #7]
13184:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27064              		.loc 1 13184 5 is_stmt 1 view .LVU7869
 27065              	.LVL3500:
13185:Core/Src/bno055.c **** 
13186:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13187:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27066              		.loc 1 13187 5 view .LVU7870
 27067              		.loc 1 13187 18 is_stmt 0 view .LVU7871
 27068 000a 144B     		ldr	r3, .L1921
 27069 000c 1B68     		ldr	r3, [r3]
 27070              		.loc 1 13187 8 view .LVU7872
 27071 000e F3B1     		cbz	r3, .L1917
 27072 0010 0446     		mov	r4, r0
13188:Core/Src/bno055.c ****     {
13189:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13190:Core/Src/bno055.c ****     }
13191:Core/Src/bno055.c ****     else
13192:Core/Src/bno055.c ****     {
13193:Core/Src/bno055.c ****         /*condition check for page, accel range is
13194:Core/Src/bno055.c ****          * available in the page one*/
13195:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 27073              		.loc 1 13195 9 is_stmt 1 view .LVU7873
 27074              		.loc 1 13195 21 is_stmt 0 view .LVU7874
 27075 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27076              		.loc 1 13195 12 view .LVU7875
 27077 0014 012B     		cmp	r3, #1
 27078 0016 14D1     		bne	.L1920
 27079              	.LVL3501:
 27080              	.L1915:
13196:Core/Src/bno055.c ****         {
13197:Core/Src/bno055.c ****             /* Write page as one */
13198:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13199:Core/Src/bno055.c ****         }
13200:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 27081              		.loc 1 13200 53 discriminator 1 view .LVU7876
 27082 0018 104B     		ldr	r3, .L1921
 27083 001a 1B68     		ldr	r3, [r3]
 27084 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27085              		.loc 1 13200 41 discriminator 1 view .LVU7877
 27086 001e 012B     		cmp	r3, #1
 27087 0020 18D1     		bne	.L1918
 27088              	.L1916:
13201:Core/Src/bno055.c ****         {
13202:Core/Src/bno055.c ****             /* Read the value of gyro auto sleep duration */
13203:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 27089              		.loc 1 13203 13 is_stmt 1 view .LVU7878
 27090              		.loc 1 13203 32 is_stmt 0 view .LVU7879
 27091 0022 0E4B     		ldr	r3, .L1921
 27092 0024 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccOloYeZ.s 			page 767


 27093 0026 0569     		ldr	r5, [r0, #16]
 27094              		.loc 1 13203 24 view .LVU7880
 27095 0028 0123     		movs	r3, #1
 27096 002a 0DF10702 		add	r2, sp, #7
 27097 002e 0D21     		movs	r1, #13
 27098 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27099 0032 A847     		blx	r5
 27100              	.LVL3502:
13204:Core/Src/bno055.c ****                                                       BNO055_GYRO_AUTO_SLEEP_DURN_REG,
13205:Core/Src/bno055.c ****                                                       &data_u8r,
13206:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13207:Core/Src/bno055.c ****             *auto_sleep_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_AUTO_SLEEP_DURN);
 27101              		.loc 1 13207 13 is_stmt 1 view .LVU7881
 27102              		.loc 1 13207 35 is_stmt 0 view .LVU7882
 27103 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 27104 0038 C3F3C203 		ubfx	r3, r3, #3, #3
 27105              		.loc 1 13207 33 view .LVU7883
 27106 003c 2370     		strb	r3, [r4]
 27107              	.LVL3503:
 27108              	.L1914:
13208:Core/Src/bno055.c ****         }
13209:Core/Src/bno055.c ****         else
13210:Core/Src/bno055.c ****         {
13211:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13212:Core/Src/bno055.c ****         }
13213:Core/Src/bno055.c ****     }
13214:Core/Src/bno055.c **** 
13215:Core/Src/bno055.c ****     return com_rslt;
13216:Core/Src/bno055.c **** }
 27109              		.loc 1 13216 1 view .LVU7884
 27110 003e 03B0     		add	sp, sp, #12
 27111              		.cfi_remember_state
 27112              		.cfi_def_cfa_offset 12
 27113              		@ sp needed
 27114 0040 30BD     		pop	{r4, r5, pc}
 27115              	.LVL3504:
 27116              	.L1920:
 27117              		.cfi_restore_state
13198:Core/Src/bno055.c ****         }
 27118              		.loc 1 13198 13 is_stmt 1 view .LVU7885
13198:Core/Src/bno055.c ****         }
 27119              		.loc 1 13198 23 is_stmt 0 view .LVU7886
 27120 0042 0120     		movs	r0, #1
 27121              	.LVL3505:
13198:Core/Src/bno055.c ****         }
 27122              		.loc 1 13198 23 view .LVU7887
 27123 0044 FFF7FEFF 		bl	bno055_write_page_id
 27124              	.LVL3506:
13200:Core/Src/bno055.c ****         {
 27125              		.loc 1 13200 9 is_stmt 1 view .LVU7888
13200:Core/Src/bno055.c ****         {
 27126              		.loc 1 13200 12 is_stmt 0 view .LVU7889
 27127 0048 0028     		cmp	r0, #0
 27128 004a EAD0     		beq	.L1916
 27129 004c E4E7     		b	.L1915
 27130              	.LVL3507:
 27131              	.L1917:
ARM GAS  /tmp/ccOloYeZ.s 			page 768


13189:Core/Src/bno055.c ****     }
 27132              		.loc 1 13189 16 view .LVU7890
 27133 004e 6FF07E00 		mvn	r0, #126
 27134              	.LVL3508:
13189:Core/Src/bno055.c ****     }
 27135              		.loc 1 13189 16 view .LVU7891
 27136 0052 F4E7     		b	.L1914
 27137              	.LVL3509:
 27138              	.L1918:
13211:Core/Src/bno055.c ****         }
 27139              		.loc 1 13211 22 view .LVU7892
 27140 0054 4FF0FF30 		mov	r0, #-1
 27141 0058 F1E7     		b	.L1914
 27142              	.L1922:
 27143 005a 00BF     		.align	2
 27144              	.L1921:
 27145 005c 00000000 		.word	p_bno055
 27146              		.cfi_endproc
 27147              	.LFE199:
 27149              		.section	.text.bno055_gyro_set_auto_sleep_durn,"ax",%progbits
 27150              		.align	1
 27151              		.global	bno055_gyro_set_auto_sleep_durn
 27152              		.syntax unified
 27153              		.thumb
 27154              		.thumb_func
 27156              	bno055_gyro_set_auto_sleep_durn:
 27157              	.LVL3510:
 27158              	.LFB200:
13217:Core/Src/bno055.c **** 
13218:Core/Src/bno055.c **** /*!
13219:Core/Src/bno055.c ****  *  @brief This API used to write the gyro auto sleep duration
13220:Core/Src/bno055.c ****  *  from page one register from 0x0D bit 3 to 5
13221:Core/Src/bno055.c ****  *
13222:Core/Src/bno055.c ****  *  @param auto_sleep_durn_u8 : The value of gyro auto sleep duration
13223:Core/Src/bno055.c ****  *  @param bw : The value of gyro bandwidth
13224:Core/Src/bno055.c ****  *
13225:Core/Src/bno055.c ****  *  @return results of bus communication function
13226:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13227:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13228:Core/Src/bno055.c ****  *
13229:Core/Src/bno055.c ****  *
13230:Core/Src/bno055.c ****  */
13231:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_gyro_set_auto_sleep_durn(u8 auto_sleep_durn_u8, u8 bw)
13232:Core/Src/bno055.c **** {
 27159              		.loc 1 13232 1 is_stmt 1 view -0
 27160              		.cfi_startproc
 27161              		@ args = 0, pretend = 0, frame = 8
 27162              		@ frame_needed = 0, uses_anonymous_args = 0
 27163              		.loc 1 13232 1 is_stmt 0 view .LVU7894
 27164 0000 70B5     		push	{r4, r5, r6, lr}
 27165              		.cfi_def_cfa_offset 16
 27166              		.cfi_offset 4, -16
 27167              		.cfi_offset 5, -12
 27168              		.cfi_offset 6, -8
 27169              		.cfi_offset 14, -4
 27170 0002 82B0     		sub	sp, sp, #8
 27171              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccOloYeZ.s 			page 769


13233:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27172              		.loc 1 13233 5 is_stmt 1 view .LVU7895
 27173              	.LVL3511:
13234:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27174              		.loc 1 13234 5 view .LVU7896
 27175              		.loc 1 13234 8 is_stmt 0 view .LVU7897
 27176 0004 0023     		movs	r3, #0
 27177 0006 8DF80730 		strb	r3, [sp, #7]
13235:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27178              		.loc 1 13235 5 is_stmt 1 view .LVU7898
 27179              	.LVL3512:
13236:Core/Src/bno055.c ****     u8 auto_sleep_durn_u8r;
 27180              		.loc 1 13236 5 view .LVU7899
13237:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 27181              		.loc 1 13237 5 view .LVU7900
 27182              		.loc 1 13237 8 is_stmt 0 view .LVU7901
 27183 000a 8DF80630 		strb	r3, [sp, #6]
13238:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 27184              		.loc 1 13238 5 is_stmt 1 view .LVU7902
 27185              	.LVL3513:
13239:Core/Src/bno055.c **** 
13240:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13241:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27186              		.loc 1 13241 5 view .LVU7903
 27187              		.loc 1 13241 18 is_stmt 0 view .LVU7904
 27188 000e 434B     		ldr	r3, .L1957
 27189 0010 1B68     		ldr	r3, [r3]
 27190              		.loc 1 13241 8 view .LVU7905
 27191 0012 002B     		cmp	r3, #0
 27192 0014 7FD0     		beq	.L1938
 27193 0016 0446     		mov	r4, r0
 27194 0018 0D46     		mov	r5, r1
13242:Core/Src/bno055.c ****     {
13243:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13244:Core/Src/bno055.c ****     }
13245:Core/Src/bno055.c ****     else
13246:Core/Src/bno055.c ****     {
13247:Core/Src/bno055.c ****         /* The write operation effective only if the operation
13248:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
13249:Core/Src/bno055.c ****          * current operation mode and set the config mode */
13250:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 27195              		.loc 1 13250 9 is_stmt 1 view .LVU7906
 27196              		.loc 1 13250 19 is_stmt 0 view .LVU7907
 27197 001a 0DF10600 		add	r0, sp, #6
 27198              	.LVL3514:
 27199              		.loc 1 13250 19 view .LVU7908
 27200 001e FFF7FEFF 		bl	bno055_get_operation_mode
 27201              	.LVL3515:
13251:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 27202              		.loc 1 13251 9 is_stmt 1 view .LVU7909
 27203              		.loc 1 13251 12 is_stmt 0 view .LVU7910
 27204 0022 0646     		mov	r6, r0
 27205 0024 0028     		cmp	r0, #0
 27206 0026 62D1     		bne	.L1939
13252:Core/Src/bno055.c ****         {
13253:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 27207              		.loc 1 13253 13 is_stmt 1 view .LVU7911
ARM GAS  /tmp/ccOloYeZ.s 			page 770


 27208              		.loc 1 13253 32 is_stmt 0 view .LVU7912
 27209 0028 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 27210              		.loc 1 13253 16 view .LVU7913
 27211 002c 1BB9     		cbnz	r3, .L1953
 27212              	.LVL3516:
 27213              	.L1926:
13254:Core/Src/bno055.c ****             {
13255:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
13256:Core/Src/bno055.c ****             }
13257:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 27214              		.loc 1 13257 13 is_stmt 1 view .LVU7914
 27215              		.loc 1 13257 16 is_stmt 0 view .LVU7915
 27216 002e 46B1     		cbz	r6, .L1954
13258:Core/Src/bno055.c ****             {
13259:Core/Src/bno055.c ****                 /* Write page as one */
13260:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13261:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
13262:Core/Src/bno055.c ****                 {
13263:Core/Src/bno055.c ****                     /* Write the value of gyro sleep duration */
13264:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
13265:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
13266:Core/Src/bno055.c ****                                                               &data_u8r,
13267:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
13268:Core/Src/bno055.c ****                     if (auto_sleep_durn_u8 < BNO055_GYRO_AUTO_SLEEP_DURATION_RANGE)
13269:Core/Src/bno055.c ****                     {
13270:Core/Src/bno055.c ****                         switch (bw)
13271:Core/Src/bno055.c ****                         {
13272:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_523HZ:
13273:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_4MS_AUTOSLPDUR)
13274:Core/Src/bno055.c ****                                 {
13275:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13276:Core/Src/bno055.c ****                                 }
13277:Core/Src/bno055.c ****                                 else
13278:Core/Src/bno055.c ****                                 {
13279:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_4MS_AUTOSLPDUR;
13280:Core/Src/bno055.c ****                                 }
13281:Core/Src/bno055.c ****                                 break;
13282:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_230HZ:
13283:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_4MS_AUTOSLPDUR)
13284:Core/Src/bno055.c ****                                 {
13285:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13286:Core/Src/bno055.c ****                                 }
13287:Core/Src/bno055.c ****                                 else
13288:Core/Src/bno055.c ****                                 {
13289:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_4MS_AUTOSLPDUR;
13290:Core/Src/bno055.c ****                                 }
13291:Core/Src/bno055.c ****                                 break;
13292:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_116HZ:
13293:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_4MS_AUTOSLPDUR)
13294:Core/Src/bno055.c ****                                 {
13295:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13296:Core/Src/bno055.c ****                                 }
13297:Core/Src/bno055.c ****                                 else
13298:Core/Src/bno055.c ****                                 {
13299:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_4MS_AUTOSLPDUR;
13300:Core/Src/bno055.c ****                                 }
13301:Core/Src/bno055.c ****                                 break;
ARM GAS  /tmp/ccOloYeZ.s 			page 771


13302:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_47HZ:
13303:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_5MS_AUTOSLPDUR)
13304:Core/Src/bno055.c ****                                 {
13305:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13306:Core/Src/bno055.c ****                                 }
13307:Core/Src/bno055.c ****                                 else
13308:Core/Src/bno055.c ****                                 {
13309:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_5MS_AUTOSLPDUR;
13310:Core/Src/bno055.c ****                                 }
13311:Core/Src/bno055.c ****                                 break;
13312:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_23HZ:
13313:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_10MS_AUTOSLPDUR)
13314:Core/Src/bno055.c ****                                 {
13315:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13316:Core/Src/bno055.c ****                                 }
13317:Core/Src/bno055.c ****                                 else
13318:Core/Src/bno055.c ****                                 {
13319:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_10MS_AUTOSLPDUR;
13320:Core/Src/bno055.c ****                                 }
13321:Core/Src/bno055.c ****                                 break;
13322:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_12HZ:
13323:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_20MS_AUTOSLPDUR)
13324:Core/Src/bno055.c ****                                 {
13325:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13326:Core/Src/bno055.c ****                                 }
13327:Core/Src/bno055.c ****                                 else
13328:Core/Src/bno055.c ****                                 {
13329:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_20MS_AUTOSLPDUR;
13330:Core/Src/bno055.c ****                                 }
13331:Core/Src/bno055.c ****                                 break;
13332:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_64HZ:
13333:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_10MS_AUTOSLPDUR)
13334:Core/Src/bno055.c ****                                 {
13335:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13336:Core/Src/bno055.c ****                                 }
13337:Core/Src/bno055.c ****                                 else
13338:Core/Src/bno055.c ****                                 {
13339:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_10MS_AUTOSLPDUR;
13340:Core/Src/bno055.c ****                                 }
13341:Core/Src/bno055.c ****                                 break;
13342:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_32HZ:
13343:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_20MS_AUTOSLPDUR)
13344:Core/Src/bno055.c ****                                 {
13345:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13346:Core/Src/bno055.c ****                                 }
13347:Core/Src/bno055.c ****                                 else
13348:Core/Src/bno055.c ****                                 {
13349:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_20MS_AUTOSLPDUR;
13350:Core/Src/bno055.c ****                                 }
13351:Core/Src/bno055.c ****                                 break;
13352:Core/Src/bno055.c ****                             default:
13353:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_4MS_AUTOSLPDUR)
13354:Core/Src/bno055.c ****                                 {
13355:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13356:Core/Src/bno055.c ****                                 }
13357:Core/Src/bno055.c ****                                 else
13358:Core/Src/bno055.c ****                                 {
ARM GAS  /tmp/ccOloYeZ.s 			page 772


13359:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_4MS_AUTOSLPDUR;
13360:Core/Src/bno055.c ****                                 }
13361:Core/Src/bno055.c ****                                 break;
13362:Core/Src/bno055.c ****                         }
13363:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
13364:Core/Src/bno055.c ****                         {
13365:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_AUTO_SLEEP_DURN, a
13366:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
13367:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
13368:Core/Src/bno055.c ****                                                                         &data_u8r,
13369:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
13370:Core/Src/bno055.c ****                         }
13371:Core/Src/bno055.c ****                     }
13372:Core/Src/bno055.c ****                     else
13373:Core/Src/bno055.c ****                     {
13374:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
13375:Core/Src/bno055.c ****                     }
13376:Core/Src/bno055.c ****                 }
13377:Core/Src/bno055.c ****                 else
13378:Core/Src/bno055.c ****                 {
13379:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
13380:Core/Src/bno055.c ****                 }
13381:Core/Src/bno055.c ****             }
13382:Core/Src/bno055.c ****             else
13383:Core/Src/bno055.c ****             {
13384:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 27217              		.loc 1 13384 26 view .LVU7916
 27218 0030 4FF0FF36 		mov	r6, #-1
 27219              	.LVL3517:
 27220              		.loc 1 13384 26 view .LVU7917
 27221 0034 5DE0     		b	.L1925
 27222              	.LVL3518:
 27223              	.L1953:
13255:Core/Src/bno055.c ****             }
 27224              		.loc 1 13255 17 is_stmt 1 view .LVU7918
13255:Core/Src/bno055.c ****             }
 27225              		.loc 1 13255 28 is_stmt 0 view .LVU7919
 27226 0036 FFF7FEFF 		bl	bno055_set_operation_mode
 27227              	.LVL3519:
13255:Core/Src/bno055.c ****             }
 27228              		.loc 1 13255 25 view .LVU7920
 27229 003a 56FA80F6 		uxtab	r6, r6, r0
 27230 003e 76B2     		sxtb	r6, r6
 27231              	.LVL3520:
13255:Core/Src/bno055.c ****             }
 27232              		.loc 1 13255 25 view .LVU7921
 27233 0040 F5E7     		b	.L1926
 27234              	.L1954:
13260:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27235              		.loc 1 13260 17 is_stmt 1 view .LVU7922
13260:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27236              		.loc 1 13260 30 is_stmt 0 view .LVU7923
 27237 0042 0120     		movs	r0, #1
 27238 0044 FFF7FEFF 		bl	bno055_write_page_id
 27239              	.LVL3521:
13261:Core/Src/bno055.c ****                 {
 27240              		.loc 1 13261 17 is_stmt 1 view .LVU7924
ARM GAS  /tmp/ccOloYeZ.s 			page 773


13261:Core/Src/bno055.c ****                 {
 27241              		.loc 1 13261 20 is_stmt 0 view .LVU7925
 27242 0048 0028     		cmp	r0, #0
 27243 004a 58D1     		bne	.L1941
13264:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
 27244              		.loc 1 13264 21 is_stmt 1 view .LVU7926
13264:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
 27245              		.loc 1 13264 40 is_stmt 0 view .LVU7927
 27246 004c 334B     		ldr	r3, .L1957
 27247 004e 1868     		ldr	r0, [r3]
 27248              	.LVL3522:
13264:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
 27249              		.loc 1 13264 40 view .LVU7928
 27250 0050 0669     		ldr	r6, [r0, #16]
 27251              	.LVL3523:
13264:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
 27252              		.loc 1 13264 32 view .LVU7929
 27253 0052 0123     		movs	r3, #1
 27254 0054 0DF10702 		add	r2, sp, #7
 27255 0058 0D21     		movs	r1, #13
 27256 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27257 005c B047     		blx	r6
 27258              	.LVL3524:
 27259 005e 0646     		mov	r6, r0
 27260              	.LVL3525:
13268:Core/Src/bno055.c ****                     {
 27261              		.loc 1 13268 21 is_stmt 1 view .LVU7930
13268:Core/Src/bno055.c ****                     {
 27262              		.loc 1 13268 24 is_stmt 0 view .LVU7931
 27263 0060 072C     		cmp	r4, #7
 27264 0062 4FD8     		bhi	.L1942
13270:Core/Src/bno055.c ****                         {
 27265              		.loc 1 13270 25 is_stmt 1 view .LVU7932
 27266 0064 072D     		cmp	r5, #7
 27267 0066 3CD8     		bhi	.L1927
 27268 0068 DFE805F0 		tbb	[pc, r5]
 27269              	.L1929:
 27270 006c 04       		.byte	(.L1936-.L1929)/2
 27271 006d 1F       		.byte	(.L1935-.L1929)/2
 27272 006e 23       		.byte	(.L1934-.L1929)/2
 27273 006f 27       		.byte	(.L1933-.L1929)/2
 27274 0070 2B       		.byte	(.L1932-.L1929)/2
 27275 0071 2F       		.byte	(.L1931-.L1929)/2
 27276 0072 33       		.byte	(.L1930-.L1929)/2
 27277 0073 37       		.byte	(.L1928-.L1929)/2
 27278              		.p2align 1
 27279              	.L1936:
13273:Core/Src/bno055.c ****                                 {
 27280              		.loc 1 13273 33 view .LVU7933
13273:Core/Src/bno055.c ****                                 {
 27281              		.loc 1 13273 36 is_stmt 0 view .LVU7934
 27282 0074 012C     		cmp	r4, #1
 27283 0076 38D9     		bls	.L1955
 27284              	.L1937:
 27285              	.LVL3526:
13363:Core/Src/bno055.c ****                         {
 27286              		.loc 1 13363 25 is_stmt 1 view .LVU7935
ARM GAS  /tmp/ccOloYeZ.s 			page 774


13363:Core/Src/bno055.c ****                         {
 27287              		.loc 1 13363 28 is_stmt 0 view .LVU7936
 27288 0078 002E     		cmp	r6, #0
 27289 007a 3AD1     		bne	.L1925
13365:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27290              		.loc 1 13365 29 is_stmt 1 view .LVU7937
13365:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27291              		.loc 1 13365 40 is_stmt 0 view .LVU7938
 27292 007c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 27293 0080 E400     		lsls	r4, r4, #3
 27294              	.LVL3527:
13365:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27295              		.loc 1 13365 40 view .LVU7939
 27296 0082 04F03804 		and	r4, r4, #56
 27297 0086 23F03803 		bic	r3, r3, #56
 27298 008a 2343     		orrs	r3, r3, r4
13365:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27299              		.loc 1 13365 38 view .LVU7940
 27300 008c 8DF80730 		strb	r3, [sp, #7]
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 27301              		.loc 1 13366 29 is_stmt 1 view .LVU7941
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 27302              		.loc 1 13366 49 is_stmt 0 view .LVU7942
 27303 0090 224B     		ldr	r3, .L1957
 27304 0092 1868     		ldr	r0, [r3]
 27305 0094 C468     		ldr	r4, [r0, #12]
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 27306              		.loc 1 13366 41 view .LVU7943
 27307 0096 0123     		movs	r3, #1
 27308 0098 0DF10702 		add	r2, sp, #7
 27309 009c 0D21     		movs	r1, #13
 27310 009e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27311 00a0 A047     		blx	r4
 27312              	.LVL3528:
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 27313              		.loc 1 13366 38 view .LVU7944
 27314 00a2 56FA80F0 		uxtab	r0, r6, r0
 27315 00a6 46B2     		sxtb	r6, r0
 27316              	.LVL3529:
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 27317              		.loc 1 13366 38 view .LVU7945
 27318 00a8 23E0     		b	.L1925
 27319              	.LVL3530:
 27320              	.L1935:
13283:Core/Src/bno055.c ****                                 {
 27321              		.loc 1 13283 33 is_stmt 1 view .LVU7946
13283:Core/Src/bno055.c ****                                 {
 27322              		.loc 1 13283 36 is_stmt 0 view .LVU7947
 27323 00aa 012C     		cmp	r4, #1
 27324 00ac E4D8     		bhi	.L1937
13289:Core/Src/bno055.c ****                                 }
 27325              		.loc 1 13289 57 view .LVU7948
 27326 00ae 2C46     		mov	r4, r5
 27327 00b0 E2E7     		b	.L1937
 27328              	.L1934:
13293:Core/Src/bno055.c ****                                 {
 27329              		.loc 1 13293 33 is_stmt 1 view .LVU7949
ARM GAS  /tmp/ccOloYeZ.s 			page 775


13293:Core/Src/bno055.c ****                                 {
 27330              		.loc 1 13293 36 is_stmt 0 view .LVU7950
 27331 00b2 012C     		cmp	r4, #1
 27332 00b4 E0D8     		bhi	.L1937
13299:Core/Src/bno055.c ****                                 }
 27333              		.loc 1 13299 57 view .LVU7951
 27334 00b6 0124     		movs	r4, #1
 27335 00b8 DEE7     		b	.L1937
 27336              	.L1933:
13303:Core/Src/bno055.c ****                                 {
 27337              		.loc 1 13303 33 is_stmt 1 view .LVU7952
13303:Core/Src/bno055.c ****                                 {
 27338              		.loc 1 13303 36 is_stmt 0 view .LVU7953
 27339 00ba 022C     		cmp	r4, #2
 27340 00bc DCD8     		bhi	.L1937
13309:Core/Src/bno055.c ****                                 }
 27341              		.loc 1 13309 57 view .LVU7954
 27342 00be 0224     		movs	r4, #2
 27343 00c0 DAE7     		b	.L1937
 27344              	.L1932:
13313:Core/Src/bno055.c ****                                 {
 27345              		.loc 1 13313 33 is_stmt 1 view .LVU7955
13313:Core/Src/bno055.c ****                                 {
 27346              		.loc 1 13313 36 is_stmt 0 view .LVU7956
 27347 00c2 042C     		cmp	r4, #4
 27348 00c4 D8D8     		bhi	.L1937
13319:Core/Src/bno055.c ****                                 }
 27349              		.loc 1 13319 57 view .LVU7957
 27350 00c6 2C46     		mov	r4, r5
 27351 00c8 D6E7     		b	.L1937
 27352              	.L1931:
13323:Core/Src/bno055.c ****                                 {
 27353              		.loc 1 13323 33 is_stmt 1 view .LVU7958
13323:Core/Src/bno055.c ****                                 {
 27354              		.loc 1 13323 36 is_stmt 0 view .LVU7959
 27355 00ca 062C     		cmp	r4, #6
 27356 00cc D4D8     		bhi	.L1937
13329:Core/Src/bno055.c ****                                 }
 27357              		.loc 1 13329 57 view .LVU7960
 27358 00ce 0624     		movs	r4, #6
 27359 00d0 D2E7     		b	.L1937
 27360              	.L1930:
13333:Core/Src/bno055.c ****                                 {
 27361              		.loc 1 13333 33 is_stmt 1 view .LVU7961
13333:Core/Src/bno055.c ****                                 {
 27362              		.loc 1 13333 36 is_stmt 0 view .LVU7962
 27363 00d2 042C     		cmp	r4, #4
 27364 00d4 D0D8     		bhi	.L1937
13339:Core/Src/bno055.c ****                                 }
 27365              		.loc 1 13339 57 view .LVU7963
 27366 00d6 0424     		movs	r4, #4
 27367 00d8 CEE7     		b	.L1937
 27368              	.L1928:
13343:Core/Src/bno055.c ****                                 {
 27369              		.loc 1 13343 33 is_stmt 1 view .LVU7964
13343:Core/Src/bno055.c ****                                 {
 27370              		.loc 1 13343 36 is_stmt 0 view .LVU7965
ARM GAS  /tmp/ccOloYeZ.s 			page 776


 27371 00da 062C     		cmp	r4, #6
 27372 00dc CCD8     		bhi	.L1937
13349:Core/Src/bno055.c ****                                 }
 27373              		.loc 1 13349 57 view .LVU7966
 27374 00de 0624     		movs	r4, #6
 27375 00e0 CAE7     		b	.L1937
 27376              	.L1927:
13353:Core/Src/bno055.c ****                                 {
 27377              		.loc 1 13353 33 is_stmt 1 view .LVU7967
13353:Core/Src/bno055.c ****                                 {
 27378              		.loc 1 13353 36 is_stmt 0 view .LVU7968
 27379 00e2 012C     		cmp	r4, #1
 27380 00e4 C8D8     		bhi	.L1937
13359:Core/Src/bno055.c ****                                 }
 27381              		.loc 1 13359 57 view .LVU7969
 27382 00e6 0124     		movs	r4, #1
 27383 00e8 C6E7     		b	.L1937
 27384              	.L1955:
13279:Core/Src/bno055.c ****                                 }
 27385              		.loc 1 13279 57 view .LVU7970
 27386 00ea 0124     		movs	r4, #1
 27387 00ec C4E7     		b	.L1937
 27388              	.LVL3531:
 27389              	.L1939:
13385:Core/Src/bno055.c ****             }
13386:Core/Src/bno055.c ****         }
13387:Core/Src/bno055.c ****         else
13388:Core/Src/bno055.c ****         {
13389:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 27390              		.loc 1 13389 22 view .LVU7971
 27391 00ee 4FF0FF36 		mov	r6, #-1
 27392              	.LVL3532:
 27393              	.L1925:
13390:Core/Src/bno055.c ****         }
13391:Core/Src/bno055.c ****     }
13392:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 27394              		.loc 1 13392 5 is_stmt 1 view .LVU7972
 27395              		.loc 1 13392 24 is_stmt 0 view .LVU7973
 27396 00f2 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 27397              		.loc 1 13392 8 view .LVU7974
 27398 00f6 40B9     		cbnz	r0, .L1956
 27399              	.LVL3533:
 27400              	.L1924:
13393:Core/Src/bno055.c ****     {
13394:Core/Src/bno055.c ****         /* set the operation mode of
13395:Core/Src/bno055.c ****          * previous operation mode*/
13396:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
13397:Core/Src/bno055.c ****     }
13398:Core/Src/bno055.c **** 
13399:Core/Src/bno055.c ****     return com_rslt;
13400:Core/Src/bno055.c **** }
 27401              		.loc 1 13400 1 view .LVU7975
 27402 00f8 3046     		mov	r0, r6
 27403 00fa 02B0     		add	sp, sp, #8
 27404              		.cfi_remember_state
 27405              		.cfi_def_cfa_offset 16
 27406              		@ sp needed
ARM GAS  /tmp/ccOloYeZ.s 			page 777


 27407 00fc 70BD     		pop	{r4, r5, r6, pc}
 27408              	.LVL3534:
 27409              	.L1941:
 27410              		.cfi_restore_state
13379:Core/Src/bno055.c ****                 }
 27411              		.loc 1 13379 30 view .LVU7976
 27412 00fe 4FF0FF36 		mov	r6, #-1
 27413              	.LVL3535:
13379:Core/Src/bno055.c ****                 }
 27414              		.loc 1 13379 30 view .LVU7977
 27415 0102 F6E7     		b	.L1925
 27416              	.LVL3536:
 27417              	.L1942:
13374:Core/Src/bno055.c ****                     }
 27418              		.loc 1 13374 34 view .LVU7978
 27419 0104 6FF00106 		mvn	r6, #1
 27420              	.LVL3537:
13374:Core/Src/bno055.c ****                     }
 27421              		.loc 1 13374 34 view .LVU7979
 27422 0108 F3E7     		b	.L1925
 27423              	.LVL3538:
 27424              	.L1956:
13396:Core/Src/bno055.c ****     }
 27425              		.loc 1 13396 9 is_stmt 1 view .LVU7980
13396:Core/Src/bno055.c ****     }
 27426              		.loc 1 13396 21 is_stmt 0 view .LVU7981
 27427 010a FFF7FEFF 		bl	bno055_set_operation_mode
 27428              	.LVL3539:
13396:Core/Src/bno055.c ****     }
 27429              		.loc 1 13396 18 view .LVU7982
 27430 010e 56FA80F0 		uxtab	r0, r6, r0
 27431 0112 46B2     		sxtb	r6, r0
 27432              	.LVL3540:
13396:Core/Src/bno055.c ****     }
 27433              		.loc 1 13396 18 view .LVU7983
 27434 0114 F0E7     		b	.L1924
 27435              	.LVL3541:
 27436              	.L1938:
13243:Core/Src/bno055.c ****     }
 27437              		.loc 1 13243 16 view .LVU7984
 27438 0116 6FF07E06 		mvn	r6, #126
 27439 011a EDE7     		b	.L1924
 27440              	.L1958:
 27441              		.align	2
 27442              	.L1957:
 27443 011c 00000000 		.word	p_bno055
 27444              		.cfi_endproc
 27445              	.LFE200:
 27447              		.section	.text.bno055_set_gyro_bw,"ax",%progbits
 27448              		.align	1
 27449              		.global	bno055_set_gyro_bw
 27450              		.syntax unified
 27451              		.thumb
 27452              		.thumb_func
 27454              	bno055_set_gyro_bw:
 27455              	.LVL3542:
 27456              	.LFB190:
ARM GAS  /tmp/ccOloYeZ.s 			page 778


12395:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27457              		.loc 1 12395 1 is_stmt 1 view -0
 27458              		.cfi_startproc
 27459              		@ args = 0, pretend = 0, frame = 8
 27460              		@ frame_needed = 0, uses_anonymous_args = 0
12395:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27461              		.loc 1 12395 1 is_stmt 0 view .LVU7986
 27462 0000 70B5     		push	{r4, r5, r6, lr}
 27463              		.cfi_def_cfa_offset 16
 27464              		.cfi_offset 4, -16
 27465              		.cfi_offset 5, -12
 27466              		.cfi_offset 6, -8
 27467              		.cfi_offset 14, -4
 27468 0002 82B0     		sub	sp, sp, #8
 27469              		.cfi_def_cfa_offset 24
12396:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27470              		.loc 1 12396 5 is_stmt 1 view .LVU7987
 27471              	.LVL3543:
12397:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27472              		.loc 1 12397 5 view .LVU7988
12397:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27473              		.loc 1 12397 8 is_stmt 0 view .LVU7989
 27474 0004 0023     		movs	r3, #0
 27475 0006 8DF80730 		strb	r3, [sp, #7]
12398:Core/Src/bno055.c ****     u8 gyro_opmode = BNO055_INIT_VALUE;
 27476              		.loc 1 12398 5 is_stmt 1 view .LVU7990
 27477              	.LVL3544:
12399:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
 27478              		.loc 1 12399 5 view .LVU7991
12399:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
 27479              		.loc 1 12399 8 is_stmt 0 view .LVU7992
 27480 000a 8DF80630 		strb	r3, [sp, #6]
12400:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 27481              		.loc 1 12400 5 is_stmt 1 view .LVU7993
12400:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 27482              		.loc 1 12400 8 is_stmt 0 view .LVU7994
 27483 000e 8DF80530 		strb	r3, [sp, #5]
12401:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 27484              		.loc 1 12401 5 is_stmt 1 view .LVU7995
 27485              	.LVL3545:
12402:Core/Src/bno055.c **** 
 27486              		.loc 1 12402 5 view .LVU7996
12402:Core/Src/bno055.c **** 
 27487              		.loc 1 12402 8 is_stmt 0 view .LVU7997
 27488 0012 8DF80430 		strb	r3, [sp, #4]
12405:Core/Src/bno055.c ****     {
 27489              		.loc 1 12405 5 is_stmt 1 view .LVU7998
12405:Core/Src/bno055.c ****     {
 27490              		.loc 1 12405 18 is_stmt 0 view .LVU7999
 27491 0016 374B     		ldr	r3, .L1973
 27492 0018 1B68     		ldr	r3, [r3]
12405:Core/Src/bno055.c ****     {
 27493              		.loc 1 12405 8 view .LVU8000
 27494 001a 002B     		cmp	r3, #0
 27495 001c 67D0     		beq	.L1964
 27496 001e 0546     		mov	r5, r0
12414:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
ARM GAS  /tmp/ccOloYeZ.s 			page 779


 27497              		.loc 1 12414 9 is_stmt 1 view .LVU8001
12414:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 27498              		.loc 1 12414 19 is_stmt 0 view .LVU8002
 27499 0020 01A8     		add	r0, sp, #4
 27500              	.LVL3546:
12414:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 27501              		.loc 1 12414 19 view .LVU8003
 27502 0022 FFF7FEFF 		bl	bno055_get_operation_mode
 27503              	.LVL3547:
12415:Core/Src/bno055.c ****         {
 27504              		.loc 1 12415 9 is_stmt 1 view .LVU8004
12415:Core/Src/bno055.c ****         {
 27505              		.loc 1 12415 12 is_stmt 0 view .LVU8005
 27506 0026 0446     		mov	r4, r0
 27507 0028 0028     		cmp	r0, #0
 27508 002a 4CD1     		bne	.L1965
12417:Core/Src/bno055.c ****             {
 27509              		.loc 1 12417 13 is_stmt 1 view .LVU8006
12417:Core/Src/bno055.c ****             {
 27510              		.loc 1 12417 32 is_stmt 0 view .LVU8007
 27511 002c 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
12417:Core/Src/bno055.c ****             {
 27512              		.loc 1 12417 16 view .LVU8008
 27513 0030 1BB9     		cbnz	r3, .L1970
 27514              	.LVL3548:
 27515              	.L1962:
12421:Core/Src/bno055.c ****             {
 27516              		.loc 1 12421 13 is_stmt 1 view .LVU8009
12421:Core/Src/bno055.c ****             {
 27517              		.loc 1 12421 16 is_stmt 0 view .LVU8010
 27518 0032 44B1     		cbz	r4, .L1971
12497:Core/Src/bno055.c ****             }
 27519              		.loc 1 12497 26 view .LVU8011
 27520 0034 4FF0FF34 		mov	r4, #-1
 27521              	.LVL3549:
12497:Core/Src/bno055.c ****             }
 27522              		.loc 1 12497 26 view .LVU8012
 27523 0038 47E0     		b	.L1961
 27524              	.LVL3550:
 27525              	.L1970:
12419:Core/Src/bno055.c ****             }
 27526              		.loc 1 12419 17 is_stmt 1 view .LVU8013
12419:Core/Src/bno055.c ****             }
 27527              		.loc 1 12419 28 is_stmt 0 view .LVU8014
 27528 003a FFF7FEFF 		bl	bno055_set_operation_mode
 27529              	.LVL3551:
12419:Core/Src/bno055.c ****             }
 27530              		.loc 1 12419 25 view .LVU8015
 27531 003e 54FA80F4 		uxtab	r4, r4, r0
 27532 0042 64B2     		sxtb	r4, r4
 27533              	.LVL3552:
12419:Core/Src/bno055.c ****             }
 27534              		.loc 1 12419 25 view .LVU8016
 27535 0044 F5E7     		b	.L1962
 27536              	.L1971:
12424:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27537              		.loc 1 12424 17 is_stmt 1 view .LVU8017
ARM GAS  /tmp/ccOloYeZ.s 			page 780


12424:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27538              		.loc 1 12424 30 is_stmt 0 view .LVU8018
 27539 0046 0120     		movs	r0, #1
 27540 0048 FFF7FEFF 		bl	bno055_write_page_id
 27541              	.LVL3553:
12425:Core/Src/bno055.c ****                 {
 27542              		.loc 1 12425 17 is_stmt 1 view .LVU8019
12425:Core/Src/bno055.c ****                 {
 27543              		.loc 1 12425 20 is_stmt 0 view .LVU8020
 27544 004c 0028     		cmp	r0, #0
 27545 004e 42D1     		bne	.L1967
12428:Core/Src/bno055.c ****                         gyro_bw_u8 < BNO055_ACCEL_GYRO_BW_RANGE)
 27546              		.loc 1 12428 21 is_stmt 1 view .LVU8021
12428:Core/Src/bno055.c ****                         gyro_bw_u8 < BNO055_ACCEL_GYRO_BW_RANGE)
 27547              		.loc 1 12428 24 is_stmt 0 view .LVU8022
 27548 0050 072D     		cmp	r5, #7
 27549 0052 43D8     		bhi	.L1968
12431:Core/Src/bno055.c ****                         {
 27550              		.loc 1 12431 25 is_stmt 1 view .LVU8023
 27551              	.LVL3554:
12460:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
 27552              		.loc 1 12460 25 view .LVU8024
12460:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
 27553              		.loc 1 12460 44 is_stmt 0 view .LVU8025
 27554 0054 274B     		ldr	r3, .L1973
 27555 0056 1868     		ldr	r0, [r3]
 27556              	.LVL3555:
12460:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
 27557              		.loc 1 12460 44 view .LVU8026
 27558 0058 0469     		ldr	r4, [r0, #16]
 27559              	.LVL3556:
12460:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
 27560              		.loc 1 12460 36 view .LVU8027
 27561 005a 0123     		movs	r3, #1
 27562 005c 0DF10702 		add	r2, sp, #7
 27563 0060 0A21     		movs	r1, #10
 27564 0062 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27565 0064 A047     		blx	r4
 27566              	.LVL3557:
12464:Core/Src/bno055.c ****                         {
 27567              		.loc 1 12464 25 is_stmt 1 view .LVU8028
12464:Core/Src/bno055.c ****                         {
 27568              		.loc 1 12464 28 is_stmt 0 view .LVU8029
 27569 0066 90B9     		cbnz	r0, .L1963
12466:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27570              		.loc 1 12466 29 is_stmt 1 view .LVU8030
12466:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27571              		.loc 1 12466 40 is_stmt 0 view .LVU8031
 27572 0068 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 27573 006c EA00     		lsls	r2, r5, #3
 27574 006e 02F03802 		and	r2, r2, #56
 27575 0072 23F03803 		bic	r3, r3, #56
 27576 0076 1343     		orrs	r3, r3, r2
12466:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27577              		.loc 1 12466 38 view .LVU8032
 27578 0078 8DF80730 		strb	r3, [sp, #7]
12467:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
ARM GAS  /tmp/ccOloYeZ.s 			page 781


 27579              		.loc 1 12467 29 is_stmt 1 view .LVU8033
12467:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
 27580              		.loc 1 12467 49 is_stmt 0 view .LVU8034
 27581 007c 1D4B     		ldr	r3, .L1973
 27582 007e 1868     		ldr	r0, [r3]
 27583              	.LVL3558:
12467:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
 27584              		.loc 1 12467 49 view .LVU8035
 27585 0080 C468     		ldr	r4, [r0, #12]
12467:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
 27586              		.loc 1 12467 41 view .LVU8036
 27587 0082 0123     		movs	r3, #1
 27588 0084 0DF10702 		add	r2, sp, #7
 27589 0088 0A21     		movs	r1, #10
 27590 008a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27591 008c A047     		blx	r4
 27592              	.LVL3559:
 27593              	.L1963:
12472:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
 27594              		.loc 1 12472 25 is_stmt 1 view .LVU8037
12472:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
 27595              		.loc 1 12472 36 is_stmt 0 view .LVU8038
 27596 008e 0DF10600 		add	r0, sp, #6
 27597 0092 FFF7FEFF 		bl	bno055_get_gyro_power_mode
 27598              	.LVL3560:
12473:Core/Src/bno055.c ****                         {
 27599              		.loc 1 12473 25 is_stmt 1 view .LVU8039
12473:Core/Src/bno055.c ****                         {
 27600              		.loc 1 12473 28 is_stmt 0 view .LVU8040
 27601 0096 0446     		mov	r4, r0
 27602 0098 B8B9     		cbnz	r0, .L1961
12475:Core/Src/bno055.c ****                             {
 27603              		.loc 1 12475 29 is_stmt 1 view .LVU8041
12475:Core/Src/bno055.c ****                             {
 27604              		.loc 1 12475 45 is_stmt 0 view .LVU8042
 27605 009a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
12475:Core/Src/bno055.c ****                             {
 27606              		.loc 1 12475 32 view .LVU8043
 27607 009e 042B     		cmp	r3, #4
 27608 00a0 13D1     		bne	.L1961
12477:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 27609              		.loc 1 12477 33 is_stmt 1 view .LVU8044
12477:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 27610              		.loc 1 12477 45 is_stmt 0 view .LVU8045
 27611 00a2 0DF10500 		add	r0, sp, #5
 27612              	.LVL3561:
12477:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 27613              		.loc 1 12477 45 view .LVU8046
 27614 00a6 FFF7FEFF 		bl	bno055_get_gyro_auto_sleep_durn
 27615              	.LVL3562:
12477:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 27616              		.loc 1 12477 42 view .LVU8047
 27617 00aa 54FA80F4 		uxtab	r4, r4, r0
 27618 00ae E6B2     		uxtb	r6, r4
 27619 00b0 64B2     		sxtb	r4, r4
 27620              	.LVL3563:
12478:Core/Src/bno055.c ****                                 {
ARM GAS  /tmp/ccOloYeZ.s 			page 782


 27621              		.loc 1 12478 33 is_stmt 1 view .LVU8048
12478:Core/Src/bno055.c ****                                 {
 27622              		.loc 1 12478 36 is_stmt 0 view .LVU8049
 27623 00b2 54B9     		cbnz	r4, .L1961
12480:Core/Src/bno055.c ****                                 }
 27624              		.loc 1 12480 37 is_stmt 1 view .LVU8050
12480:Core/Src/bno055.c ****                                 }
 27625              		.loc 1 12480 49 is_stmt 0 view .LVU8051
 27626 00b4 2946     		mov	r1, r5
 27627 00b6 9DF80500 		ldrb	r0, [sp, #5]	@ zero_extendqisi2
 27628 00ba FFF7FEFF 		bl	bno055_gyro_set_auto_sleep_durn
 27629              	.LVL3564:
12480:Core/Src/bno055.c ****                                 }
 27630              		.loc 1 12480 46 view .LVU8052
 27631 00be 56FA80F4 		uxtab	r4, r6, r0
 27632              	.LVL3565:
12480:Core/Src/bno055.c ****                                 }
 27633              		.loc 1 12480 46 view .LVU8053
 27634 00c2 64B2     		sxtb	r4, r4
 27635              	.LVL3566:
12480:Core/Src/bno055.c ****                                 }
 27636              		.loc 1 12480 46 view .LVU8054
 27637 00c4 01E0     		b	.L1961
 27638              	.LVL3567:
 27639              	.L1965:
12502:Core/Src/bno055.c ****         }
 27640              		.loc 1 12502 22 view .LVU8055
 27641 00c6 4FF0FF34 		mov	r4, #-1
 27642              	.LVL3568:
 27643              	.L1961:
12505:Core/Src/bno055.c ****     {
 27644              		.loc 1 12505 5 is_stmt 1 view .LVU8056
12505:Core/Src/bno055.c ****     {
 27645              		.loc 1 12505 24 is_stmt 0 view .LVU8057
 27646 00ca 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
12505:Core/Src/bno055.c ****     {
 27647              		.loc 1 12505 8 view .LVU8058
 27648 00ce 40B9     		cbnz	r0, .L1972
 27649              	.LVL3569:
 27650              	.L1960:
12513:Core/Src/bno055.c **** 
 27651              		.loc 1 12513 1 view .LVU8059
 27652 00d0 2046     		mov	r0, r4
 27653 00d2 02B0     		add	sp, sp, #8
 27654              		.cfi_remember_state
 27655              		.cfi_def_cfa_offset 16
 27656              		@ sp needed
 27657 00d4 70BD     		pop	{r4, r5, r6, pc}
 27658              	.LVL3570:
 27659              	.L1967:
 27660              		.cfi_restore_state
12492:Core/Src/bno055.c ****                 }
 27661              		.loc 1 12492 30 view .LVU8060
 27662 00d6 4FF0FF34 		mov	r4, #-1
 27663              	.LVL3571:
12492:Core/Src/bno055.c ****                 }
 27664              		.loc 1 12492 30 view .LVU8061
ARM GAS  /tmp/ccOloYeZ.s 			page 783


 27665 00da F6E7     		b	.L1961
 27666              	.LVL3572:
 27667              	.L1968:
12487:Core/Src/bno055.c ****                     }
 27668              		.loc 1 12487 34 view .LVU8062
 27669 00dc 6FF00104 		mvn	r4, #1
 27670              	.LVL3573:
12487:Core/Src/bno055.c ****                     }
 27671              		.loc 1 12487 34 view .LVU8063
 27672 00e0 F3E7     		b	.L1961
 27673              	.LVL3574:
 27674              	.L1972:
12509:Core/Src/bno055.c ****     }
 27675              		.loc 1 12509 9 is_stmt 1 view .LVU8064
12509:Core/Src/bno055.c ****     }
 27676              		.loc 1 12509 21 is_stmt 0 view .LVU8065
 27677 00e2 FFF7FEFF 		bl	bno055_set_operation_mode
 27678              	.LVL3575:
12509:Core/Src/bno055.c ****     }
 27679              		.loc 1 12509 18 view .LVU8066
 27680 00e6 54FA80F4 		uxtab	r4, r4, r0
 27681              	.LVL3576:
12509:Core/Src/bno055.c ****     }
 27682              		.loc 1 12509 18 view .LVU8067
 27683 00ea 64B2     		sxtb	r4, r4
 27684              	.LVL3577:
12509:Core/Src/bno055.c ****     }
 27685              		.loc 1 12509 18 view .LVU8068
 27686 00ec F0E7     		b	.L1960
 27687              	.LVL3578:
 27688              	.L1964:
12407:Core/Src/bno055.c ****     }
 27689              		.loc 1 12407 16 view .LVU8069
 27690 00ee 6FF07E04 		mvn	r4, #126
 27691 00f2 EDE7     		b	.L1960
 27692              	.L1974:
 27693              		.align	2
 27694              	.L1973:
 27695 00f4 00000000 		.word	p_bno055
 27696              		.cfi_endproc
 27697              	.LFE190:
 27699              		.section	.text.bno055_set_gyro_power_mode,"ax",%progbits
 27700              		.align	1
 27701              		.global	bno055_set_gyro_power_mode
 27702              		.syntax unified
 27703              		.thumb
 27704              		.thumb_func
 27706              	bno055_set_gyro_power_mode:
 27707              	.LVL3579:
 27708              	.LFB192:
12596:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27709              		.loc 1 12596 1 is_stmt 1 view -0
 27710              		.cfi_startproc
 27711              		@ args = 0, pretend = 0, frame = 8
 27712              		@ frame_needed = 0, uses_anonymous_args = 0
12596:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27713              		.loc 1 12596 1 is_stmt 0 view .LVU8071
ARM GAS  /tmp/ccOloYeZ.s 			page 784


 27714 0000 30B5     		push	{r4, r5, lr}
 27715              		.cfi_def_cfa_offset 12
 27716              		.cfi_offset 4, -12
 27717              		.cfi_offset 5, -8
 27718              		.cfi_offset 14, -4
 27719 0002 83B0     		sub	sp, sp, #12
 27720              		.cfi_def_cfa_offset 24
12597:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27721              		.loc 1 12597 5 is_stmt 1 view .LVU8072
 27722              	.LVL3580:
12598:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27723              		.loc 1 12598 5 view .LVU8073
12598:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27724              		.loc 1 12598 8 is_stmt 0 view .LVU8074
 27725 0004 0023     		movs	r3, #0
 27726 0006 8DF80730 		strb	r3, [sp, #7]
12599:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
 27727              		.loc 1 12599 5 is_stmt 1 view .LVU8075
 27728              	.LVL3581:
12600:Core/Src/bno055.c ****     u8 gyro_bw_u8 = BNO055_INIT_VALUE;
 27729              		.loc 1 12600 5 view .LVU8076
12600:Core/Src/bno055.c ****     u8 gyro_bw_u8 = BNO055_INIT_VALUE;
 27730              		.loc 1 12600 8 is_stmt 0 view .LVU8077
 27731 000a 8DF80630 		strb	r3, [sp, #6]
12601:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 27732              		.loc 1 12601 5 is_stmt 1 view .LVU8078
12601:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 27733              		.loc 1 12601 8 is_stmt 0 view .LVU8079
 27734 000e 8DF80530 		strb	r3, [sp, #5]
12602:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 27735              		.loc 1 12602 5 is_stmt 1 view .LVU8080
 27736              	.LVL3582:
12603:Core/Src/bno055.c **** 
 27737              		.loc 1 12603 5 view .LVU8081
12603:Core/Src/bno055.c **** 
 27738              		.loc 1 12603 8 is_stmt 0 view .LVU8082
 27739 0012 8DF80430 		strb	r3, [sp, #4]
12606:Core/Src/bno055.c ****     {
 27740              		.loc 1 12606 5 is_stmt 1 view .LVU8083
12606:Core/Src/bno055.c ****     {
 27741              		.loc 1 12606 18 is_stmt 0 view .LVU8084
 27742 0016 3A4B     		ldr	r3, .L1994
 27743 0018 1B68     		ldr	r3, [r3]
12606:Core/Src/bno055.c ****     {
 27744              		.loc 1 12606 8 view .LVU8085
 27745 001a 002B     		cmp	r3, #0
 27746 001c 6CD0     		beq	.L1983
 27747 001e 0546     		mov	r5, r0
12615:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 27748              		.loc 1 12615 9 is_stmt 1 view .LVU8086
12615:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 27749              		.loc 1 12615 19 is_stmt 0 view .LVU8087
 27750 0020 01A8     		add	r0, sp, #4
 27751              	.LVL3583:
12615:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 27752              		.loc 1 12615 19 view .LVU8088
 27753 0022 FFF7FEFF 		bl	bno055_get_operation_mode
ARM GAS  /tmp/ccOloYeZ.s 			page 785


 27754              	.LVL3584:
12616:Core/Src/bno055.c ****         {
 27755              		.loc 1 12616 9 is_stmt 1 view .LVU8089
12616:Core/Src/bno055.c ****         {
 27756              		.loc 1 12616 12 is_stmt 0 view .LVU8090
 27757 0026 0446     		mov	r4, r0
 27758 0028 0028     		cmp	r0, #0
 27759 002a 51D1     		bne	.L1984
12618:Core/Src/bno055.c ****             {
 27760              		.loc 1 12618 13 is_stmt 1 view .LVU8091
12618:Core/Src/bno055.c ****             {
 27761              		.loc 1 12618 32 is_stmt 0 view .LVU8092
 27762 002c 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
12618:Core/Src/bno055.c ****             {
 27763              		.loc 1 12618 16 view .LVU8093
 27764 0030 1BB9     		cbnz	r3, .L1990
 27765              	.LVL3585:
 27766              	.L1978:
12622:Core/Src/bno055.c ****             {
 27767              		.loc 1 12622 13 is_stmt 1 view .LVU8094
12622:Core/Src/bno055.c ****             {
 27768              		.loc 1 12622 16 is_stmt 0 view .LVU8095
 27769 0032 44B1     		cbz	r4, .L1991
12684:Core/Src/bno055.c ****             }
 27770              		.loc 1 12684 26 view .LVU8096
 27771 0034 4FF0FF34 		mov	r4, #-1
 27772              	.LVL3586:
12684:Core/Src/bno055.c ****             }
 27773              		.loc 1 12684 26 view .LVU8097
 27774 0038 4CE0     		b	.L1977
 27775              	.LVL3587:
 27776              	.L1990:
12620:Core/Src/bno055.c ****             }
 27777              		.loc 1 12620 17 is_stmt 1 view .LVU8098
12620:Core/Src/bno055.c ****             }
 27778              		.loc 1 12620 28 is_stmt 0 view .LVU8099
 27779 003a FFF7FEFF 		bl	bno055_set_operation_mode
 27780              	.LVL3588:
12620:Core/Src/bno055.c ****             }
 27781              		.loc 1 12620 25 view .LVU8100
 27782 003e 54FA80F4 		uxtab	r4, r4, r0
 27783 0042 64B2     		sxtb	r4, r4
 27784              	.LVL3589:
12620:Core/Src/bno055.c ****             }
 27785              		.loc 1 12620 25 view .LVU8101
 27786 0044 F5E7     		b	.L1978
 27787              	.L1991:
12625:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27788              		.loc 1 12625 17 is_stmt 1 view .LVU8102
12625:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27789              		.loc 1 12625 30 is_stmt 0 view .LVU8103
 27790 0046 0120     		movs	r0, #1
 27791 0048 FFF7FEFF 		bl	bno055_write_page_id
 27792              	.LVL3590:
12626:Core/Src/bno055.c ****                 {
 27793              		.loc 1 12626 17 is_stmt 1 view .LVU8104
12626:Core/Src/bno055.c ****                 {
ARM GAS  /tmp/ccOloYeZ.s 			page 786


 27794              		.loc 1 12626 20 is_stmt 0 view .LVU8105
 27795 004c 0028     		cmp	r0, #0
 27796 004e 47D1     		bne	.L1986
12629:Core/Src/bno055.c ****                         gyro_power_mode_u8 < BNO055_GYRO_RANGE)
 27797              		.loc 1 12629 21 is_stmt 1 view .LVU8106
12629:Core/Src/bno055.c ****                         gyro_power_mode_u8 < BNO055_GYRO_RANGE)
 27798              		.loc 1 12629 24 is_stmt 0 view .LVU8107
 27799 0050 042D     		cmp	r5, #4
 27800 0052 48D8     		bhi	.L1987
12632:Core/Src/bno055.c ****                         {
 27801              		.loc 1 12632 25 is_stmt 1 view .LVU8108
 27802 0054 2B1F     		subs	r3, r5, #4
 27803 0056 002B     		cmp	r3, #0
 27804 0058 12D8     		bhi	.L1979
 27805 005a DFE803F0 		tbb	[pc, r3]
 27806              	.L1981:
 27807 005e 01       		.byte	(.L1980-.L1981)/2
 27808 005f 00       		.p2align 1
 27809              	.L1980:
12647:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
 27810              		.loc 1 12647 33 view .LVU8109
12647:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
 27811              		.loc 1 12647 44 is_stmt 0 view .LVU8110
 27812 0060 0DF10500 		add	r0, sp, #5
 27813              	.LVL3591:
12647:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
 27814              		.loc 1 12647 44 view .LVU8111
 27815 0064 FFF7FEFF 		bl	bno055_get_gyro_bw
 27816              	.LVL3592:
 27817 0068 0446     		mov	r4, r0
 27818              	.LVL3593:
12648:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 27819              		.loc 1 12648 33 is_stmt 1 view .LVU8112
12648:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 27820              		.loc 1 12648 45 is_stmt 0 view .LVU8113
 27821 006a 0DF10600 		add	r0, sp, #6
 27822 006e FFF7FEFF 		bl	bno055_get_gyro_auto_sleep_durn
 27823              	.LVL3594:
12648:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 27824              		.loc 1 12648 42 view .LVU8114
 27825 0072 54FA80F3 		uxtab	r3, r4, r0
 27826 0076 5BB2     		sxtb	r3, r3
 27827              	.LVL3595:
12649:Core/Src/bno055.c ****                                 {
 27828              		.loc 1 12649 33 is_stmt 1 view .LVU8115
12649:Core/Src/bno055.c ****                                 {
 27829              		.loc 1 12649 36 is_stmt 0 view .LVU8116
 27830 0078 1BB3     		cbz	r3, .L1992
 27831              	.LVL3596:
 27832              	.L1982:
12653:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE;
 27833              		.loc 1 12653 33 is_stmt 1 view .LVU8117
12653:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE;
 27834              		.loc 1 12653 45 is_stmt 0 view .LVU8118
 27835 007a 0120     		movs	r0, #1
 27836 007c FFF7FEFF 		bl	bno055_write_page_id
 27837              	.LVL3597:
ARM GAS  /tmp/ccOloYeZ.s 			page 787


12654:Core/Src/bno055.c ****                                 break;
 27838              		.loc 1 12654 33 is_stmt 1 view .LVU8119
12655:Core/Src/bno055.c ****                             default:
 27839              		.loc 1 12655 33 view .LVU8120
 27840              	.L1979:
12659:Core/Src/bno055.c ****                                                                   BNO055_GYRO_POWER_MODE_REG,
 27841              		.loc 1 12659 25 view .LVU8121
12659:Core/Src/bno055.c ****                                                                   BNO055_GYRO_POWER_MODE_REG,
 27842              		.loc 1 12659 44 is_stmt 0 view .LVU8122
 27843 0080 1F4B     		ldr	r3, .L1994
 27844 0082 1868     		ldr	r0, [r3]
 27845 0084 0469     		ldr	r4, [r0, #16]
12659:Core/Src/bno055.c ****                                                                   BNO055_GYRO_POWER_MODE_REG,
 27846              		.loc 1 12659 36 view .LVU8123
 27847 0086 0123     		movs	r3, #1
 27848 0088 0DF10702 		add	r2, sp, #7
 27849 008c 0B21     		movs	r1, #11
 27850 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27851 0090 A047     		blx	r4
 27852              	.LVL3598:
12663:Core/Src/bno055.c ****                         {
 27853              		.loc 1 12663 25 is_stmt 1 view .LVU8124
12663:Core/Src/bno055.c ****                         {
 27854              		.loc 1 12663 28 is_stmt 0 view .LVU8125
 27855 0092 0446     		mov	r4, r0
 27856 0094 F0B9     		cbnz	r0, .L1977
12665:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27857              		.loc 1 12665 29 is_stmt 1 view .LVU8126
12665:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27858              		.loc 1 12665 40 is_stmt 0 view .LVU8127
 27859 0096 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
12665:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27860              		.loc 1 12665 38 view .LVU8128
 27861 009a 23F00703 		bic	r3, r3, #7
 27862 009e 05F00700 		and	r0, r5, #7
 27863              	.LVL3599:
12665:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27864              		.loc 1 12665 38 view .LVU8129
 27865 00a2 0343     		orrs	r3, r3, r0
 27866 00a4 8DF80730 		strb	r3, [sp, #7]
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 27867              		.loc 1 12666 29 is_stmt 1 view .LVU8130
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 27868              		.loc 1 12666 49 is_stmt 0 view .LVU8131
 27869 00a8 154B     		ldr	r3, .L1994
 27870 00aa 1868     		ldr	r0, [r3]
 27871 00ac C568     		ldr	r5, [r0, #12]
 27872              	.LVL3600:
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 27873              		.loc 1 12666 41 view .LVU8132
 27874 00ae 0123     		movs	r3, #1
 27875 00b0 0DF10702 		add	r2, sp, #7
 27876 00b4 0B21     		movs	r1, #11
 27877 00b6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27878 00b8 A847     		blx	r5
 27879              	.LVL3601:
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
ARM GAS  /tmp/ccOloYeZ.s 			page 788


 27880              		.loc 1 12666 38 view .LVU8133
 27881 00ba 54FA80F0 		uxtab	r0, r4, r0
 27882 00be 44B2     		sxtb	r4, r0
 27883              	.LVL3602:
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 27884              		.loc 1 12666 38 view .LVU8134
 27885 00c0 08E0     		b	.L1977
 27886              	.LVL3603:
 27887              	.L1992:
12651:Core/Src/bno055.c ****                                 }
 27888              		.loc 1 12651 37 is_stmt 1 view .LVU8135
12651:Core/Src/bno055.c ****                                 }
 27889              		.loc 1 12651 49 is_stmt 0 view .LVU8136
 27890 00c2 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 27891 00c6 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 27892 00ca FFF7FEFF 		bl	bno055_gyro_set_auto_sleep_durn
 27893              	.LVL3604:
12651:Core/Src/bno055.c ****                                 }
 27894              		.loc 1 12651 49 view .LVU8137
 27895 00ce D4E7     		b	.L1982
 27896              	.LVL3605:
 27897              	.L1984:
12689:Core/Src/bno055.c ****         }
 27898              		.loc 1 12689 22 view .LVU8138
 27899 00d0 4FF0FF34 		mov	r4, #-1
 27900              	.LVL3606:
 27901              	.L1977:
12692:Core/Src/bno055.c ****     {
 27902              		.loc 1 12692 5 is_stmt 1 view .LVU8139
12692:Core/Src/bno055.c ****     {
 27903              		.loc 1 12692 24 is_stmt 0 view .LVU8140
 27904 00d4 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
12692:Core/Src/bno055.c ****     {
 27905              		.loc 1 12692 8 view .LVU8141
 27906 00d8 40B9     		cbnz	r0, .L1993
 27907              	.LVL3607:
 27908              	.L1976:
12700:Core/Src/bno055.c **** 
 27909              		.loc 1 12700 1 view .LVU8142
 27910 00da 2046     		mov	r0, r4
 27911 00dc 03B0     		add	sp, sp, #12
 27912              		.cfi_remember_state
 27913              		.cfi_def_cfa_offset 12
 27914              		@ sp needed
 27915 00de 30BD     		pop	{r4, r5, pc}
 27916              	.LVL3608:
 27917              	.L1986:
 27918              		.cfi_restore_state
12679:Core/Src/bno055.c ****                 }
 27919              		.loc 1 12679 30 view .LVU8143
 27920 00e0 4FF0FF34 		mov	r4, #-1
 27921              	.LVL3609:
12679:Core/Src/bno055.c ****                 }
 27922              		.loc 1 12679 30 view .LVU8144
 27923 00e4 F6E7     		b	.L1977
 27924              	.LVL3610:
 27925              	.L1987:
ARM GAS  /tmp/ccOloYeZ.s 			page 789


12674:Core/Src/bno055.c ****                     }
 27926              		.loc 1 12674 34 view .LVU8145
 27927 00e6 6FF00104 		mvn	r4, #1
 27928              	.LVL3611:
12674:Core/Src/bno055.c ****                     }
 27929              		.loc 1 12674 34 view .LVU8146
 27930 00ea F3E7     		b	.L1977
 27931              	.LVL3612:
 27932              	.L1993:
12696:Core/Src/bno055.c ****     }
 27933              		.loc 1 12696 9 is_stmt 1 view .LVU8147
12696:Core/Src/bno055.c ****     }
 27934              		.loc 1 12696 21 is_stmt 0 view .LVU8148
 27935 00ec FFF7FEFF 		bl	bno055_set_operation_mode
 27936              	.LVL3613:
12696:Core/Src/bno055.c ****     }
 27937              		.loc 1 12696 18 view .LVU8149
 27938 00f0 54FA80F0 		uxtab	r0, r4, r0
 27939 00f4 44B2     		sxtb	r4, r0
 27940              	.LVL3614:
12696:Core/Src/bno055.c ****     }
 27941              		.loc 1 12696 18 view .LVU8150
 27942 00f6 F0E7     		b	.L1976
 27943              	.LVL3615:
 27944              	.L1983:
12608:Core/Src/bno055.c ****     }
 27945              		.loc 1 12608 16 view .LVU8151
 27946 00f8 6FF07E04 		mvn	r4, #126
 27947 00fc EDE7     		b	.L1976
 27948              	.L1995:
 27949 00fe 00BF     		.align	2
 27950              	.L1994:
 27951 0100 00000000 		.word	p_bno055
 27952              		.cfi_endproc
 27953              	.LFE192:
 27955              		.section	.text.bno055_get_mag_sleep_mode,"ax",%progbits
 27956              		.align	1
 27957              		.global	bno055_get_mag_sleep_mode
 27958              		.syntax unified
 27959              		.thumb
 27960              		.thumb_func
 27962              	bno055_get_mag_sleep_mode:
 27963              	.LVL3616:
 27964              	.LFB201:
13401:Core/Src/bno055.c **** 
13402:Core/Src/bno055.c **** /*!
13403:Core/Src/bno055.c ****  *  @brief This API used to read the mag sleep mode
13404:Core/Src/bno055.c ****  *  from page one register from 0x0E bit 0
13405:Core/Src/bno055.c ****  *
13406:Core/Src/bno055.c ****  *  @param sleep_mode_u8 : The value of mag sleep mode
13407:Core/Src/bno055.c ****  *
13408:Core/Src/bno055.c ****  *  @return results of bus communication function
13409:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13410:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13411:Core/Src/bno055.c ****  *
13412:Core/Src/bno055.c ****  *
13413:Core/Src/bno055.c ****  */
ARM GAS  /tmp/ccOloYeZ.s 			page 790


13414:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_sleep_mode(u8 *sleep_mode_u8)
13415:Core/Src/bno055.c **** {
 27965              		.loc 1 13415 1 is_stmt 1 view -0
 27966              		.cfi_startproc
 27967              		@ args = 0, pretend = 0, frame = 8
 27968              		@ frame_needed = 0, uses_anonymous_args = 0
 27969              		.loc 1 13415 1 is_stmt 0 view .LVU8153
 27970 0000 30B5     		push	{r4, r5, lr}
 27971              		.cfi_def_cfa_offset 12
 27972              		.cfi_offset 4, -12
 27973              		.cfi_offset 5, -8
 27974              		.cfi_offset 14, -4
 27975 0002 83B0     		sub	sp, sp, #12
 27976              		.cfi_def_cfa_offset 24
13416:Core/Src/bno055.c ****     /* Variable used to return value of
13417:Core/Src/bno055.c ****      * communication routine*/
13418:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27977              		.loc 1 13418 5 is_stmt 1 view .LVU8154
 27978              	.LVL3617:
13419:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27979              		.loc 1 13419 5 view .LVU8155
 27980              		.loc 1 13419 8 is_stmt 0 view .LVU8156
 27981 0004 0023     		movs	r3, #0
 27982 0006 8DF80730 		strb	r3, [sp, #7]
13420:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27983              		.loc 1 13420 5 is_stmt 1 view .LVU8157
 27984              	.LVL3618:
13421:Core/Src/bno055.c **** 
13422:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13423:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27985              		.loc 1 13423 5 view .LVU8158
 27986              		.loc 1 13423 18 is_stmt 0 view .LVU8159
 27987 000a 144B     		ldr	r3, .L2004
 27988 000c 1B68     		ldr	r3, [r3]
 27989              		.loc 1 13423 8 view .LVU8160
 27990 000e F3B1     		cbz	r3, .L2000
 27991 0010 0446     		mov	r4, r0
13424:Core/Src/bno055.c ****     {
13425:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13426:Core/Src/bno055.c ****     }
13427:Core/Src/bno055.c ****     else
13428:Core/Src/bno055.c ****     {
13429:Core/Src/bno055.c ****         /*condition check for page,mag sleep mode is
13430:Core/Src/bno055.c ****          * available in the page one*/
13431:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 27992              		.loc 1 13431 9 is_stmt 1 view .LVU8161
 27993              		.loc 1 13431 21 is_stmt 0 view .LVU8162
 27994 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27995              		.loc 1 13431 12 view .LVU8163
 27996 0014 012B     		cmp	r3, #1
 27997 0016 14D1     		bne	.L2003
 27998              	.LVL3619:
 27999              	.L1998:
13432:Core/Src/bno055.c ****         {
13433:Core/Src/bno055.c ****             /* Write page as one */
13434:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13435:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 791


13436:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 28000              		.loc 1 13436 53 discriminator 1 view .LVU8164
 28001 0018 104B     		ldr	r3, .L2004
 28002 001a 1B68     		ldr	r3, [r3]
 28003 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 28004              		.loc 1 13436 41 discriminator 1 view .LVU8165
 28005 001e 012B     		cmp	r3, #1
 28006 0020 18D1     		bne	.L2001
 28007              	.L1999:
13437:Core/Src/bno055.c ****         {
13438:Core/Src/bno055.c ****             /* Read the value of mag sleep mode*/
13439:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 28008              		.loc 1 13439 13 is_stmt 1 view .LVU8166
 28009              		.loc 1 13439 32 is_stmt 0 view .LVU8167
 28010 0022 0E4B     		ldr	r3, .L2004
 28011 0024 1868     		ldr	r0, [r3]
 28012 0026 0569     		ldr	r5, [r0, #16]
 28013              		.loc 1 13439 24 view .LVU8168
 28014 0028 0123     		movs	r3, #1
 28015 002a 0DF10702 		add	r2, sp, #7
 28016 002e 0E21     		movs	r1, #14
 28017 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28018 0032 A847     		blx	r5
 28019              	.LVL3620:
13440:Core/Src/bno055.c ****                                                       BNO055_MAG_SLEEP_MODE_REG,
13441:Core/Src/bno055.c ****                                                       &data_u8r,
13442:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13443:Core/Src/bno055.c ****             *sleep_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_SLEEP_MODE);
 28020              		.loc 1 13443 13 is_stmt 1 view .LVU8169
 28021              		.loc 1 13443 30 is_stmt 0 view .LVU8170
 28022 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 28023 0038 03F00103 		and	r3, r3, #1
 28024              		.loc 1 13443 28 view .LVU8171
 28025 003c 2370     		strb	r3, [r4]
 28026              	.LVL3621:
 28027              	.L1997:
13444:Core/Src/bno055.c ****         }
13445:Core/Src/bno055.c ****         else
13446:Core/Src/bno055.c ****         {
13447:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13448:Core/Src/bno055.c ****         }
13449:Core/Src/bno055.c ****     }
13450:Core/Src/bno055.c **** 
13451:Core/Src/bno055.c ****     return com_rslt;
13452:Core/Src/bno055.c **** }
 28028              		.loc 1 13452 1 view .LVU8172
 28029 003e 03B0     		add	sp, sp, #12
 28030              		.cfi_remember_state
 28031              		.cfi_def_cfa_offset 12
 28032              		@ sp needed
 28033 0040 30BD     		pop	{r4, r5, pc}
 28034              	.LVL3622:
 28035              	.L2003:
 28036              		.cfi_restore_state
13434:Core/Src/bno055.c ****         }
 28037              		.loc 1 13434 13 is_stmt 1 view .LVU8173
13434:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 792


 28038              		.loc 1 13434 23 is_stmt 0 view .LVU8174
 28039 0042 0120     		movs	r0, #1
 28040              	.LVL3623:
13434:Core/Src/bno055.c ****         }
 28041              		.loc 1 13434 23 view .LVU8175
 28042 0044 FFF7FEFF 		bl	bno055_write_page_id
 28043              	.LVL3624:
13436:Core/Src/bno055.c ****         {
 28044              		.loc 1 13436 9 is_stmt 1 view .LVU8176
13436:Core/Src/bno055.c ****         {
 28045              		.loc 1 13436 12 is_stmt 0 view .LVU8177
 28046 0048 0028     		cmp	r0, #0
 28047 004a EAD0     		beq	.L1999
 28048 004c E4E7     		b	.L1998
 28049              	.LVL3625:
 28050              	.L2000:
13425:Core/Src/bno055.c ****     }
 28051              		.loc 1 13425 16 view .LVU8178
 28052 004e 6FF07E00 		mvn	r0, #126
 28053              	.LVL3626:
13425:Core/Src/bno055.c ****     }
 28054              		.loc 1 13425 16 view .LVU8179
 28055 0052 F4E7     		b	.L1997
 28056              	.LVL3627:
 28057              	.L2001:
13447:Core/Src/bno055.c ****         }
 28058              		.loc 1 13447 22 view .LVU8180
 28059 0054 4FF0FF30 		mov	r0, #-1
 28060 0058 F1E7     		b	.L1997
 28061              	.L2005:
 28062 005a 00BF     		.align	2
 28063              	.L2004:
 28064 005c 00000000 		.word	p_bno055
 28065              		.cfi_endproc
 28066              	.LFE201:
 28068              		.section	.text.bno055_set_mag_sleep_mode,"ax",%progbits
 28069              		.align	1
 28070              		.global	bno055_set_mag_sleep_mode
 28071              		.syntax unified
 28072              		.thumb
 28073              		.thumb_func
 28075              	bno055_set_mag_sleep_mode:
 28076              	.LVL3628:
 28077              	.LFB202:
13453:Core/Src/bno055.c **** 
13454:Core/Src/bno055.c **** /*!
13455:Core/Src/bno055.c ****  *  @brief This API used to write the mag sleep mode
13456:Core/Src/bno055.c ****  *  from page one register from 0x0E bit 0
13457:Core/Src/bno055.c ****  *
13458:Core/Src/bno055.c ****  *  @param sleep_mode_u8 : The value of mag sleep mode
13459:Core/Src/bno055.c ****  *
13460:Core/Src/bno055.c ****  *  @return results of bus communication function
13461:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13462:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13463:Core/Src/bno055.c ****  *
13464:Core/Src/bno055.c ****  *
13465:Core/Src/bno055.c ****  */
ARM GAS  /tmp/ccOloYeZ.s 			page 793


13466:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_sleep_mode(u8 sleep_mode_u8)
13467:Core/Src/bno055.c **** {
 28078              		.loc 1 13467 1 is_stmt 1 view -0
 28079              		.cfi_startproc
 28080              		@ args = 0, pretend = 0, frame = 8
 28081              		@ frame_needed = 0, uses_anonymous_args = 0
 28082              		.loc 1 13467 1 is_stmt 0 view .LVU8182
 28083 0000 30B5     		push	{r4, r5, lr}
 28084              		.cfi_def_cfa_offset 12
 28085              		.cfi_offset 4, -12
 28086              		.cfi_offset 5, -8
 28087              		.cfi_offset 14, -4
 28088 0002 83B0     		sub	sp, sp, #12
 28089              		.cfi_def_cfa_offset 24
13468:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28090              		.loc 1 13468 5 is_stmt 1 view .LVU8183
 28091              	.LVL3629:
13469:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 28092              		.loc 1 13469 5 view .LVU8184
 28093              		.loc 1 13469 8 is_stmt 0 view .LVU8185
 28094 0004 0023     		movs	r3, #0
 28095 0006 8DF80730 		strb	r3, [sp, #7]
13470:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28096              		.loc 1 13470 5 is_stmt 1 view .LVU8186
 28097              	.LVL3630:
13471:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 28098              		.loc 1 13471 5 view .LVU8187
13472:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 28099              		.loc 1 13472 5 view .LVU8188
 28100              		.loc 1 13472 8 is_stmt 0 view .LVU8189
 28101 000a 8DF80630 		strb	r3, [sp, #6]
13473:Core/Src/bno055.c **** 
13474:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13475:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 28102              		.loc 1 13475 5 is_stmt 1 view .LVU8190
 28103              		.loc 1 13475 18 is_stmt 0 view .LVU8191
 28104 000e 284B     		ldr	r3, .L2018
 28105 0010 1B68     		ldr	r3, [r3]
 28106              		.loc 1 13475 8 view .LVU8192
 28107 0012 002B     		cmp	r3, #0
 28108 0014 49D0     		beq	.L2010
 28109 0016 0546     		mov	r5, r0
13476:Core/Src/bno055.c ****     {
13477:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13478:Core/Src/bno055.c ****     }
13479:Core/Src/bno055.c ****     else
13480:Core/Src/bno055.c ****     {
13481:Core/Src/bno055.c ****         /* The write operation effective only if the operation
13482:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
13483:Core/Src/bno055.c ****          * current operation mode and set the config mode */
13484:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 28110              		.loc 1 13484 9 is_stmt 1 view .LVU8193
 28111              		.loc 1 13484 19 is_stmt 0 view .LVU8194
 28112 0018 0DF10600 		add	r0, sp, #6
 28113              	.LVL3631:
 28114              		.loc 1 13484 19 view .LVU8195
 28115 001c FFF7FEFF 		bl	bno055_get_operation_mode
ARM GAS  /tmp/ccOloYeZ.s 			page 794


 28116              	.LVL3632:
13485:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28117              		.loc 1 13485 9 is_stmt 1 view .LVU8196
 28118              		.loc 1 13485 12 is_stmt 0 view .LVU8197
 28119 0020 0446     		mov	r4, r0
 28120 0022 88BB     		cbnz	r0, .L2011
13486:Core/Src/bno055.c ****         {
13487:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 28121              		.loc 1 13487 13 is_stmt 1 view .LVU8198
 28122              		.loc 1 13487 32 is_stmt 0 view .LVU8199
 28123 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 28124              		.loc 1 13487 16 view .LVU8200
 28125 0028 1BB9     		cbnz	r3, .L2015
 28126              	.LVL3633:
 28127              	.L2009:
13488:Core/Src/bno055.c ****             {
13489:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
13490:Core/Src/bno055.c ****             }
13491:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 28128              		.loc 1 13491 13 is_stmt 1 view .LVU8201
 28129              		.loc 1 13491 16 is_stmt 0 view .LVU8202
 28130 002a 44B1     		cbz	r4, .L2016
13492:Core/Src/bno055.c ****             {
13493:Core/Src/bno055.c ****                 /* Write page as one */
13494:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13495:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
13496:Core/Src/bno055.c ****                 {
13497:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
13498:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
13499:Core/Src/bno055.c ****                                                               &data_u8r,
13500:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
13501:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
13502:Core/Src/bno055.c ****                     {
13503:Core/Src/bno055.c ****                         /* Write the value
13504:Core/Src/bno055.c ****                          * of mag sleep mode*/
13505:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_MAG_SLEEP_MODE, sleep_mode_
13506:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
13507:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
13508:Core/Src/bno055.c ****                                                                     &data_u8r,
13509:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
13510:Core/Src/bno055.c ****                     }
13511:Core/Src/bno055.c ****                 }
13512:Core/Src/bno055.c ****                 else
13513:Core/Src/bno055.c ****                 {
13514:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
13515:Core/Src/bno055.c ****                 }
13516:Core/Src/bno055.c ****             }
13517:Core/Src/bno055.c ****             else
13518:Core/Src/bno055.c ****             {
13519:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 28131              		.loc 1 13519 26 view .LVU8203
 28132 002c 4FF0FF34 		mov	r4, #-1
 28133              	.LVL3634:
 28134              		.loc 1 13519 26 view .LVU8204
 28135 0030 2CE0     		b	.L2008
 28136              	.LVL3635:
 28137              	.L2015:
ARM GAS  /tmp/ccOloYeZ.s 			page 795


13489:Core/Src/bno055.c ****             }
 28138              		.loc 1 13489 17 is_stmt 1 view .LVU8205
13489:Core/Src/bno055.c ****             }
 28139              		.loc 1 13489 28 is_stmt 0 view .LVU8206
 28140 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 28141              	.LVL3636:
13489:Core/Src/bno055.c ****             }
 28142              		.loc 1 13489 25 view .LVU8207
 28143 0036 54FA80F4 		uxtab	r4, r4, r0
 28144 003a 64B2     		sxtb	r4, r4
 28145              	.LVL3637:
13489:Core/Src/bno055.c ****             }
 28146              		.loc 1 13489 25 view .LVU8208
 28147 003c F5E7     		b	.L2009
 28148              	.L2016:
13494:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28149              		.loc 1 13494 17 is_stmt 1 view .LVU8209
13494:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28150              		.loc 1 13494 30 is_stmt 0 view .LVU8210
 28151 003e 0120     		movs	r0, #1
 28152 0040 FFF7FEFF 		bl	bno055_write_page_id
 28153              	.LVL3638:
13495:Core/Src/bno055.c ****                 {
 28154              		.loc 1 13495 17 is_stmt 1 view .LVU8211
13495:Core/Src/bno055.c ****                 {
 28155              		.loc 1 13495 20 is_stmt 0 view .LVU8212
 28156 0044 40BB     		cbnz	r0, .L2013
13497:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
 28157              		.loc 1 13497 21 is_stmt 1 view .LVU8213
13497:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
 28158              		.loc 1 13497 40 is_stmt 0 view .LVU8214
 28159 0046 1A4B     		ldr	r3, .L2018
 28160 0048 1868     		ldr	r0, [r3]
 28161              	.LVL3639:
13497:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
 28162              		.loc 1 13497 40 view .LVU8215
 28163 004a 0469     		ldr	r4, [r0, #16]
 28164              	.LVL3640:
13497:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
 28165              		.loc 1 13497 32 view .LVU8216
 28166 004c 0123     		movs	r3, #1
 28167 004e 0DF10702 		add	r2, sp, #7
 28168 0052 0E21     		movs	r1, #14
 28169 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28170 0056 A047     		blx	r4
 28171              	.LVL3641:
13501:Core/Src/bno055.c ****                     {
 28172              		.loc 1 13501 21 is_stmt 1 view .LVU8217
13501:Core/Src/bno055.c ****                     {
 28173              		.loc 1 13501 24 is_stmt 0 view .LVU8218
 28174 0058 0446     		mov	r4, r0
 28175 005a B8B9     		cbnz	r0, .L2008
13505:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28176              		.loc 1 13505 25 is_stmt 1 view .LVU8219
13505:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28177              		.loc 1 13505 36 is_stmt 0 view .LVU8220
 28178 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
ARM GAS  /tmp/ccOloYeZ.s 			page 796


13505:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28179              		.loc 1 13505 34 view .LVU8221
 28180 0060 23F00103 		bic	r3, r3, #1
 28181 0064 05F00100 		and	r0, r5, #1
 28182              	.LVL3642:
13505:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28183              		.loc 1 13505 34 view .LVU8222
 28184 0068 0343     		orrs	r3, r3, r0
 28185 006a 8DF80730 		strb	r3, [sp, #7]
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 28186              		.loc 1 13506 25 is_stmt 1 view .LVU8223
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 28187              		.loc 1 13506 45 is_stmt 0 view .LVU8224
 28188 006e 104B     		ldr	r3, .L2018
 28189 0070 1868     		ldr	r0, [r3]
 28190 0072 C568     		ldr	r5, [r0, #12]
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 28191              		.loc 1 13506 37 view .LVU8225
 28192 0074 0123     		movs	r3, #1
 28193 0076 0DF10702 		add	r2, sp, #7
 28194 007a 0E21     		movs	r1, #14
 28195 007c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28196 007e A847     		blx	r5
 28197              	.LVL3643:
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 28198              		.loc 1 13506 34 view .LVU8226
 28199 0080 54FA80F0 		uxtab	r0, r4, r0
 28200 0084 44B2     		sxtb	r4, r0
 28201              	.LVL3644:
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 28202              		.loc 1 13506 34 view .LVU8227
 28203 0086 01E0     		b	.L2008
 28204              	.LVL3645:
 28205              	.L2011:
13520:Core/Src/bno055.c ****             }
13521:Core/Src/bno055.c ****         }
13522:Core/Src/bno055.c ****         else
13523:Core/Src/bno055.c ****         {
13524:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 28206              		.loc 1 13524 22 view .LVU8228
 28207 0088 4FF0FF34 		mov	r4, #-1
 28208              	.LVL3646:
 28209              	.L2008:
13525:Core/Src/bno055.c ****         }
13526:Core/Src/bno055.c ****     }
13527:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 28210              		.loc 1 13527 5 is_stmt 1 view .LVU8229
 28211              		.loc 1 13527 24 is_stmt 0 view .LVU8230
 28212 008c 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 28213              		.loc 1 13527 8 view .LVU8231
 28214 0090 28B9     		cbnz	r0, .L2017
 28215              	.LVL3647:
 28216              	.L2007:
13528:Core/Src/bno055.c ****     {
13529:Core/Src/bno055.c ****         /* set the operation mode of
13530:Core/Src/bno055.c ****          * previous operation mode*/
13531:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
ARM GAS  /tmp/ccOloYeZ.s 			page 797


13532:Core/Src/bno055.c ****     }
13533:Core/Src/bno055.c **** 
13534:Core/Src/bno055.c ****     return com_rslt;
13535:Core/Src/bno055.c **** }
 28217              		.loc 1 13535 1 view .LVU8232
 28218 0092 2046     		mov	r0, r4
 28219 0094 03B0     		add	sp, sp, #12
 28220              		.cfi_remember_state
 28221              		.cfi_def_cfa_offset 12
 28222              		@ sp needed
 28223 0096 30BD     		pop	{r4, r5, pc}
 28224              	.LVL3648:
 28225              	.L2013:
 28226              		.cfi_restore_state
13514:Core/Src/bno055.c ****                 }
 28227              		.loc 1 13514 30 view .LVU8233
 28228 0098 4FF0FF34 		mov	r4, #-1
 28229              	.LVL3649:
13514:Core/Src/bno055.c ****                 }
 28230              		.loc 1 13514 30 view .LVU8234
 28231 009c F6E7     		b	.L2008
 28232              	.LVL3650:
 28233              	.L2017:
13531:Core/Src/bno055.c ****     }
 28234              		.loc 1 13531 9 is_stmt 1 view .LVU8235
13531:Core/Src/bno055.c ****     }
 28235              		.loc 1 13531 21 is_stmt 0 view .LVU8236
 28236 009e FFF7FEFF 		bl	bno055_set_operation_mode
 28237              	.LVL3651:
13531:Core/Src/bno055.c ****     }
 28238              		.loc 1 13531 18 view .LVU8237
 28239 00a2 54FA80F0 		uxtab	r0, r4, r0
 28240 00a6 44B2     		sxtb	r4, r0
 28241              	.LVL3652:
13531:Core/Src/bno055.c ****     }
 28242              		.loc 1 13531 18 view .LVU8238
 28243 00a8 F3E7     		b	.L2007
 28244              	.LVL3653:
 28245              	.L2010:
13477:Core/Src/bno055.c ****     }
 28246              		.loc 1 13477 16 view .LVU8239
 28247 00aa 6FF07E04 		mvn	r4, #126
 28248 00ae F0E7     		b	.L2007
 28249              	.L2019:
 28250              		.align	2
 28251              	.L2018:
 28252 00b0 00000000 		.word	p_bno055
 28253              		.cfi_endproc
 28254              	.LFE202:
 28256              		.section	.text.bno055_get_mag_sleep_durn,"ax",%progbits
 28257              		.align	1
 28258              		.global	bno055_get_mag_sleep_durn
 28259              		.syntax unified
 28260              		.thumb
 28261              		.thumb_func
 28263              	bno055_get_mag_sleep_durn:
 28264              	.LVL3654:
ARM GAS  /tmp/ccOloYeZ.s 			page 798


 28265              	.LFB203:
13536:Core/Src/bno055.c **** 
13537:Core/Src/bno055.c **** /*!
13538:Core/Src/bno055.c ****  *  @brief This API used to read the mag sleep duration
13539:Core/Src/bno055.c ****  *  from page one register from 0x0E bit 1 to 4
13540:Core/Src/bno055.c ****  *
13541:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of mag sleep duration
13542:Core/Src/bno055.c ****  *
13543:Core/Src/bno055.c ****  *  @return results of bus communication function
13544:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13545:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13546:Core/Src/bno055.c ****  *
13547:Core/Src/bno055.c ****  *
13548:Core/Src/bno055.c ****  */
13549:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_sleep_durn(u8 *sleep_durn_u8)
13550:Core/Src/bno055.c **** {
 28266              		.loc 1 13550 1 is_stmt 1 view -0
 28267              		.cfi_startproc
 28268              		@ args = 0, pretend = 0, frame = 8
 28269              		@ frame_needed = 0, uses_anonymous_args = 0
 28270              		.loc 1 13550 1 is_stmt 0 view .LVU8241
 28271 0000 30B5     		push	{r4, r5, lr}
 28272              		.cfi_def_cfa_offset 12
 28273              		.cfi_offset 4, -12
 28274              		.cfi_offset 5, -8
 28275              		.cfi_offset 14, -4
 28276 0002 83B0     		sub	sp, sp, #12
 28277              		.cfi_def_cfa_offset 24
13551:Core/Src/bno055.c ****     /* Variable used to return value of
13552:Core/Src/bno055.c ****      * communication routine*/
13553:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28278              		.loc 1 13553 5 is_stmt 1 view .LVU8242
 28279              	.LVL3655:
13554:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 28280              		.loc 1 13554 5 view .LVU8243
 28281              		.loc 1 13554 8 is_stmt 0 view .LVU8244
 28282 0004 0023     		movs	r3, #0
 28283 0006 8DF80730 		strb	r3, [sp, #7]
13555:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28284              		.loc 1 13555 5 is_stmt 1 view .LVU8245
 28285              	.LVL3656:
13556:Core/Src/bno055.c **** 
13557:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13558:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 28286              		.loc 1 13558 5 view .LVU8246
 28287              		.loc 1 13558 18 is_stmt 0 view .LVU8247
 28288 000a 144B     		ldr	r3, .L2028
 28289 000c 1B68     		ldr	r3, [r3]
 28290              		.loc 1 13558 8 view .LVU8248
 28291 000e F3B1     		cbz	r3, .L2024
 28292 0010 0446     		mov	r4, r0
13559:Core/Src/bno055.c ****     {
13560:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13561:Core/Src/bno055.c ****     }
13562:Core/Src/bno055.c ****     else
13563:Core/Src/bno055.c ****     {
13564:Core/Src/bno055.c ****         /*condition check for page,mag sleep duration is
ARM GAS  /tmp/ccOloYeZ.s 			page 799


13565:Core/Src/bno055.c ****          * available in the page one*/
13566:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 28293              		.loc 1 13566 9 is_stmt 1 view .LVU8249
 28294              		.loc 1 13566 21 is_stmt 0 view .LVU8250
 28295 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 28296              		.loc 1 13566 12 view .LVU8251
 28297 0014 012B     		cmp	r3, #1
 28298 0016 14D1     		bne	.L2027
 28299              	.LVL3657:
 28300              	.L2022:
13567:Core/Src/bno055.c ****         {
13568:Core/Src/bno055.c ****             /* Write page as one */
13569:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13570:Core/Src/bno055.c ****         }
13571:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 28301              		.loc 1 13571 53 discriminator 1 view .LVU8252
 28302 0018 104B     		ldr	r3, .L2028
 28303 001a 1B68     		ldr	r3, [r3]
 28304 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 28305              		.loc 1 13571 41 discriminator 1 view .LVU8253
 28306 001e 012B     		cmp	r3, #1
 28307 0020 18D1     		bne	.L2025
 28308              	.L2023:
13572:Core/Src/bno055.c ****         {
13573:Core/Src/bno055.c ****             /* Read the value of mag sleep duration*/
13574:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 28309              		.loc 1 13574 13 is_stmt 1 view .LVU8254
 28310              		.loc 1 13574 32 is_stmt 0 view .LVU8255
 28311 0022 0E4B     		ldr	r3, .L2028
 28312 0024 1868     		ldr	r0, [r3]
 28313 0026 0569     		ldr	r5, [r0, #16]
 28314              		.loc 1 13574 24 view .LVU8256
 28315 0028 0123     		movs	r3, #1
 28316 002a 0DF10702 		add	r2, sp, #7
 28317 002e 0E21     		movs	r1, #14
 28318 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28319 0032 A847     		blx	r5
 28320              	.LVL3658:
13575:Core/Src/bno055.c ****                                                       BNO055_MAG_SLEEP_DURN_REG,
13576:Core/Src/bno055.c ****                                                       &data_u8r,
13577:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13578:Core/Src/bno055.c ****             *sleep_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_SLEEP_DURN);
 28321              		.loc 1 13578 13 is_stmt 1 view .LVU8257
 28322              		.loc 1 13578 30 is_stmt 0 view .LVU8258
 28323 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 28324 0038 C3F34303 		ubfx	r3, r3, #1, #4
 28325              		.loc 1 13578 28 view .LVU8259
 28326 003c 2370     		strb	r3, [r4]
 28327              	.LVL3659:
 28328              	.L2021:
13579:Core/Src/bno055.c ****         }
13580:Core/Src/bno055.c ****         else
13581:Core/Src/bno055.c ****         {
13582:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13583:Core/Src/bno055.c ****         }
13584:Core/Src/bno055.c ****     }
13585:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 800


13586:Core/Src/bno055.c ****     return com_rslt;
13587:Core/Src/bno055.c **** }
 28329              		.loc 1 13587 1 view .LVU8260
 28330 003e 03B0     		add	sp, sp, #12
 28331              		.cfi_remember_state
 28332              		.cfi_def_cfa_offset 12
 28333              		@ sp needed
 28334 0040 30BD     		pop	{r4, r5, pc}
 28335              	.LVL3660:
 28336              	.L2027:
 28337              		.cfi_restore_state
13569:Core/Src/bno055.c ****         }
 28338              		.loc 1 13569 13 is_stmt 1 view .LVU8261
13569:Core/Src/bno055.c ****         }
 28339              		.loc 1 13569 23 is_stmt 0 view .LVU8262
 28340 0042 0120     		movs	r0, #1
 28341              	.LVL3661:
13569:Core/Src/bno055.c ****         }
 28342              		.loc 1 13569 23 view .LVU8263
 28343 0044 FFF7FEFF 		bl	bno055_write_page_id
 28344              	.LVL3662:
13571:Core/Src/bno055.c ****         {
 28345              		.loc 1 13571 9 is_stmt 1 view .LVU8264
13571:Core/Src/bno055.c ****         {
 28346              		.loc 1 13571 12 is_stmt 0 view .LVU8265
 28347 0048 0028     		cmp	r0, #0
 28348 004a EAD0     		beq	.L2023
 28349 004c E4E7     		b	.L2022
 28350              	.LVL3663:
 28351              	.L2024:
13560:Core/Src/bno055.c ****     }
 28352              		.loc 1 13560 16 view .LVU8266
 28353 004e 6FF07E00 		mvn	r0, #126
 28354              	.LVL3664:
13560:Core/Src/bno055.c ****     }
 28355              		.loc 1 13560 16 view .LVU8267
 28356 0052 F4E7     		b	.L2021
 28357              	.LVL3665:
 28358              	.L2025:
13582:Core/Src/bno055.c ****         }
 28359              		.loc 1 13582 22 view .LVU8268
 28360 0054 4FF0FF30 		mov	r0, #-1
 28361 0058 F1E7     		b	.L2021
 28362              	.L2029:
 28363 005a 00BF     		.align	2
 28364              	.L2028:
 28365 005c 00000000 		.word	p_bno055
 28366              		.cfi_endproc
 28367              	.LFE203:
 28369              		.section	.text.bno055_set_mag_sleep_durn,"ax",%progbits
 28370              		.align	1
 28371              		.global	bno055_set_mag_sleep_durn
 28372              		.syntax unified
 28373              		.thumb
 28374              		.thumb_func
 28376              	bno055_set_mag_sleep_durn:
 28377              	.LVL3666:
ARM GAS  /tmp/ccOloYeZ.s 			page 801


 28378              	.LFB204:
13588:Core/Src/bno055.c **** 
13589:Core/Src/bno055.c **** /*!
13590:Core/Src/bno055.c ****  *  @brief This API used to write the mag sleep duration
13591:Core/Src/bno055.c ****  *  from page one register from 0x0E bit 1 to 4
13592:Core/Src/bno055.c ****  *
13593:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of mag sleep duration
13594:Core/Src/bno055.c ****  *
13595:Core/Src/bno055.c ****  *  @return results of bus communication function
13596:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13597:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13598:Core/Src/bno055.c ****  *
13599:Core/Src/bno055.c ****  *
13600:Core/Src/bno055.c ****  */
13601:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_sleep_durn(u8 sleep_durn_u8)
13602:Core/Src/bno055.c **** {
 28379              		.loc 1 13602 1 is_stmt 1 view -0
 28380              		.cfi_startproc
 28381              		@ args = 0, pretend = 0, frame = 8
 28382              		@ frame_needed = 0, uses_anonymous_args = 0
 28383              		.loc 1 13602 1 is_stmt 0 view .LVU8270
 28384 0000 30B5     		push	{r4, r5, lr}
 28385              		.cfi_def_cfa_offset 12
 28386              		.cfi_offset 4, -12
 28387              		.cfi_offset 5, -8
 28388              		.cfi_offset 14, -4
 28389 0002 83B0     		sub	sp, sp, #12
 28390              		.cfi_def_cfa_offset 24
13603:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28391              		.loc 1 13603 5 is_stmt 1 view .LVU8271
 28392              	.LVL3667:
13604:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 28393              		.loc 1 13604 5 view .LVU8272
 28394              		.loc 1 13604 8 is_stmt 0 view .LVU8273
 28395 0004 0023     		movs	r3, #0
 28396 0006 8DF80730 		strb	r3, [sp, #7]
13605:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28397              		.loc 1 13605 5 is_stmt 1 view .LVU8274
 28398              	.LVL3668:
13606:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 28399              		.loc 1 13606 5 view .LVU8275
13607:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 28400              		.loc 1 13607 5 view .LVU8276
 28401              		.loc 1 13607 8 is_stmt 0 view .LVU8277
 28402 000a 8DF80630 		strb	r3, [sp, #6]
13608:Core/Src/bno055.c **** 
13609:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13610:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 28403              		.loc 1 13610 5 is_stmt 1 view .LVU8278
 28404              		.loc 1 13610 18 is_stmt 0 view .LVU8279
 28405 000e 294B     		ldr	r3, .L2042
 28406 0010 1B68     		ldr	r3, [r3]
 28407              		.loc 1 13610 8 view .LVU8280
 28408 0012 002B     		cmp	r3, #0
 28409 0014 4AD0     		beq	.L2034
 28410 0016 0546     		mov	r5, r0
13611:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 802


13612:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13613:Core/Src/bno055.c ****     }
13614:Core/Src/bno055.c ****     else
13615:Core/Src/bno055.c ****     {
13616:Core/Src/bno055.c ****         /* The write operation effective only if the operation
13617:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
13618:Core/Src/bno055.c ****          * current operation mode and set the config mode */
13619:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 28411              		.loc 1 13619 9 is_stmt 1 view .LVU8281
 28412              		.loc 1 13619 19 is_stmt 0 view .LVU8282
 28413 0018 0DF10600 		add	r0, sp, #6
 28414              	.LVL3669:
 28415              		.loc 1 13619 19 view .LVU8283
 28416 001c FFF7FEFF 		bl	bno055_get_operation_mode
 28417              	.LVL3670:
13620:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28418              		.loc 1 13620 9 is_stmt 1 view .LVU8284
 28419              		.loc 1 13620 12 is_stmt 0 view .LVU8285
 28420 0020 0446     		mov	r4, r0
 28421 0022 90BB     		cbnz	r0, .L2035
13621:Core/Src/bno055.c ****         {
13622:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 28422              		.loc 1 13622 13 is_stmt 1 view .LVU8286
 28423              		.loc 1 13622 32 is_stmt 0 view .LVU8287
 28424 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 28425              		.loc 1 13622 16 view .LVU8288
 28426 0028 1BB9     		cbnz	r3, .L2039
 28427              	.LVL3671:
 28428              	.L2033:
13623:Core/Src/bno055.c ****             {
13624:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
13625:Core/Src/bno055.c ****             }
13626:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 28429              		.loc 1 13626 13 is_stmt 1 view .LVU8289
 28430              		.loc 1 13626 16 is_stmt 0 view .LVU8290
 28431 002a 44B1     		cbz	r4, .L2040
13627:Core/Src/bno055.c ****             {
13628:Core/Src/bno055.c ****                 /* Write page as one */
13629:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13630:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
13631:Core/Src/bno055.c ****                 {
13632:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
13633:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
13634:Core/Src/bno055.c ****                                                               &data_u8r,
13635:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
13636:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
13637:Core/Src/bno055.c ****                     {
13638:Core/Src/bno055.c ****                         /* Write the value of
13639:Core/Src/bno055.c ****                          *  mag sleep duration */
13640:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_MAG_SLEEP_DURN, sleep_durn_
13641:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
13642:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
13643:Core/Src/bno055.c ****                                                                     &data_u8r,
13644:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
13645:Core/Src/bno055.c ****                     }
13646:Core/Src/bno055.c ****                 }
13647:Core/Src/bno055.c ****                 else
ARM GAS  /tmp/ccOloYeZ.s 			page 803


13648:Core/Src/bno055.c ****                 {
13649:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
13650:Core/Src/bno055.c ****                 }
13651:Core/Src/bno055.c ****             }
13652:Core/Src/bno055.c ****             else
13653:Core/Src/bno055.c ****             {
13654:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 28432              		.loc 1 13654 26 view .LVU8291
 28433 002c 4FF0FF34 		mov	r4, #-1
 28434              	.LVL3672:
 28435              		.loc 1 13654 26 view .LVU8292
 28436 0030 2DE0     		b	.L2032
 28437              	.LVL3673:
 28438              	.L2039:
13624:Core/Src/bno055.c ****             }
 28439              		.loc 1 13624 17 is_stmt 1 view .LVU8293
13624:Core/Src/bno055.c ****             }
 28440              		.loc 1 13624 28 is_stmt 0 view .LVU8294
 28441 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 28442              	.LVL3674:
13624:Core/Src/bno055.c ****             }
 28443              		.loc 1 13624 25 view .LVU8295
 28444 0036 54FA80F4 		uxtab	r4, r4, r0
 28445 003a 64B2     		sxtb	r4, r4
 28446              	.LVL3675:
13624:Core/Src/bno055.c ****             }
 28447              		.loc 1 13624 25 view .LVU8296
 28448 003c F5E7     		b	.L2033
 28449              	.L2040:
13629:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28450              		.loc 1 13629 17 is_stmt 1 view .LVU8297
13629:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28451              		.loc 1 13629 30 is_stmt 0 view .LVU8298
 28452 003e 0120     		movs	r0, #1
 28453 0040 FFF7FEFF 		bl	bno055_write_page_id
 28454              	.LVL3676:
13630:Core/Src/bno055.c ****                 {
 28455              		.loc 1 13630 17 is_stmt 1 view .LVU8299
13630:Core/Src/bno055.c ****                 {
 28456              		.loc 1 13630 20 is_stmt 0 view .LVU8300
 28457 0044 48BB     		cbnz	r0, .L2037
13632:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
 28458              		.loc 1 13632 21 is_stmt 1 view .LVU8301
13632:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
 28459              		.loc 1 13632 40 is_stmt 0 view .LVU8302
 28460 0046 1B4B     		ldr	r3, .L2042
 28461 0048 1868     		ldr	r0, [r3]
 28462              	.LVL3677:
13632:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
 28463              		.loc 1 13632 40 view .LVU8303
 28464 004a 0469     		ldr	r4, [r0, #16]
 28465              	.LVL3678:
13632:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
 28466              		.loc 1 13632 32 view .LVU8304
 28467 004c 0123     		movs	r3, #1
 28468 004e 0DF10702 		add	r2, sp, #7
 28469 0052 0E21     		movs	r1, #14
ARM GAS  /tmp/ccOloYeZ.s 			page 804


 28470 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28471 0056 A047     		blx	r4
 28472              	.LVL3679:
13636:Core/Src/bno055.c ****                     {
 28473              		.loc 1 13636 21 is_stmt 1 view .LVU8305
13636:Core/Src/bno055.c ****                     {
 28474              		.loc 1 13636 24 is_stmt 0 view .LVU8306
 28475 0058 0446     		mov	r4, r0
 28476 005a C0B9     		cbnz	r0, .L2032
13640:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28477              		.loc 1 13640 25 is_stmt 1 view .LVU8307
13640:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28478              		.loc 1 13640 36 is_stmt 0 view .LVU8308
 28479 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 28480 0060 6800     		lsls	r0, r5, #1
 28481              	.LVL3680:
13640:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28482              		.loc 1 13640 36 view .LVU8309
 28483 0062 00F01E00 		and	r0, r0, #30
 28484 0066 23F01E03 		bic	r3, r3, #30
 28485 006a 0343     		orrs	r3, r3, r0
13640:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28486              		.loc 1 13640 34 view .LVU8310
 28487 006c 8DF80730 		strb	r3, [sp, #7]
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 28488              		.loc 1 13641 25 is_stmt 1 view .LVU8311
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 28489              		.loc 1 13641 45 is_stmt 0 view .LVU8312
 28490 0070 104B     		ldr	r3, .L2042
 28491 0072 1868     		ldr	r0, [r3]
 28492 0074 C568     		ldr	r5, [r0, #12]
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 28493              		.loc 1 13641 37 view .LVU8313
 28494 0076 0123     		movs	r3, #1
 28495 0078 0DF10702 		add	r2, sp, #7
 28496 007c 0E21     		movs	r1, #14
 28497 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28498 0080 A847     		blx	r5
 28499              	.LVL3681:
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 28500              		.loc 1 13641 34 view .LVU8314
 28501 0082 54FA80F0 		uxtab	r0, r4, r0
 28502 0086 44B2     		sxtb	r4, r0
 28503              	.LVL3682:
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 28504              		.loc 1 13641 34 view .LVU8315
 28505 0088 01E0     		b	.L2032
 28506              	.LVL3683:
 28507              	.L2035:
13655:Core/Src/bno055.c ****             }
13656:Core/Src/bno055.c ****         }
13657:Core/Src/bno055.c ****         else
13658:Core/Src/bno055.c ****         {
13659:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 28508              		.loc 1 13659 22 view .LVU8316
 28509 008a 4FF0FF34 		mov	r4, #-1
 28510              	.LVL3684:
ARM GAS  /tmp/ccOloYeZ.s 			page 805


 28511              	.L2032:
13660:Core/Src/bno055.c ****         }
13661:Core/Src/bno055.c ****     }
13662:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 28512              		.loc 1 13662 5 is_stmt 1 view .LVU8317
 28513              		.loc 1 13662 24 is_stmt 0 view .LVU8318
 28514 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 28515              		.loc 1 13662 8 view .LVU8319
 28516 0092 28B9     		cbnz	r0, .L2041
 28517              	.LVL3685:
 28518              	.L2031:
13663:Core/Src/bno055.c ****     {
13664:Core/Src/bno055.c ****         /* set the operation mode of
13665:Core/Src/bno055.c ****          * previous operation mode*/
13666:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
13667:Core/Src/bno055.c ****     }
13668:Core/Src/bno055.c **** 
13669:Core/Src/bno055.c ****     return com_rslt;
13670:Core/Src/bno055.c **** }
 28519              		.loc 1 13670 1 view .LVU8320
 28520 0094 2046     		mov	r0, r4
 28521 0096 03B0     		add	sp, sp, #12
 28522              		.cfi_remember_state
 28523              		.cfi_def_cfa_offset 12
 28524              		@ sp needed
 28525 0098 30BD     		pop	{r4, r5, pc}
 28526              	.LVL3686:
 28527              	.L2037:
 28528              		.cfi_restore_state
13649:Core/Src/bno055.c ****                 }
 28529              		.loc 1 13649 30 view .LVU8321
 28530 009a 4FF0FF34 		mov	r4, #-1
 28531              	.LVL3687:
13649:Core/Src/bno055.c ****                 }
 28532              		.loc 1 13649 30 view .LVU8322
 28533 009e F6E7     		b	.L2032
 28534              	.LVL3688:
 28535              	.L2041:
13666:Core/Src/bno055.c ****     }
 28536              		.loc 1 13666 9 is_stmt 1 view .LVU8323
13666:Core/Src/bno055.c ****     }
 28537              		.loc 1 13666 21 is_stmt 0 view .LVU8324
 28538 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 28539              	.LVL3689:
13666:Core/Src/bno055.c ****     }
 28540              		.loc 1 13666 18 view .LVU8325
 28541 00a4 54FA80F0 		uxtab	r0, r4, r0
 28542 00a8 44B2     		sxtb	r4, r0
 28543              	.LVL3690:
13666:Core/Src/bno055.c ****     }
 28544              		.loc 1 13666 18 view .LVU8326
 28545 00aa F3E7     		b	.L2031
 28546              	.LVL3691:
 28547              	.L2034:
13612:Core/Src/bno055.c ****     }
 28548              		.loc 1 13612 16 view .LVU8327
 28549 00ac 6FF07E04 		mvn	r4, #126
ARM GAS  /tmp/ccOloYeZ.s 			page 806


 28550 00b0 F0E7     		b	.L2031
 28551              	.L2043:
 28552 00b2 00BF     		.align	2
 28553              	.L2042:
 28554 00b4 00000000 		.word	p_bno055
 28555              		.cfi_endproc
 28556              	.LFE204:
 28558              		.section	.text.bno055_get_intr_mask_gyro_any_motion,"ax",%progbits
 28559              		.align	1
 28560              		.global	bno055_get_intr_mask_gyro_any_motion
 28561              		.syntax unified
 28562              		.thumb
 28563              		.thumb_func
 28565              	bno055_get_intr_mask_gyro_any_motion:
 28566              	.LVL3692:
 28567              	.LFB205:
13671:Core/Src/bno055.c **** 
13672:Core/Src/bno055.c **** /*!
13673:Core/Src/bno055.c ****  *  @brief This API used to read the gyro anymotion interrupt mask
13674:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 2
13675:Core/Src/bno055.c ****  *
13676:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt mask
13677:Core/Src/bno055.c ****  *      gyro_any_motion_u8 |   result
13678:Core/Src/bno055.c ****  *     --------------------  |------------
13679:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
13680:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
13681:Core/Src/bno055.c ****  *
13682:Core/Src/bno055.c ****  *  @return results of bus communication function
13683:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13684:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13685:Core/Src/bno055.c ****  *
13686:Core/Src/bno055.c ****  *  @note While enabling the gyro anymotion interrupt
13687:Core/Src/bno055.c ****  *  configure the following settings
13688:Core/Src/bno055.c ****  *
13689:Core/Src/bno055.c ****  *  Axis:
13690:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_axis_enable()
13691:Core/Src/bno055.c ****  *
13692:Core/Src/bno055.c ****  *  Filter setting:
13693:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_filter()
13694:Core/Src/bno055.c ****  *
13695:Core/Src/bno055.c ****  *  Threshold :
13696:Core/Src/bno055.c ****  *
13697:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_thres()
13698:Core/Src/bno055.c ****  *
13699:Core/Src/bno055.c ****  *  Slope samples :
13700:Core/Src/bno055.c ****  *
13701:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_slope_samples()
13702:Core/Src/bno055.c ****  *
13703:Core/Src/bno055.c ****  *  Awake duration :
13704:Core/Src/bno055.c ****  *
13705:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_awake_durn()
13706:Core/Src/bno055.c ****  *
13707:Core/Src/bno055.c ****  */
13708:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_gyro_any_motion(u8 *gyro_any_motion_u8)
13709:Core/Src/bno055.c **** {
 28568              		.loc 1 13709 1 is_stmt 1 view -0
 28569              		.cfi_startproc
ARM GAS  /tmp/ccOloYeZ.s 			page 807


 28570              		@ args = 0, pretend = 0, frame = 8
 28571              		@ frame_needed = 0, uses_anonymous_args = 0
 28572              		.loc 1 13709 1 is_stmt 0 view .LVU8329
 28573 0000 30B5     		push	{r4, r5, lr}
 28574              		.cfi_def_cfa_offset 12
 28575              		.cfi_offset 4, -12
 28576              		.cfi_offset 5, -8
 28577              		.cfi_offset 14, -4
 28578 0002 83B0     		sub	sp, sp, #12
 28579              		.cfi_def_cfa_offset 24
13710:Core/Src/bno055.c ****     /* Variable used to return value of
13711:Core/Src/bno055.c ****      * communication routine*/
13712:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28580              		.loc 1 13712 5 is_stmt 1 view .LVU8330
 28581              	.LVL3693:
13713:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 28582              		.loc 1 13713 5 view .LVU8331
 28583              		.loc 1 13713 8 is_stmt 0 view .LVU8332
 28584 0004 0023     		movs	r3, #0
 28585 0006 8DF80730 		strb	r3, [sp, #7]
13714:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28586              		.loc 1 13714 5 is_stmt 1 view .LVU8333
 28587              	.LVL3694:
13715:Core/Src/bno055.c **** 
13716:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13717:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 28588              		.loc 1 13717 5 view .LVU8334
 28589              		.loc 1 13717 18 is_stmt 0 view .LVU8335
 28590 000a 144B     		ldr	r3, .L2052
 28591 000c 1B68     		ldr	r3, [r3]
 28592              		.loc 1 13717 8 view .LVU8336
 28593 000e F3B1     		cbz	r3, .L2048
 28594 0010 0446     		mov	r4, r0
13718:Core/Src/bno055.c ****     {
13719:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13720:Core/Src/bno055.c ****     }
13721:Core/Src/bno055.c ****     else
13722:Core/Src/bno055.c ****     {
13723:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion interrupt mask is
13724:Core/Src/bno055.c ****          * available in the page one*/
13725:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 28595              		.loc 1 13725 9 is_stmt 1 view .LVU8337
 28596              		.loc 1 13725 21 is_stmt 0 view .LVU8338
 28597 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 28598              		.loc 1 13725 12 view .LVU8339
 28599 0014 012B     		cmp	r3, #1
 28600 0016 14D1     		bne	.L2051
 28601              	.LVL3695:
 28602              	.L2046:
13726:Core/Src/bno055.c ****         {
13727:Core/Src/bno055.c ****             /* Write page as one */
13728:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13729:Core/Src/bno055.c ****         }
13730:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 28603              		.loc 1 13730 53 discriminator 1 view .LVU8340
 28604 0018 104B     		ldr	r3, .L2052
 28605 001a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccOloYeZ.s 			page 808


 28606 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 28607              		.loc 1 13730 41 discriminator 1 view .LVU8341
 28608 001e 012B     		cmp	r3, #1
 28609 0020 18D1     		bne	.L2049
 28610              	.L2047:
13731:Core/Src/bno055.c ****         {
13732:Core/Src/bno055.c ****             /* Read the value of gyro anymotion interrupt mask*/
13733:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 28611              		.loc 1 13733 13 is_stmt 1 view .LVU8342
 28612              		.loc 1 13733 32 is_stmt 0 view .LVU8343
 28613 0022 0E4B     		ldr	r3, .L2052
 28614 0024 1868     		ldr	r0, [r3]
 28615 0026 0569     		ldr	r5, [r0, #16]
 28616              		.loc 1 13733 24 view .LVU8344
 28617 0028 0123     		movs	r3, #1
 28618 002a 0DF10702 		add	r2, sp, #7
 28619 002e 0F21     		movs	r1, #15
 28620 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28621 0032 A847     		blx	r5
 28622              	.LVL3696:
13734:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_INTR_MASK_REG,
13735:Core/Src/bno055.c ****                                                       &data_u8r,
13736:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13737:Core/Src/bno055.c ****             *gyro_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_INTR_MASK);
 28623              		.loc 1 13737 13 is_stmt 1 view .LVU8345
 28624              		.loc 1 13737 35 is_stmt 0 view .LVU8346
 28625 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 28626 0038 C3F38003 		ubfx	r3, r3, #2, #1
 28627              		.loc 1 13737 33 view .LVU8347
 28628 003c 2370     		strb	r3, [r4]
 28629              	.LVL3697:
 28630              	.L2045:
13738:Core/Src/bno055.c ****         }
13739:Core/Src/bno055.c ****         else
13740:Core/Src/bno055.c ****         {
13741:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13742:Core/Src/bno055.c ****         }
13743:Core/Src/bno055.c ****     }
13744:Core/Src/bno055.c **** 
13745:Core/Src/bno055.c ****     return com_rslt;
13746:Core/Src/bno055.c **** }
 28631              		.loc 1 13746 1 view .LVU8348
 28632 003e 03B0     		add	sp, sp, #12
 28633              		.cfi_remember_state
 28634              		.cfi_def_cfa_offset 12
 28635              		@ sp needed
 28636 0040 30BD     		pop	{r4, r5, pc}
 28637              	.LVL3698:
 28638              	.L2051:
 28639              		.cfi_restore_state
13728:Core/Src/bno055.c ****         }
 28640              		.loc 1 13728 13 is_stmt 1 view .LVU8349
13728:Core/Src/bno055.c ****         }
 28641              		.loc 1 13728 23 is_stmt 0 view .LVU8350
 28642 0042 0120     		movs	r0, #1
 28643              	.LVL3699:
13728:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 809


 28644              		.loc 1 13728 23 view .LVU8351
 28645 0044 FFF7FEFF 		bl	bno055_write_page_id
 28646              	.LVL3700:
13730:Core/Src/bno055.c ****         {
 28647              		.loc 1 13730 9 is_stmt 1 view .LVU8352
13730:Core/Src/bno055.c ****         {
 28648              		.loc 1 13730 12 is_stmt 0 view .LVU8353
 28649 0048 0028     		cmp	r0, #0
 28650 004a EAD0     		beq	.L2047
 28651 004c E4E7     		b	.L2046
 28652              	.LVL3701:
 28653              	.L2048:
13719:Core/Src/bno055.c ****     }
 28654              		.loc 1 13719 16 view .LVU8354
 28655 004e 6FF07E00 		mvn	r0, #126
 28656              	.LVL3702:
13719:Core/Src/bno055.c ****     }
 28657              		.loc 1 13719 16 view .LVU8355
 28658 0052 F4E7     		b	.L2045
 28659              	.LVL3703:
 28660              	.L2049:
13741:Core/Src/bno055.c ****         }
 28661              		.loc 1 13741 22 view .LVU8356
 28662 0054 4FF0FF30 		mov	r0, #-1
 28663 0058 F1E7     		b	.L2045
 28664              	.L2053:
 28665 005a 00BF     		.align	2
 28666              	.L2052:
 28667 005c 00000000 		.word	p_bno055
 28668              		.cfi_endproc
 28669              	.LFE205:
 28671              		.section	.text.bno055_set_intr_mask_gyro_any_motion,"ax",%progbits
 28672              		.align	1
 28673              		.global	bno055_set_intr_mask_gyro_any_motion
 28674              		.syntax unified
 28675              		.thumb
 28676              		.thumb_func
 28678              	bno055_set_intr_mask_gyro_any_motion:
 28679              	.LVL3704:
 28680              	.LFB206:
13747:Core/Src/bno055.c **** 
13748:Core/Src/bno055.c **** /*!
13749:Core/Src/bno055.c ****  *  @brief This API used to write the gyro anymotion interrupt mask
13750:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 2
13751:Core/Src/bno055.c ****  *
13752:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt mask
13753:Core/Src/bno055.c ****  *      gyro_any_motion_u8 |   result
13754:Core/Src/bno055.c ****  *     --------------------  |------------
13755:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
13756:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
13757:Core/Src/bno055.c ****  *
13758:Core/Src/bno055.c ****  *  @return results of bus communication function
13759:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13760:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13761:Core/Src/bno055.c ****  *
13762:Core/Src/bno055.c ****  *  @note While enabling the gyro anymotion interrupt
13763:Core/Src/bno055.c ****  *  configure the following settings
ARM GAS  /tmp/ccOloYeZ.s 			page 810


13764:Core/Src/bno055.c ****  *
13765:Core/Src/bno055.c ****  *  Axis:
13766:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_axis_enable()
13767:Core/Src/bno055.c ****  *
13768:Core/Src/bno055.c ****  *  Filter setting:
13769:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_filter()
13770:Core/Src/bno055.c ****  *
13771:Core/Src/bno055.c ****  *  Threshold :
13772:Core/Src/bno055.c ****  *
13773:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_thres()
13774:Core/Src/bno055.c ****  *
13775:Core/Src/bno055.c ****  *  Slope samples :
13776:Core/Src/bno055.c ****  *
13777:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_slope_samples()
13778:Core/Src/bno055.c ****  *
13779:Core/Src/bno055.c ****  *  Awake duration :
13780:Core/Src/bno055.c ****  *
13781:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_awake_durn()
13782:Core/Src/bno055.c ****  *
13783:Core/Src/bno055.c ****  */
13784:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_gyro_any_motion(u8 gyro_any_motion_u8)
13785:Core/Src/bno055.c **** {
 28681              		.loc 1 13785 1 is_stmt 1 view -0
 28682              		.cfi_startproc
 28683              		@ args = 0, pretend = 0, frame = 8
 28684              		@ frame_needed = 0, uses_anonymous_args = 0
 28685              		.loc 1 13785 1 is_stmt 0 view .LVU8358
 28686 0000 70B5     		push	{r4, r5, r6, lr}
 28687              		.cfi_def_cfa_offset 16
 28688              		.cfi_offset 4, -16
 28689              		.cfi_offset 5, -12
 28690              		.cfi_offset 6, -8
 28691              		.cfi_offset 14, -4
 28692 0002 82B0     		sub	sp, sp, #8
 28693              		.cfi_def_cfa_offset 24
13786:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28694              		.loc 1 13786 5 is_stmt 1 view .LVU8359
 28695              	.LVL3705:
13787:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 28696              		.loc 1 13787 5 view .LVU8360
 28697              		.loc 1 13787 8 is_stmt 0 view .LVU8361
 28698 0004 0023     		movs	r3, #0
 28699 0006 8DF80730 		strb	r3, [sp, #7]
13788:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28700              		.loc 1 13788 5 is_stmt 1 view .LVU8362
 28701              	.LVL3706:
13789:Core/Src/bno055.c **** 
13790:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13791:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 28702              		.loc 1 13791 5 view .LVU8363
 28703              		.loc 1 13791 18 is_stmt 0 view .LVU8364
 28704 000a 1E4B     		ldr	r3, .L2062
 28705 000c 1B68     		ldr	r3, [r3]
 28706              		.loc 1 13791 8 view .LVU8365
 28707 000e 002B     		cmp	r3, #0
 28708 0010 32D0     		beq	.L2058
 28709 0012 0546     		mov	r5, r0
ARM GAS  /tmp/ccOloYeZ.s 			page 811


13792:Core/Src/bno055.c ****     {
13793:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13794:Core/Src/bno055.c ****     }
13795:Core/Src/bno055.c ****     else
13796:Core/Src/bno055.c ****     {
13797:Core/Src/bno055.c ****         /*condition check for page, accel range is
13798:Core/Src/bno055.c ****          * available in the page one*/
13799:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 28710              		.loc 1 13799 9 is_stmt 1 view .LVU8366
 28711              		.loc 1 13799 21 is_stmt 0 view .LVU8367
 28712 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 28713              		.loc 1 13799 12 view .LVU8368
 28714 0016 012B     		cmp	r3, #1
 28715 0018 28D1     		bne	.L2061
 28716              	.LVL3707:
 28717              	.L2056:
13800:Core/Src/bno055.c ****         {
13801:Core/Src/bno055.c ****             /* Write page as one */
13802:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13803:Core/Src/bno055.c ****         }
13804:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 28718              		.loc 1 13804 53 discriminator 1 view .LVU8369
 28719 001a 1A4B     		ldr	r3, .L2062
 28720 001c 1B68     		ldr	r3, [r3]
 28721 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 28722              		.loc 1 13804 41 discriminator 1 view .LVU8370
 28723 0020 012B     		cmp	r3, #1
 28724 0022 2CD1     		bne	.L2059
 28725              	.L2057:
13805:Core/Src/bno055.c ****         {
13806:Core/Src/bno055.c ****             /* Write the value of gyro anymotion interrupt mask*/
13807:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 28726              		.loc 1 13807 13 is_stmt 1 view .LVU8371
 28727              		.loc 1 13807 32 is_stmt 0 view .LVU8372
 28728 0024 174B     		ldr	r3, .L2062
 28729 0026 1C68     		ldr	r4, [r3]
 28730 0028 2669     		ldr	r6, [r4, #16]
 28731              		.loc 1 13807 24 view .LVU8373
 28732 002a 0123     		movs	r3, #1
 28733 002c 0DF10702 		add	r2, sp, #7
 28734 0030 0F21     		movs	r1, #15
 28735 0032 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 28736 0034 B047     		blx	r6
 28737              	.LVL3708:
13808:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_INTR_MASK_REG,
13809:Core/Src/bno055.c ****                                                       &data_u8r,
13810:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13811:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 28738              		.loc 1 13811 13 is_stmt 1 view .LVU8374
 28739              		.loc 1 13811 16 is_stmt 0 view .LVU8375
 28740 0036 0446     		mov	r4, r0
 28741 0038 A8B9     		cbnz	r0, .L2055
13812:Core/Src/bno055.c ****             {
13813:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_INTR_MASK, gyro_any
 28742              		.loc 1 13813 17 is_stmt 1 view .LVU8376
 28743              		.loc 1 13813 28 is_stmt 0 view .LVU8377
 28744 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
ARM GAS  /tmp/ccOloYeZ.s 			page 812


 28745 003e A800     		lsls	r0, r5, #2
 28746              	.LVL3709:
 28747              		.loc 1 13813 28 view .LVU8378
 28748 0040 00F00400 		and	r0, r0, #4
 28749 0044 23F00403 		bic	r3, r3, #4
 28750 0048 0343     		orrs	r3, r3, r0
 28751              		.loc 1 13813 26 view .LVU8379
 28752 004a 8DF80730 		strb	r3, [sp, #7]
13814:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28753              		.loc 1 13814 17 is_stmt 1 view .LVU8380
 28754              		.loc 1 13814 37 is_stmt 0 view .LVU8381
 28755 004e 0D4B     		ldr	r3, .L2062
 28756 0050 1868     		ldr	r0, [r3]
 28757 0052 C568     		ldr	r5, [r0, #12]
 28758              		.loc 1 13814 29 view .LVU8382
 28759 0054 0123     		movs	r3, #1
 28760 0056 0DF10702 		add	r2, sp, #7
 28761 005a 0F21     		movs	r1, #15
 28762 005c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28763 005e A847     		blx	r5
 28764              	.LVL3710:
 28765              		.loc 1 13814 26 view .LVU8383
 28766 0060 54FA80F0 		uxtab	r0, r4, r0
 28767 0064 44B2     		sxtb	r4, r0
 28768              	.LVL3711:
 28769              	.L2055:
13815:Core/Src/bno055.c ****                                                             BNO055_GYRO_ANY_MOTION_INTR_MASK_REG,
13816:Core/Src/bno055.c ****                                                             &data_u8r,
13817:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
13818:Core/Src/bno055.c ****             }
13819:Core/Src/bno055.c ****         }
13820:Core/Src/bno055.c ****         else
13821:Core/Src/bno055.c ****         {
13822:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13823:Core/Src/bno055.c ****         }
13824:Core/Src/bno055.c ****     }
13825:Core/Src/bno055.c **** 
13826:Core/Src/bno055.c ****     return com_rslt;
13827:Core/Src/bno055.c **** }
 28770              		.loc 1 13827 1 view .LVU8384
 28771 0066 2046     		mov	r0, r4
 28772 0068 02B0     		add	sp, sp, #8
 28773              		.cfi_remember_state
 28774              		.cfi_def_cfa_offset 16
 28775              		@ sp needed
 28776 006a 70BD     		pop	{r4, r5, r6, pc}
 28777              	.LVL3712:
 28778              	.L2061:
 28779              		.cfi_restore_state
13802:Core/Src/bno055.c ****         }
 28780              		.loc 1 13802 13 is_stmt 1 view .LVU8385
13802:Core/Src/bno055.c ****         }
 28781              		.loc 1 13802 23 is_stmt 0 view .LVU8386
 28782 006c 0120     		movs	r0, #1
 28783              	.LVL3713:
13802:Core/Src/bno055.c ****         }
 28784              		.loc 1 13802 23 view .LVU8387
ARM GAS  /tmp/ccOloYeZ.s 			page 813


 28785 006e FFF7FEFF 		bl	bno055_write_page_id
 28786              	.LVL3714:
13804:Core/Src/bno055.c ****         {
 28787              		.loc 1 13804 9 is_stmt 1 view .LVU8388
13804:Core/Src/bno055.c ****         {
 28788              		.loc 1 13804 12 is_stmt 0 view .LVU8389
 28789 0072 0028     		cmp	r0, #0
 28790 0074 D6D0     		beq	.L2057
 28791 0076 D0E7     		b	.L2056
 28792              	.LVL3715:
 28793              	.L2058:
13793:Core/Src/bno055.c ****     }
 28794              		.loc 1 13793 16 view .LVU8390
 28795 0078 6FF07E04 		mvn	r4, #126
 28796 007c F3E7     		b	.L2055
 28797              	.LVL3716:
 28798              	.L2059:
13822:Core/Src/bno055.c ****         }
 28799              		.loc 1 13822 22 view .LVU8391
 28800 007e 4FF0FF34 		mov	r4, #-1
 28801 0082 F0E7     		b	.L2055
 28802              	.L2063:
 28803              		.align	2
 28804              	.L2062:
 28805 0084 00000000 		.word	p_bno055
 28806              		.cfi_endproc
 28807              	.LFE206:
 28809              		.section	.text.bno055_get_intr_mask_gyro_highrate,"ax",%progbits
 28810              		.align	1
 28811              		.global	bno055_get_intr_mask_gyro_highrate
 28812              		.syntax unified
 28813              		.thumb
 28814              		.thumb_func
 28816              	bno055_get_intr_mask_gyro_highrate:
 28817              	.LVL3717:
 28818              	.LFB207:
13828:Core/Src/bno055.c **** 
13829:Core/Src/bno055.c **** /*!
13830:Core/Src/bno055.c ****  *  @brief This API used to read the gyro highrate interrupt mask
13831:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 3
13832:Core/Src/bno055.c ****  *
13833:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt mask
13834:Core/Src/bno055.c ****  *        gyro_highrate_u8 |  result
13835:Core/Src/bno055.c ****  *     --------------------  |------------
13836:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
13837:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
13838:Core/Src/bno055.c ****  *
13839:Core/Src/bno055.c ****  *  @return results of bus communication function
13840:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13841:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13842:Core/Src/bno055.c ****  *
13843:Core/Src/bno055.c ****  *  @note While enabling the gyro highrate interrupt
13844:Core/Src/bno055.c ****  *  configure the below settings by using
13845:Core/Src/bno055.c ****  *  the following API
13846:Core/Src/bno055.c ****  *
13847:Core/Src/bno055.c ****  *  Axis :
13848:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 814


13849:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_axis_enable()
13850:Core/Src/bno055.c ****  *
13851:Core/Src/bno055.c ****  *  Filter :
13852:Core/Src/bno055.c ****  *
13853:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_filter()
13854:Core/Src/bno055.c ****  *
13855:Core/Src/bno055.c ****  *  Threshold :
13856:Core/Src/bno055.c ****  *
13857:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_x_thres()
13858:Core/Src/bno055.c ****  *
13859:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_y_thres()
13860:Core/Src/bno055.c ****  *
13861:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_z_thres()
13862:Core/Src/bno055.c ****  *
13863:Core/Src/bno055.c ****  *  Hysteresis :
13864:Core/Src/bno055.c ****  *
13865:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_hyst()
13866:Core/Src/bno055.c ****  *
13867:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_hyst()
13868:Core/Src/bno055.c ****  *
13869:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_hyst()
13870:Core/Src/bno055.c ****  *
13871:Core/Src/bno055.c ****  *  Duration :
13872:Core/Src/bno055.c ****  *
13873:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_durn()
13874:Core/Src/bno055.c ****  *
13875:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_durn()
13876:Core/Src/bno055.c ****  *
13877:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_durn()
13878:Core/Src/bno055.c ****  *
13879:Core/Src/bno055.c ****  */
13880:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_gyro_highrate(u8 *gyro_highrate_u8)
13881:Core/Src/bno055.c **** {
 28819              		.loc 1 13881 1 is_stmt 1 view -0
 28820              		.cfi_startproc
 28821              		@ args = 0, pretend = 0, frame = 8
 28822              		@ frame_needed = 0, uses_anonymous_args = 0
 28823              		.loc 1 13881 1 is_stmt 0 view .LVU8393
 28824 0000 30B5     		push	{r4, r5, lr}
 28825              		.cfi_def_cfa_offset 12
 28826              		.cfi_offset 4, -12
 28827              		.cfi_offset 5, -8
 28828              		.cfi_offset 14, -4
 28829 0002 83B0     		sub	sp, sp, #12
 28830              		.cfi_def_cfa_offset 24
13882:Core/Src/bno055.c ****     /* Variable used to return value of
13883:Core/Src/bno055.c ****      * communication routine*/
13884:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28831              		.loc 1 13884 5 is_stmt 1 view .LVU8394
 28832              	.LVL3718:
13885:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 28833              		.loc 1 13885 5 view .LVU8395
 28834              		.loc 1 13885 8 is_stmt 0 view .LVU8396
 28835 0004 0023     		movs	r3, #0
 28836 0006 8DF80730 		strb	r3, [sp, #7]
13886:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28837              		.loc 1 13886 5 is_stmt 1 view .LVU8397
ARM GAS  /tmp/ccOloYeZ.s 			page 815


 28838              	.LVL3719:
13887:Core/Src/bno055.c **** 
13888:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13889:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 28839              		.loc 1 13889 5 view .LVU8398
 28840              		.loc 1 13889 18 is_stmt 0 view .LVU8399
 28841 000a 144B     		ldr	r3, .L2072
 28842 000c 1B68     		ldr	r3, [r3]
 28843              		.loc 1 13889 8 view .LVU8400
 28844 000e F3B1     		cbz	r3, .L2068
 28845 0010 0446     		mov	r4, r0
13890:Core/Src/bno055.c ****     {
13891:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13892:Core/Src/bno055.c ****     }
13893:Core/Src/bno055.c ****     else
13894:Core/Src/bno055.c ****     {
13895:Core/Src/bno055.c ****         /*condition check for page, gyro highrate interrupt mask is
13896:Core/Src/bno055.c ****          * available in the page one*/
13897:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 28846              		.loc 1 13897 9 is_stmt 1 view .LVU8401
 28847              		.loc 1 13897 21 is_stmt 0 view .LVU8402
 28848 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 28849              		.loc 1 13897 12 view .LVU8403
 28850 0014 012B     		cmp	r3, #1
 28851 0016 14D1     		bne	.L2071
 28852              	.LVL3720:
 28853              	.L2066:
13898:Core/Src/bno055.c ****         {
13899:Core/Src/bno055.c ****             /* Write page as one */
13900:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13901:Core/Src/bno055.c ****         }
13902:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 28854              		.loc 1 13902 53 discriminator 1 view .LVU8404
 28855 0018 104B     		ldr	r3, .L2072
 28856 001a 1B68     		ldr	r3, [r3]
 28857 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 28858              		.loc 1 13902 41 discriminator 1 view .LVU8405
 28859 001e 012B     		cmp	r3, #1
 28860 0020 18D1     		bne	.L2069
 28861              	.L2067:
13903:Core/Src/bno055.c ****         {
13904:Core/Src/bno055.c ****             /* Read the value of gyro highrate interrupt mask*/
13905:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 28862              		.loc 1 13905 13 is_stmt 1 view .LVU8406
 28863              		.loc 1 13905 32 is_stmt 0 view .LVU8407
 28864 0022 0E4B     		ldr	r3, .L2072
 28865 0024 1868     		ldr	r0, [r3]
 28866 0026 0569     		ldr	r5, [r0, #16]
 28867              		.loc 1 13905 24 view .LVU8408
 28868 0028 0123     		movs	r3, #1
 28869 002a 0DF10702 		add	r2, sp, #7
 28870 002e 0F21     		movs	r1, #15
 28871 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28872 0032 A847     		blx	r5
 28873              	.LVL3721:
13906:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_INTR_MASK_REG,
13907:Core/Src/bno055.c ****                                                       &data_u8r,
ARM GAS  /tmp/ccOloYeZ.s 			page 816


13908:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13909:Core/Src/bno055.c ****             *gyro_highrate_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_INTR_MASK);
 28874              		.loc 1 13909 13 is_stmt 1 view .LVU8409
 28875              		.loc 1 13909 33 is_stmt 0 view .LVU8410
 28876 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 28877 0038 C3F3C003 		ubfx	r3, r3, #3, #1
 28878              		.loc 1 13909 31 view .LVU8411
 28879 003c 2370     		strb	r3, [r4]
 28880              	.LVL3722:
 28881              	.L2065:
13910:Core/Src/bno055.c ****         }
13911:Core/Src/bno055.c ****         else
13912:Core/Src/bno055.c ****         {
13913:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13914:Core/Src/bno055.c ****         }
13915:Core/Src/bno055.c ****     }
13916:Core/Src/bno055.c **** 
13917:Core/Src/bno055.c ****     return com_rslt;
13918:Core/Src/bno055.c **** }
 28882              		.loc 1 13918 1 view .LVU8412
 28883 003e 03B0     		add	sp, sp, #12
 28884              		.cfi_remember_state
 28885              		.cfi_def_cfa_offset 12
 28886              		@ sp needed
 28887 0040 30BD     		pop	{r4, r5, pc}
 28888              	.LVL3723:
 28889              	.L2071:
 28890              		.cfi_restore_state
13900:Core/Src/bno055.c ****         }
 28891              		.loc 1 13900 13 is_stmt 1 view .LVU8413
13900:Core/Src/bno055.c ****         }
 28892              		.loc 1 13900 23 is_stmt 0 view .LVU8414
 28893 0042 0120     		movs	r0, #1
 28894              	.LVL3724:
13900:Core/Src/bno055.c ****         }
 28895              		.loc 1 13900 23 view .LVU8415
 28896 0044 FFF7FEFF 		bl	bno055_write_page_id
 28897              	.LVL3725:
13902:Core/Src/bno055.c ****         {
 28898              		.loc 1 13902 9 is_stmt 1 view .LVU8416
13902:Core/Src/bno055.c ****         {
 28899              		.loc 1 13902 12 is_stmt 0 view .LVU8417
 28900 0048 0028     		cmp	r0, #0
 28901 004a EAD0     		beq	.L2067
 28902 004c E4E7     		b	.L2066
 28903              	.LVL3726:
 28904              	.L2068:
13891:Core/Src/bno055.c ****     }
 28905              		.loc 1 13891 16 view .LVU8418
 28906 004e 6FF07E00 		mvn	r0, #126
 28907              	.LVL3727:
13891:Core/Src/bno055.c ****     }
 28908              		.loc 1 13891 16 view .LVU8419
 28909 0052 F4E7     		b	.L2065
 28910              	.LVL3728:
 28911              	.L2069:
13913:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 817


 28912              		.loc 1 13913 22 view .LVU8420
 28913 0054 4FF0FF30 		mov	r0, #-1
 28914 0058 F1E7     		b	.L2065
 28915              	.L2073:
 28916 005a 00BF     		.align	2
 28917              	.L2072:
 28918 005c 00000000 		.word	p_bno055
 28919              		.cfi_endproc
 28920              	.LFE207:
 28922              		.section	.text.bno055_set_intr_mask_gyro_highrate,"ax",%progbits
 28923              		.align	1
 28924              		.global	bno055_set_intr_mask_gyro_highrate
 28925              		.syntax unified
 28926              		.thumb
 28927              		.thumb_func
 28929              	bno055_set_intr_mask_gyro_highrate:
 28930              	.LVL3729:
 28931              	.LFB208:
13919:Core/Src/bno055.c **** 
13920:Core/Src/bno055.c **** /*!
13921:Core/Src/bno055.c ****  *  @brief This API used to write the gyro highrate interrupt mask
13922:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 3
13923:Core/Src/bno055.c ****  *
13924:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt mask
13925:Core/Src/bno055.c ****  *        gyro_highrate_u8 |  result
13926:Core/Src/bno055.c ****  *     --------------------  |------------
13927:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
13928:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
13929:Core/Src/bno055.c ****  *
13930:Core/Src/bno055.c ****  *  @return results of bus communication function
13931:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13932:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13933:Core/Src/bno055.c ****  *
13934:Core/Src/bno055.c ****  *  @note While enabling the gyro highrate interrupt
13935:Core/Src/bno055.c ****  *  configure the below settings by using
13936:Core/Src/bno055.c ****  *  the following APIs
13937:Core/Src/bno055.c ****  *
13938:Core/Src/bno055.c ****  *  Axis :
13939:Core/Src/bno055.c ****  *
13940:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_axis_enable()
13941:Core/Src/bno055.c ****  *
13942:Core/Src/bno055.c ****  *  Filter :
13943:Core/Src/bno055.c ****  *
13944:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_filter()
13945:Core/Src/bno055.c ****  *
13946:Core/Src/bno055.c ****  *  Threshold :
13947:Core/Src/bno055.c ****  *
13948:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_x_thres()
13949:Core/Src/bno055.c ****  *
13950:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_y_thres()
13951:Core/Src/bno055.c ****  *
13952:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_z_thres()
13953:Core/Src/bno055.c ****  *
13954:Core/Src/bno055.c ****  *  Hysteresis :
13955:Core/Src/bno055.c ****  *
13956:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_hyst()
13957:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 818


13958:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_hyst()
13959:Core/Src/bno055.c ****  *
13960:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_hyst()
13961:Core/Src/bno055.c ****  *
13962:Core/Src/bno055.c ****  *  Duration :
13963:Core/Src/bno055.c ****  *
13964:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_durn()
13965:Core/Src/bno055.c ****  *
13966:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_durn()
13967:Core/Src/bno055.c ****  *
13968:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_durn()
13969:Core/Src/bno055.c ****  *
13970:Core/Src/bno055.c ****  */
13971:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_gyro_highrate(u8 gyro_highrate_u8)
13972:Core/Src/bno055.c **** {
 28932              		.loc 1 13972 1 is_stmt 1 view -0
 28933              		.cfi_startproc
 28934              		@ args = 0, pretend = 0, frame = 8
 28935              		@ frame_needed = 0, uses_anonymous_args = 0
 28936              		.loc 1 13972 1 is_stmt 0 view .LVU8422
 28937 0000 70B5     		push	{r4, r5, r6, lr}
 28938              		.cfi_def_cfa_offset 16
 28939              		.cfi_offset 4, -16
 28940              		.cfi_offset 5, -12
 28941              		.cfi_offset 6, -8
 28942              		.cfi_offset 14, -4
 28943 0002 82B0     		sub	sp, sp, #8
 28944              		.cfi_def_cfa_offset 24
13973:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28945              		.loc 1 13973 5 is_stmt 1 view .LVU8423
 28946              	.LVL3730:
13974:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 28947              		.loc 1 13974 5 view .LVU8424
 28948              		.loc 1 13974 8 is_stmt 0 view .LVU8425
 28949 0004 0023     		movs	r3, #0
 28950 0006 8DF80730 		strb	r3, [sp, #7]
13975:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28951              		.loc 1 13975 5 is_stmt 1 view .LVU8426
 28952              	.LVL3731:
13976:Core/Src/bno055.c **** 
13977:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13978:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 28953              		.loc 1 13978 5 view .LVU8427
 28954              		.loc 1 13978 18 is_stmt 0 view .LVU8428
 28955 000a 1E4B     		ldr	r3, .L2082
 28956 000c 1B68     		ldr	r3, [r3]
 28957              		.loc 1 13978 8 view .LVU8429
 28958 000e 002B     		cmp	r3, #0
 28959 0010 32D0     		beq	.L2078
 28960 0012 0546     		mov	r5, r0
13979:Core/Src/bno055.c ****     {
13980:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13981:Core/Src/bno055.c ****     }
13982:Core/Src/bno055.c ****     else
13983:Core/Src/bno055.c ****     {
13984:Core/Src/bno055.c ****         /*condition check for page, gyro highrate interrupt mask is
13985:Core/Src/bno055.c ****          * available in the page one*/
ARM GAS  /tmp/ccOloYeZ.s 			page 819


13986:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 28961              		.loc 1 13986 9 is_stmt 1 view .LVU8430
 28962              		.loc 1 13986 21 is_stmt 0 view .LVU8431
 28963 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 28964              		.loc 1 13986 12 view .LVU8432
 28965 0016 012B     		cmp	r3, #1
 28966 0018 28D1     		bne	.L2081
 28967              	.LVL3732:
 28968              	.L2076:
13987:Core/Src/bno055.c ****         {
13988:Core/Src/bno055.c ****             /* Write page as one */
13989:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13990:Core/Src/bno055.c ****         }
13991:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 28969              		.loc 1 13991 53 discriminator 1 view .LVU8433
 28970 001a 1A4B     		ldr	r3, .L2082
 28971 001c 1B68     		ldr	r3, [r3]
 28972 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 28973              		.loc 1 13991 41 discriminator 1 view .LVU8434
 28974 0020 012B     		cmp	r3, #1
 28975 0022 2CD1     		bne	.L2079
 28976              	.L2077:
13992:Core/Src/bno055.c ****         {
13993:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 28977              		.loc 1 13993 13 is_stmt 1 view .LVU8435
 28978              		.loc 1 13993 32 is_stmt 0 view .LVU8436
 28979 0024 174B     		ldr	r3, .L2082
 28980 0026 1C68     		ldr	r4, [r3]
 28981 0028 2669     		ldr	r6, [r4, #16]
 28982              		.loc 1 13993 24 view .LVU8437
 28983 002a 0123     		movs	r3, #1
 28984 002c 0DF10702 		add	r2, sp, #7
 28985 0030 0F21     		movs	r1, #15
 28986 0032 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 28987 0034 B047     		blx	r6
 28988              	.LVL3733:
13994:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_INTR_MASK_REG,
13995:Core/Src/bno055.c ****                                                       &data_u8r,
13996:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13997:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 28989              		.loc 1 13997 13 is_stmt 1 view .LVU8438
 28990              		.loc 1 13997 16 is_stmt 0 view .LVU8439
 28991 0036 0446     		mov	r4, r0
 28992 0038 A8B9     		cbnz	r0, .L2075
13998:Core/Src/bno055.c ****             {
13999:Core/Src/bno055.c ****                 /* Write the value of gyro
14000:Core/Src/bno055.c ****                  * highrate interrupt mask*/
14001:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_INTR_MASK, gyro_highr
 28993              		.loc 1 14001 17 is_stmt 1 view .LVU8440
 28994              		.loc 1 14001 28 is_stmt 0 view .LVU8441
 28995 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 28996 003e E800     		lsls	r0, r5, #3
 28997              	.LVL3734:
 28998              		.loc 1 14001 28 view .LVU8442
 28999 0040 00F00800 		and	r0, r0, #8
 29000 0044 23F00803 		bic	r3, r3, #8
 29001 0048 0343     		orrs	r3, r3, r0
ARM GAS  /tmp/ccOloYeZ.s 			page 820


 29002              		.loc 1 14001 26 view .LVU8443
 29003 004a 8DF80730 		strb	r3, [sp, #7]
14002:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29004              		.loc 1 14002 17 is_stmt 1 view .LVU8444
 29005              		.loc 1 14002 37 is_stmt 0 view .LVU8445
 29006 004e 0D4B     		ldr	r3, .L2082
 29007 0050 1868     		ldr	r0, [r3]
 29008 0052 C568     		ldr	r5, [r0, #12]
 29009              		.loc 1 14002 29 view .LVU8446
 29010 0054 0123     		movs	r3, #1
 29011 0056 0DF10702 		add	r2, sp, #7
 29012 005a 0F21     		movs	r1, #15
 29013 005c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29014 005e A847     		blx	r5
 29015              	.LVL3735:
 29016              		.loc 1 14002 26 view .LVU8447
 29017 0060 54FA80F0 		uxtab	r0, r4, r0
 29018 0064 44B2     		sxtb	r4, r0
 29019              	.LVL3736:
 29020              	.L2075:
14003:Core/Src/bno055.c ****                                                             BNO055_GYRO_HIGHRATE_INTR_MASK_REG,
14004:Core/Src/bno055.c ****                                                             &data_u8r,
14005:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14006:Core/Src/bno055.c ****             }
14007:Core/Src/bno055.c ****         }
14008:Core/Src/bno055.c ****         else
14009:Core/Src/bno055.c ****         {
14010:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14011:Core/Src/bno055.c ****         }
14012:Core/Src/bno055.c ****     }
14013:Core/Src/bno055.c **** 
14014:Core/Src/bno055.c ****     return com_rslt;
14015:Core/Src/bno055.c **** }
 29021              		.loc 1 14015 1 view .LVU8448
 29022 0066 2046     		mov	r0, r4
 29023 0068 02B0     		add	sp, sp, #8
 29024              		.cfi_remember_state
 29025              		.cfi_def_cfa_offset 16
 29026              		@ sp needed
 29027 006a 70BD     		pop	{r4, r5, r6, pc}
 29028              	.LVL3737:
 29029              	.L2081:
 29030              		.cfi_restore_state
13989:Core/Src/bno055.c ****         }
 29031              		.loc 1 13989 13 is_stmt 1 view .LVU8449
13989:Core/Src/bno055.c ****         }
 29032              		.loc 1 13989 23 is_stmt 0 view .LVU8450
 29033 006c 0120     		movs	r0, #1
 29034              	.LVL3738:
13989:Core/Src/bno055.c ****         }
 29035              		.loc 1 13989 23 view .LVU8451
 29036 006e FFF7FEFF 		bl	bno055_write_page_id
 29037              	.LVL3739:
13991:Core/Src/bno055.c ****         {
 29038              		.loc 1 13991 9 is_stmt 1 view .LVU8452
13991:Core/Src/bno055.c ****         {
 29039              		.loc 1 13991 12 is_stmt 0 view .LVU8453
ARM GAS  /tmp/ccOloYeZ.s 			page 821


 29040 0072 0028     		cmp	r0, #0
 29041 0074 D6D0     		beq	.L2077
 29042 0076 D0E7     		b	.L2076
 29043              	.LVL3740:
 29044              	.L2078:
13980:Core/Src/bno055.c ****     }
 29045              		.loc 1 13980 16 view .LVU8454
 29046 0078 6FF07E04 		mvn	r4, #126
 29047 007c F3E7     		b	.L2075
 29048              	.LVL3741:
 29049              	.L2079:
14010:Core/Src/bno055.c ****         }
 29050              		.loc 1 14010 22 view .LVU8455
 29051 007e 4FF0FF34 		mov	r4, #-1
 29052 0082 F0E7     		b	.L2075
 29053              	.L2083:
 29054              		.align	2
 29055              	.L2082:
 29056 0084 00000000 		.word	p_bno055
 29057              		.cfi_endproc
 29058              	.LFE208:
 29060              		.section	.text.bno055_get_intr_mask_accel_high_g,"ax",%progbits
 29061              		.align	1
 29062              		.global	bno055_get_intr_mask_accel_high_g
 29063              		.syntax unified
 29064              		.thumb
 29065              		.thumb_func
 29067              	bno055_get_intr_mask_accel_high_g:
 29068              	.LVL3742:
 29069              	.LFB209:
14016:Core/Src/bno055.c **** 
14017:Core/Src/bno055.c **** /*!
14018:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg interrupt mask
14019:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 5
14020:Core/Src/bno055.c ****  *
14021:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt mask
14022:Core/Src/bno055.c ****  *         accel_high_g_u8 |   result
14023:Core/Src/bno055.c ****  *     --------------------  |------------
14024:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14025:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14026:Core/Src/bno055.c ****  *
14027:Core/Src/bno055.c ****  *  @return results of bus communication function
14028:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14029:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14030:Core/Src/bno055.c ****  *
14031:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
14032:Core/Src/bno055.c ****  *  configure the below settings by using
14033:Core/Src/bno055.c ****  *  the following APIs
14034:Core/Src/bno055.c ****  *
14035:Core/Src/bno055.c ****  *  Axis :
14036:Core/Src/bno055.c ****  *
14037:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14038:Core/Src/bno055.c ****  *
14039:Core/Src/bno055.c ****  *  Threshold :
14040:Core/Src/bno055.c ****  *
14041:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14042:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 822


14043:Core/Src/bno055.c ****  *  Duration :
14044:Core/Src/bno055.c ****  *
14045:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
14046:Core/Src/bno055.c ****  *
14047:Core/Src/bno055.c ****  */
14048:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_accel_high_g(u8 *accel_high_g_u8)
14049:Core/Src/bno055.c **** {
 29070              		.loc 1 14049 1 is_stmt 1 view -0
 29071              		.cfi_startproc
 29072              		@ args = 0, pretend = 0, frame = 8
 29073              		@ frame_needed = 0, uses_anonymous_args = 0
 29074              		.loc 1 14049 1 is_stmt 0 view .LVU8457
 29075 0000 30B5     		push	{r4, r5, lr}
 29076              		.cfi_def_cfa_offset 12
 29077              		.cfi_offset 4, -12
 29078              		.cfi_offset 5, -8
 29079              		.cfi_offset 14, -4
 29080 0002 83B0     		sub	sp, sp, #12
 29081              		.cfi_def_cfa_offset 24
14050:Core/Src/bno055.c ****     /* Variable used to return value of
14051:Core/Src/bno055.c ****      * communication routine*/
14052:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29082              		.loc 1 14052 5 is_stmt 1 view .LVU8458
 29083              	.LVL3743:
14053:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29084              		.loc 1 14053 5 view .LVU8459
 29085              		.loc 1 14053 8 is_stmt 0 view .LVU8460
 29086 0004 0023     		movs	r3, #0
 29087 0006 8DF80730 		strb	r3, [sp, #7]
14054:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29088              		.loc 1 14054 5 is_stmt 1 view .LVU8461
 29089              	.LVL3744:
14055:Core/Src/bno055.c **** 
14056:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14057:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29090              		.loc 1 14057 5 view .LVU8462
 29091              		.loc 1 14057 18 is_stmt 0 view .LVU8463
 29092 000a 144B     		ldr	r3, .L2092
 29093 000c 1B68     		ldr	r3, [r3]
 29094              		.loc 1 14057 8 view .LVU8464
 29095 000e F3B1     		cbz	r3, .L2088
 29096 0010 0446     		mov	r4, r0
14058:Core/Src/bno055.c ****     {
14059:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14060:Core/Src/bno055.c ****     }
14061:Core/Src/bno055.c ****     else
14062:Core/Src/bno055.c ****     {
14063:Core/Src/bno055.c ****         /*condition check for page, accel highg interrupt mask is
14064:Core/Src/bno055.c ****          * available in the page one*/
14065:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29097              		.loc 1 14065 9 is_stmt 1 view .LVU8465
 29098              		.loc 1 14065 21 is_stmt 0 view .LVU8466
 29099 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29100              		.loc 1 14065 12 view .LVU8467
 29101 0014 012B     		cmp	r3, #1
 29102 0016 14D1     		bne	.L2091
 29103              	.LVL3745:
ARM GAS  /tmp/ccOloYeZ.s 			page 823


 29104              	.L2086:
14066:Core/Src/bno055.c ****         {
14067:Core/Src/bno055.c ****             /* Write page as one */
14068:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14069:Core/Src/bno055.c ****         }
14070:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29105              		.loc 1 14070 53 discriminator 1 view .LVU8468
 29106 0018 104B     		ldr	r3, .L2092
 29107 001a 1B68     		ldr	r3, [r3]
 29108 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29109              		.loc 1 14070 41 discriminator 1 view .LVU8469
 29110 001e 012B     		cmp	r3, #1
 29111 0020 18D1     		bne	.L2089
 29112              	.L2087:
14071:Core/Src/bno055.c ****         {
14072:Core/Src/bno055.c ****             /* Read the value of accel highg interrupt mask*/
14073:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29113              		.loc 1 14073 13 is_stmt 1 view .LVU8470
 29114              		.loc 1 14073 32 is_stmt 0 view .LVU8471
 29115 0022 0E4B     		ldr	r3, .L2092
 29116 0024 1868     		ldr	r0, [r3]
 29117 0026 0569     		ldr	r5, [r0, #16]
 29118              		.loc 1 14073 24 view .LVU8472
 29119 0028 0123     		movs	r3, #1
 29120 002a 0DF10702 		add	r2, sp, #7
 29121 002e 0F21     		movs	r1, #15
 29122 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29123 0032 A847     		blx	r5
 29124              	.LVL3746:
14074:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_INTR_MASK_REG,
14075:Core/Src/bno055.c ****                                                       &data_u8r,
14076:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14077:Core/Src/bno055.c ****             *accel_high_g_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_INTR_MASK);
 29125              		.loc 1 14077 13 is_stmt 1 view .LVU8473
 29126              		.loc 1 14077 32 is_stmt 0 view .LVU8474
 29127 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29128 0038 C3F34013 		ubfx	r3, r3, #5, #1
 29129              		.loc 1 14077 30 view .LVU8475
 29130 003c 2370     		strb	r3, [r4]
 29131              	.LVL3747:
 29132              	.L2085:
14078:Core/Src/bno055.c ****         }
14079:Core/Src/bno055.c ****         else
14080:Core/Src/bno055.c ****         {
14081:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14082:Core/Src/bno055.c ****         }
14083:Core/Src/bno055.c ****     }
14084:Core/Src/bno055.c **** 
14085:Core/Src/bno055.c ****     return com_rslt;
14086:Core/Src/bno055.c **** }
 29133              		.loc 1 14086 1 view .LVU8476
 29134 003e 03B0     		add	sp, sp, #12
 29135              		.cfi_remember_state
 29136              		.cfi_def_cfa_offset 12
 29137              		@ sp needed
 29138 0040 30BD     		pop	{r4, r5, pc}
 29139              	.LVL3748:
ARM GAS  /tmp/ccOloYeZ.s 			page 824


 29140              	.L2091:
 29141              		.cfi_restore_state
14068:Core/Src/bno055.c ****         }
 29142              		.loc 1 14068 13 is_stmt 1 view .LVU8477
14068:Core/Src/bno055.c ****         }
 29143              		.loc 1 14068 23 is_stmt 0 view .LVU8478
 29144 0042 0120     		movs	r0, #1
 29145              	.LVL3749:
14068:Core/Src/bno055.c ****         }
 29146              		.loc 1 14068 23 view .LVU8479
 29147 0044 FFF7FEFF 		bl	bno055_write_page_id
 29148              	.LVL3750:
14070:Core/Src/bno055.c ****         {
 29149              		.loc 1 14070 9 is_stmt 1 view .LVU8480
14070:Core/Src/bno055.c ****         {
 29150              		.loc 1 14070 12 is_stmt 0 view .LVU8481
 29151 0048 0028     		cmp	r0, #0
 29152 004a EAD0     		beq	.L2087
 29153 004c E4E7     		b	.L2086
 29154              	.LVL3751:
 29155              	.L2088:
14059:Core/Src/bno055.c ****     }
 29156              		.loc 1 14059 16 view .LVU8482
 29157 004e 6FF07E00 		mvn	r0, #126
 29158              	.LVL3752:
14059:Core/Src/bno055.c ****     }
 29159              		.loc 1 14059 16 view .LVU8483
 29160 0052 F4E7     		b	.L2085
 29161              	.LVL3753:
 29162              	.L2089:
14081:Core/Src/bno055.c ****         }
 29163              		.loc 1 14081 22 view .LVU8484
 29164 0054 4FF0FF30 		mov	r0, #-1
 29165 0058 F1E7     		b	.L2085
 29166              	.L2093:
 29167 005a 00BF     		.align	2
 29168              	.L2092:
 29169 005c 00000000 		.word	p_bno055
 29170              		.cfi_endproc
 29171              	.LFE209:
 29173              		.section	.text.bno055_set_intr_mask_accel_high_g,"ax",%progbits
 29174              		.align	1
 29175              		.global	bno055_set_intr_mask_accel_high_g
 29176              		.syntax unified
 29177              		.thumb
 29178              		.thumb_func
 29180              	bno055_set_intr_mask_accel_high_g:
 29181              	.LVL3754:
 29182              	.LFB210:
14087:Core/Src/bno055.c **** 
14088:Core/Src/bno055.c **** /*!
14089:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg interrupt mask
14090:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 5
14091:Core/Src/bno055.c ****  *
14092:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt mask
14093:Core/Src/bno055.c ****  *         accel_high_g_u8 |   result
14094:Core/Src/bno055.c ****  *     --------------------  |------------
ARM GAS  /tmp/ccOloYeZ.s 			page 825


14095:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14096:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14097:Core/Src/bno055.c ****  *
14098:Core/Src/bno055.c ****  *  @return results of bus communication function
14099:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14100:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14101:Core/Src/bno055.c ****  *
14102:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
14103:Core/Src/bno055.c ****  *  configure the below settings by using
14104:Core/Src/bno055.c ****  *  the following APIs
14105:Core/Src/bno055.c ****  *
14106:Core/Src/bno055.c ****  *  Axis :
14107:Core/Src/bno055.c ****  *
14108:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14109:Core/Src/bno055.c ****  *
14110:Core/Src/bno055.c ****  *  Threshold :
14111:Core/Src/bno055.c ****  *
14112:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14113:Core/Src/bno055.c ****  *
14114:Core/Src/bno055.c ****  *  Duration :
14115:Core/Src/bno055.c ****  *
14116:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
14117:Core/Src/bno055.c ****  *
14118:Core/Src/bno055.c ****  */
14119:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_accel_high_g(u8 accel_high_g_u8)
14120:Core/Src/bno055.c **** {
 29183              		.loc 1 14120 1 is_stmt 1 view -0
 29184              		.cfi_startproc
 29185              		@ args = 0, pretend = 0, frame = 8
 29186              		@ frame_needed = 0, uses_anonymous_args = 0
 29187              		.loc 1 14120 1 is_stmt 0 view .LVU8486
 29188 0000 70B5     		push	{r4, r5, r6, lr}
 29189              		.cfi_def_cfa_offset 16
 29190              		.cfi_offset 4, -16
 29191              		.cfi_offset 5, -12
 29192              		.cfi_offset 6, -8
 29193              		.cfi_offset 14, -4
 29194 0002 82B0     		sub	sp, sp, #8
 29195              		.cfi_def_cfa_offset 24
14121:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29196              		.loc 1 14121 5 is_stmt 1 view .LVU8487
 29197              	.LVL3755:
14122:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29198              		.loc 1 14122 5 view .LVU8488
 29199              		.loc 1 14122 8 is_stmt 0 view .LVU8489
 29200 0004 0023     		movs	r3, #0
 29201 0006 8DF80730 		strb	r3, [sp, #7]
14123:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29202              		.loc 1 14123 5 is_stmt 1 view .LVU8490
 29203              	.LVL3756:
14124:Core/Src/bno055.c **** 
14125:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14126:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29204              		.loc 1 14126 5 view .LVU8491
 29205              		.loc 1 14126 18 is_stmt 0 view .LVU8492
 29206 000a 1E4B     		ldr	r3, .L2102
 29207 000c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccOloYeZ.s 			page 826


 29208              		.loc 1 14126 8 view .LVU8493
 29209 000e 002B     		cmp	r3, #0
 29210 0010 32D0     		beq	.L2098
 29211 0012 0546     		mov	r5, r0
14127:Core/Src/bno055.c ****     {
14128:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14129:Core/Src/bno055.c ****     }
14130:Core/Src/bno055.c ****     else
14131:Core/Src/bno055.c ****     {
14132:Core/Src/bno055.c ****         /*condition check for page, accel highg interrupt mask is
14133:Core/Src/bno055.c ****          * available in the page one*/
14134:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29212              		.loc 1 14134 9 is_stmt 1 view .LVU8494
 29213              		.loc 1 14134 21 is_stmt 0 view .LVU8495
 29214 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29215              		.loc 1 14134 12 view .LVU8496
 29216 0016 012B     		cmp	r3, #1
 29217 0018 28D1     		bne	.L2101
 29218              	.LVL3757:
 29219              	.L2096:
14135:Core/Src/bno055.c ****         {
14136:Core/Src/bno055.c ****             /* Write page as one */
14137:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14138:Core/Src/bno055.c ****         }
14139:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29220              		.loc 1 14139 53 discriminator 1 view .LVU8497
 29221 001a 1A4B     		ldr	r3, .L2102
 29222 001c 1B68     		ldr	r3, [r3]
 29223 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29224              		.loc 1 14139 41 discriminator 1 view .LVU8498
 29225 0020 012B     		cmp	r3, #1
 29226 0022 2CD1     		bne	.L2099
 29227              	.L2097:
14140:Core/Src/bno055.c ****         {
14141:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29228              		.loc 1 14141 13 is_stmt 1 view .LVU8499
 29229              		.loc 1 14141 32 is_stmt 0 view .LVU8500
 29230 0024 174B     		ldr	r3, .L2102
 29231 0026 1C68     		ldr	r4, [r3]
 29232 0028 2669     		ldr	r6, [r4, #16]
 29233              		.loc 1 14141 24 view .LVU8501
 29234 002a 0123     		movs	r3, #1
 29235 002c 0DF10702 		add	r2, sp, #7
 29236 0030 0F21     		movs	r1, #15
 29237 0032 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 29238 0034 B047     		blx	r6
 29239              	.LVL3758:
14142:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_INTR_MASK_REG,
14143:Core/Src/bno055.c ****                                                       &data_u8r,
14144:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14145:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 29240              		.loc 1 14145 13 is_stmt 1 view .LVU8502
 29241              		.loc 1 14145 16 is_stmt 0 view .LVU8503
 29242 0036 0446     		mov	r4, r0
 29243 0038 A8B9     		cbnz	r0, .L2095
14146:Core/Src/bno055.c ****             {
14147:Core/Src/bno055.c ****                 /* Write the value of accel
ARM GAS  /tmp/ccOloYeZ.s 			page 827


14148:Core/Src/bno055.c ****                  * highg interrupt mask*/
14149:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_INTR_MASK, accel_high_
 29244              		.loc 1 14149 17 is_stmt 1 view .LVU8504
 29245              		.loc 1 14149 28 is_stmt 0 view .LVU8505
 29246 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29247 003e 6801     		lsls	r0, r5, #5
 29248              	.LVL3759:
 29249              		.loc 1 14149 28 view .LVU8506
 29250 0040 00F02000 		and	r0, r0, #32
 29251 0044 23F02003 		bic	r3, r3, #32
 29252 0048 0343     		orrs	r3, r3, r0
 29253              		.loc 1 14149 26 view .LVU8507
 29254 004a 8DF80730 		strb	r3, [sp, #7]
14150:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29255              		.loc 1 14150 17 is_stmt 1 view .LVU8508
 29256              		.loc 1 14150 37 is_stmt 0 view .LVU8509
 29257 004e 0D4B     		ldr	r3, .L2102
 29258 0050 1868     		ldr	r0, [r3]
 29259 0052 C568     		ldr	r5, [r0, #12]
 29260              		.loc 1 14150 29 view .LVU8510
 29261 0054 0123     		movs	r3, #1
 29262 0056 0DF10702 		add	r2, sp, #7
 29263 005a 0F21     		movs	r1, #15
 29264 005c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29265 005e A847     		blx	r5
 29266              	.LVL3760:
 29267              		.loc 1 14150 26 view .LVU8511
 29268 0060 54FA80F0 		uxtab	r0, r4, r0
 29269 0064 44B2     		sxtb	r4, r0
 29270              	.LVL3761:
 29271              	.L2095:
14151:Core/Src/bno055.c ****                                                             BNO055_ACCEL_HIGH_G_INTR_MASK_REG,
14152:Core/Src/bno055.c ****                                                             &data_u8r,
14153:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14154:Core/Src/bno055.c ****             }
14155:Core/Src/bno055.c ****         }
14156:Core/Src/bno055.c ****         else
14157:Core/Src/bno055.c ****         {
14158:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14159:Core/Src/bno055.c ****         }
14160:Core/Src/bno055.c ****     }
14161:Core/Src/bno055.c **** 
14162:Core/Src/bno055.c ****     return com_rslt;
14163:Core/Src/bno055.c **** }
 29272              		.loc 1 14163 1 view .LVU8512
 29273 0066 2046     		mov	r0, r4
 29274 0068 02B0     		add	sp, sp, #8
 29275              		.cfi_remember_state
 29276              		.cfi_def_cfa_offset 16
 29277              		@ sp needed
 29278 006a 70BD     		pop	{r4, r5, r6, pc}
 29279              	.LVL3762:
 29280              	.L2101:
 29281              		.cfi_restore_state
14137:Core/Src/bno055.c ****         }
 29282              		.loc 1 14137 13 is_stmt 1 view .LVU8513
14137:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 828


 29283              		.loc 1 14137 23 is_stmt 0 view .LVU8514
 29284 006c 0120     		movs	r0, #1
 29285              	.LVL3763:
14137:Core/Src/bno055.c ****         }
 29286              		.loc 1 14137 23 view .LVU8515
 29287 006e FFF7FEFF 		bl	bno055_write_page_id
 29288              	.LVL3764:
14139:Core/Src/bno055.c ****         {
 29289              		.loc 1 14139 9 is_stmt 1 view .LVU8516
14139:Core/Src/bno055.c ****         {
 29290              		.loc 1 14139 12 is_stmt 0 view .LVU8517
 29291 0072 0028     		cmp	r0, #0
 29292 0074 D6D0     		beq	.L2097
 29293 0076 D0E7     		b	.L2096
 29294              	.LVL3765:
 29295              	.L2098:
14128:Core/Src/bno055.c ****     }
 29296              		.loc 1 14128 16 view .LVU8518
 29297 0078 6FF07E04 		mvn	r4, #126
 29298 007c F3E7     		b	.L2095
 29299              	.LVL3766:
 29300              	.L2099:
14158:Core/Src/bno055.c ****         }
 29301              		.loc 1 14158 22 view .LVU8519
 29302 007e 4FF0FF34 		mov	r4, #-1
 29303 0082 F0E7     		b	.L2095
 29304              	.L2103:
 29305              		.align	2
 29306              	.L2102:
 29307 0084 00000000 		.word	p_bno055
 29308              		.cfi_endproc
 29309              	.LFE210:
 29311              		.section	.text.bno055_get_intr_mask_accel_any_motion,"ax",%progbits
 29312              		.align	1
 29313              		.global	bno055_get_intr_mask_accel_any_motion
 29314              		.syntax unified
 29315              		.thumb
 29316              		.thumb_func
 29318              	bno055_get_intr_mask_accel_any_motion:
 29319              	.LVL3767:
 29320              	.LFB211:
14164:Core/Src/bno055.c **** 
14165:Core/Src/bno055.c **** /*!
14166:Core/Src/bno055.c ****  *  @brief This API used to read the accel anymotion interrupt mask
14167:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 6
14168:Core/Src/bno055.c ****  *
14169:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt mask
14170:Core/Src/bno055.c ****  *     accel_any_motion_u8 | result
14171:Core/Src/bno055.c ****  *     --------------------  |------------
14172:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14173:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14174:Core/Src/bno055.c ****  *
14175:Core/Src/bno055.c ****  *  @return results of bus communication function
14176:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14177:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14178:Core/Src/bno055.c ****  *
14179:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
ARM GAS  /tmp/ccOloYeZ.s 			page 829


14180:Core/Src/bno055.c ****  *  configure the below settings by using
14181:Core/Src/bno055.c ****  *  the following APIs
14182:Core/Src/bno055.c ****  *
14183:Core/Src/bno055.c ****  *  Axis :
14184:Core/Src/bno055.c ****  *
14185:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14186:Core/Src/bno055.c ****  *
14187:Core/Src/bno055.c ****  *  Threshold :
14188:Core/Src/bno055.c ****  *
14189:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14190:Core/Src/bno055.c ****  *
14191:Core/Src/bno055.c ****  *  Duration :
14192:Core/Src/bno055.c ****  *
14193:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
14194:Core/Src/bno055.c ****  *
14195:Core/Src/bno055.c ****  */
14196:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_accel_any_motion(u8 *accel_any_motion_u8)
14197:Core/Src/bno055.c **** {
 29321              		.loc 1 14197 1 is_stmt 1 view -0
 29322              		.cfi_startproc
 29323              		@ args = 0, pretend = 0, frame = 8
 29324              		@ frame_needed = 0, uses_anonymous_args = 0
 29325              		.loc 1 14197 1 is_stmt 0 view .LVU8521
 29326 0000 30B5     		push	{r4, r5, lr}
 29327              		.cfi_def_cfa_offset 12
 29328              		.cfi_offset 4, -12
 29329              		.cfi_offset 5, -8
 29330              		.cfi_offset 14, -4
 29331 0002 83B0     		sub	sp, sp, #12
 29332              		.cfi_def_cfa_offset 24
14198:Core/Src/bno055.c ****     /* Variable used to return value of
14199:Core/Src/bno055.c ****      * communication routine*/
14200:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29333              		.loc 1 14200 5 is_stmt 1 view .LVU8522
 29334              	.LVL3768:
14201:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29335              		.loc 1 14201 5 view .LVU8523
 29336              		.loc 1 14201 8 is_stmt 0 view .LVU8524
 29337 0004 0023     		movs	r3, #0
 29338 0006 8DF80730 		strb	r3, [sp, #7]
14202:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29339              		.loc 1 14202 5 is_stmt 1 view .LVU8525
 29340              	.LVL3769:
14203:Core/Src/bno055.c **** 
14204:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14205:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29341              		.loc 1 14205 5 view .LVU8526
 29342              		.loc 1 14205 18 is_stmt 0 view .LVU8527
 29343 000a 144B     		ldr	r3, .L2112
 29344 000c 1B68     		ldr	r3, [r3]
 29345              		.loc 1 14205 8 view .LVU8528
 29346 000e F3B1     		cbz	r3, .L2108
 29347 0010 0446     		mov	r4, r0
14206:Core/Src/bno055.c ****     {
14207:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14208:Core/Src/bno055.c ****     }
14209:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccOloYeZ.s 			page 830


14210:Core/Src/bno055.c ****     {
14211:Core/Src/bno055.c ****         /*condition check for page, accel anymotion interrupt mask is
14212:Core/Src/bno055.c ****          * available in the page one*/
14213:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29348              		.loc 1 14213 9 is_stmt 1 view .LVU8529
 29349              		.loc 1 14213 21 is_stmt 0 view .LVU8530
 29350 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29351              		.loc 1 14213 12 view .LVU8531
 29352 0014 012B     		cmp	r3, #1
 29353 0016 14D1     		bne	.L2111
 29354              	.LVL3770:
 29355              	.L2106:
14214:Core/Src/bno055.c ****         {
14215:Core/Src/bno055.c ****             /* Write page as one */
14216:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14217:Core/Src/bno055.c ****         }
14218:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29356              		.loc 1 14218 53 discriminator 1 view .LVU8532
 29357 0018 104B     		ldr	r3, .L2112
 29358 001a 1B68     		ldr	r3, [r3]
 29359 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29360              		.loc 1 14218 41 discriminator 1 view .LVU8533
 29361 001e 012B     		cmp	r3, #1
 29362 0020 18D1     		bne	.L2109
 29363              	.L2107:
14219:Core/Src/bno055.c ****         {
14220:Core/Src/bno055.c ****             /* The value of accel anymotion interrupt mask*/
14221:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29364              		.loc 1 14221 13 is_stmt 1 view .LVU8534
 29365              		.loc 1 14221 32 is_stmt 0 view .LVU8535
 29366 0022 0E4B     		ldr	r3, .L2112
 29367 0024 1868     		ldr	r0, [r3]
 29368 0026 0569     		ldr	r5, [r0, #16]
 29369              		.loc 1 14221 24 view .LVU8536
 29370 0028 0123     		movs	r3, #1
 29371 002a 0DF10702 		add	r2, sp, #7
 29372 002e 0F21     		movs	r1, #15
 29373 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29374 0032 A847     		blx	r5
 29375              	.LVL3771:
14222:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_INTR_MASK_REG,
14223:Core/Src/bno055.c ****                                                       &data_u8r,
14224:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14225:Core/Src/bno055.c ****             *accel_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_INTR_MASK)
 29376              		.loc 1 14225 13 is_stmt 1 view .LVU8537
 29377              		.loc 1 14225 36 is_stmt 0 view .LVU8538
 29378 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29379 0038 C3F38013 		ubfx	r3, r3, #6, #1
 29380              		.loc 1 14225 34 view .LVU8539
 29381 003c 2370     		strb	r3, [r4]
 29382              	.LVL3772:
 29383              	.L2105:
14226:Core/Src/bno055.c ****         }
14227:Core/Src/bno055.c ****         else
14228:Core/Src/bno055.c ****         {
14229:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14230:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 831


14231:Core/Src/bno055.c ****     }
14232:Core/Src/bno055.c **** 
14233:Core/Src/bno055.c ****     return com_rslt;
14234:Core/Src/bno055.c **** }
 29384              		.loc 1 14234 1 view .LVU8540
 29385 003e 03B0     		add	sp, sp, #12
 29386              		.cfi_remember_state
 29387              		.cfi_def_cfa_offset 12
 29388              		@ sp needed
 29389 0040 30BD     		pop	{r4, r5, pc}
 29390              	.LVL3773:
 29391              	.L2111:
 29392              		.cfi_restore_state
14216:Core/Src/bno055.c ****         }
 29393              		.loc 1 14216 13 is_stmt 1 view .LVU8541
14216:Core/Src/bno055.c ****         }
 29394              		.loc 1 14216 23 is_stmt 0 view .LVU8542
 29395 0042 0120     		movs	r0, #1
 29396              	.LVL3774:
14216:Core/Src/bno055.c ****         }
 29397              		.loc 1 14216 23 view .LVU8543
 29398 0044 FFF7FEFF 		bl	bno055_write_page_id
 29399              	.LVL3775:
14218:Core/Src/bno055.c ****         {
 29400              		.loc 1 14218 9 is_stmt 1 view .LVU8544
14218:Core/Src/bno055.c ****         {
 29401              		.loc 1 14218 12 is_stmt 0 view .LVU8545
 29402 0048 0028     		cmp	r0, #0
 29403 004a EAD0     		beq	.L2107
 29404 004c E4E7     		b	.L2106
 29405              	.LVL3776:
 29406              	.L2108:
14207:Core/Src/bno055.c ****     }
 29407              		.loc 1 14207 16 view .LVU8546
 29408 004e 6FF07E00 		mvn	r0, #126
 29409              	.LVL3777:
14207:Core/Src/bno055.c ****     }
 29410              		.loc 1 14207 16 view .LVU8547
 29411 0052 F4E7     		b	.L2105
 29412              	.LVL3778:
 29413              	.L2109:
14229:Core/Src/bno055.c ****         }
 29414              		.loc 1 14229 22 view .LVU8548
 29415 0054 4FF0FF30 		mov	r0, #-1
 29416 0058 F1E7     		b	.L2105
 29417              	.L2113:
 29418 005a 00BF     		.align	2
 29419              	.L2112:
 29420 005c 00000000 		.word	p_bno055
 29421              		.cfi_endproc
 29422              	.LFE211:
 29424              		.section	.text.bno055_set_intr_mask_accel_any_motion,"ax",%progbits
 29425              		.align	1
 29426              		.global	bno055_set_intr_mask_accel_any_motion
 29427              		.syntax unified
 29428              		.thumb
 29429              		.thumb_func
ARM GAS  /tmp/ccOloYeZ.s 			page 832


 29431              	bno055_set_intr_mask_accel_any_motion:
 29432              	.LVL3779:
 29433              	.LFB212:
14235:Core/Src/bno055.c **** 
14236:Core/Src/bno055.c **** /*!
14237:Core/Src/bno055.c ****  *  @brief This API used to write the accel anymotion interrupt mask
14238:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 6
14239:Core/Src/bno055.c ****  *
14240:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt mask
14241:Core/Src/bno055.c ****  *     accel_any_motion_u8 | result
14242:Core/Src/bno055.c ****  *     --------------------  |------------
14243:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14244:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14245:Core/Src/bno055.c ****  *
14246:Core/Src/bno055.c ****  *  @return results of bus communication function
14247:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14248:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14249:Core/Src/bno055.c ****  *
14250:Core/Src/bno055.c ****  *  @note While enabling the accel anymotion interrupt
14251:Core/Src/bno055.c ****  *  configure the following settings
14252:Core/Src/bno055.c ****  *
14253:Core/Src/bno055.c ****  *  Axis:
14254:Core/Src/bno055.c ****  *
14255:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
14256:Core/Src/bno055.c ****  *
14257:Core/Src/bno055.c ****  *  Duration:
14258:Core/Src/bno055.c ****  *
14259:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_durn()
14260:Core/Src/bno055.c ****  *
14261:Core/Src/bno055.c ****  * Threshold:
14262:Core/Src/bno055.c ****  *
14263:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_thres()
14264:Core/Src/bno055.c ****  *
14265:Core/Src/bno055.c ****  */
14266:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_accel_any_motion(u8 accel_any_motion_u8)
14267:Core/Src/bno055.c **** {
 29434              		.loc 1 14267 1 is_stmt 1 view -0
 29435              		.cfi_startproc
 29436              		@ args = 0, pretend = 0, frame = 8
 29437              		@ frame_needed = 0, uses_anonymous_args = 0
 29438              		.loc 1 14267 1 is_stmt 0 view .LVU8550
 29439 0000 70B5     		push	{r4, r5, r6, lr}
 29440              		.cfi_def_cfa_offset 16
 29441              		.cfi_offset 4, -16
 29442              		.cfi_offset 5, -12
 29443              		.cfi_offset 6, -8
 29444              		.cfi_offset 14, -4
 29445 0002 82B0     		sub	sp, sp, #8
 29446              		.cfi_def_cfa_offset 24
14268:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29447              		.loc 1 14268 5 is_stmt 1 view .LVU8551
 29448              	.LVL3780:
14269:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29449              		.loc 1 14269 5 view .LVU8552
 29450              		.loc 1 14269 8 is_stmt 0 view .LVU8553
 29451 0004 0023     		movs	r3, #0
 29452 0006 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/ccOloYeZ.s 			page 833


14270:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29453              		.loc 1 14270 5 is_stmt 1 view .LVU8554
 29454              	.LVL3781:
14271:Core/Src/bno055.c **** 
14272:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14273:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29455              		.loc 1 14273 5 view .LVU8555
 29456              		.loc 1 14273 18 is_stmt 0 view .LVU8556
 29457 000a 1E4B     		ldr	r3, .L2122
 29458 000c 1B68     		ldr	r3, [r3]
 29459              		.loc 1 14273 8 view .LVU8557
 29460 000e 002B     		cmp	r3, #0
 29461 0010 32D0     		beq	.L2118
 29462 0012 0546     		mov	r5, r0
14274:Core/Src/bno055.c ****     {
14275:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14276:Core/Src/bno055.c ****     }
14277:Core/Src/bno055.c ****     else
14278:Core/Src/bno055.c ****     {
14279:Core/Src/bno055.c ****         /*condition check for page, accel anymotion interrupt mask is
14280:Core/Src/bno055.c ****          * available in the page one*/
14281:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29463              		.loc 1 14281 9 is_stmt 1 view .LVU8558
 29464              		.loc 1 14281 21 is_stmt 0 view .LVU8559
 29465 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29466              		.loc 1 14281 12 view .LVU8560
 29467 0016 012B     		cmp	r3, #1
 29468 0018 28D1     		bne	.L2121
 29469              	.LVL3782:
 29470              	.L2116:
14282:Core/Src/bno055.c ****         {
14283:Core/Src/bno055.c ****             /* Write page as one */
14284:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14285:Core/Src/bno055.c ****         }
14286:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29471              		.loc 1 14286 53 discriminator 1 view .LVU8561
 29472 001a 1A4B     		ldr	r3, .L2122
 29473 001c 1B68     		ldr	r3, [r3]
 29474 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29475              		.loc 1 14286 41 discriminator 1 view .LVU8562
 29476 0020 012B     		cmp	r3, #1
 29477 0022 2CD1     		bne	.L2119
 29478              	.L2117:
14287:Core/Src/bno055.c ****         {
14288:Core/Src/bno055.c ****             /* Write the value of accel anymotion interrupt mask*/
14289:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29479              		.loc 1 14289 13 is_stmt 1 view .LVU8563
 29480              		.loc 1 14289 32 is_stmt 0 view .LVU8564
 29481 0024 174B     		ldr	r3, .L2122
 29482 0026 1C68     		ldr	r4, [r3]
 29483 0028 2669     		ldr	r6, [r4, #16]
 29484              		.loc 1 14289 24 view .LVU8565
 29485 002a 0123     		movs	r3, #1
 29486 002c 0DF10702 		add	r2, sp, #7
 29487 0030 0F21     		movs	r1, #15
 29488 0032 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 29489 0034 B047     		blx	r6
ARM GAS  /tmp/ccOloYeZ.s 			page 834


 29490              	.LVL3783:
14290:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_INTR_MASK_REG,
14291:Core/Src/bno055.c ****                                                       &data_u8r,
14292:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14293:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 29491              		.loc 1 14293 13 is_stmt 1 view .LVU8566
 29492              		.loc 1 14293 16 is_stmt 0 view .LVU8567
 29493 0036 0446     		mov	r4, r0
 29494 0038 A8B9     		cbnz	r0, .L2115
14294:Core/Src/bno055.c ****             {
14295:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_INTR_MASK, accel_a
 29495              		.loc 1 14295 17 is_stmt 1 view .LVU8568
 29496              		.loc 1 14295 28 is_stmt 0 view .LVU8569
 29497 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29498 003e A801     		lsls	r0, r5, #6
 29499              	.LVL3784:
 29500              		.loc 1 14295 28 view .LVU8570
 29501 0040 00F04000 		and	r0, r0, #64
 29502 0044 23F04003 		bic	r3, r3, #64
 29503 0048 0343     		orrs	r3, r3, r0
 29504              		.loc 1 14295 26 view .LVU8571
 29505 004a 8DF80730 		strb	r3, [sp, #7]
14296:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29506              		.loc 1 14296 17 is_stmt 1 view .LVU8572
 29507              		.loc 1 14296 37 is_stmt 0 view .LVU8573
 29508 004e 0D4B     		ldr	r3, .L2122
 29509 0050 1868     		ldr	r0, [r3]
 29510 0052 C568     		ldr	r5, [r0, #12]
 29511              		.loc 1 14296 29 view .LVU8574
 29512 0054 0123     		movs	r3, #1
 29513 0056 0DF10702 		add	r2, sp, #7
 29514 005a 0F21     		movs	r1, #15
 29515 005c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29516 005e A847     		blx	r5
 29517              	.LVL3785:
 29518              		.loc 1 14296 26 view .LVU8575
 29519 0060 54FA80F0 		uxtab	r0, r4, r0
 29520 0064 44B2     		sxtb	r4, r0
 29521              	.LVL3786:
 29522              	.L2115:
14297:Core/Src/bno055.c ****                                                             BNO055_ACCEL_ANY_MOTION_INTR_MASK_REG,
14298:Core/Src/bno055.c ****                                                             &data_u8r,
14299:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14300:Core/Src/bno055.c ****             }
14301:Core/Src/bno055.c ****         }
14302:Core/Src/bno055.c ****         else
14303:Core/Src/bno055.c ****         {
14304:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14305:Core/Src/bno055.c ****         }
14306:Core/Src/bno055.c ****     }
14307:Core/Src/bno055.c **** 
14308:Core/Src/bno055.c ****     return com_rslt;
14309:Core/Src/bno055.c **** }
 29523              		.loc 1 14309 1 view .LVU8576
 29524 0066 2046     		mov	r0, r4
 29525 0068 02B0     		add	sp, sp, #8
 29526              		.cfi_remember_state
ARM GAS  /tmp/ccOloYeZ.s 			page 835


 29527              		.cfi_def_cfa_offset 16
 29528              		@ sp needed
 29529 006a 70BD     		pop	{r4, r5, r6, pc}
 29530              	.LVL3787:
 29531              	.L2121:
 29532              		.cfi_restore_state
14284:Core/Src/bno055.c ****         }
 29533              		.loc 1 14284 13 is_stmt 1 view .LVU8577
14284:Core/Src/bno055.c ****         }
 29534              		.loc 1 14284 23 is_stmt 0 view .LVU8578
 29535 006c 0120     		movs	r0, #1
 29536              	.LVL3788:
14284:Core/Src/bno055.c ****         }
 29537              		.loc 1 14284 23 view .LVU8579
 29538 006e FFF7FEFF 		bl	bno055_write_page_id
 29539              	.LVL3789:
14286:Core/Src/bno055.c ****         {
 29540              		.loc 1 14286 9 is_stmt 1 view .LVU8580
14286:Core/Src/bno055.c ****         {
 29541              		.loc 1 14286 12 is_stmt 0 view .LVU8581
 29542 0072 0028     		cmp	r0, #0
 29543 0074 D6D0     		beq	.L2117
 29544 0076 D0E7     		b	.L2116
 29545              	.LVL3790:
 29546              	.L2118:
14275:Core/Src/bno055.c ****     }
 29547              		.loc 1 14275 16 view .LVU8582
 29548 0078 6FF07E04 		mvn	r4, #126
 29549 007c F3E7     		b	.L2115
 29550              	.LVL3791:
 29551              	.L2119:
14304:Core/Src/bno055.c ****         }
 29552              		.loc 1 14304 22 view .LVU8583
 29553 007e 4FF0FF34 		mov	r4, #-1
 29554 0082 F0E7     		b	.L2115
 29555              	.L2123:
 29556              		.align	2
 29557              	.L2122:
 29558 0084 00000000 		.word	p_bno055
 29559              		.cfi_endproc
 29560              	.LFE212:
 29562              		.section	.text.bno055_get_intr_mask_accel_no_motion,"ax",%progbits
 29563              		.align	1
 29564              		.global	bno055_get_intr_mask_accel_no_motion
 29565              		.syntax unified
 29566              		.thumb
 29567              		.thumb_func
 29569              	bno055_get_intr_mask_accel_no_motion:
 29570              	.LVL3792:
 29571              	.LFB213:
14310:Core/Src/bno055.c **** 
14311:Core/Src/bno055.c **** /*!
14312:Core/Src/bno055.c ****  *  @brief This API used to read the accel nomotion interrupt mask
14313:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 7
14314:Core/Src/bno055.c ****  *
14315:Core/Src/bno055.c ****  *  @param accel_nomotion_u8 : The value of accel nomotion interrupt mask
14316:Core/Src/bno055.c ****  *     accel_nomotion_u8   | result
ARM GAS  /tmp/ccOloYeZ.s 			page 836


14317:Core/Src/bno055.c ****  *     --------------------  |------------
14318:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14319:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14320:Core/Src/bno055.c ****  *
14321:Core/Src/bno055.c ****  *  @return results of bus communication function
14322:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14323:Core/Src/bno055.c ****  *
14324:Core/Src/bno055.c ****  *  @note While enabling the accel anymotion interrupt
14325:Core/Src/bno055.c ****  *  configure the following settings
14326:Core/Src/bno055.c ****  *
14327:Core/Src/bno055.c ****  *  Axis:
14328:Core/Src/bno055.c ****  *
14329:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
14330:Core/Src/bno055.c ****  *
14331:Core/Src/bno055.c ****  *  Duration:
14332:Core/Src/bno055.c ****  *
14333:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_durn()
14334:Core/Src/bno055.c ****  *
14335:Core/Src/bno055.c ****  * Threshold:
14336:Core/Src/bno055.c ****  *
14337:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_thres())
14338:Core/Src/bno055.c ****  *
14339:Core/Src/bno055.c ****  */
14340:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_accel_no_motion(u8 *accel_nomotion_u8)
14341:Core/Src/bno055.c **** {
 29572              		.loc 1 14341 1 is_stmt 1 view -0
 29573              		.cfi_startproc
 29574              		@ args = 0, pretend = 0, frame = 8
 29575              		@ frame_needed = 0, uses_anonymous_args = 0
 29576              		.loc 1 14341 1 is_stmt 0 view .LVU8585
 29577 0000 30B5     		push	{r4, r5, lr}
 29578              		.cfi_def_cfa_offset 12
 29579              		.cfi_offset 4, -12
 29580              		.cfi_offset 5, -8
 29581              		.cfi_offset 14, -4
 29582 0002 83B0     		sub	sp, sp, #12
 29583              		.cfi_def_cfa_offset 24
14342:Core/Src/bno055.c ****     /* Variable used to return value of
14343:Core/Src/bno055.c ****      * communication routine*/
14344:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29584              		.loc 1 14344 5 is_stmt 1 view .LVU8586
 29585              	.LVL3793:
14345:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29586              		.loc 1 14345 5 view .LVU8587
 29587              		.loc 1 14345 8 is_stmt 0 view .LVU8588
 29588 0004 0023     		movs	r3, #0
 29589 0006 8DF80730 		strb	r3, [sp, #7]
14346:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29590              		.loc 1 14346 5 is_stmt 1 view .LVU8589
 29591              	.LVL3794:
14347:Core/Src/bno055.c **** 
14348:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14349:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29592              		.loc 1 14349 5 view .LVU8590
 29593              		.loc 1 14349 18 is_stmt 0 view .LVU8591
 29594 000a 134B     		ldr	r3, .L2132
 29595 000c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccOloYeZ.s 			page 837


 29596              		.loc 1 14349 8 view .LVU8592
 29597 000e EBB1     		cbz	r3, .L2128
 29598 0010 0446     		mov	r4, r0
14350:Core/Src/bno055.c ****     {
14351:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14352:Core/Src/bno055.c ****     }
14353:Core/Src/bno055.c ****     else
14354:Core/Src/bno055.c ****     {
14355:Core/Src/bno055.c ****         /*condition check for page, accel nomotion interrupt mask is
14356:Core/Src/bno055.c ****          * available in the page one*/
14357:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29599              		.loc 1 14357 9 is_stmt 1 view .LVU8593
 29600              		.loc 1 14357 21 is_stmt 0 view .LVU8594
 29601 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29602              		.loc 1 14357 12 view .LVU8595
 29603 0014 012B     		cmp	r3, #1
 29604 0016 13D1     		bne	.L2131
 29605              	.LVL3795:
 29606              	.L2126:
14358:Core/Src/bno055.c ****         {
14359:Core/Src/bno055.c ****             /* Write page as one */
14360:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14361:Core/Src/bno055.c ****         }
14362:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29607              		.loc 1 14362 53 discriminator 1 view .LVU8596
 29608 0018 0F4B     		ldr	r3, .L2132
 29609 001a 1B68     		ldr	r3, [r3]
 29610 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29611              		.loc 1 14362 41 discriminator 1 view .LVU8597
 29612 001e 012B     		cmp	r3, #1
 29613 0020 17D1     		bne	.L2129
 29614              	.L2127:
14363:Core/Src/bno055.c ****         {
14364:Core/Src/bno055.c ****             /* Read the value of accel nomotion interrupt mask*/
14365:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29615              		.loc 1 14365 13 is_stmt 1 view .LVU8598
 29616              		.loc 1 14365 32 is_stmt 0 view .LVU8599
 29617 0022 0D4B     		ldr	r3, .L2132
 29618 0024 1868     		ldr	r0, [r3]
 29619 0026 0569     		ldr	r5, [r0, #16]
 29620              		.loc 1 14365 24 view .LVU8600
 29621 0028 0123     		movs	r3, #1
 29622 002a 0DF10702 		add	r2, sp, #7
 29623 002e 0F21     		movs	r1, #15
 29624 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29625 0032 A847     		blx	r5
 29626              	.LVL3796:
14366:Core/Src/bno055.c ****                                                       BNO055_ACCEL_NO_MOTION_INTR_MASK_REG,
14367:Core/Src/bno055.c ****                                                       &data_u8r,
14368:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14369:Core/Src/bno055.c ****             *accel_nomotion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_NO_MOTION_INTR_MASK);
 29627              		.loc 1 14369 13 is_stmt 1 view .LVU8601
 29628              		.loc 1 14369 34 is_stmt 0 view .LVU8602
 29629 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29630 0038 DB09     		lsrs	r3, r3, #7
 29631              		.loc 1 14369 32 view .LVU8603
 29632 003a 2370     		strb	r3, [r4]
ARM GAS  /tmp/ccOloYeZ.s 			page 838


 29633              	.LVL3797:
 29634              	.L2125:
14370:Core/Src/bno055.c ****         }
14371:Core/Src/bno055.c ****         else
14372:Core/Src/bno055.c ****         {
14373:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14374:Core/Src/bno055.c ****         }
14375:Core/Src/bno055.c ****     }
14376:Core/Src/bno055.c **** 
14377:Core/Src/bno055.c ****     return com_rslt;
14378:Core/Src/bno055.c **** }
 29635              		.loc 1 14378 1 view .LVU8604
 29636 003c 03B0     		add	sp, sp, #12
 29637              		.cfi_remember_state
 29638              		.cfi_def_cfa_offset 12
 29639              		@ sp needed
 29640 003e 30BD     		pop	{r4, r5, pc}
 29641              	.LVL3798:
 29642              	.L2131:
 29643              		.cfi_restore_state
14360:Core/Src/bno055.c ****         }
 29644              		.loc 1 14360 13 is_stmt 1 view .LVU8605
14360:Core/Src/bno055.c ****         }
 29645              		.loc 1 14360 23 is_stmt 0 view .LVU8606
 29646 0040 0120     		movs	r0, #1
 29647              	.LVL3799:
14360:Core/Src/bno055.c ****         }
 29648              		.loc 1 14360 23 view .LVU8607
 29649 0042 FFF7FEFF 		bl	bno055_write_page_id
 29650              	.LVL3800:
14362:Core/Src/bno055.c ****         {
 29651              		.loc 1 14362 9 is_stmt 1 view .LVU8608
14362:Core/Src/bno055.c ****         {
 29652              		.loc 1 14362 12 is_stmt 0 view .LVU8609
 29653 0046 0028     		cmp	r0, #0
 29654 0048 EBD0     		beq	.L2127
 29655 004a E5E7     		b	.L2126
 29656              	.LVL3801:
 29657              	.L2128:
14351:Core/Src/bno055.c ****     }
 29658              		.loc 1 14351 16 view .LVU8610
 29659 004c 6FF07E00 		mvn	r0, #126
 29660              	.LVL3802:
14351:Core/Src/bno055.c ****     }
 29661              		.loc 1 14351 16 view .LVU8611
 29662 0050 F4E7     		b	.L2125
 29663              	.LVL3803:
 29664              	.L2129:
14373:Core/Src/bno055.c ****         }
 29665              		.loc 1 14373 22 view .LVU8612
 29666 0052 4FF0FF30 		mov	r0, #-1
 29667 0056 F1E7     		b	.L2125
 29668              	.L2133:
 29669              		.align	2
 29670              	.L2132:
 29671 0058 00000000 		.word	p_bno055
 29672              		.cfi_endproc
ARM GAS  /tmp/ccOloYeZ.s 			page 839


 29673              	.LFE213:
 29675              		.section	.text.bno055_set_intr_mask_accel_no_motion,"ax",%progbits
 29676              		.align	1
 29677              		.global	bno055_set_intr_mask_accel_no_motion
 29678              		.syntax unified
 29679              		.thumb
 29680              		.thumb_func
 29682              	bno055_set_intr_mask_accel_no_motion:
 29683              	.LVL3804:
 29684              	.LFB214:
14379:Core/Src/bno055.c **** 
14380:Core/Src/bno055.c **** /*!
14381:Core/Src/bno055.c ****  *  @brief This API used to write the accel nomotion interrupt mask
14382:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 7
14383:Core/Src/bno055.c ****  *
14384:Core/Src/bno055.c ****  *  @param accel_nomotion_u8 : The value of accel nomotion interrupt mask
14385:Core/Src/bno055.c ****  *     accel_nomotion_u8   | result
14386:Core/Src/bno055.c ****  *     --------------------  |------------
14387:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14388:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14389:Core/Src/bno055.c ****  *
14390:Core/Src/bno055.c ****  *  @return results of bus communication function
14391:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14392:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14393:Core/Src/bno055.c ****  *
14394:Core/Src/bno055.c ****  *  @note While enabling the accel nomotion interrupt
14395:Core/Src/bno055.c ****  *  configure the following settings
14396:Core/Src/bno055.c ****  *
14397:Core/Src/bno055.c ****  *  Axis:
14398:Core/Src/bno055.c ****  *
14399:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
14400:Core/Src/bno055.c ****  *
14401:Core/Src/bno055.c ****  *  Threshold :
14402:Core/Src/bno055.c ****  *
14403:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_thres()
14404:Core/Src/bno055.c ****  *
14405:Core/Src/bno055.c ****  *  Duration :
14406:Core/Src/bno055.c ****  *
14407:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_durn()
14408:Core/Src/bno055.c ****  *
14409:Core/Src/bno055.c ****  *  Slow/no motion enable:
14410:Core/Src/bno055.c ****  *
14411:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_enable()
14412:Core/Src/bno055.c ****  *
14413:Core/Src/bno055.c ****  */
14414:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_accel_no_motion(u8 accel_nomotion_u8)
14415:Core/Src/bno055.c **** {
 29685              		.loc 1 14415 1 is_stmt 1 view -0
 29686              		.cfi_startproc
 29687              		@ args = 0, pretend = 0, frame = 8
 29688              		@ frame_needed = 0, uses_anonymous_args = 0
 29689              		.loc 1 14415 1 is_stmt 0 view .LVU8614
 29690 0000 30B5     		push	{r4, r5, lr}
 29691              		.cfi_def_cfa_offset 12
 29692              		.cfi_offset 4, -12
 29693              		.cfi_offset 5, -8
 29694              		.cfi_offset 14, -4
ARM GAS  /tmp/ccOloYeZ.s 			page 840


 29695 0002 83B0     		sub	sp, sp, #12
 29696              		.cfi_def_cfa_offset 24
14416:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29697              		.loc 1 14416 5 is_stmt 1 view .LVU8615
 29698              	.LVL3805:
14417:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29699              		.loc 1 14417 5 view .LVU8616
 29700              		.loc 1 14417 8 is_stmt 0 view .LVU8617
 29701 0004 0023     		movs	r3, #0
 29702 0006 8DF80730 		strb	r3, [sp, #7]
14418:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29703              		.loc 1 14418 5 is_stmt 1 view .LVU8618
 29704              	.LVL3806:
14419:Core/Src/bno055.c **** 
14420:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14421:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29705              		.loc 1 14421 5 view .LVU8619
 29706              		.loc 1 14421 18 is_stmt 0 view .LVU8620
 29707 000a 1D4B     		ldr	r3, .L2142
 29708 000c 1B68     		ldr	r3, [r3]
 29709              		.loc 1 14421 8 view .LVU8621
 29710 000e 002B     		cmp	r3, #0
 29711 0010 30D0     		beq	.L2138
 29712 0012 0446     		mov	r4, r0
14422:Core/Src/bno055.c ****     {
14423:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14424:Core/Src/bno055.c ****     }
14425:Core/Src/bno055.c ****     else
14426:Core/Src/bno055.c ****     {
14427:Core/Src/bno055.c ****         /*condition check for page, accel
14428:Core/Src/bno055.c ****          * nomotion interrupt mask is
14429:Core/Src/bno055.c ****          * available in the page one*/
14430:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29713              		.loc 1 14430 9 is_stmt 1 view .LVU8622
 29714              		.loc 1 14430 21 is_stmt 0 view .LVU8623
 29715 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29716              		.loc 1 14430 12 view .LVU8624
 29717 0016 012B     		cmp	r3, #1
 29718 0018 26D1     		bne	.L2141
 29719              	.LVL3807:
 29720              	.L2136:
14431:Core/Src/bno055.c ****         {
14432:Core/Src/bno055.c ****             /* Write page as one */
14433:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14434:Core/Src/bno055.c ****         }
14435:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29721              		.loc 1 14435 53 discriminator 1 view .LVU8625
 29722 001a 194B     		ldr	r3, .L2142
 29723 001c 1B68     		ldr	r3, [r3]
 29724 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29725              		.loc 1 14435 41 discriminator 1 view .LVU8626
 29726 0020 012B     		cmp	r3, #1
 29727 0022 2AD1     		bne	.L2139
 29728              	.L2137:
14436:Core/Src/bno055.c ****         {
14437:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29729              		.loc 1 14437 13 is_stmt 1 view .LVU8627
ARM GAS  /tmp/ccOloYeZ.s 			page 841


 29730              		.loc 1 14437 32 is_stmt 0 view .LVU8628
 29731 0024 164B     		ldr	r3, .L2142
 29732 0026 1868     		ldr	r0, [r3]
 29733 0028 0569     		ldr	r5, [r0, #16]
 29734              		.loc 1 14437 24 view .LVU8629
 29735 002a 0123     		movs	r3, #1
 29736 002c 0DF10702 		add	r2, sp, #7
 29737 0030 0F21     		movs	r1, #15
 29738 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29739 0034 A847     		blx	r5
 29740              	.LVL3808:
14438:Core/Src/bno055.c ****                                                       BNO055_ACCEL_NO_MOTION_INTR_MASK_REG,
14439:Core/Src/bno055.c ****                                                       &data_u8r,
14440:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14441:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 29741              		.loc 1 14441 13 is_stmt 1 view .LVU8630
 29742              		.loc 1 14441 16 is_stmt 0 view .LVU8631
 29743 0036 0546     		mov	r5, r0
 29744 0038 98B9     		cbnz	r0, .L2135
14442:Core/Src/bno055.c ****             {
14443:Core/Src/bno055.c ****                 /* Write the value of accel
14444:Core/Src/bno055.c ****                 * nomotion interrupt mask*/
14445:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_NO_MOTION_INTR_MASK, accel_no
 29745              		.loc 1 14445 17 is_stmt 1 view .LVU8632
 29746              		.loc 1 14445 28 is_stmt 0 view .LVU8633
 29747 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29748 003e 03F07F03 		and	r3, r3, #127
 29749 0042 43EAC413 		orr	r3, r3, r4, lsl #7
 29750              		.loc 1 14445 26 view .LVU8634
 29751 0046 8DF80730 		strb	r3, [sp, #7]
14446:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29752              		.loc 1 14446 17 is_stmt 1 view .LVU8635
 29753              		.loc 1 14446 37 is_stmt 0 view .LVU8636
 29754 004a 0D4B     		ldr	r3, .L2142
 29755 004c 1868     		ldr	r0, [r3]
 29756              	.LVL3809:
 29757              		.loc 1 14446 37 view .LVU8637
 29758 004e C468     		ldr	r4, [r0, #12]
 29759              		.loc 1 14446 29 view .LVU8638
 29760 0050 0123     		movs	r3, #1
 29761 0052 0DF10702 		add	r2, sp, #7
 29762 0056 0F21     		movs	r1, #15
 29763 0058 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29764 005a A047     		blx	r4
 29765              	.LVL3810:
 29766              		.loc 1 14446 26 view .LVU8639
 29767 005c 55FA80F0 		uxtab	r0, r5, r0
 29768 0060 45B2     		sxtb	r5, r0
 29769              	.LVL3811:
 29770              	.L2135:
14447:Core/Src/bno055.c ****                                                             BNO055_ACCEL_NO_MOTION_INTR_MASK_REG,
14448:Core/Src/bno055.c ****                                                             &data_u8r,
14449:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14450:Core/Src/bno055.c ****             }
14451:Core/Src/bno055.c ****         }
14452:Core/Src/bno055.c ****         else
14453:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccOloYeZ.s 			page 842


14454:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14455:Core/Src/bno055.c ****         }
14456:Core/Src/bno055.c ****     }
14457:Core/Src/bno055.c **** 
14458:Core/Src/bno055.c ****     return com_rslt;
14459:Core/Src/bno055.c **** }
 29771              		.loc 1 14459 1 view .LVU8640
 29772 0062 2846     		mov	r0, r5
 29773 0064 03B0     		add	sp, sp, #12
 29774              		.cfi_remember_state
 29775              		.cfi_def_cfa_offset 12
 29776              		@ sp needed
 29777 0066 30BD     		pop	{r4, r5, pc}
 29778              	.LVL3812:
 29779              	.L2141:
 29780              		.cfi_restore_state
14433:Core/Src/bno055.c ****         }
 29781              		.loc 1 14433 13 is_stmt 1 view .LVU8641
14433:Core/Src/bno055.c ****         }
 29782              		.loc 1 14433 23 is_stmt 0 view .LVU8642
 29783 0068 0120     		movs	r0, #1
 29784              	.LVL3813:
14433:Core/Src/bno055.c ****         }
 29785              		.loc 1 14433 23 view .LVU8643
 29786 006a FFF7FEFF 		bl	bno055_write_page_id
 29787              	.LVL3814:
14435:Core/Src/bno055.c ****         {
 29788              		.loc 1 14435 9 is_stmt 1 view .LVU8644
14435:Core/Src/bno055.c ****         {
 29789              		.loc 1 14435 12 is_stmt 0 view .LVU8645
 29790 006e 0028     		cmp	r0, #0
 29791 0070 D8D0     		beq	.L2137
 29792 0072 D2E7     		b	.L2136
 29793              	.LVL3815:
 29794              	.L2138:
14423:Core/Src/bno055.c ****     }
 29795              		.loc 1 14423 16 view .LVU8646
 29796 0074 6FF07E05 		mvn	r5, #126
 29797 0078 F3E7     		b	.L2135
 29798              	.LVL3816:
 29799              	.L2139:
14454:Core/Src/bno055.c ****         }
 29800              		.loc 1 14454 22 view .LVU8647
 29801 007a 4FF0FF35 		mov	r5, #-1
 29802 007e F0E7     		b	.L2135
 29803              	.L2143:
 29804              		.align	2
 29805              	.L2142:
 29806 0080 00000000 		.word	p_bno055
 29807              		.cfi_endproc
 29808              	.LFE214:
 29810              		.section	.text.bno055_get_intr_gyro_any_motion,"ax",%progbits
 29811              		.align	1
 29812              		.global	bno055_get_intr_gyro_any_motion
 29813              		.syntax unified
 29814              		.thumb
 29815              		.thumb_func
ARM GAS  /tmp/ccOloYeZ.s 			page 843


 29817              	bno055_get_intr_gyro_any_motion:
 29818              	.LVL3817:
 29819              	.LFB215:
14460:Core/Src/bno055.c **** 
14461:Core/Src/bno055.c **** /*!
14462:Core/Src/bno055.c ****  *  @brief This API used to read the gyro anymotion interrupt
14463:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 2
14464:Core/Src/bno055.c ****  *
14465:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt
14466:Core/Src/bno055.c ****  *      gyro_any_motion_u8 | result
14467:Core/Src/bno055.c ****  *     --------------------  |------------
14468:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14469:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14470:Core/Src/bno055.c ****  *
14471:Core/Src/bno055.c ****  *  @return results of bus communication function
14472:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14473:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14474:Core/Src/bno055.c ****  *
14475:Core/Src/bno055.c ****  *  @note While enabling the gyro anymotion interrupt
14476:Core/Src/bno055.c ****  *  configure the following settings
14477:Core/Src/bno055.c ****  *
14478:Core/Src/bno055.c ****  *  Axis:
14479:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_axis_enable()
14480:Core/Src/bno055.c ****  *
14481:Core/Src/bno055.c ****  *  Filter setting:
14482:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_filter()
14483:Core/Src/bno055.c ****  *
14484:Core/Src/bno055.c ****  *  Threshold :
14485:Core/Src/bno055.c ****  *
14486:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_thres()
14487:Core/Src/bno055.c ****  *
14488:Core/Src/bno055.c ****  *  Slope samples :
14489:Core/Src/bno055.c ****  *
14490:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_slope_samples()
14491:Core/Src/bno055.c ****  *
14492:Core/Src/bno055.c ****  *  Awake duration :
14493:Core/Src/bno055.c ****  *
14494:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_awake_durn()
14495:Core/Src/bno055.c ****  */
14496:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_gyro_any_motion(u8 *gyro_any_motion_u8)
14497:Core/Src/bno055.c **** {
 29820              		.loc 1 14497 1 is_stmt 1 view -0
 29821              		.cfi_startproc
 29822              		@ args = 0, pretend = 0, frame = 8
 29823              		@ frame_needed = 0, uses_anonymous_args = 0
 29824              		.loc 1 14497 1 is_stmt 0 view .LVU8649
 29825 0000 30B5     		push	{r4, r5, lr}
 29826              		.cfi_def_cfa_offset 12
 29827              		.cfi_offset 4, -12
 29828              		.cfi_offset 5, -8
 29829              		.cfi_offset 14, -4
 29830 0002 83B0     		sub	sp, sp, #12
 29831              		.cfi_def_cfa_offset 24
14498:Core/Src/bno055.c ****     /* Variable used to return value of
14499:Core/Src/bno055.c ****      * communication routine*/
14500:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29832              		.loc 1 14500 5 is_stmt 1 view .LVU8650
ARM GAS  /tmp/ccOloYeZ.s 			page 844


 29833              	.LVL3818:
14501:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29834              		.loc 1 14501 5 view .LVU8651
 29835              		.loc 1 14501 8 is_stmt 0 view .LVU8652
 29836 0004 0023     		movs	r3, #0
 29837 0006 8DF80730 		strb	r3, [sp, #7]
14502:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29838              		.loc 1 14502 5 is_stmt 1 view .LVU8653
 29839              	.LVL3819:
14503:Core/Src/bno055.c **** 
14504:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14505:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29840              		.loc 1 14505 5 view .LVU8654
 29841              		.loc 1 14505 18 is_stmt 0 view .LVU8655
 29842 000a 144B     		ldr	r3, .L2152
 29843 000c 1B68     		ldr	r3, [r3]
 29844              		.loc 1 14505 8 view .LVU8656
 29845 000e F3B1     		cbz	r3, .L2148
 29846 0010 0446     		mov	r4, r0
14506:Core/Src/bno055.c ****     {
14507:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14508:Core/Src/bno055.c ****     }
14509:Core/Src/bno055.c ****     else
14510:Core/Src/bno055.c ****     {
14511:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion interrupt  is
14512:Core/Src/bno055.c ****          * available in the page one*/
14513:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29847              		.loc 1 14513 9 is_stmt 1 view .LVU8657
 29848              		.loc 1 14513 21 is_stmt 0 view .LVU8658
 29849 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29850              		.loc 1 14513 12 view .LVU8659
 29851 0014 012B     		cmp	r3, #1
 29852 0016 14D1     		bne	.L2151
 29853              	.LVL3820:
 29854              	.L2146:
14514:Core/Src/bno055.c ****         {
14515:Core/Src/bno055.c ****             /* Write page as one */
14516:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14517:Core/Src/bno055.c ****         }
14518:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29855              		.loc 1 14518 53 discriminator 1 view .LVU8660
 29856 0018 104B     		ldr	r3, .L2152
 29857 001a 1B68     		ldr	r3, [r3]
 29858 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29859              		.loc 1 14518 41 discriminator 1 view .LVU8661
 29860 001e 012B     		cmp	r3, #1
 29861 0020 18D1     		bne	.L2149
 29862              	.L2147:
14519:Core/Src/bno055.c ****         {
14520:Core/Src/bno055.c ****             /* Read the value of gyro anymotion interrupt */
14521:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29863              		.loc 1 14521 13 is_stmt 1 view .LVU8662
 29864              		.loc 1 14521 32 is_stmt 0 view .LVU8663
 29865 0022 0E4B     		ldr	r3, .L2152
 29866 0024 1868     		ldr	r0, [r3]
 29867 0026 0569     		ldr	r5, [r0, #16]
 29868              		.loc 1 14521 24 view .LVU8664
ARM GAS  /tmp/ccOloYeZ.s 			page 845


 29869 0028 0123     		movs	r3, #1
 29870 002a 0DF10702 		add	r2, sp, #7
 29871 002e 1021     		movs	r1, #16
 29872 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29873 0032 A847     		blx	r5
 29874              	.LVL3821:
14522:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_INTR_REG,
14523:Core/Src/bno055.c ****                                                       &data_u8r,
14524:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14525:Core/Src/bno055.c ****             *gyro_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_INTR);
 29875              		.loc 1 14525 13 is_stmt 1 view .LVU8665
 29876              		.loc 1 14525 35 is_stmt 0 view .LVU8666
 29877 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29878 0038 C3F38003 		ubfx	r3, r3, #2, #1
 29879              		.loc 1 14525 33 view .LVU8667
 29880 003c 2370     		strb	r3, [r4]
 29881              	.LVL3822:
 29882              	.L2145:
14526:Core/Src/bno055.c ****         }
14527:Core/Src/bno055.c ****         else
14528:Core/Src/bno055.c ****         {
14529:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14530:Core/Src/bno055.c ****         }
14531:Core/Src/bno055.c ****     }
14532:Core/Src/bno055.c **** 
14533:Core/Src/bno055.c ****     return com_rslt;
14534:Core/Src/bno055.c **** }
 29883              		.loc 1 14534 1 view .LVU8668
 29884 003e 03B0     		add	sp, sp, #12
 29885              		.cfi_remember_state
 29886              		.cfi_def_cfa_offset 12
 29887              		@ sp needed
 29888 0040 30BD     		pop	{r4, r5, pc}
 29889              	.LVL3823:
 29890              	.L2151:
 29891              		.cfi_restore_state
14516:Core/Src/bno055.c ****         }
 29892              		.loc 1 14516 13 is_stmt 1 view .LVU8669
14516:Core/Src/bno055.c ****         }
 29893              		.loc 1 14516 23 is_stmt 0 view .LVU8670
 29894 0042 0120     		movs	r0, #1
 29895              	.LVL3824:
14516:Core/Src/bno055.c ****         }
 29896              		.loc 1 14516 23 view .LVU8671
 29897 0044 FFF7FEFF 		bl	bno055_write_page_id
 29898              	.LVL3825:
14518:Core/Src/bno055.c ****         {
 29899              		.loc 1 14518 9 is_stmt 1 view .LVU8672
14518:Core/Src/bno055.c ****         {
 29900              		.loc 1 14518 12 is_stmt 0 view .LVU8673
 29901 0048 0028     		cmp	r0, #0
 29902 004a EAD0     		beq	.L2147
 29903 004c E4E7     		b	.L2146
 29904              	.LVL3826:
 29905              	.L2148:
14507:Core/Src/bno055.c ****     }
 29906              		.loc 1 14507 16 view .LVU8674
ARM GAS  /tmp/ccOloYeZ.s 			page 846


 29907 004e 6FF07E00 		mvn	r0, #126
 29908              	.LVL3827:
14507:Core/Src/bno055.c ****     }
 29909              		.loc 1 14507 16 view .LVU8675
 29910 0052 F4E7     		b	.L2145
 29911              	.LVL3828:
 29912              	.L2149:
14529:Core/Src/bno055.c ****         }
 29913              		.loc 1 14529 22 view .LVU8676
 29914 0054 4FF0FF30 		mov	r0, #-1
 29915 0058 F1E7     		b	.L2145
 29916              	.L2153:
 29917 005a 00BF     		.align	2
 29918              	.L2152:
 29919 005c 00000000 		.word	p_bno055
 29920              		.cfi_endproc
 29921              	.LFE215:
 29923              		.section	.text.bno055_set_intr_gyro_any_motion,"ax",%progbits
 29924              		.align	1
 29925              		.global	bno055_set_intr_gyro_any_motion
 29926              		.syntax unified
 29927              		.thumb
 29928              		.thumb_func
 29930              	bno055_set_intr_gyro_any_motion:
 29931              	.LVL3829:
 29932              	.LFB216:
14535:Core/Src/bno055.c **** 
14536:Core/Src/bno055.c **** /*!
14537:Core/Src/bno055.c ****  *  @brief This API used to write the gyro anymotion interrupt
14538:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 2
14539:Core/Src/bno055.c ****  *
14540:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt
14541:Core/Src/bno055.c ****  *    gyro_any_motion_u8   | result
14542:Core/Src/bno055.c ****  *     --------------------  |------------
14543:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14544:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14545:Core/Src/bno055.c ****  *
14546:Core/Src/bno055.c ****  *  @return results of bus communication function
14547:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14548:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14549:Core/Src/bno055.c ****  *
14550:Core/Src/bno055.c ****  *  @note While enabling the gyro anymotion interrupt
14551:Core/Src/bno055.c ****  *  configure the following settings
14552:Core/Src/bno055.c ****  *
14553:Core/Src/bno055.c ****  *  Axis:
14554:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_axis_enable()
14555:Core/Src/bno055.c ****  *
14556:Core/Src/bno055.c ****  *  Filter setting:
14557:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_filter()
14558:Core/Src/bno055.c ****  *
14559:Core/Src/bno055.c ****  *  Threshold :
14560:Core/Src/bno055.c ****  *
14561:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_thres()
14562:Core/Src/bno055.c ****  *
14563:Core/Src/bno055.c ****  *  Slope samples :
14564:Core/Src/bno055.c ****  *
14565:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_slope_samples()
ARM GAS  /tmp/ccOloYeZ.s 			page 847


14566:Core/Src/bno055.c ****  *
14567:Core/Src/bno055.c ****  *  Awake duration :
14568:Core/Src/bno055.c ****  *
14569:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_awake_durn()
14570:Core/Src/bno055.c ****  */
14571:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_gyro_any_motion(u8 gyro_any_motion_u8)
14572:Core/Src/bno055.c **** {
 29933              		.loc 1 14572 1 is_stmt 1 view -0
 29934              		.cfi_startproc
 29935              		@ args = 0, pretend = 0, frame = 8
 29936              		@ frame_needed = 0, uses_anonymous_args = 0
 29937              		.loc 1 14572 1 is_stmt 0 view .LVU8678
 29938 0000 70B5     		push	{r4, r5, r6, lr}
 29939              		.cfi_def_cfa_offset 16
 29940              		.cfi_offset 4, -16
 29941              		.cfi_offset 5, -12
 29942              		.cfi_offset 6, -8
 29943              		.cfi_offset 14, -4
 29944 0002 82B0     		sub	sp, sp, #8
 29945              		.cfi_def_cfa_offset 24
14573:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29946              		.loc 1 14573 5 is_stmt 1 view .LVU8679
 29947              	.LVL3830:
14574:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29948              		.loc 1 14574 5 view .LVU8680
 29949              		.loc 1 14574 8 is_stmt 0 view .LVU8681
 29950 0004 0023     		movs	r3, #0
 29951 0006 8DF80730 		strb	r3, [sp, #7]
14575:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29952              		.loc 1 14575 5 is_stmt 1 view .LVU8682
 29953              	.LVL3831:
14576:Core/Src/bno055.c **** 
14577:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14578:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29954              		.loc 1 14578 5 view .LVU8683
 29955              		.loc 1 14578 18 is_stmt 0 view .LVU8684
 29956 000a 1E4B     		ldr	r3, .L2162
 29957 000c 1B68     		ldr	r3, [r3]
 29958              		.loc 1 14578 8 view .LVU8685
 29959 000e 002B     		cmp	r3, #0
 29960 0010 32D0     		beq	.L2158
 29961 0012 0546     		mov	r5, r0
14579:Core/Src/bno055.c ****     {
14580:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14581:Core/Src/bno055.c ****     }
14582:Core/Src/bno055.c ****     else
14583:Core/Src/bno055.c ****     {
14584:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion interrupt  is
14585:Core/Src/bno055.c ****          * available in the page one*/
14586:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29962              		.loc 1 14586 9 is_stmt 1 view .LVU8686
 29963              		.loc 1 14586 21 is_stmt 0 view .LVU8687
 29964 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29965              		.loc 1 14586 12 view .LVU8688
 29966 0016 012B     		cmp	r3, #1
 29967 0018 28D1     		bne	.L2161
 29968              	.LVL3832:
ARM GAS  /tmp/ccOloYeZ.s 			page 848


 29969              	.L2156:
14587:Core/Src/bno055.c ****         {
14588:Core/Src/bno055.c ****             /* Write page as one */
14589:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14590:Core/Src/bno055.c ****         }
14591:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29970              		.loc 1 14591 53 discriminator 1 view .LVU8689
 29971 001a 1A4B     		ldr	r3, .L2162
 29972 001c 1B68     		ldr	r3, [r3]
 29973 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29974              		.loc 1 14591 41 discriminator 1 view .LVU8690
 29975 0020 012B     		cmp	r3, #1
 29976 0022 2CD1     		bne	.L2159
 29977              	.L2157:
14592:Core/Src/bno055.c ****         {
14593:Core/Src/bno055.c ****             /* Write the value of gyro anymotion interrupt */
14594:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29978              		.loc 1 14594 13 is_stmt 1 view .LVU8691
 29979              		.loc 1 14594 32 is_stmt 0 view .LVU8692
 29980 0024 174B     		ldr	r3, .L2162
 29981 0026 1C68     		ldr	r4, [r3]
 29982 0028 2669     		ldr	r6, [r4, #16]
 29983              		.loc 1 14594 24 view .LVU8693
 29984 002a 0123     		movs	r3, #1
 29985 002c 0DF10702 		add	r2, sp, #7
 29986 0030 1021     		movs	r1, #16
 29987 0032 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 29988 0034 B047     		blx	r6
 29989              	.LVL3833:
14595:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_INTR_REG,
14596:Core/Src/bno055.c ****                                                       &data_u8r,
14597:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14598:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 29990              		.loc 1 14598 13 is_stmt 1 view .LVU8694
 29991              		.loc 1 14598 16 is_stmt 0 view .LVU8695
 29992 0036 0446     		mov	r4, r0
 29993 0038 A8B9     		cbnz	r0, .L2155
14599:Core/Src/bno055.c ****             {
14600:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_INTR, gyro_any_moti
 29994              		.loc 1 14600 17 is_stmt 1 view .LVU8696
 29995              		.loc 1 14600 28 is_stmt 0 view .LVU8697
 29996 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29997 003e A800     		lsls	r0, r5, #2
 29998              	.LVL3834:
 29999              		.loc 1 14600 28 view .LVU8698
 30000 0040 00F00400 		and	r0, r0, #4
 30001 0044 23F00403 		bic	r3, r3, #4
 30002 0048 0343     		orrs	r3, r3, r0
 30003              		.loc 1 14600 26 view .LVU8699
 30004 004a 8DF80730 		strb	r3, [sp, #7]
14601:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 30005              		.loc 1 14601 17 is_stmt 1 view .LVU8700
 30006              		.loc 1 14601 37 is_stmt 0 view .LVU8701
 30007 004e 0D4B     		ldr	r3, .L2162
 30008 0050 1868     		ldr	r0, [r3]
 30009 0052 C568     		ldr	r5, [r0, #12]
 30010              		.loc 1 14601 29 view .LVU8702
ARM GAS  /tmp/ccOloYeZ.s 			page 849


 30011 0054 0123     		movs	r3, #1
 30012 0056 0DF10702 		add	r2, sp, #7
 30013 005a 1021     		movs	r1, #16
 30014 005c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30015 005e A847     		blx	r5
 30016              	.LVL3835:
 30017              		.loc 1 14601 26 view .LVU8703
 30018 0060 54FA80F0 		uxtab	r0, r4, r0
 30019 0064 44B2     		sxtb	r4, r0
 30020              	.LVL3836:
 30021              	.L2155:
14602:Core/Src/bno055.c ****                                                             BNO055_GYRO_ANY_MOTION_INTR_REG,
14603:Core/Src/bno055.c ****                                                             &data_u8r,
14604:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14605:Core/Src/bno055.c ****             }
14606:Core/Src/bno055.c ****         }
14607:Core/Src/bno055.c ****         else
14608:Core/Src/bno055.c ****         {
14609:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14610:Core/Src/bno055.c ****         }
14611:Core/Src/bno055.c ****     }
14612:Core/Src/bno055.c **** 
14613:Core/Src/bno055.c ****     return com_rslt;
14614:Core/Src/bno055.c **** }
 30022              		.loc 1 14614 1 view .LVU8704
 30023 0066 2046     		mov	r0, r4
 30024 0068 02B0     		add	sp, sp, #8
 30025              		.cfi_remember_state
 30026              		.cfi_def_cfa_offset 16
 30027              		@ sp needed
 30028 006a 70BD     		pop	{r4, r5, r6, pc}
 30029              	.LVL3837:
 30030              	.L2161:
 30031              		.cfi_restore_state
14589:Core/Src/bno055.c ****         }
 30032              		.loc 1 14589 13 is_stmt 1 view .LVU8705
14589:Core/Src/bno055.c ****         }
 30033              		.loc 1 14589 23 is_stmt 0 view .LVU8706
 30034 006c 0120     		movs	r0, #1
 30035              	.LVL3838:
14589:Core/Src/bno055.c ****         }
 30036              		.loc 1 14589 23 view .LVU8707
 30037 006e FFF7FEFF 		bl	bno055_write_page_id
 30038              	.LVL3839:
14591:Core/Src/bno055.c ****         {
 30039              		.loc 1 14591 9 is_stmt 1 view .LVU8708
14591:Core/Src/bno055.c ****         {
 30040              		.loc 1 14591 12 is_stmt 0 view .LVU8709
 30041 0072 0028     		cmp	r0, #0
 30042 0074 D6D0     		beq	.L2157
 30043 0076 D0E7     		b	.L2156
 30044              	.LVL3840:
 30045              	.L2158:
14580:Core/Src/bno055.c ****     }
 30046              		.loc 1 14580 16 view .LVU8710
 30047 0078 6FF07E04 		mvn	r4, #126
 30048 007c F3E7     		b	.L2155
ARM GAS  /tmp/ccOloYeZ.s 			page 850


 30049              	.LVL3841:
 30050              	.L2159:
14609:Core/Src/bno055.c ****         }
 30051              		.loc 1 14609 22 view .LVU8711
 30052 007e 4FF0FF34 		mov	r4, #-1
 30053 0082 F0E7     		b	.L2155
 30054              	.L2163:
 30055              		.align	2
 30056              	.L2162:
 30057 0084 00000000 		.word	p_bno055
 30058              		.cfi_endproc
 30059              	.LFE216:
 30061              		.section	.text.bno055_get_intr_gyro_highrate,"ax",%progbits
 30062              		.align	1
 30063              		.global	bno055_get_intr_gyro_highrate
 30064              		.syntax unified
 30065              		.thumb
 30066              		.thumb_func
 30068              	bno055_get_intr_gyro_highrate:
 30069              	.LVL3842:
 30070              	.LFB217:
14615:Core/Src/bno055.c **** 
14616:Core/Src/bno055.c **** /*!
14617:Core/Src/bno055.c ****  *  @brief This API used to read the gyro highrate interrupt
14618:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 3
14619:Core/Src/bno055.c ****  *
14620:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt
14621:Core/Src/bno055.c ****  *      gyro_highrate_u8   | result
14622:Core/Src/bno055.c ****  *     --------------------  |------------
14623:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14624:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14625:Core/Src/bno055.c ****  *
14626:Core/Src/bno055.c ****  *  @return results of bus communication function
14627:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14628:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14629:Core/Src/bno055.c ****  *
14630:Core/Src/bno055.c ****  *  @note While enabling the gyro highrate interrupt
14631:Core/Src/bno055.c ****  *  configure the below settings by using
14632:Core/Src/bno055.c ****  *  the following APIs
14633:Core/Src/bno055.c ****  *
14634:Core/Src/bno055.c ****  *  Axis :
14635:Core/Src/bno055.c ****  *
14636:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_axis_enable()
14637:Core/Src/bno055.c ****  *
14638:Core/Src/bno055.c ****  *  Filter :
14639:Core/Src/bno055.c ****  *
14640:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_filter()
14641:Core/Src/bno055.c ****  *
14642:Core/Src/bno055.c ****  *  Threshold :
14643:Core/Src/bno055.c ****  *
14644:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_x_thres()
14645:Core/Src/bno055.c ****  *
14646:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_y_thres()
14647:Core/Src/bno055.c ****  *
14648:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_z_thres()
14649:Core/Src/bno055.c ****  *
14650:Core/Src/bno055.c ****  *  Hysteresis :
ARM GAS  /tmp/ccOloYeZ.s 			page 851


14651:Core/Src/bno055.c ****  *
14652:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_hyst()
14653:Core/Src/bno055.c ****  *
14654:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_hyst()
14655:Core/Src/bno055.c ****  *
14656:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_hyst()
14657:Core/Src/bno055.c ****  *
14658:Core/Src/bno055.c ****  *  Duration :
14659:Core/Src/bno055.c ****  *
14660:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_durn()
14661:Core/Src/bno055.c ****  *
14662:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_durn()
14663:Core/Src/bno055.c ****  *
14664:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_durn()
14665:Core/Src/bno055.c ****  *
14666:Core/Src/bno055.c ****  */
14667:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_gyro_highrate(u8 *gyro_highrate_u8)
14668:Core/Src/bno055.c **** {
 30071              		.loc 1 14668 1 is_stmt 1 view -0
 30072              		.cfi_startproc
 30073              		@ args = 0, pretend = 0, frame = 8
 30074              		@ frame_needed = 0, uses_anonymous_args = 0
 30075              		.loc 1 14668 1 is_stmt 0 view .LVU8713
 30076 0000 30B5     		push	{r4, r5, lr}
 30077              		.cfi_def_cfa_offset 12
 30078              		.cfi_offset 4, -12
 30079              		.cfi_offset 5, -8
 30080              		.cfi_offset 14, -4
 30081 0002 83B0     		sub	sp, sp, #12
 30082              		.cfi_def_cfa_offset 24
14669:Core/Src/bno055.c ****     /* Variable used to return value of
14670:Core/Src/bno055.c ****      * communication routine*/
14671:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30083              		.loc 1 14671 5 is_stmt 1 view .LVU8714
 30084              	.LVL3843:
14672:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30085              		.loc 1 14672 5 view .LVU8715
 30086              		.loc 1 14672 8 is_stmt 0 view .LVU8716
 30087 0004 0023     		movs	r3, #0
 30088 0006 8DF80730 		strb	r3, [sp, #7]
14673:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30089              		.loc 1 14673 5 is_stmt 1 view .LVU8717
 30090              	.LVL3844:
14674:Core/Src/bno055.c **** 
14675:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14676:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30091              		.loc 1 14676 5 view .LVU8718
 30092              		.loc 1 14676 18 is_stmt 0 view .LVU8719
 30093 000a 144B     		ldr	r3, .L2172
 30094 000c 1B68     		ldr	r3, [r3]
 30095              		.loc 1 14676 8 view .LVU8720
 30096 000e F3B1     		cbz	r3, .L2168
 30097 0010 0446     		mov	r4, r0
14677:Core/Src/bno055.c ****     {
14678:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14679:Core/Src/bno055.c ****     }
14680:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccOloYeZ.s 			page 852


14681:Core/Src/bno055.c ****     {
14682:Core/Src/bno055.c ****         /*condition check for page, gyro highrate interrupt is
14683:Core/Src/bno055.c ****          * available in the page one*/
14684:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30098              		.loc 1 14684 9 is_stmt 1 view .LVU8721
 30099              		.loc 1 14684 21 is_stmt 0 view .LVU8722
 30100 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30101              		.loc 1 14684 12 view .LVU8723
 30102 0014 012B     		cmp	r3, #1
 30103 0016 14D1     		bne	.L2171
 30104              	.LVL3845:
 30105              	.L2166:
14685:Core/Src/bno055.c ****         {
14686:Core/Src/bno055.c ****             /* Write page as one */
14687:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14688:Core/Src/bno055.c ****         }
14689:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30106              		.loc 1 14689 53 discriminator 1 view .LVU8724
 30107 0018 104B     		ldr	r3, .L2172
 30108 001a 1B68     		ldr	r3, [r3]
 30109 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30110              		.loc 1 14689 41 discriminator 1 view .LVU8725
 30111 001e 012B     		cmp	r3, #1
 30112 0020 18D1     		bne	.L2169
 30113              	.L2167:
14690:Core/Src/bno055.c ****         {
14691:Core/Src/bno055.c ****             /* Read the value of gyro highrate interrupt */
14692:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30114              		.loc 1 14692 13 is_stmt 1 view .LVU8726
 30115              		.loc 1 14692 32 is_stmt 0 view .LVU8727
 30116 0022 0E4B     		ldr	r3, .L2172
 30117 0024 1868     		ldr	r0, [r3]
 30118 0026 0569     		ldr	r5, [r0, #16]
 30119              		.loc 1 14692 24 view .LVU8728
 30120 0028 0123     		movs	r3, #1
 30121 002a 0DF10702 		add	r2, sp, #7
 30122 002e 1021     		movs	r1, #16
 30123 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30124 0032 A847     		blx	r5
 30125              	.LVL3846:
14693:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_INTR_REG,
14694:Core/Src/bno055.c ****                                                       &data_u8r,
14695:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14696:Core/Src/bno055.c ****             *gyro_highrate_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_INTR);
 30126              		.loc 1 14696 13 is_stmt 1 view .LVU8729
 30127              		.loc 1 14696 33 is_stmt 0 view .LVU8730
 30128 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30129 0038 C3F3C003 		ubfx	r3, r3, #3, #1
 30130              		.loc 1 14696 31 view .LVU8731
 30131 003c 2370     		strb	r3, [r4]
 30132              	.LVL3847:
 30133              	.L2165:
14697:Core/Src/bno055.c ****         }
14698:Core/Src/bno055.c ****         else
14699:Core/Src/bno055.c ****         {
14700:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14701:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 853


14702:Core/Src/bno055.c ****     }
14703:Core/Src/bno055.c **** 
14704:Core/Src/bno055.c ****     return com_rslt;
14705:Core/Src/bno055.c **** }
 30134              		.loc 1 14705 1 view .LVU8732
 30135 003e 03B0     		add	sp, sp, #12
 30136              		.cfi_remember_state
 30137              		.cfi_def_cfa_offset 12
 30138              		@ sp needed
 30139 0040 30BD     		pop	{r4, r5, pc}
 30140              	.LVL3848:
 30141              	.L2171:
 30142              		.cfi_restore_state
14687:Core/Src/bno055.c ****         }
 30143              		.loc 1 14687 13 is_stmt 1 view .LVU8733
14687:Core/Src/bno055.c ****         }
 30144              		.loc 1 14687 23 is_stmt 0 view .LVU8734
 30145 0042 0120     		movs	r0, #1
 30146              	.LVL3849:
14687:Core/Src/bno055.c ****         }
 30147              		.loc 1 14687 23 view .LVU8735
 30148 0044 FFF7FEFF 		bl	bno055_write_page_id
 30149              	.LVL3850:
14689:Core/Src/bno055.c ****         {
 30150              		.loc 1 14689 9 is_stmt 1 view .LVU8736
14689:Core/Src/bno055.c ****         {
 30151              		.loc 1 14689 12 is_stmt 0 view .LVU8737
 30152 0048 0028     		cmp	r0, #0
 30153 004a EAD0     		beq	.L2167
 30154 004c E4E7     		b	.L2166
 30155              	.LVL3851:
 30156              	.L2168:
14678:Core/Src/bno055.c ****     }
 30157              		.loc 1 14678 16 view .LVU8738
 30158 004e 6FF07E00 		mvn	r0, #126
 30159              	.LVL3852:
14678:Core/Src/bno055.c ****     }
 30160              		.loc 1 14678 16 view .LVU8739
 30161 0052 F4E7     		b	.L2165
 30162              	.LVL3853:
 30163              	.L2169:
14700:Core/Src/bno055.c ****         }
 30164              		.loc 1 14700 22 view .LVU8740
 30165 0054 4FF0FF30 		mov	r0, #-1
 30166 0058 F1E7     		b	.L2165
 30167              	.L2173:
 30168 005a 00BF     		.align	2
 30169              	.L2172:
 30170 005c 00000000 		.word	p_bno055
 30171              		.cfi_endproc
 30172              	.LFE217:
 30174              		.section	.text.bno055_set_intr_gyro_highrate,"ax",%progbits
 30175              		.align	1
 30176              		.global	bno055_set_intr_gyro_highrate
 30177              		.syntax unified
 30178              		.thumb
 30179              		.thumb_func
ARM GAS  /tmp/ccOloYeZ.s 			page 854


 30181              	bno055_set_intr_gyro_highrate:
 30182              	.LVL3854:
 30183              	.LFB218:
14706:Core/Src/bno055.c **** 
14707:Core/Src/bno055.c **** /*!
14708:Core/Src/bno055.c ****  *  @brief This API used to write the gyro highrate interrupt
14709:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 3
14710:Core/Src/bno055.c ****  *
14711:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt
14712:Core/Src/bno055.c ****  *      gyro_highrate_u8   | result
14713:Core/Src/bno055.c ****  *     --------------------  |------------
14714:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14715:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14716:Core/Src/bno055.c ****  *
14717:Core/Src/bno055.c ****  *  @return results of bus communication function
14718:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14719:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14720:Core/Src/bno055.c ****  *
14721:Core/Src/bno055.c ****  *  @note While enabling the gyro highrate interrupt
14722:Core/Src/bno055.c ****  *  configure the below settings by using
14723:Core/Src/bno055.c ****  *  the following APIs
14724:Core/Src/bno055.c ****  *
14725:Core/Src/bno055.c ****  *  Axis :
14726:Core/Src/bno055.c ****  *
14727:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_axis_enable()
14728:Core/Src/bno055.c ****  *
14729:Core/Src/bno055.c ****  *  Filter :
14730:Core/Src/bno055.c ****  *
14731:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_filter()
14732:Core/Src/bno055.c ****  *
14733:Core/Src/bno055.c ****  *  Threshold :
14734:Core/Src/bno055.c ****  *
14735:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_x_thres()
14736:Core/Src/bno055.c ****  *
14737:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_y_thres()
14738:Core/Src/bno055.c ****  *
14739:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_z_thres()
14740:Core/Src/bno055.c ****  *
14741:Core/Src/bno055.c ****  *  Hysteresis :
14742:Core/Src/bno055.c ****  *
14743:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_hyst()
14744:Core/Src/bno055.c ****  *
14745:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_hyst()
14746:Core/Src/bno055.c ****  *
14747:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_hyst()
14748:Core/Src/bno055.c ****  *
14749:Core/Src/bno055.c ****  *  Duration :
14750:Core/Src/bno055.c ****  *
14751:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_durn()
14752:Core/Src/bno055.c ****  *
14753:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_durn()
14754:Core/Src/bno055.c ****  *
14755:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_durn()
14756:Core/Src/bno055.c ****  *
14757:Core/Src/bno055.c ****  */
14758:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_gyro_highrate(u8 gyro_highrate_u8)
14759:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccOloYeZ.s 			page 855


 30184              		.loc 1 14759 1 is_stmt 1 view -0
 30185              		.cfi_startproc
 30186              		@ args = 0, pretend = 0, frame = 8
 30187              		@ frame_needed = 0, uses_anonymous_args = 0
 30188              		.loc 1 14759 1 is_stmt 0 view .LVU8742
 30189 0000 70B5     		push	{r4, r5, r6, lr}
 30190              		.cfi_def_cfa_offset 16
 30191              		.cfi_offset 4, -16
 30192              		.cfi_offset 5, -12
 30193              		.cfi_offset 6, -8
 30194              		.cfi_offset 14, -4
 30195 0002 82B0     		sub	sp, sp, #8
 30196              		.cfi_def_cfa_offset 24
14760:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30197              		.loc 1 14760 5 is_stmt 1 view .LVU8743
 30198              	.LVL3855:
14761:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30199              		.loc 1 14761 5 view .LVU8744
 30200              		.loc 1 14761 8 is_stmt 0 view .LVU8745
 30201 0004 0023     		movs	r3, #0
 30202 0006 8DF80730 		strb	r3, [sp, #7]
14762:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30203              		.loc 1 14762 5 is_stmt 1 view .LVU8746
 30204              	.LVL3856:
14763:Core/Src/bno055.c **** 
14764:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14765:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30205              		.loc 1 14765 5 view .LVU8747
 30206              		.loc 1 14765 18 is_stmt 0 view .LVU8748
 30207 000a 1E4B     		ldr	r3, .L2182
 30208 000c 1B68     		ldr	r3, [r3]
 30209              		.loc 1 14765 8 view .LVU8749
 30210 000e 002B     		cmp	r3, #0
 30211 0010 32D0     		beq	.L2178
 30212 0012 0546     		mov	r5, r0
14766:Core/Src/bno055.c ****     {
14767:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14768:Core/Src/bno055.c ****     }
14769:Core/Src/bno055.c ****     else
14770:Core/Src/bno055.c ****     {
14771:Core/Src/bno055.c ****         /*condition check for page, gyro highrate interrupt is
14772:Core/Src/bno055.c ****          * available in the page one*/
14773:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30213              		.loc 1 14773 9 is_stmt 1 view .LVU8750
 30214              		.loc 1 14773 21 is_stmt 0 view .LVU8751
 30215 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30216              		.loc 1 14773 12 view .LVU8752
 30217 0016 012B     		cmp	r3, #1
 30218 0018 28D1     		bne	.L2181
 30219              	.LVL3857:
 30220              	.L2176:
14774:Core/Src/bno055.c ****         {
14775:Core/Src/bno055.c ****             /* Write page as one */
14776:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14777:Core/Src/bno055.c ****         }
14778:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30221              		.loc 1 14778 53 discriminator 1 view .LVU8753
ARM GAS  /tmp/ccOloYeZ.s 			page 856


 30222 001a 1A4B     		ldr	r3, .L2182
 30223 001c 1B68     		ldr	r3, [r3]
 30224 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30225              		.loc 1 14778 41 discriminator 1 view .LVU8754
 30226 0020 012B     		cmp	r3, #1
 30227 0022 2CD1     		bne	.L2179
 30228              	.L2177:
14779:Core/Src/bno055.c ****         {
14780:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30229              		.loc 1 14780 13 is_stmt 1 view .LVU8755
 30230              		.loc 1 14780 32 is_stmt 0 view .LVU8756
 30231 0024 174B     		ldr	r3, .L2182
 30232 0026 1C68     		ldr	r4, [r3]
 30233 0028 2669     		ldr	r6, [r4, #16]
 30234              		.loc 1 14780 24 view .LVU8757
 30235 002a 0123     		movs	r3, #1
 30236 002c 0DF10702 		add	r2, sp, #7
 30237 0030 1021     		movs	r1, #16
 30238 0032 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 30239 0034 B047     		blx	r6
 30240              	.LVL3858:
14781:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_INTR_REG,
14782:Core/Src/bno055.c ****                                                       &data_u8r,
14783:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14784:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 30241              		.loc 1 14784 13 is_stmt 1 view .LVU8758
 30242              		.loc 1 14784 16 is_stmt 0 view .LVU8759
 30243 0036 0446     		mov	r4, r0
 30244 0038 A8B9     		cbnz	r0, .L2175
14785:Core/Src/bno055.c ****             {
14786:Core/Src/bno055.c ****                 /* Write the value of gyro highrate interrupt */
14787:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_INTR, gyro_highrate_u
 30245              		.loc 1 14787 17 is_stmt 1 view .LVU8760
 30246              		.loc 1 14787 28 is_stmt 0 view .LVU8761
 30247 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30248 003e E800     		lsls	r0, r5, #3
 30249              	.LVL3859:
 30250              		.loc 1 14787 28 view .LVU8762
 30251 0040 00F00800 		and	r0, r0, #8
 30252 0044 23F00803 		bic	r3, r3, #8
 30253 0048 0343     		orrs	r3, r3, r0
 30254              		.loc 1 14787 26 view .LVU8763
 30255 004a 8DF80730 		strb	r3, [sp, #7]
14788:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 30256              		.loc 1 14788 17 is_stmt 1 view .LVU8764
 30257              		.loc 1 14788 37 is_stmt 0 view .LVU8765
 30258 004e 0D4B     		ldr	r3, .L2182
 30259 0050 1868     		ldr	r0, [r3]
 30260 0052 C568     		ldr	r5, [r0, #12]
 30261              		.loc 1 14788 29 view .LVU8766
 30262 0054 0123     		movs	r3, #1
 30263 0056 0DF10702 		add	r2, sp, #7
 30264 005a 1021     		movs	r1, #16
 30265 005c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30266 005e A847     		blx	r5
 30267              	.LVL3860:
 30268              		.loc 1 14788 26 view .LVU8767
ARM GAS  /tmp/ccOloYeZ.s 			page 857


 30269 0060 54FA80F0 		uxtab	r0, r4, r0
 30270 0064 44B2     		sxtb	r4, r0
 30271              	.LVL3861:
 30272              	.L2175:
14789:Core/Src/bno055.c ****                                                             BNO055_GYRO_HIGHRATE_INTR_REG,
14790:Core/Src/bno055.c ****                                                             &data_u8r,
14791:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14792:Core/Src/bno055.c ****             }
14793:Core/Src/bno055.c ****         }
14794:Core/Src/bno055.c ****         else
14795:Core/Src/bno055.c ****         {
14796:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14797:Core/Src/bno055.c ****         }
14798:Core/Src/bno055.c ****     }
14799:Core/Src/bno055.c **** 
14800:Core/Src/bno055.c ****     return com_rslt;
14801:Core/Src/bno055.c **** }
 30273              		.loc 1 14801 1 view .LVU8768
 30274 0066 2046     		mov	r0, r4
 30275 0068 02B0     		add	sp, sp, #8
 30276              		.cfi_remember_state
 30277              		.cfi_def_cfa_offset 16
 30278              		@ sp needed
 30279 006a 70BD     		pop	{r4, r5, r6, pc}
 30280              	.LVL3862:
 30281              	.L2181:
 30282              		.cfi_restore_state
14776:Core/Src/bno055.c ****         }
 30283              		.loc 1 14776 13 is_stmt 1 view .LVU8769
14776:Core/Src/bno055.c ****         }
 30284              		.loc 1 14776 23 is_stmt 0 view .LVU8770
 30285 006c 0120     		movs	r0, #1
 30286              	.LVL3863:
14776:Core/Src/bno055.c ****         }
 30287              		.loc 1 14776 23 view .LVU8771
 30288 006e FFF7FEFF 		bl	bno055_write_page_id
 30289              	.LVL3864:
14778:Core/Src/bno055.c ****         {
 30290              		.loc 1 14778 9 is_stmt 1 view .LVU8772
14778:Core/Src/bno055.c ****         {
 30291              		.loc 1 14778 12 is_stmt 0 view .LVU8773
 30292 0072 0028     		cmp	r0, #0
 30293 0074 D6D0     		beq	.L2177
 30294 0076 D0E7     		b	.L2176
 30295              	.LVL3865:
 30296              	.L2178:
14767:Core/Src/bno055.c ****     }
 30297              		.loc 1 14767 16 view .LVU8774
 30298 0078 6FF07E04 		mvn	r4, #126
 30299 007c F3E7     		b	.L2175
 30300              	.LVL3866:
 30301              	.L2179:
14796:Core/Src/bno055.c ****         }
 30302              		.loc 1 14796 22 view .LVU8775
 30303 007e 4FF0FF34 		mov	r4, #-1
 30304 0082 F0E7     		b	.L2175
 30305              	.L2183:
ARM GAS  /tmp/ccOloYeZ.s 			page 858


 30306              		.align	2
 30307              	.L2182:
 30308 0084 00000000 		.word	p_bno055
 30309              		.cfi_endproc
 30310              	.LFE218:
 30312              		.section	.text.bno055_get_intr_accel_high_g,"ax",%progbits
 30313              		.align	1
 30314              		.global	bno055_get_intr_accel_high_g
 30315              		.syntax unified
 30316              		.thumb
 30317              		.thumb_func
 30319              	bno055_get_intr_accel_high_g:
 30320              	.LVL3867:
 30321              	.LFB219:
14802:Core/Src/bno055.c **** 
14803:Core/Src/bno055.c **** /*!
14804:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg interrupt
14805:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 5
14806:Core/Src/bno055.c ****  *
14807:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt
14808:Core/Src/bno055.c ****  *      accel_high_g_u8    | result
14809:Core/Src/bno055.c ****  *     --------------------  |------------
14810:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14811:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14812:Core/Src/bno055.c ****  *
14813:Core/Src/bno055.c ****  *  @return results of bus communication function
14814:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14815:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14816:Core/Src/bno055.c ****  *
14817:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
14818:Core/Src/bno055.c ****  *  configure the below settings by using
14819:Core/Src/bno055.c ****  *  the following APIs
14820:Core/Src/bno055.c ****  *
14821:Core/Src/bno055.c ****  *  Axis :
14822:Core/Src/bno055.c ****  *
14823:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14824:Core/Src/bno055.c ****  *
14825:Core/Src/bno055.c ****  *  Threshold :
14826:Core/Src/bno055.c ****  *
14827:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14828:Core/Src/bno055.c ****  *
14829:Core/Src/bno055.c ****  *  Duration :
14830:Core/Src/bno055.c ****  *
14831:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
14832:Core/Src/bno055.c ****  *
14833:Core/Src/bno055.c ****  */
14834:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_accel_high_g(u8 *accel_high_g_u8)
14835:Core/Src/bno055.c **** {
 30322              		.loc 1 14835 1 is_stmt 1 view -0
 30323              		.cfi_startproc
 30324              		@ args = 0, pretend = 0, frame = 8
 30325              		@ frame_needed = 0, uses_anonymous_args = 0
 30326              		.loc 1 14835 1 is_stmt 0 view .LVU8777
 30327 0000 30B5     		push	{r4, r5, lr}
 30328              		.cfi_def_cfa_offset 12
 30329              		.cfi_offset 4, -12
 30330              		.cfi_offset 5, -8
ARM GAS  /tmp/ccOloYeZ.s 			page 859


 30331              		.cfi_offset 14, -4
 30332 0002 83B0     		sub	sp, sp, #12
 30333              		.cfi_def_cfa_offset 24
14836:Core/Src/bno055.c ****     /* Variable used to return value of
14837:Core/Src/bno055.c ****      * communication routine*/
14838:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30334              		.loc 1 14838 5 is_stmt 1 view .LVU8778
 30335              	.LVL3868:
14839:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30336              		.loc 1 14839 5 view .LVU8779
 30337              		.loc 1 14839 8 is_stmt 0 view .LVU8780
 30338 0004 0023     		movs	r3, #0
 30339 0006 8DF80730 		strb	r3, [sp, #7]
14840:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30340              		.loc 1 14840 5 is_stmt 1 view .LVU8781
 30341              	.LVL3869:
14841:Core/Src/bno055.c **** 
14842:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14843:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30342              		.loc 1 14843 5 view .LVU8782
 30343              		.loc 1 14843 18 is_stmt 0 view .LVU8783
 30344 000a 144B     		ldr	r3, .L2192
 30345 000c 1B68     		ldr	r3, [r3]
 30346              		.loc 1 14843 8 view .LVU8784
 30347 000e F3B1     		cbz	r3, .L2188
 30348 0010 0446     		mov	r4, r0
14844:Core/Src/bno055.c ****     {
14845:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14846:Core/Src/bno055.c ****     }
14847:Core/Src/bno055.c ****     else
14848:Core/Src/bno055.c ****     {
14849:Core/Src/bno055.c ****         /*condition check for page, accel highg interrupt  is
14850:Core/Src/bno055.c ****          * available in the page one*/
14851:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30349              		.loc 1 14851 9 is_stmt 1 view .LVU8785
 30350              		.loc 1 14851 21 is_stmt 0 view .LVU8786
 30351 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30352              		.loc 1 14851 12 view .LVU8787
 30353 0014 012B     		cmp	r3, #1
 30354 0016 14D1     		bne	.L2191
 30355              	.LVL3870:
 30356              	.L2186:
14852:Core/Src/bno055.c ****         {
14853:Core/Src/bno055.c ****             /* Write page as one */
14854:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14855:Core/Src/bno055.c ****         }
14856:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30357              		.loc 1 14856 53 discriminator 1 view .LVU8788
 30358 0018 104B     		ldr	r3, .L2192
 30359 001a 1B68     		ldr	r3, [r3]
 30360 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30361              		.loc 1 14856 41 discriminator 1 view .LVU8789
 30362 001e 012B     		cmp	r3, #1
 30363 0020 18D1     		bne	.L2189
 30364              	.L2187:
14857:Core/Src/bno055.c ****         {
14858:Core/Src/bno055.c ****             /* Read the value of accel highg interrupt*/
ARM GAS  /tmp/ccOloYeZ.s 			page 860


14859:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30365              		.loc 1 14859 13 is_stmt 1 view .LVU8790
 30366              		.loc 1 14859 32 is_stmt 0 view .LVU8791
 30367 0022 0E4B     		ldr	r3, .L2192
 30368 0024 1868     		ldr	r0, [r3]
 30369 0026 0569     		ldr	r5, [r0, #16]
 30370              		.loc 1 14859 24 view .LVU8792
 30371 0028 0123     		movs	r3, #1
 30372 002a 0DF10702 		add	r2, sp, #7
 30373 002e 1021     		movs	r1, #16
 30374 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30375 0032 A847     		blx	r5
 30376              	.LVL3871:
14860:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_INTR_REG,
14861:Core/Src/bno055.c ****                                                       &data_u8r,
14862:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14863:Core/Src/bno055.c ****             *accel_high_g_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_INTR);
 30377              		.loc 1 14863 13 is_stmt 1 view .LVU8793
 30378              		.loc 1 14863 32 is_stmt 0 view .LVU8794
 30379 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30380 0038 C3F34013 		ubfx	r3, r3, #5, #1
 30381              		.loc 1 14863 30 view .LVU8795
 30382 003c 2370     		strb	r3, [r4]
 30383              	.LVL3872:
 30384              	.L2185:
14864:Core/Src/bno055.c ****         }
14865:Core/Src/bno055.c ****         else
14866:Core/Src/bno055.c ****         {
14867:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14868:Core/Src/bno055.c ****         }
14869:Core/Src/bno055.c ****     }
14870:Core/Src/bno055.c **** 
14871:Core/Src/bno055.c ****     return com_rslt;
14872:Core/Src/bno055.c **** }
 30385              		.loc 1 14872 1 view .LVU8796
 30386 003e 03B0     		add	sp, sp, #12
 30387              		.cfi_remember_state
 30388              		.cfi_def_cfa_offset 12
 30389              		@ sp needed
 30390 0040 30BD     		pop	{r4, r5, pc}
 30391              	.LVL3873:
 30392              	.L2191:
 30393              		.cfi_restore_state
14854:Core/Src/bno055.c ****         }
 30394              		.loc 1 14854 13 is_stmt 1 view .LVU8797
14854:Core/Src/bno055.c ****         }
 30395              		.loc 1 14854 23 is_stmt 0 view .LVU8798
 30396 0042 0120     		movs	r0, #1
 30397              	.LVL3874:
14854:Core/Src/bno055.c ****         }
 30398              		.loc 1 14854 23 view .LVU8799
 30399 0044 FFF7FEFF 		bl	bno055_write_page_id
 30400              	.LVL3875:
14856:Core/Src/bno055.c ****         {
 30401              		.loc 1 14856 9 is_stmt 1 view .LVU8800
14856:Core/Src/bno055.c ****         {
 30402              		.loc 1 14856 12 is_stmt 0 view .LVU8801
ARM GAS  /tmp/ccOloYeZ.s 			page 861


 30403 0048 0028     		cmp	r0, #0
 30404 004a EAD0     		beq	.L2187
 30405 004c E4E7     		b	.L2186
 30406              	.LVL3876:
 30407              	.L2188:
14845:Core/Src/bno055.c ****     }
 30408              		.loc 1 14845 16 view .LVU8802
 30409 004e 6FF07E00 		mvn	r0, #126
 30410              	.LVL3877:
14845:Core/Src/bno055.c ****     }
 30411              		.loc 1 14845 16 view .LVU8803
 30412 0052 F4E7     		b	.L2185
 30413              	.LVL3878:
 30414              	.L2189:
14867:Core/Src/bno055.c ****         }
 30415              		.loc 1 14867 22 view .LVU8804
 30416 0054 4FF0FF30 		mov	r0, #-1
 30417 0058 F1E7     		b	.L2185
 30418              	.L2193:
 30419 005a 00BF     		.align	2
 30420              	.L2192:
 30421 005c 00000000 		.word	p_bno055
 30422              		.cfi_endproc
 30423              	.LFE219:
 30425              		.section	.text.bno055_set_intr_accel_high_g,"ax",%progbits
 30426              		.align	1
 30427              		.global	bno055_set_intr_accel_high_g
 30428              		.syntax unified
 30429              		.thumb
 30430              		.thumb_func
 30432              	bno055_set_intr_accel_high_g:
 30433              	.LVL3879:
 30434              	.LFB220:
14873:Core/Src/bno055.c **** 
14874:Core/Src/bno055.c **** /*!
14875:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg interrupt
14876:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 5
14877:Core/Src/bno055.c ****  *
14878:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt
14879:Core/Src/bno055.c ****  *      accel_high_g_u8    | result
14880:Core/Src/bno055.c ****  *     --------------------  |------------
14881:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14882:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14883:Core/Src/bno055.c ****  *
14884:Core/Src/bno055.c ****  *  @return results of bus communication function
14885:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14886:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14887:Core/Src/bno055.c ****  *
14888:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
14889:Core/Src/bno055.c ****  *  configure the below settings by using
14890:Core/Src/bno055.c ****  *  the following APIs
14891:Core/Src/bno055.c ****  *
14892:Core/Src/bno055.c ****  *  Axis :
14893:Core/Src/bno055.c ****  *
14894:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14895:Core/Src/bno055.c ****  *
14896:Core/Src/bno055.c ****  *  Threshold :
ARM GAS  /tmp/ccOloYeZ.s 			page 862


14897:Core/Src/bno055.c ****  *
14898:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14899:Core/Src/bno055.c ****  *
14900:Core/Src/bno055.c ****  *  Duration :
14901:Core/Src/bno055.c ****  *
14902:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
14903:Core/Src/bno055.c ****  *
14904:Core/Src/bno055.c ****  */
14905:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_accel_high_g(u8 accel_high_g_u8)
14906:Core/Src/bno055.c **** {
 30435              		.loc 1 14906 1 is_stmt 1 view -0
 30436              		.cfi_startproc
 30437              		@ args = 0, pretend = 0, frame = 8
 30438              		@ frame_needed = 0, uses_anonymous_args = 0
 30439              		.loc 1 14906 1 is_stmt 0 view .LVU8806
 30440 0000 70B5     		push	{r4, r5, r6, lr}
 30441              		.cfi_def_cfa_offset 16
 30442              		.cfi_offset 4, -16
 30443              		.cfi_offset 5, -12
 30444              		.cfi_offset 6, -8
 30445              		.cfi_offset 14, -4
 30446 0002 82B0     		sub	sp, sp, #8
 30447              		.cfi_def_cfa_offset 24
14907:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30448              		.loc 1 14907 5 is_stmt 1 view .LVU8807
 30449              	.LVL3880:
14908:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30450              		.loc 1 14908 5 view .LVU8808
 30451              		.loc 1 14908 8 is_stmt 0 view .LVU8809
 30452 0004 0023     		movs	r3, #0
 30453 0006 8DF80730 		strb	r3, [sp, #7]
14909:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30454              		.loc 1 14909 5 is_stmt 1 view .LVU8810
 30455              	.LVL3881:
14910:Core/Src/bno055.c **** 
14911:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14912:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30456              		.loc 1 14912 5 view .LVU8811
 30457              		.loc 1 14912 18 is_stmt 0 view .LVU8812
 30458 000a 1E4B     		ldr	r3, .L2202
 30459 000c 1B68     		ldr	r3, [r3]
 30460              		.loc 1 14912 8 view .LVU8813
 30461 000e 002B     		cmp	r3, #0
 30462 0010 32D0     		beq	.L2198
 30463 0012 0546     		mov	r5, r0
14913:Core/Src/bno055.c ****     {
14914:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14915:Core/Src/bno055.c ****     }
14916:Core/Src/bno055.c ****     else
14917:Core/Src/bno055.c ****     {
14918:Core/Src/bno055.c ****         /*condition check for page, accel highg interrupt is
14919:Core/Src/bno055.c ****          * available in the page one*/
14920:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30464              		.loc 1 14920 9 is_stmt 1 view .LVU8814
 30465              		.loc 1 14920 21 is_stmt 0 view .LVU8815
 30466 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30467              		.loc 1 14920 12 view .LVU8816
ARM GAS  /tmp/ccOloYeZ.s 			page 863


 30468 0016 012B     		cmp	r3, #1
 30469 0018 28D1     		bne	.L2201
 30470              	.LVL3882:
 30471              	.L2196:
14921:Core/Src/bno055.c ****         {
14922:Core/Src/bno055.c ****             /* Write page as one */
14923:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14924:Core/Src/bno055.c ****         }
14925:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30472              		.loc 1 14925 53 discriminator 1 view .LVU8817
 30473 001a 1A4B     		ldr	r3, .L2202
 30474 001c 1B68     		ldr	r3, [r3]
 30475 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30476              		.loc 1 14925 41 discriminator 1 view .LVU8818
 30477 0020 012B     		cmp	r3, #1
 30478 0022 2CD1     		bne	.L2199
 30479              	.L2197:
14926:Core/Src/bno055.c ****         {
14927:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30480              		.loc 1 14927 13 is_stmt 1 view .LVU8819
 30481              		.loc 1 14927 32 is_stmt 0 view .LVU8820
 30482 0024 174B     		ldr	r3, .L2202
 30483 0026 1C68     		ldr	r4, [r3]
 30484 0028 2669     		ldr	r6, [r4, #16]
 30485              		.loc 1 14927 24 view .LVU8821
 30486 002a 0123     		movs	r3, #1
 30487 002c 0DF10702 		add	r2, sp, #7
 30488 0030 1021     		movs	r1, #16
 30489 0032 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 30490 0034 B047     		blx	r6
 30491              	.LVL3883:
14928:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_INTR_REG,
14929:Core/Src/bno055.c ****                                                       &data_u8r,
14930:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14931:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 30492              		.loc 1 14931 13 is_stmt 1 view .LVU8822
 30493              		.loc 1 14931 16 is_stmt 0 view .LVU8823
 30494 0036 0446     		mov	r4, r0
 30495 0038 A8B9     		cbnz	r0, .L2195
14932:Core/Src/bno055.c ****             {
14933:Core/Src/bno055.c ****                 /* Write the value of accel highg interrupt*/
14934:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_INTR, accel_high_g_u8)
 30496              		.loc 1 14934 17 is_stmt 1 view .LVU8824
 30497              		.loc 1 14934 28 is_stmt 0 view .LVU8825
 30498 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30499 003e 6801     		lsls	r0, r5, #5
 30500              	.LVL3884:
 30501              		.loc 1 14934 28 view .LVU8826
 30502 0040 00F02000 		and	r0, r0, #32
 30503 0044 23F02003 		bic	r3, r3, #32
 30504 0048 0343     		orrs	r3, r3, r0
 30505              		.loc 1 14934 26 view .LVU8827
 30506 004a 8DF80730 		strb	r3, [sp, #7]
14935:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 30507              		.loc 1 14935 17 is_stmt 1 view .LVU8828
 30508              		.loc 1 14935 37 is_stmt 0 view .LVU8829
 30509 004e 0D4B     		ldr	r3, .L2202
ARM GAS  /tmp/ccOloYeZ.s 			page 864


 30510 0050 1868     		ldr	r0, [r3]
 30511 0052 C568     		ldr	r5, [r0, #12]
 30512              		.loc 1 14935 29 view .LVU8830
 30513 0054 0123     		movs	r3, #1
 30514 0056 0DF10702 		add	r2, sp, #7
 30515 005a 1021     		movs	r1, #16
 30516 005c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30517 005e A847     		blx	r5
 30518              	.LVL3885:
 30519              		.loc 1 14935 26 view .LVU8831
 30520 0060 54FA80F0 		uxtab	r0, r4, r0
 30521 0064 44B2     		sxtb	r4, r0
 30522              	.LVL3886:
 30523              	.L2195:
14936:Core/Src/bno055.c ****                                                             BNO055_ACCEL_HIGH_G_INTR_REG,
14937:Core/Src/bno055.c ****                                                             &data_u8r,
14938:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14939:Core/Src/bno055.c ****             }
14940:Core/Src/bno055.c ****         }
14941:Core/Src/bno055.c ****         else
14942:Core/Src/bno055.c ****         {
14943:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14944:Core/Src/bno055.c ****         }
14945:Core/Src/bno055.c ****     }
14946:Core/Src/bno055.c **** 
14947:Core/Src/bno055.c ****     return com_rslt;
14948:Core/Src/bno055.c **** }
 30524              		.loc 1 14948 1 view .LVU8832
 30525 0066 2046     		mov	r0, r4
 30526 0068 02B0     		add	sp, sp, #8
 30527              		.cfi_remember_state
 30528              		.cfi_def_cfa_offset 16
 30529              		@ sp needed
 30530 006a 70BD     		pop	{r4, r5, r6, pc}
 30531              	.LVL3887:
 30532              	.L2201:
 30533              		.cfi_restore_state
14923:Core/Src/bno055.c ****         }
 30534              		.loc 1 14923 13 is_stmt 1 view .LVU8833
14923:Core/Src/bno055.c ****         }
 30535              		.loc 1 14923 23 is_stmt 0 view .LVU8834
 30536 006c 0120     		movs	r0, #1
 30537              	.LVL3888:
14923:Core/Src/bno055.c ****         }
 30538              		.loc 1 14923 23 view .LVU8835
 30539 006e FFF7FEFF 		bl	bno055_write_page_id
 30540              	.LVL3889:
14925:Core/Src/bno055.c ****         {
 30541              		.loc 1 14925 9 is_stmt 1 view .LVU8836
14925:Core/Src/bno055.c ****         {
 30542              		.loc 1 14925 12 is_stmt 0 view .LVU8837
 30543 0072 0028     		cmp	r0, #0
 30544 0074 D6D0     		beq	.L2197
 30545 0076 D0E7     		b	.L2196
 30546              	.LVL3890:
 30547              	.L2198:
14914:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccOloYeZ.s 			page 865


 30548              		.loc 1 14914 16 view .LVU8838
 30549 0078 6FF07E04 		mvn	r4, #126
 30550 007c F3E7     		b	.L2195
 30551              	.LVL3891:
 30552              	.L2199:
14943:Core/Src/bno055.c ****         }
 30553              		.loc 1 14943 22 view .LVU8839
 30554 007e 4FF0FF34 		mov	r4, #-1
 30555 0082 F0E7     		b	.L2195
 30556              	.L2203:
 30557              		.align	2
 30558              	.L2202:
 30559 0084 00000000 		.word	p_bno055
 30560              		.cfi_endproc
 30561              	.LFE220:
 30563              		.section	.text.bno055_get_intr_accel_any_motion,"ax",%progbits
 30564              		.align	1
 30565              		.global	bno055_get_intr_accel_any_motion
 30566              		.syntax unified
 30567              		.thumb
 30568              		.thumb_func
 30570              	bno055_get_intr_accel_any_motion:
 30571              	.LVL3892:
 30572              	.LFB221:
14949:Core/Src/bno055.c **** 
14950:Core/Src/bno055.c **** /*!
14951:Core/Src/bno055.c ****  *  @brief This API used to read the accel anymotion interrupt
14952:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 6
14953:Core/Src/bno055.c ****  *
14954:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt
14955:Core/Src/bno055.c ****  *  accel_any_motion_u8    | result
14956:Core/Src/bno055.c ****  *     --------------------  |------------
14957:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14958:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14959:Core/Src/bno055.c ****  *
14960:Core/Src/bno055.c ****  *  @return results of bus communication function
14961:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14962:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14963:Core/Src/bno055.c ****  *
14964:Core/Src/bno055.c ****  *  @note While enabling the accel anymotion interrupt
14965:Core/Src/bno055.c ****  *  configure the following settings
14966:Core/Src/bno055.c ****  *
14967:Core/Src/bno055.c ****  *  Axis:
14968:Core/Src/bno055.c ****  *
14969:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
14970:Core/Src/bno055.c ****  *
14971:Core/Src/bno055.c ****  *  Duration:
14972:Core/Src/bno055.c ****  *
14973:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_durn()
14974:Core/Src/bno055.c ****  *
14975:Core/Src/bno055.c ****  * Threshold:
14976:Core/Src/bno055.c ****  *
14977:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_thres()
14978:Core/Src/bno055.c ****  *
14979:Core/Src/bno055.c ****  */
14980:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_accel_any_motion(u8 *accel_any_motion_u8)
14981:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccOloYeZ.s 			page 866


 30573              		.loc 1 14981 1 is_stmt 1 view -0
 30574              		.cfi_startproc
 30575              		@ args = 0, pretend = 0, frame = 8
 30576              		@ frame_needed = 0, uses_anonymous_args = 0
 30577              		.loc 1 14981 1 is_stmt 0 view .LVU8841
 30578 0000 30B5     		push	{r4, r5, lr}
 30579              		.cfi_def_cfa_offset 12
 30580              		.cfi_offset 4, -12
 30581              		.cfi_offset 5, -8
 30582              		.cfi_offset 14, -4
 30583 0002 83B0     		sub	sp, sp, #12
 30584              		.cfi_def_cfa_offset 24
14982:Core/Src/bno055.c ****     /* Variable used to return value of
14983:Core/Src/bno055.c ****      * communication routine*/
14984:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30585              		.loc 1 14984 5 is_stmt 1 view .LVU8842
 30586              	.LVL3893:
14985:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30587              		.loc 1 14985 5 view .LVU8843
 30588              		.loc 1 14985 8 is_stmt 0 view .LVU8844
 30589 0004 0023     		movs	r3, #0
 30590 0006 8DF80730 		strb	r3, [sp, #7]
14986:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30591              		.loc 1 14986 5 is_stmt 1 view .LVU8845
 30592              	.LVL3894:
14987:Core/Src/bno055.c **** 
14988:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14989:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30593              		.loc 1 14989 5 view .LVU8846
 30594              		.loc 1 14989 18 is_stmt 0 view .LVU8847
 30595 000a 144B     		ldr	r3, .L2212
 30596 000c 1B68     		ldr	r3, [r3]
 30597              		.loc 1 14989 8 view .LVU8848
 30598 000e F3B1     		cbz	r3, .L2208
 30599 0010 0446     		mov	r4, r0
14990:Core/Src/bno055.c ****     {
14991:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14992:Core/Src/bno055.c ****     }
14993:Core/Src/bno055.c ****     else
14994:Core/Src/bno055.c ****     {
14995:Core/Src/bno055.c ****         /*condition check for page, accel anymotion interrupt  is
14996:Core/Src/bno055.c ****          * available in the page one*/
14997:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30600              		.loc 1 14997 9 is_stmt 1 view .LVU8849
 30601              		.loc 1 14997 21 is_stmt 0 view .LVU8850
 30602 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30603              		.loc 1 14997 12 view .LVU8851
 30604 0014 012B     		cmp	r3, #1
 30605 0016 14D1     		bne	.L2211
 30606              	.LVL3895:
 30607              	.L2206:
14998:Core/Src/bno055.c ****         {
14999:Core/Src/bno055.c ****             /* Write page as one */
15000:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15001:Core/Src/bno055.c ****         }
15002:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30608              		.loc 1 15002 53 discriminator 1 view .LVU8852
ARM GAS  /tmp/ccOloYeZ.s 			page 867


 30609 0018 104B     		ldr	r3, .L2212
 30610 001a 1B68     		ldr	r3, [r3]
 30611 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30612              		.loc 1 15002 41 discriminator 1 view .LVU8853
 30613 001e 012B     		cmp	r3, #1
 30614 0020 18D1     		bne	.L2209
 30615              	.L2207:
15003:Core/Src/bno055.c ****         {
15004:Core/Src/bno055.c ****             /* Read the value of accel anymotion interrupt */
15005:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30616              		.loc 1 15005 13 is_stmt 1 view .LVU8854
 30617              		.loc 1 15005 32 is_stmt 0 view .LVU8855
 30618 0022 0E4B     		ldr	r3, .L2212
 30619 0024 1868     		ldr	r0, [r3]
 30620 0026 0569     		ldr	r5, [r0, #16]
 30621              		.loc 1 15005 24 view .LVU8856
 30622 0028 0123     		movs	r3, #1
 30623 002a 0DF10702 		add	r2, sp, #7
 30624 002e 1021     		movs	r1, #16
 30625 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30626 0032 A847     		blx	r5
 30627              	.LVL3896:
15006:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_INTR_REG,
15007:Core/Src/bno055.c ****                                                       &data_u8r,
15008:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15009:Core/Src/bno055.c ****             *accel_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_INTR);
 30628              		.loc 1 15009 13 is_stmt 1 view .LVU8857
 30629              		.loc 1 15009 36 is_stmt 0 view .LVU8858
 30630 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30631 0038 C3F38013 		ubfx	r3, r3, #6, #1
 30632              		.loc 1 15009 34 view .LVU8859
 30633 003c 2370     		strb	r3, [r4]
 30634              	.LVL3897:
 30635              	.L2205:
15010:Core/Src/bno055.c ****         }
15011:Core/Src/bno055.c ****         else
15012:Core/Src/bno055.c ****         {
15013:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15014:Core/Src/bno055.c ****         }
15015:Core/Src/bno055.c ****     }
15016:Core/Src/bno055.c **** 
15017:Core/Src/bno055.c ****     return com_rslt;
15018:Core/Src/bno055.c **** }
 30636              		.loc 1 15018 1 view .LVU8860
 30637 003e 03B0     		add	sp, sp, #12
 30638              		.cfi_remember_state
 30639              		.cfi_def_cfa_offset 12
 30640              		@ sp needed
 30641 0040 30BD     		pop	{r4, r5, pc}
 30642              	.LVL3898:
 30643              	.L2211:
 30644              		.cfi_restore_state
15000:Core/Src/bno055.c ****         }
 30645              		.loc 1 15000 13 is_stmt 1 view .LVU8861
15000:Core/Src/bno055.c ****         }
 30646              		.loc 1 15000 23 is_stmt 0 view .LVU8862
 30647 0042 0120     		movs	r0, #1
ARM GAS  /tmp/ccOloYeZ.s 			page 868


 30648              	.LVL3899:
15000:Core/Src/bno055.c ****         }
 30649              		.loc 1 15000 23 view .LVU8863
 30650 0044 FFF7FEFF 		bl	bno055_write_page_id
 30651              	.LVL3900:
15002:Core/Src/bno055.c ****         {
 30652              		.loc 1 15002 9 is_stmt 1 view .LVU8864
15002:Core/Src/bno055.c ****         {
 30653              		.loc 1 15002 12 is_stmt 0 view .LVU8865
 30654 0048 0028     		cmp	r0, #0
 30655 004a EAD0     		beq	.L2207
 30656 004c E4E7     		b	.L2206
 30657              	.LVL3901:
 30658              	.L2208:
14991:Core/Src/bno055.c ****     }
 30659              		.loc 1 14991 16 view .LVU8866
 30660 004e 6FF07E00 		mvn	r0, #126
 30661              	.LVL3902:
14991:Core/Src/bno055.c ****     }
 30662              		.loc 1 14991 16 view .LVU8867
 30663 0052 F4E7     		b	.L2205
 30664              	.LVL3903:
 30665              	.L2209:
15013:Core/Src/bno055.c ****         }
 30666              		.loc 1 15013 22 view .LVU8868
 30667 0054 4FF0FF30 		mov	r0, #-1
 30668 0058 F1E7     		b	.L2205
 30669              	.L2213:
 30670 005a 00BF     		.align	2
 30671              	.L2212:
 30672 005c 00000000 		.word	p_bno055
 30673              		.cfi_endproc
 30674              	.LFE221:
 30676              		.section	.text.bno055_set_intr_accel_any_motion,"ax",%progbits
 30677              		.align	1
 30678              		.global	bno055_set_intr_accel_any_motion
 30679              		.syntax unified
 30680              		.thumb
 30681              		.thumb_func
 30683              	bno055_set_intr_accel_any_motion:
 30684              	.LVL3904:
 30685              	.LFB222:
15019:Core/Src/bno055.c **** 
15020:Core/Src/bno055.c **** /*!
15021:Core/Src/bno055.c ****  *  @brief This API used to write the accel anymotion interrupt
15022:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 6
15023:Core/Src/bno055.c ****  *
15024:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt
15025:Core/Src/bno055.c ****  *  accel_any_motion_u8    | result
15026:Core/Src/bno055.c ****  *     --------------------  |------------
15027:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
15028:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
15029:Core/Src/bno055.c ****  *
15030:Core/Src/bno055.c ****  *  @return results of bus communication function
15031:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15032:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15033:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 869


15034:Core/Src/bno055.c ****  *  @note While enabling the accel anymotion interrupt
15035:Core/Src/bno055.c ****  *  configure the following settings
15036:Core/Src/bno055.c ****  *
15037:Core/Src/bno055.c ****  *  Axis:
15038:Core/Src/bno055.c ****  *
15039:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
15040:Core/Src/bno055.c ****  *
15041:Core/Src/bno055.c ****  *  Duration:
15042:Core/Src/bno055.c ****  *
15043:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_durn()
15044:Core/Src/bno055.c ****  *
15045:Core/Src/bno055.c ****  *  Threshold:
15046:Core/Src/bno055.c ****  *
15047:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_thres()
15048:Core/Src/bno055.c ****  *
15049:Core/Src/bno055.c ****  */
15050:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_accel_any_motion(u8 accel_any_motion_u8)
15051:Core/Src/bno055.c **** {
 30686              		.loc 1 15051 1 is_stmt 1 view -0
 30687              		.cfi_startproc
 30688              		@ args = 0, pretend = 0, frame = 8
 30689              		@ frame_needed = 0, uses_anonymous_args = 0
 30690              		.loc 1 15051 1 is_stmt 0 view .LVU8870
 30691 0000 70B5     		push	{r4, r5, r6, lr}
 30692              		.cfi_def_cfa_offset 16
 30693              		.cfi_offset 4, -16
 30694              		.cfi_offset 5, -12
 30695              		.cfi_offset 6, -8
 30696              		.cfi_offset 14, -4
 30697 0002 82B0     		sub	sp, sp, #8
 30698              		.cfi_def_cfa_offset 24
15052:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30699              		.loc 1 15052 5 is_stmt 1 view .LVU8871
 30700              	.LVL3905:
15053:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30701              		.loc 1 15053 5 view .LVU8872
 30702              		.loc 1 15053 8 is_stmt 0 view .LVU8873
 30703 0004 0023     		movs	r3, #0
 30704 0006 8DF80730 		strb	r3, [sp, #7]
15054:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30705              		.loc 1 15054 5 is_stmt 1 view .LVU8874
 30706              	.LVL3906:
15055:Core/Src/bno055.c **** 
15056:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15057:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30707              		.loc 1 15057 5 view .LVU8875
 30708              		.loc 1 15057 18 is_stmt 0 view .LVU8876
 30709 000a 1E4B     		ldr	r3, .L2222
 30710 000c 1B68     		ldr	r3, [r3]
 30711              		.loc 1 15057 8 view .LVU8877
 30712 000e 002B     		cmp	r3, #0
 30713 0010 32D0     		beq	.L2218
 30714 0012 0546     		mov	r5, r0
15058:Core/Src/bno055.c ****     {
15059:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15060:Core/Src/bno055.c ****     }
15061:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccOloYeZ.s 			page 870


15062:Core/Src/bno055.c ****     {
15063:Core/Src/bno055.c ****         /*condition check for page, accel range is
15064:Core/Src/bno055.c ****          * available in the page one*/
15065:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30715              		.loc 1 15065 9 is_stmt 1 view .LVU8878
 30716              		.loc 1 15065 21 is_stmt 0 view .LVU8879
 30717 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30718              		.loc 1 15065 12 view .LVU8880
 30719 0016 012B     		cmp	r3, #1
 30720 0018 28D1     		bne	.L2221
 30721              	.LVL3907:
 30722              	.L2216:
15066:Core/Src/bno055.c ****         {
15067:Core/Src/bno055.c ****             /* Write page as one */
15068:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15069:Core/Src/bno055.c ****         }
15070:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30723              		.loc 1 15070 53 discriminator 1 view .LVU8881
 30724 001a 1A4B     		ldr	r3, .L2222
 30725 001c 1B68     		ldr	r3, [r3]
 30726 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30727              		.loc 1 15070 41 discriminator 1 view .LVU8882
 30728 0020 012B     		cmp	r3, #1
 30729 0022 2CD1     		bne	.L2219
 30730              	.L2217:
15071:Core/Src/bno055.c ****         {
15072:Core/Src/bno055.c ****             /* Write the value of accel anymotion interrupt */
15073:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30731              		.loc 1 15073 13 is_stmt 1 view .LVU8883
 30732              		.loc 1 15073 32 is_stmt 0 view .LVU8884
 30733 0024 174B     		ldr	r3, .L2222
 30734 0026 1C68     		ldr	r4, [r3]
 30735 0028 2669     		ldr	r6, [r4, #16]
 30736              		.loc 1 15073 24 view .LVU8885
 30737 002a 0123     		movs	r3, #1
 30738 002c 0DF10702 		add	r2, sp, #7
 30739 0030 1021     		movs	r1, #16
 30740 0032 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 30741 0034 B047     		blx	r6
 30742              	.LVL3908:
15074:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_INTR_REG,
15075:Core/Src/bno055.c ****                                                       &data_u8r,
15076:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15077:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 30743              		.loc 1 15077 13 is_stmt 1 view .LVU8886
 30744              		.loc 1 15077 16 is_stmt 0 view .LVU8887
 30745 0036 0446     		mov	r4, r0
 30746 0038 A8B9     		cbnz	r0, .L2215
15078:Core/Src/bno055.c ****             {
15079:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_INTR, accel_any_mo
 30747              		.loc 1 15079 17 is_stmt 1 view .LVU8888
 30748              		.loc 1 15079 28 is_stmt 0 view .LVU8889
 30749 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30750 003e A801     		lsls	r0, r5, #6
 30751              	.LVL3909:
 30752              		.loc 1 15079 28 view .LVU8890
 30753 0040 00F04000 		and	r0, r0, #64
ARM GAS  /tmp/ccOloYeZ.s 			page 871


 30754 0044 23F04003 		bic	r3, r3, #64
 30755 0048 0343     		orrs	r3, r3, r0
 30756              		.loc 1 15079 26 view .LVU8891
 30757 004a 8DF80730 		strb	r3, [sp, #7]
15080:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 30758              		.loc 1 15080 17 is_stmt 1 view .LVU8892
 30759              		.loc 1 15080 37 is_stmt 0 view .LVU8893
 30760 004e 0D4B     		ldr	r3, .L2222
 30761 0050 1868     		ldr	r0, [r3]
 30762 0052 C568     		ldr	r5, [r0, #12]
 30763              		.loc 1 15080 29 view .LVU8894
 30764 0054 0123     		movs	r3, #1
 30765 0056 0DF10702 		add	r2, sp, #7
 30766 005a 1021     		movs	r1, #16
 30767 005c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30768 005e A847     		blx	r5
 30769              	.LVL3910:
 30770              		.loc 1 15080 26 view .LVU8895
 30771 0060 54FA80F0 		uxtab	r0, r4, r0
 30772 0064 44B2     		sxtb	r4, r0
 30773              	.LVL3911:
 30774              	.L2215:
15081:Core/Src/bno055.c ****                                                             BNO055_ACCEL_ANY_MOTION_INTR_REG,
15082:Core/Src/bno055.c ****                                                             &data_u8r,
15083:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
15084:Core/Src/bno055.c ****             }
15085:Core/Src/bno055.c ****         }
15086:Core/Src/bno055.c ****         else
15087:Core/Src/bno055.c ****         {
15088:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15089:Core/Src/bno055.c ****         }
15090:Core/Src/bno055.c ****     }
15091:Core/Src/bno055.c **** 
15092:Core/Src/bno055.c ****     return com_rslt;
15093:Core/Src/bno055.c **** }
 30775              		.loc 1 15093 1 view .LVU8896
 30776 0066 2046     		mov	r0, r4
 30777 0068 02B0     		add	sp, sp, #8
 30778              		.cfi_remember_state
 30779              		.cfi_def_cfa_offset 16
 30780              		@ sp needed
 30781 006a 70BD     		pop	{r4, r5, r6, pc}
 30782              	.LVL3912:
 30783              	.L2221:
 30784              		.cfi_restore_state
15068:Core/Src/bno055.c ****         }
 30785              		.loc 1 15068 13 is_stmt 1 view .LVU8897
15068:Core/Src/bno055.c ****         }
 30786              		.loc 1 15068 23 is_stmt 0 view .LVU8898
 30787 006c 0120     		movs	r0, #1
 30788              	.LVL3913:
15068:Core/Src/bno055.c ****         }
 30789              		.loc 1 15068 23 view .LVU8899
 30790 006e FFF7FEFF 		bl	bno055_write_page_id
 30791              	.LVL3914:
15070:Core/Src/bno055.c ****         {
 30792              		.loc 1 15070 9 is_stmt 1 view .LVU8900
ARM GAS  /tmp/ccOloYeZ.s 			page 872


15070:Core/Src/bno055.c ****         {
 30793              		.loc 1 15070 12 is_stmt 0 view .LVU8901
 30794 0072 0028     		cmp	r0, #0
 30795 0074 D6D0     		beq	.L2217
 30796 0076 D0E7     		b	.L2216
 30797              	.LVL3915:
 30798              	.L2218:
15059:Core/Src/bno055.c ****     }
 30799              		.loc 1 15059 16 view .LVU8902
 30800 0078 6FF07E04 		mvn	r4, #126
 30801 007c F3E7     		b	.L2215
 30802              	.LVL3916:
 30803              	.L2219:
15088:Core/Src/bno055.c ****         }
 30804              		.loc 1 15088 22 view .LVU8903
 30805 007e 4FF0FF34 		mov	r4, #-1
 30806 0082 F0E7     		b	.L2215
 30807              	.L2223:
 30808              		.align	2
 30809              	.L2222:
 30810 0084 00000000 		.word	p_bno055
 30811              		.cfi_endproc
 30812              	.LFE222:
 30814              		.section	.text.bno055_get_intr_accel_no_motion,"ax",%progbits
 30815              		.align	1
 30816              		.global	bno055_get_intr_accel_no_motion
 30817              		.syntax unified
 30818              		.thumb
 30819              		.thumb_func
 30821              	bno055_get_intr_accel_no_motion:
 30822              	.LVL3917:
 30823              	.LFB223:
15094:Core/Src/bno055.c **** 
15095:Core/Src/bno055.c **** /*!
15096:Core/Src/bno055.c ****  *  @brief This API used to read the accel nomotion interrupt
15097:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 6
15098:Core/Src/bno055.c ****  *
15099:Core/Src/bno055.c ****  *  @param accel_nomotion_u8 : The value of accel nomotion interrupt
15100:Core/Src/bno055.c ****  *    accel_nomotion_u8    | result
15101:Core/Src/bno055.c ****  *     --------------------  |------------
15102:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
15103:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
15104:Core/Src/bno055.c ****  *
15105:Core/Src/bno055.c ****  *  @return results of bus communication function
15106:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15107:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15108:Core/Src/bno055.c ****  *
15109:Core/Src/bno055.c ****  *  @note While enabling the accel nomotion interrupt
15110:Core/Src/bno055.c ****  *  configure the following settings
15111:Core/Src/bno055.c ****  *
15112:Core/Src/bno055.c ****  *  Axis:
15113:Core/Src/bno055.c ****  *
15114:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
15115:Core/Src/bno055.c ****  *
15116:Core/Src/bno055.c ****  *  Threshold :
15117:Core/Src/bno055.c ****  *
15118:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_thres()
ARM GAS  /tmp/ccOloYeZ.s 			page 873


15119:Core/Src/bno055.c ****  *
15120:Core/Src/bno055.c ****  *  Duration :
15121:Core/Src/bno055.c ****  *
15122:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_durn()
15123:Core/Src/bno055.c ****  *
15124:Core/Src/bno055.c ****  *  Slow/no motion enable:
15125:Core/Src/bno055.c ****  *
15126:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_enable()
15127:Core/Src/bno055.c ****  *
15128:Core/Src/bno055.c ****  */
15129:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_accel_no_motion(u8 *accel_nomotion_u8)
15130:Core/Src/bno055.c **** {
 30824              		.loc 1 15130 1 is_stmt 1 view -0
 30825              		.cfi_startproc
 30826              		@ args = 0, pretend = 0, frame = 8
 30827              		@ frame_needed = 0, uses_anonymous_args = 0
 30828              		.loc 1 15130 1 is_stmt 0 view .LVU8905
 30829 0000 30B5     		push	{r4, r5, lr}
 30830              		.cfi_def_cfa_offset 12
 30831              		.cfi_offset 4, -12
 30832              		.cfi_offset 5, -8
 30833              		.cfi_offset 14, -4
 30834 0002 83B0     		sub	sp, sp, #12
 30835              		.cfi_def_cfa_offset 24
15131:Core/Src/bno055.c ****     /* Variable used to return value of
15132:Core/Src/bno055.c ****      * communication routine*/
15133:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30836              		.loc 1 15133 5 is_stmt 1 view .LVU8906
 30837              	.LVL3918:
15134:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30838              		.loc 1 15134 5 view .LVU8907
 30839              		.loc 1 15134 8 is_stmt 0 view .LVU8908
 30840 0004 0023     		movs	r3, #0
 30841 0006 8DF80730 		strb	r3, [sp, #7]
15135:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30842              		.loc 1 15135 5 is_stmt 1 view .LVU8909
 30843              	.LVL3919:
15136:Core/Src/bno055.c **** 
15137:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15138:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30844              		.loc 1 15138 5 view .LVU8910
 30845              		.loc 1 15138 18 is_stmt 0 view .LVU8911
 30846 000a 134B     		ldr	r3, .L2232
 30847 000c 1B68     		ldr	r3, [r3]
 30848              		.loc 1 15138 8 view .LVU8912
 30849 000e EBB1     		cbz	r3, .L2228
 30850 0010 0446     		mov	r4, r0
15139:Core/Src/bno055.c ****     {
15140:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15141:Core/Src/bno055.c ****     }
15142:Core/Src/bno055.c ****     else
15143:Core/Src/bno055.c ****     {
15144:Core/Src/bno055.c ****         /*condition check for page, accel nomotion interrupt is
15145:Core/Src/bno055.c ****          * available in the page one*/
15146:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30851              		.loc 1 15146 9 is_stmt 1 view .LVU8913
 30852              		.loc 1 15146 21 is_stmt 0 view .LVU8914
ARM GAS  /tmp/ccOloYeZ.s 			page 874


 30853 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30854              		.loc 1 15146 12 view .LVU8915
 30855 0014 012B     		cmp	r3, #1
 30856 0016 13D1     		bne	.L2231
 30857              	.LVL3920:
 30858              	.L2226:
15147:Core/Src/bno055.c ****         {
15148:Core/Src/bno055.c ****             /* Write page as one */
15149:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15150:Core/Src/bno055.c ****         }
15151:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30859              		.loc 1 15151 53 discriminator 1 view .LVU8916
 30860 0018 0F4B     		ldr	r3, .L2232
 30861 001a 1B68     		ldr	r3, [r3]
 30862 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30863              		.loc 1 15151 41 discriminator 1 view .LVU8917
 30864 001e 012B     		cmp	r3, #1
 30865 0020 17D1     		bne	.L2229
 30866              	.L2227:
15152:Core/Src/bno055.c ****         {
15153:Core/Src/bno055.c ****             /* Read the value of accel nomotion interrupt*/
15154:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30867              		.loc 1 15154 13 is_stmt 1 view .LVU8918
 30868              		.loc 1 15154 32 is_stmt 0 view .LVU8919
 30869 0022 0D4B     		ldr	r3, .L2232
 30870 0024 1868     		ldr	r0, [r3]
 30871 0026 0569     		ldr	r5, [r0, #16]
 30872              		.loc 1 15154 24 view .LVU8920
 30873 0028 0123     		movs	r3, #1
 30874 002a 0DF10702 		add	r2, sp, #7
 30875 002e 1021     		movs	r1, #16
 30876 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30877 0032 A847     		blx	r5
 30878              	.LVL3921:
15155:Core/Src/bno055.c ****                                                       BNO055_ACCEL_NO_MOTION_INTR_REG,
15156:Core/Src/bno055.c ****                                                       &data_u8r,
15157:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15158:Core/Src/bno055.c ****             *accel_nomotion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_NO_MOTION_INTR);
 30879              		.loc 1 15158 13 is_stmt 1 view .LVU8921
 30880              		.loc 1 15158 34 is_stmt 0 view .LVU8922
 30881 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30882 0038 DB09     		lsrs	r3, r3, #7
 30883              		.loc 1 15158 32 view .LVU8923
 30884 003a 2370     		strb	r3, [r4]
 30885              	.LVL3922:
 30886              	.L2225:
15159:Core/Src/bno055.c ****         }
15160:Core/Src/bno055.c ****         else
15161:Core/Src/bno055.c ****         {
15162:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15163:Core/Src/bno055.c ****         }
15164:Core/Src/bno055.c ****     }
15165:Core/Src/bno055.c **** 
15166:Core/Src/bno055.c ****     return com_rslt;
15167:Core/Src/bno055.c **** }
 30887              		.loc 1 15167 1 view .LVU8924
 30888 003c 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccOloYeZ.s 			page 875


 30889              		.cfi_remember_state
 30890              		.cfi_def_cfa_offset 12
 30891              		@ sp needed
 30892 003e 30BD     		pop	{r4, r5, pc}
 30893              	.LVL3923:
 30894              	.L2231:
 30895              		.cfi_restore_state
15149:Core/Src/bno055.c ****         }
 30896              		.loc 1 15149 13 is_stmt 1 view .LVU8925
15149:Core/Src/bno055.c ****         }
 30897              		.loc 1 15149 23 is_stmt 0 view .LVU8926
 30898 0040 0120     		movs	r0, #1
 30899              	.LVL3924:
15149:Core/Src/bno055.c ****         }
 30900              		.loc 1 15149 23 view .LVU8927
 30901 0042 FFF7FEFF 		bl	bno055_write_page_id
 30902              	.LVL3925:
15151:Core/Src/bno055.c ****         {
 30903              		.loc 1 15151 9 is_stmt 1 view .LVU8928
15151:Core/Src/bno055.c ****         {
 30904              		.loc 1 15151 12 is_stmt 0 view .LVU8929
 30905 0046 0028     		cmp	r0, #0
 30906 0048 EBD0     		beq	.L2227
 30907 004a E5E7     		b	.L2226
 30908              	.LVL3926:
 30909              	.L2228:
15140:Core/Src/bno055.c ****     }
 30910              		.loc 1 15140 16 view .LVU8930
 30911 004c 6FF07E00 		mvn	r0, #126
 30912              	.LVL3927:
15140:Core/Src/bno055.c ****     }
 30913              		.loc 1 15140 16 view .LVU8931
 30914 0050 F4E7     		b	.L2225
 30915              	.LVL3928:
 30916              	.L2229:
15162:Core/Src/bno055.c ****         }
 30917              		.loc 1 15162 22 view .LVU8932
 30918 0052 4FF0FF30 		mov	r0, #-1
 30919 0056 F1E7     		b	.L2225
 30920              	.L2233:
 30921              		.align	2
 30922              	.L2232:
 30923 0058 00000000 		.word	p_bno055
 30924              		.cfi_endproc
 30925              	.LFE223:
 30927              		.section	.text.bno055_set_intr_accel_no_motion,"ax",%progbits
 30928              		.align	1
 30929              		.global	bno055_set_intr_accel_no_motion
 30930              		.syntax unified
 30931              		.thumb
 30932              		.thumb_func
 30934              	bno055_set_intr_accel_no_motion:
 30935              	.LVL3929:
 30936              	.LFB224:
15168:Core/Src/bno055.c **** 
15169:Core/Src/bno055.c **** /*!
15170:Core/Src/bno055.c ****  *  @brief This API used to write the accel nomotion interrupt
ARM GAS  /tmp/ccOloYeZ.s 			page 876


15171:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 6
15172:Core/Src/bno055.c ****  *
15173:Core/Src/bno055.c ****  *  @param accel_nomotion_u8 : The value of accel nomotion interrupt
15174:Core/Src/bno055.c ****  *    accel_nomotion_u8    | result
15175:Core/Src/bno055.c ****  *     --------------------  |------------
15176:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
15177:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
15178:Core/Src/bno055.c ****  *
15179:Core/Src/bno055.c ****  *  @return results of bus communication function
15180:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15181:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15182:Core/Src/bno055.c ****  *
15183:Core/Src/bno055.c ****  *  @note While enabling the accel nomotion interrupt
15184:Core/Src/bno055.c ****  *  configure the following settings
15185:Core/Src/bno055.c ****  *
15186:Core/Src/bno055.c ****  *  Axis:
15187:Core/Src/bno055.c ****  *
15188:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
15189:Core/Src/bno055.c ****  *
15190:Core/Src/bno055.c ****  *  Threshold :
15191:Core/Src/bno055.c ****  *
15192:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_thres()
15193:Core/Src/bno055.c ****  *
15194:Core/Src/bno055.c ****  *  Duration :
15195:Core/Src/bno055.c ****  *
15196:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_durn()
15197:Core/Src/bno055.c ****  *
15198:Core/Src/bno055.c ****  *  Slow/no motion enable:
15199:Core/Src/bno055.c ****  *
15200:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_enable()
15201:Core/Src/bno055.c ****  *
15202:Core/Src/bno055.c ****  */
15203:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_accel_no_motion(u8 accel_nomotion_u8)
15204:Core/Src/bno055.c **** {
 30937              		.loc 1 15204 1 is_stmt 1 view -0
 30938              		.cfi_startproc
 30939              		@ args = 0, pretend = 0, frame = 8
 30940              		@ frame_needed = 0, uses_anonymous_args = 0
 30941              		.loc 1 15204 1 is_stmt 0 view .LVU8934
 30942 0000 30B5     		push	{r4, r5, lr}
 30943              		.cfi_def_cfa_offset 12
 30944              		.cfi_offset 4, -12
 30945              		.cfi_offset 5, -8
 30946              		.cfi_offset 14, -4
 30947 0002 83B0     		sub	sp, sp, #12
 30948              		.cfi_def_cfa_offset 24
15205:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30949              		.loc 1 15205 5 is_stmt 1 view .LVU8935
 30950              	.LVL3930:
15206:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30951              		.loc 1 15206 5 view .LVU8936
 30952              		.loc 1 15206 8 is_stmt 0 view .LVU8937
 30953 0004 0023     		movs	r3, #0
 30954 0006 8DF80730 		strb	r3, [sp, #7]
15207:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30955              		.loc 1 15207 5 is_stmt 1 view .LVU8938
 30956              	.LVL3931:
ARM GAS  /tmp/ccOloYeZ.s 			page 877


15208:Core/Src/bno055.c **** 
15209:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15210:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30957              		.loc 1 15210 5 view .LVU8939
 30958              		.loc 1 15210 18 is_stmt 0 view .LVU8940
 30959 000a 1D4B     		ldr	r3, .L2242
 30960 000c 1B68     		ldr	r3, [r3]
 30961              		.loc 1 15210 8 view .LVU8941
 30962 000e 002B     		cmp	r3, #0
 30963 0010 30D0     		beq	.L2238
 30964 0012 0446     		mov	r4, r0
15211:Core/Src/bno055.c ****     {
15212:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15213:Core/Src/bno055.c ****     }
15214:Core/Src/bno055.c ****     else
15215:Core/Src/bno055.c ****     {
15216:Core/Src/bno055.c ****         /*condition check for page,
15217:Core/Src/bno055.c ****          *  accel nomotion interrupt is
15218:Core/Src/bno055.c ****          *  available in the page one*/
15219:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30965              		.loc 1 15219 9 is_stmt 1 view .LVU8942
 30966              		.loc 1 15219 21 is_stmt 0 view .LVU8943
 30967 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30968              		.loc 1 15219 12 view .LVU8944
 30969 0016 012B     		cmp	r3, #1
 30970 0018 26D1     		bne	.L2241
 30971              	.LVL3932:
 30972              	.L2236:
15220:Core/Src/bno055.c ****         {
15221:Core/Src/bno055.c ****             /* Write page as one */
15222:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15223:Core/Src/bno055.c ****         }
15224:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30973              		.loc 1 15224 53 discriminator 1 view .LVU8945
 30974 001a 194B     		ldr	r3, .L2242
 30975 001c 1B68     		ldr	r3, [r3]
 30976 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30977              		.loc 1 15224 41 discriminator 1 view .LVU8946
 30978 0020 012B     		cmp	r3, #1
 30979 0022 2AD1     		bne	.L2239
 30980              	.L2237:
15225:Core/Src/bno055.c ****         {
15226:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30981              		.loc 1 15226 13 is_stmt 1 view .LVU8947
 30982              		.loc 1 15226 32 is_stmt 0 view .LVU8948
 30983 0024 164B     		ldr	r3, .L2242
 30984 0026 1868     		ldr	r0, [r3]
 30985 0028 0569     		ldr	r5, [r0, #16]
 30986              		.loc 1 15226 24 view .LVU8949
 30987 002a 0123     		movs	r3, #1
 30988 002c 0DF10702 		add	r2, sp, #7
 30989 0030 1021     		movs	r1, #16
 30990 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30991 0034 A847     		blx	r5
 30992              	.LVL3933:
15227:Core/Src/bno055.c ****                                                       BNO055_ACCEL_NO_MOTION_INTR_REG,
15228:Core/Src/bno055.c ****                                                       &data_u8r,
ARM GAS  /tmp/ccOloYeZ.s 			page 878


15229:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15230:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 30993              		.loc 1 15230 13 is_stmt 1 view .LVU8950
 30994              		.loc 1 15230 16 is_stmt 0 view .LVU8951
 30995 0036 0546     		mov	r5, r0
 30996 0038 98B9     		cbnz	r0, .L2235
15231:Core/Src/bno055.c ****             {
15232:Core/Src/bno055.c ****                 /* Write the value of
15233:Core/Src/bno055.c ****                  * accel nomotion interrupt */
15234:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_NO_MOTION_INTR, accel_nomotio
 30997              		.loc 1 15234 17 is_stmt 1 view .LVU8952
 30998              		.loc 1 15234 28 is_stmt 0 view .LVU8953
 30999 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31000 003e 03F07F03 		and	r3, r3, #127
 31001 0042 43EAC413 		orr	r3, r3, r4, lsl #7
 31002              		.loc 1 15234 26 view .LVU8954
 31003 0046 8DF80730 		strb	r3, [sp, #7]
15235:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 31004              		.loc 1 15235 17 is_stmt 1 view .LVU8955
 31005              		.loc 1 15235 37 is_stmt 0 view .LVU8956
 31006 004a 0D4B     		ldr	r3, .L2242
 31007 004c 1868     		ldr	r0, [r3]
 31008              	.LVL3934:
 31009              		.loc 1 15235 37 view .LVU8957
 31010 004e C468     		ldr	r4, [r0, #12]
 31011              		.loc 1 15235 29 view .LVU8958
 31012 0050 0123     		movs	r3, #1
 31013 0052 0DF10702 		add	r2, sp, #7
 31014 0056 1021     		movs	r1, #16
 31015 0058 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31016 005a A047     		blx	r4
 31017              	.LVL3935:
 31018              		.loc 1 15235 26 view .LVU8959
 31019 005c 55FA80F0 		uxtab	r0, r5, r0
 31020 0060 45B2     		sxtb	r5, r0
 31021              	.LVL3936:
 31022              	.L2235:
15236:Core/Src/bno055.c ****                                                             BNO055_ACCEL_NO_MOTION_INTR_REG,
15237:Core/Src/bno055.c ****                                                             &data_u8r,
15238:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
15239:Core/Src/bno055.c ****             }
15240:Core/Src/bno055.c ****         }
15241:Core/Src/bno055.c ****         else
15242:Core/Src/bno055.c ****         {
15243:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15244:Core/Src/bno055.c ****         }
15245:Core/Src/bno055.c ****     }
15246:Core/Src/bno055.c **** 
15247:Core/Src/bno055.c ****     return com_rslt;
15248:Core/Src/bno055.c **** }
 31023              		.loc 1 15248 1 view .LVU8960
 31024 0062 2846     		mov	r0, r5
 31025 0064 03B0     		add	sp, sp, #12
 31026              		.cfi_remember_state
 31027              		.cfi_def_cfa_offset 12
 31028              		@ sp needed
 31029 0066 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccOloYeZ.s 			page 879


 31030              	.LVL3937:
 31031              	.L2241:
 31032              		.cfi_restore_state
15222:Core/Src/bno055.c ****         }
 31033              		.loc 1 15222 13 is_stmt 1 view .LVU8961
15222:Core/Src/bno055.c ****         }
 31034              		.loc 1 15222 23 is_stmt 0 view .LVU8962
 31035 0068 0120     		movs	r0, #1
 31036              	.LVL3938:
15222:Core/Src/bno055.c ****         }
 31037              		.loc 1 15222 23 view .LVU8963
 31038 006a FFF7FEFF 		bl	bno055_write_page_id
 31039              	.LVL3939:
15224:Core/Src/bno055.c ****         {
 31040              		.loc 1 15224 9 is_stmt 1 view .LVU8964
15224:Core/Src/bno055.c ****         {
 31041              		.loc 1 15224 12 is_stmt 0 view .LVU8965
 31042 006e 0028     		cmp	r0, #0
 31043 0070 D8D0     		beq	.L2237
 31044 0072 D2E7     		b	.L2236
 31045              	.LVL3940:
 31046              	.L2238:
15212:Core/Src/bno055.c ****     }
 31047              		.loc 1 15212 16 view .LVU8966
 31048 0074 6FF07E05 		mvn	r5, #126
 31049 0078 F3E7     		b	.L2235
 31050              	.LVL3941:
 31051              	.L2239:
15243:Core/Src/bno055.c ****         }
 31052              		.loc 1 15243 22 view .LVU8967
 31053 007a 4FF0FF35 		mov	r5, #-1
 31054 007e F0E7     		b	.L2235
 31055              	.L2243:
 31056              		.align	2
 31057              	.L2242:
 31058 0080 00000000 		.word	p_bno055
 31059              		.cfi_endproc
 31060              	.LFE224:
 31062              		.section	.text.bno055_get_accel_any_motion_thres,"ax",%progbits
 31063              		.align	1
 31064              		.global	bno055_get_accel_any_motion_thres
 31065              		.syntax unified
 31066              		.thumb
 31067              		.thumb_func
 31069              	bno055_get_accel_any_motion_thres:
 31070              	.LVL3942:
 31071              	.LFB225:
15249:Core/Src/bno055.c **** 
15250:Core/Src/bno055.c **** /*!
15251:Core/Src/bno055.c ****  *  @brief This API used to read the accel any motion threshold
15252:Core/Src/bno055.c ****  *  from page one register from 0x11 bit 0 to 7
15253:Core/Src/bno055.c ****  *
15254:Core/Src/bno055.c ****  *  @param accel_any_motion_thres_u8 : The value of any motion threshold
15255:Core/Src/bno055.c ****  *  accel_any_motion_thres_u8 | result
15256:Core/Src/bno055.c ****  *  ------------------------    | -------------
15257:Core/Src/bno055.c ****  *              0x01            | BNO055_BIT_ENABLE
15258:Core/Src/bno055.c ****  *              0x00            | BNO055_BIT_DISABLE
ARM GAS  /tmp/ccOloYeZ.s 			page 880


15259:Core/Src/bno055.c ****  *
15260:Core/Src/bno055.c ****  *  @return results of bus communication function
15261:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15262:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15263:Core/Src/bno055.c ****  *
15264:Core/Src/bno055.c ****  *  @note Accel anymotion threshold dependent on the
15265:Core/Src/bno055.c ****  *  range values
15266:Core/Src/bno055.c ****  *
15267:Core/Src/bno055.c ****  *  accel_range_u8 |    threshold | LSB
15268:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
15269:Core/Src/bno055.c ****  *     2g        |    3.19mg     |   1LSB
15270:Core/Src/bno055.c ****  *     4g        |    7.81mg     |   1LSB
15271:Core/Src/bno055.c ****  *     8g        |    15.63mg    |   1LSB
15272:Core/Src/bno055.c ****  *     16g       |    31.25mg    |   1LSB
15273:Core/Src/bno055.c ****  *
15274:Core/Src/bno055.c ****  */
15275:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_any_motion_thres(u8 *accel_any_motion_thres_u8)
15276:Core/Src/bno055.c **** {
 31072              		.loc 1 15276 1 is_stmt 1 view -0
 31073              		.cfi_startproc
 31074              		@ args = 0, pretend = 0, frame = 8
 31075              		@ frame_needed = 0, uses_anonymous_args = 0
 31076              		.loc 1 15276 1 is_stmt 0 view .LVU8969
 31077 0000 70B5     		push	{r4, r5, r6, lr}
 31078              		.cfi_def_cfa_offset 16
 31079              		.cfi_offset 4, -16
 31080              		.cfi_offset 5, -12
 31081              		.cfi_offset 6, -8
 31082              		.cfi_offset 14, -4
 31083 0002 82B0     		sub	sp, sp, #8
 31084              		.cfi_def_cfa_offset 24
15277:Core/Src/bno055.c ****     /* Variable used to return value of
15278:Core/Src/bno055.c ****      * communication routine*/
15279:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31085              		.loc 1 15279 5 is_stmt 1 view .LVU8970
 31086              	.LVL3943:
15280:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31087              		.loc 1 15280 5 view .LVU8971
 31088              		.loc 1 15280 8 is_stmt 0 view .LVU8972
 31089 0004 0023     		movs	r3, #0
 31090 0006 8DF80730 		strb	r3, [sp, #7]
15281:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31091              		.loc 1 15281 5 is_stmt 1 view .LVU8973
 31092              	.LVL3944:
15282:Core/Src/bno055.c **** 
15283:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15284:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31093              		.loc 1 15284 5 view .LVU8974
 31094              		.loc 1 15284 18 is_stmt 0 view .LVU8975
 31095 000a 134B     		ldr	r3, .L2252
 31096 000c 1B68     		ldr	r3, [r3]
 31097              		.loc 1 15284 8 view .LVU8976
 31098 000e E3B1     		cbz	r3, .L2248
 31099 0010 0546     		mov	r5, r0
15285:Core/Src/bno055.c ****     {
15286:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15287:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccOloYeZ.s 			page 881


15288:Core/Src/bno055.c ****     else
15289:Core/Src/bno055.c ****     {
15290:Core/Src/bno055.c ****         /*condition check for page, accel any motion threshold  is
15291:Core/Src/bno055.c ****          * available in the page one*/
15292:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31100              		.loc 1 15292 9 is_stmt 1 view .LVU8977
 31101              		.loc 1 15292 21 is_stmt 0 view .LVU8978
 31102 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31103              		.loc 1 15292 12 view .LVU8979
 31104 0014 012B     		cmp	r3, #1
 31105 0016 12D1     		bne	.L2251
 31106              	.LVL3945:
 31107              	.L2246:
15293:Core/Src/bno055.c ****         {
15294:Core/Src/bno055.c ****             /* Write page as one */
15295:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15296:Core/Src/bno055.c ****         }
15297:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31108              		.loc 1 15297 53 discriminator 1 view .LVU8980
 31109 0018 0F4B     		ldr	r3, .L2252
 31110 001a 1B68     		ldr	r3, [r3]
 31111 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31112              		.loc 1 15297 41 discriminator 1 view .LVU8981
 31113 001e 012B     		cmp	r3, #1
 31114 0020 16D1     		bne	.L2249
 31115              	.L2247:
15298:Core/Src/bno055.c ****         {
15299:Core/Src/bno055.c ****             /* Read the value of accel any motion threshold */
15300:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31116              		.loc 1 15300 13 is_stmt 1 view .LVU8982
 31117              		.loc 1 15300 32 is_stmt 0 view .LVU8983
 31118 0022 0D4B     		ldr	r3, .L2252
 31119 0024 1C68     		ldr	r4, [r3]
 31120 0026 2669     		ldr	r6, [r4, #16]
 31121              		.loc 1 15300 24 view .LVU8984
 31122 0028 0123     		movs	r3, #1
 31123 002a 0DF10702 		add	r2, sp, #7
 31124 002e 1121     		movs	r1, #17
 31125 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 31126 0032 B047     		blx	r6
 31127              	.LVL3946:
15301:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_THRES_REG,
15302:Core/Src/bno055.c ****                                                       &data_u8r,
15303:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15304:Core/Src/bno055.c ****             *accel_any_motion_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_THRE
 31128              		.loc 1 15304 13 is_stmt 1 view .LVU8985
 31129              		.loc 1 15304 40 is_stmt 0 view .LVU8986
 31130 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31131 0038 2B70     		strb	r3, [r5]
 31132              	.LVL3947:
 31133              	.L2245:
15305:Core/Src/bno055.c ****         }
15306:Core/Src/bno055.c ****         else
15307:Core/Src/bno055.c ****         {
15308:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15309:Core/Src/bno055.c ****         }
15310:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccOloYeZ.s 			page 882


15311:Core/Src/bno055.c **** 
15312:Core/Src/bno055.c ****     return com_rslt;
15313:Core/Src/bno055.c **** }
 31134              		.loc 1 15313 1 view .LVU8987
 31135 003a 02B0     		add	sp, sp, #8
 31136              		.cfi_remember_state
 31137              		.cfi_def_cfa_offset 16
 31138              		@ sp needed
 31139 003c 70BD     		pop	{r4, r5, r6, pc}
 31140              	.LVL3948:
 31141              	.L2251:
 31142              		.cfi_restore_state
15295:Core/Src/bno055.c ****         }
 31143              		.loc 1 15295 13 is_stmt 1 view .LVU8988
15295:Core/Src/bno055.c ****         }
 31144              		.loc 1 15295 23 is_stmt 0 view .LVU8989
 31145 003e 0120     		movs	r0, #1
 31146              	.LVL3949:
15295:Core/Src/bno055.c ****         }
 31147              		.loc 1 15295 23 view .LVU8990
 31148 0040 FFF7FEFF 		bl	bno055_write_page_id
 31149              	.LVL3950:
15297:Core/Src/bno055.c ****         {
 31150              		.loc 1 15297 9 is_stmt 1 view .LVU8991
15297:Core/Src/bno055.c ****         {
 31151              		.loc 1 15297 12 is_stmt 0 view .LVU8992
 31152 0044 0028     		cmp	r0, #0
 31153 0046 ECD0     		beq	.L2247
 31154 0048 E6E7     		b	.L2246
 31155              	.LVL3951:
 31156              	.L2248:
15286:Core/Src/bno055.c ****     }
 31157              		.loc 1 15286 16 view .LVU8993
 31158 004a 6FF07E00 		mvn	r0, #126
 31159              	.LVL3952:
15286:Core/Src/bno055.c ****     }
 31160              		.loc 1 15286 16 view .LVU8994
 31161 004e F4E7     		b	.L2245
 31162              	.LVL3953:
 31163              	.L2249:
15308:Core/Src/bno055.c ****         }
 31164              		.loc 1 15308 22 view .LVU8995
 31165 0050 4FF0FF30 		mov	r0, #-1
 31166 0054 F1E7     		b	.L2245
 31167              	.L2253:
 31168 0056 00BF     		.align	2
 31169              	.L2252:
 31170 0058 00000000 		.word	p_bno055
 31171              		.cfi_endproc
 31172              	.LFE225:
 31174              		.section	.text.bno055_set_accel_any_motion_thres,"ax",%progbits
 31175              		.align	1
 31176              		.global	bno055_set_accel_any_motion_thres
 31177              		.syntax unified
 31178              		.thumb
 31179              		.thumb_func
 31181              	bno055_set_accel_any_motion_thres:
ARM GAS  /tmp/ccOloYeZ.s 			page 883


 31182              	.LVL3954:
 31183              	.LFB226:
15314:Core/Src/bno055.c **** 
15315:Core/Src/bno055.c **** /*!
15316:Core/Src/bno055.c ****  *  @brief This API used to write the accel any motion threshold
15317:Core/Src/bno055.c ****  *  from page one register from 0x11 bit 0 to 7
15318:Core/Src/bno055.c ****  *
15319:Core/Src/bno055.c ****  *  @param accel_any_motion_thres_u8 : The value of any motion threshold
15320:Core/Src/bno055.c ****  *  accel_any_motion_thres_u8 | result
15321:Core/Src/bno055.c ****  *  ------------------------    | -------------
15322:Core/Src/bno055.c ****  *              0x01            | BNO055_BIT_ENABLE
15323:Core/Src/bno055.c ****  *              0x00            | BNO055_BIT_DISABLE
15324:Core/Src/bno055.c ****  *
15325:Core/Src/bno055.c ****  *  @return results of bus communication function
15326:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15327:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15328:Core/Src/bno055.c ****  *
15329:Core/Src/bno055.c ****  *  @note Accel anymotion threshold dependent on the
15330:Core/Src/bno055.c ****  *  range values
15331:Core/Src/bno055.c ****  *
15332:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
15333:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
15334:Core/Src/bno055.c ****  *     2g        |    3.19mg     |   1LSB
15335:Core/Src/bno055.c ****  *     4g        |    7.81mg     |   1LSB
15336:Core/Src/bno055.c ****  *     8g        |    15.63mg    |   1LSB
15337:Core/Src/bno055.c ****  *     16g       |    31.25mg    |   1LSB
15338:Core/Src/bno055.c ****  *
15339:Core/Src/bno055.c ****  */
15340:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_any_motion_thres(u8 accel_any_motion_thres_u8)
15341:Core/Src/bno055.c **** {
 31184              		.loc 1 15341 1 is_stmt 1 view -0
 31185              		.cfi_startproc
 31186              		@ args = 0, pretend = 0, frame = 8
 31187              		@ frame_needed = 0, uses_anonymous_args = 0
 31188              		.loc 1 15341 1 is_stmt 0 view .LVU8997
 31189 0000 30B5     		push	{r4, r5, lr}
 31190              		.cfi_def_cfa_offset 12
 31191              		.cfi_offset 4, -12
 31192              		.cfi_offset 5, -8
 31193              		.cfi_offset 14, -4
 31194 0002 83B0     		sub	sp, sp, #12
 31195              		.cfi_def_cfa_offset 24
15342:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31196              		.loc 1 15342 5 is_stmt 1 view .LVU8998
 31197              	.LVL3955:
15343:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31198              		.loc 1 15343 5 view .LVU8999
 31199              		.loc 1 15343 8 is_stmt 0 view .LVU9000
 31200 0004 0023     		movs	r3, #0
 31201 0006 8DF80730 		strb	r3, [sp, #7]
15344:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31202              		.loc 1 15344 5 is_stmt 1 view .LVU9001
 31203              	.LVL3956:
15345:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 31204              		.loc 1 15345 5 view .LVU9002
15346:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 31205              		.loc 1 15346 5 view .LVU9003
ARM GAS  /tmp/ccOloYeZ.s 			page 884


 31206              		.loc 1 15346 8 is_stmt 0 view .LVU9004
 31207 000a 8DF80630 		strb	r3, [sp, #6]
15347:Core/Src/bno055.c **** 
15348:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15349:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31208              		.loc 1 15349 5 is_stmt 1 view .LVU9005
 31209              		.loc 1 15349 18 is_stmt 0 view .LVU9006
 31210 000e 254B     		ldr	r3, .L2266
 31211 0010 1B68     		ldr	r3, [r3]
 31212              		.loc 1 15349 8 view .LVU9007
 31213 0012 002B     		cmp	r3, #0
 31214 0014 42D0     		beq	.L2258
 31215 0016 0546     		mov	r5, r0
15350:Core/Src/bno055.c ****     {
15351:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15352:Core/Src/bno055.c ****     }
15353:Core/Src/bno055.c ****     else
15354:Core/Src/bno055.c ****     {
15355:Core/Src/bno055.c ****         /* The write operation effective only if the operation
15356:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
15357:Core/Src/bno055.c ****          * current operation mode and set the config mode */
15358:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 31216              		.loc 1 15358 9 is_stmt 1 view .LVU9008
 31217              		.loc 1 15358 19 is_stmt 0 view .LVU9009
 31218 0018 0DF10600 		add	r0, sp, #6
 31219              	.LVL3957:
 31220              		.loc 1 15358 19 view .LVU9010
 31221 001c FFF7FEFF 		bl	bno055_get_operation_mode
 31222              	.LVL3958:
15359:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 31223              		.loc 1 15359 9 is_stmt 1 view .LVU9011
 31224              		.loc 1 15359 12 is_stmt 0 view .LVU9012
 31225 0020 0446     		mov	r4, r0
 31226 0022 50BB     		cbnz	r0, .L2259
15360:Core/Src/bno055.c ****         {
15361:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 31227              		.loc 1 15361 13 is_stmt 1 view .LVU9013
 31228              		.loc 1 15361 32 is_stmt 0 view .LVU9014
 31229 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 31230              		.loc 1 15361 16 view .LVU9015
 31231 0028 1BB9     		cbnz	r3, .L2263
 31232              	.LVL3959:
 31233              	.L2257:
15362:Core/Src/bno055.c ****             {
15363:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
15364:Core/Src/bno055.c ****             }
15365:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 31234              		.loc 1 15365 13 is_stmt 1 view .LVU9016
 31235              		.loc 1 15365 16 is_stmt 0 view .LVU9017
 31236 002a 44B1     		cbz	r4, .L2264
15366:Core/Src/bno055.c ****             {
15367:Core/Src/bno055.c ****                 /* Write page as one */
15368:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15369:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
15370:Core/Src/bno055.c ****                 {
15371:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15372:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
ARM GAS  /tmp/ccOloYeZ.s 			page 885


15373:Core/Src/bno055.c ****                                                               &data_u8r,
15374:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15375:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
15376:Core/Src/bno055.c ****                     {
15377:Core/Src/bno055.c ****                         /* Write the value of
15378:Core/Src/bno055.c ****                          * accel any motion threshold*/
15379:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
15380:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_THRES,
15381:Core/Src/bno055.c ****                                                        accel_any_motion_thres_u8);
15382:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15383:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
15384:Core/Src/bno055.c ****                                                                     &data_u8r,
15385:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
15386:Core/Src/bno055.c ****                     }
15387:Core/Src/bno055.c ****                 }
15388:Core/Src/bno055.c ****                 else
15389:Core/Src/bno055.c ****                 {
15390:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
15391:Core/Src/bno055.c ****                 }
15392:Core/Src/bno055.c ****             }
15393:Core/Src/bno055.c ****             else
15394:Core/Src/bno055.c ****             {
15395:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 31237              		.loc 1 15395 26 view .LVU9018
 31238 002c 4FF0FF34 		mov	r4, #-1
 31239              	.LVL3960:
 31240              		.loc 1 15395 26 view .LVU9019
 31241 0030 25E0     		b	.L2256
 31242              	.LVL3961:
 31243              	.L2263:
15363:Core/Src/bno055.c ****             }
 31244              		.loc 1 15363 17 is_stmt 1 view .LVU9020
15363:Core/Src/bno055.c ****             }
 31245              		.loc 1 15363 28 is_stmt 0 view .LVU9021
 31246 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 31247              	.LVL3962:
15363:Core/Src/bno055.c ****             }
 31248              		.loc 1 15363 25 view .LVU9022
 31249 0036 54FA80F4 		uxtab	r4, r4, r0
 31250 003a 64B2     		sxtb	r4, r4
 31251              	.LVL3963:
15363:Core/Src/bno055.c ****             }
 31252              		.loc 1 15363 25 view .LVU9023
 31253 003c F5E7     		b	.L2257
 31254              	.L2264:
15368:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 31255              		.loc 1 15368 17 is_stmt 1 view .LVU9024
15368:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 31256              		.loc 1 15368 30 is_stmt 0 view .LVU9025
 31257 003e 0120     		movs	r0, #1
 31258 0040 FFF7FEFF 		bl	bno055_write_page_id
 31259              	.LVL3964:
15369:Core/Src/bno055.c ****                 {
 31260              		.loc 1 15369 17 is_stmt 1 view .LVU9026
15369:Core/Src/bno055.c ****                 {
 31261              		.loc 1 15369 20 is_stmt 0 view .LVU9027
 31262 0044 08BB     		cbnz	r0, .L2261
ARM GAS  /tmp/ccOloYeZ.s 			page 886


15371:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
 31263              		.loc 1 15371 21 is_stmt 1 view .LVU9028
15371:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
 31264              		.loc 1 15371 40 is_stmt 0 view .LVU9029
 31265 0046 174B     		ldr	r3, .L2266
 31266 0048 1868     		ldr	r0, [r3]
 31267              	.LVL3965:
15371:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
 31268              		.loc 1 15371 40 view .LVU9030
 31269 004a 0469     		ldr	r4, [r0, #16]
 31270              	.LVL3966:
15371:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
 31271              		.loc 1 15371 32 view .LVU9031
 31272 004c 0123     		movs	r3, #1
 31273 004e 0DF10702 		add	r2, sp, #7
 31274 0052 1121     		movs	r1, #17
 31275 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31276 0056 A047     		blx	r4
 31277              	.LVL3967:
15375:Core/Src/bno055.c ****                     {
 31278              		.loc 1 15375 21 is_stmt 1 view .LVU9032
15375:Core/Src/bno055.c ****                     {
 31279              		.loc 1 15375 24 is_stmt 0 view .LVU9033
 31280 0058 0446     		mov	r4, r0
 31281 005a 80B9     		cbnz	r0, .L2256
15379:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_THRES,
 31282              		.loc 1 15379 25 is_stmt 1 view .LVU9034
15379:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_THRES,
 31283              		.loc 1 15379 34 is_stmt 0 view .LVU9035
 31284 005c 8DF80750 		strb	r5, [sp, #7]
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 31285              		.loc 1 15382 25 is_stmt 1 view .LVU9036
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 31286              		.loc 1 15382 45 is_stmt 0 view .LVU9037
 31287 0060 104B     		ldr	r3, .L2266
 31288 0062 1868     		ldr	r0, [r3]
 31289              	.LVL3968:
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 31290              		.loc 1 15382 45 view .LVU9038
 31291 0064 C568     		ldr	r5, [r0, #12]
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 31292              		.loc 1 15382 37 view .LVU9039
 31293 0066 0123     		movs	r3, #1
 31294 0068 0DF10702 		add	r2, sp, #7
 31295 006c 1121     		movs	r1, #17
 31296 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31297 0070 A847     		blx	r5
 31298              	.LVL3969:
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 31299              		.loc 1 15382 34 view .LVU9040
 31300 0072 54FA80F0 		uxtab	r0, r4, r0
 31301 0076 44B2     		sxtb	r4, r0
 31302              	.LVL3970:
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 31303              		.loc 1 15382 34 view .LVU9041
 31304 0078 01E0     		b	.L2256
 31305              	.LVL3971:
ARM GAS  /tmp/ccOloYeZ.s 			page 887


 31306              	.L2259:
15396:Core/Src/bno055.c ****             }
15397:Core/Src/bno055.c ****         }
15398:Core/Src/bno055.c ****         else
15399:Core/Src/bno055.c ****         {
15400:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 31307              		.loc 1 15400 22 view .LVU9042
 31308 007a 4FF0FF34 		mov	r4, #-1
 31309              	.LVL3972:
 31310              	.L2256:
15401:Core/Src/bno055.c ****         }
15402:Core/Src/bno055.c ****     }
15403:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 31311              		.loc 1 15403 5 is_stmt 1 view .LVU9043
 31312              		.loc 1 15403 24 is_stmt 0 view .LVU9044
 31313 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 31314              		.loc 1 15403 8 view .LVU9045
 31315 0082 28B9     		cbnz	r0, .L2265
 31316              	.LVL3973:
 31317              	.L2255:
15404:Core/Src/bno055.c ****     {
15405:Core/Src/bno055.c ****         /* set the operation mode of
15406:Core/Src/bno055.c ****          * previous operation mode*/
15407:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
15408:Core/Src/bno055.c ****     }
15409:Core/Src/bno055.c **** 
15410:Core/Src/bno055.c ****     return com_rslt;
15411:Core/Src/bno055.c **** }
 31318              		.loc 1 15411 1 view .LVU9046
 31319 0084 2046     		mov	r0, r4
 31320 0086 03B0     		add	sp, sp, #12
 31321              		.cfi_remember_state
 31322              		.cfi_def_cfa_offset 12
 31323              		@ sp needed
 31324 0088 30BD     		pop	{r4, r5, pc}
 31325              	.LVL3974:
 31326              	.L2261:
 31327              		.cfi_restore_state
15390:Core/Src/bno055.c ****                 }
 31328              		.loc 1 15390 30 view .LVU9047
 31329 008a 4FF0FF34 		mov	r4, #-1
 31330              	.LVL3975:
15390:Core/Src/bno055.c ****                 }
 31331              		.loc 1 15390 30 view .LVU9048
 31332 008e F6E7     		b	.L2256
 31333              	.LVL3976:
 31334              	.L2265:
15407:Core/Src/bno055.c ****     }
 31335              		.loc 1 15407 9 is_stmt 1 view .LVU9049
15407:Core/Src/bno055.c ****     }
 31336              		.loc 1 15407 21 is_stmt 0 view .LVU9050
 31337 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 31338              	.LVL3977:
15407:Core/Src/bno055.c ****     }
 31339              		.loc 1 15407 18 view .LVU9051
 31340 0094 54FA80F0 		uxtab	r0, r4, r0
 31341 0098 44B2     		sxtb	r4, r0
ARM GAS  /tmp/ccOloYeZ.s 			page 888


 31342              	.LVL3978:
15407:Core/Src/bno055.c ****     }
 31343              		.loc 1 15407 18 view .LVU9052
 31344 009a F3E7     		b	.L2255
 31345              	.LVL3979:
 31346              	.L2258:
15351:Core/Src/bno055.c ****     }
 31347              		.loc 1 15351 16 view .LVU9053
 31348 009c 6FF07E04 		mvn	r4, #126
 31349 00a0 F0E7     		b	.L2255
 31350              	.L2267:
 31351 00a2 00BF     		.align	2
 31352              	.L2266:
 31353 00a4 00000000 		.word	p_bno055
 31354              		.cfi_endproc
 31355              	.LFE226:
 31357              		.section	.text.bno055_get_accel_any_motion_durn,"ax",%progbits
 31358              		.align	1
 31359              		.global	bno055_get_accel_any_motion_durn
 31360              		.syntax unified
 31361              		.thumb
 31362              		.thumb_func
 31364              	bno055_get_accel_any_motion_durn:
 31365              	.LVL3980:
 31366              	.LFB227:
15412:Core/Src/bno055.c **** 
15413:Core/Src/bno055.c **** /*!
15414:Core/Src/bno055.c ****  *  @brief This API used to read the accel anymotion duration
15415:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 0 to 1
15416:Core/Src/bno055.c ****  *
15417:Core/Src/bno055.c ****  *  @param accel_any_motion_durn_u8 : The value of accel anymotion duration
15418:Core/Src/bno055.c ****  * accel_any_motion_durn_u8  | result
15419:Core/Src/bno055.c ****  *  -------------------------  | -------------
15420:Core/Src/bno055.c ****  *              0x01           | BNO055_BIT_ENABLE
15421:Core/Src/bno055.c ****  *              0x00           | BNO055_BIT_DISABLE
15422:Core/Src/bno055.c ****  *
15423:Core/Src/bno055.c ****  *  @return results of bus communication function
15424:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15425:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15426:Core/Src/bno055.c ****  *
15427:Core/Src/bno055.c ****  *
15428:Core/Src/bno055.c ****  */
15429:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_any_motion_durn(u8 *accel_any_motion_durn_u8)
15430:Core/Src/bno055.c **** {
 31367              		.loc 1 15430 1 is_stmt 1 view -0
 31368              		.cfi_startproc
 31369              		@ args = 0, pretend = 0, frame = 8
 31370              		@ frame_needed = 0, uses_anonymous_args = 0
 31371              		.loc 1 15430 1 is_stmt 0 view .LVU9055
 31372 0000 30B5     		push	{r4, r5, lr}
 31373              		.cfi_def_cfa_offset 12
 31374              		.cfi_offset 4, -12
 31375              		.cfi_offset 5, -8
 31376              		.cfi_offset 14, -4
 31377 0002 83B0     		sub	sp, sp, #12
 31378              		.cfi_def_cfa_offset 24
15431:Core/Src/bno055.c ****     /* Variable used to return value of
ARM GAS  /tmp/ccOloYeZ.s 			page 889


15432:Core/Src/bno055.c ****      * communication routine*/
15433:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31379              		.loc 1 15433 5 is_stmt 1 view .LVU9056
 31380              	.LVL3981:
15434:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31381              		.loc 1 15434 5 view .LVU9057
 31382              		.loc 1 15434 8 is_stmt 0 view .LVU9058
 31383 0004 0023     		movs	r3, #0
 31384 0006 8DF80730 		strb	r3, [sp, #7]
15435:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31385              		.loc 1 15435 5 is_stmt 1 view .LVU9059
 31386              	.LVL3982:
15436:Core/Src/bno055.c **** 
15437:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15438:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31387              		.loc 1 15438 5 view .LVU9060
 31388              		.loc 1 15438 18 is_stmt 0 view .LVU9061
 31389 000a 144B     		ldr	r3, .L2276
 31390 000c 1B68     		ldr	r3, [r3]
 31391              		.loc 1 15438 8 view .LVU9062
 31392 000e F3B1     		cbz	r3, .L2272
 31393 0010 0446     		mov	r4, r0
15439:Core/Src/bno055.c ****     {
15440:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15441:Core/Src/bno055.c ****     }
15442:Core/Src/bno055.c ****     else
15443:Core/Src/bno055.c ****     {
15444:Core/Src/bno055.c ****         /*condition check for page, accel anymotion duration  is
15445:Core/Src/bno055.c ****          * available in the page one*/
15446:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31394              		.loc 1 15446 9 is_stmt 1 view .LVU9063
 31395              		.loc 1 15446 21 is_stmt 0 view .LVU9064
 31396 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31397              		.loc 1 15446 12 view .LVU9065
 31398 0014 012B     		cmp	r3, #1
 31399 0016 14D1     		bne	.L2275
 31400              	.LVL3983:
 31401              	.L2270:
15447:Core/Src/bno055.c ****         {
15448:Core/Src/bno055.c ****             /* Write page as one */
15449:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15450:Core/Src/bno055.c ****         }
15451:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31402              		.loc 1 15451 53 discriminator 1 view .LVU9066
 31403 0018 104B     		ldr	r3, .L2276
 31404 001a 1B68     		ldr	r3, [r3]
 31405 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31406              		.loc 1 15451 41 discriminator 1 view .LVU9067
 31407 001e 012B     		cmp	r3, #1
 31408 0020 18D1     		bne	.L2273
 31409              	.L2271:
15452:Core/Src/bno055.c ****         {
15453:Core/Src/bno055.c ****             /* Read the value of accel anymotion duration */
15454:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31410              		.loc 1 15454 13 is_stmt 1 view .LVU9068
 31411              		.loc 1 15454 32 is_stmt 0 view .LVU9069
 31412 0022 0E4B     		ldr	r3, .L2276
ARM GAS  /tmp/ccOloYeZ.s 			page 890


 31413 0024 1868     		ldr	r0, [r3]
 31414 0026 0569     		ldr	r5, [r0, #16]
 31415              		.loc 1 15454 24 view .LVU9070
 31416 0028 0123     		movs	r3, #1
 31417 002a 0DF10702 		add	r2, sp, #7
 31418 002e 1221     		movs	r1, #18
 31419 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31420 0032 A847     		blx	r5
 31421              	.LVL3984:
15455:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
15456:Core/Src/bno055.c ****                                                       &data_u8r,
15457:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15458:Core/Src/bno055.c ****             *accel_any_motion_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_DURN_
 31422              		.loc 1 15458 13 is_stmt 1 view .LVU9071
 31423              		.loc 1 15458 41 is_stmt 0 view .LVU9072
 31424 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31425 0038 03F00303 		and	r3, r3, #3
 31426              		.loc 1 15458 39 view .LVU9073
 31427 003c 2370     		strb	r3, [r4]
 31428              	.LVL3985:
 31429              	.L2269:
15459:Core/Src/bno055.c ****         }
15460:Core/Src/bno055.c ****         else
15461:Core/Src/bno055.c ****         {
15462:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15463:Core/Src/bno055.c ****         }
15464:Core/Src/bno055.c ****     }
15465:Core/Src/bno055.c **** 
15466:Core/Src/bno055.c ****     return com_rslt;
15467:Core/Src/bno055.c **** }
 31430              		.loc 1 15467 1 view .LVU9074
 31431 003e 03B0     		add	sp, sp, #12
 31432              		.cfi_remember_state
 31433              		.cfi_def_cfa_offset 12
 31434              		@ sp needed
 31435 0040 30BD     		pop	{r4, r5, pc}
 31436              	.LVL3986:
 31437              	.L2275:
 31438              		.cfi_restore_state
15449:Core/Src/bno055.c ****         }
 31439              		.loc 1 15449 13 is_stmt 1 view .LVU9075
15449:Core/Src/bno055.c ****         }
 31440              		.loc 1 15449 23 is_stmt 0 view .LVU9076
 31441 0042 0120     		movs	r0, #1
 31442              	.LVL3987:
15449:Core/Src/bno055.c ****         }
 31443              		.loc 1 15449 23 view .LVU9077
 31444 0044 FFF7FEFF 		bl	bno055_write_page_id
 31445              	.LVL3988:
15451:Core/Src/bno055.c ****         {
 31446              		.loc 1 15451 9 is_stmt 1 view .LVU9078
15451:Core/Src/bno055.c ****         {
 31447              		.loc 1 15451 12 is_stmt 0 view .LVU9079
 31448 0048 0028     		cmp	r0, #0
 31449 004a EAD0     		beq	.L2271
 31450 004c E4E7     		b	.L2270
 31451              	.LVL3989:
ARM GAS  /tmp/ccOloYeZ.s 			page 891


 31452              	.L2272:
15440:Core/Src/bno055.c ****     }
 31453              		.loc 1 15440 16 view .LVU9080
 31454 004e 6FF07E00 		mvn	r0, #126
 31455              	.LVL3990:
15440:Core/Src/bno055.c ****     }
 31456              		.loc 1 15440 16 view .LVU9081
 31457 0052 F4E7     		b	.L2269
 31458              	.LVL3991:
 31459              	.L2273:
15462:Core/Src/bno055.c ****         }
 31460              		.loc 1 15462 22 view .LVU9082
 31461 0054 4FF0FF30 		mov	r0, #-1
 31462 0058 F1E7     		b	.L2269
 31463              	.L2277:
 31464 005a 00BF     		.align	2
 31465              	.L2276:
 31466 005c 00000000 		.word	p_bno055
 31467              		.cfi_endproc
 31468              	.LFE227:
 31470              		.section	.text.bno055_set_accel_any_motion_durn,"ax",%progbits
 31471              		.align	1
 31472              		.global	bno055_set_accel_any_motion_durn
 31473              		.syntax unified
 31474              		.thumb
 31475              		.thumb_func
 31477              	bno055_set_accel_any_motion_durn:
 31478              	.LVL3992:
 31479              	.LFB228:
15468:Core/Src/bno055.c **** 
15469:Core/Src/bno055.c **** /*!
15470:Core/Src/bno055.c ****  *  @brief This API used to write the accel anymotion duration
15471:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 0 to 1
15472:Core/Src/bno055.c ****  *
15473:Core/Src/bno055.c ****  *  @param accel_any_motion_durn_u8 : The value of accel anymotion duration
15474:Core/Src/bno055.c ****  *
15475:Core/Src/bno055.c ****  * accel_any_motion_durn_u8  | result
15476:Core/Src/bno055.c ****  *  -------------------------  | -------------
15477:Core/Src/bno055.c ****  *              0x01           | BNO055_BIT_ENABLE
15478:Core/Src/bno055.c ****  *              0x00           | BNO055_BIT_DISABLE
15479:Core/Src/bno055.c ****  *
15480:Core/Src/bno055.c ****  *  @return results of bus communication function
15481:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15482:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15483:Core/Src/bno055.c ****  *
15484:Core/Src/bno055.c ****  *
15485:Core/Src/bno055.c ****  */
15486:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_any_motion_durn(u8 accel_any_motion_durn_u8)
15487:Core/Src/bno055.c **** {
 31480              		.loc 1 15487 1 is_stmt 1 view -0
 31481              		.cfi_startproc
 31482              		@ args = 0, pretend = 0, frame = 8
 31483              		@ frame_needed = 0, uses_anonymous_args = 0
 31484              		.loc 1 15487 1 is_stmt 0 view .LVU9084
 31485 0000 30B5     		push	{r4, r5, lr}
 31486              		.cfi_def_cfa_offset 12
 31487              		.cfi_offset 4, -12
ARM GAS  /tmp/ccOloYeZ.s 			page 892


 31488              		.cfi_offset 5, -8
 31489              		.cfi_offset 14, -4
 31490 0002 83B0     		sub	sp, sp, #12
 31491              		.cfi_def_cfa_offset 24
15488:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31492              		.loc 1 15488 5 is_stmt 1 view .LVU9085
 31493              	.LVL3993:
15489:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31494              		.loc 1 15489 5 view .LVU9086
 31495              		.loc 1 15489 8 is_stmt 0 view .LVU9087
 31496 0004 0023     		movs	r3, #0
 31497 0006 8DF80730 		strb	r3, [sp, #7]
15490:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31498              		.loc 1 15490 5 is_stmt 1 view .LVU9088
 31499              	.LVL3994:
15491:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 31500              		.loc 1 15491 5 view .LVU9089
15492:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 31501              		.loc 1 15492 5 view .LVU9090
 31502              		.loc 1 15492 8 is_stmt 0 view .LVU9091
 31503 000a 8DF80630 		strb	r3, [sp, #6]
15493:Core/Src/bno055.c **** 
15494:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15495:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31504              		.loc 1 15495 5 is_stmt 1 view .LVU9092
 31505              		.loc 1 15495 18 is_stmt 0 view .LVU9093
 31506 000e 284B     		ldr	r3, .L2290
 31507 0010 1B68     		ldr	r3, [r3]
 31508              		.loc 1 15495 8 view .LVU9094
 31509 0012 002B     		cmp	r3, #0
 31510 0014 49D0     		beq	.L2282
 31511 0016 0546     		mov	r5, r0
15496:Core/Src/bno055.c ****     {
15497:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15498:Core/Src/bno055.c ****     }
15499:Core/Src/bno055.c ****     else
15500:Core/Src/bno055.c ****     {
15501:Core/Src/bno055.c ****         /* The write operation effective only if the operation
15502:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
15503:Core/Src/bno055.c ****          * current operation mode and set the config mode */
15504:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 31512              		.loc 1 15504 9 is_stmt 1 view .LVU9095
 31513              		.loc 1 15504 19 is_stmt 0 view .LVU9096
 31514 0018 0DF10600 		add	r0, sp, #6
 31515              	.LVL3995:
 31516              		.loc 1 15504 19 view .LVU9097
 31517 001c FFF7FEFF 		bl	bno055_get_operation_mode
 31518              	.LVL3996:
15505:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 31519              		.loc 1 15505 9 is_stmt 1 view .LVU9098
 31520              		.loc 1 15505 12 is_stmt 0 view .LVU9099
 31521 0020 0446     		mov	r4, r0
 31522 0022 88BB     		cbnz	r0, .L2283
15506:Core/Src/bno055.c ****         {
15507:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 31523              		.loc 1 15507 13 is_stmt 1 view .LVU9100
 31524              		.loc 1 15507 32 is_stmt 0 view .LVU9101
ARM GAS  /tmp/ccOloYeZ.s 			page 893


 31525 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 31526              		.loc 1 15507 16 view .LVU9102
 31527 0028 1BB9     		cbnz	r3, .L2287
 31528              	.LVL3997:
 31529              	.L2281:
15508:Core/Src/bno055.c ****             {
15509:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
15510:Core/Src/bno055.c ****             }
15511:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 31530              		.loc 1 15511 13 is_stmt 1 view .LVU9103
 31531              		.loc 1 15511 16 is_stmt 0 view .LVU9104
 31532 002a 44B1     		cbz	r4, .L2288
15512:Core/Src/bno055.c ****             {
15513:Core/Src/bno055.c ****                 /* Write page as one */
15514:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15515:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
15516:Core/Src/bno055.c ****                 {
15517:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15518:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
15519:Core/Src/bno055.c ****                                                               &data_u8r,
15520:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15521:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
15522:Core/Src/bno055.c ****                     {
15523:Core/Src/bno055.c ****                         /* Write the value of
15524:Core/Src/bno055.c ****                          * accel anymotion duration*/
15525:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
15526:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
15527:Core/Src/bno055.c ****                                                        accel_any_motion_durn_u8);
15528:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15529:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
15530:Core/Src/bno055.c ****                                                                     &data_u8r,
15531:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
15532:Core/Src/bno055.c ****                     }
15533:Core/Src/bno055.c ****                 }
15534:Core/Src/bno055.c ****                 else
15535:Core/Src/bno055.c ****                 {
15536:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
15537:Core/Src/bno055.c ****                 }
15538:Core/Src/bno055.c ****             }
15539:Core/Src/bno055.c ****             else
15540:Core/Src/bno055.c ****             {
15541:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 31533              		.loc 1 15541 26 view .LVU9105
 31534 002c 4FF0FF34 		mov	r4, #-1
 31535              	.LVL3998:
 31536              		.loc 1 15541 26 view .LVU9106
 31537 0030 2CE0     		b	.L2280
 31538              	.LVL3999:
 31539              	.L2287:
15509:Core/Src/bno055.c ****             }
 31540              		.loc 1 15509 17 is_stmt 1 view .LVU9107
15509:Core/Src/bno055.c ****             }
 31541              		.loc 1 15509 28 is_stmt 0 view .LVU9108
 31542 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 31543              	.LVL4000:
15509:Core/Src/bno055.c ****             }
 31544              		.loc 1 15509 25 view .LVU9109
ARM GAS  /tmp/ccOloYeZ.s 			page 894


 31545 0036 54FA80F4 		uxtab	r4, r4, r0
 31546 003a 64B2     		sxtb	r4, r4
 31547              	.LVL4001:
15509:Core/Src/bno055.c ****             }
 31548              		.loc 1 15509 25 view .LVU9110
 31549 003c F5E7     		b	.L2281
 31550              	.L2288:
15514:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 31551              		.loc 1 15514 17 is_stmt 1 view .LVU9111
15514:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 31552              		.loc 1 15514 30 is_stmt 0 view .LVU9112
 31553 003e 0120     		movs	r0, #1
 31554 0040 FFF7FEFF 		bl	bno055_write_page_id
 31555              	.LVL4002:
15515:Core/Src/bno055.c ****                 {
 31556              		.loc 1 15515 17 is_stmt 1 view .LVU9113
15515:Core/Src/bno055.c ****                 {
 31557              		.loc 1 15515 20 is_stmt 0 view .LVU9114
 31558 0044 40BB     		cbnz	r0, .L2285
15517:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
 31559              		.loc 1 15517 21 is_stmt 1 view .LVU9115
15517:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
 31560              		.loc 1 15517 40 is_stmt 0 view .LVU9116
 31561 0046 1A4B     		ldr	r3, .L2290
 31562 0048 1868     		ldr	r0, [r3]
 31563              	.LVL4003:
15517:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
 31564              		.loc 1 15517 40 view .LVU9117
 31565 004a 0469     		ldr	r4, [r0, #16]
 31566              	.LVL4004:
15517:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
 31567              		.loc 1 15517 32 view .LVU9118
 31568 004c 0123     		movs	r3, #1
 31569 004e 0DF10702 		add	r2, sp, #7
 31570 0052 1221     		movs	r1, #18
 31571 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31572 0056 A047     		blx	r4
 31573              	.LVL4005:
15521:Core/Src/bno055.c ****                     {
 31574              		.loc 1 15521 21 is_stmt 1 view .LVU9119
15521:Core/Src/bno055.c ****                     {
 31575              		.loc 1 15521 24 is_stmt 0 view .LVU9120
 31576 0058 0446     		mov	r4, r0
 31577 005a B8B9     		cbnz	r0, .L2280
15525:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
 31578              		.loc 1 15525 25 is_stmt 1 view .LVU9121
15525:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
 31579              		.loc 1 15525 36 is_stmt 0 view .LVU9122
 31580 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
15525:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
 31581              		.loc 1 15525 34 view .LVU9123
 31582 0060 23F00303 		bic	r3, r3, #3
 31583 0064 05F00300 		and	r0, r5, #3
 31584              	.LVL4006:
15525:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
 31585              		.loc 1 15525 34 view .LVU9124
 31586 0068 0343     		orrs	r3, r3, r0
ARM GAS  /tmp/ccOloYeZ.s 			page 895


 31587 006a 8DF80730 		strb	r3, [sp, #7]
15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 31588              		.loc 1 15528 25 is_stmt 1 view .LVU9125
15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 31589              		.loc 1 15528 45 is_stmt 0 view .LVU9126
 31590 006e 104B     		ldr	r3, .L2290
 31591 0070 1868     		ldr	r0, [r3]
 31592 0072 C568     		ldr	r5, [r0, #12]
15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 31593              		.loc 1 15528 37 view .LVU9127
 31594 0074 0123     		movs	r3, #1
 31595 0076 0DF10702 		add	r2, sp, #7
 31596 007a 1221     		movs	r1, #18
 31597 007c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31598 007e A847     		blx	r5
 31599              	.LVL4007:
15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 31600              		.loc 1 15528 34 view .LVU9128
 31601 0080 54FA80F0 		uxtab	r0, r4, r0
 31602 0084 44B2     		sxtb	r4, r0
 31603              	.LVL4008:
15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 31604              		.loc 1 15528 34 view .LVU9129
 31605 0086 01E0     		b	.L2280
 31606              	.LVL4009:
 31607              	.L2283:
15542:Core/Src/bno055.c ****             }
15543:Core/Src/bno055.c ****         }
15544:Core/Src/bno055.c ****         else
15545:Core/Src/bno055.c ****         {
15546:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 31608              		.loc 1 15546 22 view .LVU9130
 31609 0088 4FF0FF34 		mov	r4, #-1
 31610              	.LVL4010:
 31611              	.L2280:
15547:Core/Src/bno055.c ****         }
15548:Core/Src/bno055.c ****     }
15549:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 31612              		.loc 1 15549 5 is_stmt 1 view .LVU9131
 31613              		.loc 1 15549 24 is_stmt 0 view .LVU9132
 31614 008c 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 31615              		.loc 1 15549 8 view .LVU9133
 31616 0090 28B9     		cbnz	r0, .L2289
 31617              	.LVL4011:
 31618              	.L2279:
15550:Core/Src/bno055.c ****     {
15551:Core/Src/bno055.c ****         /* set the operation mode of
15552:Core/Src/bno055.c ****          * previous operation mode*/
15553:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
15554:Core/Src/bno055.c ****     }
15555:Core/Src/bno055.c **** 
15556:Core/Src/bno055.c ****     return com_rslt;
15557:Core/Src/bno055.c **** }
 31619              		.loc 1 15557 1 view .LVU9134
 31620 0092 2046     		mov	r0, r4
 31621 0094 03B0     		add	sp, sp, #12
 31622              		.cfi_remember_state
ARM GAS  /tmp/ccOloYeZ.s 			page 896


 31623              		.cfi_def_cfa_offset 12
 31624              		@ sp needed
 31625 0096 30BD     		pop	{r4, r5, pc}
 31626              	.LVL4012:
 31627              	.L2285:
 31628              		.cfi_restore_state
15536:Core/Src/bno055.c ****                 }
 31629              		.loc 1 15536 30 view .LVU9135
 31630 0098 4FF0FF34 		mov	r4, #-1
 31631              	.LVL4013:
15536:Core/Src/bno055.c ****                 }
 31632              		.loc 1 15536 30 view .LVU9136
 31633 009c F6E7     		b	.L2280
 31634              	.LVL4014:
 31635              	.L2289:
15553:Core/Src/bno055.c ****     }
 31636              		.loc 1 15553 9 is_stmt 1 view .LVU9137
15553:Core/Src/bno055.c ****     }
 31637              		.loc 1 15553 21 is_stmt 0 view .LVU9138
 31638 009e FFF7FEFF 		bl	bno055_set_operation_mode
 31639              	.LVL4015:
15553:Core/Src/bno055.c ****     }
 31640              		.loc 1 15553 18 view .LVU9139
 31641 00a2 54FA80F0 		uxtab	r0, r4, r0
 31642 00a6 44B2     		sxtb	r4, r0
 31643              	.LVL4016:
15553:Core/Src/bno055.c ****     }
 31644              		.loc 1 15553 18 view .LVU9140
 31645 00a8 F3E7     		b	.L2279
 31646              	.LVL4017:
 31647              	.L2282:
15497:Core/Src/bno055.c ****     }
 31648              		.loc 1 15497 16 view .LVU9141
 31649 00aa 6FF07E04 		mvn	r4, #126
 31650 00ae F0E7     		b	.L2279
 31651              	.L2291:
 31652              		.align	2
 31653              	.L2290:
 31654 00b0 00000000 		.word	p_bno055
 31655              		.cfi_endproc
 31656              	.LFE228:
 31658              		.section	.text.bno055_get_accel_any_motion_no_motion_axis_enable,"ax",%progbits
 31659              		.align	1
 31660              		.global	bno055_get_accel_any_motion_no_motion_axis_enable
 31661              		.syntax unified
 31662              		.thumb
 31663              		.thumb_func
 31665              	bno055_get_accel_any_motion_no_motion_axis_enable:
 31666              	.LVL4018:
 31667              	.LFB229:
15558:Core/Src/bno055.c **** 
15559:Core/Src/bno055.c **** /*!
15560:Core/Src/bno055.c ****  *  @brief This API used to read the accel anymotion enable
15561:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 2 to 4
15562:Core/Src/bno055.c ****  *
15563:Core/Src/bno055.c ****  *  @param data_u8 : The value of accel anymotion enable
15564:Core/Src/bno055.c ****  *     data_u8 | result
ARM GAS  /tmp/ccOloYeZ.s 			page 897


15565:Core/Src/bno055.c ****  *  ------------ | -------------
15566:Core/Src/bno055.c ****  *      0x01     | BNO055_BIT_ENABLE
15567:Core/Src/bno055.c ****  *      0x00     | BNO055_BIT_DISABLE
15568:Core/Src/bno055.c ****  *  @param channel_u8 : The value of accel anymotion axis selection
15569:Core/Src/bno055.c ****  *           channel_u8                        | value
15570:Core/Src/bno055.c ****  *     --------------------------                | ----------
15571:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_X_AXIS  |   0
15572:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS  |   1
15573:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS  |   2
15574:Core/Src/bno055.c ****  *
15575:Core/Src/bno055.c ****  *  @return results of bus communication function
15576:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15577:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15578:Core/Src/bno055.c ****  *
15579:Core/Src/bno055.c ****  *
15580:Core/Src/bno055.c ****  */
15581:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_any_motion_no_motion_axis_enable(u8 channel_u8, u8 *da
15582:Core/Src/bno055.c **** {
 31668              		.loc 1 15582 1 is_stmt 1 view -0
 31669              		.cfi_startproc
 31670              		@ args = 0, pretend = 0, frame = 8
 31671              		@ frame_needed = 0, uses_anonymous_args = 0
 31672              		.loc 1 15582 1 is_stmt 0 view .LVU9143
 31673 0000 30B5     		push	{r4, r5, lr}
 31674              		.cfi_def_cfa_offset 12
 31675              		.cfi_offset 4, -12
 31676              		.cfi_offset 5, -8
 31677              		.cfi_offset 14, -4
 31678 0002 83B0     		sub	sp, sp, #12
 31679              		.cfi_def_cfa_offset 24
15583:Core/Src/bno055.c ****     /* Variable used to return value of
15584:Core/Src/bno055.c ****      * communication routine*/
15585:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31680              		.loc 1 15585 5 is_stmt 1 view .LVU9144
 31681              	.LVL4019:
15586:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31682              		.loc 1 15586 5 view .LVU9145
 31683              		.loc 1 15586 8 is_stmt 0 view .LVU9146
 31684 0004 0023     		movs	r3, #0
 31685 0006 8DF80730 		strb	r3, [sp, #7]
15587:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31686              		.loc 1 15587 5 is_stmt 1 view .LVU9147
 31687              	.LVL4020:
15588:Core/Src/bno055.c **** 
15589:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15590:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31688              		.loc 1 15590 5 view .LVU9148
 31689              		.loc 1 15590 18 is_stmt 0 view .LVU9149
 31690 000a 284B     		ldr	r3, .L2304
 31691 000c 1B68     		ldr	r3, [r3]
 31692              		.loc 1 15590 8 view .LVU9150
 31693 000e 002B     		cmp	r3, #0
 31694 0010 45D0     		beq	.L2298
 31695 0012 0446     		mov	r4, r0
 31696 0014 0D46     		mov	r5, r1
15591:Core/Src/bno055.c ****     {
15592:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
ARM GAS  /tmp/ccOloYeZ.s 			page 898


15593:Core/Src/bno055.c ****     }
15594:Core/Src/bno055.c ****     else
15595:Core/Src/bno055.c ****     {
15596:Core/Src/bno055.c ****         /*condition check for page, accel anymotion enable is
15597:Core/Src/bno055.c ****          * available in the page one*/
15598:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31697              		.loc 1 15598 9 is_stmt 1 view .LVU9151
 31698              		.loc 1 15598 21 is_stmt 0 view .LVU9152
 31699 0016 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31700              		.loc 1 15598 12 view .LVU9153
 31701 0018 012B     		cmp	r3, #1
 31702 001a 0DD1     		bne	.L2302
 31703              	.LVL4021:
 31704              	.L2294:
15599:Core/Src/bno055.c ****         {
15600:Core/Src/bno055.c ****             /* Write page as one */
15601:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15602:Core/Src/bno055.c ****         }
15603:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31705              		.loc 1 15603 53 discriminator 1 view .LVU9154
 31706 001c 234B     		ldr	r3, .L2304
 31707 001e 1B68     		ldr	r3, [r3]
 31708 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31709              		.loc 1 15603 41 discriminator 1 view .LVU9155
 31710 0022 012B     		cmp	r3, #1
 31711 0024 3ED1     		bne	.L2299
 31712              	.L2295:
15604:Core/Src/bno055.c ****         {
15605:Core/Src/bno055.c ****             switch (channel_u8)
 31713              		.loc 1 15605 13 is_stmt 1 view .LVU9156
 31714 0026 012C     		cmp	r4, #1
 31715 0028 1BD0     		beq	.L2296
 31716 002a 022C     		cmp	r4, #2
 31717 002c 28D0     		beq	.L2297
 31718 002e 4CB1     		cbz	r4, .L2303
 31719 0030 6FF00100 		mvn	r0, #1
 31720              	.LVL4022:
 31721              	.L2293:
15606:Core/Src/bno055.c ****             {
15607:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_X_AXIS:
15608:Core/Src/bno055.c **** 
15609:Core/Src/bno055.c ****                     /* Read the value of accel anymotion x enable*/
15610:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15611:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_X_AXIS_REG,
15612:Core/Src/bno055.c ****                                                               &data_u8r,
15613:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15614:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_X_AXIS);
15615:Core/Src/bno055.c ****                     break;
15616:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS:
15617:Core/Src/bno055.c **** 
15618:Core/Src/bno055.c ****                     /* Read the value of accel anymotion y enable*/
15619:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15620:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Y_AXIS_REG,
15621:Core/Src/bno055.c ****                                                               &data_u8r,
15622:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15623:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_Y_AXIS);
15624:Core/Src/bno055.c ****                     break;
ARM GAS  /tmp/ccOloYeZ.s 			page 899


15625:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Z_AXIS:
15626:Core/Src/bno055.c **** 
15627:Core/Src/bno055.c ****                     /* Read the value of accel anymotion z enable*/
15628:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15629:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Z_AXIS_REG,
15630:Core/Src/bno055.c ****                                                               &data_u8r,
15631:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15632:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_Z_AXIS);
15633:Core/Src/bno055.c ****                     break;
15634:Core/Src/bno055.c ****                 default:
15635:Core/Src/bno055.c ****                     com_rslt = BNO055_OUT_OF_RANGE;
15636:Core/Src/bno055.c ****                     break;
15637:Core/Src/bno055.c ****             }
15638:Core/Src/bno055.c ****         }
15639:Core/Src/bno055.c ****         else
15640:Core/Src/bno055.c ****         {
15641:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15642:Core/Src/bno055.c ****         }
15643:Core/Src/bno055.c ****     }
15644:Core/Src/bno055.c **** 
15645:Core/Src/bno055.c ****     return com_rslt;
15646:Core/Src/bno055.c **** }
 31722              		.loc 1 15646 1 is_stmt 0 view .LVU9157
 31723 0034 03B0     		add	sp, sp, #12
 31724              		.cfi_remember_state
 31725              		.cfi_def_cfa_offset 12
 31726              		@ sp needed
 31727 0036 30BD     		pop	{r4, r5, pc}
 31728              	.LVL4023:
 31729              	.L2302:
 31730              		.cfi_restore_state
15601:Core/Src/bno055.c ****         }
 31731              		.loc 1 15601 13 is_stmt 1 view .LVU9158
15601:Core/Src/bno055.c ****         }
 31732              		.loc 1 15601 23 is_stmt 0 view .LVU9159
 31733 0038 0120     		movs	r0, #1
 31734              	.LVL4024:
15601:Core/Src/bno055.c ****         }
 31735              		.loc 1 15601 23 view .LVU9160
 31736 003a FFF7FEFF 		bl	bno055_write_page_id
 31737              	.LVL4025:
15603:Core/Src/bno055.c ****         {
 31738              		.loc 1 15603 9 is_stmt 1 view .LVU9161
15603:Core/Src/bno055.c ****         {
 31739              		.loc 1 15603 12 is_stmt 0 view .LVU9162
 31740 003e 0028     		cmp	r0, #0
 31741 0040 F1D0     		beq	.L2295
 31742 0042 EBE7     		b	.L2294
 31743              	.LVL4026:
 31744              	.L2303:
15610:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_X_AXIS_REG,
 31745              		.loc 1 15610 21 is_stmt 1 view .LVU9163
15610:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_X_AXIS_REG,
 31746              		.loc 1 15610 40 is_stmt 0 view .LVU9164
 31747 0044 194B     		ldr	r3, .L2304
 31748 0046 1868     		ldr	r0, [r3]
 31749 0048 0469     		ldr	r4, [r0, #16]
ARM GAS  /tmp/ccOloYeZ.s 			page 900


15610:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_X_AXIS_REG,
 31750              		.loc 1 15610 32 view .LVU9165
 31751 004a 0123     		movs	r3, #1
 31752 004c 0DF10702 		add	r2, sp, #7
 31753 0050 1221     		movs	r1, #18
 31754 0052 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31755 0054 A047     		blx	r4
 31756              	.LVL4027:
15614:Core/Src/bno055.c ****                     break;
 31757              		.loc 1 15614 21 is_stmt 1 view .LVU9166
15614:Core/Src/bno055.c ****                     break;
 31758              		.loc 1 15614 32 is_stmt 0 view .LVU9167
 31759 0056 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31760 005a C3F38003 		ubfx	r3, r3, #2, #1
15614:Core/Src/bno055.c ****                     break;
 31761              		.loc 1 15614 30 view .LVU9168
 31762 005e 2B70     		strb	r3, [r5]
15615:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS:
 31763              		.loc 1 15615 21 is_stmt 1 view .LVU9169
 31764 0060 E8E7     		b	.L2293
 31765              	.LVL4028:
 31766              	.L2296:
15619:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Y_AXIS_REG,
 31767              		.loc 1 15619 21 view .LVU9170
15619:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Y_AXIS_REG,
 31768              		.loc 1 15619 40 is_stmt 0 view .LVU9171
 31769 0062 124B     		ldr	r3, .L2304
 31770 0064 1868     		ldr	r0, [r3]
 31771 0066 0469     		ldr	r4, [r0, #16]
15619:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Y_AXIS_REG,
 31772              		.loc 1 15619 32 view .LVU9172
 31773 0068 0123     		movs	r3, #1
 31774 006a 0DF10702 		add	r2, sp, #7
 31775 006e 1221     		movs	r1, #18
 31776 0070 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31777 0072 A047     		blx	r4
 31778              	.LVL4029:
15623:Core/Src/bno055.c ****                     break;
 31779              		.loc 1 15623 21 is_stmt 1 view .LVU9173
15623:Core/Src/bno055.c ****                     break;
 31780              		.loc 1 15623 32 is_stmt 0 view .LVU9174
 31781 0074 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31782 0078 C3F3C003 		ubfx	r3, r3, #3, #1
15623:Core/Src/bno055.c ****                     break;
 31783              		.loc 1 15623 30 view .LVU9175
 31784 007c 2B70     		strb	r3, [r5]
15624:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Z_AXIS:
 31785              		.loc 1 15624 21 is_stmt 1 view .LVU9176
 31786 007e D9E7     		b	.L2293
 31787              	.LVL4030:
 31788              	.L2297:
15628:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Z_AXIS_REG,
 31789              		.loc 1 15628 21 view .LVU9177
15628:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Z_AXIS_REG,
 31790              		.loc 1 15628 40 is_stmt 0 view .LVU9178
 31791 0080 0A4B     		ldr	r3, .L2304
 31792 0082 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccOloYeZ.s 			page 901


 31793 0084 0469     		ldr	r4, [r0, #16]
15628:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Z_AXIS_REG,
 31794              		.loc 1 15628 32 view .LVU9179
 31795 0086 0123     		movs	r3, #1
 31796 0088 0DF10702 		add	r2, sp, #7
 31797 008c 1221     		movs	r1, #18
 31798 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31799 0090 A047     		blx	r4
 31800              	.LVL4031:
15632:Core/Src/bno055.c ****                     break;
 31801              		.loc 1 15632 21 is_stmt 1 view .LVU9180
15632:Core/Src/bno055.c ****                     break;
 31802              		.loc 1 15632 32 is_stmt 0 view .LVU9181
 31803 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31804 0096 C3F30013 		ubfx	r3, r3, #4, #1
15632:Core/Src/bno055.c ****                     break;
 31805              		.loc 1 15632 30 view .LVU9182
 31806 009a 2B70     		strb	r3, [r5]
15633:Core/Src/bno055.c ****                 default:
 31807              		.loc 1 15633 21 is_stmt 1 view .LVU9183
 31808 009c CAE7     		b	.L2293
 31809              	.LVL4032:
 31810              	.L2298:
15592:Core/Src/bno055.c ****     }
 31811              		.loc 1 15592 16 is_stmt 0 view .LVU9184
 31812 009e 6FF07E00 		mvn	r0, #126
 31813              	.LVL4033:
15592:Core/Src/bno055.c ****     }
 31814              		.loc 1 15592 16 view .LVU9185
 31815 00a2 C7E7     		b	.L2293
 31816              	.LVL4034:
 31817              	.L2299:
15641:Core/Src/bno055.c ****         }
 31818              		.loc 1 15641 22 view .LVU9186
 31819 00a4 4FF0FF30 		mov	r0, #-1
 31820 00a8 C4E7     		b	.L2293
 31821              	.L2305:
 31822 00aa 00BF     		.align	2
 31823              	.L2304:
 31824 00ac 00000000 		.word	p_bno055
 31825              		.cfi_endproc
 31826              	.LFE229:
 31828              		.section	.text.bno055_set_accel_any_motion_no_motion_axis_enable,"ax",%progbits
 31829              		.align	1
 31830              		.global	bno055_set_accel_any_motion_no_motion_axis_enable
 31831              		.syntax unified
 31832              		.thumb
 31833              		.thumb_func
 31835              	bno055_set_accel_any_motion_no_motion_axis_enable:
 31836              	.LVL4035:
 31837              	.LFB230:
15647:Core/Src/bno055.c **** 
15648:Core/Src/bno055.c **** /*!
15649:Core/Src/bno055.c ****  *  @brief This API used to write the accel anymotion enable
15650:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 2 to 4
15651:Core/Src/bno055.c ****  *
15652:Core/Src/bno055.c ****  *  @param data_u8 : The value of accel anymotion enable
ARM GAS  /tmp/ccOloYeZ.s 			page 902


15653:Core/Src/bno055.c ****  *     data_u8 | result
15654:Core/Src/bno055.c ****  *  ------------ | -------------
15655:Core/Src/bno055.c ****  *      0x01     | BNO055_BIT_ENABLE
15656:Core/Src/bno055.c ****  *      0x00     | BNO055_BIT_DISABLE
15657:Core/Src/bno055.c ****  *  @param channel_u8 : The value of accel anymotion axis selection
15658:Core/Src/bno055.c ****  *           channel_u8                        | value
15659:Core/Src/bno055.c ****  *     --------------------------                | ----------
15660:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_X_AXIS  |   0
15661:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS  |   1
15662:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS  |   2
15663:Core/Src/bno055.c ****  *
15664:Core/Src/bno055.c ****  *  @return results of bus communication function
15665:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15666:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15667:Core/Src/bno055.c ****  *
15668:Core/Src/bno055.c ****  *
15669:Core/Src/bno055.c ****  */
15670:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_any_motion_no_motion_axis_enable(u8 channel_u8, u8 dat
15671:Core/Src/bno055.c **** {
 31838              		.loc 1 15671 1 is_stmt 1 view -0
 31839              		.cfi_startproc
 31840              		@ args = 0, pretend = 0, frame = 8
 31841              		@ frame_needed = 0, uses_anonymous_args = 0
 31842              		.loc 1 15671 1 is_stmt 0 view .LVU9188
 31843 0000 70B5     		push	{r4, r5, r6, lr}
 31844              		.cfi_def_cfa_offset 16
 31845              		.cfi_offset 4, -16
 31846              		.cfi_offset 5, -12
 31847              		.cfi_offset 6, -8
 31848              		.cfi_offset 14, -4
 31849 0002 82B0     		sub	sp, sp, #8
 31850              		.cfi_def_cfa_offset 24
15672:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31851              		.loc 1 15672 5 is_stmt 1 view .LVU9189
 31852              	.LVL4036:
15673:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31853              		.loc 1 15673 5 view .LVU9190
 31854              		.loc 1 15673 8 is_stmt 0 view .LVU9191
 31855 0004 0023     		movs	r3, #0
 31856 0006 8DF80730 		strb	r3, [sp, #7]
15674:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31857              		.loc 1 15674 5 is_stmt 1 view .LVU9192
 31858              	.LVL4037:
15675:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 31859              		.loc 1 15675 5 view .LVU9193
15676:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 31860              		.loc 1 15676 5 view .LVU9194
 31861              		.loc 1 15676 8 is_stmt 0 view .LVU9195
 31862 000a 8DF80630 		strb	r3, [sp, #6]
15677:Core/Src/bno055.c **** 
15678:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15679:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31863              		.loc 1 15679 5 is_stmt 1 view .LVU9196
 31864              		.loc 1 15679 18 is_stmt 0 view .LVU9197
 31865 000e 524B     		ldr	r3, .L2322
 31866 0010 1B68     		ldr	r3, [r3]
 31867              		.loc 1 15679 8 view .LVU9198
ARM GAS  /tmp/ccOloYeZ.s 			page 903


 31868 0012 002B     		cmp	r3, #0
 31869 0014 00F09D80 		beq	.L2312
 31870 0018 0446     		mov	r4, r0
 31871 001a 0D46     		mov	r5, r1
15680:Core/Src/bno055.c ****     {
15681:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15682:Core/Src/bno055.c ****     }
15683:Core/Src/bno055.c ****     else
15684:Core/Src/bno055.c ****     {
15685:Core/Src/bno055.c ****         /* The write operation effective only if the operation
15686:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
15687:Core/Src/bno055.c ****          * current operation mode and set the config mode */
15688:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 31872              		.loc 1 15688 9 is_stmt 1 view .LVU9199
 31873              		.loc 1 15688 19 is_stmt 0 view .LVU9200
 31874 001c 0DF10600 		add	r0, sp, #6
 31875              	.LVL4038:
 31876              		.loc 1 15688 19 view .LVU9201
 31877 0020 FFF7FEFF 		bl	bno055_get_operation_mode
 31878              	.LVL4039:
15689:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 31879              		.loc 1 15689 9 is_stmt 1 view .LVU9202
 31880              		.loc 1 15689 12 is_stmt 0 view .LVU9203
 31881 0024 0646     		mov	r6, r0
 31882 0026 0028     		cmp	r0, #0
 31883 0028 40F08280 		bne	.L2313
15690:Core/Src/bno055.c ****         {
15691:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 31884              		.loc 1 15691 13 is_stmt 1 view .LVU9204
 31885              		.loc 1 15691 32 is_stmt 0 view .LVU9205
 31886 002c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 31887              		.loc 1 15691 16 view .LVU9206
 31888 0030 1BB9     		cbnz	r3, .L2318
 31889              	.LVL4040:
 31890              	.L2309:
15692:Core/Src/bno055.c ****             {
15693:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
15694:Core/Src/bno055.c ****             }
15695:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 31891              		.loc 1 15695 13 is_stmt 1 view .LVU9207
 31892              		.loc 1 15695 16 is_stmt 0 view .LVU9208
 31893 0032 46B1     		cbz	r6, .L2319
15696:Core/Src/bno055.c ****             {
15697:Core/Src/bno055.c ****                 /* Write page as one */
15698:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15699:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
15700:Core/Src/bno055.c ****                 {
15701:Core/Src/bno055.c ****                     switch (channel_u8)
15702:Core/Src/bno055.c ****                     {
15703:Core/Src/bno055.c ****                         case BNO055_ACCEL_ANY_MOTION_NO_MOTION_X_AXIS:
15704:Core/Src/bno055.c **** 
15705:Core/Src/bno055.c ****                             /* Write the value of
15706:Core/Src/bno055.c ****                              * accel anymotion x enable*/
15707:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15708:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
15709:Core/Src/bno055.c ****                                                                       &data_u8r,
15710:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
ARM GAS  /tmp/ccOloYeZ.s 			page 904


15711:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15712:Core/Src/bno055.c ****                             {
15713:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_X_
15714:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15715:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
15716:Core/Src/bno055.c ****                                                                             &data_u8r,
15717:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15718:Core/Src/bno055.c ****                             }
15719:Core/Src/bno055.c ****                             break;
15720:Core/Src/bno055.c ****                         case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS:
15721:Core/Src/bno055.c **** 
15722:Core/Src/bno055.c ****                             /* Write the value of
15723:Core/Src/bno055.c ****                              * accel anymotion y enable*/
15724:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15725:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
15726:Core/Src/bno055.c ****                                                                       &data_u8r,
15727:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15728:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15729:Core/Src/bno055.c ****                             {
15730:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_Y_
15731:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15732:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
15733:Core/Src/bno055.c ****                                                                             &data_u8r,
15734:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15735:Core/Src/bno055.c ****                             }
15736:Core/Src/bno055.c ****                             break;
15737:Core/Src/bno055.c ****                         case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Z_AXIS:
15738:Core/Src/bno055.c **** 
15739:Core/Src/bno055.c ****                             /* Write the value of
15740:Core/Src/bno055.c ****                              * accel anymotion z enable*/
15741:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15742:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
15743:Core/Src/bno055.c ****                                                                       &data_u8r,
15744:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15745:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15746:Core/Src/bno055.c ****                             {
15747:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_Z_
15748:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15749:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
15750:Core/Src/bno055.c ****                                                                             &data_u8r,
15751:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15752:Core/Src/bno055.c ****                             }
15753:Core/Src/bno055.c ****                             break;
15754:Core/Src/bno055.c ****                         default:
15755:Core/Src/bno055.c ****                             com_rslt = BNO055_OUT_OF_RANGE;
15756:Core/Src/bno055.c ****                             break;
15757:Core/Src/bno055.c ****                     }
15758:Core/Src/bno055.c ****                 }
15759:Core/Src/bno055.c ****                 else
15760:Core/Src/bno055.c ****                 {
15761:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
15762:Core/Src/bno055.c ****                 }
15763:Core/Src/bno055.c ****             }
15764:Core/Src/bno055.c ****             else
15765:Core/Src/bno055.c ****             {
15766:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 31894              		.loc 1 15766 26 view .LVU9209
ARM GAS  /tmp/ccOloYeZ.s 			page 905


 31895 0034 4FF0FF34 		mov	r4, #-1
 31896 0038 7CE0     		b	.L2308
 31897              	.LVL4041:
 31898              	.L2318:
15693:Core/Src/bno055.c ****             }
 31899              		.loc 1 15693 17 is_stmt 1 view .LVU9210
15693:Core/Src/bno055.c ****             }
 31900              		.loc 1 15693 28 is_stmt 0 view .LVU9211
 31901 003a FFF7FEFF 		bl	bno055_set_operation_mode
 31902              	.LVL4042:
15693:Core/Src/bno055.c ****             }
 31903              		.loc 1 15693 25 view .LVU9212
 31904 003e 56FA80F6 		uxtab	r6, r6, r0
 31905 0042 76B2     		sxtb	r6, r6
 31906              	.LVL4043:
15693:Core/Src/bno055.c ****             }
 31907              		.loc 1 15693 25 view .LVU9213
 31908 0044 F5E7     		b	.L2309
 31909              	.L2319:
15698:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 31910              		.loc 1 15698 17 is_stmt 1 view .LVU9214
15698:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 31911              		.loc 1 15698 30 is_stmt 0 view .LVU9215
 31912 0046 0120     		movs	r0, #1
 31913 0048 FFF7FEFF 		bl	bno055_write_page_id
 31914              	.LVL4044:
15699:Core/Src/bno055.c ****                 {
 31915              		.loc 1 15699 17 is_stmt 1 view .LVU9216
15699:Core/Src/bno055.c ****                 {
 31916              		.loc 1 15699 20 is_stmt 0 view .LVU9217
 31917 004c 0028     		cmp	r0, #0
 31918 004e 77D1     		bne	.L2315
15701:Core/Src/bno055.c ****                     {
 31919              		.loc 1 15701 21 is_stmt 1 view .LVU9218
 31920 0050 012C     		cmp	r4, #1
 31921 0052 28D0     		beq	.L2310
 31922 0054 022C     		cmp	r4, #2
 31923 0056 49D0     		beq	.L2311
 31924 0058 14B1     		cbz	r4, .L2320
 31925 005a 6FF00104 		mvn	r4, #1
 31926 005e 69E0     		b	.L2308
 31927              	.L2320:
15707:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
 31928              		.loc 1 15707 29 view .LVU9219
15707:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
 31929              		.loc 1 15707 48 is_stmt 0 view .LVU9220
 31930 0060 3D4B     		ldr	r3, .L2322
 31931 0062 1868     		ldr	r0, [r3]
 31932              	.LVL4045:
15707:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
 31933              		.loc 1 15707 48 view .LVU9221
 31934 0064 0469     		ldr	r4, [r0, #16]
15707:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
 31935              		.loc 1 15707 40 view .LVU9222
 31936 0066 0123     		movs	r3, #1
 31937 0068 0DF10702 		add	r2, sp, #7
 31938 006c 1221     		movs	r1, #18
ARM GAS  /tmp/ccOloYeZ.s 			page 906


 31939 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31940 0070 A047     		blx	r4
 31941              	.LVL4046:
15711:Core/Src/bno055.c ****                             {
 31942              		.loc 1 15711 29 is_stmt 1 view .LVU9223
15711:Core/Src/bno055.c ****                             {
 31943              		.loc 1 15711 32 is_stmt 0 view .LVU9224
 31944 0072 0446     		mov	r4, r0
 31945 0074 0028     		cmp	r0, #0
 31946 0076 5DD1     		bne	.L2308
15713:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 31947              		.loc 1 15713 33 is_stmt 1 view .LVU9225
15713:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 31948              		.loc 1 15713 44 is_stmt 0 view .LVU9226
 31949 0078 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31950 007c AA00     		lsls	r2, r5, #2
 31951 007e 02F00402 		and	r2, r2, #4
 31952 0082 23F00403 		bic	r3, r3, #4
 31953 0086 1343     		orrs	r3, r3, r2
15713:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 31954              		.loc 1 15713 42 view .LVU9227
 31955 0088 8DF80730 		strb	r3, [sp, #7]
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 31956              		.loc 1 15714 33 is_stmt 1 view .LVU9228
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 31957              		.loc 1 15714 53 is_stmt 0 view .LVU9229
 31958 008c 324B     		ldr	r3, .L2322
 31959 008e 1868     		ldr	r0, [r3]
 31960              	.LVL4047:
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 31961              		.loc 1 15714 53 view .LVU9230
 31962 0090 C568     		ldr	r5, [r0, #12]
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 31963              		.loc 1 15714 45 view .LVU9231
 31964 0092 0123     		movs	r3, #1
 31965 0094 0DF10702 		add	r2, sp, #7
 31966 0098 1221     		movs	r1, #18
 31967 009a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31968 009c A847     		blx	r5
 31969              	.LVL4048:
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 31970              		.loc 1 15714 42 view .LVU9232
 31971 009e 54FA80F3 		uxtab	r3, r4, r0
 31972 00a2 5CB2     		sxtb	r4, r3
 31973              	.LVL4049:
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 31974              		.loc 1 15714 42 view .LVU9233
 31975 00a4 46E0     		b	.L2308
 31976              	.LVL4050:
 31977              	.L2310:
15724:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
 31978              		.loc 1 15724 29 is_stmt 1 view .LVU9234
15724:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
 31979              		.loc 1 15724 48 is_stmt 0 view .LVU9235
 31980 00a6 2C4B     		ldr	r3, .L2322
 31981 00a8 1868     		ldr	r0, [r3]
 31982              	.LVL4051:
ARM GAS  /tmp/ccOloYeZ.s 			page 907


15724:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
 31983              		.loc 1 15724 48 view .LVU9236
 31984 00aa 0469     		ldr	r4, [r0, #16]
15724:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
 31985              		.loc 1 15724 40 view .LVU9237
 31986 00ac 0123     		movs	r3, #1
 31987 00ae 0DF10702 		add	r2, sp, #7
 31988 00b2 1221     		movs	r1, #18
 31989 00b4 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31990 00b6 A047     		blx	r4
 31991              	.LVL4052:
15728:Core/Src/bno055.c ****                             {
 31992              		.loc 1 15728 29 is_stmt 1 view .LVU9238
15728:Core/Src/bno055.c ****                             {
 31993              		.loc 1 15728 32 is_stmt 0 view .LVU9239
 31994 00b8 0446     		mov	r4, r0
 31995 00ba 0028     		cmp	r0, #0
 31996 00bc 3AD1     		bne	.L2308
15730:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 31997              		.loc 1 15730 33 is_stmt 1 view .LVU9240
15730:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 31998              		.loc 1 15730 44 is_stmt 0 view .LVU9241
 31999 00be 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32000 00c2 EA00     		lsls	r2, r5, #3
 32001 00c4 02F00802 		and	r2, r2, #8
 32002 00c8 23F00803 		bic	r3, r3, #8
 32003 00cc 1343     		orrs	r3, r3, r2
15730:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32004              		.loc 1 15730 42 view .LVU9242
 32005 00ce 8DF80730 		strb	r3, [sp, #7]
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32006              		.loc 1 15731 33 is_stmt 1 view .LVU9243
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32007              		.loc 1 15731 53 is_stmt 0 view .LVU9244
 32008 00d2 214B     		ldr	r3, .L2322
 32009 00d4 1868     		ldr	r0, [r3]
 32010              	.LVL4053:
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32011              		.loc 1 15731 53 view .LVU9245
 32012 00d6 C568     		ldr	r5, [r0, #12]
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32013              		.loc 1 15731 45 view .LVU9246
 32014 00d8 0123     		movs	r3, #1
 32015 00da 0DF10702 		add	r2, sp, #7
 32016 00de 1221     		movs	r1, #18
 32017 00e0 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32018 00e2 A847     		blx	r5
 32019              	.LVL4054:
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32020              		.loc 1 15731 42 view .LVU9247
 32021 00e4 54FA80F3 		uxtab	r3, r4, r0
 32022 00e8 5CB2     		sxtb	r4, r3
 32023              	.LVL4055:
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32024              		.loc 1 15731 42 view .LVU9248
 32025 00ea 23E0     		b	.L2308
 32026              	.LVL4056:
ARM GAS  /tmp/ccOloYeZ.s 			page 908


 32027              	.L2311:
15741:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
 32028              		.loc 1 15741 29 is_stmt 1 view .LVU9249
15741:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
 32029              		.loc 1 15741 48 is_stmt 0 view .LVU9250
 32030 00ec 1A4B     		ldr	r3, .L2322
 32031 00ee 1868     		ldr	r0, [r3]
 32032              	.LVL4057:
15741:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
 32033              		.loc 1 15741 48 view .LVU9251
 32034 00f0 0469     		ldr	r4, [r0, #16]
15741:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
 32035              		.loc 1 15741 40 view .LVU9252
 32036 00f2 0123     		movs	r3, #1
 32037 00f4 0DF10702 		add	r2, sp, #7
 32038 00f8 1221     		movs	r1, #18
 32039 00fa 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32040 00fc A047     		blx	r4
 32041              	.LVL4058:
15745:Core/Src/bno055.c ****                             {
 32042              		.loc 1 15745 29 is_stmt 1 view .LVU9253
15745:Core/Src/bno055.c ****                             {
 32043              		.loc 1 15745 32 is_stmt 0 view .LVU9254
 32044 00fe 0446     		mov	r4, r0
 32045 0100 C0B9     		cbnz	r0, .L2308
15747:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32046              		.loc 1 15747 33 is_stmt 1 view .LVU9255
15747:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32047              		.loc 1 15747 44 is_stmt 0 view .LVU9256
 32048 0102 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 32049 0106 2B01     		lsls	r3, r5, #4
 32050 0108 03F01003 		and	r3, r3, #16
 32051 010c 22F01002 		bic	r2, r2, #16
 32052 0110 1343     		orrs	r3, r3, r2
15747:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32053              		.loc 1 15747 42 view .LVU9257
 32054 0112 8DF80730 		strb	r3, [sp, #7]
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32055              		.loc 1 15748 33 is_stmt 1 view .LVU9258
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32056              		.loc 1 15748 53 is_stmt 0 view .LVU9259
 32057 0116 104B     		ldr	r3, .L2322
 32058 0118 1868     		ldr	r0, [r3]
 32059              	.LVL4059:
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32060              		.loc 1 15748 53 view .LVU9260
 32061 011a C568     		ldr	r5, [r0, #12]
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32062              		.loc 1 15748 45 view .LVU9261
 32063 011c 0123     		movs	r3, #1
 32064 011e 0DF10702 		add	r2, sp, #7
 32065 0122 1221     		movs	r1, #18
 32066 0124 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32067 0126 A847     		blx	r5
 32068              	.LVL4060:
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32069              		.loc 1 15748 42 view .LVU9262
ARM GAS  /tmp/ccOloYeZ.s 			page 909


 32070 0128 54FA80F3 		uxtab	r3, r4, r0
 32071 012c 5CB2     		sxtb	r4, r3
 32072              	.LVL4061:
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32073              		.loc 1 15748 42 view .LVU9263
 32074 012e 01E0     		b	.L2308
 32075              	.LVL4062:
 32076              	.L2313:
15767:Core/Src/bno055.c ****             }
15768:Core/Src/bno055.c ****         }
15769:Core/Src/bno055.c ****         else
15770:Core/Src/bno055.c ****         {
15771:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 32077              		.loc 1 15771 22 view .LVU9264
 32078 0130 4FF0FF34 		mov	r4, #-1
 32079              	.LVL4063:
 32080              	.L2308:
15772:Core/Src/bno055.c ****         }
15773:Core/Src/bno055.c ****     }
15774:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 32081              		.loc 1 15774 5 is_stmt 1 view .LVU9265
 32082              		.loc 1 15774 24 is_stmt 0 view .LVU9266
 32083 0134 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 32084              		.loc 1 15774 8 view .LVU9267
 32085 0138 28B9     		cbnz	r0, .L2321
 32086              	.LVL4064:
 32087              	.L2307:
15775:Core/Src/bno055.c ****     {
15776:Core/Src/bno055.c ****         /* set the operation mode of
15777:Core/Src/bno055.c ****          * previous operation mode*/
15778:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
15779:Core/Src/bno055.c ****     }
15780:Core/Src/bno055.c **** 
15781:Core/Src/bno055.c ****     return com_rslt;
15782:Core/Src/bno055.c **** }
 32088              		.loc 1 15782 1 view .LVU9268
 32089 013a 2046     		mov	r0, r4
 32090 013c 02B0     		add	sp, sp, #8
 32091              		.cfi_remember_state
 32092              		.cfi_def_cfa_offset 16
 32093              		@ sp needed
 32094 013e 70BD     		pop	{r4, r5, r6, pc}
 32095              	.LVL4065:
 32096              	.L2315:
 32097              		.cfi_restore_state
15761:Core/Src/bno055.c ****                 }
 32098              		.loc 1 15761 30 view .LVU9269
 32099 0140 4FF0FF34 		mov	r4, #-1
 32100 0144 F6E7     		b	.L2308
 32101              	.LVL4066:
 32102              	.L2321:
15778:Core/Src/bno055.c ****     }
 32103              		.loc 1 15778 9 is_stmt 1 view .LVU9270
15778:Core/Src/bno055.c ****     }
 32104              		.loc 1 15778 21 is_stmt 0 view .LVU9271
 32105 0146 FFF7FEFF 		bl	bno055_set_operation_mode
 32106              	.LVL4067:
ARM GAS  /tmp/ccOloYeZ.s 			page 910


15778:Core/Src/bno055.c ****     }
 32107              		.loc 1 15778 18 view .LVU9272
 32108 014a 54FA80F0 		uxtab	r0, r4, r0
 32109 014e 44B2     		sxtb	r4, r0
 32110              	.LVL4068:
15778:Core/Src/bno055.c ****     }
 32111              		.loc 1 15778 18 view .LVU9273
 32112 0150 F3E7     		b	.L2307
 32113              	.LVL4069:
 32114              	.L2312:
15681:Core/Src/bno055.c ****     }
 32115              		.loc 1 15681 16 view .LVU9274
 32116 0152 6FF07E04 		mvn	r4, #126
 32117 0156 F0E7     		b	.L2307
 32118              	.L2323:
 32119              		.align	2
 32120              	.L2322:
 32121 0158 00000000 		.word	p_bno055
 32122              		.cfi_endproc
 32123              	.LFE230:
 32125              		.section	.text.bno055_get_accel_high_g_axis_enable,"ax",%progbits
 32126              		.align	1
 32127              		.global	bno055_get_accel_high_g_axis_enable
 32128              		.syntax unified
 32129              		.thumb
 32130              		.thumb_func
 32132              	bno055_get_accel_high_g_axis_enable:
 32133              	.LVL4070:
 32134              	.LFB231:
15783:Core/Src/bno055.c **** 
15784:Core/Src/bno055.c **** /*!
15785:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg enable
15786:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 5 to 7
15787:Core/Src/bno055.c ****  *
15788:Core/Src/bno055.c ****  *  @param data_u8 : The value of accel highg enable
15789:Core/Src/bno055.c ****  *      data_u8| result
15790:Core/Src/bno055.c ****  *  ------------ | -------------
15791:Core/Src/bno055.c ****  *      0x01     | BNO055_BIT_ENABLE
15792:Core/Src/bno055.c ****  *      0x00     | BNO055_BIT_DISABLE
15793:Core/Src/bno055.c ****  *  @param channel_u8 : The value of accel highg axis selection
15794:Core/Src/bno055.c ****  *               channel_u8     | value
15795:Core/Src/bno055.c ****  *     -------------------------- | ----------
15796:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_X_AXIS |   0
15797:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_Y_AXIS |   1
15798:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_Z_AXIS |   2
15799:Core/Src/bno055.c ****  *
15800:Core/Src/bno055.c ****  *  @return results of bus communication function
15801:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15802:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15803:Core/Src/bno055.c ****  *
15804:Core/Src/bno055.c ****  *
15805:Core/Src/bno055.c ****  */
15806:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_high_g_axis_enable(u8 channel_u8, u8 *data_u8)
15807:Core/Src/bno055.c **** {
 32135              		.loc 1 15807 1 is_stmt 1 view -0
 32136              		.cfi_startproc
 32137              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccOloYeZ.s 			page 911


 32138              		@ frame_needed = 0, uses_anonymous_args = 0
 32139              		.loc 1 15807 1 is_stmt 0 view .LVU9276
 32140 0000 30B5     		push	{r4, r5, lr}
 32141              		.cfi_def_cfa_offset 12
 32142              		.cfi_offset 4, -12
 32143              		.cfi_offset 5, -8
 32144              		.cfi_offset 14, -4
 32145 0002 83B0     		sub	sp, sp, #12
 32146              		.cfi_def_cfa_offset 24
15808:Core/Src/bno055.c ****     /* Variable used to return value of
15809:Core/Src/bno055.c ****      * communication routine*/
15810:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32147              		.loc 1 15810 5 is_stmt 1 view .LVU9277
 32148              	.LVL4071:
15811:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32149              		.loc 1 15811 5 view .LVU9278
 32150              		.loc 1 15811 8 is_stmt 0 view .LVU9279
 32151 0004 0023     		movs	r3, #0
 32152 0006 8DF80730 		strb	r3, [sp, #7]
15812:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32153              		.loc 1 15812 5 is_stmt 1 view .LVU9280
 32154              	.LVL4072:
15813:Core/Src/bno055.c **** 
15814:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15815:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32155              		.loc 1 15815 5 view .LVU9281
 32156              		.loc 1 15815 18 is_stmt 0 view .LVU9282
 32157 000a 274B     		ldr	r3, .L2336
 32158 000c 1B68     		ldr	r3, [r3]
 32159              		.loc 1 15815 8 view .LVU9283
 32160 000e 002B     		cmp	r3, #0
 32161 0010 44D0     		beq	.L2330
 32162 0012 0446     		mov	r4, r0
 32163 0014 0D46     		mov	r5, r1
15816:Core/Src/bno055.c ****     {
15817:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15818:Core/Src/bno055.c ****     }
15819:Core/Src/bno055.c ****     else
15820:Core/Src/bno055.c ****     {
15821:Core/Src/bno055.c ****         /*condition check for page, accel highg enable is
15822:Core/Src/bno055.c ****          * available in the page one*/
15823:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 32164              		.loc 1 15823 9 is_stmt 1 view .LVU9284
 32165              		.loc 1 15823 21 is_stmt 0 view .LVU9285
 32166 0016 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32167              		.loc 1 15823 12 view .LVU9286
 32168 0018 012B     		cmp	r3, #1
 32169 001a 0DD1     		bne	.L2334
 32170              	.LVL4073:
 32171              	.L2326:
15824:Core/Src/bno055.c ****         {
15825:Core/Src/bno055.c ****             /* Write page as one */
15826:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15827:Core/Src/bno055.c ****         }
15828:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 32172              		.loc 1 15828 53 discriminator 1 view .LVU9287
 32173 001c 224B     		ldr	r3, .L2336
ARM GAS  /tmp/ccOloYeZ.s 			page 912


 32174 001e 1B68     		ldr	r3, [r3]
 32175 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32176              		.loc 1 15828 41 discriminator 1 view .LVU9288
 32177 0022 012B     		cmp	r3, #1
 32178 0024 3DD1     		bne	.L2331
 32179              	.L2327:
15829:Core/Src/bno055.c ****         {
15830:Core/Src/bno055.c ****             switch (channel_u8)
 32180              		.loc 1 15830 13 is_stmt 1 view .LVU9289
 32181 0026 012C     		cmp	r4, #1
 32182 0028 1BD0     		beq	.L2328
 32183 002a 022C     		cmp	r4, #2
 32184 002c 28D0     		beq	.L2329
 32185 002e 4CB1     		cbz	r4, .L2335
 32186 0030 6FF00100 		mvn	r0, #1
 32187              	.LVL4074:
 32188              	.L2325:
15831:Core/Src/bno055.c ****             {
15832:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_X_AXIS:
15833:Core/Src/bno055.c **** 
15834:Core/Src/bno055.c ****                     /* Read the value of accel x highg enable*/
15835:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15836:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_X_AXIS_REG,
15837:Core/Src/bno055.c ****                                                               &data_u8r,
15838:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15839:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_X_AXIS);
15840:Core/Src/bno055.c ****                     break;
15841:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_Y_AXIS:
15842:Core/Src/bno055.c **** 
15843:Core/Src/bno055.c ****                     /* Read the value of accel y highg enable*/
15844:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15845:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Y_AXIS_REG,
15846:Core/Src/bno055.c ****                                                               &data_u8r,
15847:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15848:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_Y_AXIS);
15849:Core/Src/bno055.c ****                     break;
15850:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_Z_AXIS:
15851:Core/Src/bno055.c **** 
15852:Core/Src/bno055.c ****                     /* Read the value of accel z highg enable*/
15853:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15854:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Z_AXIS_REG,
15855:Core/Src/bno055.c ****                                                               &data_u8r,
15856:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15857:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_Z_AXIS);
15858:Core/Src/bno055.c ****                     break;
15859:Core/Src/bno055.c ****                 default:
15860:Core/Src/bno055.c ****                     com_rslt = BNO055_OUT_OF_RANGE;
15861:Core/Src/bno055.c ****                     break;
15862:Core/Src/bno055.c ****             }
15863:Core/Src/bno055.c ****         }
15864:Core/Src/bno055.c ****         else
15865:Core/Src/bno055.c ****         {
15866:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15867:Core/Src/bno055.c ****         }
15868:Core/Src/bno055.c ****     }
15869:Core/Src/bno055.c **** 
15870:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/ccOloYeZ.s 			page 913


15871:Core/Src/bno055.c **** }
 32189              		.loc 1 15871 1 is_stmt 0 view .LVU9290
 32190 0034 03B0     		add	sp, sp, #12
 32191              		.cfi_remember_state
 32192              		.cfi_def_cfa_offset 12
 32193              		@ sp needed
 32194 0036 30BD     		pop	{r4, r5, pc}
 32195              	.LVL4075:
 32196              	.L2334:
 32197              		.cfi_restore_state
15826:Core/Src/bno055.c ****         }
 32198              		.loc 1 15826 13 is_stmt 1 view .LVU9291
15826:Core/Src/bno055.c ****         }
 32199              		.loc 1 15826 23 is_stmt 0 view .LVU9292
 32200 0038 0120     		movs	r0, #1
 32201              	.LVL4076:
15826:Core/Src/bno055.c ****         }
 32202              		.loc 1 15826 23 view .LVU9293
 32203 003a FFF7FEFF 		bl	bno055_write_page_id
 32204              	.LVL4077:
15828:Core/Src/bno055.c ****         {
 32205              		.loc 1 15828 9 is_stmt 1 view .LVU9294
15828:Core/Src/bno055.c ****         {
 32206              		.loc 1 15828 12 is_stmt 0 view .LVU9295
 32207 003e 0028     		cmp	r0, #0
 32208 0040 F1D0     		beq	.L2327
 32209 0042 EBE7     		b	.L2326
 32210              	.LVL4078:
 32211              	.L2335:
15835:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_X_AXIS_REG,
 32212              		.loc 1 15835 21 is_stmt 1 view .LVU9296
15835:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_X_AXIS_REG,
 32213              		.loc 1 15835 40 is_stmt 0 view .LVU9297
 32214 0044 184B     		ldr	r3, .L2336
 32215 0046 1868     		ldr	r0, [r3]
 32216 0048 0469     		ldr	r4, [r0, #16]
15835:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_X_AXIS_REG,
 32217              		.loc 1 15835 32 view .LVU9298
 32218 004a 0123     		movs	r3, #1
 32219 004c 0DF10702 		add	r2, sp, #7
 32220 0050 1221     		movs	r1, #18
 32221 0052 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32222 0054 A047     		blx	r4
 32223              	.LVL4079:
15839:Core/Src/bno055.c ****                     break;
 32224              		.loc 1 15839 21 is_stmt 1 view .LVU9299
15839:Core/Src/bno055.c ****                     break;
 32225              		.loc 1 15839 32 is_stmt 0 view .LVU9300
 32226 0056 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32227 005a C3F34013 		ubfx	r3, r3, #5, #1
15839:Core/Src/bno055.c ****                     break;
 32228              		.loc 1 15839 30 view .LVU9301
 32229 005e 2B70     		strb	r3, [r5]
15840:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_Y_AXIS:
 32230              		.loc 1 15840 21 is_stmt 1 view .LVU9302
 32231 0060 E8E7     		b	.L2325
 32232              	.LVL4080:
ARM GAS  /tmp/ccOloYeZ.s 			page 914


 32233              	.L2328:
15844:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Y_AXIS_REG,
 32234              		.loc 1 15844 21 view .LVU9303
15844:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Y_AXIS_REG,
 32235              		.loc 1 15844 40 is_stmt 0 view .LVU9304
 32236 0062 114B     		ldr	r3, .L2336
 32237 0064 1868     		ldr	r0, [r3]
 32238 0066 0469     		ldr	r4, [r0, #16]
15844:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Y_AXIS_REG,
 32239              		.loc 1 15844 32 view .LVU9305
 32240 0068 0123     		movs	r3, #1
 32241 006a 0DF10702 		add	r2, sp, #7
 32242 006e 1221     		movs	r1, #18
 32243 0070 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32244 0072 A047     		blx	r4
 32245              	.LVL4081:
15848:Core/Src/bno055.c ****                     break;
 32246              		.loc 1 15848 21 is_stmt 1 view .LVU9306
15848:Core/Src/bno055.c ****                     break;
 32247              		.loc 1 15848 32 is_stmt 0 view .LVU9307
 32248 0074 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32249 0078 C3F38013 		ubfx	r3, r3, #6, #1
15848:Core/Src/bno055.c ****                     break;
 32250              		.loc 1 15848 30 view .LVU9308
 32251 007c 2B70     		strb	r3, [r5]
15849:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_Z_AXIS:
 32252              		.loc 1 15849 21 is_stmt 1 view .LVU9309
 32253 007e D9E7     		b	.L2325
 32254              	.LVL4082:
 32255              	.L2329:
15853:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Z_AXIS_REG,
 32256              		.loc 1 15853 21 view .LVU9310
15853:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Z_AXIS_REG,
 32257              		.loc 1 15853 40 is_stmt 0 view .LVU9311
 32258 0080 094B     		ldr	r3, .L2336
 32259 0082 1868     		ldr	r0, [r3]
 32260 0084 0469     		ldr	r4, [r0, #16]
15853:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Z_AXIS_REG,
 32261              		.loc 1 15853 32 view .LVU9312
 32262 0086 0123     		movs	r3, #1
 32263 0088 0DF10702 		add	r2, sp, #7
 32264 008c 1221     		movs	r1, #18
 32265 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32266 0090 A047     		blx	r4
 32267              	.LVL4083:
15857:Core/Src/bno055.c ****                     break;
 32268              		.loc 1 15857 21 is_stmt 1 view .LVU9313
15857:Core/Src/bno055.c ****                     break;
 32269              		.loc 1 15857 32 is_stmt 0 view .LVU9314
 32270 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32271 0096 DB09     		lsrs	r3, r3, #7
15857:Core/Src/bno055.c ****                     break;
 32272              		.loc 1 15857 30 view .LVU9315
 32273 0098 2B70     		strb	r3, [r5]
15858:Core/Src/bno055.c ****                 default:
 32274              		.loc 1 15858 21 is_stmt 1 view .LVU9316
 32275 009a CBE7     		b	.L2325
ARM GAS  /tmp/ccOloYeZ.s 			page 915


 32276              	.LVL4084:
 32277              	.L2330:
15817:Core/Src/bno055.c ****     }
 32278              		.loc 1 15817 16 is_stmt 0 view .LVU9317
 32279 009c 6FF07E00 		mvn	r0, #126
 32280              	.LVL4085:
15817:Core/Src/bno055.c ****     }
 32281              		.loc 1 15817 16 view .LVU9318
 32282 00a0 C8E7     		b	.L2325
 32283              	.LVL4086:
 32284              	.L2331:
15866:Core/Src/bno055.c ****         }
 32285              		.loc 1 15866 22 view .LVU9319
 32286 00a2 4FF0FF30 		mov	r0, #-1
 32287 00a6 C5E7     		b	.L2325
 32288              	.L2337:
 32289              		.align	2
 32290              	.L2336:
 32291 00a8 00000000 		.word	p_bno055
 32292              		.cfi_endproc
 32293              	.LFE231:
 32295              		.section	.text.bno055_set_accel_high_g_axis_enable,"ax",%progbits
 32296              		.align	1
 32297              		.global	bno055_set_accel_high_g_axis_enable
 32298              		.syntax unified
 32299              		.thumb
 32300              		.thumb_func
 32302              	bno055_set_accel_high_g_axis_enable:
 32303              	.LVL4087:
 32304              	.LFB232:
15872:Core/Src/bno055.c **** 
15873:Core/Src/bno055.c **** /*!
15874:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg enable
15875:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 5 to 7
15876:Core/Src/bno055.c ****  *
15877:Core/Src/bno055.c ****  *  @param data_u8 : The value of accel highg enable
15878:Core/Src/bno055.c ****  *      data_u8| result
15879:Core/Src/bno055.c ****  *  ------------ | -------------
15880:Core/Src/bno055.c ****  *      0x01     | BNO055_BIT_ENABLE
15881:Core/Src/bno055.c ****  *      0x00     | BNO055_BIT_DISABLE
15882:Core/Src/bno055.c ****  *  @param channel_u8 : The value of accel highg axis selection
15883:Core/Src/bno055.c ****  *               channel_u8     | value
15884:Core/Src/bno055.c ****  *     -------------------------- | ----------
15885:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_X_AXIS |   0
15886:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_Y_AXIS |   1
15887:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_Z_AXIS |   2
15888:Core/Src/bno055.c ****  *
15889:Core/Src/bno055.c ****  *  @return results of bus communication function
15890:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15891:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15892:Core/Src/bno055.c ****  *
15893:Core/Src/bno055.c ****  *
15894:Core/Src/bno055.c ****  */
15895:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_high_g_axis_enable(u8 channel_u8, u8 data_u8)
15896:Core/Src/bno055.c **** {
 32305              		.loc 1 15896 1 is_stmt 1 view -0
 32306              		.cfi_startproc
ARM GAS  /tmp/ccOloYeZ.s 			page 916


 32307              		@ args = 0, pretend = 0, frame = 8
 32308              		@ frame_needed = 0, uses_anonymous_args = 0
 32309              		.loc 1 15896 1 is_stmt 0 view .LVU9321
 32310 0000 70B5     		push	{r4, r5, r6, lr}
 32311              		.cfi_def_cfa_offset 16
 32312              		.cfi_offset 4, -16
 32313              		.cfi_offset 5, -12
 32314              		.cfi_offset 6, -8
 32315              		.cfi_offset 14, -4
 32316 0002 82B0     		sub	sp, sp, #8
 32317              		.cfi_def_cfa_offset 24
15897:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32318              		.loc 1 15897 5 is_stmt 1 view .LVU9322
 32319              	.LVL4088:
15898:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32320              		.loc 1 15898 5 view .LVU9323
 32321              		.loc 1 15898 8 is_stmt 0 view .LVU9324
 32322 0004 0023     		movs	r3, #0
 32323 0006 8DF80730 		strb	r3, [sp, #7]
15899:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32324              		.loc 1 15899 5 is_stmt 1 view .LVU9325
 32325              	.LVL4089:
15900:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 32326              		.loc 1 15900 5 view .LVU9326
15901:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 32327              		.loc 1 15901 5 view .LVU9327
 32328              		.loc 1 15901 8 is_stmt 0 view .LVU9328
 32329 000a 8DF80630 		strb	r3, [sp, #6]
15902:Core/Src/bno055.c **** 
15903:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15904:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32330              		.loc 1 15904 5 is_stmt 1 view .LVU9329
 32331              		.loc 1 15904 18 is_stmt 0 view .LVU9330
 32332 000e 514B     		ldr	r3, .L2354
 32333 0010 1B68     		ldr	r3, [r3]
 32334              		.loc 1 15904 8 view .LVU9331
 32335 0012 002B     		cmp	r3, #0
 32336 0014 00F09A80 		beq	.L2344
 32337 0018 0446     		mov	r4, r0
 32338 001a 0D46     		mov	r5, r1
15905:Core/Src/bno055.c ****     {
15906:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15907:Core/Src/bno055.c ****     }
15908:Core/Src/bno055.c ****     else
15909:Core/Src/bno055.c ****     {
15910:Core/Src/bno055.c ****         /* The write operation effective only if the operation
15911:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
15912:Core/Src/bno055.c ****          * current operation mode and set the config mode */
15913:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 32339              		.loc 1 15913 9 is_stmt 1 view .LVU9332
 32340              		.loc 1 15913 19 is_stmt 0 view .LVU9333
 32341 001c 0DF10600 		add	r0, sp, #6
 32342              	.LVL4090:
 32343              		.loc 1 15913 19 view .LVU9334
 32344 0020 FFF7FEFF 		bl	bno055_get_operation_mode
 32345              	.LVL4091:
15914:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
ARM GAS  /tmp/ccOloYeZ.s 			page 917


 32346              		.loc 1 15914 9 is_stmt 1 view .LVU9335
 32347              		.loc 1 15914 12 is_stmt 0 view .LVU9336
 32348 0024 0646     		mov	r6, r0
 32349 0026 0028     		cmp	r0, #0
 32350 0028 7FD1     		bne	.L2345
15915:Core/Src/bno055.c ****         {
15916:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 32351              		.loc 1 15916 13 is_stmt 1 view .LVU9337
 32352              		.loc 1 15916 32 is_stmt 0 view .LVU9338
 32353 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 32354              		.loc 1 15916 16 view .LVU9339
 32355 002e 1BB9     		cbnz	r3, .L2350
 32356              	.LVL4092:
 32357              	.L2341:
15917:Core/Src/bno055.c ****             {
15918:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
15919:Core/Src/bno055.c ****             }
15920:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 32358              		.loc 1 15920 13 is_stmt 1 view .LVU9340
 32359              		.loc 1 15920 16 is_stmt 0 view .LVU9341
 32360 0030 46B1     		cbz	r6, .L2351
15921:Core/Src/bno055.c ****             {
15922:Core/Src/bno055.c ****                 /* Write page as one */
15923:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15924:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
15925:Core/Src/bno055.c ****                 {
15926:Core/Src/bno055.c ****                     switch (channel_u8)
15927:Core/Src/bno055.c ****                     {
15928:Core/Src/bno055.c ****                         case BNO055_ACCEL_HIGH_G_X_AXIS:
15929:Core/Src/bno055.c **** 
15930:Core/Src/bno055.c ****                             /* Write the value of
15931:Core/Src/bno055.c ****                              * accel x highg enable*/
15932:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15933:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
15934:Core/Src/bno055.c ****                                                                       &data_u8r,
15935:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15936:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15937:Core/Src/bno055.c ****                             {
15938:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_X_AXIS
15939:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15940:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
15941:Core/Src/bno055.c ****                                                                             &data_u8r,
15942:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15943:Core/Src/bno055.c ****                             }
15944:Core/Src/bno055.c ****                             break;
15945:Core/Src/bno055.c ****                         case BNO055_ACCEL_HIGH_G_Y_AXIS:
15946:Core/Src/bno055.c **** 
15947:Core/Src/bno055.c ****                             /* Write the value of
15948:Core/Src/bno055.c ****                              * accel y highg enable*/
15949:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15950:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
15951:Core/Src/bno055.c ****                                                                       &data_u8r,
15952:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15953:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15954:Core/Src/bno055.c ****                             {
15955:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_Y_AXIS
15956:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccOloYeZ.s 			page 918


15957:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
15958:Core/Src/bno055.c ****                                                                             &data_u8r,
15959:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15960:Core/Src/bno055.c ****                             }
15961:Core/Src/bno055.c ****                             break;
15962:Core/Src/bno055.c ****                         case BNO055_ACCEL_HIGH_G_Z_AXIS:
15963:Core/Src/bno055.c **** 
15964:Core/Src/bno055.c ****                             /* Write the value of
15965:Core/Src/bno055.c ****                              * accel z highg enable*/
15966:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15967:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
15968:Core/Src/bno055.c ****                                                                       &data_u8r,
15969:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15970:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15971:Core/Src/bno055.c ****                             {
15972:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_Z_AXIS
15973:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15974:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
15975:Core/Src/bno055.c ****                                                                             &data_u8r,
15976:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15977:Core/Src/bno055.c ****                             }
15978:Core/Src/bno055.c ****                             break;
15979:Core/Src/bno055.c ****                         default:
15980:Core/Src/bno055.c ****                             com_rslt = BNO055_OUT_OF_RANGE;
15981:Core/Src/bno055.c ****                             break;
15982:Core/Src/bno055.c ****                     }
15983:Core/Src/bno055.c ****                 }
15984:Core/Src/bno055.c ****                 else
15985:Core/Src/bno055.c ****                 {
15986:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
15987:Core/Src/bno055.c ****                 }
15988:Core/Src/bno055.c ****             }
15989:Core/Src/bno055.c ****             else
15990:Core/Src/bno055.c ****             {
15991:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 32361              		.loc 1 15991 26 view .LVU9342
 32362 0032 4FF0FF34 		mov	r4, #-1
 32363 0036 7AE0     		b	.L2340
 32364              	.LVL4093:
 32365              	.L2350:
15918:Core/Src/bno055.c ****             }
 32366              		.loc 1 15918 17 is_stmt 1 view .LVU9343
15918:Core/Src/bno055.c ****             }
 32367              		.loc 1 15918 28 is_stmt 0 view .LVU9344
 32368 0038 FFF7FEFF 		bl	bno055_set_operation_mode
 32369              	.LVL4094:
15918:Core/Src/bno055.c ****             }
 32370              		.loc 1 15918 25 view .LVU9345
 32371 003c 56FA80F6 		uxtab	r6, r6, r0
 32372 0040 76B2     		sxtb	r6, r6
 32373              	.LVL4095:
15918:Core/Src/bno055.c ****             }
 32374              		.loc 1 15918 25 view .LVU9346
 32375 0042 F5E7     		b	.L2341
 32376              	.L2351:
15923:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32377              		.loc 1 15923 17 is_stmt 1 view .LVU9347
ARM GAS  /tmp/ccOloYeZ.s 			page 919


15923:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32378              		.loc 1 15923 30 is_stmt 0 view .LVU9348
 32379 0044 0120     		movs	r0, #1
 32380 0046 FFF7FEFF 		bl	bno055_write_page_id
 32381              	.LVL4096:
15924:Core/Src/bno055.c ****                 {
 32382              		.loc 1 15924 17 is_stmt 1 view .LVU9349
15924:Core/Src/bno055.c ****                 {
 32383              		.loc 1 15924 20 is_stmt 0 view .LVU9350
 32384 004a 0028     		cmp	r0, #0
 32385 004c 75D1     		bne	.L2347
15926:Core/Src/bno055.c ****                     {
 32386              		.loc 1 15926 21 is_stmt 1 view .LVU9351
 32387 004e 012C     		cmp	r4, #1
 32388 0050 28D0     		beq	.L2342
 32389 0052 022C     		cmp	r4, #2
 32390 0054 49D0     		beq	.L2343
 32391 0056 14B1     		cbz	r4, .L2352
 32392 0058 6FF00104 		mvn	r4, #1
 32393 005c 67E0     		b	.L2340
 32394              	.L2352:
15932:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
 32395              		.loc 1 15932 29 view .LVU9352
15932:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
 32396              		.loc 1 15932 48 is_stmt 0 view .LVU9353
 32397 005e 3D4B     		ldr	r3, .L2354
 32398 0060 1868     		ldr	r0, [r3]
 32399              	.LVL4097:
15932:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
 32400              		.loc 1 15932 48 view .LVU9354
 32401 0062 0469     		ldr	r4, [r0, #16]
15932:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
 32402              		.loc 1 15932 40 view .LVU9355
 32403 0064 0123     		movs	r3, #1
 32404 0066 0DF10702 		add	r2, sp, #7
 32405 006a 1221     		movs	r1, #18
 32406 006c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32407 006e A047     		blx	r4
 32408              	.LVL4098:
15936:Core/Src/bno055.c ****                             {
 32409              		.loc 1 15936 29 is_stmt 1 view .LVU9356
15936:Core/Src/bno055.c ****                             {
 32410              		.loc 1 15936 32 is_stmt 0 view .LVU9357
 32411 0070 0446     		mov	r4, r0
 32412 0072 0028     		cmp	r0, #0
 32413 0074 5BD1     		bne	.L2340
15938:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32414              		.loc 1 15938 33 is_stmt 1 view .LVU9358
15938:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32415              		.loc 1 15938 44 is_stmt 0 view .LVU9359
 32416 0076 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32417 007a 6A01     		lsls	r2, r5, #5
 32418 007c 02F02002 		and	r2, r2, #32
 32419 0080 23F02003 		bic	r3, r3, #32
 32420 0084 1343     		orrs	r3, r3, r2
15938:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32421              		.loc 1 15938 42 view .LVU9360
ARM GAS  /tmp/ccOloYeZ.s 			page 920


 32422 0086 8DF80730 		strb	r3, [sp, #7]
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 32423              		.loc 1 15939 33 is_stmt 1 view .LVU9361
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 32424              		.loc 1 15939 53 is_stmt 0 view .LVU9362
 32425 008a 324B     		ldr	r3, .L2354
 32426 008c 1868     		ldr	r0, [r3]
 32427              	.LVL4099:
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 32428              		.loc 1 15939 53 view .LVU9363
 32429 008e C568     		ldr	r5, [r0, #12]
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 32430              		.loc 1 15939 45 view .LVU9364
 32431 0090 0123     		movs	r3, #1
 32432 0092 0DF10702 		add	r2, sp, #7
 32433 0096 1221     		movs	r1, #18
 32434 0098 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32435 009a A847     		blx	r5
 32436              	.LVL4100:
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 32437              		.loc 1 15939 42 view .LVU9365
 32438 009c 54FA80F3 		uxtab	r3, r4, r0
 32439 00a0 5CB2     		sxtb	r4, r3
 32440              	.LVL4101:
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 32441              		.loc 1 15939 42 view .LVU9366
 32442 00a2 44E0     		b	.L2340
 32443              	.LVL4102:
 32444              	.L2342:
15949:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
 32445              		.loc 1 15949 29 is_stmt 1 view .LVU9367
15949:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
 32446              		.loc 1 15949 48 is_stmt 0 view .LVU9368
 32447 00a4 2B4B     		ldr	r3, .L2354
 32448 00a6 1868     		ldr	r0, [r3]
 32449              	.LVL4103:
15949:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
 32450              		.loc 1 15949 48 view .LVU9369
 32451 00a8 0469     		ldr	r4, [r0, #16]
15949:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
 32452              		.loc 1 15949 40 view .LVU9370
 32453 00aa 0123     		movs	r3, #1
 32454 00ac 0DF10702 		add	r2, sp, #7
 32455 00b0 1221     		movs	r1, #18
 32456 00b2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32457 00b4 A047     		blx	r4
 32458              	.LVL4104:
15953:Core/Src/bno055.c ****                             {
 32459              		.loc 1 15953 29 is_stmt 1 view .LVU9371
15953:Core/Src/bno055.c ****                             {
 32460              		.loc 1 15953 32 is_stmt 0 view .LVU9372
 32461 00b6 0446     		mov	r4, r0
 32462 00b8 0028     		cmp	r0, #0
 32463 00ba 38D1     		bne	.L2340
15955:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32464              		.loc 1 15955 33 is_stmt 1 view .LVU9373
15955:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccOloYeZ.s 			page 921


 32465              		.loc 1 15955 44 is_stmt 0 view .LVU9374
 32466 00bc 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32467 00c0 AA01     		lsls	r2, r5, #6
 32468 00c2 02F04002 		and	r2, r2, #64
 32469 00c6 23F04003 		bic	r3, r3, #64
 32470 00ca 1343     		orrs	r3, r3, r2
15955:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32471              		.loc 1 15955 42 view .LVU9375
 32472 00cc 8DF80730 		strb	r3, [sp, #7]
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 32473              		.loc 1 15956 33 is_stmt 1 view .LVU9376
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 32474              		.loc 1 15956 53 is_stmt 0 view .LVU9377
 32475 00d0 204B     		ldr	r3, .L2354
 32476 00d2 1868     		ldr	r0, [r3]
 32477              	.LVL4105:
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 32478              		.loc 1 15956 53 view .LVU9378
 32479 00d4 C568     		ldr	r5, [r0, #12]
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 32480              		.loc 1 15956 45 view .LVU9379
 32481 00d6 0123     		movs	r3, #1
 32482 00d8 0DF10702 		add	r2, sp, #7
 32483 00dc 1221     		movs	r1, #18
 32484 00de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32485 00e0 A847     		blx	r5
 32486              	.LVL4106:
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 32487              		.loc 1 15956 42 view .LVU9380
 32488 00e2 54FA80F3 		uxtab	r3, r4, r0
 32489 00e6 5CB2     		sxtb	r4, r3
 32490              	.LVL4107:
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 32491              		.loc 1 15956 42 view .LVU9381
 32492 00e8 21E0     		b	.L2340
 32493              	.LVL4108:
 32494              	.L2343:
15966:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
 32495              		.loc 1 15966 29 is_stmt 1 view .LVU9382
15966:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
 32496              		.loc 1 15966 48 is_stmt 0 view .LVU9383
 32497 00ea 1A4B     		ldr	r3, .L2354
 32498 00ec 1868     		ldr	r0, [r3]
 32499              	.LVL4109:
15966:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
 32500              		.loc 1 15966 48 view .LVU9384
 32501 00ee 0469     		ldr	r4, [r0, #16]
15966:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
 32502              		.loc 1 15966 40 view .LVU9385
 32503 00f0 0123     		movs	r3, #1
 32504 00f2 0DF10702 		add	r2, sp, #7
 32505 00f6 1221     		movs	r1, #18
 32506 00f8 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32507 00fa A047     		blx	r4
 32508              	.LVL4110:
15970:Core/Src/bno055.c ****                             {
 32509              		.loc 1 15970 29 is_stmt 1 view .LVU9386
ARM GAS  /tmp/ccOloYeZ.s 			page 922


15970:Core/Src/bno055.c ****                             {
 32510              		.loc 1 15970 32 is_stmt 0 view .LVU9387
 32511 00fc 0446     		mov	r4, r0
 32512 00fe B0B9     		cbnz	r0, .L2340
15972:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32513              		.loc 1 15972 33 is_stmt 1 view .LVU9388
15972:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32514              		.loc 1 15972 44 is_stmt 0 view .LVU9389
 32515 0100 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32516 0104 03F07F03 		and	r3, r3, #127
 32517 0108 43EAC513 		orr	r3, r3, r5, lsl #7
15972:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32518              		.loc 1 15972 42 view .LVU9390
 32519 010c 8DF80730 		strb	r3, [sp, #7]
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 32520              		.loc 1 15973 33 is_stmt 1 view .LVU9391
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 32521              		.loc 1 15973 53 is_stmt 0 view .LVU9392
 32522 0110 104B     		ldr	r3, .L2354
 32523 0112 1868     		ldr	r0, [r3]
 32524              	.LVL4111:
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 32525              		.loc 1 15973 53 view .LVU9393
 32526 0114 C568     		ldr	r5, [r0, #12]
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 32527              		.loc 1 15973 45 view .LVU9394
 32528 0116 0123     		movs	r3, #1
 32529 0118 0DF10702 		add	r2, sp, #7
 32530 011c 1221     		movs	r1, #18
 32531 011e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32532 0120 A847     		blx	r5
 32533              	.LVL4112:
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 32534              		.loc 1 15973 42 view .LVU9395
 32535 0122 54FA80F3 		uxtab	r3, r4, r0
 32536 0126 5CB2     		sxtb	r4, r3
 32537              	.LVL4113:
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 32538              		.loc 1 15973 42 view .LVU9396
 32539 0128 01E0     		b	.L2340
 32540              	.LVL4114:
 32541              	.L2345:
15992:Core/Src/bno055.c ****             }
15993:Core/Src/bno055.c ****         }
15994:Core/Src/bno055.c ****         else
15995:Core/Src/bno055.c ****         {
15996:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 32542              		.loc 1 15996 22 view .LVU9397
 32543 012a 4FF0FF34 		mov	r4, #-1
 32544              	.LVL4115:
 32545              	.L2340:
15997:Core/Src/bno055.c ****         }
15998:Core/Src/bno055.c ****     }
15999:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 32546              		.loc 1 15999 5 is_stmt 1 view .LVU9398
 32547              		.loc 1 15999 24 is_stmt 0 view .LVU9399
 32548 012e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
ARM GAS  /tmp/ccOloYeZ.s 			page 923


 32549              		.loc 1 15999 8 view .LVU9400
 32550 0132 28B9     		cbnz	r0, .L2353
 32551              	.LVL4116:
 32552              	.L2339:
16000:Core/Src/bno055.c ****     {
16001:Core/Src/bno055.c ****         /* set the operation mode of
16002:Core/Src/bno055.c ****          * previous operation mode*/
16003:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16004:Core/Src/bno055.c ****     }
16005:Core/Src/bno055.c **** 
16006:Core/Src/bno055.c ****     return com_rslt;
16007:Core/Src/bno055.c **** }
 32553              		.loc 1 16007 1 view .LVU9401
 32554 0134 2046     		mov	r0, r4
 32555 0136 02B0     		add	sp, sp, #8
 32556              		.cfi_remember_state
 32557              		.cfi_def_cfa_offset 16
 32558              		@ sp needed
 32559 0138 70BD     		pop	{r4, r5, r6, pc}
 32560              	.LVL4117:
 32561              	.L2347:
 32562              		.cfi_restore_state
15986:Core/Src/bno055.c ****                 }
 32563              		.loc 1 15986 30 view .LVU9402
 32564 013a 4FF0FF34 		mov	r4, #-1
 32565 013e F6E7     		b	.L2340
 32566              	.LVL4118:
 32567              	.L2353:
16003:Core/Src/bno055.c ****     }
 32568              		.loc 1 16003 9 is_stmt 1 view .LVU9403
16003:Core/Src/bno055.c ****     }
 32569              		.loc 1 16003 21 is_stmt 0 view .LVU9404
 32570 0140 FFF7FEFF 		bl	bno055_set_operation_mode
 32571              	.LVL4119:
16003:Core/Src/bno055.c ****     }
 32572              		.loc 1 16003 18 view .LVU9405
 32573 0144 54FA80F0 		uxtab	r0, r4, r0
 32574 0148 44B2     		sxtb	r4, r0
 32575              	.LVL4120:
16003:Core/Src/bno055.c ****     }
 32576              		.loc 1 16003 18 view .LVU9406
 32577 014a F3E7     		b	.L2339
 32578              	.LVL4121:
 32579              	.L2344:
15906:Core/Src/bno055.c ****     }
 32580              		.loc 1 15906 16 view .LVU9407
 32581 014c 6FF07E04 		mvn	r4, #126
 32582 0150 F0E7     		b	.L2339
 32583              	.L2355:
 32584 0152 00BF     		.align	2
 32585              	.L2354:
 32586 0154 00000000 		.word	p_bno055
 32587              		.cfi_endproc
 32588              	.LFE232:
 32590              		.section	.text.bno055_get_accel_high_g_durn,"ax",%progbits
 32591              		.align	1
 32592              		.global	bno055_get_accel_high_g_durn
ARM GAS  /tmp/ccOloYeZ.s 			page 924


 32593              		.syntax unified
 32594              		.thumb
 32595              		.thumb_func
 32597              	bno055_get_accel_high_g_durn:
 32598              	.LVL4122:
 32599              	.LFB233:
16008:Core/Src/bno055.c **** 
16009:Core/Src/bno055.c **** /*!
16010:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg duration
16011:Core/Src/bno055.c ****  *  from page one register from 0x13 bit 0 to 7
16012:Core/Src/bno055.c ****  *
16013:Core/Src/bno055.c ****  *  @param accel_high_g_durn_u8 : The value of accel highg duration
16014:Core/Src/bno055.c ****  *
16015:Core/Src/bno055.c ****  *  @return results of bus communication function
16016:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16017:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16018:Core/Src/bno055.c ****  *
16019:Core/Src/bno055.c ****  *  @note The high-g interrupt trigger delay according
16020:Core/Src/bno055.c ****  *  to [highg duration  + 1] * 2 ms
16021:Core/Src/bno055.c ****  *
16022:Core/Src/bno055.c ****  *  in a range from 2 ms to 512 ms
16023:Core/Src/bno055.c ****  *
16024:Core/Src/bno055.c ****  */
16025:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_high_g_durn(u8 *accel_high_g_durn_u8)
16026:Core/Src/bno055.c **** {
 32600              		.loc 1 16026 1 is_stmt 1 view -0
 32601              		.cfi_startproc
 32602              		@ args = 0, pretend = 0, frame = 8
 32603              		@ frame_needed = 0, uses_anonymous_args = 0
 32604              		.loc 1 16026 1 is_stmt 0 view .LVU9409
 32605 0000 70B5     		push	{r4, r5, r6, lr}
 32606              		.cfi_def_cfa_offset 16
 32607              		.cfi_offset 4, -16
 32608              		.cfi_offset 5, -12
 32609              		.cfi_offset 6, -8
 32610              		.cfi_offset 14, -4
 32611 0002 82B0     		sub	sp, sp, #8
 32612              		.cfi_def_cfa_offset 24
16027:Core/Src/bno055.c ****     /* Variable used to return value of
16028:Core/Src/bno055.c ****      * communication routine*/
16029:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32613              		.loc 1 16029 5 is_stmt 1 view .LVU9410
 32614              	.LVL4123:
16030:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32615              		.loc 1 16030 5 view .LVU9411
 32616              		.loc 1 16030 8 is_stmt 0 view .LVU9412
 32617 0004 0023     		movs	r3, #0
 32618 0006 8DF80730 		strb	r3, [sp, #7]
16031:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32619              		.loc 1 16031 5 is_stmt 1 view .LVU9413
 32620              	.LVL4124:
16032:Core/Src/bno055.c **** 
16033:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16034:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32621              		.loc 1 16034 5 view .LVU9414
 32622              		.loc 1 16034 18 is_stmt 0 view .LVU9415
 32623 000a 134B     		ldr	r3, .L2364
ARM GAS  /tmp/ccOloYeZ.s 			page 925


 32624 000c 1B68     		ldr	r3, [r3]
 32625              		.loc 1 16034 8 view .LVU9416
 32626 000e E3B1     		cbz	r3, .L2360
 32627 0010 0546     		mov	r5, r0
16035:Core/Src/bno055.c ****     {
16036:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16037:Core/Src/bno055.c ****     }
16038:Core/Src/bno055.c ****     else
16039:Core/Src/bno055.c ****     {
16040:Core/Src/bno055.c ****         /*condition check for page, accel highg duration is
16041:Core/Src/bno055.c ****          * available in the page one*/
16042:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 32628              		.loc 1 16042 9 is_stmt 1 view .LVU9417
 32629              		.loc 1 16042 21 is_stmt 0 view .LVU9418
 32630 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32631              		.loc 1 16042 12 view .LVU9419
 32632 0014 012B     		cmp	r3, #1
 32633 0016 12D1     		bne	.L2363
 32634              	.LVL4125:
 32635              	.L2358:
16043:Core/Src/bno055.c ****         {
16044:Core/Src/bno055.c ****             /* Write page as one */
16045:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16046:Core/Src/bno055.c ****         }
16047:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 32636              		.loc 1 16047 53 discriminator 1 view .LVU9420
 32637 0018 0F4B     		ldr	r3, .L2364
 32638 001a 1B68     		ldr	r3, [r3]
 32639 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32640              		.loc 1 16047 41 discriminator 1 view .LVU9421
 32641 001e 012B     		cmp	r3, #1
 32642 0020 16D1     		bne	.L2361
 32643              	.L2359:
16048:Core/Src/bno055.c ****         {
16049:Core/Src/bno055.c ****             /* Read the value of accel highg duration*/
16050:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 32644              		.loc 1 16050 13 is_stmt 1 view .LVU9422
 32645              		.loc 1 16050 32 is_stmt 0 view .LVU9423
 32646 0022 0D4B     		ldr	r3, .L2364
 32647 0024 1C68     		ldr	r4, [r3]
 32648 0026 2669     		ldr	r6, [r4, #16]
 32649              		.loc 1 16050 24 view .LVU9424
 32650 0028 0123     		movs	r3, #1
 32651 002a 0DF10702 		add	r2, sp, #7
 32652 002e 1321     		movs	r1, #19
 32653 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 32654 0032 B047     		blx	r6
 32655              	.LVL4126:
16051:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_DURN_REG,
16052:Core/Src/bno055.c ****                                                       &data_u8r,
16053:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16054:Core/Src/bno055.c ****             *accel_high_g_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_DURN);
 32656              		.loc 1 16054 13 is_stmt 1 view .LVU9425
 32657              		.loc 1 16054 35 is_stmt 0 view .LVU9426
 32658 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32659 0038 2B70     		strb	r3, [r5]
 32660              	.LVL4127:
ARM GAS  /tmp/ccOloYeZ.s 			page 926


 32661              	.L2357:
16055:Core/Src/bno055.c ****         }
16056:Core/Src/bno055.c ****         else
16057:Core/Src/bno055.c ****         {
16058:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16059:Core/Src/bno055.c ****         }
16060:Core/Src/bno055.c ****     }
16061:Core/Src/bno055.c **** 
16062:Core/Src/bno055.c ****     return com_rslt;
16063:Core/Src/bno055.c **** }
 32662              		.loc 1 16063 1 view .LVU9427
 32663 003a 02B0     		add	sp, sp, #8
 32664              		.cfi_remember_state
 32665              		.cfi_def_cfa_offset 16
 32666              		@ sp needed
 32667 003c 70BD     		pop	{r4, r5, r6, pc}
 32668              	.LVL4128:
 32669              	.L2363:
 32670              		.cfi_restore_state
16045:Core/Src/bno055.c ****         }
 32671              		.loc 1 16045 13 is_stmt 1 view .LVU9428
16045:Core/Src/bno055.c ****         }
 32672              		.loc 1 16045 23 is_stmt 0 view .LVU9429
 32673 003e 0120     		movs	r0, #1
 32674              	.LVL4129:
16045:Core/Src/bno055.c ****         }
 32675              		.loc 1 16045 23 view .LVU9430
 32676 0040 FFF7FEFF 		bl	bno055_write_page_id
 32677              	.LVL4130:
16047:Core/Src/bno055.c ****         {
 32678              		.loc 1 16047 9 is_stmt 1 view .LVU9431
16047:Core/Src/bno055.c ****         {
 32679              		.loc 1 16047 12 is_stmt 0 view .LVU9432
 32680 0044 0028     		cmp	r0, #0
 32681 0046 ECD0     		beq	.L2359
 32682 0048 E6E7     		b	.L2358
 32683              	.LVL4131:
 32684              	.L2360:
16036:Core/Src/bno055.c ****     }
 32685              		.loc 1 16036 16 view .LVU9433
 32686 004a 6FF07E00 		mvn	r0, #126
 32687              	.LVL4132:
16036:Core/Src/bno055.c ****     }
 32688              		.loc 1 16036 16 view .LVU9434
 32689 004e F4E7     		b	.L2357
 32690              	.LVL4133:
 32691              	.L2361:
16058:Core/Src/bno055.c ****         }
 32692              		.loc 1 16058 22 view .LVU9435
 32693 0050 4FF0FF30 		mov	r0, #-1
 32694 0054 F1E7     		b	.L2357
 32695              	.L2365:
 32696 0056 00BF     		.align	2
 32697              	.L2364:
 32698 0058 00000000 		.word	p_bno055
 32699              		.cfi_endproc
 32700              	.LFE233:
ARM GAS  /tmp/ccOloYeZ.s 			page 927


 32702              		.section	.text.bno055_set_accel_high_g_durn,"ax",%progbits
 32703              		.align	1
 32704              		.global	bno055_set_accel_high_g_durn
 32705              		.syntax unified
 32706              		.thumb
 32707              		.thumb_func
 32709              	bno055_set_accel_high_g_durn:
 32710              	.LVL4134:
 32711              	.LFB234:
16064:Core/Src/bno055.c **** 
16065:Core/Src/bno055.c **** /*!
16066:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg duration
16067:Core/Src/bno055.c ****  *  from page one register from 0x13 bit 0 to 7
16068:Core/Src/bno055.c ****  *
16069:Core/Src/bno055.c ****  *  @param accel_high_g_durn_u8 : The value of accel highg duration
16070:Core/Src/bno055.c ****  *
16071:Core/Src/bno055.c ****  *  @return results of bus communication function
16072:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16073:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16074:Core/Src/bno055.c ****  *
16075:Core/Src/bno055.c ****  *  @note The high-g interrupt trigger delay according
16076:Core/Src/bno055.c ****  *  to [highg duration  + 1] * 2 ms
16077:Core/Src/bno055.c ****  *
16078:Core/Src/bno055.c ****  *  in a range from 2 ms to 512 ms
16079:Core/Src/bno055.c ****  *
16080:Core/Src/bno055.c ****  */
16081:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_high_g_durn(u8 accel_high_g_durn_u8)
16082:Core/Src/bno055.c **** {
 32712              		.loc 1 16082 1 is_stmt 1 view -0
 32713              		.cfi_startproc
 32714              		@ args = 0, pretend = 0, frame = 8
 32715              		@ frame_needed = 0, uses_anonymous_args = 0
 32716              		.loc 1 16082 1 is_stmt 0 view .LVU9437
 32717 0000 30B5     		push	{r4, r5, lr}
 32718              		.cfi_def_cfa_offset 12
 32719              		.cfi_offset 4, -12
 32720              		.cfi_offset 5, -8
 32721              		.cfi_offset 14, -4
 32722 0002 83B0     		sub	sp, sp, #12
 32723              		.cfi_def_cfa_offset 24
16083:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32724              		.loc 1 16083 5 is_stmt 1 view .LVU9438
 32725              	.LVL4135:
16084:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32726              		.loc 1 16084 5 view .LVU9439
 32727              		.loc 1 16084 8 is_stmt 0 view .LVU9440
 32728 0004 0023     		movs	r3, #0
 32729 0006 8DF80730 		strb	r3, [sp, #7]
16085:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32730              		.loc 1 16085 5 is_stmt 1 view .LVU9441
 32731              	.LVL4136:
16086:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 32732              		.loc 1 16086 5 view .LVU9442
 32733              		.loc 1 16086 8 is_stmt 0 view .LVU9443
 32734 000a 8DF80630 		strb	r3, [sp, #6]
16087:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 32735              		.loc 1 16087 5 is_stmt 1 view .LVU9444
ARM GAS  /tmp/ccOloYeZ.s 			page 928


 32736              	.LVL4137:
16088:Core/Src/bno055.c **** 
16089:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16090:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32737              		.loc 1 16090 5 view .LVU9445
 32738              		.loc 1 16090 18 is_stmt 0 view .LVU9446
 32739 000e 254B     		ldr	r3, .L2378
 32740 0010 1B68     		ldr	r3, [r3]
 32741              		.loc 1 16090 8 view .LVU9447
 32742 0012 002B     		cmp	r3, #0
 32743 0014 42D0     		beq	.L2370
 32744 0016 0546     		mov	r5, r0
16091:Core/Src/bno055.c ****     {
16092:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16093:Core/Src/bno055.c ****     }
16094:Core/Src/bno055.c ****     else
16095:Core/Src/bno055.c ****     {
16096:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16097:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16098:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16099:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 32745              		.loc 1 16099 9 is_stmt 1 view .LVU9448
 32746              		.loc 1 16099 19 is_stmt 0 view .LVU9449
 32747 0018 0DF10600 		add	r0, sp, #6
 32748              	.LVL4138:
 32749              		.loc 1 16099 19 view .LVU9450
 32750 001c FFF7FEFF 		bl	bno055_get_operation_mode
 32751              	.LVL4139:
16100:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 32752              		.loc 1 16100 9 is_stmt 1 view .LVU9451
 32753              		.loc 1 16100 12 is_stmt 0 view .LVU9452
 32754 0020 0446     		mov	r4, r0
 32755 0022 50BB     		cbnz	r0, .L2371
16101:Core/Src/bno055.c ****         {
16102:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 32756              		.loc 1 16102 13 is_stmt 1 view .LVU9453
 32757              		.loc 1 16102 32 is_stmt 0 view .LVU9454
 32758 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 32759              		.loc 1 16102 16 view .LVU9455
 32760 0028 1BB9     		cbnz	r3, .L2375
 32761              	.LVL4140:
 32762              	.L2369:
16103:Core/Src/bno055.c ****             {
16104:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16105:Core/Src/bno055.c ****             }
16106:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 32763              		.loc 1 16106 13 is_stmt 1 view .LVU9456
 32764              		.loc 1 16106 16 is_stmt 0 view .LVU9457
 32765 002a 44B1     		cbz	r4, .L2376
16107:Core/Src/bno055.c ****             {
16108:Core/Src/bno055.c ****                 /* Write page as one */
16109:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16110:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16111:Core/Src/bno055.c ****                 {
16112:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16113:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
16114:Core/Src/bno055.c ****                                                               &data_u8r,
ARM GAS  /tmp/ccOloYeZ.s 			page 929


16115:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16116:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16117:Core/Src/bno055.c ****                     {
16118:Core/Src/bno055.c ****                         /* Write the value of
16119:Core/Src/bno055.c ****                          * accel highg duration*/
16120:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_DURN, accel_hi
16121:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16122:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
16123:Core/Src/bno055.c ****                                                                     &data_u8r,
16124:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16125:Core/Src/bno055.c ****                     }
16126:Core/Src/bno055.c ****                 }
16127:Core/Src/bno055.c ****                 else
16128:Core/Src/bno055.c ****                 {
16129:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16130:Core/Src/bno055.c ****                 }
16131:Core/Src/bno055.c ****             }
16132:Core/Src/bno055.c ****             else
16133:Core/Src/bno055.c ****             {
16134:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 32766              		.loc 1 16134 26 view .LVU9458
 32767 002c 4FF0FF34 		mov	r4, #-1
 32768              	.LVL4141:
 32769              		.loc 1 16134 26 view .LVU9459
 32770 0030 25E0     		b	.L2368
 32771              	.LVL4142:
 32772              	.L2375:
16104:Core/Src/bno055.c ****             }
 32773              		.loc 1 16104 17 is_stmt 1 view .LVU9460
16104:Core/Src/bno055.c ****             }
 32774              		.loc 1 16104 28 is_stmt 0 view .LVU9461
 32775 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 32776              	.LVL4143:
16104:Core/Src/bno055.c ****             }
 32777              		.loc 1 16104 25 view .LVU9462
 32778 0036 54FA80F4 		uxtab	r4, r4, r0
 32779 003a 64B2     		sxtb	r4, r4
 32780              	.LVL4144:
16104:Core/Src/bno055.c ****             }
 32781              		.loc 1 16104 25 view .LVU9463
 32782 003c F5E7     		b	.L2369
 32783              	.L2376:
16109:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32784              		.loc 1 16109 17 is_stmt 1 view .LVU9464
16109:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32785              		.loc 1 16109 30 is_stmt 0 view .LVU9465
 32786 003e 0120     		movs	r0, #1
 32787 0040 FFF7FEFF 		bl	bno055_write_page_id
 32788              	.LVL4145:
16110:Core/Src/bno055.c ****                 {
 32789              		.loc 1 16110 17 is_stmt 1 view .LVU9466
16110:Core/Src/bno055.c ****                 {
 32790              		.loc 1 16110 20 is_stmt 0 view .LVU9467
 32791 0044 08BB     		cbnz	r0, .L2373
16112:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
 32792              		.loc 1 16112 21 is_stmt 1 view .LVU9468
16112:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
ARM GAS  /tmp/ccOloYeZ.s 			page 930


 32793              		.loc 1 16112 40 is_stmt 0 view .LVU9469
 32794 0046 174B     		ldr	r3, .L2378
 32795 0048 1868     		ldr	r0, [r3]
 32796              	.LVL4146:
16112:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
 32797              		.loc 1 16112 40 view .LVU9470
 32798 004a 0469     		ldr	r4, [r0, #16]
 32799              	.LVL4147:
16112:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
 32800              		.loc 1 16112 32 view .LVU9471
 32801 004c 0123     		movs	r3, #1
 32802 004e 0DF10702 		add	r2, sp, #7
 32803 0052 1321     		movs	r1, #19
 32804 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32805 0056 A047     		blx	r4
 32806              	.LVL4148:
16116:Core/Src/bno055.c ****                     {
 32807              		.loc 1 16116 21 is_stmt 1 view .LVU9472
16116:Core/Src/bno055.c ****                     {
 32808              		.loc 1 16116 24 is_stmt 0 view .LVU9473
 32809 0058 0446     		mov	r4, r0
 32810 005a 80B9     		cbnz	r0, .L2368
16120:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32811              		.loc 1 16120 25 is_stmt 1 view .LVU9474
16120:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32812              		.loc 1 16120 34 is_stmt 0 view .LVU9475
 32813 005c 8DF80750 		strb	r5, [sp, #7]
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 32814              		.loc 1 16121 25 is_stmt 1 view .LVU9476
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 32815              		.loc 1 16121 45 is_stmt 0 view .LVU9477
 32816 0060 104B     		ldr	r3, .L2378
 32817 0062 1868     		ldr	r0, [r3]
 32818              	.LVL4149:
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 32819              		.loc 1 16121 45 view .LVU9478
 32820 0064 C568     		ldr	r5, [r0, #12]
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 32821              		.loc 1 16121 37 view .LVU9479
 32822 0066 0123     		movs	r3, #1
 32823 0068 0DF10702 		add	r2, sp, #7
 32824 006c 1321     		movs	r1, #19
 32825 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32826 0070 A847     		blx	r5
 32827              	.LVL4150:
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 32828              		.loc 1 16121 34 view .LVU9480
 32829 0072 54FA80F0 		uxtab	r0, r4, r0
 32830 0076 44B2     		sxtb	r4, r0
 32831              	.LVL4151:
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 32832              		.loc 1 16121 34 view .LVU9481
 32833 0078 01E0     		b	.L2368
 32834              	.LVL4152:
 32835              	.L2371:
16135:Core/Src/bno055.c ****             }
16136:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 931


16137:Core/Src/bno055.c ****         else
16138:Core/Src/bno055.c ****         {
16139:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 32836              		.loc 1 16139 22 view .LVU9482
 32837 007a 4FF0FF34 		mov	r4, #-1
 32838              	.LVL4153:
 32839              	.L2368:
16140:Core/Src/bno055.c ****         }
16141:Core/Src/bno055.c ****     }
16142:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 32840              		.loc 1 16142 5 is_stmt 1 view .LVU9483
 32841              		.loc 1 16142 24 is_stmt 0 view .LVU9484
 32842 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 32843              		.loc 1 16142 8 view .LVU9485
 32844 0082 28B9     		cbnz	r0, .L2377
 32845              	.LVL4154:
 32846              	.L2367:
16143:Core/Src/bno055.c ****     {
16144:Core/Src/bno055.c ****         /* set the operation mode of
16145:Core/Src/bno055.c ****          * previous operation mode*/
16146:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16147:Core/Src/bno055.c ****     }
16148:Core/Src/bno055.c **** 
16149:Core/Src/bno055.c ****     return com_rslt;
16150:Core/Src/bno055.c **** }
 32847              		.loc 1 16150 1 view .LVU9486
 32848 0084 2046     		mov	r0, r4
 32849 0086 03B0     		add	sp, sp, #12
 32850              		.cfi_remember_state
 32851              		.cfi_def_cfa_offset 12
 32852              		@ sp needed
 32853 0088 30BD     		pop	{r4, r5, pc}
 32854              	.LVL4155:
 32855              	.L2373:
 32856              		.cfi_restore_state
16129:Core/Src/bno055.c ****                 }
 32857              		.loc 1 16129 30 view .LVU9487
 32858 008a 4FF0FF34 		mov	r4, #-1
 32859              	.LVL4156:
16129:Core/Src/bno055.c ****                 }
 32860              		.loc 1 16129 30 view .LVU9488
 32861 008e F6E7     		b	.L2368
 32862              	.LVL4157:
 32863              	.L2377:
16146:Core/Src/bno055.c ****     }
 32864              		.loc 1 16146 9 is_stmt 1 view .LVU9489
16146:Core/Src/bno055.c ****     }
 32865              		.loc 1 16146 21 is_stmt 0 view .LVU9490
 32866 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 32867              	.LVL4158:
16146:Core/Src/bno055.c ****     }
 32868              		.loc 1 16146 18 view .LVU9491
 32869 0094 54FA80F0 		uxtab	r0, r4, r0
 32870 0098 44B2     		sxtb	r4, r0
 32871              	.LVL4159:
16146:Core/Src/bno055.c ****     }
 32872              		.loc 1 16146 18 view .LVU9492
ARM GAS  /tmp/ccOloYeZ.s 			page 932


 32873 009a F3E7     		b	.L2367
 32874              	.LVL4160:
 32875              	.L2370:
16092:Core/Src/bno055.c ****     }
 32876              		.loc 1 16092 16 view .LVU9493
 32877 009c 6FF07E04 		mvn	r4, #126
 32878 00a0 F0E7     		b	.L2367
 32879              	.L2379:
 32880 00a2 00BF     		.align	2
 32881              	.L2378:
 32882 00a4 00000000 		.word	p_bno055
 32883              		.cfi_endproc
 32884              	.LFE234:
 32886              		.section	.text.bno055_get_accel_high_g_thres,"ax",%progbits
 32887              		.align	1
 32888              		.global	bno055_get_accel_high_g_thres
 32889              		.syntax unified
 32890              		.thumb
 32891              		.thumb_func
 32893              	bno055_get_accel_high_g_thres:
 32894              	.LVL4161:
 32895              	.LFB235:
16151:Core/Src/bno055.c **** 
16152:Core/Src/bno055.c **** /*!
16153:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg threshold
16154:Core/Src/bno055.c ****  *  from page one register from 0x14 bit 0 to 7
16155:Core/Src/bno055.c ****  *
16156:Core/Src/bno055.c ****  *  @param accel_high_g_thres_u8 : The value of accel highg threshold
16157:Core/Src/bno055.c ****  *
16158:Core/Src/bno055.c ****  *  @return results of bus communication function
16159:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16160:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16161:Core/Src/bno055.c ****  *
16162:Core/Src/bno055.c ****  *  @note Accel highg interrupt threshold dependent
16163:Core/Src/bno055.c ****  *  for accel g range
16164:Core/Src/bno055.c ****  *
16165:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
16166:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
16167:Core/Src/bno055.c ****  *     2g        |    7.81mg     |   1LSB
16168:Core/Src/bno055.c ****  *     4g        |    15.63mg    |   1LSB
16169:Core/Src/bno055.c ****  *     8g        |    31.25mg    |   1LSB
16170:Core/Src/bno055.c ****  *     16g       |    62.5mg     |   1LSB
16171:Core/Src/bno055.c ****  *
16172:Core/Src/bno055.c ****  */
16173:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_high_g_thres(u8 *accel_high_g_thres_u8)
16174:Core/Src/bno055.c **** {
 32896              		.loc 1 16174 1 is_stmt 1 view -0
 32897              		.cfi_startproc
 32898              		@ args = 0, pretend = 0, frame = 8
 32899              		@ frame_needed = 0, uses_anonymous_args = 0
 32900              		.loc 1 16174 1 is_stmt 0 view .LVU9495
 32901 0000 70B5     		push	{r4, r5, r6, lr}
 32902              		.cfi_def_cfa_offset 16
 32903              		.cfi_offset 4, -16
 32904              		.cfi_offset 5, -12
 32905              		.cfi_offset 6, -8
 32906              		.cfi_offset 14, -4
ARM GAS  /tmp/ccOloYeZ.s 			page 933


 32907 0002 82B0     		sub	sp, sp, #8
 32908              		.cfi_def_cfa_offset 24
16175:Core/Src/bno055.c ****     /* Variable used to return value of
16176:Core/Src/bno055.c ****      * communication routine*/
16177:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32909              		.loc 1 16177 5 is_stmt 1 view .LVU9496
 32910              	.LVL4162:
16178:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32911              		.loc 1 16178 5 view .LVU9497
 32912              		.loc 1 16178 8 is_stmt 0 view .LVU9498
 32913 0004 0023     		movs	r3, #0
 32914 0006 8DF80730 		strb	r3, [sp, #7]
16179:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32915              		.loc 1 16179 5 is_stmt 1 view .LVU9499
 32916              	.LVL4163:
16180:Core/Src/bno055.c **** 
16181:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16182:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32917              		.loc 1 16182 5 view .LVU9500
 32918              		.loc 1 16182 18 is_stmt 0 view .LVU9501
 32919 000a 134B     		ldr	r3, .L2388
 32920 000c 1B68     		ldr	r3, [r3]
 32921              		.loc 1 16182 8 view .LVU9502
 32922 000e E3B1     		cbz	r3, .L2384
 32923 0010 0546     		mov	r5, r0
16183:Core/Src/bno055.c ****     {
16184:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16185:Core/Src/bno055.c ****     }
16186:Core/Src/bno055.c ****     else
16187:Core/Src/bno055.c ****     {
16188:Core/Src/bno055.c ****         /*condition check for page, highg threshold is
16189:Core/Src/bno055.c ****          * available in the page one*/
16190:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 32924              		.loc 1 16190 9 is_stmt 1 view .LVU9503
 32925              		.loc 1 16190 21 is_stmt 0 view .LVU9504
 32926 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32927              		.loc 1 16190 12 view .LVU9505
 32928 0014 012B     		cmp	r3, #1
 32929 0016 12D1     		bne	.L2387
 32930              	.LVL4164:
 32931              	.L2382:
16191:Core/Src/bno055.c ****         {
16192:Core/Src/bno055.c ****             /* Write page as one */
16193:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16194:Core/Src/bno055.c ****         }
16195:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 32932              		.loc 1 16195 53 discriminator 1 view .LVU9506
 32933 0018 0F4B     		ldr	r3, .L2388
 32934 001a 1B68     		ldr	r3, [r3]
 32935 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32936              		.loc 1 16195 41 discriminator 1 view .LVU9507
 32937 001e 012B     		cmp	r3, #1
 32938 0020 16D1     		bne	.L2385
 32939              	.L2383:
16196:Core/Src/bno055.c ****         {
16197:Core/Src/bno055.c ****             /* Read the value of highg threshold */
16198:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccOloYeZ.s 			page 934


 32940              		.loc 1 16198 13 is_stmt 1 view .LVU9508
 32941              		.loc 1 16198 32 is_stmt 0 view .LVU9509
 32942 0022 0D4B     		ldr	r3, .L2388
 32943 0024 1C68     		ldr	r4, [r3]
 32944 0026 2669     		ldr	r6, [r4, #16]
 32945              		.loc 1 16198 24 view .LVU9510
 32946 0028 0123     		movs	r3, #1
 32947 002a 0DF10702 		add	r2, sp, #7
 32948 002e 1421     		movs	r1, #20
 32949 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 32950 0032 B047     		blx	r6
 32951              	.LVL4165:
16199:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_THRES_REG,
16200:Core/Src/bno055.c ****                                                       &data_u8r,
16201:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16202:Core/Src/bno055.c ****             *accel_high_g_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_THRES);
 32952              		.loc 1 16202 13 is_stmt 1 view .LVU9511
 32953              		.loc 1 16202 36 is_stmt 0 view .LVU9512
 32954 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32955 0038 2B70     		strb	r3, [r5]
 32956              	.LVL4166:
 32957              	.L2381:
16203:Core/Src/bno055.c ****         }
16204:Core/Src/bno055.c ****         else
16205:Core/Src/bno055.c ****         {
16206:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16207:Core/Src/bno055.c ****         }
16208:Core/Src/bno055.c ****     }
16209:Core/Src/bno055.c **** 
16210:Core/Src/bno055.c ****     return com_rslt;
16211:Core/Src/bno055.c **** }
 32958              		.loc 1 16211 1 view .LVU9513
 32959 003a 02B0     		add	sp, sp, #8
 32960              		.cfi_remember_state
 32961              		.cfi_def_cfa_offset 16
 32962              		@ sp needed
 32963 003c 70BD     		pop	{r4, r5, r6, pc}
 32964              	.LVL4167:
 32965              	.L2387:
 32966              		.cfi_restore_state
16193:Core/Src/bno055.c ****         }
 32967              		.loc 1 16193 13 is_stmt 1 view .LVU9514
16193:Core/Src/bno055.c ****         }
 32968              		.loc 1 16193 23 is_stmt 0 view .LVU9515
 32969 003e 0120     		movs	r0, #1
 32970              	.LVL4168:
16193:Core/Src/bno055.c ****         }
 32971              		.loc 1 16193 23 view .LVU9516
 32972 0040 FFF7FEFF 		bl	bno055_write_page_id
 32973              	.LVL4169:
16195:Core/Src/bno055.c ****         {
 32974              		.loc 1 16195 9 is_stmt 1 view .LVU9517
16195:Core/Src/bno055.c ****         {
 32975              		.loc 1 16195 12 is_stmt 0 view .LVU9518
 32976 0044 0028     		cmp	r0, #0
 32977 0046 ECD0     		beq	.L2383
 32978 0048 E6E7     		b	.L2382
ARM GAS  /tmp/ccOloYeZ.s 			page 935


 32979              	.LVL4170:
 32980              	.L2384:
16184:Core/Src/bno055.c ****     }
 32981              		.loc 1 16184 16 view .LVU9519
 32982 004a 6FF07E00 		mvn	r0, #126
 32983              	.LVL4171:
16184:Core/Src/bno055.c ****     }
 32984              		.loc 1 16184 16 view .LVU9520
 32985 004e F4E7     		b	.L2381
 32986              	.LVL4172:
 32987              	.L2385:
16206:Core/Src/bno055.c ****         }
 32988              		.loc 1 16206 22 view .LVU9521
 32989 0050 4FF0FF30 		mov	r0, #-1
 32990 0054 F1E7     		b	.L2381
 32991              	.L2389:
 32992 0056 00BF     		.align	2
 32993              	.L2388:
 32994 0058 00000000 		.word	p_bno055
 32995              		.cfi_endproc
 32996              	.LFE235:
 32998              		.section	.text.bno055_set_accel_high_g_thres,"ax",%progbits
 32999              		.align	1
 33000              		.global	bno055_set_accel_high_g_thres
 33001              		.syntax unified
 33002              		.thumb
 33003              		.thumb_func
 33005              	bno055_set_accel_high_g_thres:
 33006              	.LVL4173:
 33007              	.LFB236:
16212:Core/Src/bno055.c **** 
16213:Core/Src/bno055.c **** /*!
16214:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg threshold
16215:Core/Src/bno055.c ****  *  from page one register from 0x14 bit 0 to 7
16216:Core/Src/bno055.c ****  *
16217:Core/Src/bno055.c ****  *  @param accel_high_g_thres_u8 : The value of accel highg threshold
16218:Core/Src/bno055.c ****  *
16219:Core/Src/bno055.c ****  *  @return results of bus communication function
16220:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16221:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16222:Core/Src/bno055.c ****  *
16223:Core/Src/bno055.c ****  *  @note Accel highg interrupt threshold dependent
16224:Core/Src/bno055.c ****  *  for accel g range
16225:Core/Src/bno055.c ****  *
16226:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
16227:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
16228:Core/Src/bno055.c ****  *     2g        |    7.81mg     |   1LSB
16229:Core/Src/bno055.c ****  *     4g        |    15.63mg    |   1LSB
16230:Core/Src/bno055.c ****  *     8g        |    31.25mg    |   1LSB
16231:Core/Src/bno055.c ****  *     16g       |    62.5mg     |   1LSB
16232:Core/Src/bno055.c ****  *
16233:Core/Src/bno055.c ****  */
16234:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_high_g_thres(u8 accel_high_g_thres_u8)
16235:Core/Src/bno055.c **** {
 33008              		.loc 1 16235 1 is_stmt 1 view -0
 33009              		.cfi_startproc
 33010              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccOloYeZ.s 			page 936


 33011              		@ frame_needed = 0, uses_anonymous_args = 0
 33012              		.loc 1 16235 1 is_stmt 0 view .LVU9523
 33013 0000 30B5     		push	{r4, r5, lr}
 33014              		.cfi_def_cfa_offset 12
 33015              		.cfi_offset 4, -12
 33016              		.cfi_offset 5, -8
 33017              		.cfi_offset 14, -4
 33018 0002 83B0     		sub	sp, sp, #12
 33019              		.cfi_def_cfa_offset 24
16236:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33020              		.loc 1 16236 5 is_stmt 1 view .LVU9524
 33021              	.LVL4174:
16237:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33022              		.loc 1 16237 5 view .LVU9525
 33023              		.loc 1 16237 8 is_stmt 0 view .LVU9526
 33024 0004 0023     		movs	r3, #0
 33025 0006 8DF80730 		strb	r3, [sp, #7]
16238:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33026              		.loc 1 16238 5 is_stmt 1 view .LVU9527
 33027              	.LVL4175:
16239:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 33028              		.loc 1 16239 5 view .LVU9528
 33029              		.loc 1 16239 8 is_stmt 0 view .LVU9529
 33030 000a 8DF80630 		strb	r3, [sp, #6]
16240:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 33031              		.loc 1 16240 5 is_stmt 1 view .LVU9530
 33032              	.LVL4176:
16241:Core/Src/bno055.c **** 
16242:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16243:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33033              		.loc 1 16243 5 view .LVU9531
 33034              		.loc 1 16243 18 is_stmt 0 view .LVU9532
 33035 000e 254B     		ldr	r3, .L2402
 33036 0010 1B68     		ldr	r3, [r3]
 33037              		.loc 1 16243 8 view .LVU9533
 33038 0012 002B     		cmp	r3, #0
 33039 0014 42D0     		beq	.L2394
 33040 0016 0546     		mov	r5, r0
16244:Core/Src/bno055.c ****     {
16245:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16246:Core/Src/bno055.c ****     }
16247:Core/Src/bno055.c ****     else
16248:Core/Src/bno055.c ****     {
16249:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16250:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16251:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16252:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 33041              		.loc 1 16252 9 is_stmt 1 view .LVU9534
 33042              		.loc 1 16252 19 is_stmt 0 view .LVU9535
 33043 0018 0DF10600 		add	r0, sp, #6
 33044              	.LVL4177:
 33045              		.loc 1 16252 19 view .LVU9536
 33046 001c FFF7FEFF 		bl	bno055_get_operation_mode
 33047              	.LVL4178:
16253:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 33048              		.loc 1 16253 9 is_stmt 1 view .LVU9537
 33049              		.loc 1 16253 12 is_stmt 0 view .LVU9538
ARM GAS  /tmp/ccOloYeZ.s 			page 937


 33050 0020 0446     		mov	r4, r0
 33051 0022 50BB     		cbnz	r0, .L2395
16254:Core/Src/bno055.c ****         {
16255:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33052              		.loc 1 16255 13 is_stmt 1 view .LVU9539
 33053              		.loc 1 16255 32 is_stmt 0 view .LVU9540
 33054 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 33055              		.loc 1 16255 16 view .LVU9541
 33056 0028 1BB9     		cbnz	r3, .L2399
 33057              	.LVL4179:
 33058              	.L2393:
16256:Core/Src/bno055.c ****             {
16257:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16258:Core/Src/bno055.c ****             }
16259:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 33059              		.loc 1 16259 13 is_stmt 1 view .LVU9542
 33060              		.loc 1 16259 16 is_stmt 0 view .LVU9543
 33061 002a 44B1     		cbz	r4, .L2400
16260:Core/Src/bno055.c ****             {
16261:Core/Src/bno055.c ****                 /* Write page as one */
16262:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16263:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16264:Core/Src/bno055.c ****                 {
16265:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16266:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
16267:Core/Src/bno055.c ****                                                               &data_u8r,
16268:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16269:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16270:Core/Src/bno055.c ****                     {
16271:Core/Src/bno055.c ****                         /* Write the value of
16272:Core/Src/bno055.c ****                          * accel highg threshold */
16273:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_THRES, accel_h
16274:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16275:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
16276:Core/Src/bno055.c ****                                                                     &data_u8r,
16277:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16278:Core/Src/bno055.c ****                     }
16279:Core/Src/bno055.c ****                 }
16280:Core/Src/bno055.c ****                 else
16281:Core/Src/bno055.c ****                 {
16282:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16283:Core/Src/bno055.c ****                 }
16284:Core/Src/bno055.c ****             }
16285:Core/Src/bno055.c ****             else
16286:Core/Src/bno055.c ****             {
16287:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 33062              		.loc 1 16287 26 view .LVU9544
 33063 002c 4FF0FF34 		mov	r4, #-1
 33064              	.LVL4180:
 33065              		.loc 1 16287 26 view .LVU9545
 33066 0030 25E0     		b	.L2392
 33067              	.LVL4181:
 33068              	.L2399:
16257:Core/Src/bno055.c ****             }
 33069              		.loc 1 16257 17 is_stmt 1 view .LVU9546
16257:Core/Src/bno055.c ****             }
 33070              		.loc 1 16257 28 is_stmt 0 view .LVU9547
ARM GAS  /tmp/ccOloYeZ.s 			page 938


 33071 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 33072              	.LVL4182:
16257:Core/Src/bno055.c ****             }
 33073              		.loc 1 16257 25 view .LVU9548
 33074 0036 54FA80F4 		uxtab	r4, r4, r0
 33075 003a 64B2     		sxtb	r4, r4
 33076              	.LVL4183:
16257:Core/Src/bno055.c ****             }
 33077              		.loc 1 16257 25 view .LVU9549
 33078 003c F5E7     		b	.L2393
 33079              	.L2400:
16262:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 33080              		.loc 1 16262 17 is_stmt 1 view .LVU9550
16262:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 33081              		.loc 1 16262 30 is_stmt 0 view .LVU9551
 33082 003e 0120     		movs	r0, #1
 33083 0040 FFF7FEFF 		bl	bno055_write_page_id
 33084              	.LVL4184:
16263:Core/Src/bno055.c ****                 {
 33085              		.loc 1 16263 17 is_stmt 1 view .LVU9552
16263:Core/Src/bno055.c ****                 {
 33086              		.loc 1 16263 20 is_stmt 0 view .LVU9553
 33087 0044 08BB     		cbnz	r0, .L2397
16265:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
 33088              		.loc 1 16265 21 is_stmt 1 view .LVU9554
16265:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
 33089              		.loc 1 16265 40 is_stmt 0 view .LVU9555
 33090 0046 174B     		ldr	r3, .L2402
 33091 0048 1868     		ldr	r0, [r3]
 33092              	.LVL4185:
16265:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
 33093              		.loc 1 16265 40 view .LVU9556
 33094 004a 0469     		ldr	r4, [r0, #16]
 33095              	.LVL4186:
16265:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
 33096              		.loc 1 16265 32 view .LVU9557
 33097 004c 0123     		movs	r3, #1
 33098 004e 0DF10702 		add	r2, sp, #7
 33099 0052 1421     		movs	r1, #20
 33100 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33101 0056 A047     		blx	r4
 33102              	.LVL4187:
16269:Core/Src/bno055.c ****                     {
 33103              		.loc 1 16269 21 is_stmt 1 view .LVU9558
16269:Core/Src/bno055.c ****                     {
 33104              		.loc 1 16269 24 is_stmt 0 view .LVU9559
 33105 0058 0446     		mov	r4, r0
 33106 005a 80B9     		cbnz	r0, .L2392
16273:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33107              		.loc 1 16273 25 is_stmt 1 view .LVU9560
16273:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33108              		.loc 1 16273 34 is_stmt 0 view .LVU9561
 33109 005c 8DF80750 		strb	r5, [sp, #7]
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 33110              		.loc 1 16274 25 is_stmt 1 view .LVU9562
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 33111              		.loc 1 16274 45 is_stmt 0 view .LVU9563
ARM GAS  /tmp/ccOloYeZ.s 			page 939


 33112 0060 104B     		ldr	r3, .L2402
 33113 0062 1868     		ldr	r0, [r3]
 33114              	.LVL4188:
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 33115              		.loc 1 16274 45 view .LVU9564
 33116 0064 C568     		ldr	r5, [r0, #12]
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 33117              		.loc 1 16274 37 view .LVU9565
 33118 0066 0123     		movs	r3, #1
 33119 0068 0DF10702 		add	r2, sp, #7
 33120 006c 1421     		movs	r1, #20
 33121 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33122 0070 A847     		blx	r5
 33123              	.LVL4189:
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 33124              		.loc 1 16274 34 view .LVU9566
 33125 0072 54FA80F0 		uxtab	r0, r4, r0
 33126 0076 44B2     		sxtb	r4, r0
 33127              	.LVL4190:
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 33128              		.loc 1 16274 34 view .LVU9567
 33129 0078 01E0     		b	.L2392
 33130              	.LVL4191:
 33131              	.L2395:
16288:Core/Src/bno055.c ****             }
16289:Core/Src/bno055.c ****         }
16290:Core/Src/bno055.c ****         else
16291:Core/Src/bno055.c ****         {
16292:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 33132              		.loc 1 16292 22 view .LVU9568
 33133 007a 4FF0FF34 		mov	r4, #-1
 33134              	.LVL4192:
 33135              	.L2392:
16293:Core/Src/bno055.c ****         }
16294:Core/Src/bno055.c ****     }
16295:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33136              		.loc 1 16295 5 is_stmt 1 view .LVU9569
 33137              		.loc 1 16295 24 is_stmt 0 view .LVU9570
 33138 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 33139              		.loc 1 16295 8 view .LVU9571
 33140 0082 28B9     		cbnz	r0, .L2401
 33141              	.LVL4193:
 33142              	.L2391:
16296:Core/Src/bno055.c ****     {
16297:Core/Src/bno055.c ****         /* set the operation mode of
16298:Core/Src/bno055.c ****          * previous operation mode*/
16299:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16300:Core/Src/bno055.c ****     }
16301:Core/Src/bno055.c **** 
16302:Core/Src/bno055.c ****     return com_rslt;
16303:Core/Src/bno055.c **** }
 33143              		.loc 1 16303 1 view .LVU9572
 33144 0084 2046     		mov	r0, r4
 33145 0086 03B0     		add	sp, sp, #12
 33146              		.cfi_remember_state
 33147              		.cfi_def_cfa_offset 12
 33148              		@ sp needed
ARM GAS  /tmp/ccOloYeZ.s 			page 940


 33149 0088 30BD     		pop	{r4, r5, pc}
 33150              	.LVL4194:
 33151              	.L2397:
 33152              		.cfi_restore_state
16282:Core/Src/bno055.c ****                 }
 33153              		.loc 1 16282 30 view .LVU9573
 33154 008a 4FF0FF34 		mov	r4, #-1
 33155              	.LVL4195:
16282:Core/Src/bno055.c ****                 }
 33156              		.loc 1 16282 30 view .LVU9574
 33157 008e F6E7     		b	.L2392
 33158              	.LVL4196:
 33159              	.L2401:
16299:Core/Src/bno055.c ****     }
 33160              		.loc 1 16299 9 is_stmt 1 view .LVU9575
16299:Core/Src/bno055.c ****     }
 33161              		.loc 1 16299 21 is_stmt 0 view .LVU9576
 33162 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 33163              	.LVL4197:
16299:Core/Src/bno055.c ****     }
 33164              		.loc 1 16299 18 view .LVU9577
 33165 0094 54FA80F0 		uxtab	r0, r4, r0
 33166 0098 44B2     		sxtb	r4, r0
 33167              	.LVL4198:
16299:Core/Src/bno055.c ****     }
 33168              		.loc 1 16299 18 view .LVU9578
 33169 009a F3E7     		b	.L2391
 33170              	.LVL4199:
 33171              	.L2394:
16245:Core/Src/bno055.c ****     }
 33172              		.loc 1 16245 16 view .LVU9579
 33173 009c 6FF07E04 		mvn	r4, #126
 33174 00a0 F0E7     		b	.L2391
 33175              	.L2403:
 33176 00a2 00BF     		.align	2
 33177              	.L2402:
 33178 00a4 00000000 		.word	p_bno055
 33179              		.cfi_endproc
 33180              	.LFE236:
 33182              		.section	.text.bno055_get_accel_slow_no_motion_thres,"ax",%progbits
 33183              		.align	1
 33184              		.global	bno055_get_accel_slow_no_motion_thres
 33185              		.syntax unified
 33186              		.thumb
 33187              		.thumb_func
 33189              	bno055_get_accel_slow_no_motion_thres:
 33190              	.LVL4200:
 33191              	.LFB237:
16304:Core/Src/bno055.c **** 
16305:Core/Src/bno055.c **** /*!
16306:Core/Src/bno055.c ****  *  @brief This API used to read the accel slownomotion threshold
16307:Core/Src/bno055.c ****  *  from page one register from 0x15 bit 0 to 7
16308:Core/Src/bno055.c ****  *
16309:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_thres_u8 :
16310:Core/Src/bno055.c ****  *  The value of accel slownomotion threshold
16311:Core/Src/bno055.c ****  *
16312:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/ccOloYeZ.s 			page 941


16313:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16314:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16315:Core/Src/bno055.c ****  *
16316:Core/Src/bno055.c ****  *  @note Accel slow no motion interrupt threshold dependent
16317:Core/Src/bno055.c ****  *  for accel g range
16318:Core/Src/bno055.c ****  *
16319:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
16320:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
16321:Core/Src/bno055.c ****  *     2g        |    3.19mg     |   1LSB
16322:Core/Src/bno055.c ****  *     4g        |    7.81mg     |   1LSB
16323:Core/Src/bno055.c ****  *     8g        |    15.63mg    |   1LSB
16324:Core/Src/bno055.c ****  *     16g       |    31.25mg    |   1LSB
16325:Core/Src/bno055.c ****  */
16326:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_slow_no_motion_thres(u8 *accel_slow_no_motion_thres_u8
16327:Core/Src/bno055.c **** {
 33192              		.loc 1 16327 1 is_stmt 1 view -0
 33193              		.cfi_startproc
 33194              		@ args = 0, pretend = 0, frame = 8
 33195              		@ frame_needed = 0, uses_anonymous_args = 0
 33196              		.loc 1 16327 1 is_stmt 0 view .LVU9581
 33197 0000 70B5     		push	{r4, r5, r6, lr}
 33198              		.cfi_def_cfa_offset 16
 33199              		.cfi_offset 4, -16
 33200              		.cfi_offset 5, -12
 33201              		.cfi_offset 6, -8
 33202              		.cfi_offset 14, -4
 33203 0002 82B0     		sub	sp, sp, #8
 33204              		.cfi_def_cfa_offset 24
16328:Core/Src/bno055.c ****     /* Variable used to return value of
16329:Core/Src/bno055.c ****      * communication routine*/
16330:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33205              		.loc 1 16330 5 is_stmt 1 view .LVU9582
 33206              	.LVL4201:
16331:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33207              		.loc 1 16331 5 view .LVU9583
 33208              		.loc 1 16331 8 is_stmt 0 view .LVU9584
 33209 0004 0023     		movs	r3, #0
 33210 0006 8DF80730 		strb	r3, [sp, #7]
16332:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33211              		.loc 1 16332 5 is_stmt 1 view .LVU9585
 33212              	.LVL4202:
16333:Core/Src/bno055.c **** 
16334:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16335:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33213              		.loc 1 16335 5 view .LVU9586
 33214              		.loc 1 16335 18 is_stmt 0 view .LVU9587
 33215 000a 134B     		ldr	r3, .L2412
 33216 000c 1B68     		ldr	r3, [r3]
 33217              		.loc 1 16335 8 view .LVU9588
 33218 000e E3B1     		cbz	r3, .L2408
 33219 0010 0546     		mov	r5, r0
16336:Core/Src/bno055.c ****     {
16337:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16338:Core/Src/bno055.c ****     }
16339:Core/Src/bno055.c ****     else
16340:Core/Src/bno055.c ****     {
16341:Core/Src/bno055.c ****         /*condition check for page, accel slownomotion threshold is
ARM GAS  /tmp/ccOloYeZ.s 			page 942


16342:Core/Src/bno055.c ****          * available in the page one*/
16343:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 33220              		.loc 1 16343 9 is_stmt 1 view .LVU9589
 33221              		.loc 1 16343 21 is_stmt 0 view .LVU9590
 33222 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33223              		.loc 1 16343 12 view .LVU9591
 33224 0014 012B     		cmp	r3, #1
 33225 0016 12D1     		bne	.L2411
 33226              	.LVL4203:
 33227              	.L2406:
16344:Core/Src/bno055.c ****         {
16345:Core/Src/bno055.c ****             /* Write page as one */
16346:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16347:Core/Src/bno055.c ****         }
16348:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 33228              		.loc 1 16348 53 discriminator 1 view .LVU9592
 33229 0018 0F4B     		ldr	r3, .L2412
 33230 001a 1B68     		ldr	r3, [r3]
 33231 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33232              		.loc 1 16348 41 discriminator 1 view .LVU9593
 33233 001e 012B     		cmp	r3, #1
 33234 0020 16D1     		bne	.L2409
 33235              	.L2407:
16349:Core/Src/bno055.c ****         {
16350:Core/Src/bno055.c ****             /* Read the value of slownomotion threshold */
16351:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 33236              		.loc 1 16351 13 is_stmt 1 view .LVU9594
 33237              		.loc 1 16351 32 is_stmt 0 view .LVU9595
 33238 0022 0D4B     		ldr	r3, .L2412
 33239 0024 1C68     		ldr	r4, [r3]
 33240 0026 2669     		ldr	r6, [r4, #16]
 33241              		.loc 1 16351 24 view .LVU9596
 33242 0028 0123     		movs	r3, #1
 33243 002a 0DF10702 		add	r2, sp, #7
 33244 002e 1521     		movs	r1, #21
 33245 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 33246 0032 B047     		blx	r6
 33247              	.LVL4204:
16352:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG,
16353:Core/Src/bno055.c ****                                                       &data_u8r,
16354:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16355:Core/Src/bno055.c ****             *accel_slow_no_motion_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLOW_NO_MOT
 33248              		.loc 1 16355 13 is_stmt 1 view .LVU9597
 33249              		.loc 1 16355 44 is_stmt 0 view .LVU9598
 33250 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33251 0038 2B70     		strb	r3, [r5]
 33252              	.LVL4205:
 33253              	.L2405:
16356:Core/Src/bno055.c ****         }
16357:Core/Src/bno055.c ****         else
16358:Core/Src/bno055.c ****         {
16359:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16360:Core/Src/bno055.c ****         }
16361:Core/Src/bno055.c ****     }
16362:Core/Src/bno055.c **** 
16363:Core/Src/bno055.c ****     return com_rslt;
16364:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccOloYeZ.s 			page 943


 33254              		.loc 1 16364 1 view .LVU9599
 33255 003a 02B0     		add	sp, sp, #8
 33256              		.cfi_remember_state
 33257              		.cfi_def_cfa_offset 16
 33258              		@ sp needed
 33259 003c 70BD     		pop	{r4, r5, r6, pc}
 33260              	.LVL4206:
 33261              	.L2411:
 33262              		.cfi_restore_state
16346:Core/Src/bno055.c ****         }
 33263              		.loc 1 16346 13 is_stmt 1 view .LVU9600
16346:Core/Src/bno055.c ****         }
 33264              		.loc 1 16346 23 is_stmt 0 view .LVU9601
 33265 003e 0120     		movs	r0, #1
 33266              	.LVL4207:
16346:Core/Src/bno055.c ****         }
 33267              		.loc 1 16346 23 view .LVU9602
 33268 0040 FFF7FEFF 		bl	bno055_write_page_id
 33269              	.LVL4208:
16348:Core/Src/bno055.c ****         {
 33270              		.loc 1 16348 9 is_stmt 1 view .LVU9603
16348:Core/Src/bno055.c ****         {
 33271              		.loc 1 16348 12 is_stmt 0 view .LVU9604
 33272 0044 0028     		cmp	r0, #0
 33273 0046 ECD0     		beq	.L2407
 33274 0048 E6E7     		b	.L2406
 33275              	.LVL4209:
 33276              	.L2408:
16337:Core/Src/bno055.c ****     }
 33277              		.loc 1 16337 16 view .LVU9605
 33278 004a 6FF07E00 		mvn	r0, #126
 33279              	.LVL4210:
16337:Core/Src/bno055.c ****     }
 33280              		.loc 1 16337 16 view .LVU9606
 33281 004e F4E7     		b	.L2405
 33282              	.LVL4211:
 33283              	.L2409:
16359:Core/Src/bno055.c ****         }
 33284              		.loc 1 16359 22 view .LVU9607
 33285 0050 4FF0FF30 		mov	r0, #-1
 33286 0054 F1E7     		b	.L2405
 33287              	.L2413:
 33288 0056 00BF     		.align	2
 33289              	.L2412:
 33290 0058 00000000 		.word	p_bno055
 33291              		.cfi_endproc
 33292              	.LFE237:
 33294              		.section	.text.bno055_set_accel_slow_no_motion_thres,"ax",%progbits
 33295              		.align	1
 33296              		.global	bno055_set_accel_slow_no_motion_thres
 33297              		.syntax unified
 33298              		.thumb
 33299              		.thumb_func
 33301              	bno055_set_accel_slow_no_motion_thres:
 33302              	.LVL4212:
 33303              	.LFB238:
16365:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 944


16366:Core/Src/bno055.c **** /*!
16367:Core/Src/bno055.c ****  *  @brief This API used to write the accel slownomotion threshold
16368:Core/Src/bno055.c ****  *  from page one register from 0x15 bit 0 to 7
16369:Core/Src/bno055.c ****  *
16370:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_thres_u8 :
16371:Core/Src/bno055.c ****  *  The value of accel slownomotion threshold
16372:Core/Src/bno055.c ****  *
16373:Core/Src/bno055.c ****  *  @return results of bus communication function
16374:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16375:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16376:Core/Src/bno055.c ****  *
16377:Core/Src/bno055.c ****  *  @note Accel slow no motion interrupt threshold dependent
16378:Core/Src/bno055.c ****  *  for accel g range
16379:Core/Src/bno055.c ****  *
16380:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
16381:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
16382:Core/Src/bno055.c ****  *     2g        |    3.19mg     |   1LSB
16383:Core/Src/bno055.c ****  *     4g        |    7.81mg     |   1LSB
16384:Core/Src/bno055.c ****  *     8g        |    15.63mg    |   1LSB
16385:Core/Src/bno055.c ****  *     16g       |    31.25mg    |   1LSB
16386:Core/Src/bno055.c ****  */
16387:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_slow_no_motion_thres(u8 accel_slow_no_motion_thres_u8)
16388:Core/Src/bno055.c **** {
 33304              		.loc 1 16388 1 is_stmt 1 view -0
 33305              		.cfi_startproc
 33306              		@ args = 0, pretend = 0, frame = 8
 33307              		@ frame_needed = 0, uses_anonymous_args = 0
 33308              		.loc 1 16388 1 is_stmt 0 view .LVU9609
 33309 0000 30B5     		push	{r4, r5, lr}
 33310              		.cfi_def_cfa_offset 12
 33311              		.cfi_offset 4, -12
 33312              		.cfi_offset 5, -8
 33313              		.cfi_offset 14, -4
 33314 0002 83B0     		sub	sp, sp, #12
 33315              		.cfi_def_cfa_offset 24
16389:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33316              		.loc 1 16389 5 is_stmt 1 view .LVU9610
 33317              	.LVL4213:
16390:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33318              		.loc 1 16390 5 view .LVU9611
 33319              		.loc 1 16390 8 is_stmt 0 view .LVU9612
 33320 0004 0023     		movs	r3, #0
 33321 0006 8DF80730 		strb	r3, [sp, #7]
16391:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33322              		.loc 1 16391 5 is_stmt 1 view .LVU9613
 33323              	.LVL4214:
16392:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 33324              		.loc 1 16392 5 view .LVU9614
 33325              		.loc 1 16392 8 is_stmt 0 view .LVU9615
 33326 000a 8DF80630 		strb	r3, [sp, #6]
16393:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 33327              		.loc 1 16393 5 is_stmt 1 view .LVU9616
 33328              	.LVL4215:
16394:Core/Src/bno055.c **** 
16395:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16396:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33329              		.loc 1 16396 5 view .LVU9617
ARM GAS  /tmp/ccOloYeZ.s 			page 945


 33330              		.loc 1 16396 18 is_stmt 0 view .LVU9618
 33331 000e 254B     		ldr	r3, .L2426
 33332 0010 1B68     		ldr	r3, [r3]
 33333              		.loc 1 16396 8 view .LVU9619
 33334 0012 002B     		cmp	r3, #0
 33335 0014 42D0     		beq	.L2418
 33336 0016 0546     		mov	r5, r0
16397:Core/Src/bno055.c ****     {
16398:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16399:Core/Src/bno055.c ****     }
16400:Core/Src/bno055.c ****     else
16401:Core/Src/bno055.c ****     {
16402:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16403:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16404:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16405:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 33337              		.loc 1 16405 9 is_stmt 1 view .LVU9620
 33338              		.loc 1 16405 19 is_stmt 0 view .LVU9621
 33339 0018 0DF10600 		add	r0, sp, #6
 33340              	.LVL4216:
 33341              		.loc 1 16405 19 view .LVU9622
 33342 001c FFF7FEFF 		bl	bno055_get_operation_mode
 33343              	.LVL4217:
16406:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 33344              		.loc 1 16406 9 is_stmt 1 view .LVU9623
 33345              		.loc 1 16406 12 is_stmt 0 view .LVU9624
 33346 0020 0446     		mov	r4, r0
 33347 0022 50BB     		cbnz	r0, .L2419
16407:Core/Src/bno055.c ****         {
16408:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33348              		.loc 1 16408 13 is_stmt 1 view .LVU9625
 33349              		.loc 1 16408 32 is_stmt 0 view .LVU9626
 33350 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 33351              		.loc 1 16408 16 view .LVU9627
 33352 0028 1BB9     		cbnz	r3, .L2423
 33353              	.LVL4218:
 33354              	.L2417:
16409:Core/Src/bno055.c ****             {
16410:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16411:Core/Src/bno055.c ****             }
16412:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 33355              		.loc 1 16412 13 is_stmt 1 view .LVU9628
 33356              		.loc 1 16412 16 is_stmt 0 view .LVU9629
 33357 002a 44B1     		cbz	r4, .L2424
16413:Core/Src/bno055.c ****             {
16414:Core/Src/bno055.c ****                 /* Write page as one */
16415:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16416:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16417:Core/Src/bno055.c ****                 {
16418:Core/Src/bno055.c ****                     /* Write the value of
16419:Core/Src/bno055.c ****                      * slownomotion threshold */
16420:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16421:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
16422:Core/Src/bno055.c ****                                                               &data_u8r,
16423:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16424:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16425:Core/Src/bno055.c ****                     {
ARM GAS  /tmp/ccOloYeZ.s 			page 946


16426:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
16427:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_THRES,
16428:Core/Src/bno055.c ****                                                        accel_slow_no_motion_thres_u8);
16429:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16430:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
16431:Core/Src/bno055.c ****                                                                     &data_u8r,
16432:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16433:Core/Src/bno055.c ****                     }
16434:Core/Src/bno055.c ****                 }
16435:Core/Src/bno055.c ****                 else
16436:Core/Src/bno055.c ****                 {
16437:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16438:Core/Src/bno055.c ****                 }
16439:Core/Src/bno055.c ****             }
16440:Core/Src/bno055.c ****             else
16441:Core/Src/bno055.c ****             {
16442:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 33358              		.loc 1 16442 26 view .LVU9630
 33359 002c 4FF0FF34 		mov	r4, #-1
 33360              	.LVL4219:
 33361              		.loc 1 16442 26 view .LVU9631
 33362 0030 25E0     		b	.L2416
 33363              	.LVL4220:
 33364              	.L2423:
16410:Core/Src/bno055.c ****             }
 33365              		.loc 1 16410 17 is_stmt 1 view .LVU9632
16410:Core/Src/bno055.c ****             }
 33366              		.loc 1 16410 28 is_stmt 0 view .LVU9633
 33367 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 33368              	.LVL4221:
16410:Core/Src/bno055.c ****             }
 33369              		.loc 1 16410 25 view .LVU9634
 33370 0036 54FA80F4 		uxtab	r4, r4, r0
 33371 003a 64B2     		sxtb	r4, r4
 33372              	.LVL4222:
16410:Core/Src/bno055.c ****             }
 33373              		.loc 1 16410 25 view .LVU9635
 33374 003c F5E7     		b	.L2417
 33375              	.L2424:
16415:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 33376              		.loc 1 16415 17 is_stmt 1 view .LVU9636
16415:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 33377              		.loc 1 16415 30 is_stmt 0 view .LVU9637
 33378 003e 0120     		movs	r0, #1
 33379 0040 FFF7FEFF 		bl	bno055_write_page_id
 33380              	.LVL4223:
16416:Core/Src/bno055.c ****                 {
 33381              		.loc 1 16416 17 is_stmt 1 view .LVU9638
16416:Core/Src/bno055.c ****                 {
 33382              		.loc 1 16416 20 is_stmt 0 view .LVU9639
 33383 0044 08BB     		cbnz	r0, .L2421
16420:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
 33384              		.loc 1 16420 21 is_stmt 1 view .LVU9640
16420:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
 33385              		.loc 1 16420 40 is_stmt 0 view .LVU9641
 33386 0046 174B     		ldr	r3, .L2426
 33387 0048 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccOloYeZ.s 			page 947


 33388              	.LVL4224:
16420:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
 33389              		.loc 1 16420 40 view .LVU9642
 33390 004a 0469     		ldr	r4, [r0, #16]
 33391              	.LVL4225:
16420:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
 33392              		.loc 1 16420 32 view .LVU9643
 33393 004c 0123     		movs	r3, #1
 33394 004e 0DF10702 		add	r2, sp, #7
 33395 0052 1521     		movs	r1, #21
 33396 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33397 0056 A047     		blx	r4
 33398              	.LVL4226:
16424:Core/Src/bno055.c ****                     {
 33399              		.loc 1 16424 21 is_stmt 1 view .LVU9644
16424:Core/Src/bno055.c ****                     {
 33400              		.loc 1 16424 24 is_stmt 0 view .LVU9645
 33401 0058 0446     		mov	r4, r0
 33402 005a 80B9     		cbnz	r0, .L2416
16426:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_THRES,
 33403              		.loc 1 16426 25 is_stmt 1 view .LVU9646
16426:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_THRES,
 33404              		.loc 1 16426 34 is_stmt 0 view .LVU9647
 33405 005c 8DF80750 		strb	r5, [sp, #7]
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 33406              		.loc 1 16429 25 is_stmt 1 view .LVU9648
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 33407              		.loc 1 16429 45 is_stmt 0 view .LVU9649
 33408 0060 104B     		ldr	r3, .L2426
 33409 0062 1868     		ldr	r0, [r3]
 33410              	.LVL4227:
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 33411              		.loc 1 16429 45 view .LVU9650
 33412 0064 C568     		ldr	r5, [r0, #12]
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 33413              		.loc 1 16429 37 view .LVU9651
 33414 0066 0123     		movs	r3, #1
 33415 0068 0DF10702 		add	r2, sp, #7
 33416 006c 1521     		movs	r1, #21
 33417 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33418 0070 A847     		blx	r5
 33419              	.LVL4228:
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 33420              		.loc 1 16429 34 view .LVU9652
 33421 0072 54FA80F0 		uxtab	r0, r4, r0
 33422 0076 44B2     		sxtb	r4, r0
 33423              	.LVL4229:
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 33424              		.loc 1 16429 34 view .LVU9653
 33425 0078 01E0     		b	.L2416
 33426              	.LVL4230:
 33427              	.L2419:
16443:Core/Src/bno055.c ****             }
16444:Core/Src/bno055.c ****         }
16445:Core/Src/bno055.c ****         else
16446:Core/Src/bno055.c ****         {
16447:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccOloYeZ.s 			page 948


 33428              		.loc 1 16447 22 view .LVU9654
 33429 007a 4FF0FF34 		mov	r4, #-1
 33430              	.LVL4231:
 33431              	.L2416:
16448:Core/Src/bno055.c ****         }
16449:Core/Src/bno055.c ****     }
16450:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33432              		.loc 1 16450 5 is_stmt 1 view .LVU9655
 33433              		.loc 1 16450 24 is_stmt 0 view .LVU9656
 33434 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 33435              		.loc 1 16450 8 view .LVU9657
 33436 0082 28B9     		cbnz	r0, .L2425
 33437              	.LVL4232:
 33438              	.L2415:
16451:Core/Src/bno055.c ****     {
16452:Core/Src/bno055.c ****         /* set the operation mode of
16453:Core/Src/bno055.c ****          * previous operation mode*/
16454:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16455:Core/Src/bno055.c ****     }
16456:Core/Src/bno055.c **** 
16457:Core/Src/bno055.c ****     return com_rslt;
16458:Core/Src/bno055.c **** }
 33439              		.loc 1 16458 1 view .LVU9658
 33440 0084 2046     		mov	r0, r4
 33441 0086 03B0     		add	sp, sp, #12
 33442              		.cfi_remember_state
 33443              		.cfi_def_cfa_offset 12
 33444              		@ sp needed
 33445 0088 30BD     		pop	{r4, r5, pc}
 33446              	.LVL4233:
 33447              	.L2421:
 33448              		.cfi_restore_state
16437:Core/Src/bno055.c ****                 }
 33449              		.loc 1 16437 30 view .LVU9659
 33450 008a 4FF0FF34 		mov	r4, #-1
 33451              	.LVL4234:
16437:Core/Src/bno055.c ****                 }
 33452              		.loc 1 16437 30 view .LVU9660
 33453 008e F6E7     		b	.L2416
 33454              	.LVL4235:
 33455              	.L2425:
16454:Core/Src/bno055.c ****     }
 33456              		.loc 1 16454 9 is_stmt 1 view .LVU9661
16454:Core/Src/bno055.c ****     }
 33457              		.loc 1 16454 21 is_stmt 0 view .LVU9662
 33458 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 33459              	.LVL4236:
16454:Core/Src/bno055.c ****     }
 33460              		.loc 1 16454 18 view .LVU9663
 33461 0094 54FA80F0 		uxtab	r0, r4, r0
 33462 0098 44B2     		sxtb	r4, r0
 33463              	.LVL4237:
16454:Core/Src/bno055.c ****     }
 33464              		.loc 1 16454 18 view .LVU9664
 33465 009a F3E7     		b	.L2415
 33466              	.LVL4238:
 33467              	.L2418:
ARM GAS  /tmp/ccOloYeZ.s 			page 949


16398:Core/Src/bno055.c ****     }
 33468              		.loc 1 16398 16 view .LVU9665
 33469 009c 6FF07E04 		mvn	r4, #126
 33470 00a0 F0E7     		b	.L2415
 33471              	.L2427:
 33472 00a2 00BF     		.align	2
 33473              	.L2426:
 33474 00a4 00000000 		.word	p_bno055
 33475              		.cfi_endproc
 33476              	.LFE238:
 33478              		.section	.text.bno055_get_accel_slow_no_motion_enable,"ax",%progbits
 33479              		.align	1
 33480              		.global	bno055_get_accel_slow_no_motion_enable
 33481              		.syntax unified
 33482              		.thumb
 33483              		.thumb_func
 33485              	bno055_get_accel_slow_no_motion_enable:
 33486              	.LVL4239:
 33487              	.LFB239:
16459:Core/Src/bno055.c **** 
16460:Core/Src/bno055.c **** /*!
16461:Core/Src/bno055.c ****  *  @brief This API used to read accel slownomotion enable
16462:Core/Src/bno055.c ****  *  from page one register from 0x16 bit 0
16463:Core/Src/bno055.c ****  *
16464:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_en_u8 : The value of accel slownomotion enable
16465:Core/Src/bno055.c ****  *    accel_slow_no_motion_en_u8   | result
16466:Core/Src/bno055.c ****  *     ------------------------      | --------
16467:Core/Src/bno055.c ****  *              0x01                 | Slow motion
16468:Core/Src/bno055.c ****  *              0x00                 | No motion
16469:Core/Src/bno055.c ****  *
16470:Core/Src/bno055.c ****  *  @return results of bus communication function
16471:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16472:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16473:Core/Src/bno055.c ****  *
16474:Core/Src/bno055.c ****  */
16475:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_slow_no_motion_enable(u8 *accel_slow_no_motion_en_u8)
16476:Core/Src/bno055.c **** {
 33488              		.loc 1 16476 1 is_stmt 1 view -0
 33489              		.cfi_startproc
 33490              		@ args = 0, pretend = 0, frame = 8
 33491              		@ frame_needed = 0, uses_anonymous_args = 0
 33492              		.loc 1 16476 1 is_stmt 0 view .LVU9667
 33493 0000 30B5     		push	{r4, r5, lr}
 33494              		.cfi_def_cfa_offset 12
 33495              		.cfi_offset 4, -12
 33496              		.cfi_offset 5, -8
 33497              		.cfi_offset 14, -4
 33498 0002 83B0     		sub	sp, sp, #12
 33499              		.cfi_def_cfa_offset 24
16477:Core/Src/bno055.c ****     /* Variable used to return value of
16478:Core/Src/bno055.c ****      * communication routine*/
16479:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33500              		.loc 1 16479 5 is_stmt 1 view .LVU9668
 33501              	.LVL4240:
16480:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33502              		.loc 1 16480 5 view .LVU9669
 33503              		.loc 1 16480 8 is_stmt 0 view .LVU9670
ARM GAS  /tmp/ccOloYeZ.s 			page 950


 33504 0004 0023     		movs	r3, #0
 33505 0006 8DF80730 		strb	r3, [sp, #7]
16481:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33506              		.loc 1 16481 5 is_stmt 1 view .LVU9671
 33507              	.LVL4241:
16482:Core/Src/bno055.c **** 
16483:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16484:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33508              		.loc 1 16484 5 view .LVU9672
 33509              		.loc 1 16484 18 is_stmt 0 view .LVU9673
 33510 000a 144B     		ldr	r3, .L2436
 33511 000c 1B68     		ldr	r3, [r3]
 33512              		.loc 1 16484 8 view .LVU9674
 33513 000e F3B1     		cbz	r3, .L2432
 33514 0010 0446     		mov	r4, r0
16485:Core/Src/bno055.c ****     {
16486:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16487:Core/Src/bno055.c ****     }
16488:Core/Src/bno055.c ****     else
16489:Core/Src/bno055.c ****     {
16490:Core/Src/bno055.c ****         /*condition check for page, accel slownomotion enable is
16491:Core/Src/bno055.c ****          * available in the page one*/
16492:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 33515              		.loc 1 16492 9 is_stmt 1 view .LVU9675
 33516              		.loc 1 16492 21 is_stmt 0 view .LVU9676
 33517 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33518              		.loc 1 16492 12 view .LVU9677
 33519 0014 012B     		cmp	r3, #1
 33520 0016 14D1     		bne	.L2435
 33521              	.LVL4242:
 33522              	.L2430:
16493:Core/Src/bno055.c ****         {
16494:Core/Src/bno055.c ****             /* Write page as one */
16495:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16496:Core/Src/bno055.c ****         }
16497:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 33523              		.loc 1 16497 53 discriminator 1 view .LVU9678
 33524 0018 104B     		ldr	r3, .L2436
 33525 001a 1B68     		ldr	r3, [r3]
 33526 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33527              		.loc 1 16497 41 discriminator 1 view .LVU9679
 33528 001e 012B     		cmp	r3, #1
 33529 0020 18D1     		bne	.L2433
 33530              	.L2431:
16498:Core/Src/bno055.c ****         {
16499:Core/Src/bno055.c ****             /* Read the value of accel slownomotion enable */
16500:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 33531              		.loc 1 16500 13 is_stmt 1 view .LVU9680
 33532              		.loc 1 16500 32 is_stmt 0 view .LVU9681
 33533 0022 0E4B     		ldr	r3, .L2436
 33534 0024 1868     		ldr	r0, [r3]
 33535 0026 0569     		ldr	r5, [r0, #16]
 33536              		.loc 1 16500 24 view .LVU9682
 33537 0028 0123     		movs	r3, #1
 33538 002a 0DF10702 		add	r2, sp, #7
 33539 002e 1621     		movs	r1, #22
 33540 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccOloYeZ.s 			page 951


 33541 0032 A847     		blx	r5
 33542              	.LVL4243:
16501:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_REG,
16502:Core/Src/bno055.c ****                                                       &data_u8r,
16503:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16504:Core/Src/bno055.c ****             *accel_slow_no_motion_en_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLOW_NO_MOTION
 33543              		.loc 1 16504 13 is_stmt 1 view .LVU9683
 33544              		.loc 1 16504 43 is_stmt 0 view .LVU9684
 33545 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33546 0038 03F00103 		and	r3, r3, #1
 33547              		.loc 1 16504 41 view .LVU9685
 33548 003c 2370     		strb	r3, [r4]
 33549              	.LVL4244:
 33550              	.L2429:
16505:Core/Src/bno055.c ****         }
16506:Core/Src/bno055.c ****         else
16507:Core/Src/bno055.c ****         {
16508:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16509:Core/Src/bno055.c ****         }
16510:Core/Src/bno055.c ****     }
16511:Core/Src/bno055.c **** 
16512:Core/Src/bno055.c ****     return com_rslt;
16513:Core/Src/bno055.c **** }
 33551              		.loc 1 16513 1 view .LVU9686
 33552 003e 03B0     		add	sp, sp, #12
 33553              		.cfi_remember_state
 33554              		.cfi_def_cfa_offset 12
 33555              		@ sp needed
 33556 0040 30BD     		pop	{r4, r5, pc}
 33557              	.LVL4245:
 33558              	.L2435:
 33559              		.cfi_restore_state
16495:Core/Src/bno055.c ****         }
 33560              		.loc 1 16495 13 is_stmt 1 view .LVU9687
16495:Core/Src/bno055.c ****         }
 33561              		.loc 1 16495 23 is_stmt 0 view .LVU9688
 33562 0042 0120     		movs	r0, #1
 33563              	.LVL4246:
16495:Core/Src/bno055.c ****         }
 33564              		.loc 1 16495 23 view .LVU9689
 33565 0044 FFF7FEFF 		bl	bno055_write_page_id
 33566              	.LVL4247:
16497:Core/Src/bno055.c ****         {
 33567              		.loc 1 16497 9 is_stmt 1 view .LVU9690
16497:Core/Src/bno055.c ****         {
 33568              		.loc 1 16497 12 is_stmt 0 view .LVU9691
 33569 0048 0028     		cmp	r0, #0
 33570 004a EAD0     		beq	.L2431
 33571 004c E4E7     		b	.L2430
 33572              	.LVL4248:
 33573              	.L2432:
16486:Core/Src/bno055.c ****     }
 33574              		.loc 1 16486 16 view .LVU9692
 33575 004e 6FF07E00 		mvn	r0, #126
 33576              	.LVL4249:
16486:Core/Src/bno055.c ****     }
 33577              		.loc 1 16486 16 view .LVU9693
ARM GAS  /tmp/ccOloYeZ.s 			page 952


 33578 0052 F4E7     		b	.L2429
 33579              	.LVL4250:
 33580              	.L2433:
16508:Core/Src/bno055.c ****         }
 33581              		.loc 1 16508 22 view .LVU9694
 33582 0054 4FF0FF30 		mov	r0, #-1
 33583 0058 F1E7     		b	.L2429
 33584              	.L2437:
 33585 005a 00BF     		.align	2
 33586              	.L2436:
 33587 005c 00000000 		.word	p_bno055
 33588              		.cfi_endproc
 33589              	.LFE239:
 33591              		.section	.text.bno055_set_accel_slow_no_motion_enable,"ax",%progbits
 33592              		.align	1
 33593              		.global	bno055_set_accel_slow_no_motion_enable
 33594              		.syntax unified
 33595              		.thumb
 33596              		.thumb_func
 33598              	bno055_set_accel_slow_no_motion_enable:
 33599              	.LVL4251:
 33600              	.LFB240:
16514:Core/Src/bno055.c **** 
16515:Core/Src/bno055.c **** /*!
16516:Core/Src/bno055.c ****  *  @brief This API used to write accel slownomotion enable
16517:Core/Src/bno055.c ****  *  from page one register from 0x16 bit 0
16518:Core/Src/bno055.c ****  *
16519:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_en_u8 : The value of accel slownomotion enable
16520:Core/Src/bno055.c ****  *    accel_slow_no_motion_en_u8   | result
16521:Core/Src/bno055.c ****  *     ------------------------      | --------
16522:Core/Src/bno055.c ****  *              0x01                 | Slow motion
16523:Core/Src/bno055.c ****  *              0x00                 | No motion
16524:Core/Src/bno055.c ****  *
16525:Core/Src/bno055.c ****  *  @return results of bus communication function
16526:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16527:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16528:Core/Src/bno055.c ****  *
16529:Core/Src/bno055.c ****  */
16530:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_slow_no_motion_enable(u8 accel_slow_no_motion_en_u8)
16531:Core/Src/bno055.c **** {
 33601              		.loc 1 16531 1 is_stmt 1 view -0
 33602              		.cfi_startproc
 33603              		@ args = 0, pretend = 0, frame = 8
 33604              		@ frame_needed = 0, uses_anonymous_args = 0
 33605              		.loc 1 16531 1 is_stmt 0 view .LVU9696
 33606 0000 30B5     		push	{r4, r5, lr}
 33607              		.cfi_def_cfa_offset 12
 33608              		.cfi_offset 4, -12
 33609              		.cfi_offset 5, -8
 33610              		.cfi_offset 14, -4
 33611 0002 83B0     		sub	sp, sp, #12
 33612              		.cfi_def_cfa_offset 24
16532:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33613              		.loc 1 16532 5 is_stmt 1 view .LVU9697
 33614              	.LVL4252:
16533:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33615              		.loc 1 16533 5 view .LVU9698
ARM GAS  /tmp/ccOloYeZ.s 			page 953


 33616              		.loc 1 16533 8 is_stmt 0 view .LVU9699
 33617 0004 0023     		movs	r3, #0
 33618 0006 8DF80730 		strb	r3, [sp, #7]
16534:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33619              		.loc 1 16534 5 is_stmt 1 view .LVU9700
 33620              	.LVL4253:
16535:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 33621              		.loc 1 16535 5 view .LVU9701
 33622              		.loc 1 16535 8 is_stmt 0 view .LVU9702
 33623 000a 8DF80630 		strb	r3, [sp, #6]
16536:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 33624              		.loc 1 16536 5 is_stmt 1 view .LVU9703
 33625              	.LVL4254:
16537:Core/Src/bno055.c **** 
16538:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16539:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33626              		.loc 1 16539 5 view .LVU9704
 33627              		.loc 1 16539 18 is_stmt 0 view .LVU9705
 33628 000e 284B     		ldr	r3, .L2450
 33629 0010 1B68     		ldr	r3, [r3]
 33630              		.loc 1 16539 8 view .LVU9706
 33631 0012 002B     		cmp	r3, #0
 33632 0014 49D0     		beq	.L2442
 33633 0016 0546     		mov	r5, r0
16540:Core/Src/bno055.c ****     {
16541:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16542:Core/Src/bno055.c ****     }
16543:Core/Src/bno055.c ****     else
16544:Core/Src/bno055.c ****     {
16545:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16546:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16547:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16548:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 33634              		.loc 1 16548 9 is_stmt 1 view .LVU9707
 33635              		.loc 1 16548 19 is_stmt 0 view .LVU9708
 33636 0018 0DF10600 		add	r0, sp, #6
 33637              	.LVL4255:
 33638              		.loc 1 16548 19 view .LVU9709
 33639 001c FFF7FEFF 		bl	bno055_get_operation_mode
 33640              	.LVL4256:
16549:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 33641              		.loc 1 16549 9 is_stmt 1 view .LVU9710
 33642              		.loc 1 16549 12 is_stmt 0 view .LVU9711
 33643 0020 0446     		mov	r4, r0
 33644 0022 88BB     		cbnz	r0, .L2443
16550:Core/Src/bno055.c ****         {
16551:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33645              		.loc 1 16551 13 is_stmt 1 view .LVU9712
 33646              		.loc 1 16551 32 is_stmt 0 view .LVU9713
 33647 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 33648              		.loc 1 16551 16 view .LVU9714
 33649 0028 1BB9     		cbnz	r3, .L2447
 33650              	.LVL4257:
 33651              	.L2441:
16552:Core/Src/bno055.c ****             {
16553:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16554:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccOloYeZ.s 			page 954


16555:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 33652              		.loc 1 16555 13 is_stmt 1 view .LVU9715
 33653              		.loc 1 16555 16 is_stmt 0 view .LVU9716
 33654 002a 44B1     		cbz	r4, .L2448
16556:Core/Src/bno055.c ****             {
16557:Core/Src/bno055.c ****                 /* Write page as one */
16558:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16559:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16560:Core/Src/bno055.c ****                 {
16561:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16562:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
16563:Core/Src/bno055.c ****                                                               &data_u8r,
16564:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16565:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16566:Core/Src/bno055.c ****                     {
16567:Core/Src/bno055.c ****                         /* Read the value of
16568:Core/Src/bno055.c ****                          * accel slownomotion enable */
16569:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
16570:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
16571:Core/Src/bno055.c ****                                                        accel_slow_no_motion_en_u8);
16572:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16573:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
16574:Core/Src/bno055.c ****                                                                     &data_u8r,
16575:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16576:Core/Src/bno055.c ****                     }
16577:Core/Src/bno055.c ****                 }
16578:Core/Src/bno055.c ****                 else
16579:Core/Src/bno055.c ****                 {
16580:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16581:Core/Src/bno055.c ****                 }
16582:Core/Src/bno055.c ****             }
16583:Core/Src/bno055.c ****             else
16584:Core/Src/bno055.c ****             {
16585:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 33655              		.loc 1 16585 26 view .LVU9717
 33656 002c 4FF0FF34 		mov	r4, #-1
 33657              	.LVL4258:
 33658              		.loc 1 16585 26 view .LVU9718
 33659 0030 2CE0     		b	.L2440
 33660              	.LVL4259:
 33661              	.L2447:
16553:Core/Src/bno055.c ****             }
 33662              		.loc 1 16553 17 is_stmt 1 view .LVU9719
16553:Core/Src/bno055.c ****             }
 33663              		.loc 1 16553 28 is_stmt 0 view .LVU9720
 33664 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 33665              	.LVL4260:
16553:Core/Src/bno055.c ****             }
 33666              		.loc 1 16553 25 view .LVU9721
 33667 0036 54FA80F4 		uxtab	r4, r4, r0
 33668 003a 64B2     		sxtb	r4, r4
 33669              	.LVL4261:
16553:Core/Src/bno055.c ****             }
 33670              		.loc 1 16553 25 view .LVU9722
 33671 003c F5E7     		b	.L2441
 33672              	.L2448:
16558:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
ARM GAS  /tmp/ccOloYeZ.s 			page 955


 33673              		.loc 1 16558 17 is_stmt 1 view .LVU9723
16558:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 33674              		.loc 1 16558 30 is_stmt 0 view .LVU9724
 33675 003e 0120     		movs	r0, #1
 33676 0040 FFF7FEFF 		bl	bno055_write_page_id
 33677              	.LVL4262:
16559:Core/Src/bno055.c ****                 {
 33678              		.loc 1 16559 17 is_stmt 1 view .LVU9725
16559:Core/Src/bno055.c ****                 {
 33679              		.loc 1 16559 20 is_stmt 0 view .LVU9726
 33680 0044 40BB     		cbnz	r0, .L2445
16561:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
 33681              		.loc 1 16561 21 is_stmt 1 view .LVU9727
16561:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
 33682              		.loc 1 16561 40 is_stmt 0 view .LVU9728
 33683 0046 1A4B     		ldr	r3, .L2450
 33684 0048 1868     		ldr	r0, [r3]
 33685              	.LVL4263:
16561:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
 33686              		.loc 1 16561 40 view .LVU9729
 33687 004a 0469     		ldr	r4, [r0, #16]
 33688              	.LVL4264:
16561:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
 33689              		.loc 1 16561 32 view .LVU9730
 33690 004c 0123     		movs	r3, #1
 33691 004e 0DF10702 		add	r2, sp, #7
 33692 0052 1621     		movs	r1, #22
 33693 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33694 0056 A047     		blx	r4
 33695              	.LVL4265:
16565:Core/Src/bno055.c ****                     {
 33696              		.loc 1 16565 21 is_stmt 1 view .LVU9731
16565:Core/Src/bno055.c ****                     {
 33697              		.loc 1 16565 24 is_stmt 0 view .LVU9732
 33698 0058 0446     		mov	r4, r0
 33699 005a B8B9     		cbnz	r0, .L2440
16569:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
 33700              		.loc 1 16569 25 is_stmt 1 view .LVU9733
16569:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
 33701              		.loc 1 16569 36 is_stmt 0 view .LVU9734
 33702 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
16569:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
 33703              		.loc 1 16569 34 view .LVU9735
 33704 0060 23F00103 		bic	r3, r3, #1
 33705 0064 05F00100 		and	r0, r5, #1
 33706              	.LVL4266:
16569:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
 33707              		.loc 1 16569 34 view .LVU9736
 33708 0068 0343     		orrs	r3, r3, r0
 33709 006a 8DF80730 		strb	r3, [sp, #7]
16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
 33710              		.loc 1 16572 25 is_stmt 1 view .LVU9737
16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
 33711              		.loc 1 16572 45 is_stmt 0 view .LVU9738
 33712 006e 104B     		ldr	r3, .L2450
 33713 0070 1868     		ldr	r0, [r3]
 33714 0072 C568     		ldr	r5, [r0, #12]
ARM GAS  /tmp/ccOloYeZ.s 			page 956


16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
 33715              		.loc 1 16572 37 view .LVU9739
 33716 0074 0123     		movs	r3, #1
 33717 0076 0DF10702 		add	r2, sp, #7
 33718 007a 1621     		movs	r1, #22
 33719 007c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33720 007e A847     		blx	r5
 33721              	.LVL4267:
16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
 33722              		.loc 1 16572 34 view .LVU9740
 33723 0080 54FA80F0 		uxtab	r0, r4, r0
 33724 0084 44B2     		sxtb	r4, r0
 33725              	.LVL4268:
16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
 33726              		.loc 1 16572 34 view .LVU9741
 33727 0086 01E0     		b	.L2440
 33728              	.LVL4269:
 33729              	.L2443:
16586:Core/Src/bno055.c ****             }
16587:Core/Src/bno055.c ****         }
16588:Core/Src/bno055.c ****         else
16589:Core/Src/bno055.c ****         {
16590:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 33730              		.loc 1 16590 22 view .LVU9742
 33731 0088 4FF0FF34 		mov	r4, #-1
 33732              	.LVL4270:
 33733              	.L2440:
16591:Core/Src/bno055.c ****         }
16592:Core/Src/bno055.c ****     }
16593:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33734              		.loc 1 16593 5 is_stmt 1 view .LVU9743
 33735              		.loc 1 16593 24 is_stmt 0 view .LVU9744
 33736 008c 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 33737              		.loc 1 16593 8 view .LVU9745
 33738 0090 28B9     		cbnz	r0, .L2449
 33739              	.LVL4271:
 33740              	.L2439:
16594:Core/Src/bno055.c ****     {
16595:Core/Src/bno055.c ****         /* set the operation mode of
16596:Core/Src/bno055.c ****          * previous operation mode*/
16597:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16598:Core/Src/bno055.c ****     }
16599:Core/Src/bno055.c **** 
16600:Core/Src/bno055.c ****     return com_rslt;
16601:Core/Src/bno055.c **** }
 33741              		.loc 1 16601 1 view .LVU9746
 33742 0092 2046     		mov	r0, r4
 33743 0094 03B0     		add	sp, sp, #12
 33744              		.cfi_remember_state
 33745              		.cfi_def_cfa_offset 12
 33746              		@ sp needed
 33747 0096 30BD     		pop	{r4, r5, pc}
 33748              	.LVL4272:
 33749              	.L2445:
 33750              		.cfi_restore_state
16580:Core/Src/bno055.c ****                 }
 33751              		.loc 1 16580 30 view .LVU9747
ARM GAS  /tmp/ccOloYeZ.s 			page 957


 33752 0098 4FF0FF34 		mov	r4, #-1
 33753              	.LVL4273:
16580:Core/Src/bno055.c ****                 }
 33754              		.loc 1 16580 30 view .LVU9748
 33755 009c F6E7     		b	.L2440
 33756              	.LVL4274:
 33757              	.L2449:
16597:Core/Src/bno055.c ****     }
 33758              		.loc 1 16597 9 is_stmt 1 view .LVU9749
16597:Core/Src/bno055.c ****     }
 33759              		.loc 1 16597 21 is_stmt 0 view .LVU9750
 33760 009e FFF7FEFF 		bl	bno055_set_operation_mode
 33761              	.LVL4275:
16597:Core/Src/bno055.c ****     }
 33762              		.loc 1 16597 18 view .LVU9751
 33763 00a2 54FA80F0 		uxtab	r0, r4, r0
 33764 00a6 44B2     		sxtb	r4, r0
 33765              	.LVL4276:
16597:Core/Src/bno055.c ****     }
 33766              		.loc 1 16597 18 view .LVU9752
 33767 00a8 F3E7     		b	.L2439
 33768              	.LVL4277:
 33769              	.L2442:
16541:Core/Src/bno055.c ****     }
 33770              		.loc 1 16541 16 view .LVU9753
 33771 00aa 6FF07E04 		mvn	r4, #126
 33772 00ae F0E7     		b	.L2439
 33773              	.L2451:
 33774              		.align	2
 33775              	.L2450:
 33776 00b0 00000000 		.word	p_bno055
 33777              		.cfi_endproc
 33778              	.LFE240:
 33780              		.section	.text.bno055_get_accel_slow_no_motion_durn,"ax",%progbits
 33781              		.align	1
 33782              		.global	bno055_get_accel_slow_no_motion_durn
 33783              		.syntax unified
 33784              		.thumb
 33785              		.thumb_func
 33787              	bno055_get_accel_slow_no_motion_durn:
 33788              	.LVL4278:
 33789              	.LFB241:
16602:Core/Src/bno055.c **** 
16603:Core/Src/bno055.c **** /*!
16604:Core/Src/bno055.c ****  *  @brief This API used to read accel slownomotion duration
16605:Core/Src/bno055.c ****  *  from page one register from 0x16 bit 1 to 6
16606:Core/Src/bno055.c ****  *
16607:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_durn_u8 :
16608:Core/Src/bno055.c ****  *  The value of accel slownomotion duration
16609:Core/Src/bno055.c ****  *
16610:Core/Src/bno055.c ****  *  @return results of bus communication function
16611:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16612:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16613:Core/Src/bno055.c ****  *
16614:Core/Src/bno055.c ****  */
16615:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_slow_no_motion_durn(u8 *accel_slow_no_motion_durn_u8)
16616:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccOloYeZ.s 			page 958


 33790              		.loc 1 16616 1 is_stmt 1 view -0
 33791              		.cfi_startproc
 33792              		@ args = 0, pretend = 0, frame = 8
 33793              		@ frame_needed = 0, uses_anonymous_args = 0
 33794              		.loc 1 16616 1 is_stmt 0 view .LVU9755
 33795 0000 30B5     		push	{r4, r5, lr}
 33796              		.cfi_def_cfa_offset 12
 33797              		.cfi_offset 4, -12
 33798              		.cfi_offset 5, -8
 33799              		.cfi_offset 14, -4
 33800 0002 83B0     		sub	sp, sp, #12
 33801              		.cfi_def_cfa_offset 24
16617:Core/Src/bno055.c ****     /* Variable used to return value of
16618:Core/Src/bno055.c ****      * communication routine*/
16619:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33802              		.loc 1 16619 5 is_stmt 1 view .LVU9756
 33803              	.LVL4279:
16620:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33804              		.loc 1 16620 5 view .LVU9757
 33805              		.loc 1 16620 8 is_stmt 0 view .LVU9758
 33806 0004 0023     		movs	r3, #0
 33807 0006 8DF80730 		strb	r3, [sp, #7]
16621:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33808              		.loc 1 16621 5 is_stmt 1 view .LVU9759
 33809              	.LVL4280:
16622:Core/Src/bno055.c **** 
16623:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16624:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33810              		.loc 1 16624 5 view .LVU9760
 33811              		.loc 1 16624 18 is_stmt 0 view .LVU9761
 33812 000a 144B     		ldr	r3, .L2460
 33813 000c 1B68     		ldr	r3, [r3]
 33814              		.loc 1 16624 8 view .LVU9762
 33815 000e F3B1     		cbz	r3, .L2456
 33816 0010 0446     		mov	r4, r0
16625:Core/Src/bno055.c ****     {
16626:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16627:Core/Src/bno055.c ****     }
16628:Core/Src/bno055.c ****     else
16629:Core/Src/bno055.c ****     {
16630:Core/Src/bno055.c ****         /*condition check for page, accel slownomotion duration is
16631:Core/Src/bno055.c ****          * available in the page one*/
16632:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 33817              		.loc 1 16632 9 is_stmt 1 view .LVU9763
 33818              		.loc 1 16632 21 is_stmt 0 view .LVU9764
 33819 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33820              		.loc 1 16632 12 view .LVU9765
 33821 0014 012B     		cmp	r3, #1
 33822 0016 14D1     		bne	.L2459
 33823              	.LVL4281:
 33824              	.L2454:
16633:Core/Src/bno055.c ****         {
16634:Core/Src/bno055.c ****             /* Write page as one */
16635:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16636:Core/Src/bno055.c ****         }
16637:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 33825              		.loc 1 16637 53 discriminator 1 view .LVU9766
ARM GAS  /tmp/ccOloYeZ.s 			page 959


 33826 0018 104B     		ldr	r3, .L2460
 33827 001a 1B68     		ldr	r3, [r3]
 33828 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33829              		.loc 1 16637 41 discriminator 1 view .LVU9767
 33830 001e 012B     		cmp	r3, #1
 33831 0020 18D1     		bne	.L2457
 33832              	.L2455:
16638:Core/Src/bno055.c ****         {
16639:Core/Src/bno055.c ****             /*read value of accel slownomotion duration*/
16640:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 33833              		.loc 1 16640 13 is_stmt 1 view .LVU9768
 33834              		.loc 1 16640 32 is_stmt 0 view .LVU9769
 33835 0022 0E4B     		ldr	r3, .L2460
 33836 0024 1868     		ldr	r0, [r3]
 33837 0026 0569     		ldr	r5, [r0, #16]
 33838              		.loc 1 16640 24 view .LVU9770
 33839 0028 0123     		movs	r3, #1
 33840 002a 0DF10702 		add	r2, sp, #7
 33841 002e 1621     		movs	r1, #22
 33842 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33843 0032 A847     		blx	r5
 33844              	.LVL4282:
16641:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
16642:Core/Src/bno055.c ****                                                       &data_u8r,
16643:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16644:Core/Src/bno055.c ****             *accel_slow_no_motion_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLOW_NO_MOTI
 33845              		.loc 1 16644 13 is_stmt 1 view .LVU9771
 33846              		.loc 1 16644 45 is_stmt 0 view .LVU9772
 33847 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33848 0038 C3F34503 		ubfx	r3, r3, #1, #6
 33849              		.loc 1 16644 43 view .LVU9773
 33850 003c 2370     		strb	r3, [r4]
 33851              	.LVL4283:
 33852              	.L2453:
16645:Core/Src/bno055.c ****         }
16646:Core/Src/bno055.c ****         else
16647:Core/Src/bno055.c ****         {
16648:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16649:Core/Src/bno055.c ****         }
16650:Core/Src/bno055.c ****     }
16651:Core/Src/bno055.c **** 
16652:Core/Src/bno055.c ****     return com_rslt;
16653:Core/Src/bno055.c **** }
 33853              		.loc 1 16653 1 view .LVU9774
 33854 003e 03B0     		add	sp, sp, #12
 33855              		.cfi_remember_state
 33856              		.cfi_def_cfa_offset 12
 33857              		@ sp needed
 33858 0040 30BD     		pop	{r4, r5, pc}
 33859              	.LVL4284:
 33860              	.L2459:
 33861              		.cfi_restore_state
16635:Core/Src/bno055.c ****         }
 33862              		.loc 1 16635 13 is_stmt 1 view .LVU9775
16635:Core/Src/bno055.c ****         }
 33863              		.loc 1 16635 23 is_stmt 0 view .LVU9776
 33864 0042 0120     		movs	r0, #1
ARM GAS  /tmp/ccOloYeZ.s 			page 960


 33865              	.LVL4285:
16635:Core/Src/bno055.c ****         }
 33866              		.loc 1 16635 23 view .LVU9777
 33867 0044 FFF7FEFF 		bl	bno055_write_page_id
 33868              	.LVL4286:
16637:Core/Src/bno055.c ****         {
 33869              		.loc 1 16637 9 is_stmt 1 view .LVU9778
16637:Core/Src/bno055.c ****         {
 33870              		.loc 1 16637 12 is_stmt 0 view .LVU9779
 33871 0048 0028     		cmp	r0, #0
 33872 004a EAD0     		beq	.L2455
 33873 004c E4E7     		b	.L2454
 33874              	.LVL4287:
 33875              	.L2456:
16626:Core/Src/bno055.c ****     }
 33876              		.loc 1 16626 16 view .LVU9780
 33877 004e 6FF07E00 		mvn	r0, #126
 33878              	.LVL4288:
16626:Core/Src/bno055.c ****     }
 33879              		.loc 1 16626 16 view .LVU9781
 33880 0052 F4E7     		b	.L2453
 33881              	.LVL4289:
 33882              	.L2457:
16648:Core/Src/bno055.c ****         }
 33883              		.loc 1 16648 22 view .LVU9782
 33884 0054 4FF0FF30 		mov	r0, #-1
 33885 0058 F1E7     		b	.L2453
 33886              	.L2461:
 33887 005a 00BF     		.align	2
 33888              	.L2460:
 33889 005c 00000000 		.word	p_bno055
 33890              		.cfi_endproc
 33891              	.LFE241:
 33893              		.section	.text.bno055_set_accel_slow_no_motion_durn,"ax",%progbits
 33894              		.align	1
 33895              		.global	bno055_set_accel_slow_no_motion_durn
 33896              		.syntax unified
 33897              		.thumb
 33898              		.thumb_func
 33900              	bno055_set_accel_slow_no_motion_durn:
 33901              	.LVL4290:
 33902              	.LFB242:
16654:Core/Src/bno055.c **** 
16655:Core/Src/bno055.c **** /*!
16656:Core/Src/bno055.c ****  *  @brief This API used to write accel slownomotion duration
16657:Core/Src/bno055.c ****  *  from page one register from 0x16 bit 1 to 6
16658:Core/Src/bno055.c ****  *
16659:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_durn_u8 :
16660:Core/Src/bno055.c ****  *  The value of accel slownomotion duration
16661:Core/Src/bno055.c ****  *
16662:Core/Src/bno055.c ****  *  @return results of bus communication function
16663:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16664:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16665:Core/Src/bno055.c ****  *
16666:Core/Src/bno055.c ****  */
16667:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_slow_no_motion_durn(u8 accel_slow_no_motion_durn_u8)
16668:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccOloYeZ.s 			page 961


 33903              		.loc 1 16668 1 is_stmt 1 view -0
 33904              		.cfi_startproc
 33905              		@ args = 0, pretend = 0, frame = 8
 33906              		@ frame_needed = 0, uses_anonymous_args = 0
 33907              		.loc 1 16668 1 is_stmt 0 view .LVU9784
 33908 0000 30B5     		push	{r4, r5, lr}
 33909              		.cfi_def_cfa_offset 12
 33910              		.cfi_offset 4, -12
 33911              		.cfi_offset 5, -8
 33912              		.cfi_offset 14, -4
 33913 0002 83B0     		sub	sp, sp, #12
 33914              		.cfi_def_cfa_offset 24
16669:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33915              		.loc 1 16669 5 is_stmt 1 view .LVU9785
 33916              	.LVL4291:
16670:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33917              		.loc 1 16670 5 view .LVU9786
 33918              		.loc 1 16670 8 is_stmt 0 view .LVU9787
 33919 0004 0023     		movs	r3, #0
 33920 0006 8DF80730 		strb	r3, [sp, #7]
16671:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33921              		.loc 1 16671 5 is_stmt 1 view .LVU9788
 33922              	.LVL4292:
16672:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 33923              		.loc 1 16672 5 view .LVU9789
 33924              		.loc 1 16672 8 is_stmt 0 view .LVU9790
 33925 000a 8DF80630 		strb	r3, [sp, #6]
16673:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 33926              		.loc 1 16673 5 is_stmt 1 view .LVU9791
 33927              	.LVL4293:
16674:Core/Src/bno055.c **** 
16675:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16676:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33928              		.loc 1 16676 5 view .LVU9792
 33929              		.loc 1 16676 18 is_stmt 0 view .LVU9793
 33930 000e 294B     		ldr	r3, .L2474
 33931 0010 1B68     		ldr	r3, [r3]
 33932              		.loc 1 16676 8 view .LVU9794
 33933 0012 002B     		cmp	r3, #0
 33934 0014 4AD0     		beq	.L2466
 33935 0016 0546     		mov	r5, r0
16677:Core/Src/bno055.c ****     {
16678:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16679:Core/Src/bno055.c ****     }
16680:Core/Src/bno055.c ****     else
16681:Core/Src/bno055.c ****     {
16682:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16683:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16684:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16685:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 33936              		.loc 1 16685 9 is_stmt 1 view .LVU9795
 33937              		.loc 1 16685 19 is_stmt 0 view .LVU9796
 33938 0018 0DF10600 		add	r0, sp, #6
 33939              	.LVL4294:
 33940              		.loc 1 16685 19 view .LVU9797
 33941 001c FFF7FEFF 		bl	bno055_get_operation_mode
 33942              	.LVL4295:
ARM GAS  /tmp/ccOloYeZ.s 			page 962


16686:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 33943              		.loc 1 16686 9 is_stmt 1 view .LVU9798
 33944              		.loc 1 16686 12 is_stmt 0 view .LVU9799
 33945 0020 0446     		mov	r4, r0
 33946 0022 90BB     		cbnz	r0, .L2467
16687:Core/Src/bno055.c ****         {
16688:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33947              		.loc 1 16688 13 is_stmt 1 view .LVU9800
 33948              		.loc 1 16688 32 is_stmt 0 view .LVU9801
 33949 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 33950              		.loc 1 16688 16 view .LVU9802
 33951 0028 1BB9     		cbnz	r3, .L2471
 33952              	.LVL4296:
 33953              	.L2465:
16689:Core/Src/bno055.c ****             {
16690:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16691:Core/Src/bno055.c ****             }
16692:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 33954              		.loc 1 16692 13 is_stmt 1 view .LVU9803
 33955              		.loc 1 16692 16 is_stmt 0 view .LVU9804
 33956 002a 44B1     		cbz	r4, .L2472
16693:Core/Src/bno055.c ****             {
16694:Core/Src/bno055.c ****                 /* Write page as one */
16695:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16696:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16697:Core/Src/bno055.c ****                 {
16698:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16699:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
16700:Core/Src/bno055.c ****                                                               &data_u8r,
16701:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16702:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16703:Core/Src/bno055.c ****                     {
16704:Core/Src/bno055.c ****                         /*Write the value of accel
16705:Core/Src/bno055.c ****                          * slownomotion duration*/
16706:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
16707:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
16708:Core/Src/bno055.c ****                                                        accel_slow_no_motion_durn_u8);
16709:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16710:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
16711:Core/Src/bno055.c ****                                                                     &data_u8r,
16712:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16713:Core/Src/bno055.c ****                     }
16714:Core/Src/bno055.c ****                 }
16715:Core/Src/bno055.c ****                 else
16716:Core/Src/bno055.c ****                 {
16717:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16718:Core/Src/bno055.c ****                 }
16719:Core/Src/bno055.c ****             }
16720:Core/Src/bno055.c ****             else
16721:Core/Src/bno055.c ****             {
16722:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 33957              		.loc 1 16722 26 view .LVU9805
 33958 002c 4FF0FF34 		mov	r4, #-1
 33959              	.LVL4297:
 33960              		.loc 1 16722 26 view .LVU9806
 33961 0030 2DE0     		b	.L2464
 33962              	.LVL4298:
ARM GAS  /tmp/ccOloYeZ.s 			page 963


 33963              	.L2471:
16690:Core/Src/bno055.c ****             }
 33964              		.loc 1 16690 17 is_stmt 1 view .LVU9807
16690:Core/Src/bno055.c ****             }
 33965              		.loc 1 16690 28 is_stmt 0 view .LVU9808
 33966 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 33967              	.LVL4299:
16690:Core/Src/bno055.c ****             }
 33968              		.loc 1 16690 25 view .LVU9809
 33969 0036 54FA80F4 		uxtab	r4, r4, r0
 33970 003a 64B2     		sxtb	r4, r4
 33971              	.LVL4300:
16690:Core/Src/bno055.c ****             }
 33972              		.loc 1 16690 25 view .LVU9810
 33973 003c F5E7     		b	.L2465
 33974              	.L2472:
16695:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 33975              		.loc 1 16695 17 is_stmt 1 view .LVU9811
16695:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 33976              		.loc 1 16695 30 is_stmt 0 view .LVU9812
 33977 003e 0120     		movs	r0, #1
 33978 0040 FFF7FEFF 		bl	bno055_write_page_id
 33979              	.LVL4301:
16696:Core/Src/bno055.c ****                 {
 33980              		.loc 1 16696 17 is_stmt 1 view .LVU9813
16696:Core/Src/bno055.c ****                 {
 33981              		.loc 1 16696 20 is_stmt 0 view .LVU9814
 33982 0044 48BB     		cbnz	r0, .L2469
16698:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
 33983              		.loc 1 16698 21 is_stmt 1 view .LVU9815
16698:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
 33984              		.loc 1 16698 40 is_stmt 0 view .LVU9816
 33985 0046 1B4B     		ldr	r3, .L2474
 33986 0048 1868     		ldr	r0, [r3]
 33987              	.LVL4302:
16698:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
 33988              		.loc 1 16698 40 view .LVU9817
 33989 004a 0469     		ldr	r4, [r0, #16]
 33990              	.LVL4303:
16698:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
 33991              		.loc 1 16698 32 view .LVU9818
 33992 004c 0123     		movs	r3, #1
 33993 004e 0DF10702 		add	r2, sp, #7
 33994 0052 1621     		movs	r1, #22
 33995 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33996 0056 A047     		blx	r4
 33997              	.LVL4304:
16702:Core/Src/bno055.c ****                     {
 33998              		.loc 1 16702 21 is_stmt 1 view .LVU9819
16702:Core/Src/bno055.c ****                     {
 33999              		.loc 1 16702 24 is_stmt 0 view .LVU9820
 34000 0058 0446     		mov	r4, r0
 34001 005a C0B9     		cbnz	r0, .L2464
16706:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
 34002              		.loc 1 16706 25 is_stmt 1 view .LVU9821
16706:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
 34003              		.loc 1 16706 36 is_stmt 0 view .LVU9822
ARM GAS  /tmp/ccOloYeZ.s 			page 964


 34004 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34005 0060 6800     		lsls	r0, r5, #1
 34006              	.LVL4305:
16706:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
 34007              		.loc 1 16706 36 view .LVU9823
 34008 0062 00F07E00 		and	r0, r0, #126
 34009 0066 23F07E03 		bic	r3, r3, #126
 34010 006a 0343     		orrs	r3, r3, r0
16706:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
 34011              		.loc 1 16706 34 view .LVU9824
 34012 006c 8DF80730 		strb	r3, [sp, #7]
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 34013              		.loc 1 16709 25 is_stmt 1 view .LVU9825
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 34014              		.loc 1 16709 45 is_stmt 0 view .LVU9826
 34015 0070 104B     		ldr	r3, .L2474
 34016 0072 1868     		ldr	r0, [r3]
 34017 0074 C568     		ldr	r5, [r0, #12]
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 34018              		.loc 1 16709 37 view .LVU9827
 34019 0076 0123     		movs	r3, #1
 34020 0078 0DF10702 		add	r2, sp, #7
 34021 007c 1621     		movs	r1, #22
 34022 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34023 0080 A847     		blx	r5
 34024              	.LVL4306:
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 34025              		.loc 1 16709 34 view .LVU9828
 34026 0082 54FA80F0 		uxtab	r0, r4, r0
 34027 0086 44B2     		sxtb	r4, r0
 34028              	.LVL4307:
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 34029              		.loc 1 16709 34 view .LVU9829
 34030 0088 01E0     		b	.L2464
 34031              	.LVL4308:
 34032              	.L2467:
16723:Core/Src/bno055.c ****             }
16724:Core/Src/bno055.c ****         }
16725:Core/Src/bno055.c ****         else
16726:Core/Src/bno055.c ****         {
16727:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 34033              		.loc 1 16727 22 view .LVU9830
 34034 008a 4FF0FF34 		mov	r4, #-1
 34035              	.LVL4309:
 34036              	.L2464:
16728:Core/Src/bno055.c ****         }
16729:Core/Src/bno055.c ****     }
16730:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34037              		.loc 1 16730 5 is_stmt 1 view .LVU9831
 34038              		.loc 1 16730 24 is_stmt 0 view .LVU9832
 34039 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 34040              		.loc 1 16730 8 view .LVU9833
 34041 0092 28B9     		cbnz	r0, .L2473
 34042              	.LVL4310:
 34043              	.L2463:
16731:Core/Src/bno055.c ****     {
16732:Core/Src/bno055.c ****         /* set the operation mode of
ARM GAS  /tmp/ccOloYeZ.s 			page 965


16733:Core/Src/bno055.c ****          * previous operation mode*/
16734:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16735:Core/Src/bno055.c ****     }
16736:Core/Src/bno055.c **** 
16737:Core/Src/bno055.c ****     return com_rslt;
16738:Core/Src/bno055.c **** }
 34044              		.loc 1 16738 1 view .LVU9834
 34045 0094 2046     		mov	r0, r4
 34046 0096 03B0     		add	sp, sp, #12
 34047              		.cfi_remember_state
 34048              		.cfi_def_cfa_offset 12
 34049              		@ sp needed
 34050 0098 30BD     		pop	{r4, r5, pc}
 34051              	.LVL4311:
 34052              	.L2469:
 34053              		.cfi_restore_state
16717:Core/Src/bno055.c ****                 }
 34054              		.loc 1 16717 30 view .LVU9835
 34055 009a 4FF0FF34 		mov	r4, #-1
 34056              	.LVL4312:
16717:Core/Src/bno055.c ****                 }
 34057              		.loc 1 16717 30 view .LVU9836
 34058 009e F6E7     		b	.L2464
 34059              	.LVL4313:
 34060              	.L2473:
16734:Core/Src/bno055.c ****     }
 34061              		.loc 1 16734 9 is_stmt 1 view .LVU9837
16734:Core/Src/bno055.c ****     }
 34062              		.loc 1 16734 21 is_stmt 0 view .LVU9838
 34063 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 34064              	.LVL4314:
16734:Core/Src/bno055.c ****     }
 34065              		.loc 1 16734 18 view .LVU9839
 34066 00a4 54FA80F0 		uxtab	r0, r4, r0
 34067 00a8 44B2     		sxtb	r4, r0
 34068              	.LVL4315:
16734:Core/Src/bno055.c ****     }
 34069              		.loc 1 16734 18 view .LVU9840
 34070 00aa F3E7     		b	.L2463
 34071              	.LVL4316:
 34072              	.L2466:
16678:Core/Src/bno055.c ****     }
 34073              		.loc 1 16678 16 view .LVU9841
 34074 00ac 6FF07E04 		mvn	r4, #126
 34075 00b0 F0E7     		b	.L2463
 34076              	.L2475:
 34077 00b2 00BF     		.align	2
 34078              	.L2474:
 34079 00b4 00000000 		.word	p_bno055
 34080              		.cfi_endproc
 34081              	.LFE242:
 34083              		.section	.text.bno055_get_gyro_any_motion_axis_enable,"ax",%progbits
 34084              		.align	1
 34085              		.global	bno055_get_gyro_any_motion_axis_enable
 34086              		.syntax unified
 34087              		.thumb
 34088              		.thumb_func
ARM GAS  /tmp/ccOloYeZ.s 			page 966


 34090              	bno055_get_gyro_any_motion_axis_enable:
 34091              	.LVL4317:
 34092              	.LFB243:
16739:Core/Src/bno055.c **** 
16740:Core/Src/bno055.c **** /*!
16741:Core/Src/bno055.c ****  *  @brief This API used to read the gyro anymotion enable
16742:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 0 to 2
16743:Core/Src/bno055.c ****  *
16744:Core/Src/bno055.c ****  *  @param data_u8 : The value of gyro anymotion enable
16745:Core/Src/bno055.c ****  *      data_u8     | result
16746:Core/Src/bno055.c ****  *  ----------------- |-------------
16747:Core/Src/bno055.c ****  *      0x01          | BNO055_BIT_ENABLE
16748:Core/Src/bno055.c ****  *      0x00          | BNO055_BIT_DISABLE
16749:Core/Src/bno055.c ****  *  @param channel_u8 : The value of gyro anymotion axis selection
16750:Core/Src/bno055.c ****  *               channel_u8         | value
16751:Core/Src/bno055.c ****  *     ---------------------------    | ----------
16752:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONX_AXIS   |   0
16753:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONY_AXIS   |   1
16754:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONZ_AXIS   |   2
16755:Core/Src/bno055.c ****  *
16756:Core/Src/bno055.c ****  *
16757:Core/Src/bno055.c ****  *  @return results of bus communication function
16758:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16759:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16760:Core/Src/bno055.c ****  *
16761:Core/Src/bno055.c ****  *
16762:Core/Src/bno055.c ****  */
16763:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_axis_enable(u8 channel_u8, u8 *data_u8)
16764:Core/Src/bno055.c **** {
 34093              		.loc 1 16764 1 is_stmt 1 view -0
 34094              		.cfi_startproc
 34095              		@ args = 0, pretend = 0, frame = 8
 34096              		@ frame_needed = 0, uses_anonymous_args = 0
 34097              		.loc 1 16764 1 is_stmt 0 view .LVU9843
 34098 0000 30B5     		push	{r4, r5, lr}
 34099              		.cfi_def_cfa_offset 12
 34100              		.cfi_offset 4, -12
 34101              		.cfi_offset 5, -8
 34102              		.cfi_offset 14, -4
 34103 0002 83B0     		sub	sp, sp, #12
 34104              		.cfi_def_cfa_offset 24
16765:Core/Src/bno055.c ****     /* Variable used to return value of
16766:Core/Src/bno055.c ****      * communication routine*/
16767:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34105              		.loc 1 16767 5 is_stmt 1 view .LVU9844
 34106              	.LVL4318:
16768:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34107              		.loc 1 16768 5 view .LVU9845
 34108              		.loc 1 16768 8 is_stmt 0 view .LVU9846
 34109 0004 0023     		movs	r3, #0
 34110 0006 8DF80730 		strb	r3, [sp, #7]
16769:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34111              		.loc 1 16769 5 is_stmt 1 view .LVU9847
 34112              	.LVL4319:
16770:Core/Src/bno055.c **** 
16771:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16772:Core/Src/bno055.c ****     if (p_bno055 == NULL)
ARM GAS  /tmp/ccOloYeZ.s 			page 967


 34113              		.loc 1 16772 5 view .LVU9848
 34114              		.loc 1 16772 18 is_stmt 0 view .LVU9849
 34115 000a 284B     		ldr	r3, .L2488
 34116 000c 1B68     		ldr	r3, [r3]
 34117              		.loc 1 16772 8 view .LVU9850
 34118 000e 002B     		cmp	r3, #0
 34119 0010 45D0     		beq	.L2482
 34120 0012 0446     		mov	r4, r0
 34121 0014 0D46     		mov	r5, r1
16773:Core/Src/bno055.c ****     {
16774:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16775:Core/Src/bno055.c ****     }
16776:Core/Src/bno055.c ****     else
16777:Core/Src/bno055.c ****     {
16778:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion axis is
16779:Core/Src/bno055.c ****          * available in the page one*/
16780:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 34122              		.loc 1 16780 9 is_stmt 1 view .LVU9851
 34123              		.loc 1 16780 21 is_stmt 0 view .LVU9852
 34124 0016 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34125              		.loc 1 16780 12 view .LVU9853
 34126 0018 012B     		cmp	r3, #1
 34127 001a 0DD1     		bne	.L2486
 34128              	.LVL4320:
 34129              	.L2478:
16781:Core/Src/bno055.c ****         {
16782:Core/Src/bno055.c ****             /* Write page as one */
16783:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16784:Core/Src/bno055.c ****         }
16785:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 34130              		.loc 1 16785 53 discriminator 1 view .LVU9854
 34131 001c 234B     		ldr	r3, .L2488
 34132 001e 1B68     		ldr	r3, [r3]
 34133 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34134              		.loc 1 16785 41 discriminator 1 view .LVU9855
 34135 0022 012B     		cmp	r3, #1
 34136 0024 3ED1     		bne	.L2483
 34137              	.L2479:
16786:Core/Src/bno055.c ****         {
16787:Core/Src/bno055.c ****             switch (channel_u8)
 34138              		.loc 1 16787 13 is_stmt 1 view .LVU9856
 34139 0026 012C     		cmp	r4, #1
 34140 0028 1BD0     		beq	.L2480
 34141 002a 022C     		cmp	r4, #2
 34142 002c 28D0     		beq	.L2481
 34143 002e 4CB1     		cbz	r4, .L2487
 34144 0030 6FF00100 		mvn	r0, #1
 34145              	.LVL4321:
 34146              	.L2477:
16788:Core/Src/bno055.c ****             {
16789:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_X_AXIS:
16790:Core/Src/bno055.c **** 
16791:Core/Src/bno055.c ****                     /* Read the gyro anymotion x enable*/
16792:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16793:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_X_AXIS_REG,
16794:Core/Src/bno055.c ****                                                               &data_u8r,
16795:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/ccOloYeZ.s 			page 968


16796:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_X_AXIS);
16797:Core/Src/bno055.c ****                     break;
16798:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_Y_AXIS:
16799:Core/Src/bno055.c **** 
16800:Core/Src/bno055.c ****                     /* Read the gyro anymotion y enable*/
16801:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16802:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Y_AXIS_REG,
16803:Core/Src/bno055.c ****                                                               &data_u8r,
16804:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16805:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_Y_AXIS);
16806:Core/Src/bno055.c ****                     break;
16807:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_Z_AXIS:
16808:Core/Src/bno055.c **** 
16809:Core/Src/bno055.c ****                     /* Read the gyro anymotion z enable*/
16810:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16811:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Z_AXIS_REG,
16812:Core/Src/bno055.c ****                                                               &data_u8r,
16813:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16814:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_Z_AXIS);
16815:Core/Src/bno055.c ****                     break;
16816:Core/Src/bno055.c ****                 default:
16817:Core/Src/bno055.c ****                     com_rslt = BNO055_OUT_OF_RANGE;
16818:Core/Src/bno055.c ****                     break;
16819:Core/Src/bno055.c ****             }
16820:Core/Src/bno055.c ****         }
16821:Core/Src/bno055.c ****         else
16822:Core/Src/bno055.c ****         {
16823:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16824:Core/Src/bno055.c ****         }
16825:Core/Src/bno055.c ****     }
16826:Core/Src/bno055.c **** 
16827:Core/Src/bno055.c ****     return com_rslt;
16828:Core/Src/bno055.c **** }
 34147              		.loc 1 16828 1 is_stmt 0 view .LVU9857
 34148 0034 03B0     		add	sp, sp, #12
 34149              		.cfi_remember_state
 34150              		.cfi_def_cfa_offset 12
 34151              		@ sp needed
 34152 0036 30BD     		pop	{r4, r5, pc}
 34153              	.LVL4322:
 34154              	.L2486:
 34155              		.cfi_restore_state
16783:Core/Src/bno055.c ****         }
 34156              		.loc 1 16783 13 is_stmt 1 view .LVU9858
16783:Core/Src/bno055.c ****         }
 34157              		.loc 1 16783 23 is_stmt 0 view .LVU9859
 34158 0038 0120     		movs	r0, #1
 34159              	.LVL4323:
16783:Core/Src/bno055.c ****         }
 34160              		.loc 1 16783 23 view .LVU9860
 34161 003a FFF7FEFF 		bl	bno055_write_page_id
 34162              	.LVL4324:
16785:Core/Src/bno055.c ****         {
 34163              		.loc 1 16785 9 is_stmt 1 view .LVU9861
16785:Core/Src/bno055.c ****         {
 34164              		.loc 1 16785 12 is_stmt 0 view .LVU9862
 34165 003e 0028     		cmp	r0, #0
ARM GAS  /tmp/ccOloYeZ.s 			page 969


 34166 0040 F1D0     		beq	.L2479
 34167 0042 EBE7     		b	.L2478
 34168              	.LVL4325:
 34169              	.L2487:
16792:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_X_AXIS_REG,
 34170              		.loc 1 16792 21 is_stmt 1 view .LVU9863
16792:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_X_AXIS_REG,
 34171              		.loc 1 16792 40 is_stmt 0 view .LVU9864
 34172 0044 194B     		ldr	r3, .L2488
 34173 0046 1868     		ldr	r0, [r3]
 34174 0048 0469     		ldr	r4, [r0, #16]
16792:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_X_AXIS_REG,
 34175              		.loc 1 16792 32 view .LVU9865
 34176 004a 0123     		movs	r3, #1
 34177 004c 0DF10702 		add	r2, sp, #7
 34178 0050 1721     		movs	r1, #23
 34179 0052 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34180 0054 A047     		blx	r4
 34181              	.LVL4326:
16796:Core/Src/bno055.c ****                     break;
 34182              		.loc 1 16796 21 is_stmt 1 view .LVU9866
16796:Core/Src/bno055.c ****                     break;
 34183              		.loc 1 16796 32 is_stmt 0 view .LVU9867
 34184 0056 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34185 005a 03F00103 		and	r3, r3, #1
16796:Core/Src/bno055.c ****                     break;
 34186              		.loc 1 16796 30 view .LVU9868
 34187 005e 2B70     		strb	r3, [r5]
16797:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_Y_AXIS:
 34188              		.loc 1 16797 21 is_stmt 1 view .LVU9869
 34189 0060 E8E7     		b	.L2477
 34190              	.LVL4327:
 34191              	.L2480:
16801:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Y_AXIS_REG,
 34192              		.loc 1 16801 21 view .LVU9870
16801:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Y_AXIS_REG,
 34193              		.loc 1 16801 40 is_stmt 0 view .LVU9871
 34194 0062 124B     		ldr	r3, .L2488
 34195 0064 1868     		ldr	r0, [r3]
 34196 0066 0469     		ldr	r4, [r0, #16]
16801:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Y_AXIS_REG,
 34197              		.loc 1 16801 32 view .LVU9872
 34198 0068 0123     		movs	r3, #1
 34199 006a 0DF10702 		add	r2, sp, #7
 34200 006e 1721     		movs	r1, #23
 34201 0070 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34202 0072 A047     		blx	r4
 34203              	.LVL4328:
16805:Core/Src/bno055.c ****                     break;
 34204              		.loc 1 16805 21 is_stmt 1 view .LVU9873
16805:Core/Src/bno055.c ****                     break;
 34205              		.loc 1 16805 32 is_stmt 0 view .LVU9874
 34206 0074 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34207 0078 C3F34003 		ubfx	r3, r3, #1, #1
16805:Core/Src/bno055.c ****                     break;
 34208              		.loc 1 16805 30 view .LVU9875
 34209 007c 2B70     		strb	r3, [r5]
ARM GAS  /tmp/ccOloYeZ.s 			page 970


16806:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_Z_AXIS:
 34210              		.loc 1 16806 21 is_stmt 1 view .LVU9876
 34211 007e D9E7     		b	.L2477
 34212              	.LVL4329:
 34213              	.L2481:
16810:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Z_AXIS_REG,
 34214              		.loc 1 16810 21 view .LVU9877
16810:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Z_AXIS_REG,
 34215              		.loc 1 16810 40 is_stmt 0 view .LVU9878
 34216 0080 0A4B     		ldr	r3, .L2488
 34217 0082 1868     		ldr	r0, [r3]
 34218 0084 0469     		ldr	r4, [r0, #16]
16810:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Z_AXIS_REG,
 34219              		.loc 1 16810 32 view .LVU9879
 34220 0086 0123     		movs	r3, #1
 34221 0088 0DF10702 		add	r2, sp, #7
 34222 008c 1721     		movs	r1, #23
 34223 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34224 0090 A047     		blx	r4
 34225              	.LVL4330:
16814:Core/Src/bno055.c ****                     break;
 34226              		.loc 1 16814 21 is_stmt 1 view .LVU9880
16814:Core/Src/bno055.c ****                     break;
 34227              		.loc 1 16814 32 is_stmt 0 view .LVU9881
 34228 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34229 0096 C3F38003 		ubfx	r3, r3, #2, #1
16814:Core/Src/bno055.c ****                     break;
 34230              		.loc 1 16814 30 view .LVU9882
 34231 009a 2B70     		strb	r3, [r5]
16815:Core/Src/bno055.c ****                 default:
 34232              		.loc 1 16815 21 is_stmt 1 view .LVU9883
 34233 009c CAE7     		b	.L2477
 34234              	.LVL4331:
 34235              	.L2482:
16774:Core/Src/bno055.c ****     }
 34236              		.loc 1 16774 16 is_stmt 0 view .LVU9884
 34237 009e 6FF07E00 		mvn	r0, #126
 34238              	.LVL4332:
16774:Core/Src/bno055.c ****     }
 34239              		.loc 1 16774 16 view .LVU9885
 34240 00a2 C7E7     		b	.L2477
 34241              	.LVL4333:
 34242              	.L2483:
16823:Core/Src/bno055.c ****         }
 34243              		.loc 1 16823 22 view .LVU9886
 34244 00a4 4FF0FF30 		mov	r0, #-1
 34245 00a8 C4E7     		b	.L2477
 34246              	.L2489:
 34247 00aa 00BF     		.align	2
 34248              	.L2488:
 34249 00ac 00000000 		.word	p_bno055
 34250              		.cfi_endproc
 34251              	.LFE243:
 34253              		.section	.text.bno055_set_gyro_any_motion_axis_enable,"ax",%progbits
 34254              		.align	1
 34255              		.global	bno055_set_gyro_any_motion_axis_enable
 34256              		.syntax unified
ARM GAS  /tmp/ccOloYeZ.s 			page 971


 34257              		.thumb
 34258              		.thumb_func
 34260              	bno055_set_gyro_any_motion_axis_enable:
 34261              	.LVL4334:
 34262              	.LFB244:
16829:Core/Src/bno055.c **** 
16830:Core/Src/bno055.c **** /*!
16831:Core/Src/bno055.c ****  *  @brief This API used to write the gyro anymotion enable
16832:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 0 to 2
16833:Core/Src/bno055.c ****  *
16834:Core/Src/bno055.c ****  *  @param data_u8 : The value of gyro anymotion enable
16835:Core/Src/bno055.c ****  *      data_u8     | result
16836:Core/Src/bno055.c ****  *  ----------------- |-------------
16837:Core/Src/bno055.c ****  *      0x01          | BNO055_BIT_ENABLE
16838:Core/Src/bno055.c ****  *      0x00          | BNO055_BIT_DISABLE
16839:Core/Src/bno055.c ****  *  @param channel_u8 : The value of gyro anymotion axis selection
16840:Core/Src/bno055.c ****  *               channel_u8         | value
16841:Core/Src/bno055.c ****  *     ---------------------------    | ----------
16842:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONX_AXIS   |   0
16843:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONY_AXIS   |   1
16844:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONZ_AXIS   |   2
16845:Core/Src/bno055.c ****  *
16846:Core/Src/bno055.c ****  *  @return results of bus communication function
16847:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16848:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16849:Core/Src/bno055.c ****  *
16850:Core/Src/bno055.c ****  *
16851:Core/Src/bno055.c ****  */
16852:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_axis_enable(u8 channel_u8, u8 data_u8)
16853:Core/Src/bno055.c **** {
 34263              		.loc 1 16853 1 is_stmt 1 view -0
 34264              		.cfi_startproc
 34265              		@ args = 0, pretend = 0, frame = 8
 34266              		@ frame_needed = 0, uses_anonymous_args = 0
 34267              		.loc 1 16853 1 is_stmt 0 view .LVU9888
 34268 0000 70B5     		push	{r4, r5, r6, lr}
 34269              		.cfi_def_cfa_offset 16
 34270              		.cfi_offset 4, -16
 34271              		.cfi_offset 5, -12
 34272              		.cfi_offset 6, -8
 34273              		.cfi_offset 14, -4
 34274 0002 82B0     		sub	sp, sp, #8
 34275              		.cfi_def_cfa_offset 24
16854:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34276              		.loc 1 16854 5 is_stmt 1 view .LVU9889
 34277              	.LVL4335:
16855:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34278              		.loc 1 16855 5 view .LVU9890
 34279              		.loc 1 16855 8 is_stmt 0 view .LVU9891
 34280 0004 0023     		movs	r3, #0
 34281 0006 8DF80730 		strb	r3, [sp, #7]
16856:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34282              		.loc 1 16856 5 is_stmt 1 view .LVU9892
 34283              	.LVL4336:
16857:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 34284              		.loc 1 16857 5 view .LVU9893
 34285              		.loc 1 16857 8 is_stmt 0 view .LVU9894
ARM GAS  /tmp/ccOloYeZ.s 			page 972


 34286 000a 8DF80630 		strb	r3, [sp, #6]
16858:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 34287              		.loc 1 16858 5 is_stmt 1 view .LVU9895
 34288              	.LVL4337:
16859:Core/Src/bno055.c **** 
16860:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16861:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34289              		.loc 1 16861 5 view .LVU9896
 34290              		.loc 1 16861 18 is_stmt 0 view .LVU9897
 34291 000e 524B     		ldr	r3, .L2506
 34292 0010 1B68     		ldr	r3, [r3]
 34293              		.loc 1 16861 8 view .LVU9898
 34294 0012 002B     		cmp	r3, #0
 34295 0014 00F09C80 		beq	.L2496
 34296 0018 0446     		mov	r4, r0
 34297 001a 0D46     		mov	r5, r1
16862:Core/Src/bno055.c ****     {
16863:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16864:Core/Src/bno055.c ****     }
16865:Core/Src/bno055.c ****     else
16866:Core/Src/bno055.c ****     {
16867:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16868:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16869:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16870:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 34298              		.loc 1 16870 9 is_stmt 1 view .LVU9899
 34299              		.loc 1 16870 19 is_stmt 0 view .LVU9900
 34300 001c 0DF10600 		add	r0, sp, #6
 34301              	.LVL4338:
 34302              		.loc 1 16870 19 view .LVU9901
 34303 0020 FFF7FEFF 		bl	bno055_get_operation_mode
 34304              	.LVL4339:
16871:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 34305              		.loc 1 16871 9 is_stmt 1 view .LVU9902
 34306              		.loc 1 16871 12 is_stmt 0 view .LVU9903
 34307 0024 0646     		mov	r6, r0
 34308 0026 0028     		cmp	r0, #0
 34309 0028 40F08180 		bne	.L2497
16872:Core/Src/bno055.c ****         {
16873:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34310              		.loc 1 16873 13 is_stmt 1 view .LVU9904
 34311              		.loc 1 16873 32 is_stmt 0 view .LVU9905
 34312 002c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 34313              		.loc 1 16873 16 view .LVU9906
 34314 0030 1BB9     		cbnz	r3, .L2502
 34315              	.LVL4340:
 34316              	.L2493:
16874:Core/Src/bno055.c ****             {
16875:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16876:Core/Src/bno055.c ****             }
16877:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 34317              		.loc 1 16877 13 is_stmt 1 view .LVU9907
 34318              		.loc 1 16877 16 is_stmt 0 view .LVU9908
 34319 0032 46B1     		cbz	r6, .L2503
16878:Core/Src/bno055.c ****             {
16879:Core/Src/bno055.c ****                 /* Write page as one */
16880:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
ARM GAS  /tmp/ccOloYeZ.s 			page 973


16881:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16882:Core/Src/bno055.c ****                 {
16883:Core/Src/bno055.c ****                     switch (channel_u8)
16884:Core/Src/bno055.c ****                     {
16885:Core/Src/bno055.c ****                         case BNO055_GYRO_ANY_MOTION_X_AXIS:
16886:Core/Src/bno055.c **** 
16887:Core/Src/bno055.c ****                             /* Write the gyro
16888:Core/Src/bno055.c ****                              * anymotion x enable*/
16889:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16890:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
16891:Core/Src/bno055.c ****                                                                       &data_u8r,
16892:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
16893:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
16894:Core/Src/bno055.c ****                             {
16895:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_X_A
16896:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16897:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
16898:Core/Src/bno055.c ****                                                                             &data_u8r,
16899:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
16900:Core/Src/bno055.c ****                             }
16901:Core/Src/bno055.c ****                             break;
16902:Core/Src/bno055.c ****                         case BNO055_GYRO_ANY_MOTION_Y_AXIS:
16903:Core/Src/bno055.c **** 
16904:Core/Src/bno055.c ****                             /* Write the gyro
16905:Core/Src/bno055.c ****                              * anymotion y enable*/
16906:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16907:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
16908:Core/Src/bno055.c ****                                                                       &data_u8r,
16909:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
16910:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
16911:Core/Src/bno055.c ****                             {
16912:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_Y_A
16913:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16914:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
16915:Core/Src/bno055.c ****                                                                             &data_u8r,
16916:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
16917:Core/Src/bno055.c ****                             }
16918:Core/Src/bno055.c ****                             break;
16919:Core/Src/bno055.c ****                         case BNO055_GYRO_ANY_MOTION_Z_AXIS:
16920:Core/Src/bno055.c **** 
16921:Core/Src/bno055.c ****                             /* Write the gyro
16922:Core/Src/bno055.c ****                              * anymotion z enable*/
16923:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16924:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
16925:Core/Src/bno055.c ****                                                                       &data_u8r,
16926:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
16927:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
16928:Core/Src/bno055.c ****                             {
16929:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_Z_A
16930:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16931:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
16932:Core/Src/bno055.c ****                                                                             &data_u8r,
16933:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
16934:Core/Src/bno055.c ****                             }
16935:Core/Src/bno055.c ****                             break;
16936:Core/Src/bno055.c ****                         default:
16937:Core/Src/bno055.c ****                             com_rslt = BNO055_OUT_OF_RANGE;
ARM GAS  /tmp/ccOloYeZ.s 			page 974


16938:Core/Src/bno055.c ****                             break;
16939:Core/Src/bno055.c ****                     }
16940:Core/Src/bno055.c ****                 }
16941:Core/Src/bno055.c ****                 else
16942:Core/Src/bno055.c ****                 {
16943:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16944:Core/Src/bno055.c ****                 }
16945:Core/Src/bno055.c ****             }
16946:Core/Src/bno055.c ****             else
16947:Core/Src/bno055.c ****             {
16948:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 34320              		.loc 1 16948 26 view .LVU9909
 34321 0034 4FF0FF34 		mov	r4, #-1
 34322 0038 7BE0     		b	.L2492
 34323              	.LVL4341:
 34324              	.L2502:
16875:Core/Src/bno055.c ****             }
 34325              		.loc 1 16875 17 is_stmt 1 view .LVU9910
16875:Core/Src/bno055.c ****             }
 34326              		.loc 1 16875 28 is_stmt 0 view .LVU9911
 34327 003a FFF7FEFF 		bl	bno055_set_operation_mode
 34328              	.LVL4342:
16875:Core/Src/bno055.c ****             }
 34329              		.loc 1 16875 25 view .LVU9912
 34330 003e 56FA80F6 		uxtab	r6, r6, r0
 34331 0042 76B2     		sxtb	r6, r6
 34332              	.LVL4343:
16875:Core/Src/bno055.c ****             }
 34333              		.loc 1 16875 25 view .LVU9913
 34334 0044 F5E7     		b	.L2493
 34335              	.L2503:
16880:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34336              		.loc 1 16880 17 is_stmt 1 view .LVU9914
16880:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34337              		.loc 1 16880 30 is_stmt 0 view .LVU9915
 34338 0046 0120     		movs	r0, #1
 34339 0048 FFF7FEFF 		bl	bno055_write_page_id
 34340              	.LVL4344:
16881:Core/Src/bno055.c ****                 {
 34341              		.loc 1 16881 17 is_stmt 1 view .LVU9916
16881:Core/Src/bno055.c ****                 {
 34342              		.loc 1 16881 20 is_stmt 0 view .LVU9917
 34343 004c 0028     		cmp	r0, #0
 34344 004e 76D1     		bne	.L2499
16883:Core/Src/bno055.c ****                     {
 34345              		.loc 1 16883 21 is_stmt 1 view .LVU9918
 34346 0050 012C     		cmp	r4, #1
 34347 0052 27D0     		beq	.L2494
 34348 0054 022C     		cmp	r4, #2
 34349 0056 48D0     		beq	.L2495
 34350 0058 14B1     		cbz	r4, .L2504
 34351 005a 6FF00104 		mvn	r4, #1
 34352 005e 68E0     		b	.L2492
 34353              	.L2504:
16889:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
 34354              		.loc 1 16889 29 view .LVU9919
16889:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
ARM GAS  /tmp/ccOloYeZ.s 			page 975


 34355              		.loc 1 16889 48 is_stmt 0 view .LVU9920
 34356 0060 3D4B     		ldr	r3, .L2506
 34357 0062 1868     		ldr	r0, [r3]
 34358              	.LVL4345:
16889:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
 34359              		.loc 1 16889 48 view .LVU9921
 34360 0064 0469     		ldr	r4, [r0, #16]
16889:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
 34361              		.loc 1 16889 40 view .LVU9922
 34362 0066 0123     		movs	r3, #1
 34363 0068 0DF10702 		add	r2, sp, #7
 34364 006c 1721     		movs	r1, #23
 34365 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34366 0070 A047     		blx	r4
 34367              	.LVL4346:
16893:Core/Src/bno055.c ****                             {
 34368              		.loc 1 16893 29 is_stmt 1 view .LVU9923
16893:Core/Src/bno055.c ****                             {
 34369              		.loc 1 16893 32 is_stmt 0 view .LVU9924
 34370 0072 0446     		mov	r4, r0
 34371 0074 0028     		cmp	r0, #0
 34372 0076 5CD1     		bne	.L2492
16895:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34373              		.loc 1 16895 33 is_stmt 1 view .LVU9925
16895:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34374              		.loc 1 16895 44 is_stmt 0 view .LVU9926
 34375 0078 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
16895:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34376              		.loc 1 16895 42 view .LVU9927
 34377 007c 23F00103 		bic	r3, r3, #1
 34378 0080 05F00105 		and	r5, r5, #1
 34379 0084 2B43     		orrs	r3, r3, r5
 34380 0086 8DF80730 		strb	r3, [sp, #7]
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 34381              		.loc 1 16896 33 is_stmt 1 view .LVU9928
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 34382              		.loc 1 16896 53 is_stmt 0 view .LVU9929
 34383 008a 334B     		ldr	r3, .L2506
 34384 008c 1868     		ldr	r0, [r3]
 34385              	.LVL4347:
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 34386              		.loc 1 16896 53 view .LVU9930
 34387 008e C568     		ldr	r5, [r0, #12]
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 34388              		.loc 1 16896 45 view .LVU9931
 34389 0090 0123     		movs	r3, #1
 34390 0092 0DF10702 		add	r2, sp, #7
 34391 0096 1721     		movs	r1, #23
 34392 0098 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34393 009a A847     		blx	r5
 34394              	.LVL4348:
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 34395              		.loc 1 16896 42 view .LVU9932
 34396 009c 54FA80F3 		uxtab	r3, r4, r0
 34397 00a0 5CB2     		sxtb	r4, r3
 34398              	.LVL4349:
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
ARM GAS  /tmp/ccOloYeZ.s 			page 976


 34399              		.loc 1 16896 42 view .LVU9933
 34400 00a2 46E0     		b	.L2492
 34401              	.LVL4350:
 34402              	.L2494:
16906:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
 34403              		.loc 1 16906 29 is_stmt 1 view .LVU9934
16906:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
 34404              		.loc 1 16906 48 is_stmt 0 view .LVU9935
 34405 00a4 2C4B     		ldr	r3, .L2506
 34406 00a6 1868     		ldr	r0, [r3]
 34407              	.LVL4351:
16906:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
 34408              		.loc 1 16906 48 view .LVU9936
 34409 00a8 0469     		ldr	r4, [r0, #16]
16906:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
 34410              		.loc 1 16906 40 view .LVU9937
 34411 00aa 0123     		movs	r3, #1
 34412 00ac 0DF10702 		add	r2, sp, #7
 34413 00b0 1721     		movs	r1, #23
 34414 00b2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34415 00b4 A047     		blx	r4
 34416              	.LVL4352:
16910:Core/Src/bno055.c ****                             {
 34417              		.loc 1 16910 29 is_stmt 1 view .LVU9938
16910:Core/Src/bno055.c ****                             {
 34418              		.loc 1 16910 32 is_stmt 0 view .LVU9939
 34419 00b6 0446     		mov	r4, r0
 34420 00b8 0028     		cmp	r0, #0
 34421 00ba 3AD1     		bne	.L2492
16912:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34422              		.loc 1 16912 33 is_stmt 1 view .LVU9940
16912:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34423              		.loc 1 16912 44 is_stmt 0 view .LVU9941
 34424 00bc 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34425 00c0 6A00     		lsls	r2, r5, #1
 34426 00c2 02F00202 		and	r2, r2, #2
 34427 00c6 23F00203 		bic	r3, r3, #2
 34428 00ca 1343     		orrs	r3, r3, r2
16912:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34429              		.loc 1 16912 42 view .LVU9942
 34430 00cc 8DF80730 		strb	r3, [sp, #7]
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 34431              		.loc 1 16913 33 is_stmt 1 view .LVU9943
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 34432              		.loc 1 16913 53 is_stmt 0 view .LVU9944
 34433 00d0 214B     		ldr	r3, .L2506
 34434 00d2 1868     		ldr	r0, [r3]
 34435              	.LVL4353:
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 34436              		.loc 1 16913 53 view .LVU9945
 34437 00d4 C568     		ldr	r5, [r0, #12]
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 34438              		.loc 1 16913 45 view .LVU9946
 34439 00d6 0123     		movs	r3, #1
 34440 00d8 0DF10702 		add	r2, sp, #7
 34441 00dc 1721     		movs	r1, #23
 34442 00de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccOloYeZ.s 			page 977


 34443 00e0 A847     		blx	r5
 34444              	.LVL4354:
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 34445              		.loc 1 16913 42 view .LVU9947
 34446 00e2 54FA80F3 		uxtab	r3, r4, r0
 34447 00e6 5CB2     		sxtb	r4, r3
 34448              	.LVL4355:
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 34449              		.loc 1 16913 42 view .LVU9948
 34450 00e8 23E0     		b	.L2492
 34451              	.LVL4356:
 34452              	.L2495:
16923:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
 34453              		.loc 1 16923 29 is_stmt 1 view .LVU9949
16923:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
 34454              		.loc 1 16923 48 is_stmt 0 view .LVU9950
 34455 00ea 1B4B     		ldr	r3, .L2506
 34456 00ec 1868     		ldr	r0, [r3]
 34457              	.LVL4357:
16923:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
 34458              		.loc 1 16923 48 view .LVU9951
 34459 00ee 0469     		ldr	r4, [r0, #16]
16923:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
 34460              		.loc 1 16923 40 view .LVU9952
 34461 00f0 0123     		movs	r3, #1
 34462 00f2 0DF10702 		add	r2, sp, #7
 34463 00f6 1721     		movs	r1, #23
 34464 00f8 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34465 00fa A047     		blx	r4
 34466              	.LVL4358:
16927:Core/Src/bno055.c ****                             {
 34467              		.loc 1 16927 29 is_stmt 1 view .LVU9953
16927:Core/Src/bno055.c ****                             {
 34468              		.loc 1 16927 32 is_stmt 0 view .LVU9954
 34469 00fc 0446     		mov	r4, r0
 34470 00fe C0B9     		cbnz	r0, .L2492
16929:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34471              		.loc 1 16929 33 is_stmt 1 view .LVU9955
16929:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34472              		.loc 1 16929 44 is_stmt 0 view .LVU9956
 34473 0100 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 34474 0104 AB00     		lsls	r3, r5, #2
 34475 0106 03F00403 		and	r3, r3, #4
 34476 010a 22F00402 		bic	r2, r2, #4
 34477 010e 1343     		orrs	r3, r3, r2
16929:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34478              		.loc 1 16929 42 view .LVU9957
 34479 0110 8DF80730 		strb	r3, [sp, #7]
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 34480              		.loc 1 16930 33 is_stmt 1 view .LVU9958
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 34481              		.loc 1 16930 53 is_stmt 0 view .LVU9959
 34482 0114 104B     		ldr	r3, .L2506
 34483 0116 1868     		ldr	r0, [r3]
 34484              	.LVL4359:
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 34485              		.loc 1 16930 53 view .LVU9960
ARM GAS  /tmp/ccOloYeZ.s 			page 978


 34486 0118 C568     		ldr	r5, [r0, #12]
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 34487              		.loc 1 16930 45 view .LVU9961
 34488 011a 0123     		movs	r3, #1
 34489 011c 0DF10702 		add	r2, sp, #7
 34490 0120 1721     		movs	r1, #23
 34491 0122 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34492 0124 A847     		blx	r5
 34493              	.LVL4360:
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 34494              		.loc 1 16930 42 view .LVU9962
 34495 0126 54FA80F3 		uxtab	r3, r4, r0
 34496 012a 5CB2     		sxtb	r4, r3
 34497              	.LVL4361:
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 34498              		.loc 1 16930 42 view .LVU9963
 34499 012c 01E0     		b	.L2492
 34500              	.LVL4362:
 34501              	.L2497:
16949:Core/Src/bno055.c ****             }
16950:Core/Src/bno055.c ****         }
16951:Core/Src/bno055.c ****         else
16952:Core/Src/bno055.c ****         {
16953:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 34502              		.loc 1 16953 22 view .LVU9964
 34503 012e 4FF0FF34 		mov	r4, #-1
 34504              	.LVL4363:
 34505              	.L2492:
16954:Core/Src/bno055.c ****         }
16955:Core/Src/bno055.c ****     }
16956:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34506              		.loc 1 16956 5 is_stmt 1 view .LVU9965
 34507              		.loc 1 16956 24 is_stmt 0 view .LVU9966
 34508 0132 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 34509              		.loc 1 16956 8 view .LVU9967
 34510 0136 28B9     		cbnz	r0, .L2505
 34511              	.LVL4364:
 34512              	.L2491:
16957:Core/Src/bno055.c ****     {
16958:Core/Src/bno055.c ****         /* set the operation mode of
16959:Core/Src/bno055.c ****          * previous operation mode*/
16960:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16961:Core/Src/bno055.c ****     }
16962:Core/Src/bno055.c **** 
16963:Core/Src/bno055.c ****     return com_rslt;
16964:Core/Src/bno055.c **** }
 34513              		.loc 1 16964 1 view .LVU9968
 34514 0138 2046     		mov	r0, r4
 34515 013a 02B0     		add	sp, sp, #8
 34516              		.cfi_remember_state
 34517              		.cfi_def_cfa_offset 16
 34518              		@ sp needed
 34519 013c 70BD     		pop	{r4, r5, r6, pc}
 34520              	.LVL4365:
 34521              	.L2499:
 34522              		.cfi_restore_state
16943:Core/Src/bno055.c ****                 }
ARM GAS  /tmp/ccOloYeZ.s 			page 979


 34523              		.loc 1 16943 30 view .LVU9969
 34524 013e 4FF0FF34 		mov	r4, #-1
 34525 0142 F6E7     		b	.L2492
 34526              	.LVL4366:
 34527              	.L2505:
16960:Core/Src/bno055.c ****     }
 34528              		.loc 1 16960 9 is_stmt 1 view .LVU9970
16960:Core/Src/bno055.c ****     }
 34529              		.loc 1 16960 21 is_stmt 0 view .LVU9971
 34530 0144 FFF7FEFF 		bl	bno055_set_operation_mode
 34531              	.LVL4367:
16960:Core/Src/bno055.c ****     }
 34532              		.loc 1 16960 18 view .LVU9972
 34533 0148 54FA80F0 		uxtab	r0, r4, r0
 34534 014c 44B2     		sxtb	r4, r0
 34535              	.LVL4368:
16960:Core/Src/bno055.c ****     }
 34536              		.loc 1 16960 18 view .LVU9973
 34537 014e F3E7     		b	.L2491
 34538              	.LVL4369:
 34539              	.L2496:
16863:Core/Src/bno055.c ****     }
 34540              		.loc 1 16863 16 view .LVU9974
 34541 0150 6FF07E04 		mvn	r4, #126
 34542 0154 F0E7     		b	.L2491
 34543              	.L2507:
 34544 0156 00BF     		.align	2
 34545              	.L2506:
 34546 0158 00000000 		.word	p_bno055
 34547              		.cfi_endproc
 34548              	.LFE244:
 34550              		.section	.text.bno055_get_gyro_highrate_axis_enable,"ax",%progbits
 34551              		.align	1
 34552              		.global	bno055_get_gyro_highrate_axis_enable
 34553              		.syntax unified
 34554              		.thumb
 34555              		.thumb_func
 34557              	bno055_get_gyro_highrate_axis_enable:
 34558              	.LVL4370:
 34559              	.LFB245:
16965:Core/Src/bno055.c **** 
16966:Core/Src/bno055.c **** /*!
16967:Core/Src/bno055.c ****  *  @brief This API used to read the gyro highrate enable
16968:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 3 to 5
16969:Core/Src/bno055.c ****  *
16970:Core/Src/bno055.c ****  *  @param data_u8 : The value of gyro highrate enable
16971:Core/Src/bno055.c ****  *      data_u8     | result
16972:Core/Src/bno055.c ****  *  ----------------  |-------------
16973:Core/Src/bno055.c ****  *      0x01          | BNO055_BIT_ENABLE
16974:Core/Src/bno055.c ****  *      0x00          | BNO055_BIT_DISABLE
16975:Core/Src/bno055.c ****  *  @param channel_u8 : The value of gyro highrate axis selection
16976:Core/Src/bno055.c ****  *               channel_u8         | value
16977:Core/Src/bno055.c ****  *     ------------------------       | ----------
16978:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_X_AXIS    |   0
16979:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_Y_AXIS    |   1
16980:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_Z_AXIS    |   2
16981:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 980


16982:Core/Src/bno055.c ****  *
16983:Core/Src/bno055.c ****  *  @return results of bus communication function
16984:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16985:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16986:Core/Src/bno055.c ****  *
16987:Core/Src/bno055.c ****  *
16988:Core/Src/bno055.c ****  */
16989:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_axis_enable(u8 channel_u8, u8 *data_u8)
16990:Core/Src/bno055.c **** {
 34560              		.loc 1 16990 1 is_stmt 1 view -0
 34561              		.cfi_startproc
 34562              		@ args = 0, pretend = 0, frame = 8
 34563              		@ frame_needed = 0, uses_anonymous_args = 0
 34564              		.loc 1 16990 1 is_stmt 0 view .LVU9976
 34565 0000 30B5     		push	{r4, r5, lr}
 34566              		.cfi_def_cfa_offset 12
 34567              		.cfi_offset 4, -12
 34568              		.cfi_offset 5, -8
 34569              		.cfi_offset 14, -4
 34570 0002 83B0     		sub	sp, sp, #12
 34571              		.cfi_def_cfa_offset 24
16991:Core/Src/bno055.c ****     /* Variable used to return value of
16992:Core/Src/bno055.c ****      * communication routine*/
16993:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34572              		.loc 1 16993 5 is_stmt 1 view .LVU9977
 34573              	.LVL4371:
16994:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34574              		.loc 1 16994 5 view .LVU9978
 34575              		.loc 1 16994 8 is_stmt 0 view .LVU9979
 34576 0004 0023     		movs	r3, #0
 34577 0006 8DF80730 		strb	r3, [sp, #7]
16995:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34578              		.loc 1 16995 5 is_stmt 1 view .LVU9980
 34579              	.LVL4372:
16996:Core/Src/bno055.c **** 
16997:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16998:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34580              		.loc 1 16998 5 view .LVU9981
 34581              		.loc 1 16998 18 is_stmt 0 view .LVU9982
 34582 000a 284B     		ldr	r3, .L2520
 34583 000c 1B68     		ldr	r3, [r3]
 34584              		.loc 1 16998 8 view .LVU9983
 34585 000e 002B     		cmp	r3, #0
 34586 0010 45D0     		beq	.L2514
 34587 0012 0446     		mov	r4, r0
 34588 0014 0D46     		mov	r5, r1
16999:Core/Src/bno055.c ****     {
17000:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17001:Core/Src/bno055.c ****     }
17002:Core/Src/bno055.c ****     else
17003:Core/Src/bno055.c ****     {
17004:Core/Src/bno055.c ****         /*condition check for page, gyro highrate enable is
17005:Core/Src/bno055.c ****          * available in the page one*/
17006:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 34589              		.loc 1 17006 9 is_stmt 1 view .LVU9984
 34590              		.loc 1 17006 21 is_stmt 0 view .LVU9985
 34591 0016 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccOloYeZ.s 			page 981


 34592              		.loc 1 17006 12 view .LVU9986
 34593 0018 012B     		cmp	r3, #1
 34594 001a 0DD1     		bne	.L2518
 34595              	.LVL4373:
 34596              	.L2510:
17007:Core/Src/bno055.c ****         {
17008:Core/Src/bno055.c ****             /* Write page as one */
17009:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17010:Core/Src/bno055.c ****         }
17011:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 34597              		.loc 1 17011 53 discriminator 1 view .LVU9987
 34598 001c 234B     		ldr	r3, .L2520
 34599 001e 1B68     		ldr	r3, [r3]
 34600 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34601              		.loc 1 17011 41 discriminator 1 view .LVU9988
 34602 0022 012B     		cmp	r3, #1
 34603 0024 3ED1     		bne	.L2515
 34604              	.L2511:
17012:Core/Src/bno055.c ****         {
17013:Core/Src/bno055.c ****             switch (channel_u8)
 34605              		.loc 1 17013 13 is_stmt 1 view .LVU9989
 34606 0026 012C     		cmp	r4, #1
 34607 0028 1BD0     		beq	.L2512
 34608 002a 022C     		cmp	r4, #2
 34609 002c 28D0     		beq	.L2513
 34610 002e 4CB1     		cbz	r4, .L2519
 34611 0030 6FF00100 		mvn	r0, #1
 34612              	.LVL4374:
 34613              	.L2509:
17014:Core/Src/bno055.c ****             {
17015:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_X_AXIS:
17016:Core/Src/bno055.c **** 
17017:Core/Src/bno055.c ****                     /* Read the gyro highrate x enable */
17018:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17019:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_AXIS_REG,
17020:Core/Src/bno055.c ****                                                               &data_u8r,
17021:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17022:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_AXIS);
17023:Core/Src/bno055.c ****                     break;
17024:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_Y_AXIS:
17025:Core/Src/bno055.c **** 
17026:Core/Src/bno055.c ****                     /* Read the gyro highrate y enable */
17027:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17028:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_AXIS_REG,
17029:Core/Src/bno055.c ****                                                               &data_u8r,
17030:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17031:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_AXIS);
17032:Core/Src/bno055.c ****                     break;
17033:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_Z_AXIS:
17034:Core/Src/bno055.c **** 
17035:Core/Src/bno055.c ****                     /* Read the gyro highrate z enable */
17036:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17037:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_AXIS_REG,
17038:Core/Src/bno055.c ****                                                               &data_u8r,
17039:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17040:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_AXIS);
17041:Core/Src/bno055.c ****                     break;
ARM GAS  /tmp/ccOloYeZ.s 			page 982


17042:Core/Src/bno055.c ****                 default:
17043:Core/Src/bno055.c ****                     com_rslt = BNO055_OUT_OF_RANGE;
17044:Core/Src/bno055.c ****                     break;
17045:Core/Src/bno055.c ****             }
17046:Core/Src/bno055.c ****         }
17047:Core/Src/bno055.c ****         else
17048:Core/Src/bno055.c ****         {
17049:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17050:Core/Src/bno055.c ****         }
17051:Core/Src/bno055.c ****     }
17052:Core/Src/bno055.c **** 
17053:Core/Src/bno055.c ****     return com_rslt;
17054:Core/Src/bno055.c **** }
 34614              		.loc 1 17054 1 is_stmt 0 view .LVU9990
 34615 0034 03B0     		add	sp, sp, #12
 34616              		.cfi_remember_state
 34617              		.cfi_def_cfa_offset 12
 34618              		@ sp needed
 34619 0036 30BD     		pop	{r4, r5, pc}
 34620              	.LVL4375:
 34621              	.L2518:
 34622              		.cfi_restore_state
17009:Core/Src/bno055.c ****         }
 34623              		.loc 1 17009 13 is_stmt 1 view .LVU9991
17009:Core/Src/bno055.c ****         }
 34624              		.loc 1 17009 23 is_stmt 0 view .LVU9992
 34625 0038 0120     		movs	r0, #1
 34626              	.LVL4376:
17009:Core/Src/bno055.c ****         }
 34627              		.loc 1 17009 23 view .LVU9993
 34628 003a FFF7FEFF 		bl	bno055_write_page_id
 34629              	.LVL4377:
17011:Core/Src/bno055.c ****         {
 34630              		.loc 1 17011 9 is_stmt 1 view .LVU9994
17011:Core/Src/bno055.c ****         {
 34631              		.loc 1 17011 12 is_stmt 0 view .LVU9995
 34632 003e 0028     		cmp	r0, #0
 34633 0040 F1D0     		beq	.L2511
 34634 0042 EBE7     		b	.L2510
 34635              	.LVL4378:
 34636              	.L2519:
17018:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_AXIS_REG,
 34637              		.loc 1 17018 21 is_stmt 1 view .LVU9996
17018:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_AXIS_REG,
 34638              		.loc 1 17018 40 is_stmt 0 view .LVU9997
 34639 0044 194B     		ldr	r3, .L2520
 34640 0046 1868     		ldr	r0, [r3]
 34641 0048 0469     		ldr	r4, [r0, #16]
17018:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_AXIS_REG,
 34642              		.loc 1 17018 32 view .LVU9998
 34643 004a 0123     		movs	r3, #1
 34644 004c 0DF10702 		add	r2, sp, #7
 34645 0050 1721     		movs	r1, #23
 34646 0052 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34647 0054 A047     		blx	r4
 34648              	.LVL4379:
17022:Core/Src/bno055.c ****                     break;
ARM GAS  /tmp/ccOloYeZ.s 			page 983


 34649              		.loc 1 17022 21 is_stmt 1 view .LVU9999
17022:Core/Src/bno055.c ****                     break;
 34650              		.loc 1 17022 32 is_stmt 0 view .LVU10000
 34651 0056 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34652 005a C3F3C003 		ubfx	r3, r3, #3, #1
17022:Core/Src/bno055.c ****                     break;
 34653              		.loc 1 17022 30 view .LVU10001
 34654 005e 2B70     		strb	r3, [r5]
17023:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_Y_AXIS:
 34655              		.loc 1 17023 21 is_stmt 1 view .LVU10002
 34656 0060 E8E7     		b	.L2509
 34657              	.LVL4380:
 34658              	.L2512:
17027:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_AXIS_REG,
 34659              		.loc 1 17027 21 view .LVU10003
17027:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_AXIS_REG,
 34660              		.loc 1 17027 40 is_stmt 0 view .LVU10004
 34661 0062 124B     		ldr	r3, .L2520
 34662 0064 1868     		ldr	r0, [r3]
 34663 0066 0469     		ldr	r4, [r0, #16]
17027:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_AXIS_REG,
 34664              		.loc 1 17027 32 view .LVU10005
 34665 0068 0123     		movs	r3, #1
 34666 006a 0DF10702 		add	r2, sp, #7
 34667 006e 1721     		movs	r1, #23
 34668 0070 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34669 0072 A047     		blx	r4
 34670              	.LVL4381:
17031:Core/Src/bno055.c ****                     break;
 34671              		.loc 1 17031 21 is_stmt 1 view .LVU10006
17031:Core/Src/bno055.c ****                     break;
 34672              		.loc 1 17031 32 is_stmt 0 view .LVU10007
 34673 0074 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34674 0078 C3F30013 		ubfx	r3, r3, #4, #1
17031:Core/Src/bno055.c ****                     break;
 34675              		.loc 1 17031 30 view .LVU10008
 34676 007c 2B70     		strb	r3, [r5]
17032:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_Z_AXIS:
 34677              		.loc 1 17032 21 is_stmt 1 view .LVU10009
 34678 007e D9E7     		b	.L2509
 34679              	.LVL4382:
 34680              	.L2513:
17036:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_AXIS_REG,
 34681              		.loc 1 17036 21 view .LVU10010
17036:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_AXIS_REG,
 34682              		.loc 1 17036 40 is_stmt 0 view .LVU10011
 34683 0080 0A4B     		ldr	r3, .L2520
 34684 0082 1868     		ldr	r0, [r3]
 34685 0084 0469     		ldr	r4, [r0, #16]
17036:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_AXIS_REG,
 34686              		.loc 1 17036 32 view .LVU10012
 34687 0086 0123     		movs	r3, #1
 34688 0088 0DF10702 		add	r2, sp, #7
 34689 008c 1721     		movs	r1, #23
 34690 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34691 0090 A047     		blx	r4
 34692              	.LVL4383:
ARM GAS  /tmp/ccOloYeZ.s 			page 984


17040:Core/Src/bno055.c ****                     break;
 34693              		.loc 1 17040 21 is_stmt 1 view .LVU10013
17040:Core/Src/bno055.c ****                     break;
 34694              		.loc 1 17040 32 is_stmt 0 view .LVU10014
 34695 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34696 0096 C3F34013 		ubfx	r3, r3, #5, #1
17040:Core/Src/bno055.c ****                     break;
 34697              		.loc 1 17040 30 view .LVU10015
 34698 009a 2B70     		strb	r3, [r5]
17041:Core/Src/bno055.c ****                 default:
 34699              		.loc 1 17041 21 is_stmt 1 view .LVU10016
 34700 009c CAE7     		b	.L2509
 34701              	.LVL4384:
 34702              	.L2514:
17000:Core/Src/bno055.c ****     }
 34703              		.loc 1 17000 16 is_stmt 0 view .LVU10017
 34704 009e 6FF07E00 		mvn	r0, #126
 34705              	.LVL4385:
17000:Core/Src/bno055.c ****     }
 34706              		.loc 1 17000 16 view .LVU10018
 34707 00a2 C7E7     		b	.L2509
 34708              	.LVL4386:
 34709              	.L2515:
17049:Core/Src/bno055.c ****         }
 34710              		.loc 1 17049 22 view .LVU10019
 34711 00a4 4FF0FF30 		mov	r0, #-1
 34712 00a8 C4E7     		b	.L2509
 34713              	.L2521:
 34714 00aa 00BF     		.align	2
 34715              	.L2520:
 34716 00ac 00000000 		.word	p_bno055
 34717              		.cfi_endproc
 34718              	.LFE245:
 34720              		.section	.text.bno055_set_gyro_highrate_axis_enable,"ax",%progbits
 34721              		.align	1
 34722              		.global	bno055_set_gyro_highrate_axis_enable
 34723              		.syntax unified
 34724              		.thumb
 34725              		.thumb_func
 34727              	bno055_set_gyro_highrate_axis_enable:
 34728              	.LVL4387:
 34729              	.LFB246:
17055:Core/Src/bno055.c **** 
17056:Core/Src/bno055.c **** /*!
17057:Core/Src/bno055.c ****  *  @brief This API used to write the gyro highrate enable
17058:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 3 to 5
17059:Core/Src/bno055.c ****  *
17060:Core/Src/bno055.c ****  *  @param data_u8 : The value of gyro highrate enable
17061:Core/Src/bno055.c ****  *      data_u8     | result
17062:Core/Src/bno055.c ****  *  ----------------  |-------------
17063:Core/Src/bno055.c ****  *      0x01          | BNO055_BIT_ENABLE
17064:Core/Src/bno055.c ****  *      0x00          | BNO055_BIT_DISABLE
17065:Core/Src/bno055.c ****  *  @param channel_u8 : The value of gyro highrate axis selection
17066:Core/Src/bno055.c ****  *               channel_u8         | value
17067:Core/Src/bno055.c ****  *     ------------------------       | ----------
17068:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_X_AXIS    |   0
17069:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_Y_AXIS    |   1
ARM GAS  /tmp/ccOloYeZ.s 			page 985


17070:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_Z_AXIS    |   2
17071:Core/Src/bno055.c ****  *
17072:Core/Src/bno055.c ****  *  @return results of bus communication function
17073:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17074:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17075:Core/Src/bno055.c ****  *
17076:Core/Src/bno055.c ****  *
17077:Core/Src/bno055.c ****  */
17078:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_axis_enable(u8 channel_u8, u8 data_u8)
17079:Core/Src/bno055.c **** {
 34730              		.loc 1 17079 1 is_stmt 1 view -0
 34731              		.cfi_startproc
 34732              		@ args = 0, pretend = 0, frame = 8
 34733              		@ frame_needed = 0, uses_anonymous_args = 0
 34734              		.loc 1 17079 1 is_stmt 0 view .LVU10021
 34735 0000 70B5     		push	{r4, r5, r6, lr}
 34736              		.cfi_def_cfa_offset 16
 34737              		.cfi_offset 4, -16
 34738              		.cfi_offset 5, -12
 34739              		.cfi_offset 6, -8
 34740              		.cfi_offset 14, -4
 34741 0002 82B0     		sub	sp, sp, #8
 34742              		.cfi_def_cfa_offset 24
17080:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34743              		.loc 1 17080 5 is_stmt 1 view .LVU10022
 34744              	.LVL4388:
17081:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34745              		.loc 1 17081 5 view .LVU10023
 34746              		.loc 1 17081 8 is_stmt 0 view .LVU10024
 34747 0004 0023     		movs	r3, #0
 34748 0006 8DF80730 		strb	r3, [sp, #7]
17082:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34749              		.loc 1 17082 5 is_stmt 1 view .LVU10025
 34750              	.LVL4389:
17083:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 34751              		.loc 1 17083 5 view .LVU10026
 34752              		.loc 1 17083 8 is_stmt 0 view .LVU10027
 34753 000a 8DF80630 		strb	r3, [sp, #6]
17084:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 34754              		.loc 1 17084 5 is_stmt 1 view .LVU10028
 34755              	.LVL4390:
17085:Core/Src/bno055.c **** 
17086:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17087:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34756              		.loc 1 17087 5 view .LVU10029
 34757              		.loc 1 17087 18 is_stmt 0 view .LVU10030
 34758 000e 524B     		ldr	r3, .L2538
 34759 0010 1B68     		ldr	r3, [r3]
 34760              		.loc 1 17087 8 view .LVU10031
 34761 0012 002B     		cmp	r3, #0
 34762 0014 00F09D80 		beq	.L2528
 34763 0018 0446     		mov	r4, r0
 34764 001a 0D46     		mov	r5, r1
17088:Core/Src/bno055.c ****     {
17089:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17090:Core/Src/bno055.c ****     }
17091:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccOloYeZ.s 			page 986


17092:Core/Src/bno055.c ****     {
17093:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17094:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17095:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17096:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 34765              		.loc 1 17096 9 is_stmt 1 view .LVU10032
 34766              		.loc 1 17096 19 is_stmt 0 view .LVU10033
 34767 001c 0DF10600 		add	r0, sp, #6
 34768              	.LVL4391:
 34769              		.loc 1 17096 19 view .LVU10034
 34770 0020 FFF7FEFF 		bl	bno055_get_operation_mode
 34771              	.LVL4392:
17097:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 34772              		.loc 1 17097 9 is_stmt 1 view .LVU10035
 34773              		.loc 1 17097 12 is_stmt 0 view .LVU10036
 34774 0024 0646     		mov	r6, r0
 34775 0026 0028     		cmp	r0, #0
 34776 0028 40F08280 		bne	.L2529
17098:Core/Src/bno055.c ****         {
17099:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34777              		.loc 1 17099 13 is_stmt 1 view .LVU10037
 34778              		.loc 1 17099 32 is_stmt 0 view .LVU10038
 34779 002c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 34780              		.loc 1 17099 16 view .LVU10039
 34781 0030 1BB9     		cbnz	r3, .L2534
 34782              	.LVL4393:
 34783              	.L2525:
17100:Core/Src/bno055.c ****             {
17101:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17102:Core/Src/bno055.c ****             }
17103:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 34784              		.loc 1 17103 13 is_stmt 1 view .LVU10040
 34785              		.loc 1 17103 16 is_stmt 0 view .LVU10041
 34786 0032 46B1     		cbz	r6, .L2535
17104:Core/Src/bno055.c ****             {
17105:Core/Src/bno055.c ****                 /* Write page as one */
17106:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17107:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17108:Core/Src/bno055.c ****                 {
17109:Core/Src/bno055.c ****                     switch (channel_u8)
17110:Core/Src/bno055.c ****                     {
17111:Core/Src/bno055.c ****                         case BNO055_GYRO_HIGHRATE_X_AXIS:
17112:Core/Src/bno055.c **** 
17113:Core/Src/bno055.c ****                             /* Write the value of
17114:Core/Src/bno055.c ****                              * gyro highrate x enable*/
17115:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17116:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
17117:Core/Src/bno055.c ****                                                                       &data_u8r,
17118:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
17119:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
17120:Core/Src/bno055.c ****                             {
17121:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_AXI
17122:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17123:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
17124:Core/Src/bno055.c ****                                                                             &data_u8r,
17125:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
17126:Core/Src/bno055.c ****                             }
ARM GAS  /tmp/ccOloYeZ.s 			page 987


17127:Core/Src/bno055.c ****                             break;
17128:Core/Src/bno055.c ****                         case BNO055_GYRO_HIGHRATE_Y_AXIS:
17129:Core/Src/bno055.c **** 
17130:Core/Src/bno055.c ****                             /* Write the value of
17131:Core/Src/bno055.c ****                              * gyro highrate y enable*/
17132:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17133:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
17134:Core/Src/bno055.c ****                                                                       &data_u8r,
17135:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
17136:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
17137:Core/Src/bno055.c ****                             {
17138:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_AXI
17139:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17140:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
17141:Core/Src/bno055.c ****                                                                             &data_u8r,
17142:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
17143:Core/Src/bno055.c ****                             }
17144:Core/Src/bno055.c ****                             break;
17145:Core/Src/bno055.c ****                         case BNO055_GYRO_HIGHRATE_Z_AXIS:
17146:Core/Src/bno055.c **** 
17147:Core/Src/bno055.c ****                             /* Write the value of
17148:Core/Src/bno055.c ****                              * gyro highrate z enable*/
17149:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17150:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
17151:Core/Src/bno055.c ****                                                                       &data_u8r,
17152:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
17153:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
17154:Core/Src/bno055.c ****                             {
17155:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_AXI
17156:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17157:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
17158:Core/Src/bno055.c ****                                                                             &data_u8r,
17159:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
17160:Core/Src/bno055.c ****                             }
17161:Core/Src/bno055.c ****                             break;
17162:Core/Src/bno055.c ****                         default:
17163:Core/Src/bno055.c ****                             com_rslt = BNO055_OUT_OF_RANGE;
17164:Core/Src/bno055.c ****                             break;
17165:Core/Src/bno055.c ****                     }
17166:Core/Src/bno055.c ****                 }
17167:Core/Src/bno055.c ****                 else
17168:Core/Src/bno055.c ****                 {
17169:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17170:Core/Src/bno055.c ****                 }
17171:Core/Src/bno055.c ****             }
17172:Core/Src/bno055.c ****             else
17173:Core/Src/bno055.c ****             {
17174:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 34787              		.loc 1 17174 26 view .LVU10042
 34788 0034 4FF0FF34 		mov	r4, #-1
 34789 0038 7CE0     		b	.L2524
 34790              	.LVL4394:
 34791              	.L2534:
17101:Core/Src/bno055.c ****             }
 34792              		.loc 1 17101 17 is_stmt 1 view .LVU10043
17101:Core/Src/bno055.c ****             }
 34793              		.loc 1 17101 28 is_stmt 0 view .LVU10044
ARM GAS  /tmp/ccOloYeZ.s 			page 988


 34794 003a FFF7FEFF 		bl	bno055_set_operation_mode
 34795              	.LVL4395:
17101:Core/Src/bno055.c ****             }
 34796              		.loc 1 17101 25 view .LVU10045
 34797 003e 56FA80F6 		uxtab	r6, r6, r0
 34798 0042 76B2     		sxtb	r6, r6
 34799              	.LVL4396:
17101:Core/Src/bno055.c ****             }
 34800              		.loc 1 17101 25 view .LVU10046
 34801 0044 F5E7     		b	.L2525
 34802              	.L2535:
17106:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34803              		.loc 1 17106 17 is_stmt 1 view .LVU10047
17106:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34804              		.loc 1 17106 30 is_stmt 0 view .LVU10048
 34805 0046 0120     		movs	r0, #1
 34806 0048 FFF7FEFF 		bl	bno055_write_page_id
 34807              	.LVL4397:
17107:Core/Src/bno055.c ****                 {
 34808              		.loc 1 17107 17 is_stmt 1 view .LVU10049
17107:Core/Src/bno055.c ****                 {
 34809              		.loc 1 17107 20 is_stmt 0 view .LVU10050
 34810 004c 0028     		cmp	r0, #0
 34811 004e 77D1     		bne	.L2531
17109:Core/Src/bno055.c ****                     {
 34812              		.loc 1 17109 21 is_stmt 1 view .LVU10051
 34813 0050 012C     		cmp	r4, #1
 34814 0052 28D0     		beq	.L2526
 34815 0054 022C     		cmp	r4, #2
 34816 0056 49D0     		beq	.L2527
 34817 0058 14B1     		cbz	r4, .L2536
 34818 005a 6FF00104 		mvn	r4, #1
 34819 005e 69E0     		b	.L2524
 34820              	.L2536:
17115:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
 34821              		.loc 1 17115 29 view .LVU10052
17115:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
 34822              		.loc 1 17115 48 is_stmt 0 view .LVU10053
 34823 0060 3D4B     		ldr	r3, .L2538
 34824 0062 1868     		ldr	r0, [r3]
 34825              	.LVL4398:
17115:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
 34826              		.loc 1 17115 48 view .LVU10054
 34827 0064 0469     		ldr	r4, [r0, #16]
17115:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
 34828              		.loc 1 17115 40 view .LVU10055
 34829 0066 0123     		movs	r3, #1
 34830 0068 0DF10702 		add	r2, sp, #7
 34831 006c 1721     		movs	r1, #23
 34832 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34833 0070 A047     		blx	r4
 34834              	.LVL4399:
17119:Core/Src/bno055.c ****                             {
 34835              		.loc 1 17119 29 is_stmt 1 view .LVU10056
17119:Core/Src/bno055.c ****                             {
 34836              		.loc 1 17119 32 is_stmt 0 view .LVU10057
 34837 0072 0446     		mov	r4, r0
ARM GAS  /tmp/ccOloYeZ.s 			page 989


 34838 0074 0028     		cmp	r0, #0
 34839 0076 5DD1     		bne	.L2524
17121:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34840              		.loc 1 17121 33 is_stmt 1 view .LVU10058
17121:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34841              		.loc 1 17121 44 is_stmt 0 view .LVU10059
 34842 0078 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34843 007c EA00     		lsls	r2, r5, #3
 34844 007e 02F00802 		and	r2, r2, #8
 34845 0082 23F00803 		bic	r3, r3, #8
 34846 0086 1343     		orrs	r3, r3, r2
17121:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34847              		.loc 1 17121 42 view .LVU10060
 34848 0088 8DF80730 		strb	r3, [sp, #7]
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 34849              		.loc 1 17122 33 is_stmt 1 view .LVU10061
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 34850              		.loc 1 17122 53 is_stmt 0 view .LVU10062
 34851 008c 324B     		ldr	r3, .L2538
 34852 008e 1868     		ldr	r0, [r3]
 34853              	.LVL4400:
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 34854              		.loc 1 17122 53 view .LVU10063
 34855 0090 C568     		ldr	r5, [r0, #12]
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 34856              		.loc 1 17122 45 view .LVU10064
 34857 0092 0123     		movs	r3, #1
 34858 0094 0DF10702 		add	r2, sp, #7
 34859 0098 1721     		movs	r1, #23
 34860 009a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34861 009c A847     		blx	r5
 34862              	.LVL4401:
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 34863              		.loc 1 17122 42 view .LVU10065
 34864 009e 54FA80F3 		uxtab	r3, r4, r0
 34865 00a2 5CB2     		sxtb	r4, r3
 34866              	.LVL4402:
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 34867              		.loc 1 17122 42 view .LVU10066
 34868 00a4 46E0     		b	.L2524
 34869              	.LVL4403:
 34870              	.L2526:
17132:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
 34871              		.loc 1 17132 29 is_stmt 1 view .LVU10067
17132:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
 34872              		.loc 1 17132 48 is_stmt 0 view .LVU10068
 34873 00a6 2C4B     		ldr	r3, .L2538
 34874 00a8 1868     		ldr	r0, [r3]
 34875              	.LVL4404:
17132:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
 34876              		.loc 1 17132 48 view .LVU10069
 34877 00aa 0469     		ldr	r4, [r0, #16]
17132:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
 34878              		.loc 1 17132 40 view .LVU10070
 34879 00ac 0123     		movs	r3, #1
 34880 00ae 0DF10702 		add	r2, sp, #7
 34881 00b2 1721     		movs	r1, #23
ARM GAS  /tmp/ccOloYeZ.s 			page 990


 34882 00b4 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34883 00b6 A047     		blx	r4
 34884              	.LVL4405:
17136:Core/Src/bno055.c ****                             {
 34885              		.loc 1 17136 29 is_stmt 1 view .LVU10071
17136:Core/Src/bno055.c ****                             {
 34886              		.loc 1 17136 32 is_stmt 0 view .LVU10072
 34887 00b8 0446     		mov	r4, r0
 34888 00ba 0028     		cmp	r0, #0
 34889 00bc 3AD1     		bne	.L2524
17138:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34890              		.loc 1 17138 33 is_stmt 1 view .LVU10073
17138:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34891              		.loc 1 17138 44 is_stmt 0 view .LVU10074
 34892 00be 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34893 00c2 2A01     		lsls	r2, r5, #4
 34894 00c4 02F01002 		and	r2, r2, #16
 34895 00c8 23F01003 		bic	r3, r3, #16
 34896 00cc 1343     		orrs	r3, r3, r2
17138:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34897              		.loc 1 17138 42 view .LVU10075
 34898 00ce 8DF80730 		strb	r3, [sp, #7]
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 34899              		.loc 1 17139 33 is_stmt 1 view .LVU10076
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 34900              		.loc 1 17139 53 is_stmt 0 view .LVU10077
 34901 00d2 214B     		ldr	r3, .L2538
 34902 00d4 1868     		ldr	r0, [r3]
 34903              	.LVL4406:
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 34904              		.loc 1 17139 53 view .LVU10078
 34905 00d6 C568     		ldr	r5, [r0, #12]
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 34906              		.loc 1 17139 45 view .LVU10079
 34907 00d8 0123     		movs	r3, #1
 34908 00da 0DF10702 		add	r2, sp, #7
 34909 00de 1721     		movs	r1, #23
 34910 00e0 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34911 00e2 A847     		blx	r5
 34912              	.LVL4407:
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 34913              		.loc 1 17139 42 view .LVU10080
 34914 00e4 54FA80F3 		uxtab	r3, r4, r0
 34915 00e8 5CB2     		sxtb	r4, r3
 34916              	.LVL4408:
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 34917              		.loc 1 17139 42 view .LVU10081
 34918 00ea 23E0     		b	.L2524
 34919              	.LVL4409:
 34920              	.L2527:
17149:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
 34921              		.loc 1 17149 29 is_stmt 1 view .LVU10082
17149:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
 34922              		.loc 1 17149 48 is_stmt 0 view .LVU10083
 34923 00ec 1A4B     		ldr	r3, .L2538
 34924 00ee 1868     		ldr	r0, [r3]
 34925              	.LVL4410:
ARM GAS  /tmp/ccOloYeZ.s 			page 991


17149:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
 34926              		.loc 1 17149 48 view .LVU10084
 34927 00f0 0469     		ldr	r4, [r0, #16]
17149:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
 34928              		.loc 1 17149 40 view .LVU10085
 34929 00f2 0123     		movs	r3, #1
 34930 00f4 0DF10702 		add	r2, sp, #7
 34931 00f8 1721     		movs	r1, #23
 34932 00fa 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34933 00fc A047     		blx	r4
 34934              	.LVL4411:
17153:Core/Src/bno055.c ****                             {
 34935              		.loc 1 17153 29 is_stmt 1 view .LVU10086
17153:Core/Src/bno055.c ****                             {
 34936              		.loc 1 17153 32 is_stmt 0 view .LVU10087
 34937 00fe 0446     		mov	r4, r0
 34938 0100 C0B9     		cbnz	r0, .L2524
17155:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34939              		.loc 1 17155 33 is_stmt 1 view .LVU10088
17155:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34940              		.loc 1 17155 44 is_stmt 0 view .LVU10089
 34941 0102 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 34942 0106 6B01     		lsls	r3, r5, #5
 34943 0108 03F02003 		and	r3, r3, #32
 34944 010c 22F02002 		bic	r2, r2, #32
 34945 0110 1343     		orrs	r3, r3, r2
17155:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34946              		.loc 1 17155 42 view .LVU10090
 34947 0112 8DF80730 		strb	r3, [sp, #7]
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 34948              		.loc 1 17156 33 is_stmt 1 view .LVU10091
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 34949              		.loc 1 17156 53 is_stmt 0 view .LVU10092
 34950 0116 104B     		ldr	r3, .L2538
 34951 0118 1868     		ldr	r0, [r3]
 34952              	.LVL4412:
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 34953              		.loc 1 17156 53 view .LVU10093
 34954 011a C568     		ldr	r5, [r0, #12]
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 34955              		.loc 1 17156 45 view .LVU10094
 34956 011c 0123     		movs	r3, #1
 34957 011e 0DF10702 		add	r2, sp, #7
 34958 0122 1721     		movs	r1, #23
 34959 0124 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34960 0126 A847     		blx	r5
 34961              	.LVL4413:
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 34962              		.loc 1 17156 42 view .LVU10095
 34963 0128 54FA80F3 		uxtab	r3, r4, r0
 34964 012c 5CB2     		sxtb	r4, r3
 34965              	.LVL4414:
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 34966              		.loc 1 17156 42 view .LVU10096
 34967 012e 01E0     		b	.L2524
 34968              	.LVL4415:
 34969              	.L2529:
ARM GAS  /tmp/ccOloYeZ.s 			page 992


17175:Core/Src/bno055.c ****             }
17176:Core/Src/bno055.c ****         }
17177:Core/Src/bno055.c ****         else
17178:Core/Src/bno055.c ****         {
17179:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 34970              		.loc 1 17179 22 view .LVU10097
 34971 0130 4FF0FF34 		mov	r4, #-1
 34972              	.LVL4416:
 34973              	.L2524:
17180:Core/Src/bno055.c ****         }
17181:Core/Src/bno055.c ****     }
17182:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34974              		.loc 1 17182 5 is_stmt 1 view .LVU10098
 34975              		.loc 1 17182 24 is_stmt 0 view .LVU10099
 34976 0134 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 34977              		.loc 1 17182 8 view .LVU10100
 34978 0138 28B9     		cbnz	r0, .L2537
 34979              	.LVL4417:
 34980              	.L2523:
17183:Core/Src/bno055.c ****     {
17184:Core/Src/bno055.c ****         /* set the operation mode of
17185:Core/Src/bno055.c ****          * previous operation mode*/
17186:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17187:Core/Src/bno055.c ****     }
17188:Core/Src/bno055.c **** 
17189:Core/Src/bno055.c ****     return com_rslt;
17190:Core/Src/bno055.c **** }
 34981              		.loc 1 17190 1 view .LVU10101
 34982 013a 2046     		mov	r0, r4
 34983 013c 02B0     		add	sp, sp, #8
 34984              		.cfi_remember_state
 34985              		.cfi_def_cfa_offset 16
 34986              		@ sp needed
 34987 013e 70BD     		pop	{r4, r5, r6, pc}
 34988              	.LVL4418:
 34989              	.L2531:
 34990              		.cfi_restore_state
17169:Core/Src/bno055.c ****                 }
 34991              		.loc 1 17169 30 view .LVU10102
 34992 0140 4FF0FF34 		mov	r4, #-1
 34993 0144 F6E7     		b	.L2524
 34994              	.LVL4419:
 34995              	.L2537:
17186:Core/Src/bno055.c ****     }
 34996              		.loc 1 17186 9 is_stmt 1 view .LVU10103
17186:Core/Src/bno055.c ****     }
 34997              		.loc 1 17186 21 is_stmt 0 view .LVU10104
 34998 0146 FFF7FEFF 		bl	bno055_set_operation_mode
 34999              	.LVL4420:
17186:Core/Src/bno055.c ****     }
 35000              		.loc 1 17186 18 view .LVU10105
 35001 014a 54FA80F0 		uxtab	r0, r4, r0
 35002 014e 44B2     		sxtb	r4, r0
 35003              	.LVL4421:
17186:Core/Src/bno055.c ****     }
 35004              		.loc 1 17186 18 view .LVU10106
 35005 0150 F3E7     		b	.L2523
ARM GAS  /tmp/ccOloYeZ.s 			page 993


 35006              	.LVL4422:
 35007              	.L2528:
17089:Core/Src/bno055.c ****     }
 35008              		.loc 1 17089 16 view .LVU10107
 35009 0152 6FF07E04 		mvn	r4, #126
 35010 0156 F0E7     		b	.L2523
 35011              	.L2539:
 35012              		.align	2
 35013              	.L2538:
 35014 0158 00000000 		.word	p_bno055
 35015              		.cfi_endproc
 35016              	.LFE246:
 35018              		.section	.text.bno055_get_gyro_any_motion_filter,"ax",%progbits
 35019              		.align	1
 35020              		.global	bno055_get_gyro_any_motion_filter
 35021              		.syntax unified
 35022              		.thumb
 35023              		.thumb_func
 35025              	bno055_get_gyro_any_motion_filter:
 35026              	.LVL4423:
 35027              	.LFB247:
17191:Core/Src/bno055.c **** 
17192:Core/Src/bno055.c **** /*!
17193:Core/Src/bno055.c ****  *  @brief This API used to read gyro anymotion filter
17194:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 6
17195:Core/Src/bno055.c ****  *
17196:Core/Src/bno055.c ****  *  @param gyro_any_motion_filter_u8 : The value of gyro anymotion filter
17197:Core/Src/bno055.c ****  *   gyro_any_motion_filter_u8  | result
17198:Core/Src/bno055.c ****  *  ---------------------------   |------------
17199:Core/Src/bno055.c ****  *      0x00                      | BNO055_GYRO_FILTERED_CONFIG
17200:Core/Src/bno055.c ****  *      0x01                      | BNO055_GYRO_UNFILTERED_CONFIG
17201:Core/Src/bno055.c ****  *
17202:Core/Src/bno055.c ****  *  @return results of bus communication function
17203:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17204:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17205:Core/Src/bno055.c ****  *
17206:Core/Src/bno055.c ****  */
17207:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_filter(u8 *gyro_any_motion_filter_u8)
17208:Core/Src/bno055.c **** {
 35028              		.loc 1 17208 1 is_stmt 1 view -0
 35029              		.cfi_startproc
 35030              		@ args = 0, pretend = 0, frame = 8
 35031              		@ frame_needed = 0, uses_anonymous_args = 0
 35032              		.loc 1 17208 1 is_stmt 0 view .LVU10109
 35033 0000 30B5     		push	{r4, r5, lr}
 35034              		.cfi_def_cfa_offset 12
 35035              		.cfi_offset 4, -12
 35036              		.cfi_offset 5, -8
 35037              		.cfi_offset 14, -4
 35038 0002 83B0     		sub	sp, sp, #12
 35039              		.cfi_def_cfa_offset 24
17209:Core/Src/bno055.c ****     /* Variable used to return value of
17210:Core/Src/bno055.c ****      * communication routine*/
17211:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35040              		.loc 1 17211 5 is_stmt 1 view .LVU10110
 35041              	.LVL4424:
17212:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccOloYeZ.s 			page 994


 35042              		.loc 1 17212 5 view .LVU10111
 35043              		.loc 1 17212 8 is_stmt 0 view .LVU10112
 35044 0004 0023     		movs	r3, #0
 35045 0006 8DF80730 		strb	r3, [sp, #7]
17213:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35046              		.loc 1 17213 5 is_stmt 1 view .LVU10113
 35047              	.LVL4425:
17214:Core/Src/bno055.c **** 
17215:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17216:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35048              		.loc 1 17216 5 view .LVU10114
 35049              		.loc 1 17216 18 is_stmt 0 view .LVU10115
 35050 000a 144B     		ldr	r3, .L2548
 35051 000c 1B68     		ldr	r3, [r3]
 35052              		.loc 1 17216 8 view .LVU10116
 35053 000e F3B1     		cbz	r3, .L2544
 35054 0010 0446     		mov	r4, r0
17217:Core/Src/bno055.c ****     {
17218:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17219:Core/Src/bno055.c ****     }
17220:Core/Src/bno055.c ****     else
17221:Core/Src/bno055.c ****     {
17222:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion filter is
17223:Core/Src/bno055.c ****          * available in the page one*/
17224:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 35055              		.loc 1 17224 9 is_stmt 1 view .LVU10117
 35056              		.loc 1 17224 21 is_stmt 0 view .LVU10118
 35057 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35058              		.loc 1 17224 12 view .LVU10119
 35059 0014 012B     		cmp	r3, #1
 35060 0016 14D1     		bne	.L2547
 35061              	.LVL4426:
 35062              	.L2542:
17225:Core/Src/bno055.c ****         {
17226:Core/Src/bno055.c ****             /* Write page as one */
17227:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17228:Core/Src/bno055.c ****         }
17229:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 35063              		.loc 1 17229 53 discriminator 1 view .LVU10120
 35064 0018 104B     		ldr	r3, .L2548
 35065 001a 1B68     		ldr	r3, [r3]
 35066 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35067              		.loc 1 17229 41 discriminator 1 view .LVU10121
 35068 001e 012B     		cmp	r3, #1
 35069 0020 18D1     		bne	.L2545
 35070              	.L2543:
17230:Core/Src/bno055.c ****         {
17231:Core/Src/bno055.c ****             /* Read the value of gyro anymotion filter*/
17232:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 35071              		.loc 1 17232 13 is_stmt 1 view .LVU10122
 35072              		.loc 1 17232 32 is_stmt 0 view .LVU10123
 35073 0022 0E4B     		ldr	r3, .L2548
 35074 0024 1868     		ldr	r0, [r3]
 35075 0026 0569     		ldr	r5, [r0, #16]
 35076              		.loc 1 17232 24 view .LVU10124
 35077 0028 0123     		movs	r3, #1
 35078 002a 0DF10702 		add	r2, sp, #7
ARM GAS  /tmp/ccOloYeZ.s 			page 995


 35079 002e 1721     		movs	r1, #23
 35080 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35081 0032 A847     		blx	r5
 35082              	.LVL4427:
17233:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_FILTER_REG,
17234:Core/Src/bno055.c ****                                                       &data_u8r,
17235:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17236:Core/Src/bno055.c ****             *gyro_any_motion_filter_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_FILTE
 35083              		.loc 1 17236 13 is_stmt 1 view .LVU10125
 35084              		.loc 1 17236 42 is_stmt 0 view .LVU10126
 35085 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35086 0038 C3F38013 		ubfx	r3, r3, #6, #1
 35087              		.loc 1 17236 40 view .LVU10127
 35088 003c 2370     		strb	r3, [r4]
 35089              	.LVL4428:
 35090              	.L2541:
17237:Core/Src/bno055.c ****         }
17238:Core/Src/bno055.c ****         else
17239:Core/Src/bno055.c ****         {
17240:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17241:Core/Src/bno055.c ****         }
17242:Core/Src/bno055.c ****     }
17243:Core/Src/bno055.c **** 
17244:Core/Src/bno055.c ****     return com_rslt;
17245:Core/Src/bno055.c **** }
 35091              		.loc 1 17245 1 view .LVU10128
 35092 003e 03B0     		add	sp, sp, #12
 35093              		.cfi_remember_state
 35094              		.cfi_def_cfa_offset 12
 35095              		@ sp needed
 35096 0040 30BD     		pop	{r4, r5, pc}
 35097              	.LVL4429:
 35098              	.L2547:
 35099              		.cfi_restore_state
17227:Core/Src/bno055.c ****         }
 35100              		.loc 1 17227 13 is_stmt 1 view .LVU10129
17227:Core/Src/bno055.c ****         }
 35101              		.loc 1 17227 23 is_stmt 0 view .LVU10130
 35102 0042 0120     		movs	r0, #1
 35103              	.LVL4430:
17227:Core/Src/bno055.c ****         }
 35104              		.loc 1 17227 23 view .LVU10131
 35105 0044 FFF7FEFF 		bl	bno055_write_page_id
 35106              	.LVL4431:
17229:Core/Src/bno055.c ****         {
 35107              		.loc 1 17229 9 is_stmt 1 view .LVU10132
17229:Core/Src/bno055.c ****         {
 35108              		.loc 1 17229 12 is_stmt 0 view .LVU10133
 35109 0048 0028     		cmp	r0, #0
 35110 004a EAD0     		beq	.L2543
 35111 004c E4E7     		b	.L2542
 35112              	.LVL4432:
 35113              	.L2544:
17218:Core/Src/bno055.c ****     }
 35114              		.loc 1 17218 16 view .LVU10134
 35115 004e 6FF07E00 		mvn	r0, #126
 35116              	.LVL4433:
ARM GAS  /tmp/ccOloYeZ.s 			page 996


17218:Core/Src/bno055.c ****     }
 35117              		.loc 1 17218 16 view .LVU10135
 35118 0052 F4E7     		b	.L2541
 35119              	.LVL4434:
 35120              	.L2545:
17240:Core/Src/bno055.c ****         }
 35121              		.loc 1 17240 22 view .LVU10136
 35122 0054 4FF0FF30 		mov	r0, #-1
 35123 0058 F1E7     		b	.L2541
 35124              	.L2549:
 35125 005a 00BF     		.align	2
 35126              	.L2548:
 35127 005c 00000000 		.word	p_bno055
 35128              		.cfi_endproc
 35129              	.LFE247:
 35131              		.section	.text.bno055_set_gyro_any_motion_filter,"ax",%progbits
 35132              		.align	1
 35133              		.global	bno055_set_gyro_any_motion_filter
 35134              		.syntax unified
 35135              		.thumb
 35136              		.thumb_func
 35138              	bno055_set_gyro_any_motion_filter:
 35139              	.LVL4435:
 35140              	.LFB248:
17246:Core/Src/bno055.c **** 
17247:Core/Src/bno055.c **** /*!
17248:Core/Src/bno055.c ****  *  @brief This API used to write gyro anymotion filter
17249:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 6
17250:Core/Src/bno055.c ****  *
17251:Core/Src/bno055.c ****  *  @param gyro_any_motion_filter_u8 : The value of gyro anymotion filter
17252:Core/Src/bno055.c ****  *   gyro_any_motion_filter_u8  | result
17253:Core/Src/bno055.c ****  *  ---------------------------   |------------
17254:Core/Src/bno055.c ****  *      0x00                      | BNO055_GYRO_FILTERED_CONFIG
17255:Core/Src/bno055.c ****  *      0x01                      | BNO055_GYRO_UNFILTERED_CONFIG
17256:Core/Src/bno055.c ****  *
17257:Core/Src/bno055.c ****  *  @return results of bus communication function
17258:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17259:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17260:Core/Src/bno055.c ****  *
17261:Core/Src/bno055.c ****  */
17262:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_filter(u8 gyro_any_motion_filter_u8)
17263:Core/Src/bno055.c **** {
 35141              		.loc 1 17263 1 is_stmt 1 view -0
 35142              		.cfi_startproc
 35143              		@ args = 0, pretend = 0, frame = 8
 35144              		@ frame_needed = 0, uses_anonymous_args = 0
 35145              		.loc 1 17263 1 is_stmt 0 view .LVU10138
 35146 0000 30B5     		push	{r4, r5, lr}
 35147              		.cfi_def_cfa_offset 12
 35148              		.cfi_offset 4, -12
 35149              		.cfi_offset 5, -8
 35150              		.cfi_offset 14, -4
 35151 0002 83B0     		sub	sp, sp, #12
 35152              		.cfi_def_cfa_offset 24
17264:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35153              		.loc 1 17264 5 is_stmt 1 view .LVU10139
 35154              	.LVL4436:
ARM GAS  /tmp/ccOloYeZ.s 			page 997


17265:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 35155              		.loc 1 17265 5 view .LVU10140
 35156              		.loc 1 17265 8 is_stmt 0 view .LVU10141
 35157 0004 0023     		movs	r3, #0
 35158 0006 8DF80730 		strb	r3, [sp, #7]
17266:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35159              		.loc 1 17266 5 is_stmt 1 view .LVU10142
 35160              	.LVL4437:
17267:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 35161              		.loc 1 17267 5 view .LVU10143
 35162              		.loc 1 17267 8 is_stmt 0 view .LVU10144
 35163 000a 8DF80630 		strb	r3, [sp, #6]
17268:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 35164              		.loc 1 17268 5 is_stmt 1 view .LVU10145
 35165              	.LVL4438:
17269:Core/Src/bno055.c **** 
17270:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17271:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35166              		.loc 1 17271 5 view .LVU10146
 35167              		.loc 1 17271 18 is_stmt 0 view .LVU10147
 35168 000e 294B     		ldr	r3, .L2562
 35169 0010 1B68     		ldr	r3, [r3]
 35170              		.loc 1 17271 8 view .LVU10148
 35171 0012 002B     		cmp	r3, #0
 35172 0014 4AD0     		beq	.L2554
 35173 0016 0546     		mov	r5, r0
17272:Core/Src/bno055.c ****     {
17273:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17274:Core/Src/bno055.c ****     }
17275:Core/Src/bno055.c ****     else
17276:Core/Src/bno055.c ****     {
17277:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17278:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17279:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17280:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 35174              		.loc 1 17280 9 is_stmt 1 view .LVU10149
 35175              		.loc 1 17280 19 is_stmt 0 view .LVU10150
 35176 0018 0DF10600 		add	r0, sp, #6
 35177              	.LVL4439:
 35178              		.loc 1 17280 19 view .LVU10151
 35179 001c FFF7FEFF 		bl	bno055_get_operation_mode
 35180              	.LVL4440:
17281:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 35181              		.loc 1 17281 9 is_stmt 1 view .LVU10152
 35182              		.loc 1 17281 12 is_stmt 0 view .LVU10153
 35183 0020 0446     		mov	r4, r0
 35184 0022 90BB     		cbnz	r0, .L2555
17282:Core/Src/bno055.c ****         {
17283:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35185              		.loc 1 17283 13 is_stmt 1 view .LVU10154
 35186              		.loc 1 17283 32 is_stmt 0 view .LVU10155
 35187 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 35188              		.loc 1 17283 16 view .LVU10156
 35189 0028 1BB9     		cbnz	r3, .L2559
 35190              	.LVL4441:
 35191              	.L2553:
17284:Core/Src/bno055.c ****             {
ARM GAS  /tmp/ccOloYeZ.s 			page 998


17285:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17286:Core/Src/bno055.c ****             }
17287:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 35192              		.loc 1 17287 13 is_stmt 1 view .LVU10157
 35193              		.loc 1 17287 16 is_stmt 0 view .LVU10158
 35194 002a 44B1     		cbz	r4, .L2560
17288:Core/Src/bno055.c ****             {
17289:Core/Src/bno055.c ****                 /* Write page as one */
17290:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17291:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17292:Core/Src/bno055.c ****                 {
17293:Core/Src/bno055.c ****                     /* Write the value of
17294:Core/Src/bno055.c ****                      * gyro anymotion filter*/
17295:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17296:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
17297:Core/Src/bno055.c ****                                                               &data_u8r,
17298:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17299:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17300:Core/Src/bno055.c ****                     {
17301:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
17302:Core/Src/bno055.c ****                                                        BNO055_GYRO_ANY_MOTION_FILTER,
17303:Core/Src/bno055.c ****                                                        gyro_any_motion_filter_u8);
17304:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17305:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
17306:Core/Src/bno055.c ****                                                                     &data_u8r,
17307:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
17308:Core/Src/bno055.c ****                     }
17309:Core/Src/bno055.c ****                 }
17310:Core/Src/bno055.c ****                 else
17311:Core/Src/bno055.c ****                 {
17312:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17313:Core/Src/bno055.c ****                 }
17314:Core/Src/bno055.c ****             }
17315:Core/Src/bno055.c ****             else
17316:Core/Src/bno055.c ****             {
17317:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 35195              		.loc 1 17317 26 view .LVU10159
 35196 002c 4FF0FF34 		mov	r4, #-1
 35197              	.LVL4442:
 35198              		.loc 1 17317 26 view .LVU10160
 35199 0030 2DE0     		b	.L2552
 35200              	.LVL4443:
 35201              	.L2559:
17285:Core/Src/bno055.c ****             }
 35202              		.loc 1 17285 17 is_stmt 1 view .LVU10161
17285:Core/Src/bno055.c ****             }
 35203              		.loc 1 17285 28 is_stmt 0 view .LVU10162
 35204 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 35205              	.LVL4444:
17285:Core/Src/bno055.c ****             }
 35206              		.loc 1 17285 25 view .LVU10163
 35207 0036 54FA80F4 		uxtab	r4, r4, r0
 35208 003a 64B2     		sxtb	r4, r4
 35209              	.LVL4445:
17285:Core/Src/bno055.c ****             }
 35210              		.loc 1 17285 25 view .LVU10164
 35211 003c F5E7     		b	.L2553
ARM GAS  /tmp/ccOloYeZ.s 			page 999


 35212              	.L2560:
17290:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35213              		.loc 1 17290 17 is_stmt 1 view .LVU10165
17290:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35214              		.loc 1 17290 30 is_stmt 0 view .LVU10166
 35215 003e 0120     		movs	r0, #1
 35216 0040 FFF7FEFF 		bl	bno055_write_page_id
 35217              	.LVL4446:
17291:Core/Src/bno055.c ****                 {
 35218              		.loc 1 17291 17 is_stmt 1 view .LVU10167
17291:Core/Src/bno055.c ****                 {
 35219              		.loc 1 17291 20 is_stmt 0 view .LVU10168
 35220 0044 48BB     		cbnz	r0, .L2557
17295:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
 35221              		.loc 1 17295 21 is_stmt 1 view .LVU10169
17295:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
 35222              		.loc 1 17295 40 is_stmt 0 view .LVU10170
 35223 0046 1B4B     		ldr	r3, .L2562
 35224 0048 1868     		ldr	r0, [r3]
 35225              	.LVL4447:
17295:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
 35226              		.loc 1 17295 40 view .LVU10171
 35227 004a 0469     		ldr	r4, [r0, #16]
 35228              	.LVL4448:
17295:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
 35229              		.loc 1 17295 32 view .LVU10172
 35230 004c 0123     		movs	r3, #1
 35231 004e 0DF10702 		add	r2, sp, #7
 35232 0052 1721     		movs	r1, #23
 35233 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35234 0056 A047     		blx	r4
 35235              	.LVL4449:
17299:Core/Src/bno055.c ****                     {
 35236              		.loc 1 17299 21 is_stmt 1 view .LVU10173
17299:Core/Src/bno055.c ****                     {
 35237              		.loc 1 17299 24 is_stmt 0 view .LVU10174
 35238 0058 0446     		mov	r4, r0
 35239 005a C0B9     		cbnz	r0, .L2552
17301:Core/Src/bno055.c ****                                                        BNO055_GYRO_ANY_MOTION_FILTER,
 35240              		.loc 1 17301 25 is_stmt 1 view .LVU10175
17301:Core/Src/bno055.c ****                                                        BNO055_GYRO_ANY_MOTION_FILTER,
 35241              		.loc 1 17301 36 is_stmt 0 view .LVU10176
 35242 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35243 0060 A801     		lsls	r0, r5, #6
 35244              	.LVL4450:
17301:Core/Src/bno055.c ****                                                        BNO055_GYRO_ANY_MOTION_FILTER,
 35245              		.loc 1 17301 36 view .LVU10177
 35246 0062 00F04000 		and	r0, r0, #64
 35247 0066 23F04003 		bic	r3, r3, #64
 35248 006a 0343     		orrs	r3, r3, r0
17301:Core/Src/bno055.c ****                                                        BNO055_GYRO_ANY_MOTION_FILTER,
 35249              		.loc 1 17301 34 view .LVU10178
 35250 006c 8DF80730 		strb	r3, [sp, #7]
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 35251              		.loc 1 17304 25 is_stmt 1 view .LVU10179
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 35252              		.loc 1 17304 45 is_stmt 0 view .LVU10180
ARM GAS  /tmp/ccOloYeZ.s 			page 1000


 35253 0070 104B     		ldr	r3, .L2562
 35254 0072 1868     		ldr	r0, [r3]
 35255 0074 C568     		ldr	r5, [r0, #12]
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 35256              		.loc 1 17304 37 view .LVU10181
 35257 0076 0123     		movs	r3, #1
 35258 0078 0DF10702 		add	r2, sp, #7
 35259 007c 1721     		movs	r1, #23
 35260 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35261 0080 A847     		blx	r5
 35262              	.LVL4451:
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 35263              		.loc 1 17304 34 view .LVU10182
 35264 0082 54FA80F0 		uxtab	r0, r4, r0
 35265 0086 44B2     		sxtb	r4, r0
 35266              	.LVL4452:
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 35267              		.loc 1 17304 34 view .LVU10183
 35268 0088 01E0     		b	.L2552
 35269              	.LVL4453:
 35270              	.L2555:
17318:Core/Src/bno055.c ****             }
17319:Core/Src/bno055.c ****         }
17320:Core/Src/bno055.c ****         else
17321:Core/Src/bno055.c ****         {
17322:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 35271              		.loc 1 17322 22 view .LVU10184
 35272 008a 4FF0FF34 		mov	r4, #-1
 35273              	.LVL4454:
 35274              	.L2552:
17323:Core/Src/bno055.c ****         }
17324:Core/Src/bno055.c ****     }
17325:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35275              		.loc 1 17325 5 is_stmt 1 view .LVU10185
 35276              		.loc 1 17325 24 is_stmt 0 view .LVU10186
 35277 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 35278              		.loc 1 17325 8 view .LVU10187
 35279 0092 28B9     		cbnz	r0, .L2561
 35280              	.LVL4455:
 35281              	.L2551:
17326:Core/Src/bno055.c ****     {
17327:Core/Src/bno055.c ****         /* set the operation mode of
17328:Core/Src/bno055.c ****          * previous operation mode*/
17329:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17330:Core/Src/bno055.c ****     }
17331:Core/Src/bno055.c **** 
17332:Core/Src/bno055.c ****     return com_rslt;
17333:Core/Src/bno055.c **** }
 35282              		.loc 1 17333 1 view .LVU10188
 35283 0094 2046     		mov	r0, r4
 35284 0096 03B0     		add	sp, sp, #12
 35285              		.cfi_remember_state
 35286              		.cfi_def_cfa_offset 12
 35287              		@ sp needed
 35288 0098 30BD     		pop	{r4, r5, pc}
 35289              	.LVL4456:
 35290              	.L2557:
ARM GAS  /tmp/ccOloYeZ.s 			page 1001


 35291              		.cfi_restore_state
17312:Core/Src/bno055.c ****                 }
 35292              		.loc 1 17312 30 view .LVU10189
 35293 009a 4FF0FF34 		mov	r4, #-1
 35294              	.LVL4457:
17312:Core/Src/bno055.c ****                 }
 35295              		.loc 1 17312 30 view .LVU10190
 35296 009e F6E7     		b	.L2552
 35297              	.LVL4458:
 35298              	.L2561:
17329:Core/Src/bno055.c ****     }
 35299              		.loc 1 17329 9 is_stmt 1 view .LVU10191
17329:Core/Src/bno055.c ****     }
 35300              		.loc 1 17329 21 is_stmt 0 view .LVU10192
 35301 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 35302              	.LVL4459:
17329:Core/Src/bno055.c ****     }
 35303              		.loc 1 17329 18 view .LVU10193
 35304 00a4 54FA80F0 		uxtab	r0, r4, r0
 35305 00a8 44B2     		sxtb	r4, r0
 35306              	.LVL4460:
17329:Core/Src/bno055.c ****     }
 35307              		.loc 1 17329 18 view .LVU10194
 35308 00aa F3E7     		b	.L2551
 35309              	.LVL4461:
 35310              	.L2554:
17273:Core/Src/bno055.c ****     }
 35311              		.loc 1 17273 16 view .LVU10195
 35312 00ac 6FF07E04 		mvn	r4, #126
 35313 00b0 F0E7     		b	.L2551
 35314              	.L2563:
 35315 00b2 00BF     		.align	2
 35316              	.L2562:
 35317 00b4 00000000 		.word	p_bno055
 35318              		.cfi_endproc
 35319              	.LFE248:
 35321              		.section	.text.bno055_get_gyro_highrate_filter,"ax",%progbits
 35322              		.align	1
 35323              		.global	bno055_get_gyro_highrate_filter
 35324              		.syntax unified
 35325              		.thumb
 35326              		.thumb_func
 35328              	bno055_get_gyro_highrate_filter:
 35329              	.LVL4462:
 35330              	.LFB249:
17334:Core/Src/bno055.c **** 
17335:Core/Src/bno055.c **** /*!
17336:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate filter
17337:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 7
17338:Core/Src/bno055.c ****  *
17339:Core/Src/bno055.c ****  *  @param gyro_highrate_filter_u8 : The value of gyro highrate filter
17340:Core/Src/bno055.c ****  *   gyro_highrate_filter_u8  | result
17341:Core/Src/bno055.c ****  *  --------------------------- |------------
17342:Core/Src/bno055.c ****  *         0x00                 | BNO055_GYRO_FILTERED_CONFIG
17343:Core/Src/bno055.c ****  *         0x01                 | BNO055_GYRO_UNFILTERED_CONFIG
17344:Core/Src/bno055.c ****  *
17345:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/ccOloYeZ.s 			page 1002


17346:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17347:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17348:Core/Src/bno055.c ****  *
17349:Core/Src/bno055.c ****  */
17350:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_filter(u8 *gyro_highrate_filter_u8)
17351:Core/Src/bno055.c **** {
 35331              		.loc 1 17351 1 is_stmt 1 view -0
 35332              		.cfi_startproc
 35333              		@ args = 0, pretend = 0, frame = 8
 35334              		@ frame_needed = 0, uses_anonymous_args = 0
 35335              		.loc 1 17351 1 is_stmt 0 view .LVU10197
 35336 0000 30B5     		push	{r4, r5, lr}
 35337              		.cfi_def_cfa_offset 12
 35338              		.cfi_offset 4, -12
 35339              		.cfi_offset 5, -8
 35340              		.cfi_offset 14, -4
 35341 0002 83B0     		sub	sp, sp, #12
 35342              		.cfi_def_cfa_offset 24
17352:Core/Src/bno055.c ****     /* Variable used to return value of
17353:Core/Src/bno055.c ****      * communication routine*/
17354:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35343              		.loc 1 17354 5 is_stmt 1 view .LVU10198
 35344              	.LVL4463:
17355:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 35345              		.loc 1 17355 5 view .LVU10199
 35346              		.loc 1 17355 8 is_stmt 0 view .LVU10200
 35347 0004 0023     		movs	r3, #0
 35348 0006 8DF80730 		strb	r3, [sp, #7]
17356:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35349              		.loc 1 17356 5 is_stmt 1 view .LVU10201
 35350              	.LVL4464:
17357:Core/Src/bno055.c **** 
17358:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17359:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35351              		.loc 1 17359 5 view .LVU10202
 35352              		.loc 1 17359 18 is_stmt 0 view .LVU10203
 35353 000a 134B     		ldr	r3, .L2572
 35354 000c 1B68     		ldr	r3, [r3]
 35355              		.loc 1 17359 8 view .LVU10204
 35356 000e EBB1     		cbz	r3, .L2568
 35357 0010 0446     		mov	r4, r0
17360:Core/Src/bno055.c ****     {
17361:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17362:Core/Src/bno055.c ****     }
17363:Core/Src/bno055.c ****     else
17364:Core/Src/bno055.c ****     {
17365:Core/Src/bno055.c ****         /*condition check for page, gyro highrate filter is
17366:Core/Src/bno055.c ****          * available in the page one*/
17367:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 35358              		.loc 1 17367 9 is_stmt 1 view .LVU10205
 35359              		.loc 1 17367 21 is_stmt 0 view .LVU10206
 35360 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35361              		.loc 1 17367 12 view .LVU10207
 35362 0014 012B     		cmp	r3, #1
 35363 0016 13D1     		bne	.L2571
 35364              	.LVL4465:
 35365              	.L2566:
ARM GAS  /tmp/ccOloYeZ.s 			page 1003


17368:Core/Src/bno055.c ****         {
17369:Core/Src/bno055.c ****             /* Write page as one */
17370:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17371:Core/Src/bno055.c ****         }
17372:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 35366              		.loc 1 17372 53 discriminator 1 view .LVU10208
 35367 0018 0F4B     		ldr	r3, .L2572
 35368 001a 1B68     		ldr	r3, [r3]
 35369 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35370              		.loc 1 17372 41 discriminator 1 view .LVU10209
 35371 001e 012B     		cmp	r3, #1
 35372 0020 17D1     		bne	.L2569
 35373              	.L2567:
17373:Core/Src/bno055.c ****         {
17374:Core/Src/bno055.c ****             /* Read the value of gyro highrate filter */
17375:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 35374              		.loc 1 17375 13 is_stmt 1 view .LVU10210
 35375              		.loc 1 17375 32 is_stmt 0 view .LVU10211
 35376 0022 0D4B     		ldr	r3, .L2572
 35377 0024 1868     		ldr	r0, [r3]
 35378 0026 0569     		ldr	r5, [r0, #16]
 35379              		.loc 1 17375 24 view .LVU10212
 35380 0028 0123     		movs	r3, #1
 35381 002a 0DF10702 		add	r2, sp, #7
 35382 002e 1721     		movs	r1, #23
 35383 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35384 0032 A847     		blx	r5
 35385              	.LVL4466:
17376:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_FILTER_REG,
17377:Core/Src/bno055.c ****                                                       &data_u8r,
17378:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17379:Core/Src/bno055.c ****             *gyro_highrate_filter_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_FILTER);
 35386              		.loc 1 17379 13 is_stmt 1 view .LVU10213
 35387              		.loc 1 17379 40 is_stmt 0 view .LVU10214
 35388 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35389 0038 DB09     		lsrs	r3, r3, #7
 35390              		.loc 1 17379 38 view .LVU10215
 35391 003a 2370     		strb	r3, [r4]
 35392              	.LVL4467:
 35393              	.L2565:
17380:Core/Src/bno055.c ****         }
17381:Core/Src/bno055.c ****         else
17382:Core/Src/bno055.c ****         {
17383:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17384:Core/Src/bno055.c ****         }
17385:Core/Src/bno055.c ****     }
17386:Core/Src/bno055.c **** 
17387:Core/Src/bno055.c ****     return com_rslt;
17388:Core/Src/bno055.c **** }
 35394              		.loc 1 17388 1 view .LVU10216
 35395 003c 03B0     		add	sp, sp, #12
 35396              		.cfi_remember_state
 35397              		.cfi_def_cfa_offset 12
 35398              		@ sp needed
 35399 003e 30BD     		pop	{r4, r5, pc}
 35400              	.LVL4468:
 35401              	.L2571:
ARM GAS  /tmp/ccOloYeZ.s 			page 1004


 35402              		.cfi_restore_state
17370:Core/Src/bno055.c ****         }
 35403              		.loc 1 17370 13 is_stmt 1 view .LVU10217
17370:Core/Src/bno055.c ****         }
 35404              		.loc 1 17370 23 is_stmt 0 view .LVU10218
 35405 0040 0120     		movs	r0, #1
 35406              	.LVL4469:
17370:Core/Src/bno055.c ****         }
 35407              		.loc 1 17370 23 view .LVU10219
 35408 0042 FFF7FEFF 		bl	bno055_write_page_id
 35409              	.LVL4470:
17372:Core/Src/bno055.c ****         {
 35410              		.loc 1 17372 9 is_stmt 1 view .LVU10220
17372:Core/Src/bno055.c ****         {
 35411              		.loc 1 17372 12 is_stmt 0 view .LVU10221
 35412 0046 0028     		cmp	r0, #0
 35413 0048 EBD0     		beq	.L2567
 35414 004a E5E7     		b	.L2566
 35415              	.LVL4471:
 35416              	.L2568:
17361:Core/Src/bno055.c ****     }
 35417              		.loc 1 17361 16 view .LVU10222
 35418 004c 6FF07E00 		mvn	r0, #126
 35419              	.LVL4472:
17361:Core/Src/bno055.c ****     }
 35420              		.loc 1 17361 16 view .LVU10223
 35421 0050 F4E7     		b	.L2565
 35422              	.LVL4473:
 35423              	.L2569:
17383:Core/Src/bno055.c ****         }
 35424              		.loc 1 17383 22 view .LVU10224
 35425 0052 4FF0FF30 		mov	r0, #-1
 35426 0056 F1E7     		b	.L2565
 35427              	.L2573:
 35428              		.align	2
 35429              	.L2572:
 35430 0058 00000000 		.word	p_bno055
 35431              		.cfi_endproc
 35432              	.LFE249:
 35434              		.section	.text.bno055_set_gyro_highrate_filter,"ax",%progbits
 35435              		.align	1
 35436              		.global	bno055_set_gyro_highrate_filter
 35437              		.syntax unified
 35438              		.thumb
 35439              		.thumb_func
 35441              	bno055_set_gyro_highrate_filter:
 35442              	.LVL4474:
 35443              	.LFB250:
17389:Core/Src/bno055.c **** 
17390:Core/Src/bno055.c **** /*!
17391:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate filter
17392:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 7
17393:Core/Src/bno055.c ****  *
17394:Core/Src/bno055.c ****  *  @param gyro_highrate_filter_u8 : The value of gyro highrate filter
17395:Core/Src/bno055.c ****  *   gyro_highrate_filter_u8  | result
17396:Core/Src/bno055.c ****  *  --------------------------- |------------
17397:Core/Src/bno055.c ****  *         0x00                 | BNO055_GYRO_FILTERED_CONFIG
ARM GAS  /tmp/ccOloYeZ.s 			page 1005


17398:Core/Src/bno055.c ****  *         0x01                 | BNO055_GYRO_UNFILTERED_CONFIG
17399:Core/Src/bno055.c ****  *
17400:Core/Src/bno055.c ****  *  @return results of bus communication function
17401:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17402:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17403:Core/Src/bno055.c ****  *
17404:Core/Src/bno055.c ****  */
17405:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_filter(u8 gyro_highrate_filter_u8)
17406:Core/Src/bno055.c **** {
 35444              		.loc 1 17406 1 is_stmt 1 view -0
 35445              		.cfi_startproc
 35446              		@ args = 0, pretend = 0, frame = 8
 35447              		@ frame_needed = 0, uses_anonymous_args = 0
 35448              		.loc 1 17406 1 is_stmt 0 view .LVU10226
 35449 0000 30B5     		push	{r4, r5, lr}
 35450              		.cfi_def_cfa_offset 12
 35451              		.cfi_offset 4, -12
 35452              		.cfi_offset 5, -8
 35453              		.cfi_offset 14, -4
 35454 0002 83B0     		sub	sp, sp, #12
 35455              		.cfi_def_cfa_offset 24
17407:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35456              		.loc 1 17407 5 is_stmt 1 view .LVU10227
 35457              	.LVL4475:
17408:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 35458              		.loc 1 17408 5 view .LVU10228
 35459              		.loc 1 17408 8 is_stmt 0 view .LVU10229
 35460 0004 0023     		movs	r3, #0
 35461 0006 8DF80730 		strb	r3, [sp, #7]
17409:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35462              		.loc 1 17409 5 is_stmt 1 view .LVU10230
 35463              	.LVL4476:
17410:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 35464              		.loc 1 17410 5 view .LVU10231
17411:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 35465              		.loc 1 17411 5 view .LVU10232
 35466              		.loc 1 17411 8 is_stmt 0 view .LVU10233
 35467 000a 8DF80630 		strb	r3, [sp, #6]
17412:Core/Src/bno055.c **** 
17413:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17414:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35468              		.loc 1 17414 5 is_stmt 1 view .LVU10234
 35469              		.loc 1 17414 18 is_stmt 0 view .LVU10235
 35470 000e 284B     		ldr	r3, .L2586
 35471 0010 1B68     		ldr	r3, [r3]
 35472              		.loc 1 17414 8 view .LVU10236
 35473 0012 002B     		cmp	r3, #0
 35474 0014 48D0     		beq	.L2578
 35475 0016 0546     		mov	r5, r0
17415:Core/Src/bno055.c ****     {
17416:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17417:Core/Src/bno055.c ****     }
17418:Core/Src/bno055.c ****     else
17419:Core/Src/bno055.c ****     {
17420:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17421:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17422:Core/Src/bno055.c ****          * current operation mode and set the config mode */
ARM GAS  /tmp/ccOloYeZ.s 			page 1006


17423:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 35476              		.loc 1 17423 9 is_stmt 1 view .LVU10237
 35477              		.loc 1 17423 19 is_stmt 0 view .LVU10238
 35478 0018 0DF10600 		add	r0, sp, #6
 35479              	.LVL4477:
 35480              		.loc 1 17423 19 view .LVU10239
 35481 001c FFF7FEFF 		bl	bno055_get_operation_mode
 35482              	.LVL4478:
17424:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 35483              		.loc 1 17424 9 is_stmt 1 view .LVU10240
 35484              		.loc 1 17424 12 is_stmt 0 view .LVU10241
 35485 0020 0446     		mov	r4, r0
 35486 0022 80BB     		cbnz	r0, .L2579
17425:Core/Src/bno055.c ****         {
17426:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35487              		.loc 1 17426 13 is_stmt 1 view .LVU10242
 35488              		.loc 1 17426 32 is_stmt 0 view .LVU10243
 35489 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 35490              		.loc 1 17426 16 view .LVU10244
 35491 0028 1BB9     		cbnz	r3, .L2583
 35492              	.LVL4479:
 35493              	.L2577:
17427:Core/Src/bno055.c ****             {
17428:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17429:Core/Src/bno055.c ****             }
17430:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 35494              		.loc 1 17430 13 is_stmt 1 view .LVU10245
 35495              		.loc 1 17430 16 is_stmt 0 view .LVU10246
 35496 002a 44B1     		cbz	r4, .L2584
17431:Core/Src/bno055.c ****             {
17432:Core/Src/bno055.c ****                 /* Write page as one */
17433:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17434:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17435:Core/Src/bno055.c ****                 {
17436:Core/Src/bno055.c ****                     /* Write the value of
17437:Core/Src/bno055.c ****                      * gyro highrate filter*/
17438:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17439:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
17440:Core/Src/bno055.c ****                                                               &data_u8r,
17441:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17442:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17443:Core/Src/bno055.c ****                     {
17444:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_FILTER, gyro_
17445:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17446:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
17447:Core/Src/bno055.c ****                                                                     &data_u8r,
17448:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
17449:Core/Src/bno055.c ****                     }
17450:Core/Src/bno055.c ****                 }
17451:Core/Src/bno055.c ****                 else
17452:Core/Src/bno055.c ****                 {
17453:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17454:Core/Src/bno055.c ****                 }
17455:Core/Src/bno055.c ****             }
17456:Core/Src/bno055.c ****             else
17457:Core/Src/bno055.c ****             {
17458:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccOloYeZ.s 			page 1007


 35497              		.loc 1 17458 26 view .LVU10247
 35498 002c 4FF0FF34 		mov	r4, #-1
 35499              	.LVL4480:
 35500              		.loc 1 17458 26 view .LVU10248
 35501 0030 2BE0     		b	.L2576
 35502              	.LVL4481:
 35503              	.L2583:
17428:Core/Src/bno055.c ****             }
 35504              		.loc 1 17428 17 is_stmt 1 view .LVU10249
17428:Core/Src/bno055.c ****             }
 35505              		.loc 1 17428 28 is_stmt 0 view .LVU10250
 35506 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 35507              	.LVL4482:
17428:Core/Src/bno055.c ****             }
 35508              		.loc 1 17428 25 view .LVU10251
 35509 0036 54FA80F4 		uxtab	r4, r4, r0
 35510 003a 64B2     		sxtb	r4, r4
 35511              	.LVL4483:
17428:Core/Src/bno055.c ****             }
 35512              		.loc 1 17428 25 view .LVU10252
 35513 003c F5E7     		b	.L2577
 35514              	.L2584:
17433:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35515              		.loc 1 17433 17 is_stmt 1 view .LVU10253
17433:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35516              		.loc 1 17433 30 is_stmt 0 view .LVU10254
 35517 003e 0120     		movs	r0, #1
 35518 0040 FFF7FEFF 		bl	bno055_write_page_id
 35519              	.LVL4484:
17434:Core/Src/bno055.c ****                 {
 35520              		.loc 1 17434 17 is_stmt 1 view .LVU10255
17434:Core/Src/bno055.c ****                 {
 35521              		.loc 1 17434 20 is_stmt 0 view .LVU10256
 35522 0044 38BB     		cbnz	r0, .L2581
17438:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
 35523              		.loc 1 17438 21 is_stmt 1 view .LVU10257
17438:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
 35524              		.loc 1 17438 40 is_stmt 0 view .LVU10258
 35525 0046 1A4B     		ldr	r3, .L2586
 35526 0048 1868     		ldr	r0, [r3]
 35527              	.LVL4485:
17438:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
 35528              		.loc 1 17438 40 view .LVU10259
 35529 004a 0469     		ldr	r4, [r0, #16]
 35530              	.LVL4486:
17438:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
 35531              		.loc 1 17438 32 view .LVU10260
 35532 004c 0123     		movs	r3, #1
 35533 004e 0DF10702 		add	r2, sp, #7
 35534 0052 1721     		movs	r1, #23
 35535 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35536 0056 A047     		blx	r4
 35537              	.LVL4487:
17442:Core/Src/bno055.c ****                     {
 35538              		.loc 1 17442 21 is_stmt 1 view .LVU10261
17442:Core/Src/bno055.c ****                     {
 35539              		.loc 1 17442 24 is_stmt 0 view .LVU10262
ARM GAS  /tmp/ccOloYeZ.s 			page 1008


 35540 0058 0446     		mov	r4, r0
 35541 005a B0B9     		cbnz	r0, .L2576
17444:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35542              		.loc 1 17444 25 is_stmt 1 view .LVU10263
17444:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35543              		.loc 1 17444 36 is_stmt 0 view .LVU10264
 35544 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35545 0060 03F07F03 		and	r3, r3, #127
 35546 0064 43EAC513 		orr	r3, r3, r5, lsl #7
17444:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35547              		.loc 1 17444 34 view .LVU10265
 35548 0068 8DF80730 		strb	r3, [sp, #7]
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 35549              		.loc 1 17445 25 is_stmt 1 view .LVU10266
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 35550              		.loc 1 17445 45 is_stmt 0 view .LVU10267
 35551 006c 104B     		ldr	r3, .L2586
 35552 006e 1868     		ldr	r0, [r3]
 35553              	.LVL4488:
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 35554              		.loc 1 17445 45 view .LVU10268
 35555 0070 C568     		ldr	r5, [r0, #12]
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 35556              		.loc 1 17445 37 view .LVU10269
 35557 0072 0123     		movs	r3, #1
 35558 0074 0DF10702 		add	r2, sp, #7
 35559 0078 1721     		movs	r1, #23
 35560 007a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35561 007c A847     		blx	r5
 35562              	.LVL4489:
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 35563              		.loc 1 17445 34 view .LVU10270
 35564 007e 54FA80F0 		uxtab	r0, r4, r0
 35565 0082 44B2     		sxtb	r4, r0
 35566              	.LVL4490:
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 35567              		.loc 1 17445 34 view .LVU10271
 35568 0084 01E0     		b	.L2576
 35569              	.LVL4491:
 35570              	.L2579:
17459:Core/Src/bno055.c ****             }
17460:Core/Src/bno055.c ****         }
17461:Core/Src/bno055.c ****         else
17462:Core/Src/bno055.c ****         {
17463:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 35571              		.loc 1 17463 22 view .LVU10272
 35572 0086 4FF0FF34 		mov	r4, #-1
 35573              	.LVL4492:
 35574              	.L2576:
17464:Core/Src/bno055.c ****         }
17465:Core/Src/bno055.c ****     }
17466:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35575              		.loc 1 17466 5 is_stmt 1 view .LVU10273
 35576              		.loc 1 17466 24 is_stmt 0 view .LVU10274
 35577 008a 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 35578              		.loc 1 17466 8 view .LVU10275
 35579 008e 28B9     		cbnz	r0, .L2585
ARM GAS  /tmp/ccOloYeZ.s 			page 1009


 35580              	.LVL4493:
 35581              	.L2575:
17467:Core/Src/bno055.c ****     {
17468:Core/Src/bno055.c ****         /* set the operation mode of
17469:Core/Src/bno055.c ****          * previous operation mode*/
17470:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17471:Core/Src/bno055.c ****     }
17472:Core/Src/bno055.c **** 
17473:Core/Src/bno055.c ****     return com_rslt;
17474:Core/Src/bno055.c **** }
 35582              		.loc 1 17474 1 view .LVU10276
 35583 0090 2046     		mov	r0, r4
 35584 0092 03B0     		add	sp, sp, #12
 35585              		.cfi_remember_state
 35586              		.cfi_def_cfa_offset 12
 35587              		@ sp needed
 35588 0094 30BD     		pop	{r4, r5, pc}
 35589              	.LVL4494:
 35590              	.L2581:
 35591              		.cfi_restore_state
17453:Core/Src/bno055.c ****                 }
 35592              		.loc 1 17453 30 view .LVU10277
 35593 0096 4FF0FF34 		mov	r4, #-1
 35594              	.LVL4495:
17453:Core/Src/bno055.c ****                 }
 35595              		.loc 1 17453 30 view .LVU10278
 35596 009a F6E7     		b	.L2576
 35597              	.LVL4496:
 35598              	.L2585:
17470:Core/Src/bno055.c ****     }
 35599              		.loc 1 17470 9 is_stmt 1 view .LVU10279
17470:Core/Src/bno055.c ****     }
 35600              		.loc 1 17470 21 is_stmt 0 view .LVU10280
 35601 009c FFF7FEFF 		bl	bno055_set_operation_mode
 35602              	.LVL4497:
17470:Core/Src/bno055.c ****     }
 35603              		.loc 1 17470 18 view .LVU10281
 35604 00a0 54FA80F0 		uxtab	r0, r4, r0
 35605 00a4 44B2     		sxtb	r4, r0
 35606              	.LVL4498:
17470:Core/Src/bno055.c ****     }
 35607              		.loc 1 17470 18 view .LVU10282
 35608 00a6 F3E7     		b	.L2575
 35609              	.LVL4499:
 35610              	.L2578:
17416:Core/Src/bno055.c ****     }
 35611              		.loc 1 17416 16 view .LVU10283
 35612 00a8 6FF07E04 		mvn	r4, #126
 35613 00ac F0E7     		b	.L2575
 35614              	.L2587:
 35615 00ae 00BF     		.align	2
 35616              	.L2586:
 35617 00b0 00000000 		.word	p_bno055
 35618              		.cfi_endproc
 35619              	.LFE250:
 35621              		.section	.text.bno055_get_gyro_highrate_x_thres,"ax",%progbits
 35622              		.align	1
ARM GAS  /tmp/ccOloYeZ.s 			page 1010


 35623              		.global	bno055_get_gyro_highrate_x_thres
 35624              		.syntax unified
 35625              		.thumb
 35626              		.thumb_func
 35628              	bno055_get_gyro_highrate_x_thres:
 35629              	.LVL4500:
 35630              	.LFB251:
17475:Core/Src/bno055.c **** 
17476:Core/Src/bno055.c **** /*!
17477:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate x threshold
17478:Core/Src/bno055.c ****  *  from page one register from 0x18 bit 0 to 4
17479:Core/Src/bno055.c ****  *
17480:Core/Src/bno055.c ****  *  @param gyro_highrate_x_thres_u8 : The value of gyro x highrate threshold
17481:Core/Src/bno055.c ****  *
17482:Core/Src/bno055.c ****  *  @return results of bus communication function
17483:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17484:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17485:Core/Src/bno055.c ****  *
17486:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
17487:Core/Src/bno055.c ****  *  selection of gyro range
17488:Core/Src/bno055.c ****  *
17489:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
17490:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17491:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
17492:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
17493:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
17494:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
17495:Core/Src/bno055.c ****  *
17496:Core/Src/bno055.c ****  */
17497:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_x_thres(u8 *gyro_highrate_x_thres_u8)
17498:Core/Src/bno055.c **** {
 35631              		.loc 1 17498 1 is_stmt 1 view -0
 35632              		.cfi_startproc
 35633              		@ args = 0, pretend = 0, frame = 8
 35634              		@ frame_needed = 0, uses_anonymous_args = 0
 35635              		.loc 1 17498 1 is_stmt 0 view .LVU10285
 35636 0000 30B5     		push	{r4, r5, lr}
 35637              		.cfi_def_cfa_offset 12
 35638              		.cfi_offset 4, -12
 35639              		.cfi_offset 5, -8
 35640              		.cfi_offset 14, -4
 35641 0002 83B0     		sub	sp, sp, #12
 35642              		.cfi_def_cfa_offset 24
17499:Core/Src/bno055.c ****     /* Variable used to return value of
17500:Core/Src/bno055.c ****      * communication routine*/
17501:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35643              		.loc 1 17501 5 is_stmt 1 view .LVU10286
 35644              	.LVL4501:
17502:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 35645              		.loc 1 17502 5 view .LVU10287
 35646              		.loc 1 17502 8 is_stmt 0 view .LVU10288
 35647 0004 0023     		movs	r3, #0
 35648 0006 8DF80730 		strb	r3, [sp, #7]
17503:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35649              		.loc 1 17503 5 is_stmt 1 view .LVU10289
 35650              	.LVL4502:
17504:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccOloYeZ.s 			page 1011


17505:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17506:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35651              		.loc 1 17506 5 view .LVU10290
 35652              		.loc 1 17506 18 is_stmt 0 view .LVU10291
 35653 000a 144B     		ldr	r3, .L2596
 35654 000c 1B68     		ldr	r3, [r3]
 35655              		.loc 1 17506 8 view .LVU10292
 35656 000e F3B1     		cbz	r3, .L2592
 35657 0010 0446     		mov	r4, r0
17507:Core/Src/bno055.c ****     {
17508:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17509:Core/Src/bno055.c ****     }
17510:Core/Src/bno055.c ****     else
17511:Core/Src/bno055.c ****     {
17512:Core/Src/bno055.c ****         /*condition check for page, gyro highrate x threshold is
17513:Core/Src/bno055.c ****          * available in the page one*/
17514:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 35658              		.loc 1 17514 9 is_stmt 1 view .LVU10293
 35659              		.loc 1 17514 21 is_stmt 0 view .LVU10294
 35660 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35661              		.loc 1 17514 12 view .LVU10295
 35662 0014 012B     		cmp	r3, #1
 35663 0016 14D1     		bne	.L2595
 35664              	.LVL4503:
 35665              	.L2590:
17515:Core/Src/bno055.c ****         {
17516:Core/Src/bno055.c ****             /* Write page as one */
17517:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17518:Core/Src/bno055.c ****         }
17519:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 35666              		.loc 1 17519 53 discriminator 1 view .LVU10296
 35667 0018 104B     		ldr	r3, .L2596
 35668 001a 1B68     		ldr	r3, [r3]
 35669 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35670              		.loc 1 17519 41 discriminator 1 view .LVU10297
 35671 001e 012B     		cmp	r3, #1
 35672 0020 18D1     		bne	.L2593
 35673              	.L2591:
17520:Core/Src/bno055.c ****         {
17521:Core/Src/bno055.c ****             /* Read the value of gyro highrate threshold*/
17522:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 35674              		.loc 1 17522 13 is_stmt 1 view .LVU10298
 35675              		.loc 1 17522 32 is_stmt 0 view .LVU10299
 35676 0022 0E4B     		ldr	r3, .L2596
 35677 0024 1868     		ldr	r0, [r3]
 35678 0026 0569     		ldr	r5, [r0, #16]
 35679              		.loc 1 17522 24 view .LVU10300
 35680 0028 0123     		movs	r3, #1
 35681 002a 0DF10702 		add	r2, sp, #7
 35682 002e 1821     		movs	r1, #24
 35683 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35684 0032 A847     		blx	r5
 35685              	.LVL4504:
17523:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_X_THRES_REG,
17524:Core/Src/bno055.c ****                                                       &data_u8r,
17525:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17526:Core/Src/bno055.c ****             *gyro_highrate_x_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_THRES)
ARM GAS  /tmp/ccOloYeZ.s 			page 1012


 35686              		.loc 1 17526 13 is_stmt 1 view .LVU10301
 35687              		.loc 1 17526 41 is_stmt 0 view .LVU10302
 35688 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35689 0038 03F01F03 		and	r3, r3, #31
 35690              		.loc 1 17526 39 view .LVU10303
 35691 003c 2370     		strb	r3, [r4]
 35692              	.LVL4505:
 35693              	.L2589:
17527:Core/Src/bno055.c ****         }
17528:Core/Src/bno055.c ****         else
17529:Core/Src/bno055.c ****         {
17530:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17531:Core/Src/bno055.c ****         }
17532:Core/Src/bno055.c ****     }
17533:Core/Src/bno055.c **** 
17534:Core/Src/bno055.c ****     return com_rslt;
17535:Core/Src/bno055.c **** }
 35694              		.loc 1 17535 1 view .LVU10304
 35695 003e 03B0     		add	sp, sp, #12
 35696              		.cfi_remember_state
 35697              		.cfi_def_cfa_offset 12
 35698              		@ sp needed
 35699 0040 30BD     		pop	{r4, r5, pc}
 35700              	.LVL4506:
 35701              	.L2595:
 35702              		.cfi_restore_state
17517:Core/Src/bno055.c ****         }
 35703              		.loc 1 17517 13 is_stmt 1 view .LVU10305
17517:Core/Src/bno055.c ****         }
 35704              		.loc 1 17517 23 is_stmt 0 view .LVU10306
 35705 0042 0120     		movs	r0, #1
 35706              	.LVL4507:
17517:Core/Src/bno055.c ****         }
 35707              		.loc 1 17517 23 view .LVU10307
 35708 0044 FFF7FEFF 		bl	bno055_write_page_id
 35709              	.LVL4508:
17519:Core/Src/bno055.c ****         {
 35710              		.loc 1 17519 9 is_stmt 1 view .LVU10308
17519:Core/Src/bno055.c ****         {
 35711              		.loc 1 17519 12 is_stmt 0 view .LVU10309
 35712 0048 0028     		cmp	r0, #0
 35713 004a EAD0     		beq	.L2591
 35714 004c E4E7     		b	.L2590
 35715              	.LVL4509:
 35716              	.L2592:
17508:Core/Src/bno055.c ****     }
 35717              		.loc 1 17508 16 view .LVU10310
 35718 004e 6FF07E00 		mvn	r0, #126
 35719              	.LVL4510:
17508:Core/Src/bno055.c ****     }
 35720              		.loc 1 17508 16 view .LVU10311
 35721 0052 F4E7     		b	.L2589
 35722              	.LVL4511:
 35723              	.L2593:
17530:Core/Src/bno055.c ****         }
 35724              		.loc 1 17530 22 view .LVU10312
 35725 0054 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccOloYeZ.s 			page 1013


 35726 0058 F1E7     		b	.L2589
 35727              	.L2597:
 35728 005a 00BF     		.align	2
 35729              	.L2596:
 35730 005c 00000000 		.word	p_bno055
 35731              		.cfi_endproc
 35732              	.LFE251:
 35734              		.section	.text.bno055_set_gyro_highrate_x_thres,"ax",%progbits
 35735              		.align	1
 35736              		.global	bno055_set_gyro_highrate_x_thres
 35737              		.syntax unified
 35738              		.thumb
 35739              		.thumb_func
 35741              	bno055_set_gyro_highrate_x_thres:
 35742              	.LVL4512:
 35743              	.LFB252:
17536:Core/Src/bno055.c **** 
17537:Core/Src/bno055.c **** /*!
17538:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate x threshold
17539:Core/Src/bno055.c ****  *  from page one register from 0x18 bit 0 to 4
17540:Core/Src/bno055.c ****  *
17541:Core/Src/bno055.c ****  *  @param gyro_highrate_x_thres_u8 : The value of gyro x highrate threshold
17542:Core/Src/bno055.c ****  *
17543:Core/Src/bno055.c ****  *  @return results of bus communication function
17544:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17545:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17546:Core/Src/bno055.c ****  *
17547:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
17548:Core/Src/bno055.c ****  *  selection of gyro range
17549:Core/Src/bno055.c ****  *
17550:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
17551:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17552:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
17553:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
17554:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
17555:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
17556:Core/Src/bno055.c ****  *
17557:Core/Src/bno055.c ****  */
17558:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_x_thres(u8 gyro_highrate_x_thres_u8)
17559:Core/Src/bno055.c **** {
 35744              		.loc 1 17559 1 is_stmt 1 view -0
 35745              		.cfi_startproc
 35746              		@ args = 0, pretend = 0, frame = 8
 35747              		@ frame_needed = 0, uses_anonymous_args = 0
 35748              		.loc 1 17559 1 is_stmt 0 view .LVU10314
 35749 0000 30B5     		push	{r4, r5, lr}
 35750              		.cfi_def_cfa_offset 12
 35751              		.cfi_offset 4, -12
 35752              		.cfi_offset 5, -8
 35753              		.cfi_offset 14, -4
 35754 0002 83B0     		sub	sp, sp, #12
 35755              		.cfi_def_cfa_offset 24
17560:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35756              		.loc 1 17560 5 is_stmt 1 view .LVU10315
 35757              	.LVL4513:
17561:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 35758              		.loc 1 17561 5 view .LVU10316
ARM GAS  /tmp/ccOloYeZ.s 			page 1014


 35759              		.loc 1 17561 8 is_stmt 0 view .LVU10317
 35760 0004 0023     		movs	r3, #0
 35761 0006 8DF80730 		strb	r3, [sp, #7]
17562:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35762              		.loc 1 17562 5 is_stmt 1 view .LVU10318
 35763              	.LVL4514:
17563:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 35764              		.loc 1 17563 5 view .LVU10319
 35765              		.loc 1 17563 8 is_stmt 0 view .LVU10320
 35766 000a 8DF80630 		strb	r3, [sp, #6]
17564:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 35767              		.loc 1 17564 5 is_stmt 1 view .LVU10321
 35768              	.LVL4515:
17565:Core/Src/bno055.c **** 
17566:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17567:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35769              		.loc 1 17567 5 view .LVU10322
 35770              		.loc 1 17567 18 is_stmt 0 view .LVU10323
 35771 000e 284B     		ldr	r3, .L2610
 35772 0010 1B68     		ldr	r3, [r3]
 35773              		.loc 1 17567 8 view .LVU10324
 35774 0012 002B     		cmp	r3, #0
 35775 0014 49D0     		beq	.L2602
 35776 0016 0546     		mov	r5, r0
17568:Core/Src/bno055.c ****     {
17569:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17570:Core/Src/bno055.c ****     }
17571:Core/Src/bno055.c ****     else
17572:Core/Src/bno055.c ****     {
17573:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17574:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17575:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17576:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 35777              		.loc 1 17576 9 is_stmt 1 view .LVU10325
 35778              		.loc 1 17576 19 is_stmt 0 view .LVU10326
 35779 0018 0DF10600 		add	r0, sp, #6
 35780              	.LVL4516:
 35781              		.loc 1 17576 19 view .LVU10327
 35782 001c FFF7FEFF 		bl	bno055_get_operation_mode
 35783              	.LVL4517:
17577:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 35784              		.loc 1 17577 9 is_stmt 1 view .LVU10328
 35785              		.loc 1 17577 12 is_stmt 0 view .LVU10329
 35786 0020 0446     		mov	r4, r0
 35787 0022 88BB     		cbnz	r0, .L2603
17578:Core/Src/bno055.c ****         {
17579:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35788              		.loc 1 17579 13 is_stmt 1 view .LVU10330
 35789              		.loc 1 17579 32 is_stmt 0 view .LVU10331
 35790 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 35791              		.loc 1 17579 16 view .LVU10332
 35792 0028 1BB9     		cbnz	r3, .L2607
 35793              	.LVL4518:
 35794              	.L2601:
17580:Core/Src/bno055.c ****             {
17581:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17582:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccOloYeZ.s 			page 1015


17583:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 35795              		.loc 1 17583 13 is_stmt 1 view .LVU10333
 35796              		.loc 1 17583 16 is_stmt 0 view .LVU10334
 35797 002a 44B1     		cbz	r4, .L2608
17584:Core/Src/bno055.c ****             {
17585:Core/Src/bno055.c ****                 /* Write page as one */
17586:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17587:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17588:Core/Src/bno055.c ****                 {
17589:Core/Src/bno055.c ****                     /* Write the value of
17590:Core/Src/bno055.c ****                      * gyro highrate x threshold*/
17591:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17592:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
17593:Core/Src/bno055.c ****                                                               &data_u8r,
17594:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17595:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17596:Core/Src/bno055.c ****                     {
17597:Core/Src/bno055.c ****                         data_u8r =
17598:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_THRES, gyro_highra
17599:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17600:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
17601:Core/Src/bno055.c ****                                                                     &data_u8r,
17602:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
17603:Core/Src/bno055.c ****                     }
17604:Core/Src/bno055.c ****                 }
17605:Core/Src/bno055.c ****                 else
17606:Core/Src/bno055.c ****                 {
17607:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17608:Core/Src/bno055.c ****                 }
17609:Core/Src/bno055.c ****             }
17610:Core/Src/bno055.c ****             else
17611:Core/Src/bno055.c ****             {
17612:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 35798              		.loc 1 17612 26 view .LVU10335
 35799 002c 4FF0FF34 		mov	r4, #-1
 35800              	.LVL4519:
 35801              		.loc 1 17612 26 view .LVU10336
 35802 0030 2CE0     		b	.L2600
 35803              	.LVL4520:
 35804              	.L2607:
17581:Core/Src/bno055.c ****             }
 35805              		.loc 1 17581 17 is_stmt 1 view .LVU10337
17581:Core/Src/bno055.c ****             }
 35806              		.loc 1 17581 28 is_stmt 0 view .LVU10338
 35807 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 35808              	.LVL4521:
17581:Core/Src/bno055.c ****             }
 35809              		.loc 1 17581 25 view .LVU10339
 35810 0036 54FA80F4 		uxtab	r4, r4, r0
 35811 003a 64B2     		sxtb	r4, r4
 35812              	.LVL4522:
17581:Core/Src/bno055.c ****             }
 35813              		.loc 1 17581 25 view .LVU10340
 35814 003c F5E7     		b	.L2601
 35815              	.L2608:
17586:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35816              		.loc 1 17586 17 is_stmt 1 view .LVU10341
ARM GAS  /tmp/ccOloYeZ.s 			page 1016


17586:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35817              		.loc 1 17586 30 is_stmt 0 view .LVU10342
 35818 003e 0120     		movs	r0, #1
 35819 0040 FFF7FEFF 		bl	bno055_write_page_id
 35820              	.LVL4523:
17587:Core/Src/bno055.c ****                 {
 35821              		.loc 1 17587 17 is_stmt 1 view .LVU10343
17587:Core/Src/bno055.c ****                 {
 35822              		.loc 1 17587 20 is_stmt 0 view .LVU10344
 35823 0044 40BB     		cbnz	r0, .L2605
17591:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
 35824              		.loc 1 17591 21 is_stmt 1 view .LVU10345
17591:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
 35825              		.loc 1 17591 40 is_stmt 0 view .LVU10346
 35826 0046 1A4B     		ldr	r3, .L2610
 35827 0048 1868     		ldr	r0, [r3]
 35828              	.LVL4524:
17591:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
 35829              		.loc 1 17591 40 view .LVU10347
 35830 004a 0469     		ldr	r4, [r0, #16]
 35831              	.LVL4525:
17591:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
 35832              		.loc 1 17591 32 view .LVU10348
 35833 004c 0123     		movs	r3, #1
 35834 004e 0DF10702 		add	r2, sp, #7
 35835 0052 1821     		movs	r1, #24
 35836 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35837 0056 A047     		blx	r4
 35838              	.LVL4526:
17595:Core/Src/bno055.c ****                     {
 35839              		.loc 1 17595 21 is_stmt 1 view .LVU10349
17595:Core/Src/bno055.c ****                     {
 35840              		.loc 1 17595 24 is_stmt 0 view .LVU10350
 35841 0058 0446     		mov	r4, r0
 35842 005a B8B9     		cbnz	r0, .L2600
17597:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_THRES, gyro_highra
 35843              		.loc 1 17597 25 is_stmt 1 view .LVU10351
17598:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35844              		.loc 1 17598 29 is_stmt 0 view .LVU10352
 35845 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
17597:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_THRES, gyro_highra
 35846              		.loc 1 17597 34 view .LVU10353
 35847 0060 23F01F03 		bic	r3, r3, #31
 35848 0064 05F01F00 		and	r0, r5, #31
 35849              	.LVL4527:
17597:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_THRES, gyro_highra
 35850              		.loc 1 17597 34 view .LVU10354
 35851 0068 0343     		orrs	r3, r3, r0
 35852 006a 8DF80730 		strb	r3, [sp, #7]
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
 35853              		.loc 1 17599 25 is_stmt 1 view .LVU10355
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
 35854              		.loc 1 17599 45 is_stmt 0 view .LVU10356
 35855 006e 104B     		ldr	r3, .L2610
 35856 0070 1868     		ldr	r0, [r3]
 35857 0072 C568     		ldr	r5, [r0, #12]
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
ARM GAS  /tmp/ccOloYeZ.s 			page 1017


 35858              		.loc 1 17599 37 view .LVU10357
 35859 0074 0123     		movs	r3, #1
 35860 0076 0DF10702 		add	r2, sp, #7
 35861 007a 1821     		movs	r1, #24
 35862 007c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35863 007e A847     		blx	r5
 35864              	.LVL4528:
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
 35865              		.loc 1 17599 34 view .LVU10358
 35866 0080 54FA80F0 		uxtab	r0, r4, r0
 35867 0084 44B2     		sxtb	r4, r0
 35868              	.LVL4529:
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
 35869              		.loc 1 17599 34 view .LVU10359
 35870 0086 01E0     		b	.L2600
 35871              	.LVL4530:
 35872              	.L2603:
17613:Core/Src/bno055.c ****             }
17614:Core/Src/bno055.c ****         }
17615:Core/Src/bno055.c ****         else
17616:Core/Src/bno055.c ****         {
17617:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 35873              		.loc 1 17617 22 view .LVU10360
 35874 0088 4FF0FF34 		mov	r4, #-1
 35875              	.LVL4531:
 35876              	.L2600:
17618:Core/Src/bno055.c ****         }
17619:Core/Src/bno055.c ****     }
17620:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35877              		.loc 1 17620 5 is_stmt 1 view .LVU10361
 35878              		.loc 1 17620 24 is_stmt 0 view .LVU10362
 35879 008c 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 35880              		.loc 1 17620 8 view .LVU10363
 35881 0090 28B9     		cbnz	r0, .L2609
 35882              	.LVL4532:
 35883              	.L2599:
17621:Core/Src/bno055.c ****     {
17622:Core/Src/bno055.c ****         /* set the operation mode of
17623:Core/Src/bno055.c ****          * previous operation mode*/
17624:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17625:Core/Src/bno055.c ****     }
17626:Core/Src/bno055.c **** 
17627:Core/Src/bno055.c ****     return com_rslt;
17628:Core/Src/bno055.c **** }
 35884              		.loc 1 17628 1 view .LVU10364
 35885 0092 2046     		mov	r0, r4
 35886 0094 03B0     		add	sp, sp, #12
 35887              		.cfi_remember_state
 35888              		.cfi_def_cfa_offset 12
 35889              		@ sp needed
 35890 0096 30BD     		pop	{r4, r5, pc}
 35891              	.LVL4533:
 35892              	.L2605:
 35893              		.cfi_restore_state
17607:Core/Src/bno055.c ****                 }
 35894              		.loc 1 17607 30 view .LVU10365
 35895 0098 4FF0FF34 		mov	r4, #-1
ARM GAS  /tmp/ccOloYeZ.s 			page 1018


 35896              	.LVL4534:
17607:Core/Src/bno055.c ****                 }
 35897              		.loc 1 17607 30 view .LVU10366
 35898 009c F6E7     		b	.L2600
 35899              	.LVL4535:
 35900              	.L2609:
17624:Core/Src/bno055.c ****     }
 35901              		.loc 1 17624 9 is_stmt 1 view .LVU10367
17624:Core/Src/bno055.c ****     }
 35902              		.loc 1 17624 21 is_stmt 0 view .LVU10368
 35903 009e FFF7FEFF 		bl	bno055_set_operation_mode
 35904              	.LVL4536:
17624:Core/Src/bno055.c ****     }
 35905              		.loc 1 17624 18 view .LVU10369
 35906 00a2 54FA80F0 		uxtab	r0, r4, r0
 35907 00a6 44B2     		sxtb	r4, r0
 35908              	.LVL4537:
17624:Core/Src/bno055.c ****     }
 35909              		.loc 1 17624 18 view .LVU10370
 35910 00a8 F3E7     		b	.L2599
 35911              	.LVL4538:
 35912              	.L2602:
17569:Core/Src/bno055.c ****     }
 35913              		.loc 1 17569 16 view .LVU10371
 35914 00aa 6FF07E04 		mvn	r4, #126
 35915 00ae F0E7     		b	.L2599
 35916              	.L2611:
 35917              		.align	2
 35918              	.L2610:
 35919 00b0 00000000 		.word	p_bno055
 35920              		.cfi_endproc
 35921              	.LFE252:
 35923              		.section	.text.bno055_get_gyro_highrate_x_hyst,"ax",%progbits
 35924              		.align	1
 35925              		.global	bno055_get_gyro_highrate_x_hyst
 35926              		.syntax unified
 35927              		.thumb
 35928              		.thumb_func
 35930              	bno055_get_gyro_highrate_x_hyst:
 35931              	.LVL4539:
 35932              	.LFB253:
17629:Core/Src/bno055.c **** 
17630:Core/Src/bno055.c **** /*!
17631:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate x hysteresis
17632:Core/Src/bno055.c ****  *  from page one register from 0x18 bit 5 to 6
17633:Core/Src/bno055.c ****  *
17634:Core/Src/bno055.c ****  *  @param gyro_highrate_x_hyst_u8 : The value of gyro highrate x hysteresis
17635:Core/Src/bno055.c ****  *
17636:Core/Src/bno055.c ****  *  @return results of bus communication function
17637:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17638:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17639:Core/Src/bno055.c ****  *
17640:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
17641:Core/Src/bno055.c ****  *
17642:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_x_hyst_u8) *4 LSB
17643:Core/Src/bno055.c ****  *
17644:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
ARM GAS  /tmp/ccOloYeZ.s 			page 1019


17645:Core/Src/bno055.c ****  *
17646:Core/Src/bno055.c ****  *  gyro_range_u8     | hysteresis      |     LSB
17647:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17648:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
17649:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
17650:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
17651:Core/Src/bno055.c ****  *
17652:Core/Src/bno055.c ****  */
17653:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_x_hyst(u8 *gyro_highrate_x_hyst_u8)
17654:Core/Src/bno055.c **** {
 35933              		.loc 1 17654 1 is_stmt 1 view -0
 35934              		.cfi_startproc
 35935              		@ args = 0, pretend = 0, frame = 8
 35936              		@ frame_needed = 0, uses_anonymous_args = 0
 35937              		.loc 1 17654 1 is_stmt 0 view .LVU10373
 35938 0000 30B5     		push	{r4, r5, lr}
 35939              		.cfi_def_cfa_offset 12
 35940              		.cfi_offset 4, -12
 35941              		.cfi_offset 5, -8
 35942              		.cfi_offset 14, -4
 35943 0002 83B0     		sub	sp, sp, #12
 35944              		.cfi_def_cfa_offset 24
17655:Core/Src/bno055.c ****     /* Variable used to return value of
17656:Core/Src/bno055.c ****      * communication routine*/
17657:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35945              		.loc 1 17657 5 is_stmt 1 view .LVU10374
 35946              	.LVL4540:
17658:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 35947              		.loc 1 17658 5 view .LVU10375
 35948              		.loc 1 17658 8 is_stmt 0 view .LVU10376
 35949 0004 0023     		movs	r3, #0
 35950 0006 8DF80730 		strb	r3, [sp, #7]
17659:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35951              		.loc 1 17659 5 is_stmt 1 view .LVU10377
 35952              	.LVL4541:
17660:Core/Src/bno055.c **** 
17661:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17662:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35953              		.loc 1 17662 5 view .LVU10378
 35954              		.loc 1 17662 18 is_stmt 0 view .LVU10379
 35955 000a 144B     		ldr	r3, .L2620
 35956 000c 1B68     		ldr	r3, [r3]
 35957              		.loc 1 17662 8 view .LVU10380
 35958 000e F3B1     		cbz	r3, .L2616
 35959 0010 0446     		mov	r4, r0
17663:Core/Src/bno055.c ****     {
17664:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17665:Core/Src/bno055.c ****     }
17666:Core/Src/bno055.c ****     else
17667:Core/Src/bno055.c ****     {
17668:Core/Src/bno055.c ****         /*condition check for page,gyro highrate x hysteresis is
17669:Core/Src/bno055.c ****          * available in the page one*/
17670:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 35960              		.loc 1 17670 9 is_stmt 1 view .LVU10381
 35961              		.loc 1 17670 21 is_stmt 0 view .LVU10382
 35962 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35963              		.loc 1 17670 12 view .LVU10383
ARM GAS  /tmp/ccOloYeZ.s 			page 1020


 35964 0014 012B     		cmp	r3, #1
 35965 0016 14D1     		bne	.L2619
 35966              	.LVL4542:
 35967              	.L2614:
17671:Core/Src/bno055.c ****         {
17672:Core/Src/bno055.c ****             /* Write page as one */
17673:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17674:Core/Src/bno055.c ****         }
17675:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 35968              		.loc 1 17675 53 discriminator 1 view .LVU10384
 35969 0018 104B     		ldr	r3, .L2620
 35970 001a 1B68     		ldr	r3, [r3]
 35971 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35972              		.loc 1 17675 41 discriminator 1 view .LVU10385
 35973 001e 012B     		cmp	r3, #1
 35974 0020 18D1     		bne	.L2617
 35975              	.L2615:
17676:Core/Src/bno055.c ****         {
17677:Core/Src/bno055.c ****             /* Read the value of gyro highrate x hysteresis*/
17678:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 35976              		.loc 1 17678 13 is_stmt 1 view .LVU10386
 35977              		.loc 1 17678 32 is_stmt 0 view .LVU10387
 35978 0022 0E4B     		ldr	r3, .L2620
 35979 0024 1868     		ldr	r0, [r3]
 35980 0026 0569     		ldr	r5, [r0, #16]
 35981              		.loc 1 17678 24 view .LVU10388
 35982 0028 0123     		movs	r3, #1
 35983 002a 0DF10702 		add	r2, sp, #7
 35984 002e 1821     		movs	r1, #24
 35985 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35986 0032 A847     		blx	r5
 35987              	.LVL4543:
17679:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_X_HYST_REG,
17680:Core/Src/bno055.c ****                                                       &data_u8r,
17681:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17682:Core/Src/bno055.c ****             *gyro_highrate_x_hyst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_HYST);
 35988              		.loc 1 17682 13 is_stmt 1 view .LVU10389
 35989              		.loc 1 17682 40 is_stmt 0 view .LVU10390
 35990 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35991 0038 C3F34113 		ubfx	r3, r3, #5, #2
 35992              		.loc 1 17682 38 view .LVU10391
 35993 003c 2370     		strb	r3, [r4]
 35994              	.LVL4544:
 35995              	.L2613:
17683:Core/Src/bno055.c ****         }
17684:Core/Src/bno055.c ****         else
17685:Core/Src/bno055.c ****         {
17686:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17687:Core/Src/bno055.c ****         }
17688:Core/Src/bno055.c ****     }
17689:Core/Src/bno055.c **** 
17690:Core/Src/bno055.c ****     return com_rslt;
17691:Core/Src/bno055.c **** }
 35996              		.loc 1 17691 1 view .LVU10392
 35997 003e 03B0     		add	sp, sp, #12
 35998              		.cfi_remember_state
 35999              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccOloYeZ.s 			page 1021


 36000              		@ sp needed
 36001 0040 30BD     		pop	{r4, r5, pc}
 36002              	.LVL4545:
 36003              	.L2619:
 36004              		.cfi_restore_state
17673:Core/Src/bno055.c ****         }
 36005              		.loc 1 17673 13 is_stmt 1 view .LVU10393
17673:Core/Src/bno055.c ****         }
 36006              		.loc 1 17673 23 is_stmt 0 view .LVU10394
 36007 0042 0120     		movs	r0, #1
 36008              	.LVL4546:
17673:Core/Src/bno055.c ****         }
 36009              		.loc 1 17673 23 view .LVU10395
 36010 0044 FFF7FEFF 		bl	bno055_write_page_id
 36011              	.LVL4547:
17675:Core/Src/bno055.c ****         {
 36012              		.loc 1 17675 9 is_stmt 1 view .LVU10396
17675:Core/Src/bno055.c ****         {
 36013              		.loc 1 17675 12 is_stmt 0 view .LVU10397
 36014 0048 0028     		cmp	r0, #0
 36015 004a EAD0     		beq	.L2615
 36016 004c E4E7     		b	.L2614
 36017              	.LVL4548:
 36018              	.L2616:
17664:Core/Src/bno055.c ****     }
 36019              		.loc 1 17664 16 view .LVU10398
 36020 004e 6FF07E00 		mvn	r0, #126
 36021              	.LVL4549:
17664:Core/Src/bno055.c ****     }
 36022              		.loc 1 17664 16 view .LVU10399
 36023 0052 F4E7     		b	.L2613
 36024              	.LVL4550:
 36025              	.L2617:
17686:Core/Src/bno055.c ****         }
 36026              		.loc 1 17686 22 view .LVU10400
 36027 0054 4FF0FF30 		mov	r0, #-1
 36028 0058 F1E7     		b	.L2613
 36029              	.L2621:
 36030 005a 00BF     		.align	2
 36031              	.L2620:
 36032 005c 00000000 		.word	p_bno055
 36033              		.cfi_endproc
 36034              	.LFE253:
 36036              		.section	.text.bno055_set_gyro_highrate_x_hyst,"ax",%progbits
 36037              		.align	1
 36038              		.global	bno055_set_gyro_highrate_x_hyst
 36039              		.syntax unified
 36040              		.thumb
 36041              		.thumb_func
 36043              	bno055_set_gyro_highrate_x_hyst:
 36044              	.LVL4551:
 36045              	.LFB254:
17692:Core/Src/bno055.c **** 
17693:Core/Src/bno055.c **** /*!
17694:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate x hysteresis
17695:Core/Src/bno055.c ****  *  from page one register from 0x18 bit 5 to 6
17696:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccOloYeZ.s 			page 1022


17697:Core/Src/bno055.c ****  *  @param gyro_highrate_x_hyst_u8 : The value of gyro highrate x hysteresis
17698:Core/Src/bno055.c ****  *
17699:Core/Src/bno055.c ****  *  @return results of bus communication function
17700:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17701:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17702:Core/Src/bno055.c ****  *
17703:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
17704:Core/Src/bno055.c ****  *
17705:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_x_hyst_u8) *4 LSB
17706:Core/Src/bno055.c ****  *
17707:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
17708:Core/Src/bno055.c ****  *
17709:Core/Src/bno055.c ****  *  gyro_range_u8     | hysteresis      |     LSB
17710:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17711:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
17712:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
17713:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
17714:Core/Src/bno055.c ****  *
17715:Core/Src/bno055.c ****  */
17716:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_x_hyst(u8 gyro_highrate_x_hyst_u8)
17717:Core/Src/bno055.c **** {
 36046              		.loc 1 17717 1 is_stmt 1 view -0
 36047              		.cfi_startproc
 36048              		@ args = 0, pretend = 0, frame = 8
 36049              		@ frame_needed = 0, uses_anonymous_args = 0
 36050              		.loc 1 17717 1 is_stmt 0 view .LVU10402
 36051 0000 30B5     		push	{r4, r5, lr}
 36052              		.cfi_def_cfa_offset 12
 36053              		.cfi_offset 4, -12
 36054              		.cfi_offset 5, -8
 36055              		.cfi_offset 14, -4
 36056 0002 83B0     		sub	sp, sp, #12
 36057              		.cfi_def_cfa_offset 24
17718:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36058              		.loc 1 17718 5 is_stmt 1 view .LVU10403
 36059              	.LVL4552:
17719:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36060              		.loc 1 17719 5 view .LVU10404
 36061              		.loc 1 17719 8 is_stmt 0 view .LVU10405
 36062 0004 0023     		movs	r3, #0
 36063 0006 8DF80730 		strb	r3, [sp, #7]
17720:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36064              		.loc 1 17720 5 is_stmt 1 view .LVU10406
 36065              	.LVL4553:
17721:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 36066              		.loc 1 17721 5 view .LVU10407
 36067              		.loc 1 17721 8 is_stmt 0 view .LVU10408
 36068 000a 8DF80630 		strb	r3, [sp, #6]
17722:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 36069              		.loc 1 17722 5 is_stmt 1 view .LVU10409
 36070              	.LVL4554:
17723:Core/Src/bno055.c **** 
17724:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17725:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36071              		.loc 1 17725 5 view .LVU10410
 36072              		.loc 1 17725 18 is_stmt 0 view .LVU10411
 36073 000e 294B     		ldr	r3, .L2634
ARM GAS  /tmp/ccOloYeZ.s 			page 1023


 36074 0010 1B68     		ldr	r3, [r3]
 36075              		.loc 1 17725 8 view .LVU10412
 36076 0012 002B     		cmp	r3, #0
 36077 0014 4AD0     		beq	.L2626
 36078 0016 0546     		mov	r5, r0
17726:Core/Src/bno055.c ****     {
17727:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17728:Core/Src/bno055.c ****     }
17729:Core/Src/bno055.c ****     else
17730:Core/Src/bno055.c ****     {
17731:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17732:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17733:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17734:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 36079              		.loc 1 17734 9 is_stmt 1 view .LVU10413
 36080              		.loc 1 17734 19 is_stmt 0 view .LVU10414
 36081 0018 0DF10600 		add	r0, sp, #6
 36082              	.LVL4555:
 36083              		.loc 1 17734 19 view .LVU10415
 36084 001c FFF7FEFF 		bl	bno055_get_operation_mode
 36085              	.LVL4556:
17735:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 36086              		.loc 1 17735 9 is_stmt 1 view .LVU10416
 36087              		.loc 1 17735 12 is_stmt 0 view .LVU10417
 36088 0020 0446     		mov	r4, r0
 36089 0022 90BB     		cbnz	r0, .L2627
17736:Core/Src/bno055.c ****         {
17737:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36090              		.loc 1 17737 13 is_stmt 1 view .LVU10418
 36091              		.loc 1 17737 32 is_stmt 0 view .LVU10419
 36092 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 36093              		.loc 1 17737 16 view .LVU10420
 36094 0028 1BB9     		cbnz	r3, .L2631
 36095              	.LVL4557:
 36096              	.L2625:
17738:Core/Src/bno055.c ****             {
17739:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17740:Core/Src/bno055.c ****             }
17741:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 36097              		.loc 1 17741 13 is_stmt 1 view .LVU10421
 36098              		.loc 1 17741 16 is_stmt 0 view .LVU10422
 36099 002a 44B1     		cbz	r4, .L2632
17742:Core/Src/bno055.c ****             {
17743:Core/Src/bno055.c ****                 /* Write page as one */
17744:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17745:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17746:Core/Src/bno055.c ****                 {
17747:Core/Src/bno055.c ****                     /*Write the value of
17748:Core/Src/bno055.c ****                      * gyro highrate x hysteresis*/
17749:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17750:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
17751:Core/Src/bno055.c ****                                                               &data_u8r,
17752:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17753:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17754:Core/Src/bno055.c ****                     {
17755:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_HYST, gyro_
17756:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccOloYeZ.s 			page 1024


17757:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
17758:Core/Src/bno055.c ****                                                                     &data_u8r,
17759:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
17760:Core/Src/bno055.c ****                     }
17761:Core/Src/bno055.c ****                 }
17762:Core/Src/bno055.c ****                 else
17763:Core/Src/bno055.c ****                 {
17764:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17765:Core/Src/bno055.c ****                 }
17766:Core/Src/bno055.c ****             }
17767:Core/Src/bno055.c ****             else
17768:Core/Src/bno055.c ****             {
17769:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 36100              		.loc 1 17769 26 view .LVU10423
 36101 002c 4FF0FF34 		mov	r4, #-1
 36102              	.LVL4558:
 36103              		.loc 1 17769 26 view .LVU10424
 36104 0030 2DE0     		b	.L2624
 36105              	.LVL4559:
 36106              	.L2631:
17739:Core/Src/bno055.c ****             }
 36107              		.loc 1 17739 17 is_stmt 1 view .LVU10425
17739:Core/Src/bno055.c ****             }
 36108              		.loc 1 17739 28 is_stmt 0 view .LVU10426
 36109 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 36110              	.LVL4560:
17739:Core/Src/bno055.c ****             }
 36111              		.loc 1 17739 25 view .LVU10427
 36112 0036 54FA80F4 		uxtab	r4, r4, r0
 36113 003a 64B2     		sxtb	r4, r4
 36114              	.LVL4561:
17739:Core/Src/bno055.c ****             }
 36115              		.loc 1 17739 25 view .LVU10428
 36116 003c F5E7     		b	.L2625
 36117              	.L2632:
17744:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36118              		.loc 1 17744 17 is_stmt 1 view .LVU10429
17744:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36119              		.loc 1 17744 30 is_stmt 0 view .LVU10430
 36120 003e 0120     		movs	r0, #1
 36121 0040 FFF7FEFF 		bl	bno055_write_page_id
 36122              	.LVL4562:
17745:Core/Src/bno055.c ****                 {
 36123              		.loc 1 17745 17 is_stmt 1 view .LVU10431
17745:Core/Src/bno055.c ****                 {
 36124              		.loc 1 17745 20 is_stmt 0 view .LVU10432
 36125 0044 48BB     		cbnz	r0, .L2629
17749:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
 36126              		.loc 1 17749 21 is_stmt 1 view .LVU10433
17749:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
 36127              		.loc 1 17749 40 is_stmt 0 view .LVU10434
 36128 0046 1B4B     		ldr	r3, .L2634
 36129 0048 1868     		ldr	r0, [r3]
 36130              	.LVL4563:
17749:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
 36131              		.loc 1 17749 40 view .LVU10435
 36132 004a 0469     		ldr	r4, [r0, #16]
ARM GAS  /tmp/ccOloYeZ.s 			page 1025


 36133              	.LVL4564:
17749:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
 36134              		.loc 1 17749 32 view .LVU10436
 36135 004c 0123     		movs	r3, #1
 36136 004e 0DF10702 		add	r2, sp, #7
 36137 0052 1821     		movs	r1, #24
 36138 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36139 0056 A047     		blx	r4
 36140              	.LVL4565:
17753:Core/Src/bno055.c ****                     {
 36141              		.loc 1 17753 21 is_stmt 1 view .LVU10437
17753:Core/Src/bno055.c ****                     {
 36142              		.loc 1 17753 24 is_stmt 0 view .LVU10438
 36143 0058 0446     		mov	r4, r0
 36144 005a C0B9     		cbnz	r0, .L2624
17755:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36145              		.loc 1 17755 25 is_stmt 1 view .LVU10439
17755:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36146              		.loc 1 17755 36 is_stmt 0 view .LVU10440
 36147 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36148 0060 6801     		lsls	r0, r5, #5
 36149              	.LVL4566:
17755:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36150              		.loc 1 17755 36 view .LVU10441
 36151 0062 00F06000 		and	r0, r0, #96
 36152 0066 23F06003 		bic	r3, r3, #96
 36153 006a 0343     		orrs	r3, r3, r0
17755:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36154              		.loc 1 17755 34 view .LVU10442
 36155 006c 8DF80730 		strb	r3, [sp, #7]
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 36156              		.loc 1 17756 25 is_stmt 1 view .LVU10443
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 36157              		.loc 1 17756 45 is_stmt 0 view .LVU10444
 36158 0070 104B     		ldr	r3, .L2634
 36159 0072 1868     		ldr	r0, [r3]
 36160 0074 C568     		ldr	r5, [r0, #12]
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 36161              		.loc 1 17756 37 view .LVU10445
 36162 0076 0123     		movs	r3, #1
 36163 0078 0DF10702 		add	r2, sp, #7
 36164 007c 1821     		movs	r1, #24
 36165 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36166 0080 A847     		blx	r5
 36167              	.LVL4567:
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 36168              		.loc 1 17756 34 view .LVU10446
 36169 0082 54FA80F0 		uxtab	r0, r4, r0
 36170 0086 44B2     		sxtb	r4, r0
 36171              	.LVL4568:
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 36172              		.loc 1 17756 34 view .LVU10447
 36173 0088 01E0     		b	.L2624
 36174              	.LVL4569:
 36175              	.L2627:
17770:Core/Src/bno055.c ****             }
17771:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 1026


17772:Core/Src/bno055.c ****         else
17773:Core/Src/bno055.c ****         {
17774:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 36176              		.loc 1 17774 22 view .LVU10448
 36177 008a 4FF0FF34 		mov	r4, #-1
 36178              	.LVL4570:
 36179              	.L2624:
17775:Core/Src/bno055.c ****         }
17776:Core/Src/bno055.c ****     }
17777:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36180              		.loc 1 17777 5 is_stmt 1 view .LVU10449
 36181              		.loc 1 17777 24 is_stmt 0 view .LVU10450
 36182 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 36183              		.loc 1 17777 8 view .LVU10451
 36184 0092 28B9     		cbnz	r0, .L2633
 36185              	.LVL4571:
 36186              	.L2623:
17778:Core/Src/bno055.c ****     {
17779:Core/Src/bno055.c ****         /* set the operation mode of
17780:Core/Src/bno055.c ****          * previous operation mode*/
17781:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17782:Core/Src/bno055.c ****     }
17783:Core/Src/bno055.c **** 
17784:Core/Src/bno055.c ****     return com_rslt;
17785:Core/Src/bno055.c **** }
 36187              		.loc 1 17785 1 view .LVU10452
 36188 0094 2046     		mov	r0, r4
 36189 0096 03B0     		add	sp, sp, #12
 36190              		.cfi_remember_state
 36191              		.cfi_def_cfa_offset 12
 36192              		@ sp needed
 36193 0098 30BD     		pop	{r4, r5, pc}
 36194              	.LVL4572:
 36195              	.L2629:
 36196              		.cfi_restore_state
17764:Core/Src/bno055.c ****                 }
 36197              		.loc 1 17764 30 view .LVU10453
 36198 009a 4FF0FF34 		mov	r4, #-1
 36199              	.LVL4573:
17764:Core/Src/bno055.c ****                 }
 36200              		.loc 1 17764 30 view .LVU10454
 36201 009e F6E7     		b	.L2624
 36202              	.LVL4574:
 36203              	.L2633:
17781:Core/Src/bno055.c ****     }
 36204              		.loc 1 17781 9 is_stmt 1 view .LVU10455
17781:Core/Src/bno055.c ****     }
 36205              		.loc 1 17781 21 is_stmt 0 view .LVU10456
 36206 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 36207              	.LVL4575:
17781:Core/Src/bno055.c ****     }
 36208              		.loc 1 17781 18 view .LVU10457
 36209 00a4 54FA80F0 		uxtab	r0, r4, r0
 36210 00a8 44B2     		sxtb	r4, r0
 36211              	.LVL4576:
17781:Core/Src/bno055.c ****     }
 36212              		.loc 1 17781 18 view .LVU10458
ARM GAS  /tmp/ccOloYeZ.s 			page 1027


 36213 00aa F3E7     		b	.L2623
 36214              	.LVL4577:
 36215              	.L2626:
17727:Core/Src/bno055.c ****     }
 36216              		.loc 1 17727 16 view .LVU10459
 36217 00ac 6FF07E04 		mvn	r4, #126
 36218 00b0 F0E7     		b	.L2623
 36219              	.L2635:
 36220 00b2 00BF     		.align	2
 36221              	.L2634:
 36222 00b4 00000000 		.word	p_bno055
 36223              		.cfi_endproc
 36224              	.LFE254:
 36226              		.section	.text.bno055_get_gyro_highrate_x_durn,"ax",%progbits
 36227              		.align	1
 36228              		.global	bno055_get_gyro_highrate_x_durn
 36229              		.syntax unified
 36230              		.thumb
 36231              		.thumb_func
 36233              	bno055_get_gyro_highrate_x_durn:
 36234              	.LVL4578:
 36235              	.LFB255:
17786:Core/Src/bno055.c **** 
17787:Core/Src/bno055.c **** /*!
17788:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate x duration
17789:Core/Src/bno055.c ****  *  from page one register from 0x19 bit 0 to 7
17790:Core/Src/bno055.c ****  *
17791:Core/Src/bno055.c ****  *  @param gyro_highrate_x_durn_u8 : The value of gyro highrate x duration
17792:Core/Src/bno055.c ****  *
17793:Core/Src/bno055.c ****  *  @return results of bus communication function
17794:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17795:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17796:Core/Src/bno055.c ****  *
17797:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
17798:Core/Src/bno055.c ****  *
17799:Core/Src/bno055.c ****  *  (1 + gyro_highrate_x_durn_u8)*2.5ms
17800:Core/Src/bno055.c ****  *
17801:Core/Src/bno055.c ****  */
17802:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_x_durn(u8 *gyro_highrate_x_durn_u8)
17803:Core/Src/bno055.c **** {
 36236              		.loc 1 17803 1 is_stmt 1 view -0
 36237              		.cfi_startproc
 36238              		@ args = 0, pretend = 0, frame = 8
 36239              		@ frame_needed = 0, uses_anonymous_args = 0
 36240              		.loc 1 17803 1 is_stmt 0 view .LVU10461
 36241 0000 70B5     		push	{r4, r5, r6, lr}
 36242              		.cfi_def_cfa_offset 16
 36243              		.cfi_offset 4, -16
 36244              		.cfi_offset 5, -12
 36245              		.cfi_offset 6, -8
 36246              		.cfi_offset 14, -4
 36247 0002 82B0     		sub	sp, sp, #8
 36248              		.cfi_def_cfa_offset 24
17804:Core/Src/bno055.c ****     /* Variable used to return value of
17805:Core/Src/bno055.c ****      * communication routine*/
17806:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36249              		.loc 1 17806 5 is_stmt 1 view .LVU10462
ARM GAS  /tmp/ccOloYeZ.s 			page 1028


 36250              	.LVL4579:
17807:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36251              		.loc 1 17807 5 view .LVU10463
 36252              		.loc 1 17807 8 is_stmt 0 view .LVU10464
 36253 0004 0023     		movs	r3, #0
 36254 0006 8DF80730 		strb	r3, [sp, #7]
17808:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36255              		.loc 1 17808 5 is_stmt 1 view .LVU10465
 36256              	.LVL4580:
17809:Core/Src/bno055.c **** 
17810:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17811:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36257              		.loc 1 17811 5 view .LVU10466
 36258              		.loc 1 17811 18 is_stmt 0 view .LVU10467
 36259 000a 134B     		ldr	r3, .L2644
 36260 000c 1B68     		ldr	r3, [r3]
 36261              		.loc 1 17811 8 view .LVU10468
 36262 000e E3B1     		cbz	r3, .L2640
 36263 0010 0546     		mov	r5, r0
17812:Core/Src/bno055.c ****     {
17813:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17814:Core/Src/bno055.c ****     }
17815:Core/Src/bno055.c ****     else
17816:Core/Src/bno055.c ****     {
17817:Core/Src/bno055.c ****         /*condition check for page, gyro highrate x duration is
17818:Core/Src/bno055.c ****          * available in the page one*/
17819:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 36264              		.loc 1 17819 9 is_stmt 1 view .LVU10469
 36265              		.loc 1 17819 21 is_stmt 0 view .LVU10470
 36266 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36267              		.loc 1 17819 12 view .LVU10471
 36268 0014 012B     		cmp	r3, #1
 36269 0016 12D1     		bne	.L2643
 36270              	.LVL4581:
 36271              	.L2638:
17820:Core/Src/bno055.c ****         {
17821:Core/Src/bno055.c ****             /* Write page as one */
17822:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17823:Core/Src/bno055.c ****         }
17824:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 36272              		.loc 1 17824 53 discriminator 1 view .LVU10472
 36273 0018 0F4B     		ldr	r3, .L2644
 36274 001a 1B68     		ldr	r3, [r3]
 36275 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36276              		.loc 1 17824 41 discriminator 1 view .LVU10473
 36277 001e 012B     		cmp	r3, #1
 36278 0020 16D1     		bne	.L2641
 36279              	.L2639:
17825:Core/Src/bno055.c ****         {
17826:Core/Src/bno055.c ****             /* Read the value of gyro highrate x duration*/
17827:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 36280              		.loc 1 17827 13 is_stmt 1 view .LVU10474
 36281              		.loc 1 17827 32 is_stmt 0 view .LVU10475
 36282 0022 0D4B     		ldr	r3, .L2644
 36283 0024 1C68     		ldr	r4, [r3]
 36284 0026 2669     		ldr	r6, [r4, #16]
 36285              		.loc 1 17827 24 view .LVU10476
ARM GAS  /tmp/ccOloYeZ.s 			page 1029


 36286 0028 0123     		movs	r3, #1
 36287 002a 0DF10702 		add	r2, sp, #7
 36288 002e 1921     		movs	r1, #25
 36289 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 36290 0032 B047     		blx	r6
 36291              	.LVL4582:
17828:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_X_DURN_REG,
17829:Core/Src/bno055.c ****                                                       &data_u8r,
17830:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17831:Core/Src/bno055.c ****             *gyro_highrate_x_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_DURN);
 36292              		.loc 1 17831 13 is_stmt 1 view .LVU10477
 36293              		.loc 1 17831 38 is_stmt 0 view .LVU10478
 36294 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36295 0038 2B70     		strb	r3, [r5]
 36296              	.LVL4583:
 36297              	.L2637:
17832:Core/Src/bno055.c ****         }
17833:Core/Src/bno055.c ****         else
17834:Core/Src/bno055.c ****         {
17835:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17836:Core/Src/bno055.c ****         }
17837:Core/Src/bno055.c ****     }
17838:Core/Src/bno055.c **** 
17839:Core/Src/bno055.c ****     return com_rslt;
17840:Core/Src/bno055.c **** }
 36298              		.loc 1 17840 1 view .LVU10479
 36299 003a 02B0     		add	sp, sp, #8
 36300              		.cfi_remember_state
 36301              		.cfi_def_cfa_offset 16
 36302              		@ sp needed
 36303 003c 70BD     		pop	{r4, r5, r6, pc}
 36304              	.LVL4584:
 36305              	.L2643:
 36306              		.cfi_restore_state
17822:Core/Src/bno055.c ****         }
 36307              		.loc 1 17822 13 is_stmt 1 view .LVU10480
17822:Core/Src/bno055.c ****         }
 36308              		.loc 1 17822 23 is_stmt 0 view .LVU10481
 36309 003e 0120     		movs	r0, #1
 36310              	.LVL4585:
17822:Core/Src/bno055.c ****         }
 36311              		.loc 1 17822 23 view .LVU10482
 36312 0040 FFF7FEFF 		bl	bno055_write_page_id
 36313              	.LVL4586:
17824:Core/Src/bno055.c ****         {
 36314              		.loc 1 17824 9 is_stmt 1 view .LVU10483
17824:Core/Src/bno055.c ****         {
 36315              		.loc 1 17824 12 is_stmt 0 view .LVU10484
 36316 0044 0028     		cmp	r0, #0
 36317 0046 ECD0     		beq	.L2639
 36318 0048 E6E7     		b	.L2638
 36319              	.LVL4587:
 36320              	.L2640:
17813:Core/Src/bno055.c ****     }
 36321              		.loc 1 17813 16 view .LVU10485
 36322 004a 6FF07E00 		mvn	r0, #126
 36323              	.LVL4588:
ARM GAS  /tmp/ccOloYeZ.s 			page 1030


17813:Core/Src/bno055.c ****     }
 36324              		.loc 1 17813 16 view .LVU10486
 36325 004e F4E7     		b	.L2637
 36326              	.LVL4589:
 36327              	.L2641:
17835:Core/Src/bno055.c ****         }
 36328              		.loc 1 17835 22 view .LVU10487
 36329 0050 4FF0FF30 		mov	r0, #-1
 36330 0054 F1E7     		b	.L2637
 36331              	.L2645:
 36332 0056 00BF     		.align	2
 36333              	.L2644:
 36334 0058 00000000 		.word	p_bno055
 36335              		.cfi_endproc
 36336              	.LFE255:
 36338              		.section	.text.bno055_set_gyro_highrate_x_durn,"ax",%progbits
 36339              		.align	1
 36340              		.global	bno055_set_gyro_highrate_x_durn
 36341              		.syntax unified
 36342              		.thumb
 36343              		.thumb_func
 36345              	bno055_set_gyro_highrate_x_durn:
 36346              	.LVL4590:
 36347              	.LFB256:
17841:Core/Src/bno055.c **** 
17842:Core/Src/bno055.c **** /*!
17843:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate x duration
17844:Core/Src/bno055.c ****  *  from page one register from 0x19 bit 0 to 7
17845:Core/Src/bno055.c ****  *
17846:Core/Src/bno055.c ****  *  @param gyro_highrate_x_durn_u8 : The value of gyro highrate x duration
17847:Core/Src/bno055.c ****  *
17848:Core/Src/bno055.c ****  *  @return results of bus communication function
17849:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17850:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17851:Core/Src/bno055.c ****  *
17852:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
17853:Core/Src/bno055.c ****  *
17854:Core/Src/bno055.c ****  *  (1 + gyro_highrate_x_durn_u8)*2.5ms
17855:Core/Src/bno055.c ****  */
17856:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_x_durn(u8 gyro_highrate_x_durn_u8)
17857:Core/Src/bno055.c **** {
 36348              		.loc 1 17857 1 is_stmt 1 view -0
 36349              		.cfi_startproc
 36350              		@ args = 0, pretend = 0, frame = 8
 36351              		@ frame_needed = 0, uses_anonymous_args = 0
 36352              		.loc 1 17857 1 is_stmt 0 view .LVU10489
 36353 0000 30B5     		push	{r4, r5, lr}
 36354              		.cfi_def_cfa_offset 12
 36355              		.cfi_offset 4, -12
 36356              		.cfi_offset 5, -8
 36357              		.cfi_offset 14, -4
 36358 0002 83B0     		sub	sp, sp, #12
 36359              		.cfi_def_cfa_offset 24
17858:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36360              		.loc 1 17858 5 is_stmt 1 view .LVU10490
 36361              	.LVL4591:
17859:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccOloYeZ.s 			page 1031


 36362              		.loc 1 17859 5 view .LVU10491
 36363              		.loc 1 17859 8 is_stmt 0 view .LVU10492
 36364 0004 0023     		movs	r3, #0
 36365 0006 8DF80730 		strb	r3, [sp, #7]
17860:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36366              		.loc 1 17860 5 is_stmt 1 view .LVU10493
 36367              	.LVL4592:
17861:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 36368              		.loc 1 17861 5 view .LVU10494
 36369              		.loc 1 17861 8 is_stmt 0 view .LVU10495
 36370 000a 8DF80630 		strb	r3, [sp, #6]
17862:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 36371              		.loc 1 17862 5 is_stmt 1 view .LVU10496
 36372              	.LVL4593:
17863:Core/Src/bno055.c **** 
17864:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17865:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36373              		.loc 1 17865 5 view .LVU10497
 36374              		.loc 1 17865 18 is_stmt 0 view .LVU10498
 36375 000e 254B     		ldr	r3, .L2658
 36376 0010 1B68     		ldr	r3, [r3]
 36377              		.loc 1 17865 8 view .LVU10499
 36378 0012 002B     		cmp	r3, #0
 36379 0014 42D0     		beq	.L2650
 36380 0016 0546     		mov	r5, r0
17866:Core/Src/bno055.c ****     {
17867:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17868:Core/Src/bno055.c ****     }
17869:Core/Src/bno055.c ****     else
17870:Core/Src/bno055.c ****     {
17871:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17872:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17873:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17874:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 36381              		.loc 1 17874 9 is_stmt 1 view .LVU10500
 36382              		.loc 1 17874 19 is_stmt 0 view .LVU10501
 36383 0018 0DF10600 		add	r0, sp, #6
 36384              	.LVL4594:
 36385              		.loc 1 17874 19 view .LVU10502
 36386 001c FFF7FEFF 		bl	bno055_get_operation_mode
 36387              	.LVL4595:
17875:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 36388              		.loc 1 17875 9 is_stmt 1 view .LVU10503
 36389              		.loc 1 17875 12 is_stmt 0 view .LVU10504
 36390 0020 0446     		mov	r4, r0
 36391 0022 50BB     		cbnz	r0, .L2651
17876:Core/Src/bno055.c ****         {
17877:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36392              		.loc 1 17877 13 is_stmt 1 view .LVU10505
 36393              		.loc 1 17877 32 is_stmt 0 view .LVU10506
 36394 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 36395              		.loc 1 17877 16 view .LVU10507
 36396 0028 1BB9     		cbnz	r3, .L2655
 36397              	.LVL4596:
 36398              	.L2649:
17878:Core/Src/bno055.c ****             {
17879:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
ARM GAS  /tmp/ccOloYeZ.s 			page 1032


17880:Core/Src/bno055.c ****             }
17881:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 36399              		.loc 1 17881 13 is_stmt 1 view .LVU10508
 36400              		.loc 1 17881 16 is_stmt 0 view .LVU10509
 36401 002a 44B1     		cbz	r4, .L2656
17882:Core/Src/bno055.c ****             {
17883:Core/Src/bno055.c ****                 /* Write page as one */
17884:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17885:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17886:Core/Src/bno055.c ****                 {
17887:Core/Src/bno055.c ****                     /* Write the value
17888:Core/Src/bno055.c ****                      * of gyro highrate x duration*/
17889:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17890:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
17891:Core/Src/bno055.c ****                                                               &data_u8r,
17892:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17893:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17894:Core/Src/bno055.c ****                     {
17895:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_DURN, gyro_
17896:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17897:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
17898:Core/Src/bno055.c ****                                                                     &data_u8r,
17899:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
17900:Core/Src/bno055.c ****                     }
17901:Core/Src/bno055.c ****                 }
17902:Core/Src/bno055.c ****                 else
17903:Core/Src/bno055.c ****                 {
17904:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17905:Core/Src/bno055.c ****                 }
17906:Core/Src/bno055.c ****             }
17907:Core/Src/bno055.c ****             else
17908:Core/Src/bno055.c ****             {
17909:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 36402              		.loc 1 17909 26 view .LVU10510
 36403 002c 4FF0FF34 		mov	r4, #-1
 36404              	.LVL4597:
 36405              		.loc 1 17909 26 view .LVU10511
 36406 0030 25E0     		b	.L2648
 36407              	.LVL4598:
 36408              	.L2655:
17879:Core/Src/bno055.c ****             }
 36409              		.loc 1 17879 17 is_stmt 1 view .LVU10512
17879:Core/Src/bno055.c ****             }
 36410              		.loc 1 17879 28 is_stmt 0 view .LVU10513
 36411 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 36412              	.LVL4599:
17879:Core/Src/bno055.c ****             }
 36413              		.loc 1 17879 25 view .LVU10514
 36414 0036 54FA80F4 		uxtab	r4, r4, r0
 36415 003a 64B2     		sxtb	r4, r4
 36416              	.LVL4600:
17879:Core/Src/bno055.c ****             }
 36417              		.loc 1 17879 25 view .LVU10515
 36418 003c F5E7     		b	.L2649
 36419              	.L2656:
17884:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36420              		.loc 1 17884 17 is_stmt 1 view .LVU10516
ARM GAS  /tmp/ccOloYeZ.s 			page 1033


17884:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36421              		.loc 1 17884 30 is_stmt 0 view .LVU10517
 36422 003e 0120     		movs	r0, #1
 36423 0040 FFF7FEFF 		bl	bno055_write_page_id
 36424              	.LVL4601:
17885:Core/Src/bno055.c ****                 {
 36425              		.loc 1 17885 17 is_stmt 1 view .LVU10518
17885:Core/Src/bno055.c ****                 {
 36426              		.loc 1 17885 20 is_stmt 0 view .LVU10519
 36427 0044 08BB     		cbnz	r0, .L2653
17889:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
 36428              		.loc 1 17889 21 is_stmt 1 view .LVU10520
17889:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
 36429              		.loc 1 17889 40 is_stmt 0 view .LVU10521
 36430 0046 174B     		ldr	r3, .L2658
 36431 0048 1868     		ldr	r0, [r3]
 36432              	.LVL4602:
17889:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
 36433              		.loc 1 17889 40 view .LVU10522
 36434 004a 0469     		ldr	r4, [r0, #16]
 36435              	.LVL4603:
17889:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
 36436              		.loc 1 17889 32 view .LVU10523
 36437 004c 0123     		movs	r3, #1
 36438 004e 0DF10702 		add	r2, sp, #7
 36439 0052 1921     		movs	r1, #25
 36440 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36441 0056 A047     		blx	r4
 36442              	.LVL4604:
17893:Core/Src/bno055.c ****                     {
 36443              		.loc 1 17893 21 is_stmt 1 view .LVU10524
17893:Core/Src/bno055.c ****                     {
 36444              		.loc 1 17893 24 is_stmt 0 view .LVU10525
 36445 0058 0446     		mov	r4, r0
 36446 005a 80B9     		cbnz	r0, .L2648
17895:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36447              		.loc 1 17895 25 is_stmt 1 view .LVU10526
17895:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36448              		.loc 1 17895 34 is_stmt 0 view .LVU10527
 36449 005c 8DF80750 		strb	r5, [sp, #7]
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 36450              		.loc 1 17896 25 is_stmt 1 view .LVU10528
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 36451              		.loc 1 17896 45 is_stmt 0 view .LVU10529
 36452 0060 104B     		ldr	r3, .L2658
 36453 0062 1868     		ldr	r0, [r3]
 36454              	.LVL4605:
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 36455              		.loc 1 17896 45 view .LVU10530
 36456 0064 C568     		ldr	r5, [r0, #12]
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 36457              		.loc 1 17896 37 view .LVU10531
 36458 0066 0123     		movs	r3, #1
 36459 0068 0DF10702 		add	r2, sp, #7
 36460 006c 1921     		movs	r1, #25
 36461 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36462 0070 A847     		blx	r5
ARM GAS  /tmp/ccOloYeZ.s 			page 1034


 36463              	.LVL4606:
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 36464              		.loc 1 17896 34 view .LVU10532
 36465 0072 54FA80F0 		uxtab	r0, r4, r0
 36466 0076 44B2     		sxtb	r4, r0
 36467              	.LVL4607:
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 36468              		.loc 1 17896 34 view .LVU10533
 36469 0078 01E0     		b	.L2648
 36470              	.LVL4608:
 36471              	.L2651:
17910:Core/Src/bno055.c ****             }
17911:Core/Src/bno055.c ****         }
17912:Core/Src/bno055.c ****         else
17913:Core/Src/bno055.c ****         {
17914:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 36472              		.loc 1 17914 22 view .LVU10534
 36473 007a 4FF0FF34 		mov	r4, #-1
 36474              	.LVL4609:
 36475              	.L2648:
17915:Core/Src/bno055.c ****         }
17916:Core/Src/bno055.c ****     }
17917:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36476              		.loc 1 17917 5 is_stmt 1 view .LVU10535
 36477              		.loc 1 17917 24 is_stmt 0 view .LVU10536
 36478 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 36479              		.loc 1 17917 8 view .LVU10537
 36480 0082 28B9     		cbnz	r0, .L2657
 36481              	.LVL4610:
 36482              	.L2647:
17918:Core/Src/bno055.c ****     {
17919:Core/Src/bno055.c ****         /* set the operation mode of
17920:Core/Src/bno055.c ****          * previous operation mode*/
17921:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17922:Core/Src/bno055.c ****     }
17923:Core/Src/bno055.c **** 
17924:Core/Src/bno055.c ****     return com_rslt;
17925:Core/Src/bno055.c **** }
 36483              		.loc 1 17925 1 view .LVU10538
 36484 0084 2046     		mov	r0, r4
 36485 0086 03B0     		add	sp, sp, #12
 36486              		.cfi_remember_state
 36487              		.cfi_def_cfa_offset 12
 36488              		@ sp needed
 36489 0088 30BD     		pop	{r4, r5, pc}
 36490              	.LVL4611:
 36491              	.L2653:
 36492              		.cfi_restore_state
17904:Core/Src/bno055.c ****                 }
 36493              		.loc 1 17904 30 view .LVU10539
 36494 008a 4FF0FF34 		mov	r4, #-1
 36495              	.LVL4612:
17904:Core/Src/bno055.c ****                 }
 36496              		.loc 1 17904 30 view .LVU10540
 36497 008e F6E7     		b	.L2648
 36498              	.LVL4613:
 36499              	.L2657:
ARM GAS  /tmp/ccOloYeZ.s 			page 1035


17921:Core/Src/bno055.c ****     }
 36500              		.loc 1 17921 9 is_stmt 1 view .LVU10541
17921:Core/Src/bno055.c ****     }
 36501              		.loc 1 17921 21 is_stmt 0 view .LVU10542
 36502 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 36503              	.LVL4614:
17921:Core/Src/bno055.c ****     }
 36504              		.loc 1 17921 18 view .LVU10543
 36505 0094 54FA80F0 		uxtab	r0, r4, r0
 36506 0098 44B2     		sxtb	r4, r0
 36507              	.LVL4615:
17921:Core/Src/bno055.c ****     }
 36508              		.loc 1 17921 18 view .LVU10544
 36509 009a F3E7     		b	.L2647
 36510              	.LVL4616:
 36511              	.L2650:
17867:Core/Src/bno055.c ****     }
 36512              		.loc 1 17867 16 view .LVU10545
 36513 009c 6FF07E04 		mvn	r4, #126
 36514 00a0 F0E7     		b	.L2647
 36515              	.L2659:
 36516 00a2 00BF     		.align	2
 36517              	.L2658:
 36518 00a4 00000000 		.word	p_bno055
 36519              		.cfi_endproc
 36520              	.LFE256:
 36522              		.section	.text.bno055_get_gyro_highrate_y_thres,"ax",%progbits
 36523              		.align	1
 36524              		.global	bno055_get_gyro_highrate_y_thres
 36525              		.syntax unified
 36526              		.thumb
 36527              		.thumb_func
 36529              	bno055_get_gyro_highrate_y_thres:
 36530              	.LVL4617:
 36531              	.LFB257:
17926:Core/Src/bno055.c **** 
17927:Core/Src/bno055.c **** /*!
17928:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate y threshold
17929:Core/Src/bno055.c ****  *  from page one register from 0x1A bit 0 to 4
17930:Core/Src/bno055.c ****  *
17931:Core/Src/bno055.c ****  *  @param gyro_highrate_y_thres_u8 : The value of gyro highrate y threshold
17932:Core/Src/bno055.c ****  *
17933:Core/Src/bno055.c ****  *  @return results of bus communication function
17934:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17935:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17936:Core/Src/bno055.c ****  *
17937:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
17938:Core/Src/bno055.c ****  *  selection of gyro range
17939:Core/Src/bno055.c ****  *
17940:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
17941:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17942:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
17943:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
17944:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
17945:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
17946:Core/Src/bno055.c ****  *
17947:Core/Src/bno055.c ****  */
ARM GAS  /tmp/ccOloYeZ.s 			page 1036


17948:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_y_thres(u8 *gyro_highrate_y_thres_u8)
17949:Core/Src/bno055.c **** {
 36532              		.loc 1 17949 1 is_stmt 1 view -0
 36533              		.cfi_startproc
 36534              		@ args = 0, pretend = 0, frame = 8
 36535              		@ frame_needed = 0, uses_anonymous_args = 0
 36536              		.loc 1 17949 1 is_stmt 0 view .LVU10547
 36537 0000 30B5     		push	{r4, r5, lr}
 36538              		.cfi_def_cfa_offset 12
 36539              		.cfi_offset 4, -12
 36540              		.cfi_offset 5, -8
 36541              		.cfi_offset 14, -4
 36542 0002 83B0     		sub	sp, sp, #12
 36543              		.cfi_def_cfa_offset 24
17950:Core/Src/bno055.c ****     /* Variable used to return value of
17951:Core/Src/bno055.c ****      * communication routine*/
17952:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36544              		.loc 1 17952 5 is_stmt 1 view .LVU10548
 36545              	.LVL4618:
17953:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36546              		.loc 1 17953 5 view .LVU10549
 36547              		.loc 1 17953 8 is_stmt 0 view .LVU10550
 36548 0004 0023     		movs	r3, #0
 36549 0006 8DF80730 		strb	r3, [sp, #7]
17954:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36550              		.loc 1 17954 5 is_stmt 1 view .LVU10551
 36551              	.LVL4619:
17955:Core/Src/bno055.c **** 
17956:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17957:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36552              		.loc 1 17957 5 view .LVU10552
 36553              		.loc 1 17957 18 is_stmt 0 view .LVU10553
 36554 000a 144B     		ldr	r3, .L2668
 36555 000c 1B68     		ldr	r3, [r3]
 36556              		.loc 1 17957 8 view .LVU10554
 36557 000e F3B1     		cbz	r3, .L2664
 36558 0010 0446     		mov	r4, r0
17958:Core/Src/bno055.c ****     {
17959:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17960:Core/Src/bno055.c ****     }
17961:Core/Src/bno055.c ****     else
17962:Core/Src/bno055.c ****     {
17963:Core/Src/bno055.c ****         /*condition check for page, gyro highrate y threshold is
17964:Core/Src/bno055.c ****          * available in the page one*/
17965:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 36559              		.loc 1 17965 9 is_stmt 1 view .LVU10555
 36560              		.loc 1 17965 21 is_stmt 0 view .LVU10556
 36561 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36562              		.loc 1 17965 12 view .LVU10557
 36563 0014 012B     		cmp	r3, #1
 36564 0016 14D1     		bne	.L2667
 36565              	.LVL4620:
 36566              	.L2662:
17966:Core/Src/bno055.c ****         {
17967:Core/Src/bno055.c ****             /* Write page as one */
17968:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17969:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 1037


17970:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 36567              		.loc 1 17970 53 discriminator 1 view .LVU10558
 36568 0018 104B     		ldr	r3, .L2668
 36569 001a 1B68     		ldr	r3, [r3]
 36570 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36571              		.loc 1 17970 41 discriminator 1 view .LVU10559
 36572 001e 012B     		cmp	r3, #1
 36573 0020 18D1     		bne	.L2665
 36574              	.L2663:
17971:Core/Src/bno055.c ****         {
17972:Core/Src/bno055.c ****             /* Read the value of gyro highrate y threshold*/
17973:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 36575              		.loc 1 17973 13 is_stmt 1 view .LVU10560
 36576              		.loc 1 17973 32 is_stmt 0 view .LVU10561
 36577 0022 0E4B     		ldr	r3, .L2668
 36578 0024 1868     		ldr	r0, [r3]
 36579 0026 0569     		ldr	r5, [r0, #16]
 36580              		.loc 1 17973 24 view .LVU10562
 36581 0028 0123     		movs	r3, #1
 36582 002a 0DF10702 		add	r2, sp, #7
 36583 002e 1A21     		movs	r1, #26
 36584 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36585 0032 A847     		blx	r5
 36586              	.LVL4621:
17974:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Y_THRES_REG,
17975:Core/Src/bno055.c ****                                                       &data_u8r,
17976:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17977:Core/Src/bno055.c ****             *gyro_highrate_y_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_THRES)
 36587              		.loc 1 17977 13 is_stmt 1 view .LVU10563
 36588              		.loc 1 17977 41 is_stmt 0 view .LVU10564
 36589 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36590 0038 03F01F03 		and	r3, r3, #31
 36591              		.loc 1 17977 39 view .LVU10565
 36592 003c 2370     		strb	r3, [r4]
 36593              	.LVL4622:
 36594              	.L2661:
17978:Core/Src/bno055.c ****         }
17979:Core/Src/bno055.c ****         else
17980:Core/Src/bno055.c ****         {
17981:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17982:Core/Src/bno055.c ****         }
17983:Core/Src/bno055.c ****     }
17984:Core/Src/bno055.c **** 
17985:Core/Src/bno055.c ****     return com_rslt;
17986:Core/Src/bno055.c **** }
 36595              		.loc 1 17986 1 view .LVU10566
 36596 003e 03B0     		add	sp, sp, #12
 36597              		.cfi_remember_state
 36598              		.cfi_def_cfa_offset 12
 36599              		@ sp needed
 36600 0040 30BD     		pop	{r4, r5, pc}
 36601              	.LVL4623:
 36602              	.L2667:
 36603              		.cfi_restore_state
17968:Core/Src/bno055.c ****         }
 36604              		.loc 1 17968 13 is_stmt 1 view .LVU10567
17968:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccOloYeZ.s 			page 1038


 36605              		.loc 1 17968 23 is_stmt 0 view .LVU10568
 36606 0042 0120     		movs	r0, #1
 36607              	.LVL4624:
17968:Core/Src/bno055.c ****         }
 36608              		.loc 1 17968 23 view .LVU10569
 36609 0044 FFF7FEFF 		bl	bno055_write_page_id
 36610              	.LVL4625:
17970:Core/Src/bno055.c ****         {
 36611              		.loc 1 17970 9 is_stmt 1 view .LVU10570
17970:Core/Src/bno055.c ****         {
 36612              		.loc 1 17970 12 is_stmt 0 view .LVU10571
 36613 0048 0028     		cmp	r0, #0
 36614 004a EAD0     		beq	.L2663
 36615 004c E4E7     		b	.L2662
 36616              	.LVL4626:
 36617              	.L2664:
17959:Core/Src/bno055.c ****     }
 36618              		.loc 1 17959 16 view .LVU10572
 36619 004e 6FF07E00 		mvn	r0, #126
 36620              	.LVL4627:
17959:Core/Src/bno055.c ****     }
 36621              		.loc 1 17959 16 view .LVU10573
 36622 0052 F4E7     		b	.L2661
 36623              	.LVL4628:
 36624              	.L2665:
17981:Core/Src/bno055.c ****         }
 36625              		.loc 1 17981 22 view .LVU10574
 36626 0054 4FF0FF30 		mov	r0, #-1
 36627 0058 F1E7     		b	.L2661
 36628              	.L2669:
 36629 005a 00BF     		.align	2
 36630              	.L2668:
 36631 005c 00000000 		.word	p_bno055
 36632              		.cfi_endproc
 36633              	.LFE257:
 36635              		.section	.text.bno055_set_gyro_highrate_y_thres,"ax",%progbits
 36636              		.align	1
 36637              		.global	bno055_set_gyro_highrate_y_thres
 36638              		.syntax unified
 36639              		.thumb
 36640              		.thumb_func
 36642              	bno055_set_gyro_highrate_y_thres:
 36643              	.LVL4629:
 36644              	.LFB258:
17987:Core/Src/bno055.c **** 
17988:Core/Src/bno055.c **** /*!
17989:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate y threshold
17990:Core/Src/bno055.c ****  *  from page one register from 0x1A bit 0 to 4
17991:Core/Src/bno055.c ****  *
17992:Core/Src/bno055.c ****  *  @param gyro_highrate_y_thres_u8 : The value of gyro highrate y threshold
17993:Core/Src/bno055.c ****  *
17994:Core/Src/bno055.c ****  *  @return results of bus communication function
17995:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17996:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17997:Core/Src/bno055.c ****  *
17998:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
17999:Core/Src/bno055.c ****  *  selection of gyro range
ARM GAS  /tmp/ccOloYeZ.s 			page 1039


18000:Core/Src/bno055.c ****  *
18001:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
18002:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18003:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
18004:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
18005:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
18006:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
18007:Core/Src/bno055.c ****  *
18008:Core/Src/bno055.c ****  */
18009:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_y_thres(u8 gyro_highrate_y_thres_u8)
18010:Core/Src/bno055.c **** {
 36645              		.loc 1 18010 1 is_stmt 1 view -0
 36646              		.cfi_startproc
 36647              		@ args = 0, pretend = 0, frame = 8
 36648              		@ frame_needed = 0, uses_anonymous_args = 0
 36649              		.loc 1 18010 1 is_stmt 0 view .LVU10576
 36650 0000 30B5     		push	{r4, r5, lr}
 36651              		.cfi_def_cfa_offset 12
 36652              		.cfi_offset 4, -12
 36653              		.cfi_offset 5, -8
 36654              		.cfi_offset 14, -4
 36655 0002 83B0     		sub	sp, sp, #12
 36656              		.cfi_def_cfa_offset 24
18011:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36657              		.loc 1 18011 5 is_stmt 1 view .LVU10577
 36658              	.LVL4630:
18012:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36659              		.loc 1 18012 5 view .LVU10578
 36660              		.loc 1 18012 8 is_stmt 0 view .LVU10579
 36661 0004 0023     		movs	r3, #0
 36662 0006 8DF80730 		strb	r3, [sp, #7]
18013:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36663              		.loc 1 18013 5 is_stmt 1 view .LVU10580
 36664              	.LVL4631:
18014:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 36665              		.loc 1 18014 5 view .LVU10581
 36666              		.loc 1 18014 8 is_stmt 0 view .LVU10582
 36667 000a 8DF80630 		strb	r3, [sp, #6]
18015:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 36668              		.loc 1 18015 5 is_stmt 1 view .LVU10583
 36669              	.LVL4632:
18016:Core/Src/bno055.c **** 
18017:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18018:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36670              		.loc 1 18018 5 view .LVU10584
 36671              		.loc 1 18018 18 is_stmt 0 view .LVU10585
 36672 000e 284B     		ldr	r3, .L2682
 36673 0010 1B68     		ldr	r3, [r3]
 36674              		.loc 1 18018 8 view .LVU10586
 36675 0012 002B     		cmp	r3, #0
 36676 0014 49D0     		beq	.L2674
 36677 0016 0546     		mov	r5, r0
18019:Core/Src/bno055.c ****     {
18020:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18021:Core/Src/bno055.c ****     }
18022:Core/Src/bno055.c ****     else
18023:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 1040


18024:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18025:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18026:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18027:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 36678              		.loc 1 18027 9 is_stmt 1 view .LVU10587
 36679              		.loc 1 18027 19 is_stmt 0 view .LVU10588
 36680 0018 0DF10600 		add	r0, sp, #6
 36681              	.LVL4633:
 36682              		.loc 1 18027 19 view .LVU10589
 36683 001c FFF7FEFF 		bl	bno055_get_operation_mode
 36684              	.LVL4634:
18028:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 36685              		.loc 1 18028 9 is_stmt 1 view .LVU10590
 36686              		.loc 1 18028 12 is_stmt 0 view .LVU10591
 36687 0020 0446     		mov	r4, r0
 36688 0022 88BB     		cbnz	r0, .L2675
18029:Core/Src/bno055.c ****         {
18030:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36689              		.loc 1 18030 13 is_stmt 1 view .LVU10592
 36690              		.loc 1 18030 32 is_stmt 0 view .LVU10593
 36691 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 36692              		.loc 1 18030 16 view .LVU10594
 36693 0028 1BB9     		cbnz	r3, .L2679
 36694              	.LVL4635:
 36695              	.L2673:
18031:Core/Src/bno055.c ****             {
18032:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18033:Core/Src/bno055.c ****             }
18034:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 36696              		.loc 1 18034 13 is_stmt 1 view .LVU10595
 36697              		.loc 1 18034 16 is_stmt 0 view .LVU10596
 36698 002a 44B1     		cbz	r4, .L2680
18035:Core/Src/bno055.c ****             {
18036:Core/Src/bno055.c ****                 /* Write page as one */
18037:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18038:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18039:Core/Src/bno055.c ****                 {
18040:Core/Src/bno055.c ****                     /* Write the value
18041:Core/Src/bno055.c ****                      * of gyro highrate y threshold*/
18042:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18043:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
18044:Core/Src/bno055.c ****                                                               &data_u8r,
18045:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18046:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18047:Core/Src/bno055.c ****                     {
18048:Core/Src/bno055.c ****                         data_u8r =
18049:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_THRES, gyro_highra
18050:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18051:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
18052:Core/Src/bno055.c ****                                                                     &data_u8r,
18053:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18054:Core/Src/bno055.c ****                     }
18055:Core/Src/bno055.c ****                 }
18056:Core/Src/bno055.c ****                 else
18057:Core/Src/bno055.c ****                 {
18058:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18059:Core/Src/bno055.c ****                 }
ARM GAS  /tmp/ccOloYeZ.s 			page 1041


18060:Core/Src/bno055.c ****             }
18061:Core/Src/bno055.c ****             else
18062:Core/Src/bno055.c ****             {
18063:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 36699              		.loc 1 18063 26 view .LVU10597
 36700 002c 4FF0FF34 		mov	r4, #-1
 36701              	.LVL4636:
 36702              		.loc 1 18063 26 view .LVU10598
 36703 0030 2CE0     		b	.L2672
 36704              	.LVL4637:
 36705              	.L2679:
18032:Core/Src/bno055.c ****             }
 36706              		.loc 1 18032 17 is_stmt 1 view .LVU10599
18032:Core/Src/bno055.c ****             }
 36707              		.loc 1 18032 28 is_stmt 0 view .LVU10600
 36708 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 36709              	.LVL4638:
18032:Core/Src/bno055.c ****             }
 36710              		.loc 1 18032 25 view .LVU10601
 36711 0036 54FA80F4 		uxtab	r4, r4, r0
 36712 003a 64B2     		sxtb	r4, r4
 36713              	.LVL4639:
18032:Core/Src/bno055.c ****             }
 36714              		.loc 1 18032 25 view .LVU10602
 36715 003c F5E7     		b	.L2673
 36716              	.L2680:
18037:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36717              		.loc 1 18037 17 is_stmt 1 view .LVU10603
18037:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36718              		.loc 1 18037 30 is_stmt 0 view .LVU10604
 36719 003e 0120     		movs	r0, #1
 36720 0040 FFF7FEFF 		bl	bno055_write_page_id
 36721              	.LVL4640:
18038:Core/Src/bno055.c ****                 {
 36722              		.loc 1 18038 17 is_stmt 1 view .LVU10605
18038:Core/Src/bno055.c ****                 {
 36723              		.loc 1 18038 20 is_stmt 0 view .LVU10606
 36724 0044 40BB     		cbnz	r0, .L2677
18042:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
 36725              		.loc 1 18042 21 is_stmt 1 view .LVU10607
18042:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
 36726              		.loc 1 18042 40 is_stmt 0 view .LVU10608
 36727 0046 1A4B     		ldr	r3, .L2682
 36728 0048 1868     		ldr	r0, [r3]
 36729              	.LVL4641:
18042:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
 36730              		.loc 1 18042 40 view .LVU10609
 36731 004a 0469     		ldr	r4, [r0, #16]
 36732              	.LVL4642:
18042:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
 36733              		.loc 1 18042 32 view .LVU10610
 36734 004c 0123     		movs	r3, #1
 36735 004e 0DF10702 		add	r2, sp, #7
 36736 0052 1A21     		movs	r1, #26
 36737 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36738 0056 A047     		blx	r4
 36739              	.LVL4643:
ARM GAS  /tmp/ccOloYeZ.s 			page 1042


18046:Core/Src/bno055.c ****                     {
 36740              		.loc 1 18046 21 is_stmt 1 view .LVU10611
18046:Core/Src/bno055.c ****                     {
 36741              		.loc 1 18046 24 is_stmt 0 view .LVU10612
 36742 0058 0446     		mov	r4, r0
 36743 005a B8B9     		cbnz	r0, .L2672
18048:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_THRES, gyro_highra
 36744              		.loc 1 18048 25 is_stmt 1 view .LVU10613
18049:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36745              		.loc 1 18049 29 is_stmt 0 view .LVU10614
 36746 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
18048:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_THRES, gyro_highra
 36747              		.loc 1 18048 34 view .LVU10615
 36748 0060 23F01F03 		bic	r3, r3, #31
 36749 0064 05F01F00 		and	r0, r5, #31
 36750              	.LVL4644:
18048:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_THRES, gyro_highra
 36751              		.loc 1 18048 34 view .LVU10616
 36752 0068 0343     		orrs	r3, r3, r0
 36753 006a 8DF80730 		strb	r3, [sp, #7]
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 36754              		.loc 1 18050 25 is_stmt 1 view .LVU10617
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 36755              		.loc 1 18050 45 is_stmt 0 view .LVU10618
 36756 006e 104B     		ldr	r3, .L2682
 36757 0070 1868     		ldr	r0, [r3]
 36758 0072 C568     		ldr	r5, [r0, #12]
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 36759              		.loc 1 18050 37 view .LVU10619
 36760 0074 0123     		movs	r3, #1
 36761 0076 0DF10702 		add	r2, sp, #7
 36762 007a 1A21     		movs	r1, #26
 36763 007c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36764 007e A847     		blx	r5
 36765              	.LVL4645:
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 36766              		.loc 1 18050 34 view .LVU10620
 36767 0080 54FA80F0 		uxtab	r0, r4, r0
 36768 0084 44B2     		sxtb	r4, r0
 36769              	.LVL4646:
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 36770              		.loc 1 18050 34 view .LVU10621
 36771 0086 01E0     		b	.L2672
 36772              	.LVL4647:
 36773              	.L2675:
18064:Core/Src/bno055.c ****             }
18065:Core/Src/bno055.c ****         }
18066:Core/Src/bno055.c ****         else
18067:Core/Src/bno055.c ****         {
18068:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 36774              		.loc 1 18068 22 view .LVU10622
 36775 0088 4FF0FF34 		mov	r4, #-1
 36776              	.LVL4648:
 36777              	.L2672:
18069:Core/Src/bno055.c ****         }
18070:Core/Src/bno055.c ****     }
18071:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
ARM GAS  /tmp/ccOloYeZ.s 			page 1043


 36778              		.loc 1 18071 5 is_stmt 1 view .LVU10623
 36779              		.loc 1 18071 24 is_stmt 0 view .LVU10624
 36780 008c 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 36781              		.loc 1 18071 8 view .LVU10625
 36782 0090 28B9     		cbnz	r0, .L2681
 36783              	.LVL4649:
 36784              	.L2671:
18072:Core/Src/bno055.c ****     {
18073:Core/Src/bno055.c ****         /* set the operation mode of
18074:Core/Src/bno055.c ****          * previous operation mode*/
18075:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18076:Core/Src/bno055.c ****     }
18077:Core/Src/bno055.c **** 
18078:Core/Src/bno055.c ****     return com_rslt;
18079:Core/Src/bno055.c **** }
 36785              		.loc 1 18079 1 view .LVU10626
 36786 0092 2046     		mov	r0, r4
 36787 0094 03B0     		add	sp, sp, #12
 36788              		.cfi_remember_state
 36789              		.cfi_def_cfa_offset 12
 36790              		@ sp needed
 36791 0096 30BD     		pop	{r4, r5, pc}
 36792              	.LVL4650:
 36793              	.L2677:
 36794              		.cfi_restore_state
18058:Core/Src/bno055.c ****                 }
 36795              		.loc 1 18058 30 view .LVU10627
 36796 0098 4FF0FF34 		mov	r4, #-1
 36797              	.LVL4651:
18058:Core/Src/bno055.c ****                 }
 36798              		.loc 1 18058 30 view .LVU10628
 36799 009c F6E7     		b	.L2672
 36800              	.LVL4652:
 36801              	.L2681:
18075:Core/Src/bno055.c ****     }
 36802              		.loc 1 18075 9 is_stmt 1 view .LVU10629
18075:Core/Src/bno055.c ****     }
 36803              		.loc 1 18075 21 is_stmt 0 view .LVU10630
 36804 009e FFF7FEFF 		bl	bno055_set_operation_mode
 36805              	.LVL4653:
18075:Core/Src/bno055.c ****     }
 36806              		.loc 1 18075 18 view .LVU10631
 36807 00a2 54FA80F0 		uxtab	r0, r4, r0
 36808 00a6 44B2     		sxtb	r4, r0
 36809              	.LVL4654:
18075:Core/Src/bno055.c ****     }
 36810              		.loc 1 18075 18 view .LVU10632
 36811 00a8 F3E7     		b	.L2671
 36812              	.LVL4655:
 36813              	.L2674:
18020:Core/Src/bno055.c ****     }
 36814              		.loc 1 18020 16 view .LVU10633
 36815 00aa 6FF07E04 		mvn	r4, #126
 36816 00ae F0E7     		b	.L2671
 36817              	.L2683:
 36818              		.align	2
 36819              	.L2682:
ARM GAS  /tmp/ccOloYeZ.s 			page 1044


 36820 00b0 00000000 		.word	p_bno055
 36821              		.cfi_endproc
 36822              	.LFE258:
 36824              		.section	.text.bno055_get_gyro_highrate_y_hyst,"ax",%progbits
 36825              		.align	1
 36826              		.global	bno055_get_gyro_highrate_y_hyst
 36827              		.syntax unified
 36828              		.thumb
 36829              		.thumb_func
 36831              	bno055_get_gyro_highrate_y_hyst:
 36832              	.LVL4656:
 36833              	.LFB259:
18080:Core/Src/bno055.c **** 
18081:Core/Src/bno055.c **** /*!
18082:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate y hysteresis
18083:Core/Src/bno055.c ****  *  from page one register from 0x1A bit 5 to 6
18084:Core/Src/bno055.c ****  *
18085:Core/Src/bno055.c ****  *  @param gyro_highrate_y_hyst_u8 : The value of gyro highrate y hysteresis
18086:Core/Src/bno055.c ****  *
18087:Core/Src/bno055.c ****  *  @return results of bus communication function
18088:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18089:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18090:Core/Src/bno055.c ****  *
18091:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
18092:Core/Src/bno055.c ****  *
18093:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_y_hyst_u8) *4 LSB
18094:Core/Src/bno055.c ****  *
18095:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
18096:Core/Src/bno055.c ****  *
18097:Core/Src/bno055.c ****  *  gyro_range_u8     | hysteresis      |     LSB
18098:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18099:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
18100:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
18101:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
18102:Core/Src/bno055.c ****  */
18103:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_y_hyst(u8 *gyro_highrate_y_hyst_u8)
18104:Core/Src/bno055.c **** {
 36834              		.loc 1 18104 1 is_stmt 1 view -0
 36835              		.cfi_startproc
 36836              		@ args = 0, pretend = 0, frame = 8
 36837              		@ frame_needed = 0, uses_anonymous_args = 0
 36838              		.loc 1 18104 1 is_stmt 0 view .LVU10635
 36839 0000 30B5     		push	{r4, r5, lr}
 36840              		.cfi_def_cfa_offset 12
 36841              		.cfi_offset 4, -12
 36842              		.cfi_offset 5, -8
 36843              		.cfi_offset 14, -4
 36844 0002 83B0     		sub	sp, sp, #12
 36845              		.cfi_def_cfa_offset 24
18105:Core/Src/bno055.c ****     /* Variable used to return value of
18106:Core/Src/bno055.c ****      * communication routine*/
18107:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36846              		.loc 1 18107 5 is_stmt 1 view .LVU10636
 36847              	.LVL4657:
18108:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36848              		.loc 1 18108 5 view .LVU10637
 36849              		.loc 1 18108 8 is_stmt 0 view .LVU10638
ARM GAS  /tmp/ccOloYeZ.s 			page 1045


 36850 0004 0023     		movs	r3, #0
 36851 0006 8DF80730 		strb	r3, [sp, #7]
18109:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36852              		.loc 1 18109 5 is_stmt 1 view .LVU10639
 36853              	.LVL4658:
18110:Core/Src/bno055.c **** 
18111:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18112:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36854              		.loc 1 18112 5 view .LVU10640
 36855              		.loc 1 18112 18 is_stmt 0 view .LVU10641
 36856 000a 144B     		ldr	r3, .L2692
 36857 000c 1B68     		ldr	r3, [r3]
 36858              		.loc 1 18112 8 view .LVU10642
 36859 000e F3B1     		cbz	r3, .L2688
 36860 0010 0446     		mov	r4, r0
18113:Core/Src/bno055.c ****     {
18114:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18115:Core/Src/bno055.c ****     }
18116:Core/Src/bno055.c ****     else
18117:Core/Src/bno055.c ****     {
18118:Core/Src/bno055.c ****         /*condition check for page, gyro highrate y hysteresis is
18119:Core/Src/bno055.c ****          * available in the page one*/
18120:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 36861              		.loc 1 18120 9 is_stmt 1 view .LVU10643
 36862              		.loc 1 18120 21 is_stmt 0 view .LVU10644
 36863 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36864              		.loc 1 18120 12 view .LVU10645
 36865 0014 012B     		cmp	r3, #1
 36866 0016 14D1     		bne	.L2691
 36867              	.LVL4659:
 36868              	.L2686:
18121:Core/Src/bno055.c ****         {
18122:Core/Src/bno055.c ****             /* Write page as one */
18123:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18124:Core/Src/bno055.c ****         }
18125:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 36869              		.loc 1 18125 53 discriminator 1 view .LVU10646
 36870 0018 104B     		ldr	r3, .L2692
 36871 001a 1B68     		ldr	r3, [r3]
 36872 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36873              		.loc 1 18125 41 discriminator 1 view .LVU10647
 36874 001e 012B     		cmp	r3, #1
 36875 0020 18D1     		bne	.L2689
 36876              	.L2687:
18126:Core/Src/bno055.c ****         {
18127:Core/Src/bno055.c ****             /* Read the value of gyro highrate y hysteresis*/
18128:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 36877              		.loc 1 18128 13 is_stmt 1 view .LVU10648
 36878              		.loc 1 18128 32 is_stmt 0 view .LVU10649
 36879 0022 0E4B     		ldr	r3, .L2692
 36880 0024 1868     		ldr	r0, [r3]
 36881 0026 0569     		ldr	r5, [r0, #16]
 36882              		.loc 1 18128 24 view .LVU10650
 36883 0028 0123     		movs	r3, #1
 36884 002a 0DF10702 		add	r2, sp, #7
 36885 002e 1A21     		movs	r1, #26
 36886 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccOloYeZ.s 			page 1046


 36887 0032 A847     		blx	r5
 36888              	.LVL4660:
18129:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Y_HYST_REG,
18130:Core/Src/bno055.c ****                                                       &data_u8r,
18131:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18132:Core/Src/bno055.c ****             *gyro_highrate_y_hyst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_HYST);
 36889              		.loc 1 18132 13 is_stmt 1 view .LVU10651
 36890              		.loc 1 18132 40 is_stmt 0 view .LVU10652
 36891 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36892 0038 C3F34113 		ubfx	r3, r3, #5, #2
 36893              		.loc 1 18132 38 view .LVU10653
 36894 003c 2370     		strb	r3, [r4]
 36895              	.LVL4661:
 36896              	.L2685:
18133:Core/Src/bno055.c ****         }
18134:Core/Src/bno055.c ****         else
18135:Core/Src/bno055.c ****         {
18136:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18137:Core/Src/bno055.c ****         }
18138:Core/Src/bno055.c ****     }
18139:Core/Src/bno055.c **** 
18140:Core/Src/bno055.c ****     return com_rslt;
18141:Core/Src/bno055.c **** }
 36897              		.loc 1 18141 1 view .LVU10654
 36898 003e 03B0     		add	sp, sp, #12
 36899              		.cfi_remember_state
 36900              		.cfi_def_cfa_offset 12
 36901              		@ sp needed
 36902 0040 30BD     		pop	{r4, r5, pc}
 36903              	.LVL4662:
 36904              	.L2691:
 36905              		.cfi_restore_state
18123:Core/Src/bno055.c ****         }
 36906              		.loc 1 18123 13 is_stmt 1 view .LVU10655
18123:Core/Src/bno055.c ****         }
 36907              		.loc 1 18123 23 is_stmt 0 view .LVU10656
 36908 0042 0120     		movs	r0, #1
 36909              	.LVL4663:
18123:Core/Src/bno055.c ****         }
 36910              		.loc 1 18123 23 view .LVU10657
 36911 0044 FFF7FEFF 		bl	bno055_write_page_id
 36912              	.LVL4664:
18125:Core/Src/bno055.c ****         {
 36913              		.loc 1 18125 9 is_stmt 1 view .LVU10658
18125:Core/Src/bno055.c ****         {
 36914              		.loc 1 18125 12 is_stmt 0 view .LVU10659
 36915 0048 0028     		cmp	r0, #0
 36916 004a EAD0     		beq	.L2687
 36917 004c E4E7     		b	.L2686
 36918              	.LVL4665:
 36919              	.L2688:
18114:Core/Src/bno055.c ****     }
 36920              		.loc 1 18114 16 view .LVU10660
 36921 004e 6FF07E00 		mvn	r0, #126
 36922              	.LVL4666:
18114:Core/Src/bno055.c ****     }
 36923              		.loc 1 18114 16 view .LVU10661
ARM GAS  /tmp/ccOloYeZ.s 			page 1047


 36924 0052 F4E7     		b	.L2685
 36925              	.LVL4667:
 36926              	.L2689:
18136:Core/Src/bno055.c ****         }
 36927              		.loc 1 18136 22 view .LVU10662
 36928 0054 4FF0FF30 		mov	r0, #-1
 36929 0058 F1E7     		b	.L2685
 36930              	.L2693:
 36931 005a 00BF     		.align	2
 36932              	.L2692:
 36933 005c 00000000 		.word	p_bno055
 36934              		.cfi_endproc
 36935              	.LFE259:
 36937              		.section	.text.bno055_set_gyro_highrate_y_hyst,"ax",%progbits
 36938              		.align	1
 36939              		.global	bno055_set_gyro_highrate_y_hyst
 36940              		.syntax unified
 36941              		.thumb
 36942              		.thumb_func
 36944              	bno055_set_gyro_highrate_y_hyst:
 36945              	.LVL4668:
 36946              	.LFB260:
18142:Core/Src/bno055.c **** 
18143:Core/Src/bno055.c **** /*!
18144:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate y hysteresis
18145:Core/Src/bno055.c ****  *  from page one register from 0x1A bit 5 to 6
18146:Core/Src/bno055.c ****  *
18147:Core/Src/bno055.c ****  *  @param gyro_highrate_y_hyst_u8 : The value of gyro highrate y hysteresis
18148:Core/Src/bno055.c ****  *
18149:Core/Src/bno055.c ****  *  @return results of bus communication function
18150:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18151:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18152:Core/Src/bno055.c ****  *
18153:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
18154:Core/Src/bno055.c ****  *
18155:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_y_hyst_u8) *4 LSB
18156:Core/Src/bno055.c ****  *
18157:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
18158:Core/Src/bno055.c ****  *
18159:Core/Src/bno055.c ****  *  gyro_range_u8     | hysteresis      |     LSB
18160:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18161:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
18162:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
18163:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
18164:Core/Src/bno055.c ****  */
18165:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_y_hyst(u8 gyro_highrate_y_hyst_u8)
18166:Core/Src/bno055.c **** {
 36947              		.loc 1 18166 1 is_stmt 1 view -0
 36948              		.cfi_startproc
 36949              		@ args = 0, pretend = 0, frame = 8
 36950              		@ frame_needed = 0, uses_anonymous_args = 0
 36951              		.loc 1 18166 1 is_stmt 0 view .LVU10664
 36952 0000 30B5     		push	{r4, r5, lr}
 36953              		.cfi_def_cfa_offset 12
 36954              		.cfi_offset 4, -12
 36955              		.cfi_offset 5, -8
 36956              		.cfi_offset 14, -4
ARM GAS  /tmp/ccOloYeZ.s 			page 1048


 36957 0002 83B0     		sub	sp, sp, #12
 36958              		.cfi_def_cfa_offset 24
18167:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36959              		.loc 1 18167 5 is_stmt 1 view .LVU10665
 36960              	.LVL4669:
18168:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36961              		.loc 1 18168 5 view .LVU10666
 36962              		.loc 1 18168 8 is_stmt 0 view .LVU10667
 36963 0004 0023     		movs	r3, #0
 36964 0006 8DF80730 		strb	r3, [sp, #7]
18169:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36965              		.loc 1 18169 5 is_stmt 1 view .LVU10668
 36966              	.LVL4670:
18170:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 36967              		.loc 1 18170 5 view .LVU10669
 36968              		.loc 1 18170 8 is_stmt 0 view .LVU10670
 36969 000a 8DF80630 		strb	r3, [sp, #6]
18171:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 36970              		.loc 1 18171 5 is_stmt 1 view .LVU10671
 36971              	.LVL4671:
18172:Core/Src/bno055.c **** 
18173:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18174:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36972              		.loc 1 18174 5 view .LVU10672
 36973              		.loc 1 18174 18 is_stmt 0 view .LVU10673
 36974 000e 294B     		ldr	r3, .L2706
 36975 0010 1B68     		ldr	r3, [r3]
 36976              		.loc 1 18174 8 view .LVU10674
 36977 0012 002B     		cmp	r3, #0
 36978 0014 4AD0     		beq	.L2698
 36979 0016 0546     		mov	r5, r0
18175:Core/Src/bno055.c ****     {
18176:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18177:Core/Src/bno055.c ****     }
18178:Core/Src/bno055.c ****     else
18179:Core/Src/bno055.c ****     {
18180:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18181:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18182:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18183:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 36980              		.loc 1 18183 9 is_stmt 1 view .LVU10675
 36981              		.loc 1 18183 19 is_stmt 0 view .LVU10676
 36982 0018 0DF10600 		add	r0, sp, #6
 36983              	.LVL4672:
 36984              		.loc 1 18183 19 view .LVU10677
 36985 001c FFF7FEFF 		bl	bno055_get_operation_mode
 36986              	.LVL4673:
18184:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 36987              		.loc 1 18184 9 is_stmt 1 view .LVU10678
 36988              		.loc 1 18184 12 is_stmt 0 view .LVU10679
 36989 0020 0446     		mov	r4, r0
 36990 0022 90BB     		cbnz	r0, .L2699
18185:Core/Src/bno055.c ****         {
18186:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36991              		.loc 1 18186 13 is_stmt 1 view .LVU10680
 36992              		.loc 1 18186 32 is_stmt 0 view .LVU10681
 36993 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
ARM GAS  /tmp/ccOloYeZ.s 			page 1049


 36994              		.loc 1 18186 16 view .LVU10682
 36995 0028 1BB9     		cbnz	r3, .L2703
 36996              	.LVL4674:
 36997              	.L2697:
18187:Core/Src/bno055.c ****             {
18188:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18189:Core/Src/bno055.c ****             }
18190:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 36998              		.loc 1 18190 13 is_stmt 1 view .LVU10683
 36999              		.loc 1 18190 16 is_stmt 0 view .LVU10684
 37000 002a 44B1     		cbz	r4, .L2704
18191:Core/Src/bno055.c ****             {
18192:Core/Src/bno055.c ****                 /* Write page as one */
18193:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18194:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18195:Core/Src/bno055.c ****                 {
18196:Core/Src/bno055.c ****                     /* Write the value of
18197:Core/Src/bno055.c ****                      * gyro highrate y hysteresis*/
18198:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18199:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
18200:Core/Src/bno055.c ****                                                               &data_u8r,
18201:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18202:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18203:Core/Src/bno055.c ****                     {
18204:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_HYST, gyro_
18205:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18206:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
18207:Core/Src/bno055.c ****                                                                     &data_u8r,
18208:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18209:Core/Src/bno055.c ****                     }
18210:Core/Src/bno055.c ****                 }
18211:Core/Src/bno055.c ****                 else
18212:Core/Src/bno055.c ****                 {
18213:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18214:Core/Src/bno055.c ****                 }
18215:Core/Src/bno055.c ****             }
18216:Core/Src/bno055.c ****             else
18217:Core/Src/bno055.c ****             {
18218:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 37001              		.loc 1 18218 26 view .LVU10685
 37002 002c 4FF0FF34 		mov	r4, #-1
 37003              	.LVL4675:
 37004              		.loc 1 18218 26 view .LVU10686
 37005 0030 2DE0     		b	.L2696
 37006              	.LVL4676:
 37007              	.L2703:
18188:Core/Src/bno055.c ****             }
 37008              		.loc 1 18188 17 is_stmt 1 view .LVU10687
18188:Core/Src/bno055.c ****             }
 37009              		.loc 1 18188 28 is_stmt 0 view .LVU10688
 37010 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 37011              	.LVL4677:
18188:Core/Src/bno055.c ****             }
 37012              		.loc 1 18188 25 view .LVU10689
 37013 0036 54FA80F4 		uxtab	r4, r4, r0
 37014 003a 64B2     		sxtb	r4, r4
 37015              	.LVL4678:
ARM GAS  /tmp/ccOloYeZ.s 			page 1050


18188:Core/Src/bno055.c ****             }
 37016              		.loc 1 18188 25 view .LVU10690
 37017 003c F5E7     		b	.L2697
 37018              	.L2704:
18193:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37019              		.loc 1 18193 17 is_stmt 1 view .LVU10691
18193:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37020              		.loc 1 18193 30 is_stmt 0 view .LVU10692
 37021 003e 0120     		movs	r0, #1
 37022 0040 FFF7FEFF 		bl	bno055_write_page_id
 37023              	.LVL4679:
18194:Core/Src/bno055.c ****                 {
 37024              		.loc 1 18194 17 is_stmt 1 view .LVU10693
18194:Core/Src/bno055.c ****                 {
 37025              		.loc 1 18194 20 is_stmt 0 view .LVU10694
 37026 0044 48BB     		cbnz	r0, .L2701
18198:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
 37027              		.loc 1 18198 21 is_stmt 1 view .LVU10695
18198:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
 37028              		.loc 1 18198 40 is_stmt 0 view .LVU10696
 37029 0046 1B4B     		ldr	r3, .L2706
 37030 0048 1868     		ldr	r0, [r3]
 37031              	.LVL4680:
18198:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
 37032              		.loc 1 18198 40 view .LVU10697
 37033 004a 0469     		ldr	r4, [r0, #16]
 37034              	.LVL4681:
18198:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
 37035              		.loc 1 18198 32 view .LVU10698
 37036 004c 0123     		movs	r3, #1
 37037 004e 0DF10702 		add	r2, sp, #7
 37038 0052 1A21     		movs	r1, #26
 37039 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37040 0056 A047     		blx	r4
 37041              	.LVL4682:
18202:Core/Src/bno055.c ****                     {
 37042              		.loc 1 18202 21 is_stmt 1 view .LVU10699
18202:Core/Src/bno055.c ****                     {
 37043              		.loc 1 18202 24 is_stmt 0 view .LVU10700
 37044 0058 0446     		mov	r4, r0
 37045 005a C0B9     		cbnz	r0, .L2696
18204:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37046              		.loc 1 18204 25 is_stmt 1 view .LVU10701
18204:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37047              		.loc 1 18204 36 is_stmt 0 view .LVU10702
 37048 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 37049 0060 6801     		lsls	r0, r5, #5
 37050              	.LVL4683:
18204:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37051              		.loc 1 18204 36 view .LVU10703
 37052 0062 00F06000 		and	r0, r0, #96
 37053 0066 23F06003 		bic	r3, r3, #96
 37054 006a 0343     		orrs	r3, r3, r0
18204:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37055              		.loc 1 18204 34 view .LVU10704
 37056 006c 8DF80730 		strb	r3, [sp, #7]
18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
ARM GAS  /tmp/ccOloYeZ.s 			page 1051


 37057              		.loc 1 18205 25 is_stmt 1 view .LVU10705
18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
 37058              		.loc 1 18205 45 is_stmt 0 view .LVU10706
 37059 0070 104B     		ldr	r3, .L2706
 37060 0072 1868     		ldr	r0, [r3]
 37061 0074 C568     		ldr	r5, [r0, #12]
18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
 37062              		.loc 1 18205 37 view .LVU10707
 37063 0076 0123     		movs	r3, #1
 37064 0078 0DF10702 		add	r2, sp, #7
 37065 007c 1A21     		movs	r1, #26
 37066 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37067 0080 A847     		blx	r5
 37068              	.LVL4684:
18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
 37069              		.loc 1 18205 34 view .LVU10708
 37070 0082 54FA80F0 		uxtab	r0, r4, r0
 37071 0086 44B2     		sxtb	r4, r0
 37072              	.LVL4685:
18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
 37073              		.loc 1 18205 34 view .LVU10709
 37074 0088 01E0     		b	.L2696
 37075              	.LVL4686:
 37076              	.L2699:
18219:Core/Src/bno055.c ****             }
18220:Core/Src/bno055.c ****         }
18221:Core/Src/bno055.c ****         else
18222:Core/Src/bno055.c ****         {
18223:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 37077              		.loc 1 18223 22 view .LVU10710
 37078 008a 4FF0FF34 		mov	r4, #-1
 37079              	.LVL4687:
 37080              	.L2696:
18224:Core/Src/bno055.c ****         }
18225:Core/Src/bno055.c ****     }
18226:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37081              		.loc 1 18226 5 is_stmt 1 view .LVU10711
 37082              		.loc 1 18226 24 is_stmt 0 view .LVU10712
 37083 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 37084              		.loc 1 18226 8 view .LVU10713
 37085 0092 28B9     		cbnz	r0, .L2705
 37086              	.LVL4688:
 37087              	.L2695:
18227:Core/Src/bno055.c ****     {
18228:Core/Src/bno055.c ****         /* set the operation mode of
18229:Core/Src/bno055.c ****          * previous operation mode*/
18230:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18231:Core/Src/bno055.c ****     }
18232:Core/Src/bno055.c **** 
18233:Core/Src/bno055.c ****     return com_rslt;
18234:Core/Src/bno055.c **** }
 37088              		.loc 1 18234 1 view .LVU10714
 37089 0094 2046     		mov	r0, r4
 37090 0096 03B0     		add	sp, sp, #12
 37091              		.cfi_remember_state
 37092              		.cfi_def_cfa_offset 12
 37093              		@ sp needed
ARM GAS  /tmp/ccOloYeZ.s 			page 1052


 37094 0098 30BD     		pop	{r4, r5, pc}
 37095              	.LVL4689:
 37096              	.L2701:
 37097              		.cfi_restore_state
18213:Core/Src/bno055.c ****                 }
 37098              		.loc 1 18213 30 view .LVU10715
 37099 009a 4FF0FF34 		mov	r4, #-1
 37100              	.LVL4690:
18213:Core/Src/bno055.c ****                 }
 37101              		.loc 1 18213 30 view .LVU10716
 37102 009e F6E7     		b	.L2696
 37103              	.LVL4691:
 37104              	.L2705:
18230:Core/Src/bno055.c ****     }
 37105              		.loc 1 18230 9 is_stmt 1 view .LVU10717
18230:Core/Src/bno055.c ****     }
 37106              		.loc 1 18230 21 is_stmt 0 view .LVU10718
 37107 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 37108              	.LVL4692:
18230:Core/Src/bno055.c ****     }
 37109              		.loc 1 18230 18 view .LVU10719
 37110 00a4 54FA80F0 		uxtab	r0, r4, r0
 37111 00a8 44B2     		sxtb	r4, r0
 37112              	.LVL4693:
18230:Core/Src/bno055.c ****     }
 37113              		.loc 1 18230 18 view .LVU10720
 37114 00aa F3E7     		b	.L2695
 37115              	.LVL4694:
 37116              	.L2698:
18176:Core/Src/bno055.c ****     }
 37117              		.loc 1 18176 16 view .LVU10721
 37118 00ac 6FF07E04 		mvn	r4, #126
 37119 00b0 F0E7     		b	.L2695
 37120              	.L2707:
 37121 00b2 00BF     		.align	2
 37122              	.L2706:
 37123 00b4 00000000 		.word	p_bno055
 37124              		.cfi_endproc
 37125              	.LFE260:
 37127              		.section	.text.bno055_get_gyro_highrate_y_durn,"ax",%progbits
 37128              		.align	1
 37129              		.global	bno055_get_gyro_highrate_y_durn
 37130              		.syntax unified
 37131              		.thumb
 37132              		.thumb_func
 37134              	bno055_get_gyro_highrate_y_durn:
 37135              	.LVL4695:
 37136              	.LFB261:
18235:Core/Src/bno055.c **** 
18236:Core/Src/bno055.c **** /*!
18237:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate y duration
18238:Core/Src/bno055.c ****  *  from page one register from 0x1B bit 0 to 7
18239:Core/Src/bno055.c ****  *
18240:Core/Src/bno055.c ****  *  @param gyro_highrate_y_durn_u8 : The value of gyro highrate y duration
18241:Core/Src/bno055.c ****  *
18242:Core/Src/bno055.c ****  *  @return results of bus communication function
18243:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
ARM GAS  /tmp/ccOloYeZ.s 			page 1053


18244:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18245:Core/Src/bno055.c ****  *
18246:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
18247:Core/Src/bno055.c ****  *
18248:Core/Src/bno055.c ****  *  (1 + gyro_highrate_y_durn_u8)*2.5ms
18249:Core/Src/bno055.c ****  */
18250:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_y_durn(u8 *gyro_highrate_y_durn_u8)
18251:Core/Src/bno055.c **** {
 37137              		.loc 1 18251 1 is_stmt 1 view -0
 37138              		.cfi_startproc
 37139              		@ args = 0, pretend = 0, frame = 8
 37140              		@ frame_needed = 0, uses_anonymous_args = 0
 37141              		.loc 1 18251 1 is_stmt 0 view .LVU10723
 37142 0000 70B5     		push	{r4, r5, r6, lr}
 37143              		.cfi_def_cfa_offset 16
 37144              		.cfi_offset 4, -16
 37145              		.cfi_offset 5, -12
 37146              		.cfi_offset 6, -8
 37147              		.cfi_offset 14, -4
 37148 0002 82B0     		sub	sp, sp, #8
 37149              		.cfi_def_cfa_offset 24
18252:Core/Src/bno055.c ****     /* Variable used to return value of
18253:Core/Src/bno055.c ****      * communication routine*/
18254:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37150              		.loc 1 18254 5 is_stmt 1 view .LVU10724
 37151              	.LVL4696:
18255:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37152              		.loc 1 18255 5 view .LVU10725
 37153              		.loc 1 18255 8 is_stmt 0 view .LVU10726
 37154 0004 0023     		movs	r3, #0
 37155 0006 8DF80730 		strb	r3, [sp, #7]
18256:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37156              		.loc 1 18256 5 is_stmt 1 view .LVU10727
 37157              	.LVL4697:
18257:Core/Src/bno055.c **** 
18258:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18259:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37158              		.loc 1 18259 5 view .LVU10728
 37159              		.loc 1 18259 18 is_stmt 0 view .LVU10729
 37160 000a 134B     		ldr	r3, .L2716
 37161 000c 1B68     		ldr	r3, [r3]
 37162              		.loc 1 18259 8 view .LVU10730
 37163 000e E3B1     		cbz	r3, .L2712
 37164 0010 0546     		mov	r5, r0
18260:Core/Src/bno055.c ****     {
18261:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18262:Core/Src/bno055.c ****     }
18263:Core/Src/bno055.c ****     else
18264:Core/Src/bno055.c ****     {
18265:Core/Src/bno055.c ****         /*condition check for page, gyro highrate y duration is
18266:Core/Src/bno055.c ****          * available in the page one*/
18267:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 37165              		.loc 1 18267 9 is_stmt 1 view .LVU10731
 37166              		.loc 1 18267 21 is_stmt 0 view .LVU10732
 37167 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37168              		.loc 1 18267 12 view .LVU10733
 37169 0014 012B     		cmp	r3, #1
ARM GAS  /tmp/ccOloYeZ.s 			page 1054


 37170 0016 12D1     		bne	.L2715
 37171              	.LVL4698:
 37172              	.L2710:
18268:Core/Src/bno055.c ****         {
18269:Core/Src/bno055.c ****             /* Write page as one */
18270:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18271:Core/Src/bno055.c ****         }
18272:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 37173              		.loc 1 18272 53 discriminator 1 view .LVU10734
 37174 0018 0F4B     		ldr	r3, .L2716
 37175 001a 1B68     		ldr	r3, [r3]
 37176 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37177              		.loc 1 18272 41 discriminator 1 view .LVU10735
 37178 001e 012B     		cmp	r3, #1
 37179 0020 16D1     		bne	.L2713
 37180              	.L2711:
18273:Core/Src/bno055.c ****         {
18274:Core/Src/bno055.c ****             /* Read the value of gyro highrate y duration*/
18275:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 37181              		.loc 1 18275 13 is_stmt 1 view .LVU10736
 37182              		.loc 1 18275 32 is_stmt 0 view .LVU10737
 37183 0022 0D4B     		ldr	r3, .L2716
 37184 0024 1C68     		ldr	r4, [r3]
 37185 0026 2669     		ldr	r6, [r4, #16]
 37186              		.loc 1 18275 24 view .LVU10738
 37187 0028 0123     		movs	r3, #1
 37188 002a 0DF10702 		add	r2, sp, #7
 37189 002e 1B21     		movs	r1, #27
 37190 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 37191 0032 B047     		blx	r6
 37192              	.LVL4699:
18276:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Y_DURN_REG,
18277:Core/Src/bno055.c ****                                                       &data_u8r,
18278:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18279:Core/Src/bno055.c ****             *gyro_highrate_y_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_DURN);
 37193              		.loc 1 18279 13 is_stmt 1 view .LVU10739
 37194              		.loc 1 18279 38 is_stmt 0 view .LVU10740
 37195 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 37196 0038 2B70     		strb	r3, [r5]
 37197              	.LVL4700:
 37198              	.L2709:
18280:Core/Src/bno055.c ****         }
18281:Core/Src/bno055.c ****         else
18282:Core/Src/bno055.c ****         {
18283:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18284:Core/Src/bno055.c ****         }
18285:Core/Src/bno055.c ****     }
18286:Core/Src/bno055.c **** 
18287:Core/Src/bno055.c ****     return com_rslt;
18288:Core/Src/bno055.c **** }
 37199              		.loc 1 18288 1 view .LVU10741
 37200 003a 02B0     		add	sp, sp, #8
 37201              		.cfi_remember_state
 37202              		.cfi_def_cfa_offset 16
 37203              		@ sp needed
 37204 003c 70BD     		pop	{r4, r5, r6, pc}
 37205              	.LVL4701:
ARM GAS  /tmp/ccOloYeZ.s 			page 1055


 37206              	.L2715:
 37207              		.cfi_restore_state
18270:Core/Src/bno055.c ****         }
 37208              		.loc 1 18270 13 is_stmt 1 view .LVU10742
18270:Core/Src/bno055.c ****         }
 37209              		.loc 1 18270 23 is_stmt 0 view .LVU10743
 37210 003e 0120     		movs	r0, #1
 37211              	.LVL4702:
18270:Core/Src/bno055.c ****         }
 37212              		.loc 1 18270 23 view .LVU10744
 37213 0040 FFF7FEFF 		bl	bno055_write_page_id
 37214              	.LVL4703:
18272:Core/Src/bno055.c ****         {
 37215              		.loc 1 18272 9 is_stmt 1 view .LVU10745
18272:Core/Src/bno055.c ****         {
 37216              		.loc 1 18272 12 is_stmt 0 view .LVU10746
 37217 0044 0028     		cmp	r0, #0
 37218 0046 ECD0     		beq	.L2711
 37219 0048 E6E7     		b	.L2710
 37220              	.LVL4704:
 37221              	.L2712:
18261:Core/Src/bno055.c ****     }
 37222              		.loc 1 18261 16 view .LVU10747
 37223 004a 6FF07E00 		mvn	r0, #126
 37224              	.LVL4705:
18261:Core/Src/bno055.c ****     }
 37225              		.loc 1 18261 16 view .LVU10748
 37226 004e F4E7     		b	.L2709
 37227              	.LVL4706:
 37228              	.L2713:
18283:Core/Src/bno055.c ****         }
 37229              		.loc 1 18283 22 view .LVU10749
 37230 0050 4FF0FF30 		mov	r0, #-1
 37231 0054 F1E7     		b	.L2709
 37232              	.L2717:
 37233 0056 00BF     		.align	2
 37234              	.L2716:
 37235 0058 00000000 		.word	p_bno055
 37236              		.cfi_endproc
 37237              	.LFE261:
 37239              		.section	.text.bno055_set_gyro_highrate_y_durn,"ax",%progbits
 37240              		.align	1
 37241              		.global	bno055_set_gyro_highrate_y_durn
 37242              		.syntax unified
 37243              		.thumb
 37244              		.thumb_func
 37246              	bno055_set_gyro_highrate_y_durn:
 37247              	.LVL4707:
 37248              	.LFB262:
18289:Core/Src/bno055.c **** 
18290:Core/Src/bno055.c **** /*!
18291:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate y duration
18292:Core/Src/bno055.c ****  *  from page one register from 0x1B bit 0 to 7
18293:Core/Src/bno055.c ****  *
18294:Core/Src/bno055.c ****  *  @param gyro_highrate_y_durn_u8 : The value of gyro highrate y duration
18295:Core/Src/bno055.c ****  *
18296:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/ccOloYeZ.s 			page 1056


18297:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18298:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18299:Core/Src/bno055.c ****  *
18300:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
18301:Core/Src/bno055.c ****  *
18302:Core/Src/bno055.c ****  *  (1 + gyro_highrate_y_durn_u8)*2.5ms
18303:Core/Src/bno055.c ****  */
18304:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_y_durn(u8 gyro_highrate_y_durn_u8)
18305:Core/Src/bno055.c **** {
 37249              		.loc 1 18305 1 is_stmt 1 view -0
 37250              		.cfi_startproc
 37251              		@ args = 0, pretend = 0, frame = 8
 37252              		@ frame_needed = 0, uses_anonymous_args = 0
 37253              		.loc 1 18305 1 is_stmt 0 view .LVU10751
 37254 0000 30B5     		push	{r4, r5, lr}
 37255              		.cfi_def_cfa_offset 12
 37256              		.cfi_offset 4, -12
 37257              		.cfi_offset 5, -8
 37258              		.cfi_offset 14, -4
 37259 0002 83B0     		sub	sp, sp, #12
 37260              		.cfi_def_cfa_offset 24
18306:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37261              		.loc 1 18306 5 is_stmt 1 view .LVU10752
 37262              	.LVL4708:
18307:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37263              		.loc 1 18307 5 view .LVU10753
 37264              		.loc 1 18307 8 is_stmt 0 view .LVU10754
 37265 0004 0023     		movs	r3, #0
 37266 0006 8DF80730 		strb	r3, [sp, #7]
18308:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37267              		.loc 1 18308 5 is_stmt 1 view .LVU10755
 37268              	.LVL4709:
18309:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 37269              		.loc 1 18309 5 view .LVU10756
 37270              		.loc 1 18309 8 is_stmt 0 view .LVU10757
 37271 000a 8DF80630 		strb	r3, [sp, #6]
18310:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 37272              		.loc 1 18310 5 is_stmt 1 view .LVU10758
 37273              	.LVL4710:
18311:Core/Src/bno055.c **** 
18312:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18313:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37274              		.loc 1 18313 5 view .LVU10759
 37275              		.loc 1 18313 18 is_stmt 0 view .LVU10760
 37276 000e 254B     		ldr	r3, .L2730
 37277 0010 1B68     		ldr	r3, [r3]
 37278              		.loc 1 18313 8 view .LVU10761
 37279 0012 002B     		cmp	r3, #0
 37280 0014 42D0     		beq	.L2722
 37281 0016 0546     		mov	r5, r0
18314:Core/Src/bno055.c ****     {
18315:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18316:Core/Src/bno055.c ****     }
18317:Core/Src/bno055.c ****     else
18318:Core/Src/bno055.c ****     {
18319:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18320:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
ARM GAS  /tmp/ccOloYeZ.s 			page 1057


18321:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18322:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 37282              		.loc 1 18322 9 is_stmt 1 view .LVU10762
 37283              		.loc 1 18322 19 is_stmt 0 view .LVU10763
 37284 0018 0DF10600 		add	r0, sp, #6
 37285              	.LVL4711:
 37286              		.loc 1 18322 19 view .LVU10764
 37287 001c FFF7FEFF 		bl	bno055_get_operation_mode
 37288              	.LVL4712:
18323:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 37289              		.loc 1 18323 9 is_stmt 1 view .LVU10765
 37290              		.loc 1 18323 12 is_stmt 0 view .LVU10766
 37291 0020 0446     		mov	r4, r0
 37292 0022 50BB     		cbnz	r0, .L2723
18324:Core/Src/bno055.c ****         {
18325:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37293              		.loc 1 18325 13 is_stmt 1 view .LVU10767
 37294              		.loc 1 18325 32 is_stmt 0 view .LVU10768
 37295 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 37296              		.loc 1 18325 16 view .LVU10769
 37297 0028 1BB9     		cbnz	r3, .L2727
 37298              	.LVL4713:
 37299              	.L2721:
18326:Core/Src/bno055.c ****             {
18327:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18328:Core/Src/bno055.c ****             }
18329:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 37300              		.loc 1 18329 13 is_stmt 1 view .LVU10770
 37301              		.loc 1 18329 16 is_stmt 0 view .LVU10771
 37302 002a 44B1     		cbz	r4, .L2728
18330:Core/Src/bno055.c ****             {
18331:Core/Src/bno055.c ****                 /* Write page as one */
18332:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18333:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18334:Core/Src/bno055.c ****                 {
18335:Core/Src/bno055.c ****                     /* Write the value
18336:Core/Src/bno055.c ****                      * of gyro highrate y duration*/
18337:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18338:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
18339:Core/Src/bno055.c ****                                                               &data_u8r,
18340:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18341:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18342:Core/Src/bno055.c ****                     {
18343:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_DURN, gyro_
18344:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18345:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
18346:Core/Src/bno055.c ****                                                                     &data_u8r,
18347:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18348:Core/Src/bno055.c ****                     }
18349:Core/Src/bno055.c ****                 }
18350:Core/Src/bno055.c ****                 else
18351:Core/Src/bno055.c ****                 {
18352:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18353:Core/Src/bno055.c ****                 }
18354:Core/Src/bno055.c ****             }
18355:Core/Src/bno055.c ****             else
18356:Core/Src/bno055.c ****             {
ARM GAS  /tmp/ccOloYeZ.s 			page 1058


18357:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 37303              		.loc 1 18357 26 view .LVU10772
 37304 002c 4FF0FF34 		mov	r4, #-1
 37305              	.LVL4714:
 37306              		.loc 1 18357 26 view .LVU10773
 37307 0030 25E0     		b	.L2720
 37308              	.LVL4715:
 37309              	.L2727:
18327:Core/Src/bno055.c ****             }
 37310              		.loc 1 18327 17 is_stmt 1 view .LVU10774
18327:Core/Src/bno055.c ****             }
 37311              		.loc 1 18327 28 is_stmt 0 view .LVU10775
 37312 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 37313              	.LVL4716:
18327:Core/Src/bno055.c ****             }
 37314              		.loc 1 18327 25 view .LVU10776
 37315 0036 54FA80F4 		uxtab	r4, r4, r0
 37316 003a 64B2     		sxtb	r4, r4
 37317              	.LVL4717:
18327:Core/Src/bno055.c ****             }
 37318              		.loc 1 18327 25 view .LVU10777
 37319 003c F5E7     		b	.L2721
 37320              	.L2728:
18332:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37321              		.loc 1 18332 17 is_stmt 1 view .LVU10778
18332:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37322              		.loc 1 18332 30 is_stmt 0 view .LVU10779
 37323 003e 0120     		movs	r0, #1
 37324 0040 FFF7FEFF 		bl	bno055_write_page_id
 37325              	.LVL4718:
18333:Core/Src/bno055.c ****                 {
 37326              		.loc 1 18333 17 is_stmt 1 view .LVU10780
18333:Core/Src/bno055.c ****                 {
 37327              		.loc 1 18333 20 is_stmt 0 view .LVU10781
 37328 0044 08BB     		cbnz	r0, .L2725
18337:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
 37329              		.loc 1 18337 21 is_stmt 1 view .LVU10782
18337:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
 37330              		.loc 1 18337 40 is_stmt 0 view .LVU10783
 37331 0046 174B     		ldr	r3, .L2730
 37332 0048 1868     		ldr	r0, [r3]
 37333              	.LVL4719:
18337:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
 37334              		.loc 1 18337 40 view .LVU10784
 37335 004a 0469     		ldr	r4, [r0, #16]
 37336              	.LVL4720:
18337:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
 37337              		.loc 1 18337 32 view .LVU10785
 37338 004c 0123     		movs	r3, #1
 37339 004e 0DF10702 		add	r2, sp, #7
 37340 0052 1B21     		movs	r1, #27
 37341 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37342 0056 A047     		blx	r4
 37343              	.LVL4721:
18341:Core/Src/bno055.c ****                     {
 37344              		.loc 1 18341 21 is_stmt 1 view .LVU10786
18341:Core/Src/bno055.c ****                     {
ARM GAS  /tmp/ccOloYeZ.s 			page 1059


 37345              		.loc 1 18341 24 is_stmt 0 view .LVU10787
 37346 0058 0446     		mov	r4, r0
 37347 005a 80B9     		cbnz	r0, .L2720
18343:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37348              		.loc 1 18343 25 is_stmt 1 view .LVU10788
18343:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37349              		.loc 1 18343 34 is_stmt 0 view .LVU10789
 37350 005c 8DF80750 		strb	r5, [sp, #7]
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 37351              		.loc 1 18344 25 is_stmt 1 view .LVU10790
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 37352              		.loc 1 18344 45 is_stmt 0 view .LVU10791
 37353 0060 104B     		ldr	r3, .L2730
 37354 0062 1868     		ldr	r0, [r3]
 37355              	.LVL4722:
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 37356              		.loc 1 18344 45 view .LVU10792
 37357 0064 C568     		ldr	r5, [r0, #12]
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 37358              		.loc 1 18344 37 view .LVU10793
 37359 0066 0123     		movs	r3, #1
 37360 0068 0DF10702 		add	r2, sp, #7
 37361 006c 1B21     		movs	r1, #27
 37362 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37363 0070 A847     		blx	r5
 37364              	.LVL4723:
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 37365              		.loc 1 18344 34 view .LVU10794
 37366 0072 54FA80F0 		uxtab	r0, r4, r0
 37367 0076 44B2     		sxtb	r4, r0
 37368              	.LVL4724:
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 37369              		.loc 1 18344 34 view .LVU10795
 37370 0078 01E0     		b	.L2720
 37371              	.LVL4725:
 37372              	.L2723:
18358:Core/Src/bno055.c ****             }
18359:Core/Src/bno055.c ****         }
18360:Core/Src/bno055.c ****         else
18361:Core/Src/bno055.c ****         {
18362:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 37373              		.loc 1 18362 22 view .LVU10796
 37374 007a 4FF0FF34 		mov	r4, #-1
 37375              	.LVL4726:
 37376              	.L2720:
18363:Core/Src/bno055.c ****         }
18364:Core/Src/bno055.c ****     }
18365:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37377              		.loc 1 18365 5 is_stmt 1 view .LVU10797
 37378              		.loc 1 18365 24 is_stmt 0 view .LVU10798
 37379 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 37380              		.loc 1 18365 8 view .LVU10799
 37381 0082 28B9     		cbnz	r0, .L2729
 37382              	.LVL4727:
 37383              	.L2719:
18366:Core/Src/bno055.c ****     {
18367:Core/Src/bno055.c ****         /* set the operation mode of
ARM GAS  /tmp/ccOloYeZ.s 			page 1060


18368:Core/Src/bno055.c ****          * previous operation mode*/
18369:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18370:Core/Src/bno055.c ****     }
18371:Core/Src/bno055.c **** 
18372:Core/Src/bno055.c ****     return com_rslt;
18373:Core/Src/bno055.c **** }
 37384              		.loc 1 18373 1 view .LVU10800
 37385 0084 2046     		mov	r0, r4
 37386 0086 03B0     		add	sp, sp, #12
 37387              		.cfi_remember_state
 37388              		.cfi_def_cfa_offset 12
 37389              		@ sp needed
 37390 0088 30BD     		pop	{r4, r5, pc}
 37391              	.LVL4728:
 37392              	.L2725:
 37393              		.cfi_restore_state
18352:Core/Src/bno055.c ****                 }
 37394              		.loc 1 18352 30 view .LVU10801
 37395 008a 4FF0FF34 		mov	r4, #-1
 37396              	.LVL4729:
18352:Core/Src/bno055.c ****                 }
 37397              		.loc 1 18352 30 view .LVU10802
 37398 008e F6E7     		b	.L2720
 37399              	.LVL4730:
 37400              	.L2729:
18369:Core/Src/bno055.c ****     }
 37401              		.loc 1 18369 9 is_stmt 1 view .LVU10803
18369:Core/Src/bno055.c ****     }
 37402              		.loc 1 18369 21 is_stmt 0 view .LVU10804
 37403 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 37404              	.LVL4731:
18369:Core/Src/bno055.c ****     }
 37405              		.loc 1 18369 18 view .LVU10805
 37406 0094 54FA80F0 		uxtab	r0, r4, r0
 37407 0098 44B2     		sxtb	r4, r0
 37408              	.LVL4732:
18369:Core/Src/bno055.c ****     }
 37409              		.loc 1 18369 18 view .LVU10806
 37410 009a F3E7     		b	.L2719
 37411              	.LVL4733:
 37412              	.L2722:
18315:Core/Src/bno055.c ****     }
 37413              		.loc 1 18315 16 view .LVU10807
 37414 009c 6FF07E04 		mvn	r4, #126
 37415 00a0 F0E7     		b	.L2719
 37416              	.L2731:
 37417 00a2 00BF     		.align	2
 37418              	.L2730:
 37419 00a4 00000000 		.word	p_bno055
 37420              		.cfi_endproc
 37421              	.LFE262:
 37423              		.section	.text.bno055_get_gyro_highrate_z_thres,"ax",%progbits
 37424              		.align	1
 37425              		.global	bno055_get_gyro_highrate_z_thres
 37426              		.syntax unified
 37427              		.thumb
 37428              		.thumb_func
ARM GAS  /tmp/ccOloYeZ.s 			page 1061


 37430              	bno055_get_gyro_highrate_z_thres:
 37431              	.LVL4734:
 37432              	.LFB263:
18374:Core/Src/bno055.c **** 
18375:Core/Src/bno055.c **** /*!
18376:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate z threshold
18377:Core/Src/bno055.c ****  *  from page one register from 0x1C bit 0 to 4
18378:Core/Src/bno055.c ****  *
18379:Core/Src/bno055.c ****  *  @param gyro_highrate_z_thres_u8 : The value of gyro highrate z threshold
18380:Core/Src/bno055.c ****  *
18381:Core/Src/bno055.c ****  *  @return results of bus communication function
18382:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18383:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18384:Core/Src/bno055.c ****  *
18385:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
18386:Core/Src/bno055.c ****  *  selection of gyro range
18387:Core/Src/bno055.c ****  *
18388:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
18389:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18390:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
18391:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
18392:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
18393:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
18394:Core/Src/bno055.c ****  *
18395:Core/Src/bno055.c ****  */
18396:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_z_thres(u8 *gyro_highrate_z_thres_u8)
18397:Core/Src/bno055.c **** {
 37433              		.loc 1 18397 1 is_stmt 1 view -0
 37434              		.cfi_startproc
 37435              		@ args = 0, pretend = 0, frame = 8
 37436              		@ frame_needed = 0, uses_anonymous_args = 0
 37437              		.loc 1 18397 1 is_stmt 0 view .LVU10809
 37438 0000 30B5     		push	{r4, r5, lr}
 37439              		.cfi_def_cfa_offset 12
 37440              		.cfi_offset 4, -12
 37441              		.cfi_offset 5, -8
 37442              		.cfi_offset 14, -4
 37443 0002 83B0     		sub	sp, sp, #12
 37444              		.cfi_def_cfa_offset 24
18398:Core/Src/bno055.c ****     /* Variable used to return value of
18399:Core/Src/bno055.c ****      * communication routine*/
18400:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37445              		.loc 1 18400 5 is_stmt 1 view .LVU10810
 37446              	.LVL4735:
18401:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37447              		.loc 1 18401 5 view .LVU10811
 37448              		.loc 1 18401 8 is_stmt 0 view .LVU10812
 37449 0004 0023     		movs	r3, #0
 37450 0006 8DF80730 		strb	r3, [sp, #7]
18402:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37451              		.loc 1 18402 5 is_stmt 1 view .LVU10813
 37452              	.LVL4736:
18403:Core/Src/bno055.c **** 
18404:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18405:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37453              		.loc 1 18405 5 view .LVU10814
 37454              		.loc 1 18405 18 is_stmt 0 view .LVU10815
ARM GAS  /tmp/ccOloYeZ.s 			page 1062


 37455 000a 144B     		ldr	r3, .L2740
 37456 000c 1B68     		ldr	r3, [r3]
 37457              		.loc 1 18405 8 view .LVU10816
 37458 000e F3B1     		cbz	r3, .L2736
 37459 0010 0446     		mov	r4, r0
18406:Core/Src/bno055.c ****     {
18407:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18408:Core/Src/bno055.c ****     }
18409:Core/Src/bno055.c ****     else
18410:Core/Src/bno055.c ****     {
18411:Core/Src/bno055.c ****         /*condition check for page, gyro highrate z threshold is
18412:Core/Src/bno055.c ****          * available in the page one*/
18413:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 37460              		.loc 1 18413 9 is_stmt 1 view .LVU10817
 37461              		.loc 1 18413 21 is_stmt 0 view .LVU10818
 37462 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37463              		.loc 1 18413 12 view .LVU10819
 37464 0014 012B     		cmp	r3, #1
 37465 0016 14D1     		bne	.L2739
 37466              	.LVL4737:
 37467              	.L2734:
18414:Core/Src/bno055.c ****         {
18415:Core/Src/bno055.c ****             /* Write page as one */
18416:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18417:Core/Src/bno055.c ****         }
18418:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 37468              		.loc 1 18418 53 discriminator 1 view .LVU10820
 37469 0018 104B     		ldr	r3, .L2740
 37470 001a 1B68     		ldr	r3, [r3]
 37471 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37472              		.loc 1 18418 41 discriminator 1 view .LVU10821
 37473 001e 012B     		cmp	r3, #1
 37474 0020 18D1     		bne	.L2737
 37475              	.L2735:
18419:Core/Src/bno055.c ****         {
18420:Core/Src/bno055.c ****             /* Read the value of gyro highrate z threshold*/
18421:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 37476              		.loc 1 18421 13 is_stmt 1 view .LVU10822
 37477              		.loc 1 18421 32 is_stmt 0 view .LVU10823
 37478 0022 0E4B     		ldr	r3, .L2740
 37479 0024 1868     		ldr	r0, [r3]
 37480 0026 0569     		ldr	r5, [r0, #16]
 37481              		.loc 1 18421 24 view .LVU10824
 37482 0028 0123     		movs	r3, #1
 37483 002a 0DF10702 		add	r2, sp, #7
 37484 002e 1C21     		movs	r1, #28
 37485 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37486 0032 A847     		blx	r5
 37487              	.LVL4738:
18422:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Z_THRES_REG,
18423:Core/Src/bno055.c ****                                                       &data_u8r,
18424:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18425:Core/Src/bno055.c ****             *gyro_highrate_z_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_THRES)
 37488              		.loc 1 18425 13 is_stmt 1 view .LVU10825
 37489              		.loc 1 18425 41 is_stmt 0 view .LVU10826
 37490 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 37491 0038 03F01F03 		and	r3, r3, #31
ARM GAS  /tmp/ccOloYeZ.s 			page 1063


 37492              		.loc 1 18425 39 view .LVU10827
 37493 003c 2370     		strb	r3, [r4]
 37494              	.LVL4739:
 37495              	.L2733:
18426:Core/Src/bno055.c ****         }
18427:Core/Src/bno055.c ****         else
18428:Core/Src/bno055.c ****         {
18429:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18430:Core/Src/bno055.c ****         }
18431:Core/Src/bno055.c ****     }
18432:Core/Src/bno055.c **** 
18433:Core/Src/bno055.c ****     return com_rslt;
18434:Core/Src/bno055.c **** }
 37496              		.loc 1 18434 1 view .LVU10828
 37497 003e 03B0     		add	sp, sp, #12
 37498              		.cfi_remember_state
 37499              		.cfi_def_cfa_offset 12
 37500              		@ sp needed
 37501 0040 30BD     		pop	{r4, r5, pc}
 37502              	.LVL4740:
 37503              	.L2739:
 37504              		.cfi_restore_state
18416:Core/Src/bno055.c ****         }
 37505              		.loc 1 18416 13 is_stmt 1 view .LVU10829
18416:Core/Src/bno055.c ****         }
 37506              		.loc 1 18416 23 is_stmt 0 view .LVU10830
 37507 0042 0120     		movs	r0, #1
 37508              	.LVL4741:
18416:Core/Src/bno055.c ****         }
 37509              		.loc 1 18416 23 view .LVU10831
 37510 0044 FFF7FEFF 		bl	bno055_write_page_id
 37511              	.LVL4742:
18418:Core/Src/bno055.c ****         {
 37512              		.loc 1 18418 9 is_stmt 1 view .LVU10832
18418:Core/Src/bno055.c ****         {
 37513              		.loc 1 18418 12 is_stmt 0 view .LVU10833
 37514 0048 0028     		cmp	r0, #0
 37515 004a EAD0     		beq	.L2735
 37516 004c E4E7     		b	.L2734
 37517              	.LVL4743:
 37518              	.L2736:
18407:Core/Src/bno055.c ****     }
 37519              		.loc 1 18407 16 view .LVU10834
 37520 004e 6FF07E00 		mvn	r0, #126
 37521              	.LVL4744:
18407:Core/Src/bno055.c ****     }
 37522              		.loc 1 18407 16 view .LVU10835
 37523 0052 F4E7     		b	.L2733
 37524              	.LVL4745:
 37525              	.L2737:
18429:Core/Src/bno055.c ****         }
 37526              		.loc 1 18429 22 view .LVU10836
 37527 0054 4FF0FF30 		mov	r0, #-1
 37528 0058 F1E7     		b	.L2733
 37529              	.L2741:
 37530 005a 00BF     		.align	2
 37531              	.L2740:
ARM GAS  /tmp/ccOloYeZ.s 			page 1064


 37532 005c 00000000 		.word	p_bno055
 37533              		.cfi_endproc
 37534              	.LFE263:
 37536              		.section	.text.bno055_set_gyro_highrate_z_thres,"ax",%progbits
 37537              		.align	1
 37538              		.global	bno055_set_gyro_highrate_z_thres
 37539              		.syntax unified
 37540              		.thumb
 37541              		.thumb_func
 37543              	bno055_set_gyro_highrate_z_thres:
 37544              	.LVL4746:
 37545              	.LFB264:
18435:Core/Src/bno055.c **** 
18436:Core/Src/bno055.c **** /*!
18437:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate z threshold
18438:Core/Src/bno055.c ****  *  from page one register from 0x1C bit 0 to 4
18439:Core/Src/bno055.c ****  *
18440:Core/Src/bno055.c ****  *  @param gyro_highrate_z_thres_u8 : The value of gyro highrate z threshold
18441:Core/Src/bno055.c ****  *
18442:Core/Src/bno055.c ****  *  @return results of bus communication function
18443:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18444:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18445:Core/Src/bno055.c ****  *
18446:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
18447:Core/Src/bno055.c ****  *  selection of gyro range
18448:Core/Src/bno055.c ****  *
18449:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
18450:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18451:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
18452:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
18453:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
18454:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
18455:Core/Src/bno055.c ****  *
18456:Core/Src/bno055.c ****  */
18457:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_z_thres(u8 gyro_highrate_z_thres_u8)
18458:Core/Src/bno055.c **** {
 37546              		.loc 1 18458 1 is_stmt 1 view -0
 37547              		.cfi_startproc
 37548              		@ args = 0, pretend = 0, frame = 8
 37549              		@ frame_needed = 0, uses_anonymous_args = 0
 37550              		.loc 1 18458 1 is_stmt 0 view .LVU10838
 37551 0000 30B5     		push	{r4, r5, lr}
 37552              		.cfi_def_cfa_offset 12
 37553              		.cfi_offset 4, -12
 37554              		.cfi_offset 5, -8
 37555              		.cfi_offset 14, -4
 37556 0002 83B0     		sub	sp, sp, #12
 37557              		.cfi_def_cfa_offset 24
18459:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37558              		.loc 1 18459 5 is_stmt 1 view .LVU10839
 37559              	.LVL4747:
18460:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37560              		.loc 1 18460 5 view .LVU10840
 37561              		.loc 1 18460 8 is_stmt 0 view .LVU10841
 37562 0004 0023     		movs	r3, #0
 37563 0006 8DF80730 		strb	r3, [sp, #7]
18461:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/ccOloYeZ.s 			page 1065


 37564              		.loc 1 18461 5 is_stmt 1 view .LVU10842
 37565              	.LVL4748:
18462:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 37566              		.loc 1 18462 5 view .LVU10843
 37567              		.loc 1 18462 8 is_stmt 0 view .LVU10844
 37568 000a 8DF80630 		strb	r3, [sp, #6]
18463:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 37569              		.loc 1 18463 5 is_stmt 1 view .LVU10845
 37570              	.LVL4749:
18464:Core/Src/bno055.c **** 
18465:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18466:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37571              		.loc 1 18466 5 view .LVU10846
 37572              		.loc 1 18466 18 is_stmt 0 view .LVU10847
 37573 000e 284B     		ldr	r3, .L2754
 37574 0010 1B68     		ldr	r3, [r3]
 37575              		.loc 1 18466 8 view .LVU10848
 37576 0012 002B     		cmp	r3, #0
 37577 0014 49D0     		beq	.L2746
 37578 0016 0546     		mov	r5, r0
18467:Core/Src/bno055.c ****     {
18468:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18469:Core/Src/bno055.c ****     }
18470:Core/Src/bno055.c ****     else
18471:Core/Src/bno055.c ****     {
18472:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18473:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18474:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18475:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 37579              		.loc 1 18475 9 is_stmt 1 view .LVU10849
 37580              		.loc 1 18475 19 is_stmt 0 view .LVU10850
 37581 0018 0DF10600 		add	r0, sp, #6
 37582              	.LVL4750:
 37583              		.loc 1 18475 19 view .LVU10851
 37584 001c FFF7FEFF 		bl	bno055_get_operation_mode
 37585              	.LVL4751:
18476:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 37586              		.loc 1 18476 9 is_stmt 1 view .LVU10852
 37587              		.loc 1 18476 12 is_stmt 0 view .LVU10853
 37588 0020 0446     		mov	r4, r0
 37589 0022 88BB     		cbnz	r0, .L2747
18477:Core/Src/bno055.c ****         {
18478:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37590              		.loc 1 18478 13 is_stmt 1 view .LVU10854
 37591              		.loc 1 18478 32 is_stmt 0 view .LVU10855
 37592 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 37593              		.loc 1 18478 16 view .LVU10856
 37594 0028 1BB9     		cbnz	r3, .L2751
 37595              	.LVL4752:
 37596              	.L2745:
18479:Core/Src/bno055.c ****             {
18480:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18481:Core/Src/bno055.c ****             }
18482:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 37597              		.loc 1 18482 13 is_stmt 1 view .LVU10857
 37598              		.loc 1 18482 16 is_stmt 0 view .LVU10858
 37599 002a 44B1     		cbz	r4, .L2752
ARM GAS  /tmp/ccOloYeZ.s 			page 1066


18483:Core/Src/bno055.c ****             {
18484:Core/Src/bno055.c ****                 /* Write page as one */
18485:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18486:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18487:Core/Src/bno055.c ****                 {
18488:Core/Src/bno055.c ****                     /* Write the value
18489:Core/Src/bno055.c ****                      * of gyro highrate z threshold*/
18490:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18491:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
18492:Core/Src/bno055.c ****                                                               &data_u8r,
18493:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18494:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18495:Core/Src/bno055.c ****                     {
18496:Core/Src/bno055.c ****                         data_u8r =
18497:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_THRES, gyro_highra
18498:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18499:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
18500:Core/Src/bno055.c ****                                                                     &data_u8r,
18501:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18502:Core/Src/bno055.c ****                     }
18503:Core/Src/bno055.c ****                 }
18504:Core/Src/bno055.c ****                 else
18505:Core/Src/bno055.c ****                 {
18506:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18507:Core/Src/bno055.c ****                 }
18508:Core/Src/bno055.c ****             }
18509:Core/Src/bno055.c ****             else
18510:Core/Src/bno055.c ****             {
18511:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 37600              		.loc 1 18511 26 view .LVU10859
 37601 002c 4FF0FF34 		mov	r4, #-1
 37602              	.LVL4753:
 37603              		.loc 1 18511 26 view .LVU10860
 37604 0030 2CE0     		b	.L2744
 37605              	.LVL4754:
 37606              	.L2751:
18480:Core/Src/bno055.c ****             }
 37607              		.loc 1 18480 17 is_stmt 1 view .LVU10861
18480:Core/Src/bno055.c ****             }
 37608              		.loc 1 18480 28 is_stmt 0 view .LVU10862
 37609 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 37610              	.LVL4755:
18480:Core/Src/bno055.c ****             }
 37611              		.loc 1 18480 25 view .LVU10863
 37612 0036 54FA80F4 		uxtab	r4, r4, r0
 37613 003a 64B2     		sxtb	r4, r4
 37614              	.LVL4756:
18480:Core/Src/bno055.c ****             }
 37615              		.loc 1 18480 25 view .LVU10864
 37616 003c F5E7     		b	.L2745
 37617              	.L2752:
18485:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37618              		.loc 1 18485 17 is_stmt 1 view .LVU10865
18485:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37619              		.loc 1 18485 30 is_stmt 0 view .LVU10866
 37620 003e 0120     		movs	r0, #1
 37621 0040 FFF7FEFF 		bl	bno055_write_page_id
ARM GAS  /tmp/ccOloYeZ.s 			page 1067


 37622              	.LVL4757:
18486:Core/Src/bno055.c ****                 {
 37623              		.loc 1 18486 17 is_stmt 1 view .LVU10867
18486:Core/Src/bno055.c ****                 {
 37624              		.loc 1 18486 20 is_stmt 0 view .LVU10868
 37625 0044 40BB     		cbnz	r0, .L2749
18490:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
 37626              		.loc 1 18490 21 is_stmt 1 view .LVU10869
18490:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
 37627              		.loc 1 18490 40 is_stmt 0 view .LVU10870
 37628 0046 1A4B     		ldr	r3, .L2754
 37629 0048 1868     		ldr	r0, [r3]
 37630              	.LVL4758:
18490:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
 37631              		.loc 1 18490 40 view .LVU10871
 37632 004a 0469     		ldr	r4, [r0, #16]
 37633              	.LVL4759:
18490:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
 37634              		.loc 1 18490 32 view .LVU10872
 37635 004c 0123     		movs	r3, #1
 37636 004e 0DF10702 		add	r2, sp, #7
 37637 0052 1C21     		movs	r1, #28
 37638 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37639 0056 A047     		blx	r4
 37640              	.LVL4760:
18494:Core/Src/bno055.c ****                     {
 37641              		.loc 1 18494 21 is_stmt 1 view .LVU10873
18494:Core/Src/bno055.c ****                     {
 37642              		.loc 1 18494 24 is_stmt 0 view .LVU10874
 37643 0058 0446     		mov	r4, r0
 37644 005a B8B9     		cbnz	r0, .L2744
18496:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_THRES, gyro_highra
 37645              		.loc 1 18496 25 is_stmt 1 view .LVU10875
18497:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37646              		.loc 1 18497 29 is_stmt 0 view .LVU10876
 37647 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
18496:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_THRES, gyro_highra
 37648              		.loc 1 18496 34 view .LVU10877
 37649 0060 23F01F03 		bic	r3, r3, #31
 37650 0064 05F01F00 		and	r0, r5, #31
 37651              	.LVL4761:
18496:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_THRES, gyro_highra
 37652              		.loc 1 18496 34 view .LVU10878
 37653 0068 0343     		orrs	r3, r3, r0
 37654 006a 8DF80730 		strb	r3, [sp, #7]
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 37655              		.loc 1 18498 25 is_stmt 1 view .LVU10879
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 37656              		.loc 1 18498 45 is_stmt 0 view .LVU10880
 37657 006e 104B     		ldr	r3, .L2754
 37658 0070 1868     		ldr	r0, [r3]
 37659 0072 C568     		ldr	r5, [r0, #12]
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 37660              		.loc 1 18498 37 view .LVU10881
 37661 0074 0123     		movs	r3, #1
 37662 0076 0DF10702 		add	r2, sp, #7
 37663 007a 1C21     		movs	r1, #28
ARM GAS  /tmp/ccOloYeZ.s 			page 1068


 37664 007c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37665 007e A847     		blx	r5
 37666              	.LVL4762:
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 37667              		.loc 1 18498 34 view .LVU10882
 37668 0080 54FA80F0 		uxtab	r0, r4, r0
 37669 0084 44B2     		sxtb	r4, r0
 37670              	.LVL4763:
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 37671              		.loc 1 18498 34 view .LVU10883
 37672 0086 01E0     		b	.L2744
 37673              	.LVL4764:
 37674              	.L2747:
18512:Core/Src/bno055.c ****             }
18513:Core/Src/bno055.c ****         }
18514:Core/Src/bno055.c ****         else
18515:Core/Src/bno055.c ****         {
18516:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 37675              		.loc 1 18516 22 view .LVU10884
 37676 0088 4FF0FF34 		mov	r4, #-1
 37677              	.LVL4765:
 37678              	.L2744:
18517:Core/Src/bno055.c ****         }
18518:Core/Src/bno055.c ****     }
18519:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37679              		.loc 1 18519 5 is_stmt 1 view .LVU10885
 37680              		.loc 1 18519 24 is_stmt 0 view .LVU10886
 37681 008c 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 37682              		.loc 1 18519 8 view .LVU10887
 37683 0090 28B9     		cbnz	r0, .L2753
 37684              	.LVL4766:
 37685              	.L2743:
18520:Core/Src/bno055.c ****     {
18521:Core/Src/bno055.c ****         /* set the operation mode of
18522:Core/Src/bno055.c ****          * previous operation mode*/
18523:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18524:Core/Src/bno055.c ****     }
18525:Core/Src/bno055.c **** 
18526:Core/Src/bno055.c ****     return com_rslt;
18527:Core/Src/bno055.c **** }
 37686              		.loc 1 18527 1 view .LVU10888
 37687 0092 2046     		mov	r0, r4
 37688 0094 03B0     		add	sp, sp, #12
 37689              		.cfi_remember_state
 37690              		.cfi_def_cfa_offset 12
 37691              		@ sp needed
 37692 0096 30BD     		pop	{r4, r5, pc}
 37693              	.LVL4767:
 37694              	.L2749:
 37695              		.cfi_restore_state
18506:Core/Src/bno055.c ****                 }
 37696              		.loc 1 18506 30 view .LVU10889
 37697 0098 4FF0FF34 		mov	r4, #-1
 37698              	.LVL4768:
18506:Core/Src/bno055.c ****                 }
 37699              		.loc 1 18506 30 view .LVU10890
 37700 009c F6E7     		b	.L2744
ARM GAS  /tmp/ccOloYeZ.s 			page 1069


 37701              	.LVL4769:
 37702              	.L2753:
18523:Core/Src/bno055.c ****     }
 37703              		.loc 1 18523 9 is_stmt 1 view .LVU10891
18523:Core/Src/bno055.c ****     }
 37704              		.loc 1 18523 21 is_stmt 0 view .LVU10892
 37705 009e FFF7FEFF 		bl	bno055_set_operation_mode
 37706              	.LVL4770:
18523:Core/Src/bno055.c ****     }
 37707              		.loc 1 18523 18 view .LVU10893
 37708 00a2 54FA80F0 		uxtab	r0, r4, r0
 37709 00a6 44B2     		sxtb	r4, r0
 37710              	.LVL4771:
18523:Core/Src/bno055.c ****     }
 37711              		.loc 1 18523 18 view .LVU10894
 37712 00a8 F3E7     		b	.L2743
 37713              	.LVL4772:
 37714              	.L2746:
18468:Core/Src/bno055.c ****     }
 37715              		.loc 1 18468 16 view .LVU10895
 37716 00aa 6FF07E04 		mvn	r4, #126
 37717 00ae F0E7     		b	.L2743
 37718              	.L2755:
 37719              		.align	2
 37720              	.L2754:
 37721 00b0 00000000 		.word	p_bno055
 37722              		.cfi_endproc
 37723              	.LFE264:
 37725              		.section	.text.bno055_get_gyro_highrate_z_hyst,"ax",%progbits
 37726              		.align	1
 37727              		.global	bno055_get_gyro_highrate_z_hyst
 37728              		.syntax unified
 37729              		.thumb
 37730              		.thumb_func
 37732              	bno055_get_gyro_highrate_z_hyst:
 37733              	.LVL4773:
 37734              	.LFB265:
18528:Core/Src/bno055.c **** 
18529:Core/Src/bno055.c **** /*!
18530:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate z hysteresis
18531:Core/Src/bno055.c ****  *  from page one register from 0x1C bit 5 to 6
18532:Core/Src/bno055.c ****  *
18533:Core/Src/bno055.c ****  *  @param gyro_highrate_z_hyst_u8 : The value of gyro highrate z hysteresis
18534:Core/Src/bno055.c ****  *
18535:Core/Src/bno055.c ****  *  @return results of bus communication function
18536:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18537:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18538:Core/Src/bno055.c ****  *
18539:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
18540:Core/Src/bno055.c ****  *
18541:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_z_hyst_u8) *4 LSB
18542:Core/Src/bno055.c ****  *
18543:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
18544:Core/Src/bno055.c ****  *
18545:Core/Src/bno055.c ****  *  gyro_range_u8     |  hysteresis     |     LSB
18546:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18547:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
ARM GAS  /tmp/ccOloYeZ.s 			page 1070


18548:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
18549:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
18550:Core/Src/bno055.c ****  */
18551:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_z_hyst(u8 *gyro_highrate_z_hyst_u8)
18552:Core/Src/bno055.c **** {
 37735              		.loc 1 18552 1 is_stmt 1 view -0
 37736              		.cfi_startproc
 37737              		@ args = 0, pretend = 0, frame = 8
 37738              		@ frame_needed = 0, uses_anonymous_args = 0
 37739              		.loc 1 18552 1 is_stmt 0 view .LVU10897
 37740 0000 30B5     		push	{r4, r5, lr}
 37741              		.cfi_def_cfa_offset 12
 37742              		.cfi_offset 4, -12
 37743              		.cfi_offset 5, -8
 37744              		.cfi_offset 14, -4
 37745 0002 83B0     		sub	sp, sp, #12
 37746              		.cfi_def_cfa_offset 24
18553:Core/Src/bno055.c ****     /* Variable used to return value of
18554:Core/Src/bno055.c ****      * communication routine*/
18555:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37747              		.loc 1 18555 5 is_stmt 1 view .LVU10898
 37748              	.LVL4774:
18556:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37749              		.loc 1 18556 5 view .LVU10899
 37750              		.loc 1 18556 8 is_stmt 0 view .LVU10900
 37751 0004 0023     		movs	r3, #0
 37752 0006 8DF80730 		strb	r3, [sp, #7]
18557:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37753              		.loc 1 18557 5 is_stmt 1 view .LVU10901
 37754              	.LVL4775:
18558:Core/Src/bno055.c **** 
18559:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18560:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37755              		.loc 1 18560 5 view .LVU10902
 37756              		.loc 1 18560 18 is_stmt 0 view .LVU10903
 37757 000a 144B     		ldr	r3, .L2764
 37758 000c 1B68     		ldr	r3, [r3]
 37759              		.loc 1 18560 8 view .LVU10904
 37760 000e F3B1     		cbz	r3, .L2760
 37761 0010 0446     		mov	r4, r0
18561:Core/Src/bno055.c ****     {
18562:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18563:Core/Src/bno055.c ****     }
18564:Core/Src/bno055.c ****     else
18565:Core/Src/bno055.c ****     {
18566:Core/Src/bno055.c ****         /*condition check for page, gyro highrate z hysteresis is
18567:Core/Src/bno055.c ****          * available in the page one*/
18568:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 37762              		.loc 1 18568 9 is_stmt 1 view .LVU10905
 37763              		.loc 1 18568 21 is_stmt 0 view .LVU10906
 37764 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37765              		.loc 1 18568 12 view .LVU10907
 37766 0014 012B     		cmp	r3, #1
 37767 0016 14D1     		bne	.L2763
 37768              	.LVL4776:
 37769              	.L2758:
18569:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccOloYeZ.s 			page 1071


18570:Core/Src/bno055.c ****             /* Write page as one */
18571:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18572:Core/Src/bno055.c ****         }
18573:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 37770              		.loc 1 18573 53 discriminator 1 view .LVU10908
 37771 0018 104B     		ldr	r3, .L2764
 37772 001a 1B68     		ldr	r3, [r3]
 37773 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37774              		.loc 1 18573 41 discriminator 1 view .LVU10909
 37775 001e 012B     		cmp	r3, #1
 37776 0020 18D1     		bne	.L2761
 37777              	.L2759:
18574:Core/Src/bno055.c ****         {
18575:Core/Src/bno055.c ****             /* Read the value of gyro highrate z hysteresis*/
18576:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 37778              		.loc 1 18576 13 is_stmt 1 view .LVU10910
 37779              		.loc 1 18576 32 is_stmt 0 view .LVU10911
 37780 0022 0E4B     		ldr	r3, .L2764
 37781 0024 1868     		ldr	r0, [r3]
 37782 0026 0569     		ldr	r5, [r0, #16]
 37783              		.loc 1 18576 24 view .LVU10912
 37784 0028 0123     		movs	r3, #1
 37785 002a 0DF10702 		add	r2, sp, #7
 37786 002e 1C21     		movs	r1, #28
 37787 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37788 0032 A847     		blx	r5
 37789              	.LVL4777:
18577:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Z_HYST_REG,
18578:Core/Src/bno055.c ****                                                       &data_u8r,
18579:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18580:Core/Src/bno055.c ****             *gyro_highrate_z_hyst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_HYST);
 37790              		.loc 1 18580 13 is_stmt 1 view .LVU10913
 37791              		.loc 1 18580 40 is_stmt 0 view .LVU10914
 37792 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 37793 0038 C3F34113 		ubfx	r3, r3, #5, #2
 37794              		.loc 1 18580 38 view .LVU10915
 37795 003c 2370     		strb	r3, [r4]
 37796              	.LVL4778:
 37797              	.L2757:
18581:Core/Src/bno055.c ****         }
18582:Core/Src/bno055.c ****         else
18583:Core/Src/bno055.c ****         {
18584:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18585:Core/Src/bno055.c ****         }
18586:Core/Src/bno055.c ****     }
18587:Core/Src/bno055.c **** 
18588:Core/Src/bno055.c ****     return com_rslt;
18589:Core/Src/bno055.c **** }
 37798              		.loc 1 18589 1 view .LVU10916
 37799 003e 03B0     		add	sp, sp, #12
 37800              		.cfi_remember_state
 37801              		.cfi_def_cfa_offset 12
 37802              		@ sp needed
 37803 0040 30BD     		pop	{r4, r5, pc}
 37804              	.LVL4779:
 37805              	.L2763:
 37806              		.cfi_restore_state
ARM GAS  /tmp/ccOloYeZ.s 			page 1072


18571:Core/Src/bno055.c ****         }
 37807              		.loc 1 18571 13 is_stmt 1 view .LVU10917
18571:Core/Src/bno055.c ****         }
 37808              		.loc 1 18571 23 is_stmt 0 view .LVU10918
 37809 0042 0120     		movs	r0, #1
 37810              	.LVL4780:
18571:Core/Src/bno055.c ****         }
 37811              		.loc 1 18571 23 view .LVU10919
 37812 0044 FFF7FEFF 		bl	bno055_write_page_id
 37813              	.LVL4781:
18573:Core/Src/bno055.c ****         {
 37814              		.loc 1 18573 9 is_stmt 1 view .LVU10920
18573:Core/Src/bno055.c ****         {
 37815              		.loc 1 18573 12 is_stmt 0 view .LVU10921
 37816 0048 0028     		cmp	r0, #0
 37817 004a EAD0     		beq	.L2759
 37818 004c E4E7     		b	.L2758
 37819              	.LVL4782:
 37820              	.L2760:
18562:Core/Src/bno055.c ****     }
 37821              		.loc 1 18562 16 view .LVU10922
 37822 004e 6FF07E00 		mvn	r0, #126
 37823              	.LVL4783:
18562:Core/Src/bno055.c ****     }
 37824              		.loc 1 18562 16 view .LVU10923
 37825 0052 F4E7     		b	.L2757
 37826              	.LVL4784:
 37827              	.L2761:
18584:Core/Src/bno055.c ****         }
 37828              		.loc 1 18584 22 view .LVU10924
 37829 0054 4FF0FF30 		mov	r0, #-1
 37830 0058 F1E7     		b	.L2757
 37831              	.L2765:
 37832 005a 00BF     		.align	2
 37833              	.L2764:
 37834 005c 00000000 		.word	p_bno055
 37835              		.cfi_endproc
 37836              	.LFE265:
 37838              		.section	.text.bno055_set_gyro_highrate_z_hyst,"ax",%progbits
 37839              		.align	1
 37840              		.global	bno055_set_gyro_highrate_z_hyst
 37841              		.syntax unified
 37842              		.thumb
 37843              		.thumb_func
 37845              	bno055_set_gyro_highrate_z_hyst:
 37846              	.LVL4785:
 37847              	.LFB266:
18590:Core/Src/bno055.c **** 
18591:Core/Src/bno055.c **** /*!
18592:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate z hysteresis
18593:Core/Src/bno055.c ****  *  from page one register from 0x1C bit 5 to 6
18594:Core/Src/bno055.c ****  *
18595:Core/Src/bno055.c ****  *  @param gyro_highrate_z_hyst_u8 : The value of gyro highrate z hysteresis
18596:Core/Src/bno055.c ****  *
18597:Core/Src/bno055.c ****  *  @return results of bus communication function
18598:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18599:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
ARM GAS  /tmp/ccOloYeZ.s 			page 1073


18600:Core/Src/bno055.c ****  *
18601:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
18602:Core/Src/bno055.c ****  *
18603:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_z_hyst_u8) *4 LSB
18604:Core/Src/bno055.c ****  *
18605:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
18606:Core/Src/bno055.c ****  *
18607:Core/Src/bno055.c ****  *  gyro_range_u8     |  hysteresis     |     LSB
18608:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18609:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
18610:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
18611:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
18612:Core/Src/bno055.c ****  */
18613:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_z_hyst(u8 gyro_highrate_z_hyst_u8)
18614:Core/Src/bno055.c **** {
 37848              		.loc 1 18614 1 is_stmt 1 view -0
 37849              		.cfi_startproc
 37850              		@ args = 0, pretend = 0, frame = 8
 37851              		@ frame_needed = 0, uses_anonymous_args = 0
 37852              		.loc 1 18614 1 is_stmt 0 view .LVU10926
 37853 0000 30B5     		push	{r4, r5, lr}
 37854              		.cfi_def_cfa_offset 12
 37855              		.cfi_offset 4, -12
 37856              		.cfi_offset 5, -8
 37857              		.cfi_offset 14, -4
 37858 0002 83B0     		sub	sp, sp, #12
 37859              		.cfi_def_cfa_offset 24
18615:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37860              		.loc 1 18615 5 is_stmt 1 view .LVU10927
 37861              	.LVL4786:
18616:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37862              		.loc 1 18616 5 view .LVU10928
 37863              		.loc 1 18616 8 is_stmt 0 view .LVU10929
 37864 0004 0023     		movs	r3, #0
 37865 0006 8DF80730 		strb	r3, [sp, #7]
18617:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37866              		.loc 1 18617 5 is_stmt 1 view .LVU10930
 37867              	.LVL4787:
18618:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 37868              		.loc 1 18618 5 view .LVU10931
 37869              		.loc 1 18618 8 is_stmt 0 view .LVU10932
 37870 000a 8DF80630 		strb	r3, [sp, #6]
18619:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 37871              		.loc 1 18619 5 is_stmt 1 view .LVU10933
 37872              	.LVL4788:
18620:Core/Src/bno055.c **** 
18621:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18622:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37873              		.loc 1 18622 5 view .LVU10934
 37874              		.loc 1 18622 18 is_stmt 0 view .LVU10935
 37875 000e 294B     		ldr	r3, .L2778
 37876 0010 1B68     		ldr	r3, [r3]
 37877              		.loc 1 18622 8 view .LVU10936
 37878 0012 002B     		cmp	r3, #0
 37879 0014 4AD0     		beq	.L2770
 37880 0016 0546     		mov	r5, r0
18623:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccOloYeZ.s 			page 1074


18624:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18625:Core/Src/bno055.c ****     }
18626:Core/Src/bno055.c ****     else
18627:Core/Src/bno055.c ****     {
18628:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18629:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18630:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18631:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 37881              		.loc 1 18631 9 is_stmt 1 view .LVU10937
 37882              		.loc 1 18631 19 is_stmt 0 view .LVU10938
 37883 0018 0DF10600 		add	r0, sp, #6
 37884              	.LVL4789:
 37885              		.loc 1 18631 19 view .LVU10939
 37886 001c FFF7FEFF 		bl	bno055_get_operation_mode
 37887              	.LVL4790:
18632:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 37888              		.loc 1 18632 9 is_stmt 1 view .LVU10940
 37889              		.loc 1 18632 12 is_stmt 0 view .LVU10941
 37890 0020 0446     		mov	r4, r0
 37891 0022 90BB     		cbnz	r0, .L2771
18633:Core/Src/bno055.c ****         {
18634:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37892              		.loc 1 18634 13 is_stmt 1 view .LVU10942
 37893              		.loc 1 18634 32 is_stmt 0 view .LVU10943
 37894 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 37895              		.loc 1 18634 16 view .LVU10944
 37896 0028 1BB9     		cbnz	r3, .L2775
 37897              	.LVL4791:
 37898              	.L2769:
18635:Core/Src/bno055.c ****             {
18636:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18637:Core/Src/bno055.c ****             }
18638:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 37899              		.loc 1 18638 13 is_stmt 1 view .LVU10945
 37900              		.loc 1 18638 16 is_stmt 0 view .LVU10946
 37901 002a 44B1     		cbz	r4, .L2776
18639:Core/Src/bno055.c ****             {
18640:Core/Src/bno055.c ****                 /* Write page as one */
18641:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18642:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18643:Core/Src/bno055.c ****                 {
18644:Core/Src/bno055.c ****                     /* Write the value
18645:Core/Src/bno055.c ****                      * of gyro highrate z hysteresis*/
18646:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18647:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
18648:Core/Src/bno055.c ****                                                               &data_u8r,
18649:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18650:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18651:Core/Src/bno055.c ****                     {
18652:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_HYST, gyro_
18653:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18654:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
18655:Core/Src/bno055.c ****                                                                     &data_u8r,
18656:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18657:Core/Src/bno055.c ****                     }
18658:Core/Src/bno055.c ****                 }
18659:Core/Src/bno055.c ****                 else
ARM GAS  /tmp/ccOloYeZ.s 			page 1075


18660:Core/Src/bno055.c ****                 {
18661:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18662:Core/Src/bno055.c ****                 }
18663:Core/Src/bno055.c ****             }
18664:Core/Src/bno055.c ****             else
18665:Core/Src/bno055.c ****             {
18666:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 37902              		.loc 1 18666 26 view .LVU10947
 37903 002c 4FF0FF34 		mov	r4, #-1
 37904              	.LVL4792:
 37905              		.loc 1 18666 26 view .LVU10948
 37906 0030 2DE0     		b	.L2768
 37907              	.LVL4793:
 37908              	.L2775:
18636:Core/Src/bno055.c ****             }
 37909              		.loc 1 18636 17 is_stmt 1 view .LVU10949
18636:Core/Src/bno055.c ****             }
 37910              		.loc 1 18636 28 is_stmt 0 view .LVU10950
 37911 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 37912              	.LVL4794:
18636:Core/Src/bno055.c ****             }
 37913              		.loc 1 18636 25 view .LVU10951
 37914 0036 54FA80F4 		uxtab	r4, r4, r0
 37915 003a 64B2     		sxtb	r4, r4
 37916              	.LVL4795:
18636:Core/Src/bno055.c ****             }
 37917              		.loc 1 18636 25 view .LVU10952
 37918 003c F5E7     		b	.L2769
 37919              	.L2776:
18641:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37920              		.loc 1 18641 17 is_stmt 1 view .LVU10953
18641:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37921              		.loc 1 18641 30 is_stmt 0 view .LVU10954
 37922 003e 0120     		movs	r0, #1
 37923 0040 FFF7FEFF 		bl	bno055_write_page_id
 37924              	.LVL4796:
18642:Core/Src/bno055.c ****                 {
 37925              		.loc 1 18642 17 is_stmt 1 view .LVU10955
18642:Core/Src/bno055.c ****                 {
 37926              		.loc 1 18642 20 is_stmt 0 view .LVU10956
 37927 0044 48BB     		cbnz	r0, .L2773
18646:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
 37928              		.loc 1 18646 21 is_stmt 1 view .LVU10957
18646:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
 37929              		.loc 1 18646 40 is_stmt 0 view .LVU10958
 37930 0046 1B4B     		ldr	r3, .L2778
 37931 0048 1868     		ldr	r0, [r3]
 37932              	.LVL4797:
18646:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
 37933              		.loc 1 18646 40 view .LVU10959
 37934 004a 0469     		ldr	r4, [r0, #16]
 37935              	.LVL4798:
18646:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
 37936              		.loc 1 18646 32 view .LVU10960
 37937 004c 0123     		movs	r3, #1
 37938 004e 0DF10702 		add	r2, sp, #7
 37939 0052 1C21     		movs	r1, #28
ARM GAS  /tmp/ccOloYeZ.s 			page 1076


 37940 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37941 0056 A047     		blx	r4
 37942              	.LVL4799:
18650:Core/Src/bno055.c ****                     {
 37943              		.loc 1 18650 21 is_stmt 1 view .LVU10961
18650:Core/Src/bno055.c ****                     {
 37944              		.loc 1 18650 24 is_stmt 0 view .LVU10962
 37945 0058 0446     		mov	r4, r0
 37946 005a C0B9     		cbnz	r0, .L2768
18652:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37947              		.loc 1 18652 25 is_stmt 1 view .LVU10963
18652:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37948              		.loc 1 18652 36 is_stmt 0 view .LVU10964
 37949 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 37950 0060 6801     		lsls	r0, r5, #5
 37951              	.LVL4800:
18652:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37952              		.loc 1 18652 36 view .LVU10965
 37953 0062 00F06000 		and	r0, r0, #96
 37954 0066 23F06003 		bic	r3, r3, #96
 37955 006a 0343     		orrs	r3, r3, r0
18652:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37956              		.loc 1 18652 34 view .LVU10966
 37957 006c 8DF80730 		strb	r3, [sp, #7]
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 37958              		.loc 1 18653 25 is_stmt 1 view .LVU10967
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 37959              		.loc 1 18653 45 is_stmt 0 view .LVU10968
 37960 0070 104B     		ldr	r3, .L2778
 37961 0072 1868     		ldr	r0, [r3]
 37962 0074 C568     		ldr	r5, [r0, #12]
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 37963              		.loc 1 18653 37 view .LVU10969
 37964 0076 0123     		movs	r3, #1
 37965 0078 0DF10702 		add	r2, sp, #7
 37966 007c 1C21     		movs	r1, #28
 37967 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37968 0080 A847     		blx	r5
 37969              	.LVL4801:
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 37970              		.loc 1 18653 34 view .LVU10970
 37971 0082 54FA80F0 		uxtab	r0, r4, r0
 37972 0086 44B2     		sxtb	r4, r0
 37973              	.LVL4802:
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 37974              		.loc 1 18653 34 view .LVU10971
 37975 0088 01E0     		b	.L2768
 37976              	.LVL4803:
 37977              	.L2771:
18667:Core/Src/bno055.c ****             }
18668:Core/Src/bno055.c ****         }
18669:Core/Src/bno055.c ****         else
18670:Core/Src/bno055.c ****         {
18671:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 37978              		.loc 1 18671 22 view .LVU10972
 37979 008a 4FF0FF34 		mov	r4, #-1
 37980              	.LVL4804:
ARM GAS  /tmp/ccOloYeZ.s 			page 1077


 37981              	.L2768:
18672:Core/Src/bno055.c ****         }
18673:Core/Src/bno055.c ****     }
18674:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37982              		.loc 1 18674 5 is_stmt 1 view .LVU10973
 37983              		.loc 1 18674 24 is_stmt 0 view .LVU10974
 37984 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 37985              		.loc 1 18674 8 view .LVU10975
 37986 0092 28B9     		cbnz	r0, .L2777
 37987              	.LVL4805:
 37988              	.L2767:
18675:Core/Src/bno055.c ****     {
18676:Core/Src/bno055.c ****         /* set the operation mode of
18677:Core/Src/bno055.c ****          * previous operation mode*/
18678:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18679:Core/Src/bno055.c ****     }
18680:Core/Src/bno055.c **** 
18681:Core/Src/bno055.c ****     return com_rslt;
18682:Core/Src/bno055.c **** }
 37989              		.loc 1 18682 1 view .LVU10976
 37990 0094 2046     		mov	r0, r4
 37991 0096 03B0     		add	sp, sp, #12
 37992              		.cfi_remember_state
 37993              		.cfi_def_cfa_offset 12
 37994              		@ sp needed
 37995 0098 30BD     		pop	{r4, r5, pc}
 37996              	.LVL4806:
 37997              	.L2773:
 37998              		.cfi_restore_state
18661:Core/Src/bno055.c ****                 }
 37999              		.loc 1 18661 30 view .LVU10977
 38000 009a 4FF0FF34 		mov	r4, #-1
 38001              	.LVL4807:
18661:Core/Src/bno055.c ****                 }
 38002              		.loc 1 18661 30 view .LVU10978
 38003 009e F6E7     		b	.L2768
 38004              	.LVL4808:
 38005              	.L2777:
18678:Core/Src/bno055.c ****     }
 38006              		.loc 1 18678 9 is_stmt 1 view .LVU10979
18678:Core/Src/bno055.c ****     }
 38007              		.loc 1 18678 21 is_stmt 0 view .LVU10980
 38008 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 38009              	.LVL4809:
18678:Core/Src/bno055.c ****     }
 38010              		.loc 1 18678 18 view .LVU10981
 38011 00a4 54FA80F0 		uxtab	r0, r4, r0
 38012 00a8 44B2     		sxtb	r4, r0
 38013              	.LVL4810:
18678:Core/Src/bno055.c ****     }
 38014              		.loc 1 18678 18 view .LVU10982
 38015 00aa F3E7     		b	.L2767
 38016              	.LVL4811:
 38017              	.L2770:
18624:Core/Src/bno055.c ****     }
 38018              		.loc 1 18624 16 view .LVU10983
 38019 00ac 6FF07E04 		mvn	r4, #126
ARM GAS  /tmp/ccOloYeZ.s 			page 1078


 38020 00b0 F0E7     		b	.L2767
 38021              	.L2779:
 38022 00b2 00BF     		.align	2
 38023              	.L2778:
 38024 00b4 00000000 		.word	p_bno055
 38025              		.cfi_endproc
 38026              	.LFE266:
 38028              		.section	.text.bno055_get_gyro_highrate_z_durn,"ax",%progbits
 38029              		.align	1
 38030              		.global	bno055_get_gyro_highrate_z_durn
 38031              		.syntax unified
 38032              		.thumb
 38033              		.thumb_func
 38035              	bno055_get_gyro_highrate_z_durn:
 38036              	.LVL4812:
 38037              	.LFB267:
18683:Core/Src/bno055.c **** 
18684:Core/Src/bno055.c **** /*!
18685:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate z duration
18686:Core/Src/bno055.c ****  *  from page one register from 0x1D bit 0 to 7
18687:Core/Src/bno055.c ****  *
18688:Core/Src/bno055.c ****  *  @param gyro_highrate_z_durn_u8 : The value of gyro highrate z duration
18689:Core/Src/bno055.c ****  *
18690:Core/Src/bno055.c ****  *  @return results of bus communication function
18691:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18692:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18693:Core/Src/bno055.c ****  *
18694:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
18695:Core/Src/bno055.c ****  *
18696:Core/Src/bno055.c ****  *  (1 + gyro_highrate_z_durn_u8)*2.5ms
18697:Core/Src/bno055.c ****  */
18698:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_z_durn(u8 *gyro_highrate_z_durn_u8)
18699:Core/Src/bno055.c **** {
 38038              		.loc 1 18699 1 is_stmt 1 view -0
 38039              		.cfi_startproc
 38040              		@ args = 0, pretend = 0, frame = 8
 38041              		@ frame_needed = 0, uses_anonymous_args = 0
 38042              		.loc 1 18699 1 is_stmt 0 view .LVU10985
 38043 0000 70B5     		push	{r4, r5, r6, lr}
 38044              		.cfi_def_cfa_offset 16
 38045              		.cfi_offset 4, -16
 38046              		.cfi_offset 5, -12
 38047              		.cfi_offset 6, -8
 38048              		.cfi_offset 14, -4
 38049 0002 82B0     		sub	sp, sp, #8
 38050              		.cfi_def_cfa_offset 24
18700:Core/Src/bno055.c ****     /* Variable used to return value of
18701:Core/Src/bno055.c ****      * communication routine*/
18702:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38051              		.loc 1 18702 5 is_stmt 1 view .LVU10986
 38052              	.LVL4813:
18703:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38053              		.loc 1 18703 5 view .LVU10987
 38054              		.loc 1 18703 8 is_stmt 0 view .LVU10988
 38055 0004 0023     		movs	r3, #0
 38056 0006 8DF80730 		strb	r3, [sp, #7]
18704:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/ccOloYeZ.s 			page 1079


 38057              		.loc 1 18704 5 is_stmt 1 view .LVU10989
 38058              	.LVL4814:
18705:Core/Src/bno055.c **** 
18706:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18707:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38059              		.loc 1 18707 5 view .LVU10990
 38060              		.loc 1 18707 18 is_stmt 0 view .LVU10991
 38061 000a 134B     		ldr	r3, .L2788
 38062 000c 1B68     		ldr	r3, [r3]
 38063              		.loc 1 18707 8 view .LVU10992
 38064 000e E3B1     		cbz	r3, .L2784
 38065 0010 0546     		mov	r5, r0
18708:Core/Src/bno055.c ****     {
18709:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18710:Core/Src/bno055.c ****     }
18711:Core/Src/bno055.c ****     else
18712:Core/Src/bno055.c ****     {
18713:Core/Src/bno055.c ****         /*condition check for page, gyro highrate z duration is
18714:Core/Src/bno055.c ****          * available in the page one*/
18715:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 38066              		.loc 1 18715 9 is_stmt 1 view .LVU10993
 38067              		.loc 1 18715 21 is_stmt 0 view .LVU10994
 38068 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38069              		.loc 1 18715 12 view .LVU10995
 38070 0014 012B     		cmp	r3, #1
 38071 0016 12D1     		bne	.L2787
 38072              	.LVL4815:
 38073              	.L2782:
18716:Core/Src/bno055.c ****         {
18717:Core/Src/bno055.c ****             /* Write page as one */
18718:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18719:Core/Src/bno055.c ****         }
18720:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 38074              		.loc 1 18720 53 discriminator 1 view .LVU10996
 38075 0018 0F4B     		ldr	r3, .L2788
 38076 001a 1B68     		ldr	r3, [r3]
 38077 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38078              		.loc 1 18720 41 discriminator 1 view .LVU10997
 38079 001e 012B     		cmp	r3, #1
 38080 0020 16D1     		bne	.L2785
 38081              	.L2783:
18721:Core/Src/bno055.c ****         {
18722:Core/Src/bno055.c ****             /* Read the value of gyro highrate z duration*/
18723:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 38082              		.loc 1 18723 13 is_stmt 1 view .LVU10998
 38083              		.loc 1 18723 32 is_stmt 0 view .LVU10999
 38084 0022 0D4B     		ldr	r3, .L2788
 38085 0024 1C68     		ldr	r4, [r3]
 38086 0026 2669     		ldr	r6, [r4, #16]
 38087              		.loc 1 18723 24 view .LVU11000
 38088 0028 0123     		movs	r3, #1
 38089 002a 0DF10702 		add	r2, sp, #7
 38090 002e 1D21     		movs	r1, #29
 38091 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 38092 0032 B047     		blx	r6
 38093              	.LVL4816:
18724:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Z_DURN_REG,
ARM GAS  /tmp/ccOloYeZ.s 			page 1080


18725:Core/Src/bno055.c ****                                                       &data_u8r,
18726:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18727:Core/Src/bno055.c ****             *gyro_highrate_z_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_DURN);
 38094              		.loc 1 18727 13 is_stmt 1 view .LVU11001
 38095              		.loc 1 18727 38 is_stmt 0 view .LVU11002
 38096 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 38097 0038 2B70     		strb	r3, [r5]
 38098              	.LVL4817:
 38099              	.L2781:
18728:Core/Src/bno055.c ****         }
18729:Core/Src/bno055.c ****         else
18730:Core/Src/bno055.c ****         {
18731:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18732:Core/Src/bno055.c ****         }
18733:Core/Src/bno055.c ****     }
18734:Core/Src/bno055.c **** 
18735:Core/Src/bno055.c ****     return com_rslt;
18736:Core/Src/bno055.c **** }
 38100              		.loc 1 18736 1 view .LVU11003
 38101 003a 02B0     		add	sp, sp, #8
 38102              		.cfi_remember_state
 38103              		.cfi_def_cfa_offset 16
 38104              		@ sp needed
 38105 003c 70BD     		pop	{r4, r5, r6, pc}
 38106              	.LVL4818:
 38107              	.L2787:
 38108              		.cfi_restore_state
18718:Core/Src/bno055.c ****         }
 38109              		.loc 1 18718 13 is_stmt 1 view .LVU11004
18718:Core/Src/bno055.c ****         }
 38110              		.loc 1 18718 23 is_stmt 0 view .LVU11005
 38111 003e 0120     		movs	r0, #1
 38112              	.LVL4819:
18718:Core/Src/bno055.c ****         }
 38113              		.loc 1 18718 23 view .LVU11006
 38114 0040 FFF7FEFF 		bl	bno055_write_page_id
 38115              	.LVL4820:
18720:Core/Src/bno055.c ****         {
 38116              		.loc 1 18720 9 is_stmt 1 view .LVU11007
18720:Core/Src/bno055.c ****         {
 38117              		.loc 1 18720 12 is_stmt 0 view .LVU11008
 38118 0044 0028     		cmp	r0, #0
 38119 0046 ECD0     		beq	.L2783
 38120 0048 E6E7     		b	.L2782
 38121              	.LVL4821:
 38122              	.L2784:
18709:Core/Src/bno055.c ****     }
 38123              		.loc 1 18709 16 view .LVU11009
 38124 004a 6FF07E00 		mvn	r0, #126
 38125              	.LVL4822:
18709:Core/Src/bno055.c ****     }
 38126              		.loc 1 18709 16 view .LVU11010
 38127 004e F4E7     		b	.L2781
 38128              	.LVL4823:
 38129              	.L2785:
18731:Core/Src/bno055.c ****         }
 38130              		.loc 1 18731 22 view .LVU11011
ARM GAS  /tmp/ccOloYeZ.s 			page 1081


 38131 0050 4FF0FF30 		mov	r0, #-1
 38132 0054 F1E7     		b	.L2781
 38133              	.L2789:
 38134 0056 00BF     		.align	2
 38135              	.L2788:
 38136 0058 00000000 		.word	p_bno055
 38137              		.cfi_endproc
 38138              	.LFE267:
 38140              		.section	.text.bno055_set_gyro_highrate_z_durn,"ax",%progbits
 38141              		.align	1
 38142              		.global	bno055_set_gyro_highrate_z_durn
 38143              		.syntax unified
 38144              		.thumb
 38145              		.thumb_func
 38147              	bno055_set_gyro_highrate_z_durn:
 38148              	.LVL4824:
 38149              	.LFB268:
18737:Core/Src/bno055.c **** 
18738:Core/Src/bno055.c **** /*!
18739:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate z duration
18740:Core/Src/bno055.c ****  *  from page one register from 0x1D bit 0 to 7
18741:Core/Src/bno055.c ****  *
18742:Core/Src/bno055.c ****  *  @param gyro_highrate_z_durn_u8 : The value of gyro highrate z duration
18743:Core/Src/bno055.c ****  *
18744:Core/Src/bno055.c ****  *  @return results of bus communication function
18745:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18746:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18747:Core/Src/bno055.c ****  *
18748:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
18749:Core/Src/bno055.c ****  *
18750:Core/Src/bno055.c ****  *  (1 + gyro_highrate_z_durn_u8)*2.5ms
18751:Core/Src/bno055.c ****  */
18752:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_z_durn(u8 gyro_highrate_z_durn_u8)
18753:Core/Src/bno055.c **** {
 38150              		.loc 1 18753 1 is_stmt 1 view -0
 38151              		.cfi_startproc
 38152              		@ args = 0, pretend = 0, frame = 8
 38153              		@ frame_needed = 0, uses_anonymous_args = 0
 38154              		.loc 1 18753 1 is_stmt 0 view .LVU11013
 38155 0000 30B5     		push	{r4, r5, lr}
 38156              		.cfi_def_cfa_offset 12
 38157              		.cfi_offset 4, -12
 38158              		.cfi_offset 5, -8
 38159              		.cfi_offset 14, -4
 38160 0002 83B0     		sub	sp, sp, #12
 38161              		.cfi_def_cfa_offset 24
18754:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38162              		.loc 1 18754 5 is_stmt 1 view .LVU11014
 38163              	.LVL4825:
18755:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38164              		.loc 1 18755 5 view .LVU11015
 38165              		.loc 1 18755 8 is_stmt 0 view .LVU11016
 38166 0004 0023     		movs	r3, #0
 38167 0006 8DF80730 		strb	r3, [sp, #7]
18756:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38168              		.loc 1 18756 5 is_stmt 1 view .LVU11017
 38169              	.LVL4826:
ARM GAS  /tmp/ccOloYeZ.s 			page 1082


18757:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 38170              		.loc 1 18757 5 view .LVU11018
18758:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 38171              		.loc 1 18758 5 view .LVU11019
 38172              		.loc 1 18758 8 is_stmt 0 view .LVU11020
 38173 000a 8DF80630 		strb	r3, [sp, #6]
18759:Core/Src/bno055.c **** 
18760:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18761:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38174              		.loc 1 18761 5 is_stmt 1 view .LVU11021
 38175              		.loc 1 18761 18 is_stmt 0 view .LVU11022
 38176 000e 254B     		ldr	r3, .L2802
 38177 0010 1B68     		ldr	r3, [r3]
 38178              		.loc 1 18761 8 view .LVU11023
 38179 0012 002B     		cmp	r3, #0
 38180 0014 42D0     		beq	.L2794
 38181 0016 0546     		mov	r5, r0
18762:Core/Src/bno055.c ****     {
18763:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18764:Core/Src/bno055.c ****     }
18765:Core/Src/bno055.c ****     else
18766:Core/Src/bno055.c ****     {
18767:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18768:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18769:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18770:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 38182              		.loc 1 18770 9 is_stmt 1 view .LVU11024
 38183              		.loc 1 18770 19 is_stmt 0 view .LVU11025
 38184 0018 0DF10600 		add	r0, sp, #6
 38185              	.LVL4827:
 38186              		.loc 1 18770 19 view .LVU11026
 38187 001c FFF7FEFF 		bl	bno055_get_operation_mode
 38188              	.LVL4828:
18771:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 38189              		.loc 1 18771 9 is_stmt 1 view .LVU11027
 38190              		.loc 1 18771 12 is_stmt 0 view .LVU11028
 38191 0020 0446     		mov	r4, r0
 38192 0022 50BB     		cbnz	r0, .L2795
18772:Core/Src/bno055.c ****         {
18773:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38193              		.loc 1 18773 13 is_stmt 1 view .LVU11029
 38194              		.loc 1 18773 32 is_stmt 0 view .LVU11030
 38195 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 38196              		.loc 1 18773 16 view .LVU11031
 38197 0028 1BB9     		cbnz	r3, .L2799
 38198              	.LVL4829:
 38199              	.L2793:
18774:Core/Src/bno055.c ****             {
18775:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18776:Core/Src/bno055.c ****             }
18777:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 38200              		.loc 1 18777 13 is_stmt 1 view .LVU11032
 38201              		.loc 1 18777 16 is_stmt 0 view .LVU11033
 38202 002a 44B1     		cbz	r4, .L2800
18778:Core/Src/bno055.c ****             {
18779:Core/Src/bno055.c ****                 /* Write page as one */
18780:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
ARM GAS  /tmp/ccOloYeZ.s 			page 1083


18781:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18782:Core/Src/bno055.c ****                 {
18783:Core/Src/bno055.c ****                     /* Write the value of
18784:Core/Src/bno055.c ****                      * gyro highrate z duration*/
18785:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18786:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
18787:Core/Src/bno055.c ****                                                               &data_u8r,
18788:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18789:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18790:Core/Src/bno055.c ****                     {
18791:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_DURN, gyro_
18792:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18793:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
18794:Core/Src/bno055.c ****                                                                     &data_u8r,
18795:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18796:Core/Src/bno055.c ****                     }
18797:Core/Src/bno055.c ****                 }
18798:Core/Src/bno055.c ****                 else
18799:Core/Src/bno055.c ****                 {
18800:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18801:Core/Src/bno055.c ****                 }
18802:Core/Src/bno055.c ****             }
18803:Core/Src/bno055.c ****             else
18804:Core/Src/bno055.c ****             {
18805:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 38203              		.loc 1 18805 26 view .LVU11034
 38204 002c 4FF0FF34 		mov	r4, #-1
 38205              	.LVL4830:
 38206              		.loc 1 18805 26 view .LVU11035
 38207 0030 25E0     		b	.L2792
 38208              	.LVL4831:
 38209              	.L2799:
18775:Core/Src/bno055.c ****             }
 38210              		.loc 1 18775 17 is_stmt 1 view .LVU11036
18775:Core/Src/bno055.c ****             }
 38211              		.loc 1 18775 28 is_stmt 0 view .LVU11037
 38212 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 38213              	.LVL4832:
18775:Core/Src/bno055.c ****             }
 38214              		.loc 1 18775 25 view .LVU11038
 38215 0036 54FA80F4 		uxtab	r4, r4, r0
 38216 003a 64B2     		sxtb	r4, r4
 38217              	.LVL4833:
18775:Core/Src/bno055.c ****             }
 38218              		.loc 1 18775 25 view .LVU11039
 38219 003c F5E7     		b	.L2793
 38220              	.L2800:
18780:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38221              		.loc 1 18780 17 is_stmt 1 view .LVU11040
18780:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38222              		.loc 1 18780 30 is_stmt 0 view .LVU11041
 38223 003e 0120     		movs	r0, #1
 38224 0040 FFF7FEFF 		bl	bno055_write_page_id
 38225              	.LVL4834:
18781:Core/Src/bno055.c ****                 {
 38226              		.loc 1 18781 17 is_stmt 1 view .LVU11042
18781:Core/Src/bno055.c ****                 {
ARM GAS  /tmp/ccOloYeZ.s 			page 1084


 38227              		.loc 1 18781 20 is_stmt 0 view .LVU11043
 38228 0044 08BB     		cbnz	r0, .L2797
18785:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
 38229              		.loc 1 18785 21 is_stmt 1 view .LVU11044
18785:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
 38230              		.loc 1 18785 40 is_stmt 0 view .LVU11045
 38231 0046 174B     		ldr	r3, .L2802
 38232 0048 1868     		ldr	r0, [r3]
 38233              	.LVL4835:
18785:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
 38234              		.loc 1 18785 40 view .LVU11046
 38235 004a 0469     		ldr	r4, [r0, #16]
 38236              	.LVL4836:
18785:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
 38237              		.loc 1 18785 32 view .LVU11047
 38238 004c 0123     		movs	r3, #1
 38239 004e 0DF10702 		add	r2, sp, #7
 38240 0052 1D21     		movs	r1, #29
 38241 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38242 0056 A047     		blx	r4
 38243              	.LVL4837:
18789:Core/Src/bno055.c ****                     {
 38244              		.loc 1 18789 21 is_stmt 1 view .LVU11048
18789:Core/Src/bno055.c ****                     {
 38245              		.loc 1 18789 24 is_stmt 0 view .LVU11049
 38246 0058 0446     		mov	r4, r0
 38247 005a 80B9     		cbnz	r0, .L2792
18791:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38248              		.loc 1 18791 25 is_stmt 1 view .LVU11050
18791:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38249              		.loc 1 18791 34 is_stmt 0 view .LVU11051
 38250 005c 8DF80750 		strb	r5, [sp, #7]
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 38251              		.loc 1 18792 25 is_stmt 1 view .LVU11052
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 38252              		.loc 1 18792 45 is_stmt 0 view .LVU11053
 38253 0060 104B     		ldr	r3, .L2802
 38254 0062 1868     		ldr	r0, [r3]
 38255              	.LVL4838:
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 38256              		.loc 1 18792 45 view .LVU11054
 38257 0064 C568     		ldr	r5, [r0, #12]
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 38258              		.loc 1 18792 37 view .LVU11055
 38259 0066 0123     		movs	r3, #1
 38260 0068 0DF10702 		add	r2, sp, #7
 38261 006c 1D21     		movs	r1, #29
 38262 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38263 0070 A847     		blx	r5
 38264              	.LVL4839:
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 38265              		.loc 1 18792 34 view .LVU11056
 38266 0072 54FA80F0 		uxtab	r0, r4, r0
 38267 0076 44B2     		sxtb	r4, r0
 38268              	.LVL4840:
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 38269              		.loc 1 18792 34 view .LVU11057
ARM GAS  /tmp/ccOloYeZ.s 			page 1085


 38270 0078 01E0     		b	.L2792
 38271              	.LVL4841:
 38272              	.L2795:
18806:Core/Src/bno055.c ****             }
18807:Core/Src/bno055.c ****         }
18808:Core/Src/bno055.c ****         else
18809:Core/Src/bno055.c ****         {
18810:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 38273              		.loc 1 18810 22 view .LVU11058
 38274 007a 4FF0FF34 		mov	r4, #-1
 38275              	.LVL4842:
 38276              	.L2792:
18811:Core/Src/bno055.c ****         }
18812:Core/Src/bno055.c ****     }
18813:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38277              		.loc 1 18813 5 is_stmt 1 view .LVU11059
 38278              		.loc 1 18813 24 is_stmt 0 view .LVU11060
 38279 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 38280              		.loc 1 18813 8 view .LVU11061
 38281 0082 28B9     		cbnz	r0, .L2801
 38282              	.LVL4843:
 38283              	.L2791:
18814:Core/Src/bno055.c ****     {
18815:Core/Src/bno055.c ****         /* set the operation mode of
18816:Core/Src/bno055.c ****          * previous operation mode*/
18817:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18818:Core/Src/bno055.c ****     }
18819:Core/Src/bno055.c **** 
18820:Core/Src/bno055.c ****     return com_rslt;
18821:Core/Src/bno055.c **** }
 38284              		.loc 1 18821 1 view .LVU11062
 38285 0084 2046     		mov	r0, r4
 38286 0086 03B0     		add	sp, sp, #12
 38287              		.cfi_remember_state
 38288              		.cfi_def_cfa_offset 12
 38289              		@ sp needed
 38290 0088 30BD     		pop	{r4, r5, pc}
 38291              	.LVL4844:
 38292              	.L2797:
 38293              		.cfi_restore_state
18800:Core/Src/bno055.c ****                 }
 38294              		.loc 1 18800 30 view .LVU11063
 38295 008a 4FF0FF34 		mov	r4, #-1
 38296              	.LVL4845:
18800:Core/Src/bno055.c ****                 }
 38297              		.loc 1 18800 30 view .LVU11064
 38298 008e F6E7     		b	.L2792
 38299              	.LVL4846:
 38300              	.L2801:
18817:Core/Src/bno055.c ****     }
 38301              		.loc 1 18817 9 is_stmt 1 view .LVU11065
18817:Core/Src/bno055.c ****     }
 38302              		.loc 1 18817 21 is_stmt 0 view .LVU11066
 38303 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 38304              	.LVL4847:
18817:Core/Src/bno055.c ****     }
 38305              		.loc 1 18817 18 view .LVU11067
ARM GAS  /tmp/ccOloYeZ.s 			page 1086


 38306 0094 54FA80F0 		uxtab	r0, r4, r0
 38307 0098 44B2     		sxtb	r4, r0
 38308              	.LVL4848:
18817:Core/Src/bno055.c ****     }
 38309              		.loc 1 18817 18 view .LVU11068
 38310 009a F3E7     		b	.L2791
 38311              	.LVL4849:
 38312              	.L2794:
18763:Core/Src/bno055.c ****     }
 38313              		.loc 1 18763 16 view .LVU11069
 38314 009c 6FF07E04 		mvn	r4, #126
 38315 00a0 F0E7     		b	.L2791
 38316              	.L2803:
 38317 00a2 00BF     		.align	2
 38318              	.L2802:
 38319 00a4 00000000 		.word	p_bno055
 38320              		.cfi_endproc
 38321              	.LFE268:
 38323              		.section	.text.bno055_get_gyro_any_motion_thres,"ax",%progbits
 38324              		.align	1
 38325              		.global	bno055_get_gyro_any_motion_thres
 38326              		.syntax unified
 38327              		.thumb
 38328              		.thumb_func
 38330              	bno055_get_gyro_any_motion_thres:
 38331              	.LVL4850:
 38332              	.LFB269:
18822:Core/Src/bno055.c **** 
18823:Core/Src/bno055.c **** /*!
18824:Core/Src/bno055.c ****  *  @brief This API used to read gyro anymotion threshold
18825:Core/Src/bno055.c ****  *  from page one register from 0x1E bit 0 to 6
18826:Core/Src/bno055.c ****  *
18827:Core/Src/bno055.c ****  *  @param gyro_any_motion_thres_u8 : The value of gyro anymotion threshold
18828:Core/Src/bno055.c ****  *
18829:Core/Src/bno055.c ****  *  @return results of bus communication function
18830:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18831:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18832:Core/Src/bno055.c ****  *
18833:Core/Src/bno055.c ****  *  @note Gyro anymotion interrupt threshold dependent
18834:Core/Src/bno055.c ****  *  on the selection of gyro range
18835:Core/Src/bno055.c ****  *
18836:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold     |    LSB
18837:Core/Src/bno055.c ****  * -----------------  | ------------- | ---------
18838:Core/Src/bno055.c ****  *     2000           |    1dps       |   1LSB
18839:Core/Src/bno055.c ****  *     1000           |    0.5dps     |   1LSB
18840:Core/Src/bno055.c ****  *     500            |    0.25dps    |   1LSB
18841:Core/Src/bno055.c ****  *
18842:Core/Src/bno055.c ****  */
18843:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_thres(u8 *gyro_any_motion_thres_u8)
18844:Core/Src/bno055.c **** {
 38333              		.loc 1 18844 1 is_stmt 1 view -0
 38334              		.cfi_startproc
 38335              		@ args = 0, pretend = 0, frame = 8
 38336              		@ frame_needed = 0, uses_anonymous_args = 0
 38337              		.loc 1 18844 1 is_stmt 0 view .LVU11071
 38338 0000 30B5     		push	{r4, r5, lr}
 38339              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccOloYeZ.s 			page 1087


 38340              		.cfi_offset 4, -12
 38341              		.cfi_offset 5, -8
 38342              		.cfi_offset 14, -4
 38343 0002 83B0     		sub	sp, sp, #12
 38344              		.cfi_def_cfa_offset 24
18845:Core/Src/bno055.c ****     /* Variable used to return value of
18846:Core/Src/bno055.c ****      * communication routine*/
18847:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38345              		.loc 1 18847 5 is_stmt 1 view .LVU11072
 38346              	.LVL4851:
18848:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38347              		.loc 1 18848 5 view .LVU11073
 38348              		.loc 1 18848 8 is_stmt 0 view .LVU11074
 38349 0004 0023     		movs	r3, #0
 38350 0006 8DF80730 		strb	r3, [sp, #7]
18849:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38351              		.loc 1 18849 5 is_stmt 1 view .LVU11075
 38352              	.LVL4852:
18850:Core/Src/bno055.c **** 
18851:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18852:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38353              		.loc 1 18852 5 view .LVU11076
 38354              		.loc 1 18852 18 is_stmt 0 view .LVU11077
 38355 000a 144B     		ldr	r3, .L2812
 38356 000c 1B68     		ldr	r3, [r3]
 38357              		.loc 1 18852 8 view .LVU11078
 38358 000e F3B1     		cbz	r3, .L2808
 38359 0010 0446     		mov	r4, r0
18853:Core/Src/bno055.c ****     {
18854:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18855:Core/Src/bno055.c ****     }
18856:Core/Src/bno055.c ****     else
18857:Core/Src/bno055.c ****     {
18858:Core/Src/bno055.c ****         /*condition check for page,gyro anymotion threshold is
18859:Core/Src/bno055.c ****          * available in the page one*/
18860:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 38360              		.loc 1 18860 9 is_stmt 1 view .LVU11079
 38361              		.loc 1 18860 21 is_stmt 0 view .LVU11080
 38362 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38363              		.loc 1 18860 12 view .LVU11081
 38364 0014 012B     		cmp	r3, #1
 38365 0016 14D1     		bne	.L2811
 38366              	.LVL4853:
 38367              	.L2806:
18861:Core/Src/bno055.c ****         {
18862:Core/Src/bno055.c ****             /* Write page as one */
18863:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18864:Core/Src/bno055.c ****         }
18865:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 38368              		.loc 1 18865 53 discriminator 1 view .LVU11082
 38369 0018 104B     		ldr	r3, .L2812
 38370 001a 1B68     		ldr	r3, [r3]
 38371 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38372              		.loc 1 18865 41 discriminator 1 view .LVU11083
 38373 001e 012B     		cmp	r3, #1
 38374 0020 18D1     		bne	.L2809
 38375              	.L2807:
ARM GAS  /tmp/ccOloYeZ.s 			page 1088


18866:Core/Src/bno055.c ****         {
18867:Core/Src/bno055.c ****             /* Read the value of gyro anymotion threshold*/
18868:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 38376              		.loc 1 18868 13 is_stmt 1 view .LVU11084
 38377              		.loc 1 18868 32 is_stmt 0 view .LVU11085
 38378 0022 0E4B     		ldr	r3, .L2812
 38379 0024 1868     		ldr	r0, [r3]
 38380 0026 0569     		ldr	r5, [r0, #16]
 38381              		.loc 1 18868 24 view .LVU11086
 38382 0028 0123     		movs	r3, #1
 38383 002a 0DF10702 		add	r2, sp, #7
 38384 002e 1E21     		movs	r1, #30
 38385 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38386 0032 A847     		blx	r5
 38387              	.LVL4854:
18869:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_THRES_REG,
18870:Core/Src/bno055.c ****                                                       &data_u8r,
18871:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18872:Core/Src/bno055.c ****             *gyro_any_motion_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_THRES)
 38388              		.loc 1 18872 13 is_stmt 1 view .LVU11087
 38389              		.loc 1 18872 41 is_stmt 0 view .LVU11088
 38390 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 38391 0038 03F07F03 		and	r3, r3, #127
 38392              		.loc 1 18872 39 view .LVU11089
 38393 003c 2370     		strb	r3, [r4]
 38394              	.LVL4855:
 38395              	.L2805:
18873:Core/Src/bno055.c ****         }
18874:Core/Src/bno055.c ****         else
18875:Core/Src/bno055.c ****         {
18876:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18877:Core/Src/bno055.c ****         }
18878:Core/Src/bno055.c ****     }
18879:Core/Src/bno055.c **** 
18880:Core/Src/bno055.c ****     return com_rslt;
18881:Core/Src/bno055.c **** }
 38396              		.loc 1 18881 1 view .LVU11090
 38397 003e 03B0     		add	sp, sp, #12
 38398              		.cfi_remember_state
 38399              		.cfi_def_cfa_offset 12
 38400              		@ sp needed
 38401 0040 30BD     		pop	{r4, r5, pc}
 38402              	.LVL4856:
 38403              	.L2811:
 38404              		.cfi_restore_state
18863:Core/Src/bno055.c ****         }
 38405              		.loc 1 18863 13 is_stmt 1 view .LVU11091
18863:Core/Src/bno055.c ****         }
 38406              		.loc 1 18863 23 is_stmt 0 view .LVU11092
 38407 0042 0120     		movs	r0, #1
 38408              	.LVL4857:
18863:Core/Src/bno055.c ****         }
 38409              		.loc 1 18863 23 view .LVU11093
 38410 0044 FFF7FEFF 		bl	bno055_write_page_id
 38411              	.LVL4858:
18865:Core/Src/bno055.c ****         {
 38412              		.loc 1 18865 9 is_stmt 1 view .LVU11094
ARM GAS  /tmp/ccOloYeZ.s 			page 1089


18865:Core/Src/bno055.c ****         {
 38413              		.loc 1 18865 12 is_stmt 0 view .LVU11095
 38414 0048 0028     		cmp	r0, #0
 38415 004a EAD0     		beq	.L2807
 38416 004c E4E7     		b	.L2806
 38417              	.LVL4859:
 38418              	.L2808:
18854:Core/Src/bno055.c ****     }
 38419              		.loc 1 18854 16 view .LVU11096
 38420 004e 6FF07E00 		mvn	r0, #126
 38421              	.LVL4860:
18854:Core/Src/bno055.c ****     }
 38422              		.loc 1 18854 16 view .LVU11097
 38423 0052 F4E7     		b	.L2805
 38424              	.LVL4861:
 38425              	.L2809:
18876:Core/Src/bno055.c ****         }
 38426              		.loc 1 18876 22 view .LVU11098
 38427 0054 4FF0FF30 		mov	r0, #-1
 38428 0058 F1E7     		b	.L2805
 38429              	.L2813:
 38430 005a 00BF     		.align	2
 38431              	.L2812:
 38432 005c 00000000 		.word	p_bno055
 38433              		.cfi_endproc
 38434              	.LFE269:
 38436              		.section	.text.bno055_set_gyro_any_motion_thres,"ax",%progbits
 38437              		.align	1
 38438              		.global	bno055_set_gyro_any_motion_thres
 38439              		.syntax unified
 38440              		.thumb
 38441              		.thumb_func
 38443              	bno055_set_gyro_any_motion_thres:
 38444              	.LVL4862:
 38445              	.LFB270:
18882:Core/Src/bno055.c **** 
18883:Core/Src/bno055.c **** /*!
18884:Core/Src/bno055.c ****  *  @brief This API used to write gyro anymotion threshold
18885:Core/Src/bno055.c ****  *  from page one register from 0x1E bit 0 to 6
18886:Core/Src/bno055.c ****  *
18887:Core/Src/bno055.c ****  *  @param gyro_any_motion_thres_u8 : The value of gyro anymotion threshold
18888:Core/Src/bno055.c ****  *
18889:Core/Src/bno055.c ****  *  @return results of bus communication function
18890:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18891:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18892:Core/Src/bno055.c ****  *
18893:Core/Src/bno055.c ****  *  @note Gyro anymotion interrupt threshold dependent
18894:Core/Src/bno055.c ****  *  on the selection of gyro range
18895:Core/Src/bno055.c ****  *
18896:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold     |    LSB
18897:Core/Src/bno055.c ****  * -----------------  | ------------- | ---------
18898:Core/Src/bno055.c ****  *     2000           |    1dps       |   1LSB
18899:Core/Src/bno055.c ****  *     1000           |    0.5dps     |   1LSB
18900:Core/Src/bno055.c ****  *     500            |    0.25dps    |   1LSB
18901:Core/Src/bno055.c ****  *
18902:Core/Src/bno055.c ****  */
18903:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_thres(u8 gyro_any_motion_thres_u8)
ARM GAS  /tmp/ccOloYeZ.s 			page 1090


18904:Core/Src/bno055.c **** {
 38446              		.loc 1 18904 1 is_stmt 1 view -0
 38447              		.cfi_startproc
 38448              		@ args = 0, pretend = 0, frame = 8
 38449              		@ frame_needed = 0, uses_anonymous_args = 0
 38450              		.loc 1 18904 1 is_stmt 0 view .LVU11100
 38451 0000 30B5     		push	{r4, r5, lr}
 38452              		.cfi_def_cfa_offset 12
 38453              		.cfi_offset 4, -12
 38454              		.cfi_offset 5, -8
 38455              		.cfi_offset 14, -4
 38456 0002 83B0     		sub	sp, sp, #12
 38457              		.cfi_def_cfa_offset 24
18905:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38458              		.loc 1 18905 5 is_stmt 1 view .LVU11101
 38459              	.LVL4863:
18906:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38460              		.loc 1 18906 5 view .LVU11102
 38461              		.loc 1 18906 8 is_stmt 0 view .LVU11103
 38462 0004 0023     		movs	r3, #0
 38463 0006 8DF80730 		strb	r3, [sp, #7]
18907:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38464              		.loc 1 18907 5 is_stmt 1 view .LVU11104
 38465              	.LVL4864:
18908:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 38466              		.loc 1 18908 5 view .LVU11105
 38467              		.loc 1 18908 8 is_stmt 0 view .LVU11106
 38468 000a 8DF80630 		strb	r3, [sp, #6]
18909:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 38469              		.loc 1 18909 5 is_stmt 1 view .LVU11107
 38470              	.LVL4865:
18910:Core/Src/bno055.c **** 
18911:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18912:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38471              		.loc 1 18912 5 view .LVU11108
 38472              		.loc 1 18912 18 is_stmt 0 view .LVU11109
 38473 000e 284B     		ldr	r3, .L2826
 38474 0010 1B68     		ldr	r3, [r3]
 38475              		.loc 1 18912 8 view .LVU11110
 38476 0012 002B     		cmp	r3, #0
 38477 0014 49D0     		beq	.L2818
 38478 0016 0546     		mov	r5, r0
18913:Core/Src/bno055.c ****     {
18914:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18915:Core/Src/bno055.c ****     }
18916:Core/Src/bno055.c ****     else
18917:Core/Src/bno055.c ****     {
18918:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18919:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18920:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18921:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 38479              		.loc 1 18921 9 is_stmt 1 view .LVU11111
 38480              		.loc 1 18921 19 is_stmt 0 view .LVU11112
 38481 0018 0DF10600 		add	r0, sp, #6
 38482              	.LVL4866:
 38483              		.loc 1 18921 19 view .LVU11113
 38484 001c FFF7FEFF 		bl	bno055_get_operation_mode
ARM GAS  /tmp/ccOloYeZ.s 			page 1091


 38485              	.LVL4867:
18922:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 38486              		.loc 1 18922 9 is_stmt 1 view .LVU11114
 38487              		.loc 1 18922 12 is_stmt 0 view .LVU11115
 38488 0020 0446     		mov	r4, r0
 38489 0022 88BB     		cbnz	r0, .L2819
18923:Core/Src/bno055.c ****         {
18924:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38490              		.loc 1 18924 13 is_stmt 1 view .LVU11116
 38491              		.loc 1 18924 32 is_stmt 0 view .LVU11117
 38492 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 38493              		.loc 1 18924 16 view .LVU11118
 38494 0028 1BB9     		cbnz	r3, .L2823
 38495              	.LVL4868:
 38496              	.L2817:
18925:Core/Src/bno055.c ****             {
18926:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18927:Core/Src/bno055.c ****             }
18928:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 38497              		.loc 1 18928 13 is_stmt 1 view .LVU11119
 38498              		.loc 1 18928 16 is_stmt 0 view .LVU11120
 38499 002a 44B1     		cbz	r4, .L2824
18929:Core/Src/bno055.c ****             {
18930:Core/Src/bno055.c ****                 /* Write page as one */
18931:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18932:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18933:Core/Src/bno055.c ****                 {
18934:Core/Src/bno055.c ****                     /* Write the value
18935:Core/Src/bno055.c ****                      * of gyro anymotion threshold*/
18936:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18937:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
18938:Core/Src/bno055.c ****                                                               &data_u8r,
18939:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18940:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18941:Core/Src/bno055.c ****                     {
18942:Core/Src/bno055.c ****                         data_u8r =
18943:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_THRES, gyro_any_mo
18944:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18945:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
18946:Core/Src/bno055.c ****                                                                     &data_u8r,
18947:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18948:Core/Src/bno055.c ****                     }
18949:Core/Src/bno055.c ****                 }
18950:Core/Src/bno055.c ****                 else
18951:Core/Src/bno055.c ****                 {
18952:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18953:Core/Src/bno055.c ****                 }
18954:Core/Src/bno055.c ****             }
18955:Core/Src/bno055.c ****             else
18956:Core/Src/bno055.c ****             {
18957:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 38500              		.loc 1 18957 26 view .LVU11121
 38501 002c 4FF0FF34 		mov	r4, #-1
 38502              	.LVL4869:
 38503              		.loc 1 18957 26 view .LVU11122
 38504 0030 2CE0     		b	.L2816
 38505              	.LVL4870:
ARM GAS  /tmp/ccOloYeZ.s 			page 1092


 38506              	.L2823:
18926:Core/Src/bno055.c ****             }
 38507              		.loc 1 18926 17 is_stmt 1 view .LVU11123
18926:Core/Src/bno055.c ****             }
 38508              		.loc 1 18926 28 is_stmt 0 view .LVU11124
 38509 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 38510              	.LVL4871:
18926:Core/Src/bno055.c ****             }
 38511              		.loc 1 18926 25 view .LVU11125
 38512 0036 54FA80F4 		uxtab	r4, r4, r0
 38513 003a 64B2     		sxtb	r4, r4
 38514              	.LVL4872:
18926:Core/Src/bno055.c ****             }
 38515              		.loc 1 18926 25 view .LVU11126
 38516 003c F5E7     		b	.L2817
 38517              	.L2824:
18931:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38518              		.loc 1 18931 17 is_stmt 1 view .LVU11127
18931:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38519              		.loc 1 18931 30 is_stmt 0 view .LVU11128
 38520 003e 0120     		movs	r0, #1
 38521 0040 FFF7FEFF 		bl	bno055_write_page_id
 38522              	.LVL4873:
18932:Core/Src/bno055.c ****                 {
 38523              		.loc 1 18932 17 is_stmt 1 view .LVU11129
18932:Core/Src/bno055.c ****                 {
 38524              		.loc 1 18932 20 is_stmt 0 view .LVU11130
 38525 0044 40BB     		cbnz	r0, .L2821
18936:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
 38526              		.loc 1 18936 21 is_stmt 1 view .LVU11131
18936:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
 38527              		.loc 1 18936 40 is_stmt 0 view .LVU11132
 38528 0046 1A4B     		ldr	r3, .L2826
 38529 0048 1868     		ldr	r0, [r3]
 38530              	.LVL4874:
18936:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
 38531              		.loc 1 18936 40 view .LVU11133
 38532 004a 0469     		ldr	r4, [r0, #16]
 38533              	.LVL4875:
18936:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
 38534              		.loc 1 18936 32 view .LVU11134
 38535 004c 0123     		movs	r3, #1
 38536 004e 0DF10702 		add	r2, sp, #7
 38537 0052 1E21     		movs	r1, #30
 38538 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38539 0056 A047     		blx	r4
 38540              	.LVL4876:
18940:Core/Src/bno055.c ****                     {
 38541              		.loc 1 18940 21 is_stmt 1 view .LVU11135
18940:Core/Src/bno055.c ****                     {
 38542              		.loc 1 18940 24 is_stmt 0 view .LVU11136
 38543 0058 0446     		mov	r4, r0
 38544 005a B8B9     		cbnz	r0, .L2816
18942:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_THRES, gyro_any_mo
 38545              		.loc 1 18942 25 is_stmt 1 view .LVU11137
18943:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38546              		.loc 1 18943 29 is_stmt 0 view .LVU11138
ARM GAS  /tmp/ccOloYeZ.s 			page 1093


 38547 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
18942:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_THRES, gyro_any_mo
 38548              		.loc 1 18942 34 view .LVU11139
 38549 0060 23F07F03 		bic	r3, r3, #127
 38550 0064 05F07F00 		and	r0, r5, #127
 38551              	.LVL4877:
18942:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_THRES, gyro_any_mo
 38552              		.loc 1 18942 34 view .LVU11140
 38553 0068 0343     		orrs	r3, r3, r0
 38554 006a 8DF80730 		strb	r3, [sp, #7]
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 38555              		.loc 1 18944 25 is_stmt 1 view .LVU11141
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 38556              		.loc 1 18944 45 is_stmt 0 view .LVU11142
 38557 006e 104B     		ldr	r3, .L2826
 38558 0070 1868     		ldr	r0, [r3]
 38559 0072 C568     		ldr	r5, [r0, #12]
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 38560              		.loc 1 18944 37 view .LVU11143
 38561 0074 0123     		movs	r3, #1
 38562 0076 0DF10702 		add	r2, sp, #7
 38563 007a 1E21     		movs	r1, #30
 38564 007c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38565 007e A847     		blx	r5
 38566              	.LVL4878:
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 38567              		.loc 1 18944 34 view .LVU11144
 38568 0080 54FA80F0 		uxtab	r0, r4, r0
 38569 0084 44B2     		sxtb	r4, r0
 38570              	.LVL4879:
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 38571              		.loc 1 18944 34 view .LVU11145
 38572 0086 01E0     		b	.L2816
 38573              	.LVL4880:
 38574              	.L2819:
18958:Core/Src/bno055.c ****             }
18959:Core/Src/bno055.c ****         }
18960:Core/Src/bno055.c ****         else
18961:Core/Src/bno055.c ****         {
18962:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 38575              		.loc 1 18962 22 view .LVU11146
 38576 0088 4FF0FF34 		mov	r4, #-1
 38577              	.LVL4881:
 38578              	.L2816:
18963:Core/Src/bno055.c ****         }
18964:Core/Src/bno055.c ****     }
18965:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38579              		.loc 1 18965 5 is_stmt 1 view .LVU11147
 38580              		.loc 1 18965 24 is_stmt 0 view .LVU11148
 38581 008c 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 38582              		.loc 1 18965 8 view .LVU11149
 38583 0090 28B9     		cbnz	r0, .L2825
 38584              	.LVL4882:
 38585              	.L2815:
18966:Core/Src/bno055.c ****     {
18967:Core/Src/bno055.c ****         /* set the operation mode of
18968:Core/Src/bno055.c ****          * previous operation mode*/
ARM GAS  /tmp/ccOloYeZ.s 			page 1094


18969:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18970:Core/Src/bno055.c ****     }
18971:Core/Src/bno055.c **** 
18972:Core/Src/bno055.c ****     return com_rslt;
18973:Core/Src/bno055.c **** }
 38586              		.loc 1 18973 1 view .LVU11150
 38587 0092 2046     		mov	r0, r4
 38588 0094 03B0     		add	sp, sp, #12
 38589              		.cfi_remember_state
 38590              		.cfi_def_cfa_offset 12
 38591              		@ sp needed
 38592 0096 30BD     		pop	{r4, r5, pc}
 38593              	.LVL4883:
 38594              	.L2821:
 38595              		.cfi_restore_state
18952:Core/Src/bno055.c ****                 }
 38596              		.loc 1 18952 30 view .LVU11151
 38597 0098 4FF0FF34 		mov	r4, #-1
 38598              	.LVL4884:
18952:Core/Src/bno055.c ****                 }
 38599              		.loc 1 18952 30 view .LVU11152
 38600 009c F6E7     		b	.L2816
 38601              	.LVL4885:
 38602              	.L2825:
18969:Core/Src/bno055.c ****     }
 38603              		.loc 1 18969 9 is_stmt 1 view .LVU11153
18969:Core/Src/bno055.c ****     }
 38604              		.loc 1 18969 21 is_stmt 0 view .LVU11154
 38605 009e FFF7FEFF 		bl	bno055_set_operation_mode
 38606              	.LVL4886:
18969:Core/Src/bno055.c ****     }
 38607              		.loc 1 18969 18 view .LVU11155
 38608 00a2 54FA80F0 		uxtab	r0, r4, r0
 38609 00a6 44B2     		sxtb	r4, r0
 38610              	.LVL4887:
18969:Core/Src/bno055.c ****     }
 38611              		.loc 1 18969 18 view .LVU11156
 38612 00a8 F3E7     		b	.L2815
 38613              	.LVL4888:
 38614              	.L2818:
18914:Core/Src/bno055.c ****     }
 38615              		.loc 1 18914 16 view .LVU11157
 38616 00aa 6FF07E04 		mvn	r4, #126
 38617 00ae F0E7     		b	.L2815
 38618              	.L2827:
 38619              		.align	2
 38620              	.L2826:
 38621 00b0 00000000 		.word	p_bno055
 38622              		.cfi_endproc
 38623              	.LFE270:
 38625              		.section	.text.bno055_get_gyro_any_motion_slope_samples,"ax",%progbits
 38626              		.align	1
 38627              		.global	bno055_get_gyro_any_motion_slope_samples
 38628              		.syntax unified
 38629              		.thumb
 38630              		.thumb_func
 38632              	bno055_get_gyro_any_motion_slope_samples:
ARM GAS  /tmp/ccOloYeZ.s 			page 1095


 38633              	.LVL4889:
 38634              	.LFB271:
18974:Core/Src/bno055.c **** 
18975:Core/Src/bno055.c **** /*!
18976:Core/Src/bno055.c ****  *  @brief This API used to read gyro anymotion slope samples
18977:Core/Src/bno055.c ****  *  from page one register from 0x1F bit 0 to 1
18978:Core/Src/bno055.c ****  *
18979:Core/Src/bno055.c ****  *  @param gyro_any_motion_slope_samples_u8 :
18980:Core/Src/bno055.c ****  *  The value of gyro anymotion slope samples
18981:Core/Src/bno055.c ****  *  gyro_any_motion_slope_samples_u8   |   result
18982:Core/Src/bno055.c ****  *  ----------------------------------   | -----------
18983:Core/Src/bno055.c ****  *            0                          |    8 samples
18984:Core/Src/bno055.c ****  *            1                          |    16 samples
18985:Core/Src/bno055.c ****  *            2                          |    32 samples
18986:Core/Src/bno055.c ****  *            3                          |    64 samples
18987:Core/Src/bno055.c ****  *
18988:Core/Src/bno055.c ****  *  @return results of bus communication function
18989:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18990:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18991:Core/Src/bno055.c ****  *
18992:Core/Src/bno055.c ****  */
18993:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_slope_samples(u8 *gyro_any_motion_slope_samp
18994:Core/Src/bno055.c **** {
 38635              		.loc 1 18994 1 is_stmt 1 view -0
 38636              		.cfi_startproc
 38637              		@ args = 0, pretend = 0, frame = 8
 38638              		@ frame_needed = 0, uses_anonymous_args = 0
 38639              		.loc 1 18994 1 is_stmt 0 view .LVU11159
 38640 0000 30B5     		push	{r4, r5, lr}
 38641              		.cfi_def_cfa_offset 12
 38642              		.cfi_offset 4, -12
 38643              		.cfi_offset 5, -8
 38644              		.cfi_offset 14, -4
 38645 0002 83B0     		sub	sp, sp, #12
 38646              		.cfi_def_cfa_offset 24
18995:Core/Src/bno055.c ****     /* Variable used to return value of
18996:Core/Src/bno055.c ****      * communication routine*/
18997:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38647              		.loc 1 18997 5 is_stmt 1 view .LVU11160
 38648              	.LVL4890:
18998:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38649              		.loc 1 18998 5 view .LVU11161
 38650              		.loc 1 18998 8 is_stmt 0 view .LVU11162
 38651 0004 0023     		movs	r3, #0
 38652 0006 8DF80730 		strb	r3, [sp, #7]
18999:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38653              		.loc 1 18999 5 is_stmt 1 view .LVU11163
 38654              	.LVL4891:
19000:Core/Src/bno055.c **** 
19001:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
19002:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38655              		.loc 1 19002 5 view .LVU11164
 38656              		.loc 1 19002 18 is_stmt 0 view .LVU11165
 38657 000a 144B     		ldr	r3, .L2836
 38658 000c 1B68     		ldr	r3, [r3]
 38659              		.loc 1 19002 8 view .LVU11166
 38660 000e F3B1     		cbz	r3, .L2832
ARM GAS  /tmp/ccOloYeZ.s 			page 1096


 38661 0010 0446     		mov	r4, r0
19003:Core/Src/bno055.c ****     {
19004:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
19005:Core/Src/bno055.c ****     }
19006:Core/Src/bno055.c ****     else
19007:Core/Src/bno055.c ****     {
19008:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion slope samples is
19009:Core/Src/bno055.c ****          * available in the page one*/
19010:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 38662              		.loc 1 19010 9 is_stmt 1 view .LVU11167
 38663              		.loc 1 19010 21 is_stmt 0 view .LVU11168
 38664 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38665              		.loc 1 19010 12 view .LVU11169
 38666 0014 012B     		cmp	r3, #1
 38667 0016 14D1     		bne	.L2835
 38668              	.LVL4892:
 38669              	.L2830:
19011:Core/Src/bno055.c ****         {
19012:Core/Src/bno055.c ****             /* Write page as one */
19013:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
19014:Core/Src/bno055.c ****         }
19015:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 38670              		.loc 1 19015 53 discriminator 1 view .LVU11170
 38671 0018 104B     		ldr	r3, .L2836
 38672 001a 1B68     		ldr	r3, [r3]
 38673 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38674              		.loc 1 19015 41 discriminator 1 view .LVU11171
 38675 001e 012B     		cmp	r3, #1
 38676 0020 18D1     		bne	.L2833
 38677              	.L2831:
19016:Core/Src/bno055.c ****         {
19017:Core/Src/bno055.c ****             /*Read the value of gyro anymotion slope samples*/
19018:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 38678              		.loc 1 19018 13 is_stmt 1 view .LVU11172
 38679              		.loc 1 19018 32 is_stmt 0 view .LVU11173
 38680 0022 0E4B     		ldr	r3, .L2836
 38681 0024 1868     		ldr	r0, [r3]
 38682 0026 0569     		ldr	r5, [r0, #16]
 38683              		.loc 1 19018 24 view .LVU11174
 38684 0028 0123     		movs	r3, #1
 38685 002a 0DF10702 		add	r2, sp, #7
 38686 002e 1F21     		movs	r1, #31
 38687 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38688 0032 A847     		blx	r5
 38689              	.LVL4893:
19019:Core/Src/bno055.c ****                                                       BNO055_GYRO_SLOPE_SAMPLES_REG,
19020:Core/Src/bno055.c ****                                                       &data_u8r,
19021:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
19022:Core/Src/bno055.c ****             *gyro_any_motion_slope_samples_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_SLOPE_SAM
 38690              		.loc 1 19022 13 is_stmt 1 view .LVU11175
 38691              		.loc 1 19022 49 is_stmt 0 view .LVU11176
 38692 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 38693 0038 03F00303 		and	r3, r3, #3
 38694              		.loc 1 19022 47 view .LVU11177
 38695 003c 2370     		strb	r3, [r4]
 38696              	.LVL4894:
 38697              	.L2829:
ARM GAS  /tmp/ccOloYeZ.s 			page 1097


19023:Core/Src/bno055.c ****         }
19024:Core/Src/bno055.c ****         else
19025:Core/Src/bno055.c ****         {
19026:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
19027:Core/Src/bno055.c ****         }
19028:Core/Src/bno055.c ****     }
19029:Core/Src/bno055.c **** 
19030:Core/Src/bno055.c ****     return com_rslt;
19031:Core/Src/bno055.c **** }
 38698              		.loc 1 19031 1 view .LVU11178
 38699 003e 03B0     		add	sp, sp, #12
 38700              		.cfi_remember_state
 38701              		.cfi_def_cfa_offset 12
 38702              		@ sp needed
 38703 0040 30BD     		pop	{r4, r5, pc}
 38704              	.LVL4895:
 38705              	.L2835:
 38706              		.cfi_restore_state
19013:Core/Src/bno055.c ****         }
 38707              		.loc 1 19013 13 is_stmt 1 view .LVU11179
19013:Core/Src/bno055.c ****         }
 38708              		.loc 1 19013 23 is_stmt 0 view .LVU11180
 38709 0042 0120     		movs	r0, #1
 38710              	.LVL4896:
19013:Core/Src/bno055.c ****         }
 38711              		.loc 1 19013 23 view .LVU11181
 38712 0044 FFF7FEFF 		bl	bno055_write_page_id
 38713              	.LVL4897:
19015:Core/Src/bno055.c ****         {
 38714              		.loc 1 19015 9 is_stmt 1 view .LVU11182
19015:Core/Src/bno055.c ****         {
 38715              		.loc 1 19015 12 is_stmt 0 view .LVU11183
 38716 0048 0028     		cmp	r0, #0
 38717 004a EAD0     		beq	.L2831
 38718 004c E4E7     		b	.L2830
 38719              	.LVL4898:
 38720              	.L2832:
19004:Core/Src/bno055.c ****     }
 38721              		.loc 1 19004 16 view .LVU11184
 38722 004e 6FF07E00 		mvn	r0, #126
 38723              	.LVL4899:
19004:Core/Src/bno055.c ****     }
 38724              		.loc 1 19004 16 view .LVU11185
 38725 0052 F4E7     		b	.L2829
 38726              	.LVL4900:
 38727              	.L2833:
19026:Core/Src/bno055.c ****         }
 38728              		.loc 1 19026 22 view .LVU11186
 38729 0054 4FF0FF30 		mov	r0, #-1
 38730 0058 F1E7     		b	.L2829
 38731              	.L2837:
 38732 005a 00BF     		.align	2
 38733              	.L2836:
 38734 005c 00000000 		.word	p_bno055
 38735              		.cfi_endproc
 38736              	.LFE271:
 38738              		.section	.text.bno055_set_gyro_any_motion_slope_samples,"ax",%progbits
ARM GAS  /tmp/ccOloYeZ.s 			page 1098


 38739              		.align	1
 38740              		.global	bno055_set_gyro_any_motion_slope_samples
 38741              		.syntax unified
 38742              		.thumb
 38743              		.thumb_func
 38745              	bno055_set_gyro_any_motion_slope_samples:
 38746              	.LVL4901:
 38747              	.LFB272:
19032:Core/Src/bno055.c **** 
19033:Core/Src/bno055.c **** /*!
19034:Core/Src/bno055.c ****  *  @brief This API used to write gyro anymotion slope samples
19035:Core/Src/bno055.c ****  *  from page one register from 0x1F bit 0 to 1
19036:Core/Src/bno055.c ****  *
19037:Core/Src/bno055.c ****  *  @param gyro_any_motion_slope_samples_u8 :
19038:Core/Src/bno055.c ****  *  The value of gyro anymotion slope samples
19039:Core/Src/bno055.c ****  *  gyro_any_motion_slope_samples_u8   |   result
19040:Core/Src/bno055.c ****  *  ----------------------------------   | -----------
19041:Core/Src/bno055.c ****  *            0                          |    8 samples
19042:Core/Src/bno055.c ****  *            1                          |    16 samples
19043:Core/Src/bno055.c ****  *            2                          |    32 samples
19044:Core/Src/bno055.c ****  *            3                          |    64 samples
19045:Core/Src/bno055.c ****  *
19046:Core/Src/bno055.c ****  *  @return results of bus communication function
19047:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
19048:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
19049:Core/Src/bno055.c ****  *
19050:Core/Src/bno055.c ****  */
19051:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_slope_samples(u8 gyro_any_motion_slope_sampl
19052:Core/Src/bno055.c **** {
 38748              		.loc 1 19052 1 is_stmt 1 view -0
 38749              		.cfi_startproc
 38750              		@ args = 0, pretend = 0, frame = 8
 38751              		@ frame_needed = 0, uses_anonymous_args = 0
 38752              		.loc 1 19052 1 is_stmt 0 view .LVU11188
 38753 0000 30B5     		push	{r4, r5, lr}
 38754              		.cfi_def_cfa_offset 12
 38755              		.cfi_offset 4, -12
 38756              		.cfi_offset 5, -8
 38757              		.cfi_offset 14, -4
 38758 0002 83B0     		sub	sp, sp, #12
 38759              		.cfi_def_cfa_offset 24
19053:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38760              		.loc 1 19053 5 is_stmt 1 view .LVU11189
 38761              	.LVL4902:
19054:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38762              		.loc 1 19054 5 view .LVU11190
 38763              		.loc 1 19054 8 is_stmt 0 view .LVU11191
 38764 0004 0023     		movs	r3, #0
 38765 0006 8DF80730 		strb	r3, [sp, #7]
19055:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38766              		.loc 1 19055 5 is_stmt 1 view .LVU11192
 38767              	.LVL4903:
19056:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 38768              		.loc 1 19056 5 view .LVU11193
19057:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 38769              		.loc 1 19057 5 view .LVU11194
 38770              		.loc 1 19057 8 is_stmt 0 view .LVU11195
ARM GAS  /tmp/ccOloYeZ.s 			page 1099


 38771 000a 8DF80630 		strb	r3, [sp, #6]
19058:Core/Src/bno055.c **** 
19059:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
19060:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38772              		.loc 1 19060 5 is_stmt 1 view .LVU11196
 38773              		.loc 1 19060 18 is_stmt 0 view .LVU11197
 38774 000e 284B     		ldr	r3, .L2850
 38775 0010 1B68     		ldr	r3, [r3]
 38776              		.loc 1 19060 8 view .LVU11198
 38777 0012 002B     		cmp	r3, #0
 38778 0014 49D0     		beq	.L2842
 38779 0016 0546     		mov	r5, r0
19061:Core/Src/bno055.c ****     {
19062:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
19063:Core/Src/bno055.c ****     }
19064:Core/Src/bno055.c ****     else
19065:Core/Src/bno055.c ****     {
19066:Core/Src/bno055.c ****         /* The write operation effective only if the operation
19067:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
19068:Core/Src/bno055.c ****          * current operation mode and set the config mode */
19069:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 38780              		.loc 1 19069 9 is_stmt 1 view .LVU11199
 38781              		.loc 1 19069 19 is_stmt 0 view .LVU11200
 38782 0018 0DF10600 		add	r0, sp, #6
 38783              	.LVL4904:
 38784              		.loc 1 19069 19 view .LVU11201
 38785 001c FFF7FEFF 		bl	bno055_get_operation_mode
 38786              	.LVL4905:
19070:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 38787              		.loc 1 19070 9 is_stmt 1 view .LVU11202
 38788              		.loc 1 19070 12 is_stmt 0 view .LVU11203
 38789 0020 0446     		mov	r4, r0
 38790 0022 88BB     		cbnz	r0, .L2843
19071:Core/Src/bno055.c ****         {
19072:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38791              		.loc 1 19072 13 is_stmt 1 view .LVU11204
 38792              		.loc 1 19072 32 is_stmt 0 view .LVU11205
 38793 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 38794              		.loc 1 19072 16 view .LVU11206
 38795 0028 1BB9     		cbnz	r3, .L2847
 38796              	.LVL4906:
 38797              	.L2841:
19073:Core/Src/bno055.c ****             {
19074:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
19075:Core/Src/bno055.c ****             }
19076:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 38798              		.loc 1 19076 13 is_stmt 1 view .LVU11207
 38799              		.loc 1 19076 16 is_stmt 0 view .LVU11208
 38800 002a 44B1     		cbz	r4, .L2848
19077:Core/Src/bno055.c ****             {
19078:Core/Src/bno055.c ****                 /* Write page as one */
19079:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
19080:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
19081:Core/Src/bno055.c ****                 {
19082:Core/Src/bno055.c ****                     /* Write the value of
19083:Core/Src/bno055.c ****                      * gyro anymotion slope samples*/
19084:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccOloYeZ.s 			page 1100


19085:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
19086:Core/Src/bno055.c ****                                                               &data_u8r,
19087:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
19088:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
19089:Core/Src/bno055.c ****                     {
19090:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
19091:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
19092:Core/Src/bno055.c ****                                                        gyro_any_motion_slope_samples_u8);
19093:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
19094:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
19095:Core/Src/bno055.c ****                                                                     &data_u8r,
19096:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
19097:Core/Src/bno055.c ****                     }
19098:Core/Src/bno055.c ****                 }
19099:Core/Src/bno055.c ****                 else
19100:Core/Src/bno055.c ****                 {
19101:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
19102:Core/Src/bno055.c ****                 }
19103:Core/Src/bno055.c ****             }
19104:Core/Src/bno055.c ****             else
19105:Core/Src/bno055.c ****             {
19106:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 38801              		.loc 1 19106 26 view .LVU11209
 38802 002c 4FF0FF34 		mov	r4, #-1
 38803              	.LVL4907:
 38804              		.loc 1 19106 26 view .LVU11210
 38805 0030 2CE0     		b	.L2840
 38806              	.LVL4908:
 38807              	.L2847:
19074:Core/Src/bno055.c ****             }
 38808              		.loc 1 19074 17 is_stmt 1 view .LVU11211
19074:Core/Src/bno055.c ****             }
 38809              		.loc 1 19074 28 is_stmt 0 view .LVU11212
 38810 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 38811              	.LVL4909:
19074:Core/Src/bno055.c ****             }
 38812              		.loc 1 19074 25 view .LVU11213
 38813 0036 54FA80F4 		uxtab	r4, r4, r0
 38814 003a 64B2     		sxtb	r4, r4
 38815              	.LVL4910:
19074:Core/Src/bno055.c ****             }
 38816              		.loc 1 19074 25 view .LVU11214
 38817 003c F5E7     		b	.L2841
 38818              	.L2848:
19079:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38819              		.loc 1 19079 17 is_stmt 1 view .LVU11215
19079:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38820              		.loc 1 19079 30 is_stmt 0 view .LVU11216
 38821 003e 0120     		movs	r0, #1
 38822 0040 FFF7FEFF 		bl	bno055_write_page_id
 38823              	.LVL4911:
19080:Core/Src/bno055.c ****                 {
 38824              		.loc 1 19080 17 is_stmt 1 view .LVU11217
19080:Core/Src/bno055.c ****                 {
 38825              		.loc 1 19080 20 is_stmt 0 view .LVU11218
 38826 0044 40BB     		cbnz	r0, .L2845
19084:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
ARM GAS  /tmp/ccOloYeZ.s 			page 1101


 38827              		.loc 1 19084 21 is_stmt 1 view .LVU11219
19084:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
 38828              		.loc 1 19084 40 is_stmt 0 view .LVU11220
 38829 0046 1A4B     		ldr	r3, .L2850
 38830 0048 1868     		ldr	r0, [r3]
 38831              	.LVL4912:
19084:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
 38832              		.loc 1 19084 40 view .LVU11221
 38833 004a 0469     		ldr	r4, [r0, #16]
 38834              	.LVL4913:
19084:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
 38835              		.loc 1 19084 32 view .LVU11222
 38836 004c 0123     		movs	r3, #1
 38837 004e 0DF10702 		add	r2, sp, #7
 38838 0052 1F21     		movs	r1, #31
 38839 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38840 0056 A047     		blx	r4
 38841              	.LVL4914:
19088:Core/Src/bno055.c ****                     {
 38842              		.loc 1 19088 21 is_stmt 1 view .LVU11223
19088:Core/Src/bno055.c ****                     {
 38843              		.loc 1 19088 24 is_stmt 0 view .LVU11224
 38844 0058 0446     		mov	r4, r0
 38845 005a B8B9     		cbnz	r0, .L2840
19090:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
 38846              		.loc 1 19090 25 is_stmt 1 view .LVU11225
19090:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
 38847              		.loc 1 19090 36 is_stmt 0 view .LVU11226
 38848 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
19090:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
 38849              		.loc 1 19090 34 view .LVU11227
 38850 0060 23F00303 		bic	r3, r3, #3
 38851 0064 05F00300 		and	r0, r5, #3
 38852              	.LVL4915:
19090:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
 38853              		.loc 1 19090 34 view .LVU11228
 38854 0068 0343     		orrs	r3, r3, r0
 38855 006a 8DF80730 		strb	r3, [sp, #7]
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
 38856              		.loc 1 19093 25 is_stmt 1 view .LVU11229
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
 38857              		.loc 1 19093 45 is_stmt 0 view .LVU11230
 38858 006e 104B     		ldr	r3, .L2850
 38859 0070 1868     		ldr	r0, [r3]
 38860 0072 C568     		ldr	r5, [r0, #12]
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
 38861              		.loc 1 19093 37 view .LVU11231
 38862 0074 0123     		movs	r3, #1
 38863 0076 0DF10702 		add	r2, sp, #7
 38864 007a 1F21     		movs	r1, #31
 38865 007c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38866 007e A847     		blx	r5
 38867              	.LVL4916:
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
 38868              		.loc 1 19093 34 view .LVU11232
 38869 0080 54FA80F0 		uxtab	r0, r4, r0
 38870 0084 44B2     		sxtb	r4, r0
ARM GAS  /tmp/ccOloYeZ.s 			page 1102


 38871              	.LVL4917:
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
 38872              		.loc 1 19093 34 view .LVU11233
 38873 0086 01E0     		b	.L2840
 38874              	.LVL4918:
 38875              	.L2843:
19107:Core/Src/bno055.c ****             }
19108:Core/Src/bno055.c ****         }
19109:Core/Src/bno055.c ****         else
19110:Core/Src/bno055.c ****         {
19111:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 38876              		.loc 1 19111 22 view .LVU11234
 38877 0088 4FF0FF34 		mov	r4, #-1
 38878              	.LVL4919:
 38879              	.L2840:
19112:Core/Src/bno055.c ****         }
19113:Core/Src/bno055.c ****     }
19114:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38880              		.loc 1 19114 5 is_stmt 1 view .LVU11235
 38881              		.loc 1 19114 24 is_stmt 0 view .LVU11236
 38882 008c 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 38883              		.loc 1 19114 8 view .LVU11237
 38884 0090 28B9     		cbnz	r0, .L2849
 38885              	.LVL4920:
 38886              	.L2839:
19115:Core/Src/bno055.c ****     {
19116:Core/Src/bno055.c ****         /* set the operation mode of
19117:Core/Src/bno055.c ****          * previous operation mode*/
19118:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
19119:Core/Src/bno055.c ****     }
19120:Core/Src/bno055.c **** 
19121:Core/Src/bno055.c ****     return com_rslt;
19122:Core/Src/bno055.c **** }
 38887              		.loc 1 19122 1 view .LVU11238
 38888 0092 2046     		mov	r0, r4
 38889 0094 03B0     		add	sp, sp, #12
 38890              		.cfi_remember_state
 38891              		.cfi_def_cfa_offset 12
 38892              		@ sp needed
 38893 0096 30BD     		pop	{r4, r5, pc}
 38894              	.LVL4921:
 38895              	.L2845:
 38896              		.cfi_restore_state
19101:Core/Src/bno055.c ****                 }
 38897              		.loc 1 19101 30 view .LVU11239
 38898 0098 4FF0FF34 		mov	r4, #-1
 38899              	.LVL4922:
19101:Core/Src/bno055.c ****                 }
 38900              		.loc 1 19101 30 view .LVU11240
 38901 009c F6E7     		b	.L2840
 38902              	.LVL4923:
 38903              	.L2849:
19118:Core/Src/bno055.c ****     }
 38904              		.loc 1 19118 9 is_stmt 1 view .LVU11241
19118:Core/Src/bno055.c ****     }
 38905              		.loc 1 19118 21 is_stmt 0 view .LVU11242
 38906 009e FFF7FEFF 		bl	bno055_set_operation_mode
ARM GAS  /tmp/ccOloYeZ.s 			page 1103


 38907              	.LVL4924:
19118:Core/Src/bno055.c ****     }
 38908              		.loc 1 19118 18 view .LVU11243
 38909 00a2 54FA80F0 		uxtab	r0, r4, r0
 38910 00a6 44B2     		sxtb	r4, r0
 38911              	.LVL4925:
19118:Core/Src/bno055.c ****     }
 38912              		.loc 1 19118 18 view .LVU11244
 38913 00a8 F3E7     		b	.L2839
 38914              	.LVL4926:
 38915              	.L2842:
19062:Core/Src/bno055.c ****     }
 38916              		.loc 1 19062 16 view .LVU11245
 38917 00aa 6FF07E04 		mvn	r4, #126
 38918 00ae F0E7     		b	.L2839
 38919              	.L2851:
 38920              		.align	2
 38921              	.L2850:
 38922 00b0 00000000 		.word	p_bno055
 38923              		.cfi_endproc
 38924              	.LFE272:
 38926              		.section	.text.bno055_get_gyro_any_motion_awake_durn,"ax",%progbits
 38927              		.align	1
 38928              		.global	bno055_get_gyro_any_motion_awake_durn
 38929              		.syntax unified
 38930              		.thumb
 38931              		.thumb_func
 38933              	bno055_get_gyro_any_motion_awake_durn:
 38934              	.LVL4927:
 38935              	.LFB273:
19123:Core/Src/bno055.c **** 
19124:Core/Src/bno055.c **** /*!
19125:Core/Src/bno055.c ****  *  @brief This API used to read gyro anymotion awake duration
19126:Core/Src/bno055.c ****  *  from page one register from 0x1F bit 2 to 3
19127:Core/Src/bno055.c ****  *
19128:Core/Src/bno055.c ****  *  @param gyro_awake_durn_u8 : The value of gyro anymotion awake duration
19129:Core/Src/bno055.c ****  *
19130:Core/Src/bno055.c ****  *  @return results of bus communication function
19131:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
19132:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
19133:Core/Src/bno055.c ****  *
19134:Core/Src/bno055.c ****  */
19135:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_awake_durn(u8 *gyro_awake_durn_u8)
19136:Core/Src/bno055.c **** {
 38936              		.loc 1 19136 1 is_stmt 1 view -0
 38937              		.cfi_startproc
 38938              		@ args = 0, pretend = 0, frame = 8
 38939              		@ frame_needed = 0, uses_anonymous_args = 0
 38940              		.loc 1 19136 1 is_stmt 0 view .LVU11247
 38941 0000 30B5     		push	{r4, r5, lr}
 38942              		.cfi_def_cfa_offset 12
 38943              		.cfi_offset 4, -12
 38944              		.cfi_offset 5, -8
 38945              		.cfi_offset 14, -4
 38946 0002 83B0     		sub	sp, sp, #12
 38947              		.cfi_def_cfa_offset 24
19137:Core/Src/bno055.c ****     /* Variable used to return value of
ARM GAS  /tmp/ccOloYeZ.s 			page 1104


19138:Core/Src/bno055.c ****      * communication routine*/
19139:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38948              		.loc 1 19139 5 is_stmt 1 view .LVU11248
 38949              	.LVL4928:
19140:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38950              		.loc 1 19140 5 view .LVU11249
 38951              		.loc 1 19140 8 is_stmt 0 view .LVU11250
 38952 0004 0023     		movs	r3, #0
 38953 0006 8DF80730 		strb	r3, [sp, #7]
19141:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38954              		.loc 1 19141 5 is_stmt 1 view .LVU11251
 38955              	.LVL4929:
19142:Core/Src/bno055.c **** 
19143:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
19144:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38956              		.loc 1 19144 5 view .LVU11252
 38957              		.loc 1 19144 18 is_stmt 0 view .LVU11253
 38958 000a 144B     		ldr	r3, .L2860
 38959 000c 1B68     		ldr	r3, [r3]
 38960              		.loc 1 19144 8 view .LVU11254
 38961 000e F3B1     		cbz	r3, .L2856
 38962 0010 0446     		mov	r4, r0
19145:Core/Src/bno055.c ****     {
19146:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
19147:Core/Src/bno055.c ****     }
19148:Core/Src/bno055.c ****     else
19149:Core/Src/bno055.c ****     {
19150:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion awake duration is
19151:Core/Src/bno055.c ****          * available in the page one*/
19152:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 38963              		.loc 1 19152 9 is_stmt 1 view .LVU11255
 38964              		.loc 1 19152 21 is_stmt 0 view .LVU11256
 38965 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38966              		.loc 1 19152 12 view .LVU11257
 38967 0014 012B     		cmp	r3, #1
 38968 0016 14D1     		bne	.L2859
 38969              	.LVL4930:
 38970              	.L2854:
19153:Core/Src/bno055.c ****         {
19154:Core/Src/bno055.c ****             /* Write page as one */
19155:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
19156:Core/Src/bno055.c ****         }
19157:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 38971              		.loc 1 19157 53 discriminator 1 view .LVU11258
 38972 0018 104B     		ldr	r3, .L2860
 38973 001a 1B68     		ldr	r3, [r3]
 38974 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38975              		.loc 1 19157 41 discriminator 1 view .LVU11259
 38976 001e 012B     		cmp	r3, #1
 38977 0020 18D1     		bne	.L2857
 38978              	.L2855:
19158:Core/Src/bno055.c ****         {
19159:Core/Src/bno055.c ****             /* Read the value of gyro anymotion awake duration*/
19160:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 38979              		.loc 1 19160 13 is_stmt 1 view .LVU11260
 38980              		.loc 1 19160 32 is_stmt 0 view .LVU11261
 38981 0022 0E4B     		ldr	r3, .L2860
ARM GAS  /tmp/ccOloYeZ.s 			page 1105


 38982 0024 1868     		ldr	r0, [r3]
 38983 0026 0569     		ldr	r5, [r0, #16]
 38984              		.loc 1 19160 24 view .LVU11262
 38985 0028 0123     		movs	r3, #1
 38986 002a 0DF10702 		add	r2, sp, #7
 38987 002e 1F21     		movs	r1, #31
 38988 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38989 0032 A847     		blx	r5
 38990              	.LVL4931:
19161:Core/Src/bno055.c ****                                                       BNO055_GYRO_AWAKE_DURN_REG,
19162:Core/Src/bno055.c ****                                                       &data_u8r,
19163:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
19164:Core/Src/bno055.c ****             *gyro_awake_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_AWAKE_DURN);
 38991              		.loc 1 19164 13 is_stmt 1 view .LVU11263
 38992              		.loc 1 19164 35 is_stmt 0 view .LVU11264
 38993 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 38994 0038 C3F38103 		ubfx	r3, r3, #2, #2
 38995              		.loc 1 19164 33 view .LVU11265
 38996 003c 2370     		strb	r3, [r4]
 38997              	.LVL4932:
 38998              	.L2853:
19165:Core/Src/bno055.c ****         }
19166:Core/Src/bno055.c ****         else
19167:Core/Src/bno055.c ****         {
19168:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
19169:Core/Src/bno055.c ****         }
19170:Core/Src/bno055.c ****     }
19171:Core/Src/bno055.c **** 
19172:Core/Src/bno055.c ****     return com_rslt;
19173:Core/Src/bno055.c **** }
 38999              		.loc 1 19173 1 view .LVU11266
 39000 003e 03B0     		add	sp, sp, #12
 39001              		.cfi_remember_state
 39002              		.cfi_def_cfa_offset 12
 39003              		@ sp needed
 39004 0040 30BD     		pop	{r4, r5, pc}
 39005              	.LVL4933:
 39006              	.L2859:
 39007              		.cfi_restore_state
19155:Core/Src/bno055.c ****         }
 39008              		.loc 1 19155 13 is_stmt 1 view .LVU11267
19155:Core/Src/bno055.c ****         }
 39009              		.loc 1 19155 23 is_stmt 0 view .LVU11268
 39010 0042 0120     		movs	r0, #1
 39011              	.LVL4934:
19155:Core/Src/bno055.c ****         }
 39012              		.loc 1 19155 23 view .LVU11269
 39013 0044 FFF7FEFF 		bl	bno055_write_page_id
 39014              	.LVL4935:
19157:Core/Src/bno055.c ****         {
 39015              		.loc 1 19157 9 is_stmt 1 view .LVU11270
19157:Core/Src/bno055.c ****         {
 39016              		.loc 1 19157 12 is_stmt 0 view .LVU11271
 39017 0048 0028     		cmp	r0, #0
 39018 004a EAD0     		beq	.L2855
 39019 004c E4E7     		b	.L2854
 39020              	.LVL4936:
ARM GAS  /tmp/ccOloYeZ.s 			page 1106


 39021              	.L2856:
19146:Core/Src/bno055.c ****     }
 39022              		.loc 1 19146 16 view .LVU11272
 39023 004e 6FF07E00 		mvn	r0, #126
 39024              	.LVL4937:
19146:Core/Src/bno055.c ****     }
 39025              		.loc 1 19146 16 view .LVU11273
 39026 0052 F4E7     		b	.L2853
 39027              	.LVL4938:
 39028              	.L2857:
19168:Core/Src/bno055.c ****         }
 39029              		.loc 1 19168 22 view .LVU11274
 39030 0054 4FF0FF30 		mov	r0, #-1
 39031 0058 F1E7     		b	.L2853
 39032              	.L2861:
 39033 005a 00BF     		.align	2
 39034              	.L2860:
 39035 005c 00000000 		.word	p_bno055
 39036              		.cfi_endproc
 39037              	.LFE273:
 39039              		.section	.text.bno055_set_gyro_any_motion_awake_durn,"ax",%progbits
 39040              		.align	1
 39041              		.global	bno055_set_gyro_any_motion_awake_durn
 39042              		.syntax unified
 39043              		.thumb
 39044              		.thumb_func
 39046              	bno055_set_gyro_any_motion_awake_durn:
 39047              	.LVL4939:
 39048              	.LFB274:
19174:Core/Src/bno055.c **** 
19175:Core/Src/bno055.c **** /*!
19176:Core/Src/bno055.c ****  *  @brief This API used to write gyro anymotion awake duration
19177:Core/Src/bno055.c ****  *  from page one register from 0x1F bit 2 to 3
19178:Core/Src/bno055.c ****  *
19179:Core/Src/bno055.c ****  *  @param gyro_awake_durn_u8 : The value of gyro anymotion awake duration
19180:Core/Src/bno055.c ****  *
19181:Core/Src/bno055.c ****  *  @return results of bus communication function
19182:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
19183:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
19184:Core/Src/bno055.c ****  *
19185:Core/Src/bno055.c ****  */
19186:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_awake_durn(u8 gyro_awake_durn_u8)
19187:Core/Src/bno055.c **** {
 39049              		.loc 1 19187 1 is_stmt 1 view -0
 39050              		.cfi_startproc
 39051              		@ args = 0, pretend = 0, frame = 8
 39052              		@ frame_needed = 0, uses_anonymous_args = 0
 39053              		.loc 1 19187 1 is_stmt 0 view .LVU11276
 39054 0000 30B5     		push	{r4, r5, lr}
 39055              		.cfi_def_cfa_offset 12
 39056              		.cfi_offset 4, -12
 39057              		.cfi_offset 5, -8
 39058              		.cfi_offset 14, -4
 39059 0002 83B0     		sub	sp, sp, #12
 39060              		.cfi_def_cfa_offset 24
19188:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 39061              		.loc 1 19188 5 is_stmt 1 view .LVU11277
ARM GAS  /tmp/ccOloYeZ.s 			page 1107


 39062              	.LVL4940:
19189:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 39063              		.loc 1 19189 5 view .LVU11278
 39064              		.loc 1 19189 8 is_stmt 0 view .LVU11279
 39065 0004 0023     		movs	r3, #0
 39066 0006 8DF80730 		strb	r3, [sp, #7]
19190:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 39067              		.loc 1 19190 5 is_stmt 1 view .LVU11280
 39068              	.LVL4941:
19191:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 39069              		.loc 1 19191 5 view .LVU11281
19192:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 39070              		.loc 1 19192 5 view .LVU11282
 39071              		.loc 1 19192 8 is_stmt 0 view .LVU11283
 39072 000a 8DF80630 		strb	r3, [sp, #6]
19193:Core/Src/bno055.c **** 
19194:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
19195:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39073              		.loc 1 19195 5 is_stmt 1 view .LVU11284
 39074              		.loc 1 19195 18 is_stmt 0 view .LVU11285
 39075 000e 294B     		ldr	r3, .L2874
 39076 0010 1B68     		ldr	r3, [r3]
 39077              		.loc 1 19195 8 view .LVU11286
 39078 0012 002B     		cmp	r3, #0
 39079 0014 4AD0     		beq	.L2866
 39080 0016 0546     		mov	r5, r0
19196:Core/Src/bno055.c ****     {
19197:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
19198:Core/Src/bno055.c ****     }
19199:Core/Src/bno055.c ****     else
19200:Core/Src/bno055.c ****     {
19201:Core/Src/bno055.c ****         /* The write operation effective only if the operation
19202:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
19203:Core/Src/bno055.c ****          * current operation mode and set the config mode */
19204:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 39081              		.loc 1 19204 9 is_stmt 1 view .LVU11287
 39082              		.loc 1 19204 19 is_stmt 0 view .LVU11288
 39083 0018 0DF10600 		add	r0, sp, #6
 39084              	.LVL4942:
 39085              		.loc 1 19204 19 view .LVU11289
 39086 001c FFF7FEFF 		bl	bno055_get_operation_mode
 39087              	.LVL4943:
19205:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 39088              		.loc 1 19205 9 is_stmt 1 view .LVU11290
 39089              		.loc 1 19205 12 is_stmt 0 view .LVU11291
 39090 0020 0446     		mov	r4, r0
 39091 0022 90BB     		cbnz	r0, .L2867
19206:Core/Src/bno055.c ****         {
19207:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39092              		.loc 1 19207 13 is_stmt 1 view .LVU11292
 39093              		.loc 1 19207 32 is_stmt 0 view .LVU11293
 39094 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 39095              		.loc 1 19207 16 view .LVU11294
 39096 0028 1BB9     		cbnz	r3, .L2871
 39097              	.LVL4944:
 39098              	.L2865:
19208:Core/Src/bno055.c ****             {
ARM GAS  /tmp/ccOloYeZ.s 			page 1108


19209:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
19210:Core/Src/bno055.c ****             }
19211:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 39099              		.loc 1 19211 13 is_stmt 1 view .LVU11295
 39100              		.loc 1 19211 16 is_stmt 0 view .LVU11296
 39101 002a 44B1     		cbz	r4, .L2872
19212:Core/Src/bno055.c ****             {
19213:Core/Src/bno055.c ****                 /* Write page as one */
19214:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
19215:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
19216:Core/Src/bno055.c ****                 {
19217:Core/Src/bno055.c ****                     /* Write the value of gyro
19218:Core/Src/bno055.c ****                      *  anymotion awake duration*/
19219:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
19220:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
19221:Core/Src/bno055.c ****                                                               &data_u8r,
19222:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
19223:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
19224:Core/Src/bno055.c ****                     {
19225:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_AWAKE_DURN, gyro_awake
19226:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
19227:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
19228:Core/Src/bno055.c ****                                                                     &data_u8r,
19229:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
19230:Core/Src/bno055.c ****                     }
19231:Core/Src/bno055.c ****                 }
19232:Core/Src/bno055.c ****                 else
19233:Core/Src/bno055.c ****                 {
19234:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
19235:Core/Src/bno055.c ****                 }
19236:Core/Src/bno055.c ****             }
19237:Core/Src/bno055.c ****             else
19238:Core/Src/bno055.c ****             {
19239:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 39102              		.loc 1 19239 26 view .LVU11297
 39103 002c 4FF0FF34 		mov	r4, #-1
 39104              	.LVL4945:
 39105              		.loc 1 19239 26 view .LVU11298
 39106 0030 2DE0     		b	.L2864
 39107              	.LVL4946:
 39108              	.L2871:
19209:Core/Src/bno055.c ****             }
 39109              		.loc 1 19209 17 is_stmt 1 view .LVU11299
19209:Core/Src/bno055.c ****             }
 39110              		.loc 1 19209 28 is_stmt 0 view .LVU11300
 39111 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 39112              	.LVL4947:
19209:Core/Src/bno055.c ****             }
 39113              		.loc 1 19209 25 view .LVU11301
 39114 0036 54FA80F4 		uxtab	r4, r4, r0
 39115 003a 64B2     		sxtb	r4, r4
 39116              	.LVL4948:
19209:Core/Src/bno055.c ****             }
 39117              		.loc 1 19209 25 view .LVU11302
 39118 003c F5E7     		b	.L2865
 39119              	.L2872:
19214:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
ARM GAS  /tmp/ccOloYeZ.s 			page 1109


 39120              		.loc 1 19214 17 is_stmt 1 view .LVU11303
19214:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39121              		.loc 1 19214 30 is_stmt 0 view .LVU11304
 39122 003e 0120     		movs	r0, #1
 39123 0040 FFF7FEFF 		bl	bno055_write_page_id
 39124              	.LVL4949:
19215:Core/Src/bno055.c ****                 {
 39125              		.loc 1 19215 17 is_stmt 1 view .LVU11305
19215:Core/Src/bno055.c ****                 {
 39126              		.loc 1 19215 20 is_stmt 0 view .LVU11306
 39127 0044 48BB     		cbnz	r0, .L2869
19219:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
 39128              		.loc 1 19219 21 is_stmt 1 view .LVU11307
19219:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
 39129              		.loc 1 19219 40 is_stmt 0 view .LVU11308
 39130 0046 1B4B     		ldr	r3, .L2874
 39131 0048 1868     		ldr	r0, [r3]
 39132              	.LVL4950:
19219:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
 39133              		.loc 1 19219 40 view .LVU11309
 39134 004a 0469     		ldr	r4, [r0, #16]
 39135              	.LVL4951:
19219:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
 39136              		.loc 1 19219 32 view .LVU11310
 39137 004c 0123     		movs	r3, #1
 39138 004e 0DF10702 		add	r2, sp, #7
 39139 0052 1F21     		movs	r1, #31
 39140 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39141 0056 A047     		blx	r4
 39142              	.LVL4952:
19223:Core/Src/bno055.c ****                     {
 39143              		.loc 1 19223 21 is_stmt 1 view .LVU11311
19223:Core/Src/bno055.c ****                     {
 39144              		.loc 1 19223 24 is_stmt 0 view .LVU11312
 39145 0058 0446     		mov	r4, r0
 39146 005a C0B9     		cbnz	r0, .L2864
19225:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39147              		.loc 1 19225 25 is_stmt 1 view .LVU11313
19225:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39148              		.loc 1 19225 36 is_stmt 0 view .LVU11314
 39149 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 39150 0060 A800     		lsls	r0, r5, #2
 39151              	.LVL4953:
19225:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39152              		.loc 1 19225 36 view .LVU11315
 39153 0062 00F00C00 		and	r0, r0, #12
 39154 0066 23F00C03 		bic	r3, r3, #12
 39155 006a 0343     		orrs	r3, r3, r0
19225:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39156              		.loc 1 19225 34 view .LVU11316
 39157 006c 8DF80730 		strb	r3, [sp, #7]
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 39158              		.loc 1 19226 25 is_stmt 1 view .LVU11317
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 39159              		.loc 1 19226 45 is_stmt 0 view .LVU11318
 39160 0070 104B     		ldr	r3, .L2874
 39161 0072 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccOloYeZ.s 			page 1110


 39162 0074 C568     		ldr	r5, [r0, #12]
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 39163              		.loc 1 19226 37 view .LVU11319
 39164 0076 0123     		movs	r3, #1
 39165 0078 0DF10702 		add	r2, sp, #7
 39166 007c 1F21     		movs	r1, #31
 39167 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39168 0080 A847     		blx	r5
 39169              	.LVL4954:
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 39170              		.loc 1 19226 34 view .LVU11320
 39171 0082 54FA80F0 		uxtab	r0, r4, r0
 39172 0086 44B2     		sxtb	r4, r0
 39173              	.LVL4955:
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 39174              		.loc 1 19226 34 view .LVU11321
 39175 0088 01E0     		b	.L2864
 39176              	.LVL4956:
 39177              	.L2867:
19240:Core/Src/bno055.c ****             }
19241:Core/Src/bno055.c ****         }
19242:Core/Src/bno055.c ****         else
19243:Core/Src/bno055.c ****         {
19244:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 39178              		.loc 1 19244 22 view .LVU11322
 39179 008a 4FF0FF34 		mov	r4, #-1
 39180              	.LVL4957:
 39181              	.L2864:
19245:Core/Src/bno055.c ****         }
19246:Core/Src/bno055.c ****     }
19247:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39182              		.loc 1 19247 5 is_stmt 1 view .LVU11323
 39183              		.loc 1 19247 24 is_stmt 0 view .LVU11324
 39184 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 39185              		.loc 1 19247 8 view .LVU11325
 39186 0092 28B9     		cbnz	r0, .L2873
 39187              	.LVL4958:
 39188              	.L2863:
19248:Core/Src/bno055.c ****     {
19249:Core/Src/bno055.c ****         /* set the operation mode
19250:Core/Src/bno055.c ****          * of previous operation mode*/
19251:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
19252:Core/Src/bno055.c ****     }
19253:Core/Src/bno055.c **** 
19254:Core/Src/bno055.c ****     return com_rslt;
19255:Core/Src/bno055.c **** }
 39189              		.loc 1 19255 1 view .LVU11326
 39190 0094 2046     		mov	r0, r4
 39191 0096 03B0     		add	sp, sp, #12
 39192              		.cfi_remember_state
 39193              		.cfi_def_cfa_offset 12
 39194              		@ sp needed
 39195 0098 30BD     		pop	{r4, r5, pc}
 39196              	.LVL4959:
 39197              	.L2869:
 39198              		.cfi_restore_state
19234:Core/Src/bno055.c ****                 }
ARM GAS  /tmp/ccOloYeZ.s 			page 1111


 39199              		.loc 1 19234 30 view .LVU11327
 39200 009a 4FF0FF34 		mov	r4, #-1
 39201              	.LVL4960:
19234:Core/Src/bno055.c ****                 }
 39202              		.loc 1 19234 30 view .LVU11328
 39203 009e F6E7     		b	.L2864
 39204              	.LVL4961:
 39205              	.L2873:
19251:Core/Src/bno055.c ****     }
 39206              		.loc 1 19251 9 is_stmt 1 view .LVU11329
19251:Core/Src/bno055.c ****     }
 39207              		.loc 1 19251 21 is_stmt 0 view .LVU11330
 39208 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 39209              	.LVL4962:
19251:Core/Src/bno055.c ****     }
 39210              		.loc 1 19251 18 view .LVU11331
 39211 00a4 54FA80F0 		uxtab	r0, r4, r0
 39212 00a8 44B2     		sxtb	r4, r0
 39213              	.LVL4963:
19251:Core/Src/bno055.c ****     }
 39214              		.loc 1 19251 18 view .LVU11332
 39215 00aa F3E7     		b	.L2863
 39216              	.LVL4964:
 39217              	.L2866:
19197:Core/Src/bno055.c ****     }
 39218              		.loc 1 19197 16 view .LVU11333
 39219 00ac 6FF07E04 		mvn	r4, #126
 39220 00b0 F0E7     		b	.L2863
 39221              	.L2875:
 39222 00b2 00BF     		.align	2
 39223              	.L2874:
 39224 00b4 00000000 		.word	p_bno055
 39225              		.cfi_endproc
 39226              	.LFE274:
 39228              		.section	.bss.p_bno055,"aw",%nobits
 39229              		.align	2
 39232              	p_bno055:
 39233 0000 00000000 		.space	4
 39234              		.section	.rodata
 39235              		.align	2
 39236              		.set	.LANCHOR0,. + 0
 39237              	.LC0:
 39238 0000 00000000 		.ascii	"\000\000\000\000\000\000"
 39238      0000
 39239 0006 0000     		.space	2
 39240              	.LC1:
 39241 0008 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 39241      00000000 
 39242              	.LC2:
 39243 0010 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 39243      00000000 
 39243      00000000 
 39243      00
 39244 001d 00000000 		.ascii	"\000\000\000\000\000"
 39244      00
 39245              		.text
 39246              	.Letext0:
ARM GAS  /tmp/ccOloYeZ.s 			page 1112


 39247              		.file 2 "Core/Inc/bno055.h"
ARM GAS  /tmp/ccOloYeZ.s 			page 1113


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bno055.c
     /tmp/ccOloYeZ.s:21     .text.bno055_init:0000000000000000 $t
     /tmp/ccOloYeZ.s:27     .text.bno055_init:0000000000000000 bno055_init
     /tmp/ccOloYeZ.s:242    .text.bno055_init:00000000000000f8 $d
     /tmp/ccOloYeZ.s:39232  .bss.p_bno055:0000000000000000 p_bno055
     /tmp/ccOloYeZ.s:247    .text.bno055_write_register:0000000000000000 $t
     /tmp/ccOloYeZ.s:253    .text.bno055_write_register:0000000000000000 bno055_write_register
     /tmp/ccOloYeZ.s:305    .text.bno055_write_register:000000000000001c $d
     /tmp/ccOloYeZ.s:310    .text.bno055_read_register:0000000000000000 $t
     /tmp/ccOloYeZ.s:316    .text.bno055_read_register:0000000000000000 bno055_read_register
     /tmp/ccOloYeZ.s:368    .text.bno055_read_register:000000000000001c $d
     /tmp/ccOloYeZ.s:373    .text.bno055_read_page_id:0000000000000000 $t
     /tmp/ccOloYeZ.s:379    .text.bno055_read_page_id:0000000000000000 bno055_read_page_id
     /tmp/ccOloYeZ.s:461    .text.bno055_read_page_id:0000000000000040 $d
     /tmp/ccOloYeZ.s:466    .text.bno055_write_page_id:0000000000000000 $t
     /tmp/ccOloYeZ.s:472    .text.bno055_write_page_id:0000000000000000 bno055_write_page_id
     /tmp/ccOloYeZ.s:570    .text.bno055_write_page_id:0000000000000058 $d
     /tmp/ccOloYeZ.s:575    .text.bno055_read_chip_id:0000000000000000 $t
     /tmp/ccOloYeZ.s:581    .text.bno055_read_chip_id:0000000000000000 bno055_read_chip_id
     /tmp/ccOloYeZ.s:680    .text.bno055_read_chip_id:0000000000000054 $d
     /tmp/ccOloYeZ.s:685    .text.bno055_read_sw_rev_id:0000000000000000 $t
     /tmp/ccOloYeZ.s:691    .text.bno055_read_sw_rev_id:0000000000000000 bno055_read_sw_rev_id
     /tmp/ccOloYeZ.s:795    .text.bno055_read_sw_rev_id:0000000000000058 $d
     /tmp/ccOloYeZ.s:800    .text.bno055_read_accel_rev_id:0000000000000000 $t
     /tmp/ccOloYeZ.s:806    .text.bno055_read_accel_rev_id:0000000000000000 bno055_read_accel_rev_id
     /tmp/ccOloYeZ.s:905    .text.bno055_read_accel_rev_id:0000000000000054 $d
     /tmp/ccOloYeZ.s:910    .text.bno055_read_mag_rev_id:0000000000000000 $t
     /tmp/ccOloYeZ.s:916    .text.bno055_read_mag_rev_id:0000000000000000 bno055_read_mag_rev_id
     /tmp/ccOloYeZ.s:1015   .text.bno055_read_mag_rev_id:0000000000000054 $d
     /tmp/ccOloYeZ.s:1020   .text.bno055_read_gyro_rev_id:0000000000000000 $t
     /tmp/ccOloYeZ.s:1026   .text.bno055_read_gyro_rev_id:0000000000000000 bno055_read_gyro_rev_id
     /tmp/ccOloYeZ.s:1125   .text.bno055_read_gyro_rev_id:0000000000000054 $d
     /tmp/ccOloYeZ.s:1130   .text.bno055_read_bl_rev_id:0000000000000000 $t
     /tmp/ccOloYeZ.s:1136   .text.bno055_read_bl_rev_id:0000000000000000 bno055_read_bl_rev_id
     /tmp/ccOloYeZ.s:1235   .text.bno055_read_bl_rev_id:0000000000000054 $d
     /tmp/ccOloYeZ.s:1240   .text.bno055_read_accel_x:0000000000000000 $t
     /tmp/ccOloYeZ.s:1246   .text.bno055_read_accel_x:0000000000000000 bno055_read_accel_x
     /tmp/ccOloYeZ.s:1351   .text.bno055_read_accel_x:0000000000000058 $d
     /tmp/ccOloYeZ.s:1356   .text.bno055_read_accel_y:0000000000000000 $t
     /tmp/ccOloYeZ.s:1362   .text.bno055_read_accel_y:0000000000000000 bno055_read_accel_y
     /tmp/ccOloYeZ.s:1467   .text.bno055_read_accel_y:0000000000000058 $d
     /tmp/ccOloYeZ.s:1472   .text.bno055_read_accel_z:0000000000000000 $t
     /tmp/ccOloYeZ.s:1478   .text.bno055_read_accel_z:0000000000000000 bno055_read_accel_z
     /tmp/ccOloYeZ.s:1583   .text.bno055_read_accel_z:0000000000000058 $d
     /tmp/ccOloYeZ.s:1588   .text.bno055_read_accel_xyz:0000000000000000 $t
     /tmp/ccOloYeZ.s:1594   .text.bno055_read_accel_xyz:0000000000000000 bno055_read_accel_xyz
     /tmp/ccOloYeZ.s:1721   .text.bno055_read_accel_xyz:000000000000007c $d
     /tmp/ccOloYeZ.s:1727   .text.bno055_read_mag_x:0000000000000000 $t
     /tmp/ccOloYeZ.s:1733   .text.bno055_read_mag_x:0000000000000000 bno055_read_mag_x
     /tmp/ccOloYeZ.s:1838   .text.bno055_read_mag_x:0000000000000058 $d
     /tmp/ccOloYeZ.s:1843   .text.bno055_read_mag_y:0000000000000000 $t
     /tmp/ccOloYeZ.s:1849   .text.bno055_read_mag_y:0000000000000000 bno055_read_mag_y
     /tmp/ccOloYeZ.s:1954   .text.bno055_read_mag_y:0000000000000058 $d
     /tmp/ccOloYeZ.s:1959   .text.bno055_read_mag_z:0000000000000000 $t
     /tmp/ccOloYeZ.s:1965   .text.bno055_read_mag_z:0000000000000000 bno055_read_mag_z
     /tmp/ccOloYeZ.s:2070   .text.bno055_read_mag_z:0000000000000058 $d
ARM GAS  /tmp/ccOloYeZ.s 			page 1114


     /tmp/ccOloYeZ.s:2075   .text.bno055_read_mag_xyz:0000000000000000 $t
     /tmp/ccOloYeZ.s:2081   .text.bno055_read_mag_xyz:0000000000000000 bno055_read_mag_xyz
     /tmp/ccOloYeZ.s:2208   .text.bno055_read_mag_xyz:000000000000007c $d
     /tmp/ccOloYeZ.s:2214   .text.bno055_read_gyro_x:0000000000000000 $t
     /tmp/ccOloYeZ.s:2220   .text.bno055_read_gyro_x:0000000000000000 bno055_read_gyro_x
     /tmp/ccOloYeZ.s:2325   .text.bno055_read_gyro_x:0000000000000058 $d
     /tmp/ccOloYeZ.s:2330   .text.bno055_read_gyro_y:0000000000000000 $t
     /tmp/ccOloYeZ.s:2336   .text.bno055_read_gyro_y:0000000000000000 bno055_read_gyro_y
     /tmp/ccOloYeZ.s:2441   .text.bno055_read_gyro_y:0000000000000058 $d
     /tmp/ccOloYeZ.s:2446   .text.bno055_read_gyro_z:0000000000000000 $t
     /tmp/ccOloYeZ.s:2452   .text.bno055_read_gyro_z:0000000000000000 bno055_read_gyro_z
     /tmp/ccOloYeZ.s:2557   .text.bno055_read_gyro_z:0000000000000058 $d
     /tmp/ccOloYeZ.s:2562   .text.bno055_read_gyro_xyz:0000000000000000 $t
     /tmp/ccOloYeZ.s:2568   .text.bno055_read_gyro_xyz:0000000000000000 bno055_read_gyro_xyz
     /tmp/ccOloYeZ.s:2695   .text.bno055_read_gyro_xyz:000000000000007c $d
     /tmp/ccOloYeZ.s:2701   .text.bno055_read_euler_h:0000000000000000 $t
     /tmp/ccOloYeZ.s:2707   .text.bno055_read_euler_h:0000000000000000 bno055_read_euler_h
     /tmp/ccOloYeZ.s:2812   .text.bno055_read_euler_h:0000000000000058 $d
     /tmp/ccOloYeZ.s:2817   .text.bno055_read_euler_r:0000000000000000 $t
     /tmp/ccOloYeZ.s:2823   .text.bno055_read_euler_r:0000000000000000 bno055_read_euler_r
     /tmp/ccOloYeZ.s:2928   .text.bno055_read_euler_r:0000000000000058 $d
     /tmp/ccOloYeZ.s:2933   .text.bno055_read_euler_p:0000000000000000 $t
     /tmp/ccOloYeZ.s:2939   .text.bno055_read_euler_p:0000000000000000 bno055_read_euler_p
     /tmp/ccOloYeZ.s:3044   .text.bno055_read_euler_p:0000000000000058 $d
     /tmp/ccOloYeZ.s:3049   .text.bno055_read_euler_hrp:0000000000000000 $t
     /tmp/ccOloYeZ.s:3055   .text.bno055_read_euler_hrp:0000000000000000 bno055_read_euler_hrp
     /tmp/ccOloYeZ.s:3182   .text.bno055_read_euler_hrp:000000000000007c $d
     /tmp/ccOloYeZ.s:3188   .text.bno055_read_quaternion_w:0000000000000000 $t
     /tmp/ccOloYeZ.s:3194   .text.bno055_read_quaternion_w:0000000000000000 bno055_read_quaternion_w
     /tmp/ccOloYeZ.s:3299   .text.bno055_read_quaternion_w:0000000000000058 $d
     /tmp/ccOloYeZ.s:3304   .text.bno055_read_quaternion_x:0000000000000000 $t
     /tmp/ccOloYeZ.s:3310   .text.bno055_read_quaternion_x:0000000000000000 bno055_read_quaternion_x
     /tmp/ccOloYeZ.s:3415   .text.bno055_read_quaternion_x:0000000000000058 $d
     /tmp/ccOloYeZ.s:3420   .text.bno055_read_quaternion_y:0000000000000000 $t
     /tmp/ccOloYeZ.s:3426   .text.bno055_read_quaternion_y:0000000000000000 bno055_read_quaternion_y
     /tmp/ccOloYeZ.s:3531   .text.bno055_read_quaternion_y:0000000000000058 $d
     /tmp/ccOloYeZ.s:3536   .text.bno055_read_quaternion_z:0000000000000000 $t
     /tmp/ccOloYeZ.s:3542   .text.bno055_read_quaternion_z:0000000000000000 bno055_read_quaternion_z
     /tmp/ccOloYeZ.s:3647   .text.bno055_read_quaternion_z:0000000000000058 $d
     /tmp/ccOloYeZ.s:3652   .text.bno055_read_quaternion_wxyz:0000000000000000 $t
     /tmp/ccOloYeZ.s:3658   .text.bno055_read_quaternion_wxyz:0000000000000000 bno055_read_quaternion_wxyz
     /tmp/ccOloYeZ.s:3797   .text.bno055_read_quaternion_wxyz:000000000000008c $d
     /tmp/ccOloYeZ.s:3803   .text.bno055_read_linear_accel_x:0000000000000000 $t
     /tmp/ccOloYeZ.s:3809   .text.bno055_read_linear_accel_x:0000000000000000 bno055_read_linear_accel_x
     /tmp/ccOloYeZ.s:3914   .text.bno055_read_linear_accel_x:0000000000000058 $d
     /tmp/ccOloYeZ.s:3919   .text.bno055_read_linear_accel_y:0000000000000000 $t
     /tmp/ccOloYeZ.s:3925   .text.bno055_read_linear_accel_y:0000000000000000 bno055_read_linear_accel_y
     /tmp/ccOloYeZ.s:4030   .text.bno055_read_linear_accel_y:0000000000000058 $d
     /tmp/ccOloYeZ.s:4035   .text.bno055_read_linear_accel_z:0000000000000000 $t
     /tmp/ccOloYeZ.s:4041   .text.bno055_read_linear_accel_z:0000000000000000 bno055_read_linear_accel_z
     /tmp/ccOloYeZ.s:4146   .text.bno055_read_linear_accel_z:0000000000000058 $d
     /tmp/ccOloYeZ.s:4151   .text.bno055_read_linear_accel_xyz:0000000000000000 $t
     /tmp/ccOloYeZ.s:4157   .text.bno055_read_linear_accel_xyz:0000000000000000 bno055_read_linear_accel_xyz
     /tmp/ccOloYeZ.s:4284   .text.bno055_read_linear_accel_xyz:000000000000007c $d
     /tmp/ccOloYeZ.s:4290   .text.bno055_read_gravity_x:0000000000000000 $t
     /tmp/ccOloYeZ.s:4296   .text.bno055_read_gravity_x:0000000000000000 bno055_read_gravity_x
     /tmp/ccOloYeZ.s:4401   .text.bno055_read_gravity_x:0000000000000058 $d
ARM GAS  /tmp/ccOloYeZ.s 			page 1115


     /tmp/ccOloYeZ.s:4406   .text.bno055_read_gravity_y:0000000000000000 $t
     /tmp/ccOloYeZ.s:4412   .text.bno055_read_gravity_y:0000000000000000 bno055_read_gravity_y
     /tmp/ccOloYeZ.s:4517   .text.bno055_read_gravity_y:0000000000000058 $d
     /tmp/ccOloYeZ.s:4522   .text.bno055_read_gravity_z:0000000000000000 $t
     /tmp/ccOloYeZ.s:4528   .text.bno055_read_gravity_z:0000000000000000 bno055_read_gravity_z
     /tmp/ccOloYeZ.s:4633   .text.bno055_read_gravity_z:0000000000000058 $d
     /tmp/ccOloYeZ.s:4638   .text.bno055_read_gravity_xyz:0000000000000000 $t
     /tmp/ccOloYeZ.s:4644   .text.bno055_read_gravity_xyz:0000000000000000 bno055_read_gravity_xyz
     /tmp/ccOloYeZ.s:4771   .text.bno055_read_gravity_xyz:000000000000007c $d
     /tmp/ccOloYeZ.s:4777   .text.bno055_read_temp_data:0000000000000000 $t
     /tmp/ccOloYeZ.s:4783   .text.bno055_read_temp_data:0000000000000000 bno055_read_temp_data
     /tmp/ccOloYeZ.s:4882   .text.bno055_read_temp_data:0000000000000054 $d
     /tmp/ccOloYeZ.s:4890   .text.bno055_convert_float_mag_x_uT:0000000000000000 $t
     /tmp/ccOloYeZ.s:4896   .text.bno055_convert_float_mag_x_uT:0000000000000000 bno055_convert_float_mag_x_uT
     /tmp/ccOloYeZ.s:4967   .text.bno055_convert_float_mag_x_uT:000000000000003c $d
     /tmp/ccOloYeZ.s:4972   .text.bno055_convert_float_mag_y_uT:0000000000000000 $t
     /tmp/ccOloYeZ.s:4978   .text.bno055_convert_float_mag_y_uT:0000000000000000 bno055_convert_float_mag_y_uT
     /tmp/ccOloYeZ.s:5049   .text.bno055_convert_float_mag_y_uT:000000000000003c $d
     /tmp/ccOloYeZ.s:5054   .text.bno055_convert_float_mag_z_uT:0000000000000000 $t
     /tmp/ccOloYeZ.s:5060   .text.bno055_convert_float_mag_z_uT:0000000000000000 bno055_convert_float_mag_z_uT
     /tmp/ccOloYeZ.s:5131   .text.bno055_convert_float_mag_z_uT:000000000000003c $d
     /tmp/ccOloYeZ.s:5136   .text.bno055_convert_float_mag_xyz_uT:0000000000000000 $t
     /tmp/ccOloYeZ.s:5142   .text.bno055_convert_float_mag_xyz_uT:0000000000000000 bno055_convert_float_mag_xyz_uT
     /tmp/ccOloYeZ.s:5240   .text.bno055_convert_float_mag_xyz_uT:000000000000006c $d
     /tmp/ccOloYeZ.s:5246   .text.bno055_convert_float_linear_accel_x_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:5252   .text.bno055_convert_float_linear_accel_x_msq:0000000000000000 bno055_convert_float_linear_accel_x_msq
     /tmp/ccOloYeZ.s:5323   .text.bno055_convert_float_linear_accel_x_msq:000000000000003c $d
     /tmp/ccOloYeZ.s:5328   .text.bno055_convert_float_linear_accel_y_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:5334   .text.bno055_convert_float_linear_accel_y_msq:0000000000000000 bno055_convert_float_linear_accel_y_msq
     /tmp/ccOloYeZ.s:5405   .text.bno055_convert_float_linear_accel_y_msq:000000000000003c $d
     /tmp/ccOloYeZ.s:5410   .text.bno055_convert_float_linear_accel_z_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:5416   .text.bno055_convert_float_linear_accel_z_msq:0000000000000000 bno055_convert_float_linear_accel_z_msq
     /tmp/ccOloYeZ.s:5487   .text.bno055_convert_float_linear_accel_z_msq:000000000000003c $d
     /tmp/ccOloYeZ.s:5492   .text.bno055_convert_float_linear_accel_xyz_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:5498   .text.bno055_convert_float_linear_accel_xyz_msq:0000000000000000 bno055_convert_float_linear_accel_xyz_msq
     /tmp/ccOloYeZ.s:5596   .text.bno055_convert_float_linear_accel_xyz_msq:000000000000006c $d
     /tmp/ccOloYeZ.s:5601   .text.bno055_convert_gravity_float_x_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:5607   .text.bno055_convert_gravity_float_x_msq:0000000000000000 bno055_convert_gravity_float_x_msq
     /tmp/ccOloYeZ.s:5678   .text.bno055_convert_gravity_float_x_msq:000000000000003c $d
     /tmp/ccOloYeZ.s:5683   .text.bno055_convert_gravity_float_y_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:5689   .text.bno055_convert_gravity_float_y_msq:0000000000000000 bno055_convert_gravity_float_y_msq
     /tmp/ccOloYeZ.s:5760   .text.bno055_convert_gravity_float_y_msq:000000000000003c $d
     /tmp/ccOloYeZ.s:5765   .text.bno055_convert_gravity_float_z_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:5771   .text.bno055_convert_gravity_float_z_msq:0000000000000000 bno055_convert_gravity_float_z_msq
     /tmp/ccOloYeZ.s:5842   .text.bno055_convert_gravity_float_z_msq:000000000000003c $d
     /tmp/ccOloYeZ.s:5847   .text.bno055_convert_float_gravity_xyz_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:5853   .text.bno055_convert_float_gravity_xyz_msq:0000000000000000 bno055_convert_float_gravity_xyz_msq
     /tmp/ccOloYeZ.s:5951   .text.bno055_convert_float_gravity_xyz_msq:000000000000006c $d
     /tmp/ccOloYeZ.s:5956   .text.bno055_convert_double_mag_x_uT:0000000000000000 $t
     /tmp/ccOloYeZ.s:5962   .text.bno055_convert_double_mag_x_uT:0000000000000000 bno055_convert_double_mag_x_uT
     /tmp/ccOloYeZ.s:6031   .text.bno055_convert_double_mag_x_uT:0000000000000038 $d
     /tmp/ccOloYeZ.s:6036   .text.bno055_convert_double_mag_y_uT:0000000000000000 $t
     /tmp/ccOloYeZ.s:6042   .text.bno055_convert_double_mag_y_uT:0000000000000000 bno055_convert_double_mag_y_uT
     /tmp/ccOloYeZ.s:6111   .text.bno055_convert_double_mag_y_uT:0000000000000038 $d
     /tmp/ccOloYeZ.s:6116   .text.bno055_convert_double_mag_z_uT:0000000000000000 $t
     /tmp/ccOloYeZ.s:6122   .text.bno055_convert_double_mag_z_uT:0000000000000000 bno055_convert_double_mag_z_uT
     /tmp/ccOloYeZ.s:6191   .text.bno055_convert_double_mag_z_uT:0000000000000038 $d
ARM GAS  /tmp/ccOloYeZ.s 			page 1116


     /tmp/ccOloYeZ.s:6196   .text.bno055_convert_double_mag_xyz_uT:0000000000000000 $t
     /tmp/ccOloYeZ.s:6202   .text.bno055_convert_double_mag_xyz_uT:0000000000000000 bno055_convert_double_mag_xyz_uT
     /tmp/ccOloYeZ.s:6291   .text.bno055_convert_double_mag_xyz_uT:0000000000000068 $d
     /tmp/ccOloYeZ.s:6296   .text.bno055_convert_double_linear_accel_x_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:6302   .text.bno055_convert_double_linear_accel_x_msq:0000000000000000 bno055_convert_double_linear_accel_x_msq
     /tmp/ccOloYeZ.s:6371   .text.bno055_convert_double_linear_accel_x_msq:0000000000000038 $d
     /tmp/ccOloYeZ.s:6376   .text.bno055_convert_double_linear_accel_y_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:6382   .text.bno055_convert_double_linear_accel_y_msq:0000000000000000 bno055_convert_double_linear_accel_y_msq
     /tmp/ccOloYeZ.s:6451   .text.bno055_convert_double_linear_accel_y_msq:0000000000000038 $d
     /tmp/ccOloYeZ.s:6456   .text.bno055_convert_double_linear_accel_z_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:6462   .text.bno055_convert_double_linear_accel_z_msq:0000000000000000 bno055_convert_double_linear_accel_z_msq
     /tmp/ccOloYeZ.s:6531   .text.bno055_convert_double_linear_accel_z_msq:0000000000000038 $d
     /tmp/ccOloYeZ.s:6536   .text.bno055_convert_double_linear_accel_xyz_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:6542   .text.bno055_convert_double_linear_accel_xyz_msq:0000000000000000 bno055_convert_double_linear_accel_xyz_msq
     /tmp/ccOloYeZ.s:6631   .text.bno055_convert_double_linear_accel_xyz_msq:0000000000000068 $d
     /tmp/ccOloYeZ.s:6636   .text.bno055_convert_gravity_double_x_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:6642   .text.bno055_convert_gravity_double_x_msq:0000000000000000 bno055_convert_gravity_double_x_msq
     /tmp/ccOloYeZ.s:6711   .text.bno055_convert_gravity_double_x_msq:0000000000000038 $d
     /tmp/ccOloYeZ.s:6716   .text.bno055_convert_gravity_double_y_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:6722   .text.bno055_convert_gravity_double_y_msq:0000000000000000 bno055_convert_gravity_double_y_msq
     /tmp/ccOloYeZ.s:6795   .text.bno055_convert_gravity_double_y_msq:0000000000000038 $d
     /tmp/ccOloYeZ.s:6800   .text.bno055_convert_gravity_double_z_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:6806   .text.bno055_convert_gravity_double_z_msq:0000000000000000 bno055_convert_gravity_double_z_msq
     /tmp/ccOloYeZ.s:6879   .text.bno055_convert_gravity_double_z_msq:0000000000000038 $d
     /tmp/ccOloYeZ.s:6884   .text.bno055_convert_double_gravity_xyz_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:6890   .text.bno055_convert_double_gravity_xyz_msq:0000000000000000 bno055_convert_double_gravity_xyz_msq
     /tmp/ccOloYeZ.s:6983   .text.bno055_convert_double_gravity_xyz_msq:0000000000000068 $d
     /tmp/ccOloYeZ.s:6988   .text.bno055_get_mag_calib_stat:0000000000000000 $t
     /tmp/ccOloYeZ.s:6994   .text.bno055_get_mag_calib_stat:0000000000000000 bno055_get_mag_calib_stat
     /tmp/ccOloYeZ.s:7094   .text.bno055_get_mag_calib_stat:0000000000000058 $d
     /tmp/ccOloYeZ.s:7099   .text.bno055_get_accel_calib_stat:0000000000000000 $t
     /tmp/ccOloYeZ.s:7105   .text.bno055_get_accel_calib_stat:0000000000000000 bno055_get_accel_calib_stat
     /tmp/ccOloYeZ.s:7205   .text.bno055_get_accel_calib_stat:0000000000000058 $d
     /tmp/ccOloYeZ.s:7210   .text.bno055_get_gyro_calib_stat:0000000000000000 $t
     /tmp/ccOloYeZ.s:7216   .text.bno055_get_gyro_calib_stat:0000000000000000 bno055_get_gyro_calib_stat
     /tmp/ccOloYeZ.s:7316   .text.bno055_get_gyro_calib_stat:0000000000000058 $d
     /tmp/ccOloYeZ.s:7321   .text.bno055_get_sys_calib_stat:0000000000000000 $t
     /tmp/ccOloYeZ.s:7327   .text.bno055_get_sys_calib_stat:0000000000000000 bno055_get_sys_calib_stat
     /tmp/ccOloYeZ.s:7427   .text.bno055_get_sys_calib_stat:0000000000000054 $d
     /tmp/ccOloYeZ.s:7432   .text.bno055_get_selftest_accel:0000000000000000 $t
     /tmp/ccOloYeZ.s:7438   .text.bno055_get_selftest_accel:0000000000000000 bno055_get_selftest_accel
     /tmp/ccOloYeZ.s:7538   .text.bno055_get_selftest_accel:0000000000000058 $d
     /tmp/ccOloYeZ.s:7543   .text.bno055_get_selftest_mag:0000000000000000 $t
     /tmp/ccOloYeZ.s:7549   .text.bno055_get_selftest_mag:0000000000000000 bno055_get_selftest_mag
     /tmp/ccOloYeZ.s:7649   .text.bno055_get_selftest_mag:0000000000000058 $d
     /tmp/ccOloYeZ.s:7654   .text.bno055_get_selftest_gyro:0000000000000000 $t
     /tmp/ccOloYeZ.s:7660   .text.bno055_get_selftest_gyro:0000000000000000 bno055_get_selftest_gyro
     /tmp/ccOloYeZ.s:7760   .text.bno055_get_selftest_gyro:0000000000000058 $d
     /tmp/ccOloYeZ.s:7765   .text.bno055_get_selftest_mcu:0000000000000000 $t
     /tmp/ccOloYeZ.s:7771   .text.bno055_get_selftest_mcu:0000000000000000 bno055_get_selftest_mcu
     /tmp/ccOloYeZ.s:7871   .text.bno055_get_selftest_mcu:0000000000000058 $d
     /tmp/ccOloYeZ.s:7876   .text.bno055_get_intr_stat_gyro_any_motion:0000000000000000 $t
     /tmp/ccOloYeZ.s:7882   .text.bno055_get_intr_stat_gyro_any_motion:0000000000000000 bno055_get_intr_stat_gyro_any_motion
     /tmp/ccOloYeZ.s:7982   .text.bno055_get_intr_stat_gyro_any_motion:0000000000000058 $d
     /tmp/ccOloYeZ.s:7987   .text.bno055_get_intr_stat_gyro_highrate:0000000000000000 $t
     /tmp/ccOloYeZ.s:7993   .text.bno055_get_intr_stat_gyro_highrate:0000000000000000 bno055_get_intr_stat_gyro_highrate
     /tmp/ccOloYeZ.s:8093   .text.bno055_get_intr_stat_gyro_highrate:0000000000000058 $d
ARM GAS  /tmp/ccOloYeZ.s 			page 1117


     /tmp/ccOloYeZ.s:8098   .text.bno055_get_intr_stat_accel_high_g:0000000000000000 $t
     /tmp/ccOloYeZ.s:8104   .text.bno055_get_intr_stat_accel_high_g:0000000000000000 bno055_get_intr_stat_accel_high_g
     /tmp/ccOloYeZ.s:8204   .text.bno055_get_intr_stat_accel_high_g:0000000000000058 $d
     /tmp/ccOloYeZ.s:8209   .text.bno055_get_intr_stat_accel_any_motion:0000000000000000 $t
     /tmp/ccOloYeZ.s:8215   .text.bno055_get_intr_stat_accel_any_motion:0000000000000000 bno055_get_intr_stat_accel_any_motion
     /tmp/ccOloYeZ.s:8315   .text.bno055_get_intr_stat_accel_any_motion:0000000000000058 $d
     /tmp/ccOloYeZ.s:8320   .text.bno055_get_intr_stat_accel_no_motion:0000000000000000 $t
     /tmp/ccOloYeZ.s:8326   .text.bno055_get_intr_stat_accel_no_motion:0000000000000000 bno055_get_intr_stat_accel_no_motion
     /tmp/ccOloYeZ.s:8426   .text.bno055_get_intr_stat_accel_no_motion:0000000000000054 $d
     /tmp/ccOloYeZ.s:8431   .text.bno055_get_stat_main_clk:0000000000000000 $t
     /tmp/ccOloYeZ.s:8437   .text.bno055_get_stat_main_clk:0000000000000000 bno055_get_stat_main_clk
     /tmp/ccOloYeZ.s:8537   .text.bno055_get_stat_main_clk:0000000000000058 $d
     /tmp/ccOloYeZ.s:8542   .text.bno055_get_sys_stat_code:0000000000000000 $t
     /tmp/ccOloYeZ.s:8548   .text.bno055_get_sys_stat_code:0000000000000000 bno055_get_sys_stat_code
     /tmp/ccOloYeZ.s:8647   .text.bno055_get_sys_stat_code:0000000000000054 $d
     /tmp/ccOloYeZ.s:8652   .text.bno055_get_sys_error_code:0000000000000000 $t
     /tmp/ccOloYeZ.s:8658   .text.bno055_get_sys_error_code:0000000000000000 bno055_get_sys_error_code
     /tmp/ccOloYeZ.s:8757   .text.bno055_get_sys_error_code:0000000000000054 $d
     /tmp/ccOloYeZ.s:8762   .text.bno055_get_accel_unit:0000000000000000 $t
     /tmp/ccOloYeZ.s:8768   .text.bno055_get_accel_unit:0000000000000000 bno055_get_accel_unit
     /tmp/ccOloYeZ.s:8868   .text.bno055_get_accel_unit:0000000000000058 $d
     /tmp/ccOloYeZ.s:8873   .text.bno055_get_gyro_unit:0000000000000000 $t
     /tmp/ccOloYeZ.s:8879   .text.bno055_get_gyro_unit:0000000000000000 bno055_get_gyro_unit
     /tmp/ccOloYeZ.s:8979   .text.bno055_get_gyro_unit:0000000000000058 $d
     /tmp/ccOloYeZ.s:8984   .text.bno055_get_euler_unit:0000000000000000 $t
     /tmp/ccOloYeZ.s:8990   .text.bno055_get_euler_unit:0000000000000000 bno055_get_euler_unit
     /tmp/ccOloYeZ.s:9090   .text.bno055_get_euler_unit:0000000000000058 $d
     /tmp/ccOloYeZ.s:9095   .text.bno055_get_tilt_unit:0000000000000000 $t
     /tmp/ccOloYeZ.s:9101   .text.bno055_get_tilt_unit:0000000000000000 bno055_get_tilt_unit
     /tmp/ccOloYeZ.s:9201   .text.bno055_get_tilt_unit:0000000000000058 $d
     /tmp/ccOloYeZ.s:9206   .text.bno055_get_temp_unit:0000000000000000 $t
     /tmp/ccOloYeZ.s:9212   .text.bno055_get_temp_unit:0000000000000000 bno055_get_temp_unit
     /tmp/ccOloYeZ.s:9312   .text.bno055_get_temp_unit:0000000000000058 $d
     /tmp/ccOloYeZ.s:9317   .text.bno055_get_data_output_format:0000000000000000 $t
     /tmp/ccOloYeZ.s:9323   .text.bno055_get_data_output_format:0000000000000000 bno055_get_data_output_format
     /tmp/ccOloYeZ.s:9423   .text.bno055_get_data_output_format:0000000000000054 $d
     /tmp/ccOloYeZ.s:9428   .text.bno055_get_operation_mode:0000000000000000 $t
     /tmp/ccOloYeZ.s:9434   .text.bno055_get_operation_mode:0000000000000000 bno055_get_operation_mode
     /tmp/ccOloYeZ.s:9534   .text.bno055_get_operation_mode:0000000000000058 $d
     /tmp/ccOloYeZ.s:9539   .text.bno055_set_operation_mode:0000000000000000 $t
     /tmp/ccOloYeZ.s:9545   .text.bno055_set_operation_mode:0000000000000000 bno055_set_operation_mode
     /tmp/ccOloYeZ.s:9779   .text.bno055_set_operation_mode:0000000000000118 $d
     /tmp/ccOloYeZ.s:9784   .text.bno055_set_accel_unit:0000000000000000 $t
     /tmp/ccOloYeZ.s:9790   .text.bno055_set_accel_unit:0000000000000000 bno055_set_accel_unit
     /tmp/ccOloYeZ.s:9950   .text.bno055_set_accel_unit:00000000000000a4 $d
     /tmp/ccOloYeZ.s:9955   .text.bno055_convert_float_accel_x_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:9961   .text.bno055_convert_float_accel_x_msq:0000000000000000 bno055_convert_float_accel_x_msq
     /tmp/ccOloYeZ.s:10086  .text.bno055_convert_float_accel_x_msq:0000000000000074 $d
     /tmp/ccOloYeZ.s:10092  .text.bno055_convert_float_accel_x_mg:0000000000000000 $t
     /tmp/ccOloYeZ.s:10098  .text.bno055_convert_float_accel_x_mg:0000000000000000 bno055_convert_float_accel_x_mg
     /tmp/ccOloYeZ.s:10212  .text.bno055_convert_float_accel_y_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:10218  .text.bno055_convert_float_accel_y_msq:0000000000000000 bno055_convert_float_accel_y_msq
     /tmp/ccOloYeZ.s:10343  .text.bno055_convert_float_accel_y_msq:0000000000000074 $d
     /tmp/ccOloYeZ.s:10349  .text.bno055_convert_float_accel_y_mg:0000000000000000 $t
     /tmp/ccOloYeZ.s:10355  .text.bno055_convert_float_accel_y_mg:0000000000000000 bno055_convert_float_accel_y_mg
     /tmp/ccOloYeZ.s:10469  .text.bno055_convert_float_accel_z_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:10475  .text.bno055_convert_float_accel_z_msq:0000000000000000 bno055_convert_float_accel_z_msq
ARM GAS  /tmp/ccOloYeZ.s 			page 1118


     /tmp/ccOloYeZ.s:10600  .text.bno055_convert_float_accel_z_msq:0000000000000074 $d
     /tmp/ccOloYeZ.s:10606  .text.bno055_convert_float_accel_z_mg:0000000000000000 $t
     /tmp/ccOloYeZ.s:10612  .text.bno055_convert_float_accel_z_mg:0000000000000000 bno055_convert_float_accel_z_mg
     /tmp/ccOloYeZ.s:10726  .text.bno055_convert_float_accel_xyz_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:10732  .text.bno055_convert_float_accel_xyz_msq:0000000000000000 bno055_convert_float_accel_xyz_msq
     /tmp/ccOloYeZ.s:10875  .text.bno055_convert_float_accel_xyz_msq:000000000000009c $d
     /tmp/ccOloYeZ.s:10880  .text.bno055_convert_float_accel_xyz_mg:0000000000000000 $t
     /tmp/ccOloYeZ.s:10886  .text.bno055_convert_float_accel_xyz_mg:0000000000000000 bno055_convert_float_accel_xyz_mg
     /tmp/ccOloYeZ.s:11019  .text.bno055_convert_double_accel_x_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:11025  .text.bno055_convert_double_accel_x_msq:0000000000000000 bno055_convert_double_accel_x_msq
     /tmp/ccOloYeZ.s:11139  .text.bno055_convert_double_accel_x_msq:0000000000000068 $d
     /tmp/ccOloYeZ.s:11144  .text.bno055_convert_double_accel_x_mg:0000000000000000 $t
     /tmp/ccOloYeZ.s:11150  .text.bno055_convert_double_accel_x_mg:0000000000000000 bno055_convert_double_accel_x_mg
     /tmp/ccOloYeZ.s:11261  .text.bno055_convert_double_accel_y_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:11267  .text.bno055_convert_double_accel_y_msq:0000000000000000 bno055_convert_double_accel_y_msq
     /tmp/ccOloYeZ.s:11381  .text.bno055_convert_double_accel_y_msq:0000000000000068 $d
     /tmp/ccOloYeZ.s:11386  .text.bno055_convert_double_accel_y_mg:0000000000000000 $t
     /tmp/ccOloYeZ.s:11392  .text.bno055_convert_double_accel_y_mg:0000000000000000 bno055_convert_double_accel_y_mg
     /tmp/ccOloYeZ.s:11503  .text.bno055_convert_double_accel_z_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:11509  .text.bno055_convert_double_accel_z_msq:0000000000000000 bno055_convert_double_accel_z_msq
     /tmp/ccOloYeZ.s:11623  .text.bno055_convert_double_accel_z_msq:0000000000000068 $d
     /tmp/ccOloYeZ.s:11628  .text.bno055_convert_double_accel_z_mg:0000000000000000 $t
     /tmp/ccOloYeZ.s:11634  .text.bno055_convert_double_accel_z_mg:0000000000000000 bno055_convert_double_accel_z_mg
     /tmp/ccOloYeZ.s:11745  .text.bno055_convert_double_accel_xyz_msq:0000000000000000 $t
     /tmp/ccOloYeZ.s:11751  .text.bno055_convert_double_accel_xyz_msq:0000000000000000 bno055_convert_double_accel_xyz_msq
     /tmp/ccOloYeZ.s:11885  .text.bno055_convert_double_accel_xyz_msq:0000000000000094 $d
     /tmp/ccOloYeZ.s:11890  .text.bno055_convert_double_accel_xyz_mg:0000000000000000 $t
     /tmp/ccOloYeZ.s:11896  .text.bno055_convert_double_accel_xyz_mg:0000000000000000 bno055_convert_double_accel_xyz_mg
     /tmp/ccOloYeZ.s:12020  .text.bno055_set_gyro_unit:0000000000000000 $t
     /tmp/ccOloYeZ.s:12026  .text.bno055_set_gyro_unit:0000000000000000 bno055_set_gyro_unit
     /tmp/ccOloYeZ.s:12187  .text.bno055_set_gyro_unit:00000000000000a4 $d
     /tmp/ccOloYeZ.s:12192  .text.bno055_convert_float_gyro_x_dps:0000000000000000 $t
     /tmp/ccOloYeZ.s:12198  .text.bno055_convert_float_gyro_x_dps:0000000000000000 bno055_convert_float_gyro_x_dps
     /tmp/ccOloYeZ.s:12314  .text.bno055_convert_float_gyro_x_dps:0000000000000068 $d
     /tmp/ccOloYeZ.s:12319  .text.bno055_convert_float_gyro_x_rps:0000000000000000 $t
     /tmp/ccOloYeZ.s:12325  .text.bno055_convert_float_gyro_x_rps:0000000000000000 bno055_convert_float_gyro_x_rps
     /tmp/ccOloYeZ.s:12442  .text.bno055_convert_float_gyro_x_rps:000000000000006c $d
     /tmp/ccOloYeZ.s:12447  .text.bno055_convert_float_gyro_y_dps:0000000000000000 $t
     /tmp/ccOloYeZ.s:12453  .text.bno055_convert_float_gyro_y_dps:0000000000000000 bno055_convert_float_gyro_y_dps
     /tmp/ccOloYeZ.s:12569  .text.bno055_convert_float_gyro_y_dps:0000000000000068 $d
     /tmp/ccOloYeZ.s:12574  .text.bno055_convert_float_gyro_y_rps:0000000000000000 $t
     /tmp/ccOloYeZ.s:12580  .text.bno055_convert_float_gyro_y_rps:0000000000000000 bno055_convert_float_gyro_y_rps
     /tmp/ccOloYeZ.s:12697  .text.bno055_convert_float_gyro_y_rps:000000000000006c $d
     /tmp/ccOloYeZ.s:12702  .text.bno055_convert_float_gyro_z_dps:0000000000000000 $t
     /tmp/ccOloYeZ.s:12708  .text.bno055_convert_float_gyro_z_dps:0000000000000000 bno055_convert_float_gyro_z_dps
     /tmp/ccOloYeZ.s:12824  .text.bno055_convert_float_gyro_z_dps:0000000000000068 $d
     /tmp/ccOloYeZ.s:12829  .text.bno055_convert_float_gyro_z_rps:0000000000000000 $t
     /tmp/ccOloYeZ.s:12835  .text.bno055_convert_float_gyro_z_rps:0000000000000000 bno055_convert_float_gyro_z_rps
     /tmp/ccOloYeZ.s:12952  .text.bno055_convert_float_gyro_z_rps:000000000000006c $d
     /tmp/ccOloYeZ.s:12957  .text.bno055_convert_float_gyro_xyz_dps:0000000000000000 $t
     /tmp/ccOloYeZ.s:12963  .text.bno055_convert_float_gyro_xyz_dps:0000000000000000 bno055_convert_float_gyro_xyz_dps
     /tmp/ccOloYeZ.s:13106  .text.bno055_convert_float_gyro_xyz_dps:000000000000009c $d
     /tmp/ccOloYeZ.s:13111  .text.bno055_convert_float_gyro_xyz_rps:0000000000000000 $t
     /tmp/ccOloYeZ.s:13117  .text.bno055_convert_float_gyro_xyz_rps:0000000000000000 bno055_convert_float_gyro_xyz_rps
     /tmp/ccOloYeZ.s:13261  .text.bno055_convert_float_gyro_xyz_rps:000000000000009c $d
     /tmp/ccOloYeZ.s:13266  .text.bno055_convert_double_gyro_x_dps:0000000000000000 $t
     /tmp/ccOloYeZ.s:13272  .text.bno055_convert_double_gyro_x_dps:0000000000000000 bno055_convert_double_gyro_x_dps
ARM GAS  /tmp/ccOloYeZ.s 			page 1119


     /tmp/ccOloYeZ.s:13386  .text.bno055_convert_double_gyro_x_dps:0000000000000068 $d
     /tmp/ccOloYeZ.s:13391  .text.bno055_convert_double_gyro_x_rps:0000000000000000 $t
     /tmp/ccOloYeZ.s:13397  .text.bno055_convert_double_gyro_x_rps:0000000000000000 bno055_convert_double_gyro_x_rps
     /tmp/ccOloYeZ.s:13512  .text.bno055_convert_double_gyro_x_rps:0000000000000068 $d
     /tmp/ccOloYeZ.s:13517  .text.bno055_convert_double_gyro_y_dps:0000000000000000 $t
     /tmp/ccOloYeZ.s:13523  .text.bno055_convert_double_gyro_y_dps:0000000000000000 bno055_convert_double_gyro_y_dps
     /tmp/ccOloYeZ.s:13637  .text.bno055_convert_double_gyro_y_dps:0000000000000068 $d
     /tmp/ccOloYeZ.s:13642  .text.bno055_convert_double_gyro_y_rps:0000000000000000 $t
     /tmp/ccOloYeZ.s:13648  .text.bno055_convert_double_gyro_y_rps:0000000000000000 bno055_convert_double_gyro_y_rps
     /tmp/ccOloYeZ.s:13763  .text.bno055_convert_double_gyro_y_rps:0000000000000068 $d
     /tmp/ccOloYeZ.s:13768  .text.bno055_convert_double_gyro_z_dps:0000000000000000 $t
     /tmp/ccOloYeZ.s:13774  .text.bno055_convert_double_gyro_z_dps:0000000000000000 bno055_convert_double_gyro_z_dps
     /tmp/ccOloYeZ.s:13888  .text.bno055_convert_double_gyro_z_dps:0000000000000068 $d
     /tmp/ccOloYeZ.s:13893  .text.bno055_convert_double_gyro_z_rps:0000000000000000 $t
     /tmp/ccOloYeZ.s:13899  .text.bno055_convert_double_gyro_z_rps:0000000000000000 bno055_convert_double_gyro_z_rps
     /tmp/ccOloYeZ.s:14014  .text.bno055_convert_double_gyro_z_rps:0000000000000068 $d
     /tmp/ccOloYeZ.s:14019  .text.bno055_convert_double_gyro_xyz_dps:0000000000000000 $t
     /tmp/ccOloYeZ.s:14025  .text.bno055_convert_double_gyro_xyz_dps:0000000000000000 bno055_convert_double_gyro_xyz_dps
     /tmp/ccOloYeZ.s:14159  .text.bno055_convert_double_gyro_xyz_dps:0000000000000094 $d
     /tmp/ccOloYeZ.s:14164  .text.bno055_convert_double_gyro_xyz_rps:0000000000000000 $t
     /tmp/ccOloYeZ.s:14170  .text.bno055_convert_double_gyro_xyz_rps:0000000000000000 bno055_convert_double_gyro_xyz_rps
     /tmp/ccOloYeZ.s:14305  .text.bno055_convert_double_gyro_xyz_rps:0000000000000098 $d
     /tmp/ccOloYeZ.s:14310  .text.bno055_set_euler_unit:0000000000000000 $t
     /tmp/ccOloYeZ.s:14316  .text.bno055_set_euler_unit:0000000000000000 bno055_set_euler_unit
     /tmp/ccOloYeZ.s:14477  .text.bno055_set_euler_unit:00000000000000a4 $d
     /tmp/ccOloYeZ.s:14482  .text.bno055_convert_float_euler_h_deg:0000000000000000 $t
     /tmp/ccOloYeZ.s:14488  .text.bno055_convert_float_euler_h_deg:0000000000000000 bno055_convert_float_euler_h_deg
     /tmp/ccOloYeZ.s:14604  .text.bno055_convert_float_euler_h_deg:0000000000000068 $d
     /tmp/ccOloYeZ.s:14609  .text.bno055_convert_float_euler_h_rad:0000000000000000 $t
     /tmp/ccOloYeZ.s:14615  .text.bno055_convert_float_euler_h_rad:0000000000000000 bno055_convert_float_euler_h_rad
     /tmp/ccOloYeZ.s:14732  .text.bno055_convert_float_euler_h_rad:000000000000006c $d
     /tmp/ccOloYeZ.s:14737  .text.bno055_convert_float_euler_r_deg:0000000000000000 $t
     /tmp/ccOloYeZ.s:14743  .text.bno055_convert_float_euler_r_deg:0000000000000000 bno055_convert_float_euler_r_deg
     /tmp/ccOloYeZ.s:14859  .text.bno055_convert_float_euler_r_deg:0000000000000068 $d
     /tmp/ccOloYeZ.s:14864  .text.bno055_convert_float_euler_r_rad:0000000000000000 $t
     /tmp/ccOloYeZ.s:14870  .text.bno055_convert_float_euler_r_rad:0000000000000000 bno055_convert_float_euler_r_rad
     /tmp/ccOloYeZ.s:14987  .text.bno055_convert_float_euler_r_rad:000000000000006c $d
     /tmp/ccOloYeZ.s:14992  .text.bno055_convert_float_euler_p_deg:0000000000000000 $t
     /tmp/ccOloYeZ.s:14998  .text.bno055_convert_float_euler_p_deg:0000000000000000 bno055_convert_float_euler_p_deg
     /tmp/ccOloYeZ.s:15114  .text.bno055_convert_float_euler_p_deg:0000000000000068 $d
     /tmp/ccOloYeZ.s:15119  .text.bno055_convert_float_euler_p_rad:0000000000000000 $t
     /tmp/ccOloYeZ.s:15125  .text.bno055_convert_float_euler_p_rad:0000000000000000 bno055_convert_float_euler_p_rad
     /tmp/ccOloYeZ.s:15242  .text.bno055_convert_float_euler_p_rad:000000000000006c $d
     /tmp/ccOloYeZ.s:15247  .text.bno055_convert_float_euler_hpr_deg:0000000000000000 $t
     /tmp/ccOloYeZ.s:15253  .text.bno055_convert_float_euler_hpr_deg:0000000000000000 bno055_convert_float_euler_hpr_deg
     /tmp/ccOloYeZ.s:15396  .text.bno055_convert_float_euler_hpr_deg:000000000000009c $d
     /tmp/ccOloYeZ.s:15401  .text.bno055_convert_float_euler_hpr_rad:0000000000000000 $t
     /tmp/ccOloYeZ.s:15407  .text.bno055_convert_float_euler_hpr_rad:0000000000000000 bno055_convert_float_euler_hpr_rad
     /tmp/ccOloYeZ.s:15551  .text.bno055_convert_float_euler_hpr_rad:000000000000009c $d
     /tmp/ccOloYeZ.s:15556  .text.bno055_convert_double_euler_h_deg:0000000000000000 $t
     /tmp/ccOloYeZ.s:15562  .text.bno055_convert_double_euler_h_deg:0000000000000000 bno055_convert_double_euler_h_deg
     /tmp/ccOloYeZ.s:15676  .text.bno055_convert_double_euler_h_deg:0000000000000068 $d
     /tmp/ccOloYeZ.s:15681  .text.bno055_convert_double_euler_h_rad:0000000000000000 $t
     /tmp/ccOloYeZ.s:15687  .text.bno055_convert_double_euler_h_rad:0000000000000000 bno055_convert_double_euler_h_rad
     /tmp/ccOloYeZ.s:15802  .text.bno055_convert_double_euler_h_rad:0000000000000068 $d
     /tmp/ccOloYeZ.s:15807  .text.bno055_convert_double_euler_r_deg:0000000000000000 $t
     /tmp/ccOloYeZ.s:15813  .text.bno055_convert_double_euler_r_deg:0000000000000000 bno055_convert_double_euler_r_deg
ARM GAS  /tmp/ccOloYeZ.s 			page 1120


     /tmp/ccOloYeZ.s:15927  .text.bno055_convert_double_euler_r_deg:0000000000000068 $d
     /tmp/ccOloYeZ.s:15932  .text.bno055_convert_double_euler_r_rad:0000000000000000 $t
     /tmp/ccOloYeZ.s:15938  .text.bno055_convert_double_euler_r_rad:0000000000000000 bno055_convert_double_euler_r_rad
     /tmp/ccOloYeZ.s:16053  .text.bno055_convert_double_euler_r_rad:0000000000000068 $d
     /tmp/ccOloYeZ.s:16058  .text.bno055_convert_double_euler_p_deg:0000000000000000 $t
     /tmp/ccOloYeZ.s:16064  .text.bno055_convert_double_euler_p_deg:0000000000000000 bno055_convert_double_euler_p_deg
     /tmp/ccOloYeZ.s:16178  .text.bno055_convert_double_euler_p_deg:0000000000000068 $d
     /tmp/ccOloYeZ.s:16183  .text.bno055_convert_double_euler_p_rad:0000000000000000 $t
     /tmp/ccOloYeZ.s:16189  .text.bno055_convert_double_euler_p_rad:0000000000000000 bno055_convert_double_euler_p_rad
     /tmp/ccOloYeZ.s:16304  .text.bno055_convert_double_euler_p_rad:0000000000000068 $d
     /tmp/ccOloYeZ.s:16309  .text.bno055_convert_double_euler_hpr_deg:0000000000000000 $t
     /tmp/ccOloYeZ.s:16315  .text.bno055_convert_double_euler_hpr_deg:0000000000000000 bno055_convert_double_euler_hpr_deg
     /tmp/ccOloYeZ.s:16449  .text.bno055_convert_double_euler_hpr_deg:0000000000000094 $d
     /tmp/ccOloYeZ.s:16454  .text.bno055_convert_double_euler_hpr_rad:0000000000000000 $t
     /tmp/ccOloYeZ.s:16460  .text.bno055_convert_double_euler_hpr_rad:0000000000000000 bno055_convert_double_euler_hpr_rad
     /tmp/ccOloYeZ.s:16583  .text.bno055_convert_double_euler_hpr_rad:000000000000008c $d
     /tmp/ccOloYeZ.s:16588  .text.bno055_set_tilt_unit:0000000000000000 $t
     /tmp/ccOloYeZ.s:16594  .text.bno055_set_tilt_unit:0000000000000000 bno055_set_tilt_unit
     /tmp/ccOloYeZ.s:16755  .text.bno055_set_tilt_unit:00000000000000a4 $d
     /tmp/ccOloYeZ.s:16760  .text.bno055_set_temp_unit:0000000000000000 $t
     /tmp/ccOloYeZ.s:16766  .text.bno055_set_temp_unit:0000000000000000 bno055_set_temp_unit
     /tmp/ccOloYeZ.s:16927  .text.bno055_set_temp_unit:00000000000000a4 $d
     /tmp/ccOloYeZ.s:16933  .text.bno055_convert_float_temp_fahrenheit:0000000000000000 $t
     /tmp/ccOloYeZ.s:16939  .text.bno055_convert_float_temp_fahrenheit:0000000000000000 bno055_convert_float_temp_fahrenheit
     /tmp/ccOloYeZ.s:17057  .text.bno055_convert_float_temp_celsius:0000000000000000 $t
     /tmp/ccOloYeZ.s:17063  .text.bno055_convert_float_temp_celsius:0000000000000000 bno055_convert_float_temp_celsius
     /tmp/ccOloYeZ.s:17176  .text.bno055_convert_double_temp_fahrenheit:0000000000000000 $t
     /tmp/ccOloYeZ.s:17182  .text.bno055_convert_double_temp_fahrenheit:0000000000000000 bno055_convert_double_temp_fahrenheit
     /tmp/ccOloYeZ.s:17301  .text.bno055_convert_double_temp_celsius:0000000000000000 $t
     /tmp/ccOloYeZ.s:17307  .text.bno055_convert_double_temp_celsius:0000000000000000 bno055_convert_double_temp_celsius
     /tmp/ccOloYeZ.s:17420  .text.bno055_set_data_output_format:0000000000000000 $t
     /tmp/ccOloYeZ.s:17426  .text.bno055_set_data_output_format:0000000000000000 bno055_set_data_output_format
     /tmp/ccOloYeZ.s:17585  .text.bno055_set_data_output_format:00000000000000a0 $d
     /tmp/ccOloYeZ.s:17590  .text.bno055_get_power_mode:0000000000000000 $t
     /tmp/ccOloYeZ.s:17596  .text.bno055_get_power_mode:0000000000000000 bno055_get_power_mode
     /tmp/ccOloYeZ.s:17696  .text.bno055_get_power_mode:0000000000000058 $d
     /tmp/ccOloYeZ.s:17701  .text.bno055_set_power_mode:0000000000000000 $t
     /tmp/ccOloYeZ.s:17707  .text.bno055_set_power_mode:0000000000000000 bno055_set_power_mode
     /tmp/ccOloYeZ.s:17867  .text.bno055_set_power_mode:00000000000000a4 $d
     /tmp/ccOloYeZ.s:17872  .text.bno055_get_intr_rst:0000000000000000 $t
     /tmp/ccOloYeZ.s:17878  .text.bno055_get_intr_rst:0000000000000000 bno055_get_intr_rst
     /tmp/ccOloYeZ.s:17978  .text.bno055_get_intr_rst:0000000000000058 $d
     /tmp/ccOloYeZ.s:17983  .text.bno055_set_intr_rst:0000000000000000 $t
     /tmp/ccOloYeZ.s:17989  .text.bno055_set_intr_rst:0000000000000000 bno055_set_intr_rst
     /tmp/ccOloYeZ.s:18114  .text.bno055_set_intr_rst:0000000000000080 $d
     /tmp/ccOloYeZ.s:18119  .text.bno055_get_clk_src:0000000000000000 $t
     /tmp/ccOloYeZ.s:18125  .text.bno055_get_clk_src:0000000000000000 bno055_get_clk_src
     /tmp/ccOloYeZ.s:18225  .text.bno055_get_clk_src:0000000000000054 $d
     /tmp/ccOloYeZ.s:18230  .text.bno055_set_clk_src:0000000000000000 $t
     /tmp/ccOloYeZ.s:18236  .text.bno055_set_clk_src:0000000000000000 bno055_set_clk_src
     /tmp/ccOloYeZ.s:18358  .text.bno055_set_clk_src:000000000000007c $d
     /tmp/ccOloYeZ.s:18363  .text.bno055_get_sys_rst:0000000000000000 $t
     /tmp/ccOloYeZ.s:18369  .text.bno055_get_sys_rst:0000000000000000 bno055_get_sys_rst
     /tmp/ccOloYeZ.s:18469  .text.bno055_get_sys_rst:0000000000000058 $d
     /tmp/ccOloYeZ.s:18474  .text.bno055_set_sys_rst:0000000000000000 $t
     /tmp/ccOloYeZ.s:18480  .text.bno055_set_sys_rst:0000000000000000 bno055_set_sys_rst
     /tmp/ccOloYeZ.s:18600  .text.bno055_set_sys_rst:0000000000000074 $d
ARM GAS  /tmp/ccOloYeZ.s 			page 1121


     /tmp/ccOloYeZ.s:18605  .text.bno055_get_selftest:0000000000000000 $t
     /tmp/ccOloYeZ.s:18611  .text.bno055_get_selftest:0000000000000000 bno055_get_selftest
     /tmp/ccOloYeZ.s:18711  .text.bno055_get_selftest:0000000000000058 $d
     /tmp/ccOloYeZ.s:18716  .text.bno055_set_selftest:0000000000000000 $t
     /tmp/ccOloYeZ.s:18722  .text.bno055_set_selftest:0000000000000000 bno055_set_selftest
     /tmp/ccOloYeZ.s:18882  .text.bno055_set_selftest:00000000000000a4 $d
     /tmp/ccOloYeZ.s:18887  .text.bno055_get_temp_source:0000000000000000 $t
     /tmp/ccOloYeZ.s:18893  .text.bno055_get_temp_source:0000000000000000 bno055_get_temp_source
     /tmp/ccOloYeZ.s:18993  .text.bno055_get_temp_source:0000000000000058 $d
     /tmp/ccOloYeZ.s:18998  .text.bno055_set_temp_source:0000000000000000 $t
     /tmp/ccOloYeZ.s:19004  .text.bno055_set_temp_source:0000000000000000 bno055_set_temp_source
     /tmp/ccOloYeZ.s:19164  .text.bno055_set_temp_source:00000000000000a4 $d
     /tmp/ccOloYeZ.s:19169  .text.bno055_get_axis_remap_value:0000000000000000 $t
     /tmp/ccOloYeZ.s:19175  .text.bno055_get_axis_remap_value:0000000000000000 bno055_get_axis_remap_value
     /tmp/ccOloYeZ.s:19275  .text.bno055_get_axis_remap_value:0000000000000058 $d
     /tmp/ccOloYeZ.s:19280  .text.bno055_set_axis_remap_value:0000000000000000 $t
     /tmp/ccOloYeZ.s:19286  .text.bno055_set_axis_remap_value:0000000000000000 bno055_set_axis_remap_value
     /tmp/ccOloYeZ.s:19504  .text.bno055_set_axis_remap_value:00000000000000fc $d
     /tmp/ccOloYeZ.s:19510  .text.bno055_get_remap_x_sign:0000000000000000 $t
     /tmp/ccOloYeZ.s:19516  .text.bno055_get_remap_x_sign:0000000000000000 bno055_get_remap_x_sign
     /tmp/ccOloYeZ.s:19616  .text.bno055_get_remap_x_sign:0000000000000058 $d
     /tmp/ccOloYeZ.s:19621  .text.bno055_set_remap_x_sign:0000000000000000 $t
     /tmp/ccOloYeZ.s:19627  .text.bno055_set_remap_x_sign:0000000000000000 bno055_set_remap_x_sign
     /tmp/ccOloYeZ.s:19788  .text.bno055_set_remap_x_sign:00000000000000a4 $d
     /tmp/ccOloYeZ.s:19793  .text.bno055_get_remap_y_sign:0000000000000000 $t
     /tmp/ccOloYeZ.s:19799  .text.bno055_get_remap_y_sign:0000000000000000 bno055_get_remap_y_sign
     /tmp/ccOloYeZ.s:19899  .text.bno055_get_remap_y_sign:0000000000000058 $d
     /tmp/ccOloYeZ.s:19904  .text.bno055_set_remap_y_sign:0000000000000000 $t
     /tmp/ccOloYeZ.s:19910  .text.bno055_set_remap_y_sign:0000000000000000 bno055_set_remap_y_sign
     /tmp/ccOloYeZ.s:20071  .text.bno055_set_remap_y_sign:00000000000000a4 $d
     /tmp/ccOloYeZ.s:20076  .text.bno055_get_remap_z_sign:0000000000000000 $t
     /tmp/ccOloYeZ.s:20082  .text.bno055_get_remap_z_sign:0000000000000000 bno055_get_remap_z_sign
     /tmp/ccOloYeZ.s:20182  .text.bno055_get_remap_z_sign:0000000000000058 $d
     /tmp/ccOloYeZ.s:20187  .text.bno055_set_remap_z_sign:0000000000000000 $t
     /tmp/ccOloYeZ.s:20193  .text.bno055_set_remap_z_sign:0000000000000000 bno055_set_remap_z_sign
     /tmp/ccOloYeZ.s:20353  .text.bno055_set_remap_z_sign:00000000000000a4 $d
     /tmp/ccOloYeZ.s:20358  .text.bno055_read_sic_matrix:0000000000000000 $t
     /tmp/ccOloYeZ.s:20364  .text.bno055_read_sic_matrix:0000000000000000 bno055_read_sic_matrix
     /tmp/ccOloYeZ.s:20573  .text.bno055_read_sic_matrix:00000000000000e4 $d
     /tmp/ccOloYeZ.s:20579  .text.bno055_write_sic_matrix:0000000000000000 $t
     /tmp/ccOloYeZ.s:20585  .text.bno055_write_sic_matrix:0000000000000000 bno055_write_sic_matrix
     /tmp/ccOloYeZ.s:21177  .text.bno055_write_sic_matrix:00000000000002ac $d
     /tmp/ccOloYeZ.s:21181  .text.bno055_write_sic_matrix:00000000000002b0 $t
     /tmp/ccOloYeZ.s:21628  .text.bno055_write_sic_matrix:00000000000004ac $d
     /tmp/ccOloYeZ.s:21633  .text.bno055_read_accel_offset:0000000000000000 $t
     /tmp/ccOloYeZ.s:21639  .text.bno055_read_accel_offset:0000000000000000 bno055_read_accel_offset
     /tmp/ccOloYeZ.s:21821  .text.bno055_read_accel_offset:00000000000000b8 $d
     /tmp/ccOloYeZ.s:21827  .text.bno055_write_accel_offset:0000000000000000 $t
     /tmp/ccOloYeZ.s:21833  .text.bno055_write_accel_offset:0000000000000000 bno055_write_accel_offset
     /tmp/ccOloYeZ.s:22356  .text.bno055_write_accel_offset:0000000000000240 $d
     /tmp/ccOloYeZ.s:22361  .text.bno055_read_mag_offset:0000000000000000 $t
     /tmp/ccOloYeZ.s:22367  .text.bno055_read_mag_offset:0000000000000000 bno055_read_mag_offset
     /tmp/ccOloYeZ.s:22549  .text.bno055_read_mag_offset:00000000000000b8 $d
     /tmp/ccOloYeZ.s:22555  .text.bno055_write_mag_offset:0000000000000000 $t
     /tmp/ccOloYeZ.s:22561  .text.bno055_write_mag_offset:0000000000000000 bno055_write_mag_offset
     /tmp/ccOloYeZ.s:23088  .text.bno055_write_mag_offset:000000000000024c $d
     /tmp/ccOloYeZ.s:23093  .text.bno055_read_gyro_offset:0000000000000000 $t
ARM GAS  /tmp/ccOloYeZ.s 			page 1122


     /tmp/ccOloYeZ.s:23099  .text.bno055_read_gyro_offset:0000000000000000 bno055_read_gyro_offset
     /tmp/ccOloYeZ.s:23236  .text.bno055_read_gyro_offset:0000000000000084 $d
     /tmp/ccOloYeZ.s:23242  .text.bno055_write_gyro_offset:0000000000000000 $t
     /tmp/ccOloYeZ.s:23248  .text.bno055_write_gyro_offset:0000000000000000 bno055_write_gyro_offset
     /tmp/ccOloYeZ.s:23673  .text.bno055_write_gyro_offset:00000000000001d4 $d
     /tmp/ccOloYeZ.s:23678  .text.bno055_get_accel_range:0000000000000000 $t
     /tmp/ccOloYeZ.s:23684  .text.bno055_get_accel_range:0000000000000000 bno055_get_accel_range
     /tmp/ccOloYeZ.s:23786  .text.bno055_get_accel_range:000000000000005c $d
     /tmp/ccOloYeZ.s:23791  .text.bno055_set_accel_range:0000000000000000 $t
     /tmp/ccOloYeZ.s:23797  .text.bno055_set_accel_range:0000000000000000 bno055_set_accel_range
     /tmp/ccOloYeZ.s:23986  .text.bno055_set_accel_range:00000000000000bc $d
     /tmp/ccOloYeZ.s:23991  .text.bno055_get_accel_bw:0000000000000000 $t
     /tmp/ccOloYeZ.s:23997  .text.bno055_get_accel_bw:0000000000000000 bno055_get_accel_bw
     /tmp/ccOloYeZ.s:24099  .text.bno055_get_accel_bw:000000000000005c $d
     /tmp/ccOloYeZ.s:24104  .text.bno055_set_accel_bw:0000000000000000 $t
     /tmp/ccOloYeZ.s:24110  .text.bno055_set_accel_bw:0000000000000000 bno055_set_accel_bw
     /tmp/ccOloYeZ.s:24301  .text.bno055_set_accel_bw:00000000000000c0 $d
     /tmp/ccOloYeZ.s:24306  .text.bno055_get_accel_power_mode:0000000000000000 $t
     /tmp/ccOloYeZ.s:24312  .text.bno055_get_accel_power_mode:0000000000000000 bno055_get_accel_power_mode
     /tmp/ccOloYeZ.s:24414  .text.bno055_get_accel_power_mode:0000000000000058 $d
     /tmp/ccOloYeZ.s:24419  .text.bno055_set_accel_power_mode:0000000000000000 $t
     /tmp/ccOloYeZ.s:24425  .text.bno055_set_accel_power_mode:0000000000000000 bno055_set_accel_power_mode
     /tmp/ccOloYeZ.s:24613  .text.bno055_set_accel_power_mode:00000000000000b8 $d
     /tmp/ccOloYeZ.s:24618  .text.bno055_get_mag_data_output_rate:0000000000000000 $t
     /tmp/ccOloYeZ.s:24624  .text.bno055_get_mag_data_output_rate:0000000000000000 bno055_get_mag_data_output_rate
     /tmp/ccOloYeZ.s:24726  .text.bno055_get_mag_data_output_rate:000000000000005c $d
     /tmp/ccOloYeZ.s:24731  .text.bno055_set_mag_data_output_rate:0000000000000000 $t
     /tmp/ccOloYeZ.s:24737  .text.bno055_set_mag_data_output_rate:0000000000000000 bno055_set_mag_data_output_rate
     /tmp/ccOloYeZ.s:24925  .text.bno055_set_mag_data_output_rate:00000000000000bc $d
     /tmp/ccOloYeZ.s:24930  .text.bno055_get_mag_operation_mode:0000000000000000 $t
     /tmp/ccOloYeZ.s:24936  .text.bno055_get_mag_operation_mode:0000000000000000 bno055_get_mag_operation_mode
     /tmp/ccOloYeZ.s:25038  .text.bno055_get_mag_operation_mode:000000000000005c $d
     /tmp/ccOloYeZ.s:25043  .text.bno055_set_mag_operation_mode:0000000000000000 $t
     /tmp/ccOloYeZ.s:25049  .text.bno055_set_mag_operation_mode:0000000000000000 bno055_set_mag_operation_mode
     /tmp/ccOloYeZ.s:25239  .text.bno055_set_mag_operation_mode:00000000000000c0 $d
     /tmp/ccOloYeZ.s:25244  .text.bno055_get_mag_power_mode:0000000000000000 $t
     /tmp/ccOloYeZ.s:25250  .text.bno055_get_mag_power_mode:0000000000000000 bno055_get_mag_power_mode
     /tmp/ccOloYeZ.s:25352  .text.bno055_get_mag_power_mode:000000000000005c $d
     /tmp/ccOloYeZ.s:25357  .text.bno055_set_mag_power_mode:0000000000000000 $t
     /tmp/ccOloYeZ.s:25363  .text.bno055_set_mag_power_mode:0000000000000000 bno055_set_mag_power_mode
     /tmp/ccOloYeZ.s:25553  .text.bno055_set_mag_power_mode:00000000000000c0 $d
     /tmp/ccOloYeZ.s:25558  .text.bno055_get_gyro_range:0000000000000000 $t
     /tmp/ccOloYeZ.s:25564  .text.bno055_get_gyro_range:0000000000000000 bno055_get_gyro_range
     /tmp/ccOloYeZ.s:25666  .text.bno055_get_gyro_range:000000000000005c $d
     /tmp/ccOloYeZ.s:25671  .text.bno055_set_gyro_range:0000000000000000 $t
     /tmp/ccOloYeZ.s:25677  .text.bno055_set_gyro_range:0000000000000000 bno055_set_gyro_range
     /tmp/ccOloYeZ.s:25865  .text.bno055_set_gyro_range:00000000000000bc $d
     /tmp/ccOloYeZ.s:25870  .text.bno055_get_gyro_bw:0000000000000000 $t
     /tmp/ccOloYeZ.s:25876  .text.bno055_get_gyro_bw:0000000000000000 bno055_get_gyro_bw
     /tmp/ccOloYeZ.s:25978  .text.bno055_get_gyro_bw:000000000000005c $d
     /tmp/ccOloYeZ.s:25983  .text.bno055_get_gyro_power_mode:0000000000000000 $t
     /tmp/ccOloYeZ.s:25989  .text.bno055_get_gyro_power_mode:0000000000000000 bno055_get_gyro_power_mode
     /tmp/ccOloYeZ.s:26091  .text.bno055_get_gyro_power_mode:000000000000005c $d
     /tmp/ccOloYeZ.s:26096  .text.bno055_get_accel_sleep_tmr_mode:0000000000000000 $t
     /tmp/ccOloYeZ.s:26102  .text.bno055_get_accel_sleep_tmr_mode:0000000000000000 bno055_get_accel_sleep_tmr_mode
     /tmp/ccOloYeZ.s:26204  .text.bno055_get_accel_sleep_tmr_mode:000000000000005c $d
     /tmp/ccOloYeZ.s:26209  .text.bno055_set_accel_sleep_tmr_mode:0000000000000000 $t
ARM GAS  /tmp/ccOloYeZ.s 			page 1123


     /tmp/ccOloYeZ.s:26215  .text.bno055_set_accel_sleep_tmr_mode:0000000000000000 bno055_set_accel_sleep_tmr_mode
     /tmp/ccOloYeZ.s:26405  .text.bno055_set_accel_sleep_tmr_mode:00000000000000bc $d
     /tmp/ccOloYeZ.s:26410  .text.bno055_get_accel_sleep_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:26416  .text.bno055_get_accel_sleep_durn:0000000000000000 bno055_get_accel_sleep_durn
     /tmp/ccOloYeZ.s:26518  .text.bno055_get_accel_sleep_durn:000000000000005c $d
     /tmp/ccOloYeZ.s:26523  .text.bno055_set_accel_sleep_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:26529  .text.bno055_set_accel_sleep_durn:0000000000000000 bno055_set_accel_sleep_durn
     /tmp/ccOloYeZ.s:26720  .text.bno055_set_accel_sleep_durn:00000000000000c0 $d
     /tmp/ccOloYeZ.s:26725  .text.bno055_get_gyro_sleep_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:26731  .text.bno055_get_gyro_sleep_durn:0000000000000000 bno055_get_gyro_sleep_durn
     /tmp/ccOloYeZ.s:26833  .text.bno055_get_gyro_sleep_durn:000000000000005c $d
     /tmp/ccOloYeZ.s:26838  .text.bno055_set_gyro_sleep_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:26844  .text.bno055_set_gyro_sleep_durn:0000000000000000 bno055_set_gyro_sleep_durn
     /tmp/ccOloYeZ.s:27032  .text.bno055_set_gyro_sleep_durn:00000000000000bc $d
     /tmp/ccOloYeZ.s:27037  .text.bno055_get_gyro_auto_sleep_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:27043  .text.bno055_get_gyro_auto_sleep_durn:0000000000000000 bno055_get_gyro_auto_sleep_durn
     /tmp/ccOloYeZ.s:27145  .text.bno055_get_gyro_auto_sleep_durn:000000000000005c $d
     /tmp/ccOloYeZ.s:27150  .text.bno055_gyro_set_auto_sleep_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:27156  .text.bno055_gyro_set_auto_sleep_durn:0000000000000000 bno055_gyro_set_auto_sleep_durn
     /tmp/ccOloYeZ.s:27270  .text.bno055_gyro_set_auto_sleep_durn:000000000000006c $d
     /tmp/ccOloYeZ.s:27278  .text.bno055_gyro_set_auto_sleep_durn:0000000000000074 $t
     /tmp/ccOloYeZ.s:27443  .text.bno055_gyro_set_auto_sleep_durn:000000000000011c $d
     /tmp/ccOloYeZ.s:27448  .text.bno055_set_gyro_bw:0000000000000000 $t
     /tmp/ccOloYeZ.s:27454  .text.bno055_set_gyro_bw:0000000000000000 bno055_set_gyro_bw
     /tmp/ccOloYeZ.s:27695  .text.bno055_set_gyro_bw:00000000000000f4 $d
     /tmp/ccOloYeZ.s:27700  .text.bno055_set_gyro_power_mode:0000000000000000 $t
     /tmp/ccOloYeZ.s:27706  .text.bno055_set_gyro_power_mode:0000000000000000 bno055_set_gyro_power_mode
     /tmp/ccOloYeZ.s:27807  .text.bno055_set_gyro_power_mode:000000000000005e $d
     /tmp/ccOloYeZ.s:27951  .text.bno055_set_gyro_power_mode:0000000000000100 $d
     /tmp/ccOloYeZ.s:27956  .text.bno055_get_mag_sleep_mode:0000000000000000 $t
     /tmp/ccOloYeZ.s:27962  .text.bno055_get_mag_sleep_mode:0000000000000000 bno055_get_mag_sleep_mode
     /tmp/ccOloYeZ.s:28064  .text.bno055_get_mag_sleep_mode:000000000000005c $d
     /tmp/ccOloYeZ.s:28069  .text.bno055_set_mag_sleep_mode:0000000000000000 $t
     /tmp/ccOloYeZ.s:28075  .text.bno055_set_mag_sleep_mode:0000000000000000 bno055_set_mag_sleep_mode
     /tmp/ccOloYeZ.s:28252  .text.bno055_set_mag_sleep_mode:00000000000000b0 $d
     /tmp/ccOloYeZ.s:28257  .text.bno055_get_mag_sleep_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:28263  .text.bno055_get_mag_sleep_durn:0000000000000000 bno055_get_mag_sleep_durn
     /tmp/ccOloYeZ.s:28365  .text.bno055_get_mag_sleep_durn:000000000000005c $d
     /tmp/ccOloYeZ.s:28370  .text.bno055_set_mag_sleep_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:28376  .text.bno055_set_mag_sleep_durn:0000000000000000 bno055_set_mag_sleep_durn
     /tmp/ccOloYeZ.s:28554  .text.bno055_set_mag_sleep_durn:00000000000000b4 $d
     /tmp/ccOloYeZ.s:28559  .text.bno055_get_intr_mask_gyro_any_motion:0000000000000000 $t
     /tmp/ccOloYeZ.s:28565  .text.bno055_get_intr_mask_gyro_any_motion:0000000000000000 bno055_get_intr_mask_gyro_any_motion
     /tmp/ccOloYeZ.s:28667  .text.bno055_get_intr_mask_gyro_any_motion:000000000000005c $d
     /tmp/ccOloYeZ.s:28672  .text.bno055_set_intr_mask_gyro_any_motion:0000000000000000 $t
     /tmp/ccOloYeZ.s:28678  .text.bno055_set_intr_mask_gyro_any_motion:0000000000000000 bno055_set_intr_mask_gyro_any_motion
     /tmp/ccOloYeZ.s:28805  .text.bno055_set_intr_mask_gyro_any_motion:0000000000000084 $d
     /tmp/ccOloYeZ.s:28810  .text.bno055_get_intr_mask_gyro_highrate:0000000000000000 $t
     /tmp/ccOloYeZ.s:28816  .text.bno055_get_intr_mask_gyro_highrate:0000000000000000 bno055_get_intr_mask_gyro_highrate
     /tmp/ccOloYeZ.s:28918  .text.bno055_get_intr_mask_gyro_highrate:000000000000005c $d
     /tmp/ccOloYeZ.s:28923  .text.bno055_set_intr_mask_gyro_highrate:0000000000000000 $t
     /tmp/ccOloYeZ.s:28929  .text.bno055_set_intr_mask_gyro_highrate:0000000000000000 bno055_set_intr_mask_gyro_highrate
     /tmp/ccOloYeZ.s:29056  .text.bno055_set_intr_mask_gyro_highrate:0000000000000084 $d
     /tmp/ccOloYeZ.s:29061  .text.bno055_get_intr_mask_accel_high_g:0000000000000000 $t
     /tmp/ccOloYeZ.s:29067  .text.bno055_get_intr_mask_accel_high_g:0000000000000000 bno055_get_intr_mask_accel_high_g
     /tmp/ccOloYeZ.s:29169  .text.bno055_get_intr_mask_accel_high_g:000000000000005c $d
     /tmp/ccOloYeZ.s:29174  .text.bno055_set_intr_mask_accel_high_g:0000000000000000 $t
ARM GAS  /tmp/ccOloYeZ.s 			page 1124


     /tmp/ccOloYeZ.s:29180  .text.bno055_set_intr_mask_accel_high_g:0000000000000000 bno055_set_intr_mask_accel_high_g
     /tmp/ccOloYeZ.s:29307  .text.bno055_set_intr_mask_accel_high_g:0000000000000084 $d
     /tmp/ccOloYeZ.s:29312  .text.bno055_get_intr_mask_accel_any_motion:0000000000000000 $t
     /tmp/ccOloYeZ.s:29318  .text.bno055_get_intr_mask_accel_any_motion:0000000000000000 bno055_get_intr_mask_accel_any_motion
     /tmp/ccOloYeZ.s:29420  .text.bno055_get_intr_mask_accel_any_motion:000000000000005c $d
     /tmp/ccOloYeZ.s:29425  .text.bno055_set_intr_mask_accel_any_motion:0000000000000000 $t
     /tmp/ccOloYeZ.s:29431  .text.bno055_set_intr_mask_accel_any_motion:0000000000000000 bno055_set_intr_mask_accel_any_motion
     /tmp/ccOloYeZ.s:29558  .text.bno055_set_intr_mask_accel_any_motion:0000000000000084 $d
     /tmp/ccOloYeZ.s:29563  .text.bno055_get_intr_mask_accel_no_motion:0000000000000000 $t
     /tmp/ccOloYeZ.s:29569  .text.bno055_get_intr_mask_accel_no_motion:0000000000000000 bno055_get_intr_mask_accel_no_motion
     /tmp/ccOloYeZ.s:29671  .text.bno055_get_intr_mask_accel_no_motion:0000000000000058 $d
     /tmp/ccOloYeZ.s:29676  .text.bno055_set_intr_mask_accel_no_motion:0000000000000000 $t
     /tmp/ccOloYeZ.s:29682  .text.bno055_set_intr_mask_accel_no_motion:0000000000000000 bno055_set_intr_mask_accel_no_motion
     /tmp/ccOloYeZ.s:29806  .text.bno055_set_intr_mask_accel_no_motion:0000000000000080 $d
     /tmp/ccOloYeZ.s:29811  .text.bno055_get_intr_gyro_any_motion:0000000000000000 $t
     /tmp/ccOloYeZ.s:29817  .text.bno055_get_intr_gyro_any_motion:0000000000000000 bno055_get_intr_gyro_any_motion
     /tmp/ccOloYeZ.s:29919  .text.bno055_get_intr_gyro_any_motion:000000000000005c $d
     /tmp/ccOloYeZ.s:29924  .text.bno055_set_intr_gyro_any_motion:0000000000000000 $t
     /tmp/ccOloYeZ.s:29930  .text.bno055_set_intr_gyro_any_motion:0000000000000000 bno055_set_intr_gyro_any_motion
     /tmp/ccOloYeZ.s:30057  .text.bno055_set_intr_gyro_any_motion:0000000000000084 $d
     /tmp/ccOloYeZ.s:30062  .text.bno055_get_intr_gyro_highrate:0000000000000000 $t
     /tmp/ccOloYeZ.s:30068  .text.bno055_get_intr_gyro_highrate:0000000000000000 bno055_get_intr_gyro_highrate
     /tmp/ccOloYeZ.s:30170  .text.bno055_get_intr_gyro_highrate:000000000000005c $d
     /tmp/ccOloYeZ.s:30175  .text.bno055_set_intr_gyro_highrate:0000000000000000 $t
     /tmp/ccOloYeZ.s:30181  .text.bno055_set_intr_gyro_highrate:0000000000000000 bno055_set_intr_gyro_highrate
     /tmp/ccOloYeZ.s:30308  .text.bno055_set_intr_gyro_highrate:0000000000000084 $d
     /tmp/ccOloYeZ.s:30313  .text.bno055_get_intr_accel_high_g:0000000000000000 $t
     /tmp/ccOloYeZ.s:30319  .text.bno055_get_intr_accel_high_g:0000000000000000 bno055_get_intr_accel_high_g
     /tmp/ccOloYeZ.s:30421  .text.bno055_get_intr_accel_high_g:000000000000005c $d
     /tmp/ccOloYeZ.s:30426  .text.bno055_set_intr_accel_high_g:0000000000000000 $t
     /tmp/ccOloYeZ.s:30432  .text.bno055_set_intr_accel_high_g:0000000000000000 bno055_set_intr_accel_high_g
     /tmp/ccOloYeZ.s:30559  .text.bno055_set_intr_accel_high_g:0000000000000084 $d
     /tmp/ccOloYeZ.s:30564  .text.bno055_get_intr_accel_any_motion:0000000000000000 $t
     /tmp/ccOloYeZ.s:30570  .text.bno055_get_intr_accel_any_motion:0000000000000000 bno055_get_intr_accel_any_motion
     /tmp/ccOloYeZ.s:30672  .text.bno055_get_intr_accel_any_motion:000000000000005c $d
     /tmp/ccOloYeZ.s:30677  .text.bno055_set_intr_accel_any_motion:0000000000000000 $t
     /tmp/ccOloYeZ.s:30683  .text.bno055_set_intr_accel_any_motion:0000000000000000 bno055_set_intr_accel_any_motion
     /tmp/ccOloYeZ.s:30810  .text.bno055_set_intr_accel_any_motion:0000000000000084 $d
     /tmp/ccOloYeZ.s:30815  .text.bno055_get_intr_accel_no_motion:0000000000000000 $t
     /tmp/ccOloYeZ.s:30821  .text.bno055_get_intr_accel_no_motion:0000000000000000 bno055_get_intr_accel_no_motion
     /tmp/ccOloYeZ.s:30923  .text.bno055_get_intr_accel_no_motion:0000000000000058 $d
     /tmp/ccOloYeZ.s:30928  .text.bno055_set_intr_accel_no_motion:0000000000000000 $t
     /tmp/ccOloYeZ.s:30934  .text.bno055_set_intr_accel_no_motion:0000000000000000 bno055_set_intr_accel_no_motion
     /tmp/ccOloYeZ.s:31058  .text.bno055_set_intr_accel_no_motion:0000000000000080 $d
     /tmp/ccOloYeZ.s:31063  .text.bno055_get_accel_any_motion_thres:0000000000000000 $t
     /tmp/ccOloYeZ.s:31069  .text.bno055_get_accel_any_motion_thres:0000000000000000 bno055_get_accel_any_motion_thres
     /tmp/ccOloYeZ.s:31170  .text.bno055_get_accel_any_motion_thres:0000000000000058 $d
     /tmp/ccOloYeZ.s:31175  .text.bno055_set_accel_any_motion_thres:0000000000000000 $t
     /tmp/ccOloYeZ.s:31181  .text.bno055_set_accel_any_motion_thres:0000000000000000 bno055_set_accel_any_motion_thres
     /tmp/ccOloYeZ.s:31353  .text.bno055_set_accel_any_motion_thres:00000000000000a4 $d
     /tmp/ccOloYeZ.s:31358  .text.bno055_get_accel_any_motion_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:31364  .text.bno055_get_accel_any_motion_durn:0000000000000000 bno055_get_accel_any_motion_durn
     /tmp/ccOloYeZ.s:31466  .text.bno055_get_accel_any_motion_durn:000000000000005c $d
     /tmp/ccOloYeZ.s:31471  .text.bno055_set_accel_any_motion_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:31477  .text.bno055_set_accel_any_motion_durn:0000000000000000 bno055_set_accel_any_motion_durn
     /tmp/ccOloYeZ.s:31654  .text.bno055_set_accel_any_motion_durn:00000000000000b0 $d
     /tmp/ccOloYeZ.s:31659  .text.bno055_get_accel_any_motion_no_motion_axis_enable:0000000000000000 $t
ARM GAS  /tmp/ccOloYeZ.s 			page 1125


     /tmp/ccOloYeZ.s:31665  .text.bno055_get_accel_any_motion_no_motion_axis_enable:0000000000000000 bno055_get_accel_any_motion_no_motion_axis_enable
     /tmp/ccOloYeZ.s:31824  .text.bno055_get_accel_any_motion_no_motion_axis_enable:00000000000000ac $d
     /tmp/ccOloYeZ.s:31829  .text.bno055_set_accel_any_motion_no_motion_axis_enable:0000000000000000 $t
     /tmp/ccOloYeZ.s:31835  .text.bno055_set_accel_any_motion_no_motion_axis_enable:0000000000000000 bno055_set_accel_any_motion_no_motion_axis_enable
     /tmp/ccOloYeZ.s:32121  .text.bno055_set_accel_any_motion_no_motion_axis_enable:0000000000000158 $d
     /tmp/ccOloYeZ.s:32126  .text.bno055_get_accel_high_g_axis_enable:0000000000000000 $t
     /tmp/ccOloYeZ.s:32132  .text.bno055_get_accel_high_g_axis_enable:0000000000000000 bno055_get_accel_high_g_axis_enable
     /tmp/ccOloYeZ.s:32291  .text.bno055_get_accel_high_g_axis_enable:00000000000000a8 $d
     /tmp/ccOloYeZ.s:32296  .text.bno055_set_accel_high_g_axis_enable:0000000000000000 $t
     /tmp/ccOloYeZ.s:32302  .text.bno055_set_accel_high_g_axis_enable:0000000000000000 bno055_set_accel_high_g_axis_enable
     /tmp/ccOloYeZ.s:32586  .text.bno055_set_accel_high_g_axis_enable:0000000000000154 $d
     /tmp/ccOloYeZ.s:32591  .text.bno055_get_accel_high_g_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:32597  .text.bno055_get_accel_high_g_durn:0000000000000000 bno055_get_accel_high_g_durn
     /tmp/ccOloYeZ.s:32698  .text.bno055_get_accel_high_g_durn:0000000000000058 $d
     /tmp/ccOloYeZ.s:32703  .text.bno055_set_accel_high_g_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:32709  .text.bno055_set_accel_high_g_durn:0000000000000000 bno055_set_accel_high_g_durn
     /tmp/ccOloYeZ.s:32882  .text.bno055_set_accel_high_g_durn:00000000000000a4 $d
     /tmp/ccOloYeZ.s:32887  .text.bno055_get_accel_high_g_thres:0000000000000000 $t
     /tmp/ccOloYeZ.s:32893  .text.bno055_get_accel_high_g_thres:0000000000000000 bno055_get_accel_high_g_thres
     /tmp/ccOloYeZ.s:32994  .text.bno055_get_accel_high_g_thres:0000000000000058 $d
     /tmp/ccOloYeZ.s:32999  .text.bno055_set_accel_high_g_thres:0000000000000000 $t
     /tmp/ccOloYeZ.s:33005  .text.bno055_set_accel_high_g_thres:0000000000000000 bno055_set_accel_high_g_thres
     /tmp/ccOloYeZ.s:33178  .text.bno055_set_accel_high_g_thres:00000000000000a4 $d
     /tmp/ccOloYeZ.s:33183  .text.bno055_get_accel_slow_no_motion_thres:0000000000000000 $t
     /tmp/ccOloYeZ.s:33189  .text.bno055_get_accel_slow_no_motion_thres:0000000000000000 bno055_get_accel_slow_no_motion_thres
     /tmp/ccOloYeZ.s:33290  .text.bno055_get_accel_slow_no_motion_thres:0000000000000058 $d
     /tmp/ccOloYeZ.s:33295  .text.bno055_set_accel_slow_no_motion_thres:0000000000000000 $t
     /tmp/ccOloYeZ.s:33301  .text.bno055_set_accel_slow_no_motion_thres:0000000000000000 bno055_set_accel_slow_no_motion_thres
     /tmp/ccOloYeZ.s:33474  .text.bno055_set_accel_slow_no_motion_thres:00000000000000a4 $d
     /tmp/ccOloYeZ.s:33479  .text.bno055_get_accel_slow_no_motion_enable:0000000000000000 $t
     /tmp/ccOloYeZ.s:33485  .text.bno055_get_accel_slow_no_motion_enable:0000000000000000 bno055_get_accel_slow_no_motion_enable
     /tmp/ccOloYeZ.s:33587  .text.bno055_get_accel_slow_no_motion_enable:000000000000005c $d
     /tmp/ccOloYeZ.s:33592  .text.bno055_set_accel_slow_no_motion_enable:0000000000000000 $t
     /tmp/ccOloYeZ.s:33598  .text.bno055_set_accel_slow_no_motion_enable:0000000000000000 bno055_set_accel_slow_no_motion_enable
     /tmp/ccOloYeZ.s:33776  .text.bno055_set_accel_slow_no_motion_enable:00000000000000b0 $d
     /tmp/ccOloYeZ.s:33781  .text.bno055_get_accel_slow_no_motion_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:33787  .text.bno055_get_accel_slow_no_motion_durn:0000000000000000 bno055_get_accel_slow_no_motion_durn
     /tmp/ccOloYeZ.s:33889  .text.bno055_get_accel_slow_no_motion_durn:000000000000005c $d
     /tmp/ccOloYeZ.s:33894  .text.bno055_set_accel_slow_no_motion_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:33900  .text.bno055_set_accel_slow_no_motion_durn:0000000000000000 bno055_set_accel_slow_no_motion_durn
     /tmp/ccOloYeZ.s:34079  .text.bno055_set_accel_slow_no_motion_durn:00000000000000b4 $d
     /tmp/ccOloYeZ.s:34084  .text.bno055_get_gyro_any_motion_axis_enable:0000000000000000 $t
     /tmp/ccOloYeZ.s:34090  .text.bno055_get_gyro_any_motion_axis_enable:0000000000000000 bno055_get_gyro_any_motion_axis_enable
     /tmp/ccOloYeZ.s:34249  .text.bno055_get_gyro_any_motion_axis_enable:00000000000000ac $d
     /tmp/ccOloYeZ.s:34254  .text.bno055_set_gyro_any_motion_axis_enable:0000000000000000 $t
     /tmp/ccOloYeZ.s:34260  .text.bno055_set_gyro_any_motion_axis_enable:0000000000000000 bno055_set_gyro_any_motion_axis_enable
     /tmp/ccOloYeZ.s:34546  .text.bno055_set_gyro_any_motion_axis_enable:0000000000000158 $d
     /tmp/ccOloYeZ.s:34551  .text.bno055_get_gyro_highrate_axis_enable:0000000000000000 $t
     /tmp/ccOloYeZ.s:34557  .text.bno055_get_gyro_highrate_axis_enable:0000000000000000 bno055_get_gyro_highrate_axis_enable
     /tmp/ccOloYeZ.s:34716  .text.bno055_get_gyro_highrate_axis_enable:00000000000000ac $d
     /tmp/ccOloYeZ.s:34721  .text.bno055_set_gyro_highrate_axis_enable:0000000000000000 $t
     /tmp/ccOloYeZ.s:34727  .text.bno055_set_gyro_highrate_axis_enable:0000000000000000 bno055_set_gyro_highrate_axis_enable
     /tmp/ccOloYeZ.s:35014  .text.bno055_set_gyro_highrate_axis_enable:0000000000000158 $d
     /tmp/ccOloYeZ.s:35019  .text.bno055_get_gyro_any_motion_filter:0000000000000000 $t
     /tmp/ccOloYeZ.s:35025  .text.bno055_get_gyro_any_motion_filter:0000000000000000 bno055_get_gyro_any_motion_filter
     /tmp/ccOloYeZ.s:35127  .text.bno055_get_gyro_any_motion_filter:000000000000005c $d
     /tmp/ccOloYeZ.s:35132  .text.bno055_set_gyro_any_motion_filter:0000000000000000 $t
ARM GAS  /tmp/ccOloYeZ.s 			page 1126


     /tmp/ccOloYeZ.s:35138  .text.bno055_set_gyro_any_motion_filter:0000000000000000 bno055_set_gyro_any_motion_filter
     /tmp/ccOloYeZ.s:35317  .text.bno055_set_gyro_any_motion_filter:00000000000000b4 $d
     /tmp/ccOloYeZ.s:35322  .text.bno055_get_gyro_highrate_filter:0000000000000000 $t
     /tmp/ccOloYeZ.s:35328  .text.bno055_get_gyro_highrate_filter:0000000000000000 bno055_get_gyro_highrate_filter
     /tmp/ccOloYeZ.s:35430  .text.bno055_get_gyro_highrate_filter:0000000000000058 $d
     /tmp/ccOloYeZ.s:35435  .text.bno055_set_gyro_highrate_filter:0000000000000000 $t
     /tmp/ccOloYeZ.s:35441  .text.bno055_set_gyro_highrate_filter:0000000000000000 bno055_set_gyro_highrate_filter
     /tmp/ccOloYeZ.s:35617  .text.bno055_set_gyro_highrate_filter:00000000000000b0 $d
     /tmp/ccOloYeZ.s:35622  .text.bno055_get_gyro_highrate_x_thres:0000000000000000 $t
     /tmp/ccOloYeZ.s:35628  .text.bno055_get_gyro_highrate_x_thres:0000000000000000 bno055_get_gyro_highrate_x_thres
     /tmp/ccOloYeZ.s:35730  .text.bno055_get_gyro_highrate_x_thres:000000000000005c $d
     /tmp/ccOloYeZ.s:35735  .text.bno055_set_gyro_highrate_x_thres:0000000000000000 $t
     /tmp/ccOloYeZ.s:35741  .text.bno055_set_gyro_highrate_x_thres:0000000000000000 bno055_set_gyro_highrate_x_thres
     /tmp/ccOloYeZ.s:35919  .text.bno055_set_gyro_highrate_x_thres:00000000000000b0 $d
     /tmp/ccOloYeZ.s:35924  .text.bno055_get_gyro_highrate_x_hyst:0000000000000000 $t
     /tmp/ccOloYeZ.s:35930  .text.bno055_get_gyro_highrate_x_hyst:0000000000000000 bno055_get_gyro_highrate_x_hyst
     /tmp/ccOloYeZ.s:36032  .text.bno055_get_gyro_highrate_x_hyst:000000000000005c $d
     /tmp/ccOloYeZ.s:36037  .text.bno055_set_gyro_highrate_x_hyst:0000000000000000 $t
     /tmp/ccOloYeZ.s:36043  .text.bno055_set_gyro_highrate_x_hyst:0000000000000000 bno055_set_gyro_highrate_x_hyst
     /tmp/ccOloYeZ.s:36222  .text.bno055_set_gyro_highrate_x_hyst:00000000000000b4 $d
     /tmp/ccOloYeZ.s:36227  .text.bno055_get_gyro_highrate_x_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:36233  .text.bno055_get_gyro_highrate_x_durn:0000000000000000 bno055_get_gyro_highrate_x_durn
     /tmp/ccOloYeZ.s:36334  .text.bno055_get_gyro_highrate_x_durn:0000000000000058 $d
     /tmp/ccOloYeZ.s:36339  .text.bno055_set_gyro_highrate_x_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:36345  .text.bno055_set_gyro_highrate_x_durn:0000000000000000 bno055_set_gyro_highrate_x_durn
     /tmp/ccOloYeZ.s:36518  .text.bno055_set_gyro_highrate_x_durn:00000000000000a4 $d
     /tmp/ccOloYeZ.s:36523  .text.bno055_get_gyro_highrate_y_thres:0000000000000000 $t
     /tmp/ccOloYeZ.s:36529  .text.bno055_get_gyro_highrate_y_thres:0000000000000000 bno055_get_gyro_highrate_y_thres
     /tmp/ccOloYeZ.s:36631  .text.bno055_get_gyro_highrate_y_thres:000000000000005c $d
     /tmp/ccOloYeZ.s:36636  .text.bno055_set_gyro_highrate_y_thres:0000000000000000 $t
     /tmp/ccOloYeZ.s:36642  .text.bno055_set_gyro_highrate_y_thres:0000000000000000 bno055_set_gyro_highrate_y_thres
     /tmp/ccOloYeZ.s:36820  .text.bno055_set_gyro_highrate_y_thres:00000000000000b0 $d
     /tmp/ccOloYeZ.s:36825  .text.bno055_get_gyro_highrate_y_hyst:0000000000000000 $t
     /tmp/ccOloYeZ.s:36831  .text.bno055_get_gyro_highrate_y_hyst:0000000000000000 bno055_get_gyro_highrate_y_hyst
     /tmp/ccOloYeZ.s:36933  .text.bno055_get_gyro_highrate_y_hyst:000000000000005c $d
     /tmp/ccOloYeZ.s:36938  .text.bno055_set_gyro_highrate_y_hyst:0000000000000000 $t
     /tmp/ccOloYeZ.s:36944  .text.bno055_set_gyro_highrate_y_hyst:0000000000000000 bno055_set_gyro_highrate_y_hyst
     /tmp/ccOloYeZ.s:37123  .text.bno055_set_gyro_highrate_y_hyst:00000000000000b4 $d
     /tmp/ccOloYeZ.s:37128  .text.bno055_get_gyro_highrate_y_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:37134  .text.bno055_get_gyro_highrate_y_durn:0000000000000000 bno055_get_gyro_highrate_y_durn
     /tmp/ccOloYeZ.s:37235  .text.bno055_get_gyro_highrate_y_durn:0000000000000058 $d
     /tmp/ccOloYeZ.s:37240  .text.bno055_set_gyro_highrate_y_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:37246  .text.bno055_set_gyro_highrate_y_durn:0000000000000000 bno055_set_gyro_highrate_y_durn
     /tmp/ccOloYeZ.s:37419  .text.bno055_set_gyro_highrate_y_durn:00000000000000a4 $d
     /tmp/ccOloYeZ.s:37424  .text.bno055_get_gyro_highrate_z_thres:0000000000000000 $t
     /tmp/ccOloYeZ.s:37430  .text.bno055_get_gyro_highrate_z_thres:0000000000000000 bno055_get_gyro_highrate_z_thres
     /tmp/ccOloYeZ.s:37532  .text.bno055_get_gyro_highrate_z_thres:000000000000005c $d
     /tmp/ccOloYeZ.s:37537  .text.bno055_set_gyro_highrate_z_thres:0000000000000000 $t
     /tmp/ccOloYeZ.s:37543  .text.bno055_set_gyro_highrate_z_thres:0000000000000000 bno055_set_gyro_highrate_z_thres
     /tmp/ccOloYeZ.s:37721  .text.bno055_set_gyro_highrate_z_thres:00000000000000b0 $d
     /tmp/ccOloYeZ.s:37726  .text.bno055_get_gyro_highrate_z_hyst:0000000000000000 $t
     /tmp/ccOloYeZ.s:37732  .text.bno055_get_gyro_highrate_z_hyst:0000000000000000 bno055_get_gyro_highrate_z_hyst
     /tmp/ccOloYeZ.s:37834  .text.bno055_get_gyro_highrate_z_hyst:000000000000005c $d
     /tmp/ccOloYeZ.s:37839  .text.bno055_set_gyro_highrate_z_hyst:0000000000000000 $t
     /tmp/ccOloYeZ.s:37845  .text.bno055_set_gyro_highrate_z_hyst:0000000000000000 bno055_set_gyro_highrate_z_hyst
     /tmp/ccOloYeZ.s:38024  .text.bno055_set_gyro_highrate_z_hyst:00000000000000b4 $d
     /tmp/ccOloYeZ.s:38029  .text.bno055_get_gyro_highrate_z_durn:0000000000000000 $t
ARM GAS  /tmp/ccOloYeZ.s 			page 1127


     /tmp/ccOloYeZ.s:38035  .text.bno055_get_gyro_highrate_z_durn:0000000000000000 bno055_get_gyro_highrate_z_durn
     /tmp/ccOloYeZ.s:38136  .text.bno055_get_gyro_highrate_z_durn:0000000000000058 $d
     /tmp/ccOloYeZ.s:38141  .text.bno055_set_gyro_highrate_z_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:38147  .text.bno055_set_gyro_highrate_z_durn:0000000000000000 bno055_set_gyro_highrate_z_durn
     /tmp/ccOloYeZ.s:38319  .text.bno055_set_gyro_highrate_z_durn:00000000000000a4 $d
     /tmp/ccOloYeZ.s:38324  .text.bno055_get_gyro_any_motion_thres:0000000000000000 $t
     /tmp/ccOloYeZ.s:38330  .text.bno055_get_gyro_any_motion_thres:0000000000000000 bno055_get_gyro_any_motion_thres
     /tmp/ccOloYeZ.s:38432  .text.bno055_get_gyro_any_motion_thres:000000000000005c $d
     /tmp/ccOloYeZ.s:38437  .text.bno055_set_gyro_any_motion_thres:0000000000000000 $t
     /tmp/ccOloYeZ.s:38443  .text.bno055_set_gyro_any_motion_thres:0000000000000000 bno055_set_gyro_any_motion_thres
     /tmp/ccOloYeZ.s:38621  .text.bno055_set_gyro_any_motion_thres:00000000000000b0 $d
     /tmp/ccOloYeZ.s:38626  .text.bno055_get_gyro_any_motion_slope_samples:0000000000000000 $t
     /tmp/ccOloYeZ.s:38632  .text.bno055_get_gyro_any_motion_slope_samples:0000000000000000 bno055_get_gyro_any_motion_slope_samples
     /tmp/ccOloYeZ.s:38734  .text.bno055_get_gyro_any_motion_slope_samples:000000000000005c $d
     /tmp/ccOloYeZ.s:38739  .text.bno055_set_gyro_any_motion_slope_samples:0000000000000000 $t
     /tmp/ccOloYeZ.s:38745  .text.bno055_set_gyro_any_motion_slope_samples:0000000000000000 bno055_set_gyro_any_motion_slope_samples
     /tmp/ccOloYeZ.s:38922  .text.bno055_set_gyro_any_motion_slope_samples:00000000000000b0 $d
     /tmp/ccOloYeZ.s:38927  .text.bno055_get_gyro_any_motion_awake_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:38933  .text.bno055_get_gyro_any_motion_awake_durn:0000000000000000 bno055_get_gyro_any_motion_awake_durn
     /tmp/ccOloYeZ.s:39035  .text.bno055_get_gyro_any_motion_awake_durn:000000000000005c $d
     /tmp/ccOloYeZ.s:39040  .text.bno055_set_gyro_any_motion_awake_durn:0000000000000000 $t
     /tmp/ccOloYeZ.s:39046  .text.bno055_set_gyro_any_motion_awake_durn:0000000000000000 bno055_set_gyro_any_motion_awake_durn
     /tmp/ccOloYeZ.s:39224  .text.bno055_set_gyro_any_motion_awake_durn:00000000000000b4 $d
     /tmp/ccOloYeZ.s:39229  .bss.p_bno055:0000000000000000 $d
     /tmp/ccOloYeZ.s:39235  .rodata:0000000000000000 $d
     /tmp/ccOloYeZ.s:27808  .text.bno055_set_gyro_power_mode:000000000000005f $d
     /tmp/ccOloYeZ.s:27808  .text.bno055_set_gyro_power_mode:0000000000000060 $t

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_dmul
__aeabi_d2f
__aeabi_ddiv
__aeabi_dadd
