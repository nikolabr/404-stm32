ARM GAS  /tmp/ccWoU29M.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"bno055.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.bno055_init,"ax",%progbits
  18              		.align	1
  19              		.global	bno055_init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	bno055_init:
  27              	.LVL0:
  28              	.LFB0:
  29              		.file 1 "Core/Src/bno055.c"
   1:Core/Src/bno055.c **** /**
   2:Core/Src/bno055.c **** * Copyright (c) 2020 Bosch Sensortec GmbH. All rights reserved.
   3:Core/Src/bno055.c **** *
   4:Core/Src/bno055.c **** * BSD-3-Clause
   5:Core/Src/bno055.c **** *
   6:Core/Src/bno055.c **** * Redistribution and use in source and binary forms, with or without
   7:Core/Src/bno055.c **** * modification, are permitted provided that the following conditions are met:
   8:Core/Src/bno055.c **** *
   9:Core/Src/bno055.c **** * 1. Redistributions of source code must retain the above copyright
  10:Core/Src/bno055.c **** *    notice, this list of conditions and the following disclaimer.
  11:Core/Src/bno055.c **** *
  12:Core/Src/bno055.c **** * 2. Redistributions in binary form must reproduce the above copyright
  13:Core/Src/bno055.c **** *    notice, this list of conditions and the following disclaimer in the
  14:Core/Src/bno055.c **** *    documentation and/or other materials provided with the distribution.
  15:Core/Src/bno055.c **** *
  16:Core/Src/bno055.c **** * 3. Neither the name of the copyright holder nor the names of its
  17:Core/Src/bno055.c **** *    contributors may be used to endorse or promote products derived from
  18:Core/Src/bno055.c **** *    this software without specific prior written permission.
  19:Core/Src/bno055.c **** *
  20:Core/Src/bno055.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  21:Core/Src/bno055.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  22:Core/Src/bno055.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  23:Core/Src/bno055.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  24:Core/Src/bno055.c **** * COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  25:Core/Src/bno055.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  26:Core/Src/bno055.c **** * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Core/Src/bno055.c **** * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  28:Core/Src/bno055.c **** * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  29:Core/Src/bno055.c **** * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
ARM GAS  /tmp/ccWoU29M.s 			page 2


  30:Core/Src/bno055.c **** * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Core/Src/bno055.c **** * POSSIBILITY OF SUCH DAMAGE.
  32:Core/Src/bno055.c **** *
  33:Core/Src/bno055.c **** * @file bno055.c
  34:Core/Src/bno055.c **** * @date 10/01/2020
  35:Core/Src/bno055.c **** * @version  2.0.6
  36:Core/Src/bno055.c **** *
  37:Core/Src/bno055.c **** */
  38:Core/Src/bno055.c **** 
  39:Core/Src/bno055.c **** /*********************************************************/
  40:Core/Src/bno055.c **** /*              INCLUDES    */
  41:Core/Src/bno055.c **** /*******************************************************/
  42:Core/Src/bno055.c **** #include "bno055.h"
  43:Core/Src/bno055.c **** 
  44:Core/Src/bno055.c **** #ifdef __KERNEL__
  45:Core/Src/bno055.c **** #include <linux/types.h>
  46:Core/Src/bno055.c **** #include <linux/kernel.h>
  47:Core/Src/bno055.c **** #else
  48:Core/Src/bno055.c **** #include <stdint.h>
  49:Core/Src/bno055.c **** #include <stddef.h>
  50:Core/Src/bno055.c **** #endif
  51:Core/Src/bno055.c **** 
  52:Core/Src/bno055.c **** #ifndef NULL
  53:Core/Src/bno055.c **** #ifdef __cplusplus
  54:Core/Src/bno055.c **** #define NULL 0
  55:Core/Src/bno055.c **** #else
  56:Core/Src/bno055.c **** #define NULL ((void *) 0)
  57:Core/Src/bno055.c **** #endif
  58:Core/Src/bno055.c **** #endif
  59:Core/Src/bno055.c **** 
  60:Core/Src/bno055.c **** /*! file <BNO055 >
  61:Core/Src/bno055.c ****  * brief <Sensor driver for BNO055> */
  62:Core/Src/bno055.c **** 
  63:Core/Src/bno055.c **** /*  STRUCTURE DEFINITIONS   */
  64:Core/Src/bno055.c **** static struct bno055_t *p_bno055;
  65:Core/Src/bno055.c **** 
  66:Core/Src/bno055.c **** /*   LOCAL FUNCTIONS    */
  67:Core/Src/bno055.c **** 
  68:Core/Src/bno055.c **** /*!
  69:Core/Src/bno055.c ****  *  @brief
  70:Core/Src/bno055.c ****  *  This API is used for initialize
  71:Core/Src/bno055.c ****  *  bus read, bus write function pointers,device
  72:Core/Src/bno055.c ****  *  address,accel revision id, gyro revision id
  73:Core/Src/bno055.c ****  *  mag revision id, software revision id, boot loader
  74:Core/Src/bno055.c ****  *  revision id and page id
  75:Core/Src/bno055.c ****  *
  76:Core/Src/bno055.c ****  *  @param  bno055 - structure pointer
  77:Core/Src/bno055.c ****  *
  78:Core/Src/bno055.c ****  *
  79:Core/Src/bno055.c ****  *  @return results of bus communication function
  80:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
  81:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
  82:Core/Src/bno055.c ****  *
  83:Core/Src/bno055.c ****  *  @note While changing the parameter of the bno055_t
  84:Core/Src/bno055.c ****  *  consider the following point:
  85:Core/Src/bno055.c ****  *  Changing the reference value of the parameter
  86:Core/Src/bno055.c ****  *  will changes the local copy or local reference
ARM GAS  /tmp/ccWoU29M.s 			page 3


  87:Core/Src/bno055.c ****  *  make sure your changes will not
  88:Core/Src/bno055.c ****  *  affect the reference value of the parameter
  89:Core/Src/bno055.c ****  *  (Better case don't change the reference value of the parameter)
  90:Core/Src/bno055.c ****  */
  91:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_init(struct bno055_t *bno055)
  92:Core/Src/bno055.c **** {
  30              		.loc 1 92 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 92 1 is_stmt 0 view .LVU1
  35 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 20
  38              		.cfi_offset 4, -20
  39              		.cfi_offset 5, -16
  40              		.cfi_offset 6, -12
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 83B0     		sub	sp, sp, #12
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 32
  93:Core/Src/bno055.c ****     /* Variable used to return value of
  94:Core/Src/bno055.c ****      * communication routine*/
  95:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
  46              		.loc 1 95 5 is_stmt 1 view .LVU2
  47              	.LVL1:
  96:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
  48              		.loc 1 96 5 view .LVU3
  49              		.loc 1 96 8 is_stmt 0 view .LVU4
  50 0004 0026     		movs	r6, #0
  51 0006 8DF80760 		strb	r6, [sp, #7]
  97:Core/Src/bno055.c ****     u8 bno055_page_zero_u8 = BNO055_PAGE_ZERO;
  52              		.loc 1 97 5 is_stmt 1 view .LVU5
  53              		.loc 1 97 8 is_stmt 0 view .LVU6
  54 000a 8DF80660 		strb	r6, [sp, #6]
  98:Core/Src/bno055.c **** 
  99:Core/Src/bno055.c ****     /* Array holding the Software revision id
 100:Core/Src/bno055.c ****      */
 101:Core/Src/bno055.c ****     u8 a_SW_ID_u8[BNO055_REV_ID_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
  55              		.loc 1 101 5 is_stmt 1 view .LVU7
  56              		.loc 1 101 8 is_stmt 0 view .LVU8
  57 000e ADF80460 		strh	r6, [sp, #4]	@ movhi
 102:Core/Src/bno055.c **** 
 103:Core/Src/bno055.c ****     /* stuct parameters are assign to bno055*/
 104:Core/Src/bno055.c ****     p_bno055 = bno055;
  58              		.loc 1 104 5 is_stmt 1 view .LVU9
  59              		.loc 1 104 14 is_stmt 0 view .LVU10
  60 0012 394C     		ldr	r4, .L3
  61 0014 2060     		str	r0, [r4]
 105:Core/Src/bno055.c **** 
 106:Core/Src/bno055.c ****     /* Write the default page as zero*/
 107:Core/Src/bno055.c ****     com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
  62              		.loc 1 107 5 is_stmt 1 view .LVU11
  63              		.loc 1 107 24 is_stmt 0 view .LVU12
  64 0016 C568     		ldr	r5, [r0, #12]
  65              		.loc 1 107 16 view .LVU13
ARM GAS  /tmp/ccWoU29M.s 			page 4


  66 0018 0123     		movs	r3, #1
  67 001a 0DF10602 		add	r2, sp, #6
  68 001e 0721     		movs	r1, #7
  69 0020 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
  70              	.LVL2:
  71              		.loc 1 107 16 view .LVU14
  72 0022 A847     		blx	r5
  73              	.LVL3:
  74              		.loc 1 107 16 view .LVU15
  75 0024 0546     		mov	r5, r0
  76              	.LVL4:
 108:Core/Src/bno055.c ****                                                BNO055_PAGE_ID_REG,
 109:Core/Src/bno055.c ****                                                &bno055_page_zero_u8,
 110:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 111:Core/Src/bno055.c **** 
 112:Core/Src/bno055.c ****     /* Read the chip id of the sensor from page
 113:Core/Src/bno055.c ****      * zero 0x00 register*/
 114:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
  77              		.loc 1 114 5 is_stmt 1 view .LVU16
  78              		.loc 1 114 25 is_stmt 0 view .LVU17
  79 0026 2068     		ldr	r0, [r4]
  80 0028 0769     		ldr	r7, [r0, #16]
  81              		.loc 1 114 17 view .LVU18
  82 002a 0123     		movs	r3, #1
  83 002c 0DF10702 		add	r2, sp, #7
  84 0030 3146     		mov	r1, r6
  85 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
  86 0034 B847     		blx	r7
  87              	.LVL5:
  88              		.loc 1 114 14 view .LVU19
  89 0036 55FA80F5 		uxtab	r5, r5, r0
  90              	.LVL6:
  91              		.loc 1 114 14 view .LVU20
  92 003a EDB2     		uxtb	r5, r5
  93              	.LVL7:
 115:Core/Src/bno055.c ****                                                BNO055_CHIP_ID_REG,
 116:Core/Src/bno055.c ****                                                &data_u8,
 117:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 118:Core/Src/bno055.c ****     p_bno055->chip_id = data_u8;
  94              		.loc 1 118 5 is_stmt 1 view .LVU21
  95              		.loc 1 118 13 is_stmt 0 view .LVU22
  96 003c 2068     		ldr	r0, [r4]
  97              		.loc 1 118 23 view .LVU23
  98 003e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
  99 0042 0370     		strb	r3, [r0]
 119:Core/Src/bno055.c **** 
 120:Core/Src/bno055.c ****     /* Read the accel revision id from page
 121:Core/Src/bno055.c ****      * zero 0x01 register*/
 122:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 100              		.loc 1 122 5 is_stmt 1 view .LVU24
 101              		.loc 1 122 25 is_stmt 0 view .LVU25
 102 0044 0669     		ldr	r6, [r0, #16]
 103              		.loc 1 122 17 view .LVU26
 104 0046 0123     		movs	r3, #1
 105 0048 0DF10702 		add	r2, sp, #7
 106 004c 1946     		mov	r1, r3
 107 004e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 5


 108 0050 B047     		blx	r6
 109              	.LVL8:
 110              		.loc 1 122 14 view .LVU27
 111 0052 55FA80F5 		uxtab	r5, r5, r0
 112              	.LVL9:
 113              		.loc 1 122 14 view .LVU28
 114 0056 EDB2     		uxtb	r5, r5
 115              	.LVL10:
 123:Core/Src/bno055.c ****                                                BNO055_ACCEL_REV_ID_REG,
 124:Core/Src/bno055.c ****                                                &data_u8,
 125:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 126:Core/Src/bno055.c ****     p_bno055->accel_rev_id = data_u8;
 116              		.loc 1 126 5 is_stmt 1 view .LVU29
 117              		.loc 1 126 13 is_stmt 0 view .LVU30
 118 0058 2068     		ldr	r0, [r4]
 119              		.loc 1 126 28 view .LVU31
 120 005a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 121 005e 4371     		strb	r3, [r0, #5]
 127:Core/Src/bno055.c **** 
 128:Core/Src/bno055.c ****     /* Read the mag revision id from page
 129:Core/Src/bno055.c ****      * zero 0x02 register*/
 130:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 122              		.loc 1 130 5 is_stmt 1 view .LVU32
 123              		.loc 1 130 25 is_stmt 0 view .LVU33
 124 0060 0669     		ldr	r6, [r0, #16]
 125              		.loc 1 130 17 view .LVU34
 126 0062 0123     		movs	r3, #1
 127 0064 0DF10702 		add	r2, sp, #7
 128 0068 0221     		movs	r1, #2
 129 006a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 130 006c B047     		blx	r6
 131              	.LVL11:
 132              		.loc 1 130 14 view .LVU35
 133 006e 55FA80F5 		uxtab	r5, r5, r0
 134              	.LVL12:
 135              		.loc 1 130 14 view .LVU36
 136 0072 EDB2     		uxtb	r5, r5
 137              	.LVL13:
 131:Core/Src/bno055.c ****                                                BNO055_MAG_REV_ID_REG,
 132:Core/Src/bno055.c ****                                                &data_u8,
 133:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 134:Core/Src/bno055.c ****     p_bno055->mag_rev_id = data_u8;
 138              		.loc 1 134 5 is_stmt 1 view .LVU37
 139              		.loc 1 134 13 is_stmt 0 view .LVU38
 140 0074 2068     		ldr	r0, [r4]
 141              		.loc 1 134 26 view .LVU39
 142 0076 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 143 007a 8371     		strb	r3, [r0, #6]
 135:Core/Src/bno055.c **** 
 136:Core/Src/bno055.c ****     /* Read the gyro revision id from page
 137:Core/Src/bno055.c ****      * zero 0x02 register*/
 138:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 144              		.loc 1 138 5 is_stmt 1 view .LVU40
 145              		.loc 1 138 25 is_stmt 0 view .LVU41
 146 007c 0669     		ldr	r6, [r0, #16]
 147              		.loc 1 138 17 view .LVU42
 148 007e 0123     		movs	r3, #1
ARM GAS  /tmp/ccWoU29M.s 			page 6


 149 0080 0DF10702 		add	r2, sp, #7
 150 0084 0321     		movs	r1, #3
 151 0086 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 152 0088 B047     		blx	r6
 153              	.LVL14:
 154              		.loc 1 138 14 view .LVU43
 155 008a 55FA80F5 		uxtab	r5, r5, r0
 156              	.LVL15:
 157              		.loc 1 138 14 view .LVU44
 158 008e EDB2     		uxtb	r5, r5
 159              	.LVL16:
 139:Core/Src/bno055.c ****                                                BNO055_GYRO_REV_ID_REG,
 140:Core/Src/bno055.c ****                                                &data_u8,
 141:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 142:Core/Src/bno055.c ****     p_bno055->gyro_rev_id = data_u8;
 160              		.loc 1 142 5 is_stmt 1 view .LVU45
 161              		.loc 1 142 13 is_stmt 0 view .LVU46
 162 0090 2068     		ldr	r0, [r4]
 163              		.loc 1 142 27 view .LVU47
 164 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 165 0096 C371     		strb	r3, [r0, #7]
 143:Core/Src/bno055.c **** 
 144:Core/Src/bno055.c ****     /* Read the boot loader revision from page
 145:Core/Src/bno055.c ****      * zero 0x06 register*/
 146:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 166              		.loc 1 146 5 is_stmt 1 view .LVU48
 167              		.loc 1 146 25 is_stmt 0 view .LVU49
 168 0098 0669     		ldr	r6, [r0, #16]
 169              		.loc 1 146 17 view .LVU50
 170 009a 0123     		movs	r3, #1
 171 009c 0DF10702 		add	r2, sp, #7
 172 00a0 0621     		movs	r1, #6
 173 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 174 00a4 B047     		blx	r6
 175              	.LVL17:
 176              		.loc 1 146 14 view .LVU51
 177 00a6 55FA80F5 		uxtab	r5, r5, r0
 178              	.LVL18:
 179              		.loc 1 146 14 view .LVU52
 180 00aa EDB2     		uxtb	r5, r5
 181              	.LVL19:
 147:Core/Src/bno055.c ****                                                BNO055_BL_REV_ID_REG,
 148:Core/Src/bno055.c ****                                                &data_u8,
 149:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 150:Core/Src/bno055.c ****     p_bno055->bl_rev_id = data_u8;
 182              		.loc 1 150 5 is_stmt 1 view .LVU53
 183              		.loc 1 150 13 is_stmt 0 view .LVU54
 184 00ac 2068     		ldr	r0, [r4]
 185              		.loc 1 150 25 view .LVU55
 186 00ae 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 187 00b2 0372     		strb	r3, [r0, #8]
 151:Core/Src/bno055.c **** 
 152:Core/Src/bno055.c ****     /* Read the software revision id from page
 153:Core/Src/bno055.c ****      * zero 0x04 and 0x05 register( 2 bytes of data)*/
 154:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 188              		.loc 1 154 5 is_stmt 1 view .LVU56
 189              		.loc 1 154 25 is_stmt 0 view .LVU57
ARM GAS  /tmp/ccWoU29M.s 			page 7


 190 00b4 0669     		ldr	r6, [r0, #16]
 191              		.loc 1 154 17 view .LVU58
 192 00b6 0223     		movs	r3, #2
 193 00b8 01AA     		add	r2, sp, #4
 194 00ba 0421     		movs	r1, #4
 195 00bc 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 196 00be B047     		blx	r6
 197              	.LVL20:
 198              		.loc 1 154 14 view .LVU59
 199 00c0 55FA80F5 		uxtab	r5, r5, r0
 200              	.LVL21:
 201              		.loc 1 154 14 view .LVU60
 202 00c4 EDB2     		uxtb	r5, r5
 203              	.LVL22:
 155:Core/Src/bno055.c ****                                                BNO055_SW_REV_ID_LSB_REG,
 156:Core/Src/bno055.c ****                                                a_SW_ID_u8,
 157:Core/Src/bno055.c ****                                                BNO055_LSB_MSB_READ_LENGTH);
 158:Core/Src/bno055.c ****     a_SW_ID_u8[BNO055_SW_ID_LSB] = BNO055_GET_BITSLICE(a_SW_ID_u8[BNO055_SW_ID_LSB], BNO055_SW_REV_
 204              		.loc 1 158 5 is_stmt 1 view .LVU61
 159:Core/Src/bno055.c ****     p_bno055->sw_rev_id =
 205              		.loc 1 159 5 view .LVU62
 160:Core/Src/bno055.c ****         (u16)((((u32)((u8)a_SW_ID_u8[BNO055_SW_ID_MSB])) << BNO055_SHIFT_EIGHT_BITS) | (a_SW_ID_u8[
 206              		.loc 1 160 37 is_stmt 0 view .LVU63
 207 00c6 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 208              		.loc 1 160 99 view .LVU64
 209 00ca 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 159:Core/Src/bno055.c ****     p_bno055->sw_rev_id =
 210              		.loc 1 159 13 view .LVU65
 211 00ce 2068     		ldr	r0, [r4]
 212              		.loc 1 160 9 view .LVU66
 213 00d0 43EA0223 		orr	r3, r3, r2, lsl #8
 159:Core/Src/bno055.c ****     p_bno055->sw_rev_id =
 214              		.loc 1 159 25 view .LVU67
 215 00d4 4380     		strh	r3, [r0, #2]	@ movhi
 161:Core/Src/bno055.c **** 
 162:Core/Src/bno055.c ****     /* Read the page id from the register 0x07*/
 163:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 216              		.loc 1 163 5 is_stmt 1 view .LVU68
 217              		.loc 1 163 25 is_stmt 0 view .LVU69
 218 00d6 0669     		ldr	r6, [r0, #16]
 219              		.loc 1 163 17 view .LVU70
 220 00d8 0123     		movs	r3, #1
 221 00da 0DF10702 		add	r2, sp, #7
 222 00de 0721     		movs	r1, #7
 223 00e0 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 224 00e2 B047     		blx	r6
 225              	.LVL23:
 226              		.loc 1 163 14 view .LVU71
 227 00e4 55FA80F0 		uxtab	r0, r5, r0
 228              	.LVL24:
 164:Core/Src/bno055.c ****                                                BNO055_PAGE_ID_REG,
 165:Core/Src/bno055.c ****                                                &data_u8,
 166:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 167:Core/Src/bno055.c ****     p_bno055->page_id = data_u8;
 229              		.loc 1 167 5 is_stmt 1 view .LVU72
 230              		.loc 1 167 13 is_stmt 0 view .LVU73
 231 00e8 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccWoU29M.s 			page 8


 232              		.loc 1 167 23 view .LVU74
 233 00ea 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 234 00ee 1A71     		strb	r2, [r3, #4]
 168:Core/Src/bno055.c **** 
 169:Core/Src/bno055.c ****     return com_rslt;
 235              		.loc 1 169 5 is_stmt 1 view .LVU75
 170:Core/Src/bno055.c **** }
 236              		.loc 1 170 1 is_stmt 0 view .LVU76
 237 00f0 40B2     		sxtb	r0, r0
 238              		.loc 1 170 1 view .LVU77
 239 00f2 03B0     		add	sp, sp, #12
 240              	.LCFI2:
 241              		.cfi_def_cfa_offset 20
 242              		@ sp needed
 243 00f4 F0BD     		pop	{r4, r5, r6, r7, pc}
 244              	.L4:
 245 00f6 00BF     		.align	2
 246              	.L3:
 247 00f8 00000000 		.word	.LANCHOR0
 248              		.cfi_endproc
 249              	.LFE0:
 251              		.section	.text.bno055_write_register,"ax",%progbits
 252              		.align	1
 253              		.global	bno055_write_register
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 257              		.fpu fpv4-sp-d16
 259              	bno055_write_register:
 260              	.LVL25:
 261              	.LFB1:
 171:Core/Src/bno055.c **** 
 172:Core/Src/bno055.c **** /*!
 173:Core/Src/bno055.c ****  *  @brief
 174:Core/Src/bno055.c ****  *  This API gives data to the given register and
 175:Core/Src/bno055.c ****  *  the data is written in the corresponding register address
 176:Core/Src/bno055.c ****  *
 177:Core/Src/bno055.c ****  *  @param addr_u8 : Address of the register
 178:Core/Src/bno055.c ****  *  @param data_u8 : Data to be written to the register
 179:Core/Src/bno055.c ****  *  @param len_u8  : Length of the Data
 180:Core/Src/bno055.c ****  *
 181:Core/Src/bno055.c ****  *  @return results of bus communication function
 182:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 183:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 184:Core/Src/bno055.c ****  *
 185:Core/Src/bno055.c ****  *
 186:Core/Src/bno055.c ****  */
 187:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_register(u8 addr_u8, u8 *data_u8, u8 len_u8)
 188:Core/Src/bno055.c **** {
 262              		.loc 1 188 1 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		.loc 1 188 1 is_stmt 0 view .LVU79
 267 0000 38B5     		push	{r3, r4, r5, lr}
 268              	.LCFI3:
 269              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccWoU29M.s 			page 9


 270              		.cfi_offset 3, -16
 271              		.cfi_offset 4, -12
 272              		.cfi_offset 5, -8
 273              		.cfi_offset 14, -4
 274 0002 1346     		mov	r3, r2
 189:Core/Src/bno055.c ****     /* Variable used to return value of
 190:Core/Src/bno055.c ****      * communication routine*/
 191:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 275              		.loc 1 191 5 is_stmt 1 view .LVU80
 276              	.LVL26:
 192:Core/Src/bno055.c **** 
 193:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 194:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 277              		.loc 1 194 5 view .LVU81
 278              		.loc 1 194 18 is_stmt 0 view .LVU82
 279 0004 054A     		ldr	r2, .L9
 280              	.LVL27:
 281              		.loc 1 194 18 view .LVU83
 282 0006 1468     		ldr	r4, [r2]
 283              		.loc 1 194 8 view .LVU84
 284 0008 2CB1     		cbz	r4, .L7
 195:Core/Src/bno055.c ****     {
 196:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 197:Core/Src/bno055.c ****     }
 198:Core/Src/bno055.c ****     else
 199:Core/Src/bno055.c ****     {
 200:Core/Src/bno055.c ****         /* Write the values of respective given register */
 201:Core/Src/bno055.c ****         com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr, addr_u8, data_u8, len_u8);
 285              		.loc 1 201 9 is_stmt 1 view .LVU85
 286              		.loc 1 201 28 is_stmt 0 view .LVU86
 287 000a E568     		ldr	r5, [r4, #12]
 288              		.loc 1 201 20 view .LVU87
 289 000c 0A46     		mov	r2, r1
 290 000e 0146     		mov	r1, r0
 291              	.LVL28:
 292              		.loc 1 201 20 view .LVU88
 293 0010 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 294              	.LVL29:
 295              		.loc 1 201 20 view .LVU89
 296 0012 A847     		blx	r5
 297              	.LVL30:
 202:Core/Src/bno055.c ****     }
 203:Core/Src/bno055.c **** 
 204:Core/Src/bno055.c ****     return com_rslt;
 298              		.loc 1 204 5 is_stmt 1 view .LVU90
 299              	.L6:
 205:Core/Src/bno055.c **** }
 300              		.loc 1 205 1 is_stmt 0 view .LVU91
 301 0014 38BD     		pop	{r3, r4, r5, pc}
 302              	.LVL31:
 303              	.L7:
 196:Core/Src/bno055.c ****     }
 304              		.loc 1 196 16 view .LVU92
 305 0016 6FF07E00 		mvn	r0, #126
 306              	.LVL32:
 196:Core/Src/bno055.c ****     }
 307              		.loc 1 196 16 view .LVU93
ARM GAS  /tmp/ccWoU29M.s 			page 10


 308 001a FBE7     		b	.L6
 309              	.L10:
 310              		.align	2
 311              	.L9:
 312 001c 00000000 		.word	.LANCHOR0
 313              		.cfi_endproc
 314              	.LFE1:
 316              		.section	.text.bno055_read_register,"ax",%progbits
 317              		.align	1
 318              		.global	bno055_read_register
 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
 322              		.fpu fpv4-sp-d16
 324              	bno055_read_register:
 325              	.LVL33:
 326              	.LFB2:
 206:Core/Src/bno055.c **** 
 207:Core/Src/bno055.c **** /*!
 208:Core/Src/bno055.c ****  *  @brief This API reads the data from
 209:Core/Src/bno055.c ****  *  the given register address
 210:Core/Src/bno055.c ****  *
 211:Core/Src/bno055.c ****  *  @param addr_u8 : Address of the register
 212:Core/Src/bno055.c ****  *  @param data_u8 : address of the variable,
 213:Core/Src/bno055.c ****  *  read value will be kept
 214:Core/Src/bno055.c ****  *  @param len_u8  : Length of the data
 215:Core/Src/bno055.c ****  *
 216:Core/Src/bno055.c ****  *
 217:Core/Src/bno055.c ****  *  @return results of bus communication function
 218:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 219:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 220:Core/Src/bno055.c ****  *
 221:Core/Src/bno055.c ****  */
 222:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_register(u8 addr_u8, u8 *data_u8, u8 len_u8)
 223:Core/Src/bno055.c **** {
 327              		.loc 1 223 1 is_stmt 1 view -0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              		.loc 1 223 1 is_stmt 0 view .LVU95
 332 0000 38B5     		push	{r3, r4, r5, lr}
 333              	.LCFI4:
 334              		.cfi_def_cfa_offset 16
 335              		.cfi_offset 3, -16
 336              		.cfi_offset 4, -12
 337              		.cfi_offset 5, -8
 338              		.cfi_offset 14, -4
 339 0002 1346     		mov	r3, r2
 224:Core/Src/bno055.c ****     /* Variable used to return value of
 225:Core/Src/bno055.c ****      * communication routine*/
 226:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 340              		.loc 1 226 5 is_stmt 1 view .LVU96
 341              	.LVL34:
 227:Core/Src/bno055.c **** 
 228:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 229:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 342              		.loc 1 229 5 view .LVU97
ARM GAS  /tmp/ccWoU29M.s 			page 11


 343              		.loc 1 229 18 is_stmt 0 view .LVU98
 344 0004 054A     		ldr	r2, .L15
 345              	.LVL35:
 346              		.loc 1 229 18 view .LVU99
 347 0006 1468     		ldr	r4, [r2]
 348              		.loc 1 229 8 view .LVU100
 349 0008 2CB1     		cbz	r4, .L13
 230:Core/Src/bno055.c ****     {
 231:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 232:Core/Src/bno055.c ****     }
 233:Core/Src/bno055.c ****     else
 234:Core/Src/bno055.c ****     {
 235:Core/Src/bno055.c ****         /* Read the value from given register*/
 236:Core/Src/bno055.c ****         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr, addr_u8, data_u8, len_u8);
 350              		.loc 1 236 9 is_stmt 1 view .LVU101
 351              		.loc 1 236 28 is_stmt 0 view .LVU102
 352 000a 2569     		ldr	r5, [r4, #16]
 353              		.loc 1 236 20 view .LVU103
 354 000c 0A46     		mov	r2, r1
 355 000e 0146     		mov	r1, r0
 356              	.LVL36:
 357              		.loc 1 236 20 view .LVU104
 358 0010 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 359              	.LVL37:
 360              		.loc 1 236 20 view .LVU105
 361 0012 A847     		blx	r5
 362              	.LVL38:
 237:Core/Src/bno055.c ****     }
 238:Core/Src/bno055.c **** 
 239:Core/Src/bno055.c ****     return com_rslt;
 363              		.loc 1 239 5 is_stmt 1 view .LVU106
 364              	.L12:
 240:Core/Src/bno055.c **** }
 365              		.loc 1 240 1 is_stmt 0 view .LVU107
 366 0014 38BD     		pop	{r3, r4, r5, pc}
 367              	.LVL39:
 368              	.L13:
 231:Core/Src/bno055.c ****     }
 369              		.loc 1 231 16 view .LVU108
 370 0016 6FF07E00 		mvn	r0, #126
 371              	.LVL40:
 231:Core/Src/bno055.c ****     }
 372              		.loc 1 231 16 view .LVU109
 373 001a FBE7     		b	.L12
 374              	.L16:
 375              		.align	2
 376              	.L15:
 377 001c 00000000 		.word	.LANCHOR0
 378              		.cfi_endproc
 379              	.LFE2:
 381              		.section	.text.bno055_read_page_id,"ax",%progbits
 382              		.align	1
 383              		.global	bno055_read_page_id
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 387              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccWoU29M.s 			page 12


 389              	bno055_read_page_id:
 390              	.LVL41:
 391              	.LFB5:
 241:Core/Src/bno055.c **** 
 242:Core/Src/bno055.c **** /*!
 243:Core/Src/bno055.c ****  *  @brief This API reads chip id
 244:Core/Src/bno055.c ****  *  from register 0x00 it is a byte of data
 245:Core/Src/bno055.c ****  *
 246:Core/Src/bno055.c ****  *
 247:Core/Src/bno055.c ****  *  @param chip_id_u8 : The chip id value 0xA0
 248:Core/Src/bno055.c ****  *
 249:Core/Src/bno055.c ****  *  @return results of bus communication function
 250:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 251:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 252:Core/Src/bno055.c ****  */
 253:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_chip_id(u8 *chip_id_u8)
 254:Core/Src/bno055.c **** {
 255:Core/Src/bno055.c ****     /* Variable used to return value of
 256:Core/Src/bno055.c ****      * communication routine*/
 257:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 258:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 259:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 260:Core/Src/bno055.c **** 
 261:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 262:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 263:Core/Src/bno055.c ****     {
 264:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 265:Core/Src/bno055.c ****     }
 266:Core/Src/bno055.c ****     else
 267:Core/Src/bno055.c ****     {
 268:Core/Src/bno055.c ****         /*condition check for page, chip id is
 269:Core/Src/bno055.c ****          * available in the page zero*/
 270:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 271:Core/Src/bno055.c ****         {
 272:Core/Src/bno055.c ****             /* Write the page zero*/
 273:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 274:Core/Src/bno055.c ****         }
 275:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 276:Core/Src/bno055.c ****         {
 277:Core/Src/bno055.c ****             /* Read the chip id*/
 278:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 279:Core/Src/bno055.c ****                                                       BNO055_CHIP_ID_REG,
 280:Core/Src/bno055.c ****                                                       &data_u8,
 281:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 282:Core/Src/bno055.c ****             *chip_id_u8 = data_u8;
 283:Core/Src/bno055.c ****         }
 284:Core/Src/bno055.c ****         else
 285:Core/Src/bno055.c ****         {
 286:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 287:Core/Src/bno055.c ****         }
 288:Core/Src/bno055.c ****     }
 289:Core/Src/bno055.c **** 
 290:Core/Src/bno055.c ****     return com_rslt;
 291:Core/Src/bno055.c **** }
 292:Core/Src/bno055.c **** 
 293:Core/Src/bno055.c **** /*!
 294:Core/Src/bno055.c ****  *  @brief This API reads software revision id
ARM GAS  /tmp/ccWoU29M.s 			page 13


 295:Core/Src/bno055.c ****  *  from register 0x04 and 0x05 it is a two byte of data
 296:Core/Src/bno055.c ****  *
 297:Core/Src/bno055.c ****  *  @param sw_id_u8 : The SW revision id
 298:Core/Src/bno055.c ****  *
 299:Core/Src/bno055.c ****  *  @return results of bus communication function
 300:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 301:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 302:Core/Src/bno055.c ****  *
 303:Core/Src/bno055.c ****  *
 304:Core/Src/bno055.c ****  */
 305:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_sw_rev_id(u16 *sw_id_u8)
 306:Core/Src/bno055.c **** {
 307:Core/Src/bno055.c ****     /* Variable used to return value of
 308:Core/Src/bno055.c ****      * communication routine*/
 309:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 310:Core/Src/bno055.c **** 
 311:Core/Src/bno055.c ****     /* array having the software revision id
 312:Core/Src/bno055.c ****      * data_u8[0] - LSB
 313:Core/Src/bno055.c ****      * data_u8[1] - MSB*/
 314:Core/Src/bno055.c ****     u8 data_u8[BNO055_REV_ID_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 315:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 316:Core/Src/bno055.c **** 
 317:Core/Src/bno055.c ****     /* Check the struct  p_bno055 is empty*/
 318:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 319:Core/Src/bno055.c ****     {
 320:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 321:Core/Src/bno055.c ****     }
 322:Core/Src/bno055.c ****     else
 323:Core/Src/bno055.c ****     {
 324:Core/Src/bno055.c ****         /*condition check for page, chip id is
 325:Core/Src/bno055.c ****          * available in the page zero*/
 326:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 327:Core/Src/bno055.c ****         {
 328:Core/Src/bno055.c ****             /* Write the page zero*/
 329:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 330:Core/Src/bno055.c ****         }
 331:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 332:Core/Src/bno055.c ****         {
 333:Core/Src/bno055.c ****             /* Read the two byte value of software
 334:Core/Src/bno055.c ****              * revision id*/
 335:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 336:Core/Src/bno055.c ****                                                       BNO055_SW_REV_ID_LSB_REG,
 337:Core/Src/bno055.c ****                                                       data_u8,
 338:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
 339:Core/Src/bno055.c ****             data_u8[BNO055_SW_ID_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SW_ID_LSB], BNO055_SW_RE
 340:Core/Src/bno055.c ****             *sw_id_u8 =
 341:Core/Src/bno055.c ****                 (u16)((((u32)((u8)data_u8[BNO055_SW_ID_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 342:Core/Src/bno055.c ****                       (data_u8[BNO055_SW_ID_LSB]));
 343:Core/Src/bno055.c ****         }
 344:Core/Src/bno055.c ****         else
 345:Core/Src/bno055.c ****         {
 346:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 347:Core/Src/bno055.c ****         }
 348:Core/Src/bno055.c ****     }
 349:Core/Src/bno055.c **** 
 350:Core/Src/bno055.c ****     return com_rslt;
 351:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccWoU29M.s 			page 14


 352:Core/Src/bno055.c **** 
 353:Core/Src/bno055.c **** /*!
 354:Core/Src/bno055.c ****  *  @brief This API reads page id
 355:Core/Src/bno055.c ****  *  from register 0x07 it is a byte of data
 356:Core/Src/bno055.c ****  *
 357:Core/Src/bno055.c ****  *
 358:Core/Src/bno055.c ****  *  @param page_id_u8 : The value of page id
 359:Core/Src/bno055.c ****  *
 360:Core/Src/bno055.c ****  *  BNO055_PAGE_ZERO -> 0x00
 361:Core/Src/bno055.c ****  *  BNO055_PAGE_ONE  -> 0x01
 362:Core/Src/bno055.c ****  *
 363:Core/Src/bno055.c ****  *  @return results of bus communication function
 364:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 365:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 366:Core/Src/bno055.c ****  *
 367:Core/Src/bno055.c ****  *
 368:Core/Src/bno055.c ****  */
 369:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_page_id(u8 *page_id_u8)
 370:Core/Src/bno055.c **** {
 392              		.loc 1 370 1 is_stmt 1 view -0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 8
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              		.loc 1 370 1 is_stmt 0 view .LVU111
 397 0000 70B5     		push	{r4, r5, r6, lr}
 398              	.LCFI5:
 399              		.cfi_def_cfa_offset 16
 400              		.cfi_offset 4, -16
 401              		.cfi_offset 5, -12
 402              		.cfi_offset 6, -8
 403              		.cfi_offset 14, -4
 404 0002 82B0     		sub	sp, sp, #8
 405              	.LCFI6:
 406              		.cfi_def_cfa_offset 24
 371:Core/Src/bno055.c ****     /* Variable used to return value of
 372:Core/Src/bno055.c ****      * communication routine*/
 373:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 407              		.loc 1 373 5 is_stmt 1 view .LVU112
 408              	.LVL42:
 374:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 409              		.loc 1 374 5 view .LVU113
 410              		.loc 1 374 8 is_stmt 0 view .LVU114
 411 0004 0023     		movs	r3, #0
 412 0006 8DF80730 		strb	r3, [sp, #7]
 375:Core/Src/bno055.c **** 
 376:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 377:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 413              		.loc 1 377 5 is_stmt 1 view .LVU115
 414              		.loc 1 377 18 is_stmt 0 view .LVU116
 415 000a 0D4B     		ldr	r3, .L22
 416 000c 1C68     		ldr	r4, [r3]
 417              		.loc 1 377 8 view .LVU117
 418 000e 84B1     		cbz	r4, .L19
 419 0010 0546     		mov	r5, r0
 378:Core/Src/bno055.c ****     {
 379:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 380:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 15


 381:Core/Src/bno055.c ****     else
 382:Core/Src/bno055.c ****     {
 383:Core/Src/bno055.c ****         /* Read the page id form 0x07*/
 384:Core/Src/bno055.c ****         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 420              		.loc 1 384 9 is_stmt 1 view .LVU118
 421              		.loc 1 384 28 is_stmt 0 view .LVU119
 422 0012 2669     		ldr	r6, [r4, #16]
 423              		.loc 1 384 20 view .LVU120
 424 0014 0123     		movs	r3, #1
 425 0016 0DF10702 		add	r2, sp, #7
 426 001a 0721     		movs	r1, #7
 427 001c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 428              	.LVL43:
 429              		.loc 1 384 20 view .LVU121
 430 001e B047     		blx	r6
 431              	.LVL44:
 385:Core/Src/bno055.c ****                                                   BNO055_PAGE_ID_REG,
 386:Core/Src/bno055.c ****                                                   &data_u8,
 387:Core/Src/bno055.c ****                                                   BNO055_GEN_READ_WRITE_LENGTH);
 388:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 432              		.loc 1 388 9 is_stmt 1 view .LVU122
 433              		.loc 1 388 12 is_stmt 0 view .LVU123
 434 0020 50B9     		cbnz	r0, .L20
 389:Core/Src/bno055.c ****         {
 390:Core/Src/bno055.c ****             data_u8 = BNO055_GET_BITSLICE(data_u8, BNO055_PAGE_ID);
 435              		.loc 1 390 13 is_stmt 1 view .LVU124
 436              		.loc 1 390 21 is_stmt 0 view .LVU125
 437 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 391:Core/Src/bno055.c ****             *page_id_u8 = data_u8;
 438              		.loc 1 391 13 is_stmt 1 view .LVU126
 439              		.loc 1 391 25 is_stmt 0 view .LVU127
 440 0026 2B70     		strb	r3, [r5]
 392:Core/Src/bno055.c ****             p_bno055->page_id = data_u8;
 441              		.loc 1 392 13 is_stmt 1 view .LVU128
 442              		.loc 1 392 21 is_stmt 0 view .LVU129
 443 0028 054A     		ldr	r2, .L22
 444 002a 1268     		ldr	r2, [r2]
 445              		.loc 1 392 31 view .LVU130
 446 002c 1371     		strb	r3, [r2, #4]
 447              	.LVL45:
 448              	.L18:
 393:Core/Src/bno055.c ****         }
 394:Core/Src/bno055.c ****         else
 395:Core/Src/bno055.c ****         {
 396:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 397:Core/Src/bno055.c ****         }
 398:Core/Src/bno055.c ****     }
 399:Core/Src/bno055.c **** 
 400:Core/Src/bno055.c ****     return com_rslt;
 401:Core/Src/bno055.c **** }
 449              		.loc 1 401 1 view .LVU131
 450 002e 02B0     		add	sp, sp, #8
 451              	.LCFI7:
 452              		.cfi_remember_state
 453              		.cfi_def_cfa_offset 16
 454              		@ sp needed
 455 0030 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccWoU29M.s 			page 16


 456              	.LVL46:
 457              	.L19:
 458              	.LCFI8:
 459              		.cfi_restore_state
 379:Core/Src/bno055.c ****     }
 460              		.loc 1 379 16 view .LVU132
 461 0032 6FF07E00 		mvn	r0, #126
 462              	.LVL47:
 379:Core/Src/bno055.c ****     }
 463              		.loc 1 379 16 view .LVU133
 464 0036 FAE7     		b	.L18
 465              	.LVL48:
 466              	.L20:
 396:Core/Src/bno055.c ****         }
 467              		.loc 1 396 22 view .LVU134
 468 0038 4FF0FF30 		mov	r0, #-1
 469              	.LVL49:
 396:Core/Src/bno055.c ****         }
 470              		.loc 1 396 22 view .LVU135
 471 003c F7E7     		b	.L18
 472              	.L23:
 473 003e 00BF     		.align	2
 474              	.L22:
 475 0040 00000000 		.word	.LANCHOR0
 476              		.cfi_endproc
 477              	.LFE5:
 479              		.section	.text.bno055_write_page_id,"ax",%progbits
 480              		.align	1
 481              		.global	bno055_write_page_id
 482              		.syntax unified
 483              		.thumb
 484              		.thumb_func
 485              		.fpu fpv4-sp-d16
 487              	bno055_write_page_id:
 488              	.LVL50:
 489              	.LFB6:
 402:Core/Src/bno055.c **** 
 403:Core/Src/bno055.c **** /*!
 404:Core/Src/bno055.c ****  *  @brief This API used to write
 405:Core/Src/bno055.c ****  *  the page id register 0x07
 406:Core/Src/bno055.c ****  *
 407:Core/Src/bno055.c ****  *  @param page_id_u8 : The value of page id
 408:Core/Src/bno055.c ****  *
 409:Core/Src/bno055.c ****  *  BNO055_PAGE_ZERO -> 0x00
 410:Core/Src/bno055.c ****  *  BNO055_PAGE_ONE  -> 0x01
 411:Core/Src/bno055.c ****  *
 412:Core/Src/bno055.c ****  *  @return results of bus communication function
 413:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 414:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 415:Core/Src/bno055.c ****  *
 416:Core/Src/bno055.c ****  *
 417:Core/Src/bno055.c ****  */
 418:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_page_id(u8 page_id_u8)
 419:Core/Src/bno055.c **** {
 490              		.loc 1 419 1 is_stmt 1 view -0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccWoU29M.s 			page 17


 493              		@ frame_needed = 0, uses_anonymous_args = 0
 494              		.loc 1 419 1 is_stmt 0 view .LVU137
 495 0000 70B5     		push	{r4, r5, r6, lr}
 496              	.LCFI9:
 497              		.cfi_def_cfa_offset 16
 498              		.cfi_offset 4, -16
 499              		.cfi_offset 5, -12
 500              		.cfi_offset 6, -8
 501              		.cfi_offset 14, -4
 502 0002 82B0     		sub	sp, sp, #8
 503              	.LCFI10:
 504              		.cfi_def_cfa_offset 24
 505 0004 0446     		mov	r4, r0
 420:Core/Src/bno055.c ****     /* Variable used to return value of
 421:Core/Src/bno055.c ****      * communication routine*/
 422:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 506              		.loc 1 422 5 is_stmt 1 view .LVU138
 507              	.LVL51:
 423:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 508              		.loc 1 423 5 view .LVU139
 509              		.loc 1 423 8 is_stmt 0 view .LVU140
 510 0006 0023     		movs	r3, #0
 511 0008 8DF80730 		strb	r3, [sp, #7]
 424:Core/Src/bno055.c **** 
 425:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 426:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 512              		.loc 1 426 5 is_stmt 1 view .LVU141
 513              		.loc 1 426 18 is_stmt 0 view .LVU142
 514 000c 124B     		ldr	r3, .L29
 515 000e 1868     		ldr	r0, [r3]
 516              	.LVL52:
 517              		.loc 1 426 8 view .LVU143
 518 0010 E0B1     		cbz	r0, .L26
 427:Core/Src/bno055.c ****     {
 428:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 429:Core/Src/bno055.c ****     }
 430:Core/Src/bno055.c ****     else
 431:Core/Src/bno055.c ****     {
 432:Core/Src/bno055.c ****         /* Read the current page*/
 433:Core/Src/bno055.c ****         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 519              		.loc 1 433 9 is_stmt 1 view .LVU144
 520              		.loc 1 433 28 is_stmt 0 view .LVU145
 521 0012 0569     		ldr	r5, [r0, #16]
 522              		.loc 1 433 20 view .LVU146
 523 0014 0123     		movs	r3, #1
 524 0016 0DF10702 		add	r2, sp, #7
 525 001a 0721     		movs	r1, #7
 526 001c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 527 001e A847     		blx	r5
 528              	.LVL53:
 434:Core/Src/bno055.c ****                                                   BNO055_PAGE_ID_REG,
 435:Core/Src/bno055.c ****                                                   &data_u8r,
 436:Core/Src/bno055.c ****                                                   BNO055_GEN_READ_WRITE_LENGTH);
 437:Core/Src/bno055.c **** 
 438:Core/Src/bno055.c ****         /* Check condition for communication BNO055_SUCCESS*/
 439:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 529              		.loc 1 439 9 is_stmt 1 view .LVU147
ARM GAS  /tmp/ccWoU29M.s 			page 18


 530              		.loc 1 439 12 is_stmt 0 view .LVU148
 531 0020 0546     		mov	r5, r0
 532 0022 B0B9     		cbnz	r0, .L27
 440:Core/Src/bno055.c ****         {
 441:Core/Src/bno055.c ****             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_PAGE_ID, page_id_u8);
 533              		.loc 1 441 13 is_stmt 1 view .LVU149
 534              		.loc 1 441 22 is_stmt 0 view .LVU150
 535 0024 8DF80740 		strb	r4, [sp, #7]
 442:Core/Src/bno055.c **** 
 443:Core/Src/bno055.c ****             /* Write the page id*/
 444:Core/Src/bno055.c ****             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 536              		.loc 1 444 13 is_stmt 1 view .LVU151
 537              		.loc 1 444 33 is_stmt 0 view .LVU152
 538 0028 0B4B     		ldr	r3, .L29
 539 002a 1868     		ldr	r0, [r3]
 540              	.LVL54:
 541              		.loc 1 444 33 view .LVU153
 542 002c C668     		ldr	r6, [r0, #12]
 543              		.loc 1 444 25 view .LVU154
 544 002e 0123     		movs	r3, #1
 545 0030 0DF10702 		add	r2, sp, #7
 546 0034 0721     		movs	r1, #7
 547 0036 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 548 0038 B047     		blx	r6
 549              	.LVL55:
 550              		.loc 1 444 22 view .LVU155
 551 003a 55FA80F3 		uxtab	r3, r5, r0
 552 003e 58B2     		sxtb	r0, r3
 553              	.LVL56:
 445:Core/Src/bno055.c ****                                                         BNO055_PAGE_ID_REG,
 446:Core/Src/bno055.c ****                                                         &data_u8r,
 447:Core/Src/bno055.c ****                                                         BNO055_GEN_READ_WRITE_LENGTH);
 448:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 554              		.loc 1 448 13 is_stmt 1 view .LVU156
 555              		.loc 1 448 16 is_stmt 0 view .LVU157
 556 0040 10B9     		cbnz	r0, .L25
 449:Core/Src/bno055.c ****             {
 450:Core/Src/bno055.c ****                 p_bno055->page_id = page_id_u8;
 557              		.loc 1 450 17 is_stmt 1 view .LVU158
 558              		.loc 1 450 25 is_stmt 0 view .LVU159
 559 0042 054B     		ldr	r3, .L29
 560 0044 1B68     		ldr	r3, [r3]
 561              		.loc 1 450 35 view .LVU160
 562 0046 1C71     		strb	r4, [r3, #4]
 563              	.LVL57:
 564              	.L25:
 451:Core/Src/bno055.c ****             }
 452:Core/Src/bno055.c ****         }
 453:Core/Src/bno055.c ****         else
 454:Core/Src/bno055.c ****         {
 455:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 456:Core/Src/bno055.c ****         }
 457:Core/Src/bno055.c ****     }
 458:Core/Src/bno055.c **** 
 459:Core/Src/bno055.c ****     return com_rslt;
 460:Core/Src/bno055.c **** }
 565              		.loc 1 460 1 view .LVU161
ARM GAS  /tmp/ccWoU29M.s 			page 19


 566 0048 02B0     		add	sp, sp, #8
 567              	.LCFI11:
 568              		.cfi_remember_state
 569              		.cfi_def_cfa_offset 16
 570              		@ sp needed
 571 004a 70BD     		pop	{r4, r5, r6, pc}
 572              	.LVL58:
 573              	.L26:
 574              	.LCFI12:
 575              		.cfi_restore_state
 428:Core/Src/bno055.c ****     }
 576              		.loc 1 428 16 view .LVU162
 577 004c 6FF07E00 		mvn	r0, #126
 578 0050 FAE7     		b	.L25
 579              	.LVL59:
 580              	.L27:
 455:Core/Src/bno055.c ****         }
 581              		.loc 1 455 22 view .LVU163
 582 0052 4FF0FF30 		mov	r0, #-1
 583              	.LVL60:
 455:Core/Src/bno055.c ****         }
 584              		.loc 1 455 22 view .LVU164
 585 0056 F7E7     		b	.L25
 586              	.L30:
 587              		.align	2
 588              	.L29:
 589 0058 00000000 		.word	.LANCHOR0
 590              		.cfi_endproc
 591              	.LFE6:
 593              		.section	.text.bno055_read_chip_id,"ax",%progbits
 594              		.align	1
 595              		.global	bno055_read_chip_id
 596              		.syntax unified
 597              		.thumb
 598              		.thumb_func
 599              		.fpu fpv4-sp-d16
 601              	bno055_read_chip_id:
 602              	.LVL61:
 603              	.LFB3:
 254:Core/Src/bno055.c ****     /* Variable used to return value of
 604              		.loc 1 254 1 is_stmt 1 view -0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 8
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 254:Core/Src/bno055.c ****     /* Variable used to return value of
 608              		.loc 1 254 1 is_stmt 0 view .LVU166
 609 0000 70B5     		push	{r4, r5, r6, lr}
 610              	.LCFI13:
 611              		.cfi_def_cfa_offset 16
 612              		.cfi_offset 4, -16
 613              		.cfi_offset 5, -12
 614              		.cfi_offset 6, -8
 615              		.cfi_offset 14, -4
 616 0002 82B0     		sub	sp, sp, #8
 617              	.LCFI14:
 618              		.cfi_def_cfa_offset 24
 257:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccWoU29M.s 			page 20


 619              		.loc 1 257 5 is_stmt 1 view .LVU167
 620              	.LVL62:
 258:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 621              		.loc 1 258 5 view .LVU168
 258:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 622              		.loc 1 258 8 is_stmt 0 view .LVU169
 623 0004 0023     		movs	r3, #0
 624 0006 8DF80730 		strb	r3, [sp, #7]
 259:Core/Src/bno055.c **** 
 625              		.loc 1 259 5 is_stmt 1 view .LVU170
 626              	.LVL63:
 262:Core/Src/bno055.c ****     {
 627              		.loc 1 262 5 view .LVU171
 262:Core/Src/bno055.c ****     {
 628              		.loc 1 262 18 is_stmt 0 view .LVU172
 629 000a 124B     		ldr	r3, .L39
 630 000c 1B68     		ldr	r3, [r3]
 262:Core/Src/bno055.c ****     {
 631              		.loc 1 262 8 view .LVU173
 632 000e D3B1     		cbz	r3, .L35
 633 0010 0546     		mov	r5, r0
 270:Core/Src/bno055.c ****         {
 634              		.loc 1 270 9 is_stmt 1 view .LVU174
 270:Core/Src/bno055.c ****         {
 635              		.loc 1 270 21 is_stmt 0 view .LVU175
 636 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 270:Core/Src/bno055.c ****         {
 637              		.loc 1 270 12 view .LVU176
 638 0014 8BB9     		cbnz	r3, .L38
 639              	.LVL64:
 640              	.L33:
 275:Core/Src/bno055.c ****         {
 641              		.loc 1 275 53 discriminator 1 view .LVU177
 642 0016 0F4B     		ldr	r3, .L39
 643 0018 1B68     		ldr	r3, [r3]
 644 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 275:Core/Src/bno055.c ****         {
 645              		.loc 1 275 41 discriminator 1 view .LVU178
 646 001c B3B9     		cbnz	r3, .L36
 647              	.L34:
 278:Core/Src/bno055.c ****                                                       BNO055_CHIP_ID_REG,
 648              		.loc 1 278 13 is_stmt 1 view .LVU179
 278:Core/Src/bno055.c ****                                                       BNO055_CHIP_ID_REG,
 649              		.loc 1 278 32 is_stmt 0 view .LVU180
 650 001e 0D4B     		ldr	r3, .L39
 651 0020 1C68     		ldr	r4, [r3]
 652 0022 2669     		ldr	r6, [r4, #16]
 278:Core/Src/bno055.c ****                                                       BNO055_CHIP_ID_REG,
 653              		.loc 1 278 24 view .LVU181
 654 0024 0123     		movs	r3, #1
 655 0026 0DF10702 		add	r2, sp, #7
 656 002a 0021     		movs	r1, #0
 657 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 658 002e B047     		blx	r6
 659              	.LVL65:
 282:Core/Src/bno055.c ****         }
 660              		.loc 1 282 13 is_stmt 1 view .LVU182
ARM GAS  /tmp/ccWoU29M.s 			page 21


 282:Core/Src/bno055.c ****         }
 661              		.loc 1 282 25 is_stmt 0 view .LVU183
 662 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 663 0034 2B70     		strb	r3, [r5]
 664              	.LVL66:
 665              	.L32:
 291:Core/Src/bno055.c **** 
 666              		.loc 1 291 1 view .LVU184
 667 0036 02B0     		add	sp, sp, #8
 668              	.LCFI15:
 669              		.cfi_remember_state
 670              		.cfi_def_cfa_offset 16
 671              		@ sp needed
 672 0038 70BD     		pop	{r4, r5, r6, pc}
 673              	.LVL67:
 674              	.L38:
 675              	.LCFI16:
 676              		.cfi_restore_state
 273:Core/Src/bno055.c ****         }
 677              		.loc 1 273 13 is_stmt 1 view .LVU185
 273:Core/Src/bno055.c ****         }
 678              		.loc 1 273 23 is_stmt 0 view .LVU186
 679 003a 0020     		movs	r0, #0
 680              	.LVL68:
 273:Core/Src/bno055.c ****         }
 681              		.loc 1 273 23 view .LVU187
 682 003c FFF7FEFF 		bl	bno055_write_page_id
 683              	.LVL69:
 275:Core/Src/bno055.c ****         {
 684              		.loc 1 275 9 is_stmt 1 view .LVU188
 275:Core/Src/bno055.c ****         {
 685              		.loc 1 275 12 is_stmt 0 view .LVU189
 686 0040 0028     		cmp	r0, #0
 687 0042 ECD0     		beq	.L34
 688 0044 E7E7     		b	.L33
 689              	.LVL70:
 690              	.L35:
 264:Core/Src/bno055.c ****     }
 691              		.loc 1 264 16 view .LVU190
 692 0046 6FF07E00 		mvn	r0, #126
 693              	.LVL71:
 264:Core/Src/bno055.c ****     }
 694              		.loc 1 264 16 view .LVU191
 695 004a F4E7     		b	.L32
 696              	.LVL72:
 697              	.L36:
 286:Core/Src/bno055.c ****         }
 698              		.loc 1 286 22 view .LVU192
 699 004c 4FF0FF30 		mov	r0, #-1
 700 0050 F1E7     		b	.L32
 701              	.L40:
 702 0052 00BF     		.align	2
 703              	.L39:
 704 0054 00000000 		.word	.LANCHOR0
 705              		.cfi_endproc
 706              	.LFE3:
 708              		.section	.text.bno055_read_sw_rev_id,"ax",%progbits
ARM GAS  /tmp/ccWoU29M.s 			page 22


 709              		.align	1
 710              		.global	bno055_read_sw_rev_id
 711              		.syntax unified
 712              		.thumb
 713              		.thumb_func
 714              		.fpu fpv4-sp-d16
 716              	bno055_read_sw_rev_id:
 717              	.LVL73:
 718              	.LFB4:
 306:Core/Src/bno055.c ****     /* Variable used to return value of
 719              		.loc 1 306 1 is_stmt 1 view -0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 8
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 306:Core/Src/bno055.c ****     /* Variable used to return value of
 723              		.loc 1 306 1 is_stmt 0 view .LVU194
 724 0000 30B5     		push	{r4, r5, lr}
 725              	.LCFI17:
 726              		.cfi_def_cfa_offset 12
 727              		.cfi_offset 4, -12
 728              		.cfi_offset 5, -8
 729              		.cfi_offset 14, -4
 730 0002 83B0     		sub	sp, sp, #12
 731              	.LCFI18:
 732              		.cfi_def_cfa_offset 24
 309:Core/Src/bno055.c **** 
 733              		.loc 1 309 5 is_stmt 1 view .LVU195
 734              	.LVL74:
 314:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 735              		.loc 1 314 5 view .LVU196
 314:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 736              		.loc 1 314 8 is_stmt 0 view .LVU197
 737 0004 0023     		movs	r3, #0
 738 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 315:Core/Src/bno055.c **** 
 739              		.loc 1 315 5 is_stmt 1 view .LVU198
 740              	.LVL75:
 318:Core/Src/bno055.c ****     {
 741              		.loc 1 318 5 view .LVU199
 318:Core/Src/bno055.c ****     {
 742              		.loc 1 318 18 is_stmt 0 view .LVU200
 743 000a 134B     		ldr	r3, .L49
 744 000c 1B68     		ldr	r3, [r3]
 318:Core/Src/bno055.c ****     {
 745              		.loc 1 318 8 view .LVU201
 746 000e EBB1     		cbz	r3, .L45
 747 0010 0446     		mov	r4, r0
 326:Core/Src/bno055.c ****         {
 748              		.loc 1 326 9 is_stmt 1 view .LVU202
 326:Core/Src/bno055.c ****         {
 749              		.loc 1 326 21 is_stmt 0 view .LVU203
 750 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 326:Core/Src/bno055.c ****         {
 751              		.loc 1 326 12 view .LVU204
 752 0014 A3B9     		cbnz	r3, .L48
 753              	.LVL76:
 754              	.L43:
ARM GAS  /tmp/ccWoU29M.s 			page 23


 331:Core/Src/bno055.c ****         {
 755              		.loc 1 331 53 discriminator 1 view .LVU205
 756 0016 104B     		ldr	r3, .L49
 757 0018 1B68     		ldr	r3, [r3]
 758 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 331:Core/Src/bno055.c ****         {
 759              		.loc 1 331 41 discriminator 1 view .LVU206
 760 001c CBB9     		cbnz	r3, .L46
 761              	.L44:
 335:Core/Src/bno055.c ****                                                       BNO055_SW_REV_ID_LSB_REG,
 762              		.loc 1 335 13 is_stmt 1 view .LVU207
 335:Core/Src/bno055.c ****                                                       BNO055_SW_REV_ID_LSB_REG,
 763              		.loc 1 335 32 is_stmt 0 view .LVU208
 764 001e 0E4B     		ldr	r3, .L49
 765 0020 1868     		ldr	r0, [r3]
 766 0022 0569     		ldr	r5, [r0, #16]
 335:Core/Src/bno055.c ****                                                       BNO055_SW_REV_ID_LSB_REG,
 767              		.loc 1 335 24 view .LVU209
 768 0024 0223     		movs	r3, #2
 769 0026 01AA     		add	r2, sp, #4
 770 0028 0421     		movs	r1, #4
 771 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 772 002c A847     		blx	r5
 773              	.LVL77:
 339:Core/Src/bno055.c ****             *sw_id_u8 =
 774              		.loc 1 339 13 is_stmt 1 view .LVU210
 340:Core/Src/bno055.c ****                 (u16)((((u32)((u8)data_u8[BNO055_SW_ID_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 775              		.loc 1 340 13 view .LVU211
 341:Core/Src/bno055.c ****                       (data_u8[BNO055_SW_ID_LSB]));
 776              		.loc 1 341 42 is_stmt 0 view .LVU212
 777 002e 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 342:Core/Src/bno055.c ****         }
 778              		.loc 1 342 31 view .LVU213
 779 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 341:Core/Src/bno055.c ****                       (data_u8[BNO055_SW_ID_LSB]));
 780              		.loc 1 341 17 view .LVU214
 781 0036 43EA0223 		orr	r3, r3, r2, lsl #8
 340:Core/Src/bno055.c ****                 (u16)((((u32)((u8)data_u8[BNO055_SW_ID_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 782              		.loc 1 340 23 view .LVU215
 783 003a 2380     		strh	r3, [r4]	@ movhi
 784              	.LVL78:
 785              	.L42:
 351:Core/Src/bno055.c **** 
 786              		.loc 1 351 1 view .LVU216
 787 003c 03B0     		add	sp, sp, #12
 788              	.LCFI19:
 789              		.cfi_remember_state
 790              		.cfi_def_cfa_offset 12
 791              		@ sp needed
 792 003e 30BD     		pop	{r4, r5, pc}
 793              	.LVL79:
 794              	.L48:
 795              	.LCFI20:
 796              		.cfi_restore_state
 329:Core/Src/bno055.c ****         }
 797              		.loc 1 329 13 is_stmt 1 view .LVU217
 329:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 24


 798              		.loc 1 329 23 is_stmt 0 view .LVU218
 799 0040 0020     		movs	r0, #0
 800              	.LVL80:
 329:Core/Src/bno055.c ****         }
 801              		.loc 1 329 23 view .LVU219
 802 0042 FFF7FEFF 		bl	bno055_write_page_id
 803              	.LVL81:
 331:Core/Src/bno055.c ****         {
 804              		.loc 1 331 9 is_stmt 1 view .LVU220
 331:Core/Src/bno055.c ****         {
 805              		.loc 1 331 12 is_stmt 0 view .LVU221
 806 0046 0028     		cmp	r0, #0
 807 0048 E9D0     		beq	.L44
 808 004a E4E7     		b	.L43
 809              	.LVL82:
 810              	.L45:
 320:Core/Src/bno055.c ****     }
 811              		.loc 1 320 16 view .LVU222
 812 004c 6FF07E00 		mvn	r0, #126
 813              	.LVL83:
 320:Core/Src/bno055.c ****     }
 814              		.loc 1 320 16 view .LVU223
 815 0050 F4E7     		b	.L42
 816              	.LVL84:
 817              	.L46:
 346:Core/Src/bno055.c ****         }
 818              		.loc 1 346 22 view .LVU224
 819 0052 4FF0FF30 		mov	r0, #-1
 820 0056 F1E7     		b	.L42
 821              	.L50:
 822              		.align	2
 823              	.L49:
 824 0058 00000000 		.word	.LANCHOR0
 825              		.cfi_endproc
 826              	.LFE4:
 828              		.section	.text.bno055_read_accel_rev_id,"ax",%progbits
 829              		.align	1
 830              		.global	bno055_read_accel_rev_id
 831              		.syntax unified
 832              		.thumb
 833              		.thumb_func
 834              		.fpu fpv4-sp-d16
 836              	bno055_read_accel_rev_id:
 837              	.LVL85:
 838              	.LFB7:
 461:Core/Src/bno055.c **** 
 462:Core/Src/bno055.c **** /*!
 463:Core/Src/bno055.c ****  *  @brief This API reads accel revision id
 464:Core/Src/bno055.c ****  *  from register 0x01 it is a byte of value
 465:Core/Src/bno055.c ****  *
 466:Core/Src/bno055.c ****  *  @param accel_rev_id_u8 : The accel revision id 0xFB
 467:Core/Src/bno055.c ****  *
 468:Core/Src/bno055.c ****  *  @return results of bus communication function
 469:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 470:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 471:Core/Src/bno055.c ****  *
 472:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 25


 473:Core/Src/bno055.c ****  */
 474:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_rev_id(u8 *accel_rev_id_u8)
 475:Core/Src/bno055.c **** {
 839              		.loc 1 475 1 is_stmt 1 view -0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 8
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843              		.loc 1 475 1 is_stmt 0 view .LVU226
 844 0000 70B5     		push	{r4, r5, r6, lr}
 845              	.LCFI21:
 846              		.cfi_def_cfa_offset 16
 847              		.cfi_offset 4, -16
 848              		.cfi_offset 5, -12
 849              		.cfi_offset 6, -8
 850              		.cfi_offset 14, -4
 851 0002 82B0     		sub	sp, sp, #8
 852              	.LCFI22:
 853              		.cfi_def_cfa_offset 24
 476:Core/Src/bno055.c ****     /* Variable used to return value of
 477:Core/Src/bno055.c ****      * communication routine*/
 478:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 854              		.loc 1 478 5 is_stmt 1 view .LVU227
 855              	.LVL86:
 479:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 856              		.loc 1 479 5 view .LVU228
 857              		.loc 1 479 8 is_stmt 0 view .LVU229
 858 0004 0023     		movs	r3, #0
 859 0006 8DF80730 		strb	r3, [sp, #7]
 480:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 860              		.loc 1 480 5 is_stmt 1 view .LVU230
 861              	.LVL87:
 481:Core/Src/bno055.c **** 
 482:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 483:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 862              		.loc 1 483 5 view .LVU231
 863              		.loc 1 483 18 is_stmt 0 view .LVU232
 864 000a 124B     		ldr	r3, .L59
 865 000c 1B68     		ldr	r3, [r3]
 866              		.loc 1 483 8 view .LVU233
 867 000e D3B1     		cbz	r3, .L55
 868 0010 0546     		mov	r5, r0
 484:Core/Src/bno055.c ****     {
 485:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 486:Core/Src/bno055.c ****     }
 487:Core/Src/bno055.c ****     else
 488:Core/Src/bno055.c ****     {
 489:Core/Src/bno055.c ****         /*condition check for page, chip id is
 490:Core/Src/bno055.c ****          * available in the page zero*/
 491:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 869              		.loc 1 491 9 is_stmt 1 view .LVU234
 870              		.loc 1 491 21 is_stmt 0 view .LVU235
 871 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 872              		.loc 1 491 12 view .LVU236
 873 0014 8BB9     		cbnz	r3, .L58
 874              	.LVL88:
 875              	.L53:
 492:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 26


 493:Core/Src/bno055.c ****             /* Write the page zero*/
 494:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 495:Core/Src/bno055.c ****         }
 496:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 876              		.loc 1 496 53 discriminator 1 view .LVU237
 877 0016 0F4B     		ldr	r3, .L59
 878 0018 1B68     		ldr	r3, [r3]
 879 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 880              		.loc 1 496 41 discriminator 1 view .LVU238
 881 001c B3B9     		cbnz	r3, .L56
 882              	.L54:
 497:Core/Src/bno055.c ****         {
 498:Core/Src/bno055.c ****             /* Read the accel revision id */
 499:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 883              		.loc 1 499 13 is_stmt 1 view .LVU239
 884              		.loc 1 499 32 is_stmt 0 view .LVU240
 885 001e 0D4B     		ldr	r3, .L59
 886 0020 1C68     		ldr	r4, [r3]
 887 0022 2669     		ldr	r6, [r4, #16]
 888              		.loc 1 499 24 view .LVU241
 889 0024 0123     		movs	r3, #1
 890 0026 0DF10702 		add	r2, sp, #7
 891 002a 1946     		mov	r1, r3
 892 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 893 002e B047     		blx	r6
 894              	.LVL89:
 500:Core/Src/bno055.c ****                                                       BNO055_ACCEL_REV_ID_REG,
 501:Core/Src/bno055.c ****                                                       &data_u8,
 502:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 503:Core/Src/bno055.c ****             *accel_rev_id_u8 = data_u8;
 895              		.loc 1 503 13 is_stmt 1 view .LVU242
 896              		.loc 1 503 30 is_stmt 0 view .LVU243
 897 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 898 0034 2B70     		strb	r3, [r5]
 899              	.LVL90:
 900              	.L52:
 504:Core/Src/bno055.c ****         }
 505:Core/Src/bno055.c ****         else
 506:Core/Src/bno055.c ****         {
 507:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 508:Core/Src/bno055.c ****         }
 509:Core/Src/bno055.c ****     }
 510:Core/Src/bno055.c **** 
 511:Core/Src/bno055.c ****     return com_rslt;
 512:Core/Src/bno055.c **** }
 901              		.loc 1 512 1 view .LVU244
 902 0036 02B0     		add	sp, sp, #8
 903              	.LCFI23:
 904              		.cfi_remember_state
 905              		.cfi_def_cfa_offset 16
 906              		@ sp needed
 907 0038 70BD     		pop	{r4, r5, r6, pc}
 908              	.LVL91:
 909              	.L58:
 910              	.LCFI24:
 911              		.cfi_restore_state
 494:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 27


 912              		.loc 1 494 13 is_stmt 1 view .LVU245
 494:Core/Src/bno055.c ****         }
 913              		.loc 1 494 23 is_stmt 0 view .LVU246
 914 003a 0020     		movs	r0, #0
 915              	.LVL92:
 494:Core/Src/bno055.c ****         }
 916              		.loc 1 494 23 view .LVU247
 917 003c FFF7FEFF 		bl	bno055_write_page_id
 918              	.LVL93:
 496:Core/Src/bno055.c ****         {
 919              		.loc 1 496 9 is_stmt 1 view .LVU248
 496:Core/Src/bno055.c ****         {
 920              		.loc 1 496 12 is_stmt 0 view .LVU249
 921 0040 0028     		cmp	r0, #0
 922 0042 ECD0     		beq	.L54
 923 0044 E7E7     		b	.L53
 924              	.LVL94:
 925              	.L55:
 485:Core/Src/bno055.c ****     }
 926              		.loc 1 485 16 view .LVU250
 927 0046 6FF07E00 		mvn	r0, #126
 928              	.LVL95:
 485:Core/Src/bno055.c ****     }
 929              		.loc 1 485 16 view .LVU251
 930 004a F4E7     		b	.L52
 931              	.LVL96:
 932              	.L56:
 507:Core/Src/bno055.c ****         }
 933              		.loc 1 507 22 view .LVU252
 934 004c 4FF0FF30 		mov	r0, #-1
 935 0050 F1E7     		b	.L52
 936              	.L60:
 937 0052 00BF     		.align	2
 938              	.L59:
 939 0054 00000000 		.word	.LANCHOR0
 940              		.cfi_endproc
 941              	.LFE7:
 943              		.section	.text.bno055_read_mag_rev_id,"ax",%progbits
 944              		.align	1
 945              		.global	bno055_read_mag_rev_id
 946              		.syntax unified
 947              		.thumb
 948              		.thumb_func
 949              		.fpu fpv4-sp-d16
 951              	bno055_read_mag_rev_id:
 952              	.LVL97:
 953              	.LFB8:
 513:Core/Src/bno055.c **** 
 514:Core/Src/bno055.c **** /*!
 515:Core/Src/bno055.c ****  *  @brief This API reads mag revision id
 516:Core/Src/bno055.c ****  *  from register 0x02 it is a byte of value
 517:Core/Src/bno055.c ****  *
 518:Core/Src/bno055.c ****  *  @param mag_rev_id_u8 : The mag revision id 0x32
 519:Core/Src/bno055.c ****  *
 520:Core/Src/bno055.c ****  *  @return results of bus communication function
 521:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 522:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
ARM GAS  /tmp/ccWoU29M.s 			page 28


 523:Core/Src/bno055.c ****  *
 524:Core/Src/bno055.c ****  *
 525:Core/Src/bno055.c ****  */
 526:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_rev_id(u8 *mag_rev_id_u8)
 527:Core/Src/bno055.c **** {
 954              		.loc 1 527 1 is_stmt 1 view -0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 8
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958              		.loc 1 527 1 is_stmt 0 view .LVU254
 959 0000 70B5     		push	{r4, r5, r6, lr}
 960              	.LCFI25:
 961              		.cfi_def_cfa_offset 16
 962              		.cfi_offset 4, -16
 963              		.cfi_offset 5, -12
 964              		.cfi_offset 6, -8
 965              		.cfi_offset 14, -4
 966 0002 82B0     		sub	sp, sp, #8
 967              	.LCFI26:
 968              		.cfi_def_cfa_offset 24
 528:Core/Src/bno055.c ****     /* Variable used to return value of
 529:Core/Src/bno055.c ****      * communication routine*/
 530:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 969              		.loc 1 530 5 is_stmt 1 view .LVU255
 970              	.LVL98:
 531:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 971              		.loc 1 531 5 view .LVU256
 972              		.loc 1 531 8 is_stmt 0 view .LVU257
 973 0004 0023     		movs	r3, #0
 974 0006 8DF80730 		strb	r3, [sp, #7]
 532:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 975              		.loc 1 532 5 is_stmt 1 view .LVU258
 976              	.LVL99:
 533:Core/Src/bno055.c **** 
 534:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 535:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 977              		.loc 1 535 5 view .LVU259
 978              		.loc 1 535 18 is_stmt 0 view .LVU260
 979 000a 124B     		ldr	r3, .L69
 980 000c 1B68     		ldr	r3, [r3]
 981              		.loc 1 535 8 view .LVU261
 982 000e D3B1     		cbz	r3, .L65
 983 0010 0546     		mov	r5, r0
 536:Core/Src/bno055.c ****     {
 537:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 538:Core/Src/bno055.c ****     }
 539:Core/Src/bno055.c ****     else
 540:Core/Src/bno055.c ****     {
 541:Core/Src/bno055.c ****         /*condition check for page, chip id is
 542:Core/Src/bno055.c ****          * available in the page zero*/
 543:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 984              		.loc 1 543 9 is_stmt 1 view .LVU262
 985              		.loc 1 543 21 is_stmt 0 view .LVU263
 986 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 987              		.loc 1 543 12 view .LVU264
 988 0014 8BB9     		cbnz	r3, .L68
 989              	.LVL100:
ARM GAS  /tmp/ccWoU29M.s 			page 29


 990              	.L63:
 544:Core/Src/bno055.c ****         {
 545:Core/Src/bno055.c ****             /* Write the page zero*/
 546:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 547:Core/Src/bno055.c ****         }
 548:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 991              		.loc 1 548 53 discriminator 1 view .LVU265
 992 0016 0F4B     		ldr	r3, .L69
 993 0018 1B68     		ldr	r3, [r3]
 994 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 995              		.loc 1 548 41 discriminator 1 view .LVU266
 996 001c B3B9     		cbnz	r3, .L66
 997              	.L64:
 549:Core/Src/bno055.c ****         {
 550:Core/Src/bno055.c ****             /* Read the mag revision id */
 551:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 998              		.loc 1 551 13 is_stmt 1 view .LVU267
 999              		.loc 1 551 32 is_stmt 0 view .LVU268
 1000 001e 0D4B     		ldr	r3, .L69
 1001 0020 1C68     		ldr	r4, [r3]
 1002 0022 2669     		ldr	r6, [r4, #16]
 1003              		.loc 1 551 24 view .LVU269
 1004 0024 0123     		movs	r3, #1
 1005 0026 0DF10702 		add	r2, sp, #7
 1006 002a 0221     		movs	r1, #2
 1007 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 1008 002e B047     		blx	r6
 1009              	.LVL101:
 552:Core/Src/bno055.c ****                                                       BNO055_MAG_REV_ID_REG,
 553:Core/Src/bno055.c ****                                                       &data_u8,
 554:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 555:Core/Src/bno055.c ****             *mag_rev_id_u8 = data_u8;
 1010              		.loc 1 555 13 is_stmt 1 view .LVU270
 1011              		.loc 1 555 28 is_stmt 0 view .LVU271
 1012 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1013 0034 2B70     		strb	r3, [r5]
 1014              	.LVL102:
 1015              	.L62:
 556:Core/Src/bno055.c ****         }
 557:Core/Src/bno055.c ****         else
 558:Core/Src/bno055.c ****         {
 559:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 560:Core/Src/bno055.c ****         }
 561:Core/Src/bno055.c ****     }
 562:Core/Src/bno055.c **** 
 563:Core/Src/bno055.c ****     return com_rslt;
 564:Core/Src/bno055.c **** }
 1016              		.loc 1 564 1 view .LVU272
 1017 0036 02B0     		add	sp, sp, #8
 1018              	.LCFI27:
 1019              		.cfi_remember_state
 1020              		.cfi_def_cfa_offset 16
 1021              		@ sp needed
 1022 0038 70BD     		pop	{r4, r5, r6, pc}
 1023              	.LVL103:
 1024              	.L68:
 1025              	.LCFI28:
ARM GAS  /tmp/ccWoU29M.s 			page 30


 1026              		.cfi_restore_state
 546:Core/Src/bno055.c ****         }
 1027              		.loc 1 546 13 is_stmt 1 view .LVU273
 546:Core/Src/bno055.c ****         }
 1028              		.loc 1 546 23 is_stmt 0 view .LVU274
 1029 003a 0020     		movs	r0, #0
 1030              	.LVL104:
 546:Core/Src/bno055.c ****         }
 1031              		.loc 1 546 23 view .LVU275
 1032 003c FFF7FEFF 		bl	bno055_write_page_id
 1033              	.LVL105:
 548:Core/Src/bno055.c ****         {
 1034              		.loc 1 548 9 is_stmt 1 view .LVU276
 548:Core/Src/bno055.c ****         {
 1035              		.loc 1 548 12 is_stmt 0 view .LVU277
 1036 0040 0028     		cmp	r0, #0
 1037 0042 ECD0     		beq	.L64
 1038 0044 E7E7     		b	.L63
 1039              	.LVL106:
 1040              	.L65:
 537:Core/Src/bno055.c ****     }
 1041              		.loc 1 537 16 view .LVU278
 1042 0046 6FF07E00 		mvn	r0, #126
 1043              	.LVL107:
 537:Core/Src/bno055.c ****     }
 1044              		.loc 1 537 16 view .LVU279
 1045 004a F4E7     		b	.L62
 1046              	.LVL108:
 1047              	.L66:
 559:Core/Src/bno055.c ****         }
 1048              		.loc 1 559 22 view .LVU280
 1049 004c 4FF0FF30 		mov	r0, #-1
 1050 0050 F1E7     		b	.L62
 1051              	.L70:
 1052 0052 00BF     		.align	2
 1053              	.L69:
 1054 0054 00000000 		.word	.LANCHOR0
 1055              		.cfi_endproc
 1056              	.LFE8:
 1058              		.section	.text.bno055_read_gyro_rev_id,"ax",%progbits
 1059              		.align	1
 1060              		.global	bno055_read_gyro_rev_id
 1061              		.syntax unified
 1062              		.thumb
 1063              		.thumb_func
 1064              		.fpu fpv4-sp-d16
 1066              	bno055_read_gyro_rev_id:
 1067              	.LVL109:
 1068              	.LFB9:
 565:Core/Src/bno055.c **** 
 566:Core/Src/bno055.c **** /*!
 567:Core/Src/bno055.c ****  *  @brief This API reads gyro revision id
 568:Core/Src/bno055.c ****  *  from register 0x03 it is a byte of value
 569:Core/Src/bno055.c ****  *
 570:Core/Src/bno055.c ****  *  @param gyro_rev_id_u8 : The gyro revision id 0xF0
 571:Core/Src/bno055.c ****  *
 572:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 31


 573:Core/Src/bno055.c ****  *
 574:Core/Src/bno055.c ****  *  @return results of bus communication function
 575:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 576:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 577:Core/Src/bno055.c ****  *
 578:Core/Src/bno055.c ****  *
 579:Core/Src/bno055.c ****  */
 580:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_rev_id(u8 *gyro_rev_id_u8)
 581:Core/Src/bno055.c **** {
 1069              		.loc 1 581 1 is_stmt 1 view -0
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 8
 1072              		@ frame_needed = 0, uses_anonymous_args = 0
 1073              		.loc 1 581 1 is_stmt 0 view .LVU282
 1074 0000 70B5     		push	{r4, r5, r6, lr}
 1075              	.LCFI29:
 1076              		.cfi_def_cfa_offset 16
 1077              		.cfi_offset 4, -16
 1078              		.cfi_offset 5, -12
 1079              		.cfi_offset 6, -8
 1080              		.cfi_offset 14, -4
 1081 0002 82B0     		sub	sp, sp, #8
 1082              	.LCFI30:
 1083              		.cfi_def_cfa_offset 24
 582:Core/Src/bno055.c ****     /* Variable used to return value of
 583:Core/Src/bno055.c ****      * communication routine*/
 584:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1084              		.loc 1 584 5 is_stmt 1 view .LVU283
 1085              	.LVL110:
 585:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 1086              		.loc 1 585 5 view .LVU284
 1087              		.loc 1 585 8 is_stmt 0 view .LVU285
 1088 0004 0023     		movs	r3, #0
 1089 0006 8DF80730 		strb	r3, [sp, #7]
 586:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1090              		.loc 1 586 5 is_stmt 1 view .LVU286
 1091              	.LVL111:
 587:Core/Src/bno055.c **** 
 588:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 589:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1092              		.loc 1 589 5 view .LVU287
 1093              		.loc 1 589 18 is_stmt 0 view .LVU288
 1094 000a 124B     		ldr	r3, .L79
 1095 000c 1B68     		ldr	r3, [r3]
 1096              		.loc 1 589 8 view .LVU289
 1097 000e D3B1     		cbz	r3, .L75
 1098 0010 0546     		mov	r5, r0
 590:Core/Src/bno055.c ****     {
 591:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 592:Core/Src/bno055.c ****     }
 593:Core/Src/bno055.c ****     else
 594:Core/Src/bno055.c ****     {
 595:Core/Src/bno055.c ****         /*condition check for page, chip id is
 596:Core/Src/bno055.c ****          * available in the page zero*/
 597:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1099              		.loc 1 597 9 is_stmt 1 view .LVU290
 1100              		.loc 1 597 21 is_stmt 0 view .LVU291
ARM GAS  /tmp/ccWoU29M.s 			page 32


 1101 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1102              		.loc 1 597 12 view .LVU292
 1103 0014 8BB9     		cbnz	r3, .L78
 1104              	.LVL112:
 1105              	.L73:
 598:Core/Src/bno055.c ****         {
 599:Core/Src/bno055.c ****             /* Write the page zero*/
 600:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 601:Core/Src/bno055.c ****         }
 602:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1106              		.loc 1 602 53 discriminator 1 view .LVU293
 1107 0016 0F4B     		ldr	r3, .L79
 1108 0018 1B68     		ldr	r3, [r3]
 1109 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1110              		.loc 1 602 41 discriminator 1 view .LVU294
 1111 001c B3B9     		cbnz	r3, .L76
 1112              	.L74:
 603:Core/Src/bno055.c ****         {
 604:Core/Src/bno055.c ****             /* Read the gyro revision id */
 605:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1113              		.loc 1 605 13 is_stmt 1 view .LVU295
 1114              		.loc 1 605 32 is_stmt 0 view .LVU296
 1115 001e 0D4B     		ldr	r3, .L79
 1116 0020 1C68     		ldr	r4, [r3]
 1117 0022 2669     		ldr	r6, [r4, #16]
 1118              		.loc 1 605 24 view .LVU297
 1119 0024 0123     		movs	r3, #1
 1120 0026 0DF10702 		add	r2, sp, #7
 1121 002a 0321     		movs	r1, #3
 1122 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 1123 002e B047     		blx	r6
 1124              	.LVL113:
 606:Core/Src/bno055.c ****                                                       BNO055_GYRO_REV_ID_REG,
 607:Core/Src/bno055.c ****                                                       &data_u8,
 608:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 609:Core/Src/bno055.c ****             *gyro_rev_id_u8 = data_u8;
 1125              		.loc 1 609 13 is_stmt 1 view .LVU298
 1126              		.loc 1 609 29 is_stmt 0 view .LVU299
 1127 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1128 0034 2B70     		strb	r3, [r5]
 1129              	.LVL114:
 1130              	.L72:
 610:Core/Src/bno055.c ****         }
 611:Core/Src/bno055.c ****         else
 612:Core/Src/bno055.c ****         {
 613:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 614:Core/Src/bno055.c ****         }
 615:Core/Src/bno055.c ****     }
 616:Core/Src/bno055.c **** 
 617:Core/Src/bno055.c ****     return com_rslt;
 618:Core/Src/bno055.c **** }
 1131              		.loc 1 618 1 view .LVU300
 1132 0036 02B0     		add	sp, sp, #8
 1133              	.LCFI31:
 1134              		.cfi_remember_state
 1135              		.cfi_def_cfa_offset 16
 1136              		@ sp needed
ARM GAS  /tmp/ccWoU29M.s 			page 33


 1137 0038 70BD     		pop	{r4, r5, r6, pc}
 1138              	.LVL115:
 1139              	.L78:
 1140              	.LCFI32:
 1141              		.cfi_restore_state
 600:Core/Src/bno055.c ****         }
 1142              		.loc 1 600 13 is_stmt 1 view .LVU301
 600:Core/Src/bno055.c ****         }
 1143              		.loc 1 600 23 is_stmt 0 view .LVU302
 1144 003a 0020     		movs	r0, #0
 1145              	.LVL116:
 600:Core/Src/bno055.c ****         }
 1146              		.loc 1 600 23 view .LVU303
 1147 003c FFF7FEFF 		bl	bno055_write_page_id
 1148              	.LVL117:
 602:Core/Src/bno055.c ****         {
 1149              		.loc 1 602 9 is_stmt 1 view .LVU304
 602:Core/Src/bno055.c ****         {
 1150              		.loc 1 602 12 is_stmt 0 view .LVU305
 1151 0040 0028     		cmp	r0, #0
 1152 0042 ECD0     		beq	.L74
 1153 0044 E7E7     		b	.L73
 1154              	.LVL118:
 1155              	.L75:
 591:Core/Src/bno055.c ****     }
 1156              		.loc 1 591 16 view .LVU306
 1157 0046 6FF07E00 		mvn	r0, #126
 1158              	.LVL119:
 591:Core/Src/bno055.c ****     }
 1159              		.loc 1 591 16 view .LVU307
 1160 004a F4E7     		b	.L72
 1161              	.LVL120:
 1162              	.L76:
 613:Core/Src/bno055.c ****         }
 1163              		.loc 1 613 22 view .LVU308
 1164 004c 4FF0FF30 		mov	r0, #-1
 1165 0050 F1E7     		b	.L72
 1166              	.L80:
 1167 0052 00BF     		.align	2
 1168              	.L79:
 1169 0054 00000000 		.word	.LANCHOR0
 1170              		.cfi_endproc
 1171              	.LFE9:
 1173              		.section	.text.bno055_read_bl_rev_id,"ax",%progbits
 1174              		.align	1
 1175              		.global	bno055_read_bl_rev_id
 1176              		.syntax unified
 1177              		.thumb
 1178              		.thumb_func
 1179              		.fpu fpv4-sp-d16
 1181              	bno055_read_bl_rev_id:
 1182              	.LVL121:
 1183              	.LFB10:
 619:Core/Src/bno055.c **** 
 620:Core/Src/bno055.c **** /*!
 621:Core/Src/bno055.c ****  *  @brief This API used to read boot loader revision id
 622:Core/Src/bno055.c ****  *  from register 0x06 it is a byte of value
ARM GAS  /tmp/ccWoU29M.s 			page 34


 623:Core/Src/bno055.c ****  *
 624:Core/Src/bno055.c ****  *  @param bl_rev_id_u8 : The boot loader revision id
 625:Core/Src/bno055.c ****  *
 626:Core/Src/bno055.c ****  *
 627:Core/Src/bno055.c ****  *  @return results of bus communication function
 628:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 629:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 630:Core/Src/bno055.c ****  *
 631:Core/Src/bno055.c ****  *
 632:Core/Src/bno055.c ****  */
 633:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_bl_rev_id(u8 *bl_rev_id_u8)
 634:Core/Src/bno055.c **** {
 1184              		.loc 1 634 1 is_stmt 1 view -0
 1185              		.cfi_startproc
 1186              		@ args = 0, pretend = 0, frame = 8
 1187              		@ frame_needed = 0, uses_anonymous_args = 0
 1188              		.loc 1 634 1 is_stmt 0 view .LVU310
 1189 0000 70B5     		push	{r4, r5, r6, lr}
 1190              	.LCFI33:
 1191              		.cfi_def_cfa_offset 16
 1192              		.cfi_offset 4, -16
 1193              		.cfi_offset 5, -12
 1194              		.cfi_offset 6, -8
 1195              		.cfi_offset 14, -4
 1196 0002 82B0     		sub	sp, sp, #8
 1197              	.LCFI34:
 1198              		.cfi_def_cfa_offset 24
 635:Core/Src/bno055.c ****     /* Variable used to return value of
 636:Core/Src/bno055.c ****      * communication routine*/
 637:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1199              		.loc 1 637 5 is_stmt 1 view .LVU311
 1200              	.LVL122:
 638:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 1201              		.loc 1 638 5 view .LVU312
 1202              		.loc 1 638 8 is_stmt 0 view .LVU313
 1203 0004 0023     		movs	r3, #0
 1204 0006 8DF80730 		strb	r3, [sp, #7]
 639:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1205              		.loc 1 639 5 is_stmt 1 view .LVU314
 1206              	.LVL123:
 640:Core/Src/bno055.c **** 
 641:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 642:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1207              		.loc 1 642 5 view .LVU315
 1208              		.loc 1 642 18 is_stmt 0 view .LVU316
 1209 000a 124B     		ldr	r3, .L89
 1210 000c 1B68     		ldr	r3, [r3]
 1211              		.loc 1 642 8 view .LVU317
 1212 000e D3B1     		cbz	r3, .L85
 1213 0010 0546     		mov	r5, r0
 643:Core/Src/bno055.c ****     {
 644:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 645:Core/Src/bno055.c ****     }
 646:Core/Src/bno055.c ****     else
 647:Core/Src/bno055.c ****     {
 648:Core/Src/bno055.c ****         /*condition check for page, chip id is
 649:Core/Src/bno055.c ****          * available in the page zero*/
ARM GAS  /tmp/ccWoU29M.s 			page 35


 650:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1214              		.loc 1 650 9 is_stmt 1 view .LVU318
 1215              		.loc 1 650 21 is_stmt 0 view .LVU319
 1216 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1217              		.loc 1 650 12 view .LVU320
 1218 0014 8BB9     		cbnz	r3, .L88
 1219              	.LVL124:
 1220              	.L83:
 651:Core/Src/bno055.c ****         {
 652:Core/Src/bno055.c ****             /* Write the page zero*/
 653:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 654:Core/Src/bno055.c ****         }
 655:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1221              		.loc 1 655 53 discriminator 1 view .LVU321
 1222 0016 0F4B     		ldr	r3, .L89
 1223 0018 1B68     		ldr	r3, [r3]
 1224 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1225              		.loc 1 655 41 discriminator 1 view .LVU322
 1226 001c B3B9     		cbnz	r3, .L86
 1227              	.L84:
 656:Core/Src/bno055.c ****         {
 657:Core/Src/bno055.c ****             /* Read the boot loader revision id */
 658:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1228              		.loc 1 658 13 is_stmt 1 view .LVU323
 1229              		.loc 1 658 32 is_stmt 0 view .LVU324
 1230 001e 0D4B     		ldr	r3, .L89
 1231 0020 1C68     		ldr	r4, [r3]
 1232 0022 2669     		ldr	r6, [r4, #16]
 1233              		.loc 1 658 24 view .LVU325
 1234 0024 0123     		movs	r3, #1
 1235 0026 0DF10702 		add	r2, sp, #7
 1236 002a 0621     		movs	r1, #6
 1237 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 1238 002e B047     		blx	r6
 1239              	.LVL125:
 659:Core/Src/bno055.c ****                                                       BNO055_BL_REV_ID_REG,
 660:Core/Src/bno055.c ****                                                       &data_u8,
 661:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 662:Core/Src/bno055.c ****             *bl_rev_id_u8 = data_u8;
 1240              		.loc 1 662 13 is_stmt 1 view .LVU326
 1241              		.loc 1 662 27 is_stmt 0 view .LVU327
 1242 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1243 0034 2B70     		strb	r3, [r5]
 1244              	.LVL126:
 1245              	.L82:
 663:Core/Src/bno055.c ****         }
 664:Core/Src/bno055.c ****         else
 665:Core/Src/bno055.c ****         {
 666:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 667:Core/Src/bno055.c ****         }
 668:Core/Src/bno055.c ****     }
 669:Core/Src/bno055.c **** 
 670:Core/Src/bno055.c ****     return com_rslt;
 671:Core/Src/bno055.c **** }
 1246              		.loc 1 671 1 view .LVU328
 1247 0036 02B0     		add	sp, sp, #8
 1248              	.LCFI35:
ARM GAS  /tmp/ccWoU29M.s 			page 36


 1249              		.cfi_remember_state
 1250              		.cfi_def_cfa_offset 16
 1251              		@ sp needed
 1252 0038 70BD     		pop	{r4, r5, r6, pc}
 1253              	.LVL127:
 1254              	.L88:
 1255              	.LCFI36:
 1256              		.cfi_restore_state
 653:Core/Src/bno055.c ****         }
 1257              		.loc 1 653 13 is_stmt 1 view .LVU329
 653:Core/Src/bno055.c ****         }
 1258              		.loc 1 653 23 is_stmt 0 view .LVU330
 1259 003a 0020     		movs	r0, #0
 1260              	.LVL128:
 653:Core/Src/bno055.c ****         }
 1261              		.loc 1 653 23 view .LVU331
 1262 003c FFF7FEFF 		bl	bno055_write_page_id
 1263              	.LVL129:
 655:Core/Src/bno055.c ****         {
 1264              		.loc 1 655 9 is_stmt 1 view .LVU332
 655:Core/Src/bno055.c ****         {
 1265              		.loc 1 655 12 is_stmt 0 view .LVU333
 1266 0040 0028     		cmp	r0, #0
 1267 0042 ECD0     		beq	.L84
 1268 0044 E7E7     		b	.L83
 1269              	.LVL130:
 1270              	.L85:
 644:Core/Src/bno055.c ****     }
 1271              		.loc 1 644 16 view .LVU334
 1272 0046 6FF07E00 		mvn	r0, #126
 1273              	.LVL131:
 644:Core/Src/bno055.c ****     }
 1274              		.loc 1 644 16 view .LVU335
 1275 004a F4E7     		b	.L82
 1276              	.LVL132:
 1277              	.L86:
 666:Core/Src/bno055.c ****         }
 1278              		.loc 1 666 22 view .LVU336
 1279 004c 4FF0FF30 		mov	r0, #-1
 1280 0050 F1E7     		b	.L82
 1281              	.L90:
 1282 0052 00BF     		.align	2
 1283              	.L89:
 1284 0054 00000000 		.word	.LANCHOR0
 1285              		.cfi_endproc
 1286              	.LFE10:
 1288              		.section	.text.bno055_read_accel_x,"ax",%progbits
 1289              		.align	1
 1290              		.global	bno055_read_accel_x
 1291              		.syntax unified
 1292              		.thumb
 1293              		.thumb_func
 1294              		.fpu fpv4-sp-d16
 1296              	bno055_read_accel_x:
 1297              	.LVL133:
 1298              	.LFB11:
 672:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 37


 673:Core/Src/bno055.c **** /*!
 674:Core/Src/bno055.c ****  *  @brief This API reads acceleration data X values
 675:Core/Src/bno055.c ****  *  from register 0x08 and 0x09 it is a two byte data
 676:Core/Src/bno055.c ****  *
 677:Core/Src/bno055.c ****  *
 678:Core/Src/bno055.c ****  *
 679:Core/Src/bno055.c ****  *
 680:Core/Src/bno055.c ****  *  @param accel_x_s16 : The X raw data
 681:Core/Src/bno055.c ****  *
 682:Core/Src/bno055.c ****  *
 683:Core/Src/bno055.c ****  *
 684:Core/Src/bno055.c ****  *  @return results of bus communication function
 685:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 686:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 687:Core/Src/bno055.c ****  *
 688:Core/Src/bno055.c ****  *
 689:Core/Src/bno055.c ****  */
 690:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_x(s16 *accel_x_s16)
 691:Core/Src/bno055.c **** {
 1299              		.loc 1 691 1 is_stmt 1 view -0
 1300              		.cfi_startproc
 1301              		@ args = 0, pretend = 0, frame = 8
 1302              		@ frame_needed = 0, uses_anonymous_args = 0
 1303              		.loc 1 691 1 is_stmt 0 view .LVU338
 1304 0000 30B5     		push	{r4, r5, lr}
 1305              	.LCFI37:
 1306              		.cfi_def_cfa_offset 12
 1307              		.cfi_offset 4, -12
 1308              		.cfi_offset 5, -8
 1309              		.cfi_offset 14, -4
 1310 0002 83B0     		sub	sp, sp, #12
 1311              	.LCFI38:
 1312              		.cfi_def_cfa_offset 24
 692:Core/Src/bno055.c ****     /* Variable used to return value of
 693:Core/Src/bno055.c ****      * communication routine*/
 694:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1313              		.loc 1 694 5 is_stmt 1 view .LVU339
 1314              	.LVL134:
 695:Core/Src/bno055.c **** 
 696:Core/Src/bno055.c ****     /* Array holding the accel x value
 697:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - x-LSB
 698:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - x-MSB
 699:Core/Src/bno055.c ****      */
 700:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1315              		.loc 1 700 5 view .LVU340
 1316              		.loc 1 700 8 is_stmt 0 view .LVU341
 1317 0004 0023     		movs	r3, #0
 1318 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 701:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1319              		.loc 1 701 5 is_stmt 1 view .LVU342
 1320              	.LVL135:
 702:Core/Src/bno055.c **** 
 703:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 704:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1321              		.loc 1 704 5 view .LVU343
 1322              		.loc 1 704 18 is_stmt 0 view .LVU344
 1323 000a 134B     		ldr	r3, .L99
ARM GAS  /tmp/ccWoU29M.s 			page 38


 1324 000c 1B68     		ldr	r3, [r3]
 1325              		.loc 1 704 8 view .LVU345
 1326 000e EBB1     		cbz	r3, .L95
 1327 0010 0446     		mov	r4, r0
 705:Core/Src/bno055.c ****     {
 706:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 707:Core/Src/bno055.c ****     }
 708:Core/Src/bno055.c ****     else
 709:Core/Src/bno055.c ****     {
 710:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1328              		.loc 1 710 9 is_stmt 1 view .LVU346
 1329              		.loc 1 710 21 is_stmt 0 view .LVU347
 1330 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1331              		.loc 1 710 12 view .LVU348
 1332 0014 A3B9     		cbnz	r3, .L98
 1333              	.LVL136:
 1334              	.L93:
 711:Core/Src/bno055.c ****         {
 712:Core/Src/bno055.c ****             /* Write the page zero*/
 713:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 714:Core/Src/bno055.c ****         }
 715:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1335              		.loc 1 715 53 discriminator 1 view .LVU349
 1336 0016 104B     		ldr	r3, .L99
 1337 0018 1B68     		ldr	r3, [r3]
 1338 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1339              		.loc 1 715 41 discriminator 1 view .LVU350
 1340 001c CBB9     		cbnz	r3, .L96
 1341              	.L94:
 716:Core/Src/bno055.c ****         {
 717:Core/Src/bno055.c ****             /* Read the accel x axis two byte value*/
 718:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1342              		.loc 1 718 13 is_stmt 1 view .LVU351
 1343              		.loc 1 718 32 is_stmt 0 view .LVU352
 1344 001e 0E4B     		ldr	r3, .L99
 1345 0020 1868     		ldr	r0, [r3]
 1346 0022 0569     		ldr	r5, [r0, #16]
 1347              		.loc 1 718 24 view .LVU353
 1348 0024 0223     		movs	r3, #2
 1349 0026 01AA     		add	r2, sp, #4
 1350 0028 0821     		movs	r1, #8
 1351 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1352 002c A847     		blx	r5
 1353              	.LVL137:
 719:Core/Src/bno055.c ****                                                       BNO055_ACCEL_DATA_X_LSB_VALUEX_REG,
 720:Core/Src/bno055.c ****                                                       data_u8,
 721:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
 722:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1354              		.loc 1 722 13 is_stmt 1 view .LVU354
 723:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_X_LSB_VALUEX);
 724:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1355              		.loc 1 724 13 view .LVU355
 725:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_X_MSB_VALUEX);
 726:Core/Src/bno055.c ****             *accel_x_s16 =
 1356              		.loc 1 726 13 view .LVU356
 727:Core/Src/bno055.c ****                 (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_DATA_MSB])) << (BNO055_SHIFT_EIGHT_BITS)) |
 1357              		.loc 1 727 30 is_stmt 0 view .LVU357
ARM GAS  /tmp/ccWoU29M.s 			page 39


 1358 002e 9DF90520 		ldrsb	r2, [sp, #5]
 728:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1359              		.loc 1 728 31 view .LVU358
 1360 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 727:Core/Src/bno055.c ****                 (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_DATA_MSB])) << (BNO055_SHIFT_EIGHT_BITS)) |
 1361              		.loc 1 727 17 view .LVU359
 1362 0036 43EA0223 		orr	r3, r3, r2, lsl #8
 726:Core/Src/bno055.c ****                 (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_DATA_MSB])) << (BNO055_SHIFT_EIGHT_BITS)) |
 1363              		.loc 1 726 26 view .LVU360
 1364 003a 2380     		strh	r3, [r4]	@ movhi
 1365              	.LVL138:
 1366              	.L92:
 729:Core/Src/bno055.c ****         }
 730:Core/Src/bno055.c ****         else
 731:Core/Src/bno055.c ****         {
 732:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 733:Core/Src/bno055.c ****         }
 734:Core/Src/bno055.c ****     }
 735:Core/Src/bno055.c **** 
 736:Core/Src/bno055.c ****     return com_rslt;
 737:Core/Src/bno055.c **** }
 1367              		.loc 1 737 1 view .LVU361
 1368 003c 03B0     		add	sp, sp, #12
 1369              	.LCFI39:
 1370              		.cfi_remember_state
 1371              		.cfi_def_cfa_offset 12
 1372              		@ sp needed
 1373 003e 30BD     		pop	{r4, r5, pc}
 1374              	.LVL139:
 1375              	.L98:
 1376              	.LCFI40:
 1377              		.cfi_restore_state
 713:Core/Src/bno055.c ****         }
 1378              		.loc 1 713 13 is_stmt 1 view .LVU362
 713:Core/Src/bno055.c ****         }
 1379              		.loc 1 713 23 is_stmt 0 view .LVU363
 1380 0040 0020     		movs	r0, #0
 1381              	.LVL140:
 713:Core/Src/bno055.c ****         }
 1382              		.loc 1 713 23 view .LVU364
 1383 0042 FFF7FEFF 		bl	bno055_write_page_id
 1384              	.LVL141:
 715:Core/Src/bno055.c ****         {
 1385              		.loc 1 715 9 is_stmt 1 view .LVU365
 715:Core/Src/bno055.c ****         {
 1386              		.loc 1 715 12 is_stmt 0 view .LVU366
 1387 0046 0028     		cmp	r0, #0
 1388 0048 E9D0     		beq	.L94
 1389 004a E4E7     		b	.L93
 1390              	.LVL142:
 1391              	.L95:
 706:Core/Src/bno055.c ****     }
 1392              		.loc 1 706 16 view .LVU367
 1393 004c 6FF07E00 		mvn	r0, #126
 1394              	.LVL143:
 706:Core/Src/bno055.c ****     }
 1395              		.loc 1 706 16 view .LVU368
ARM GAS  /tmp/ccWoU29M.s 			page 40


 1396 0050 F4E7     		b	.L92
 1397              	.LVL144:
 1398              	.L96:
 732:Core/Src/bno055.c ****         }
 1399              		.loc 1 732 22 view .LVU369
 1400 0052 4FF0FF30 		mov	r0, #-1
 1401 0056 F1E7     		b	.L92
 1402              	.L100:
 1403              		.align	2
 1404              	.L99:
 1405 0058 00000000 		.word	.LANCHOR0
 1406              		.cfi_endproc
 1407              	.LFE11:
 1409              		.section	.text.bno055_read_accel_y,"ax",%progbits
 1410              		.align	1
 1411              		.global	bno055_read_accel_y
 1412              		.syntax unified
 1413              		.thumb
 1414              		.thumb_func
 1415              		.fpu fpv4-sp-d16
 1417              	bno055_read_accel_y:
 1418              	.LVL145:
 1419              	.LFB12:
 738:Core/Src/bno055.c **** 
 739:Core/Src/bno055.c **** /*!
 740:Core/Src/bno055.c ****  *  @brief This API reads acceleration data Y values
 741:Core/Src/bno055.c ****  *  from register 0x0A and 0x0B it is a two byte data
 742:Core/Src/bno055.c ****  *
 743:Core/Src/bno055.c ****  *
 744:Core/Src/bno055.c ****  *
 745:Core/Src/bno055.c ****  *
 746:Core/Src/bno055.c ****  *  @param accel_y_s16 : The Y raw data
 747:Core/Src/bno055.c ****  *
 748:Core/Src/bno055.c ****  *
 749:Core/Src/bno055.c ****  *
 750:Core/Src/bno055.c ****  *  @return results of bus communication function
 751:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 752:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 753:Core/Src/bno055.c ****  *
 754:Core/Src/bno055.c ****  *
 755:Core/Src/bno055.c ****  */
 756:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_y(s16 *accel_y_s16)
 757:Core/Src/bno055.c **** {
 1420              		.loc 1 757 1 is_stmt 1 view -0
 1421              		.cfi_startproc
 1422              		@ args = 0, pretend = 0, frame = 8
 1423              		@ frame_needed = 0, uses_anonymous_args = 0
 1424              		.loc 1 757 1 is_stmt 0 view .LVU371
 1425 0000 30B5     		push	{r4, r5, lr}
 1426              	.LCFI41:
 1427              		.cfi_def_cfa_offset 12
 1428              		.cfi_offset 4, -12
 1429              		.cfi_offset 5, -8
 1430              		.cfi_offset 14, -4
 1431 0002 83B0     		sub	sp, sp, #12
 1432              	.LCFI42:
 1433              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccWoU29M.s 			page 41


 758:Core/Src/bno055.c ****     /* Variable used to return value of
 759:Core/Src/bno055.c ****      * communication routine*/
 760:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1434              		.loc 1 760 5 is_stmt 1 view .LVU372
 1435              	.LVL146:
 761:Core/Src/bno055.c **** 
 762:Core/Src/bno055.c ****     /* Array holding the accel y value
 763:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - y-LSB
 764:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - y-MSB
 765:Core/Src/bno055.c ****      */
 766:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1436              		.loc 1 766 5 view .LVU373
 1437              		.loc 1 766 8 is_stmt 0 view .LVU374
 1438 0004 0023     		movs	r3, #0
 1439 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 767:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1440              		.loc 1 767 5 is_stmt 1 view .LVU375
 1441              	.LVL147:
 768:Core/Src/bno055.c **** 
 769:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 770:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1442              		.loc 1 770 5 view .LVU376
 1443              		.loc 1 770 18 is_stmt 0 view .LVU377
 1444 000a 134B     		ldr	r3, .L109
 1445 000c 1B68     		ldr	r3, [r3]
 1446              		.loc 1 770 8 view .LVU378
 1447 000e EBB1     		cbz	r3, .L105
 1448 0010 0446     		mov	r4, r0
 771:Core/Src/bno055.c ****     {
 772:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 773:Core/Src/bno055.c ****     }
 774:Core/Src/bno055.c ****     else
 775:Core/Src/bno055.c ****     {
 776:Core/Src/bno055.c ****         /*condition check for page, chip id is
 777:Core/Src/bno055.c ****          * available in the page zero*/
 778:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1449              		.loc 1 778 9 is_stmt 1 view .LVU379
 1450              		.loc 1 778 21 is_stmt 0 view .LVU380
 1451 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1452              		.loc 1 778 12 view .LVU381
 1453 0014 A3B9     		cbnz	r3, .L108
 1454              	.LVL148:
 1455              	.L103:
 779:Core/Src/bno055.c ****         {
 780:Core/Src/bno055.c ****             /* Write the page zero*/
 781:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 782:Core/Src/bno055.c ****         }
 783:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1456              		.loc 1 783 53 discriminator 1 view .LVU382
 1457 0016 104B     		ldr	r3, .L109
 1458 0018 1B68     		ldr	r3, [r3]
 1459 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1460              		.loc 1 783 41 discriminator 1 view .LVU383
 1461 001c CBB9     		cbnz	r3, .L106
 1462              	.L104:
 784:Core/Src/bno055.c ****         {
 785:Core/Src/bno055.c ****             /* Read the accel y axis two byte value*/
ARM GAS  /tmp/ccWoU29M.s 			page 42


 786:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1463              		.loc 1 786 13 is_stmt 1 view .LVU384
 1464              		.loc 1 786 32 is_stmt 0 view .LVU385
 1465 001e 0E4B     		ldr	r3, .L109
 1466 0020 1868     		ldr	r0, [r3]
 1467 0022 0569     		ldr	r5, [r0, #16]
 1468              		.loc 1 786 24 view .LVU386
 1469 0024 0223     		movs	r3, #2
 1470 0026 01AA     		add	r2, sp, #4
 1471 0028 0A21     		movs	r1, #10
 1472 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1473 002c A847     		blx	r5
 1474              	.LVL149:
 787:Core/Src/bno055.c ****                                                       BNO055_ACCEL_DATA_Y_LSB_VALUEY_REG,
 788:Core/Src/bno055.c ****                                                       data_u8,
 789:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
 790:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1475              		.loc 1 790 13 is_stmt 1 view .LVU387
 791:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_Y_LSB_VALUEY);
 792:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1476              		.loc 1 792 13 view .LVU388
 793:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_Y_MSB_VALUEY);
 794:Core/Src/bno055.c ****             *accel_y_s16 =
 1477              		.loc 1 794 13 view .LVU389
 795:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1478              		.loc 1 795 31 is_stmt 0 view .LVU390
 1479 002e 9DF90520 		ldrsb	r2, [sp, #5]
 796:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1480              		.loc 1 796 31 view .LVU391
 1481 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 795:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1482              		.loc 1 795 17 view .LVU392
 1483 0036 43EA0223 		orr	r3, r3, r2, lsl #8
 794:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1484              		.loc 1 794 26 view .LVU393
 1485 003a 2380     		strh	r3, [r4]	@ movhi
 1486              	.LVL150:
 1487              	.L102:
 797:Core/Src/bno055.c ****         }
 798:Core/Src/bno055.c ****         else
 799:Core/Src/bno055.c ****         {
 800:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 801:Core/Src/bno055.c ****         }
 802:Core/Src/bno055.c ****     }
 803:Core/Src/bno055.c **** 
 804:Core/Src/bno055.c ****     return com_rslt;
 805:Core/Src/bno055.c **** }
 1488              		.loc 1 805 1 view .LVU394
 1489 003c 03B0     		add	sp, sp, #12
 1490              	.LCFI43:
 1491              		.cfi_remember_state
 1492              		.cfi_def_cfa_offset 12
 1493              		@ sp needed
 1494 003e 30BD     		pop	{r4, r5, pc}
 1495              	.LVL151:
 1496              	.L108:
 1497              	.LCFI44:
ARM GAS  /tmp/ccWoU29M.s 			page 43


 1498              		.cfi_restore_state
 781:Core/Src/bno055.c ****         }
 1499              		.loc 1 781 13 is_stmt 1 view .LVU395
 781:Core/Src/bno055.c ****         }
 1500              		.loc 1 781 23 is_stmt 0 view .LVU396
 1501 0040 0020     		movs	r0, #0
 1502              	.LVL152:
 781:Core/Src/bno055.c ****         }
 1503              		.loc 1 781 23 view .LVU397
 1504 0042 FFF7FEFF 		bl	bno055_write_page_id
 1505              	.LVL153:
 783:Core/Src/bno055.c ****         {
 1506              		.loc 1 783 9 is_stmt 1 view .LVU398
 783:Core/Src/bno055.c ****         {
 1507              		.loc 1 783 12 is_stmt 0 view .LVU399
 1508 0046 0028     		cmp	r0, #0
 1509 0048 E9D0     		beq	.L104
 1510 004a E4E7     		b	.L103
 1511              	.LVL154:
 1512              	.L105:
 772:Core/Src/bno055.c ****     }
 1513              		.loc 1 772 16 view .LVU400
 1514 004c 6FF07E00 		mvn	r0, #126
 1515              	.LVL155:
 772:Core/Src/bno055.c ****     }
 1516              		.loc 1 772 16 view .LVU401
 1517 0050 F4E7     		b	.L102
 1518              	.LVL156:
 1519              	.L106:
 800:Core/Src/bno055.c ****         }
 1520              		.loc 1 800 22 view .LVU402
 1521 0052 4FF0FF30 		mov	r0, #-1
 1522 0056 F1E7     		b	.L102
 1523              	.L110:
 1524              		.align	2
 1525              	.L109:
 1526 0058 00000000 		.word	.LANCHOR0
 1527              		.cfi_endproc
 1528              	.LFE12:
 1530              		.section	.text.bno055_read_accel_z,"ax",%progbits
 1531              		.align	1
 1532              		.global	bno055_read_accel_z
 1533              		.syntax unified
 1534              		.thumb
 1535              		.thumb_func
 1536              		.fpu fpv4-sp-d16
 1538              	bno055_read_accel_z:
 1539              	.LVL157:
 1540              	.LFB13:
 806:Core/Src/bno055.c **** 
 807:Core/Src/bno055.c **** /*!
 808:Core/Src/bno055.c ****  *  @brief This API reads acceleration data z values
 809:Core/Src/bno055.c ****  *  from register 0x0C and 0x0D it is a two byte data
 810:Core/Src/bno055.c ****  *
 811:Core/Src/bno055.c ****  *
 812:Core/Src/bno055.c ****  *
 813:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 44


 814:Core/Src/bno055.c ****  *  @param accel_z_s16 : The z raw data
 815:Core/Src/bno055.c ****  *
 816:Core/Src/bno055.c ****  *
 817:Core/Src/bno055.c ****  *
 818:Core/Src/bno055.c ****  *  @return results of bus communication function
 819:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 820:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 821:Core/Src/bno055.c ****  *
 822:Core/Src/bno055.c ****  *
 823:Core/Src/bno055.c ****  */
 824:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_z(s16 *accel_z_s16)
 825:Core/Src/bno055.c **** {
 1541              		.loc 1 825 1 is_stmt 1 view -0
 1542              		.cfi_startproc
 1543              		@ args = 0, pretend = 0, frame = 8
 1544              		@ frame_needed = 0, uses_anonymous_args = 0
 1545              		.loc 1 825 1 is_stmt 0 view .LVU404
 1546 0000 30B5     		push	{r4, r5, lr}
 1547              	.LCFI45:
 1548              		.cfi_def_cfa_offset 12
 1549              		.cfi_offset 4, -12
 1550              		.cfi_offset 5, -8
 1551              		.cfi_offset 14, -4
 1552 0002 83B0     		sub	sp, sp, #12
 1553              	.LCFI46:
 1554              		.cfi_def_cfa_offset 24
 826:Core/Src/bno055.c ****     /* Variable used to return value of
 827:Core/Src/bno055.c ****      * communication routine*/
 828:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1555              		.loc 1 828 5 is_stmt 1 view .LVU405
 1556              	.LVL158:
 829:Core/Src/bno055.c **** 
 830:Core/Src/bno055.c ****     /* Array holding the accel z value
 831:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - z-LSB
 832:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - z-MSB
 833:Core/Src/bno055.c ****      */
 834:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1557              		.loc 1 834 5 view .LVU406
 1558              		.loc 1 834 8 is_stmt 0 view .LVU407
 1559 0004 0023     		movs	r3, #0
 1560 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 835:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1561              		.loc 1 835 5 is_stmt 1 view .LVU408
 1562              	.LVL159:
 836:Core/Src/bno055.c **** 
 837:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 838:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1563              		.loc 1 838 5 view .LVU409
 1564              		.loc 1 838 18 is_stmt 0 view .LVU410
 1565 000a 134B     		ldr	r3, .L119
 1566 000c 1B68     		ldr	r3, [r3]
 1567              		.loc 1 838 8 view .LVU411
 1568 000e EBB1     		cbz	r3, .L115
 1569 0010 0446     		mov	r4, r0
 839:Core/Src/bno055.c ****     {
 840:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 841:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 45


 842:Core/Src/bno055.c ****     else
 843:Core/Src/bno055.c ****     {
 844:Core/Src/bno055.c ****         /*condition check for page, chip id is
 845:Core/Src/bno055.c ****          * available in the page zero*/
 846:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1570              		.loc 1 846 9 is_stmt 1 view .LVU412
 1571              		.loc 1 846 21 is_stmt 0 view .LVU413
 1572 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1573              		.loc 1 846 12 view .LVU414
 1574 0014 A3B9     		cbnz	r3, .L118
 1575              	.LVL160:
 1576              	.L113:
 847:Core/Src/bno055.c ****         {
 848:Core/Src/bno055.c ****             /* Write the page zero*/
 849:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 850:Core/Src/bno055.c ****         }
 851:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1577              		.loc 1 851 53 discriminator 1 view .LVU415
 1578 0016 104B     		ldr	r3, .L119
 1579 0018 1B68     		ldr	r3, [r3]
 1580 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1581              		.loc 1 851 41 discriminator 1 view .LVU416
 1582 001c CBB9     		cbnz	r3, .L116
 1583              	.L114:
 852:Core/Src/bno055.c ****         {
 853:Core/Src/bno055.c ****             /* Read the accel z axis two byte value*/
 854:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1584              		.loc 1 854 13 is_stmt 1 view .LVU417
 1585              		.loc 1 854 32 is_stmt 0 view .LVU418
 1586 001e 0E4B     		ldr	r3, .L119
 1587 0020 1868     		ldr	r0, [r3]
 1588 0022 0569     		ldr	r5, [r0, #16]
 1589              		.loc 1 854 24 view .LVU419
 1590 0024 0223     		movs	r3, #2
 1591 0026 01AA     		add	r2, sp, #4
 1592 0028 0C21     		movs	r1, #12
 1593 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1594 002c A847     		blx	r5
 1595              	.LVL161:
 855:Core/Src/bno055.c ****                                                       BNO055_ACCEL_DATA_Z_LSB_VALUEZ_REG,
 856:Core/Src/bno055.c ****                                                       data_u8,
 857:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
 858:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1596              		.loc 1 858 13 is_stmt 1 view .LVU420
 859:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_Z_LSB_VALUEZ);
 860:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1597              		.loc 1 860 13 view .LVU421
 861:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_Z_MSB_VALUEZ);
 862:Core/Src/bno055.c ****             *accel_z_s16 =
 1598              		.loc 1 862 13 view .LVU422
 863:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1599              		.loc 1 863 31 is_stmt 0 view .LVU423
 1600 002e 9DF90520 		ldrsb	r2, [sp, #5]
 864:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1601              		.loc 1 864 31 view .LVU424
 1602 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 863:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
ARM GAS  /tmp/ccWoU29M.s 			page 46


 1603              		.loc 1 863 17 view .LVU425
 1604 0036 43EA0223 		orr	r3, r3, r2, lsl #8
 862:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1605              		.loc 1 862 26 view .LVU426
 1606 003a 2380     		strh	r3, [r4]	@ movhi
 1607              	.LVL162:
 1608              	.L112:
 865:Core/Src/bno055.c ****         }
 866:Core/Src/bno055.c ****         else
 867:Core/Src/bno055.c ****         {
 868:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 869:Core/Src/bno055.c ****         }
 870:Core/Src/bno055.c ****     }
 871:Core/Src/bno055.c **** 
 872:Core/Src/bno055.c ****     return com_rslt;
 873:Core/Src/bno055.c **** }
 1609              		.loc 1 873 1 view .LVU427
 1610 003c 03B0     		add	sp, sp, #12
 1611              	.LCFI47:
 1612              		.cfi_remember_state
 1613              		.cfi_def_cfa_offset 12
 1614              		@ sp needed
 1615 003e 30BD     		pop	{r4, r5, pc}
 1616              	.LVL163:
 1617              	.L118:
 1618              	.LCFI48:
 1619              		.cfi_restore_state
 849:Core/Src/bno055.c ****         }
 1620              		.loc 1 849 13 is_stmt 1 view .LVU428
 849:Core/Src/bno055.c ****         }
 1621              		.loc 1 849 23 is_stmt 0 view .LVU429
 1622 0040 0020     		movs	r0, #0
 1623              	.LVL164:
 849:Core/Src/bno055.c ****         }
 1624              		.loc 1 849 23 view .LVU430
 1625 0042 FFF7FEFF 		bl	bno055_write_page_id
 1626              	.LVL165:
 851:Core/Src/bno055.c ****         {
 1627              		.loc 1 851 9 is_stmt 1 view .LVU431
 851:Core/Src/bno055.c ****         {
 1628              		.loc 1 851 12 is_stmt 0 view .LVU432
 1629 0046 0028     		cmp	r0, #0
 1630 0048 E9D0     		beq	.L114
 1631 004a E4E7     		b	.L113
 1632              	.LVL166:
 1633              	.L115:
 840:Core/Src/bno055.c ****     }
 1634              		.loc 1 840 16 view .LVU433
 1635 004c 6FF07E00 		mvn	r0, #126
 1636              	.LVL167:
 840:Core/Src/bno055.c ****     }
 1637              		.loc 1 840 16 view .LVU434
 1638 0050 F4E7     		b	.L112
 1639              	.LVL168:
 1640              	.L116:
 868:Core/Src/bno055.c ****         }
 1641              		.loc 1 868 22 view .LVU435
ARM GAS  /tmp/ccWoU29M.s 			page 47


 1642 0052 4FF0FF30 		mov	r0, #-1
 1643 0056 F1E7     		b	.L112
 1644              	.L120:
 1645              		.align	2
 1646              	.L119:
 1647 0058 00000000 		.word	.LANCHOR0
 1648              		.cfi_endproc
 1649              	.LFE13:
 1651              		.section	.text.bno055_read_accel_xyz,"ax",%progbits
 1652              		.align	1
 1653              		.global	bno055_read_accel_xyz
 1654              		.syntax unified
 1655              		.thumb
 1656              		.thumb_func
 1657              		.fpu fpv4-sp-d16
 1659              	bno055_read_accel_xyz:
 1660              	.LVL169:
 1661              	.LFB14:
 874:Core/Src/bno055.c **** 
 875:Core/Src/bno055.c **** /*!
 876:Core/Src/bno055.c ****  *  @brief This API reads acceleration data xyz values
 877:Core/Src/bno055.c ****  *  from register 0x08 to 0x0D it is a six byte data
 878:Core/Src/bno055.c ****  *
 879:Core/Src/bno055.c ****  *
 880:Core/Src/bno055.c ****  *  @param accel : The value of accel xyz data
 881:Core/Src/bno055.c ****  *
 882:Core/Src/bno055.c ****  *  Parameter |    result
 883:Core/Src/bno055.c ****  *  --------- | -----------------
 884:Core/Src/bno055.c ****  *   x        | The accel x data
 885:Core/Src/bno055.c ****  *   y        | The accel y data
 886:Core/Src/bno055.c ****  *   z        | The accel z data
 887:Core/Src/bno055.c ****  *
 888:Core/Src/bno055.c ****  *
 889:Core/Src/bno055.c ****  *
 890:Core/Src/bno055.c ****  *  @return results of bus communication function
 891:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 892:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 893:Core/Src/bno055.c ****  *
 894:Core/Src/bno055.c ****  */
 895:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_xyz(struct bno055_accel_t *accel)
 896:Core/Src/bno055.c **** {
 1662              		.loc 1 896 1 is_stmt 1 view -0
 1663              		.cfi_startproc
 1664              		@ args = 0, pretend = 0, frame = 8
 1665              		@ frame_needed = 0, uses_anonymous_args = 0
 1666              		.loc 1 896 1 is_stmt 0 view .LVU437
 1667 0000 30B5     		push	{r4, r5, lr}
 1668              	.LCFI49:
 1669              		.cfi_def_cfa_offset 12
 1670              		.cfi_offset 4, -12
 1671              		.cfi_offset 5, -8
 1672              		.cfi_offset 14, -4
 1673 0002 83B0     		sub	sp, sp, #12
 1674              	.LCFI50:
 1675              		.cfi_def_cfa_offset 24
 1676 0004 0446     		mov	r4, r0
 897:Core/Src/bno055.c ****     /* Variable used to return value of
ARM GAS  /tmp/ccWoU29M.s 			page 48


 898:Core/Src/bno055.c ****      * communication routine*/
 899:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1677              		.loc 1 899 5 is_stmt 1 view .LVU438
 1678              	.LVL170:
 900:Core/Src/bno055.c **** 
 901:Core/Src/bno055.c ****     /* Array holding the accel xyz value
 902:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
 903:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
 904:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
 905:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
 906:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
 907:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
 908:Core/Src/bno055.c ****      */
 909:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_XYZ_DATA_SIZE] = {
 1679              		.loc 1 909 5 view .LVU439
 1680              		.loc 1 909 8 is_stmt 0 view .LVU440
 1681 0006 1D4B     		ldr	r3, .L129
 1682 0008 93E80300 		ldm	r3, {r0, r1}
 1683              	.LVL171:
 1684              		.loc 1 909 8 view .LVU441
 1685 000c 0090     		str	r0, [sp]
 1686 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
 910:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
 911:Core/Src/bno055.c ****     };
 912:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1687              		.loc 1 912 5 is_stmt 1 view .LVU442
 1688              	.LVL172:
 913:Core/Src/bno055.c **** 
 914:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 915:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1689              		.loc 1 915 5 view .LVU443
 1690              		.loc 1 915 18 is_stmt 0 view .LVU444
 1691 0012 1B4B     		ldr	r3, .L129+4
 1692 0014 1B68     		ldr	r3, [r3]
 1693              		.loc 1 915 8 view .LVU445
 1694 0016 53B3     		cbz	r3, .L125
 916:Core/Src/bno055.c ****     {
 917:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 918:Core/Src/bno055.c ****     }
 919:Core/Src/bno055.c ****     else
 920:Core/Src/bno055.c ****     {
 921:Core/Src/bno055.c ****         /*condition check for page, chip id is
 922:Core/Src/bno055.c ****          * available in the page zero*/
 923:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1695              		.loc 1 923 9 is_stmt 1 view .LVU446
 1696              		.loc 1 923 21 is_stmt 0 view .LVU447
 1697 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1698              		.loc 1 923 12 view .LVU448
 1699 001a 13BB     		cbnz	r3, .L128
 1700              	.LVL173:
 1701              	.L123:
 924:Core/Src/bno055.c ****         {
 925:Core/Src/bno055.c ****             /* Write the page zero*/
 926:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 927:Core/Src/bno055.c ****         }
 928:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1702              		.loc 1 928 53 discriminator 1 view .LVU449
ARM GAS  /tmp/ccWoU29M.s 			page 49


 1703 001c 184B     		ldr	r3, .L129+4
 1704 001e 1B68     		ldr	r3, [r3]
 1705 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1706              		.loc 1 928 41 discriminator 1 view .LVU450
 1707 0022 3BBB     		cbnz	r3, .L126
 1708              	.L124:
 929:Core/Src/bno055.c ****         {
 930:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1709              		.loc 1 930 13 is_stmt 1 view .LVU451
 1710              		.loc 1 930 32 is_stmt 0 view .LVU452
 1711 0024 164B     		ldr	r3, .L129+4
 1712 0026 1868     		ldr	r0, [r3]
 1713 0028 0569     		ldr	r5, [r0, #16]
 1714              		.loc 1 930 24 view .LVU453
 1715 002a 0623     		movs	r3, #6
 1716 002c 6A46     		mov	r2, sp
 1717 002e 0821     		movs	r1, #8
 1718 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1719 0032 A847     		blx	r5
 1720              	.LVL174:
 931:Core/Src/bno055.c ****                                                       BNO055_ACCEL_DATA_X_LSB_VALUEX_REG,
 932:Core/Src/bno055.c ****                                                       data_u8,
 933:Core/Src/bno055.c ****                                                       BNO055_ACCEL_XYZ_DATA_SIZE);
 934:Core/Src/bno055.c **** 
 935:Core/Src/bno055.c ****             /* Data X*/
 936:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1721              		.loc 1 936 13 is_stmt 1 view .LVU454
 937:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_X_LSB_VAL
 938:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1722              		.loc 1 938 13 view .LVU455
 939:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_X_MSB_VAL
 940:Core/Src/bno055.c ****             accel->x =
 1723              		.loc 1 940 13 view .LVU456
 941:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1724              		.loc 1 941 31 is_stmt 0 view .LVU457
 1725 0034 9DF90120 		ldrsb	r2, [sp, #1]
 942:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 1726              		.loc 1 942 31 view .LVU458
 1727 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 941:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1728              		.loc 1 941 17 view .LVU459
 1729 003c 43EA0223 		orr	r3, r3, r2, lsl #8
 940:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1730              		.loc 1 940 22 view .LVU460
 1731 0040 2380     		strh	r3, [r4]	@ movhi
 943:Core/Src/bno055.c **** 
 944:Core/Src/bno055.c ****             /* Data Y*/
 945:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1732              		.loc 1 945 13 is_stmt 1 view .LVU461
 946:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_Y_LSB_VAL
 947:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1733              		.loc 1 947 13 view .LVU462
 948:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_Y_MSB_VAL
 949:Core/Src/bno055.c ****             accel->y =
 1734              		.loc 1 949 13 view .LVU463
 950:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1735              		.loc 1 950 31 is_stmt 0 view .LVU464
ARM GAS  /tmp/ccWoU29M.s 			page 50


 1736 0042 9DF90320 		ldrsb	r2, [sp, #3]
 951:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 1737              		.loc 1 951 31 view .LVU465
 1738 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
 950:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1739              		.loc 1 950 17 view .LVU466
 1740 004a 43EA0223 		orr	r3, r3, r2, lsl #8
 949:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1741              		.loc 1 949 22 view .LVU467
 1742 004e 6380     		strh	r3, [r4, #2]	@ movhi
 952:Core/Src/bno055.c **** 
 953:Core/Src/bno055.c ****             /* Data Z*/
 954:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1743              		.loc 1 954 13 is_stmt 1 view .LVU468
 955:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_Z_LSB_VAL
 956:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1744              		.loc 1 956 13 view .LVU469
 957:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_Z_MSB_VAL
 958:Core/Src/bno055.c ****             accel->z =
 1745              		.loc 1 958 13 view .LVU470
 959:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1746              		.loc 1 959 31 is_stmt 0 view .LVU471
 1747 0050 9DF90520 		ldrsb	r2, [sp, #5]
 960:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 1748              		.loc 1 960 31 view .LVU472
 1749 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 959:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1750              		.loc 1 959 17 view .LVU473
 1751 0058 43EA0223 		orr	r3, r3, r2, lsl #8
 958:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1752              		.loc 1 958 22 view .LVU474
 1753 005c A380     		strh	r3, [r4, #4]	@ movhi
 1754              	.LVL175:
 1755              	.L122:
 961:Core/Src/bno055.c ****         }
 962:Core/Src/bno055.c ****         else
 963:Core/Src/bno055.c ****         {
 964:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 965:Core/Src/bno055.c ****         }
 966:Core/Src/bno055.c ****     }
 967:Core/Src/bno055.c **** 
 968:Core/Src/bno055.c ****     return com_rslt;
 969:Core/Src/bno055.c **** }
 1756              		.loc 1 969 1 view .LVU475
 1757 005e 03B0     		add	sp, sp, #12
 1758              	.LCFI51:
 1759              		.cfi_remember_state
 1760              		.cfi_def_cfa_offset 12
 1761              		@ sp needed
 1762 0060 30BD     		pop	{r4, r5, pc}
 1763              	.LVL176:
 1764              	.L128:
 1765              	.LCFI52:
 1766              		.cfi_restore_state
 926:Core/Src/bno055.c ****         }
 1767              		.loc 1 926 13 is_stmt 1 view .LVU476
 926:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 51


 1768              		.loc 1 926 23 is_stmt 0 view .LVU477
 1769 0062 0020     		movs	r0, #0
 1770 0064 FFF7FEFF 		bl	bno055_write_page_id
 1771              	.LVL177:
 928:Core/Src/bno055.c ****         {
 1772              		.loc 1 928 9 is_stmt 1 view .LVU478
 928:Core/Src/bno055.c ****         {
 1773              		.loc 1 928 12 is_stmt 0 view .LVU479
 1774 0068 0028     		cmp	r0, #0
 1775 006a DBD0     		beq	.L124
 1776 006c D6E7     		b	.L123
 1777              	.LVL178:
 1778              	.L125:
 917:Core/Src/bno055.c ****     }
 1779              		.loc 1 917 16 view .LVU480
 1780 006e 6FF07E00 		mvn	r0, #126
 1781 0072 F4E7     		b	.L122
 1782              	.LVL179:
 1783              	.L126:
 964:Core/Src/bno055.c ****         }
 1784              		.loc 1 964 22 view .LVU481
 1785 0074 4FF0FF30 		mov	r0, #-1
 1786 0078 F1E7     		b	.L122
 1787              	.L130:
 1788 007a 00BF     		.align	2
 1789              	.L129:
 1790 007c 00000000 		.word	.LANCHOR1
 1791 0080 00000000 		.word	.LANCHOR0
 1792              		.cfi_endproc
 1793              	.LFE14:
 1795              		.section	.text.bno055_read_mag_x,"ax",%progbits
 1796              		.align	1
 1797              		.global	bno055_read_mag_x
 1798              		.syntax unified
 1799              		.thumb
 1800              		.thumb_func
 1801              		.fpu fpv4-sp-d16
 1803              	bno055_read_mag_x:
 1804              	.LVL180:
 1805              	.LFB15:
 970:Core/Src/bno055.c **** 
 971:Core/Src/bno055.c **** /*!
 972:Core/Src/bno055.c ****  *  @brief This API reads mag data x values
 973:Core/Src/bno055.c ****  *  from register 0x0E and 0x0F it is a two byte data
 974:Core/Src/bno055.c ****  *
 975:Core/Src/bno055.c ****  *
 976:Core/Src/bno055.c ****  *
 977:Core/Src/bno055.c ****  *
 978:Core/Src/bno055.c ****  *  @param mag_x_s16 : The x raw data
 979:Core/Src/bno055.c ****  *
 980:Core/Src/bno055.c ****  *
 981:Core/Src/bno055.c ****  *
 982:Core/Src/bno055.c ****  *  @return results of bus communication function
 983:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 984:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 985:Core/Src/bno055.c ****  *
 986:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 52


 987:Core/Src/bno055.c ****  *
 988:Core/Src/bno055.c ****  */
 989:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_x(s16 *mag_x_s16)
 990:Core/Src/bno055.c **** {
 1806              		.loc 1 990 1 is_stmt 1 view -0
 1807              		.cfi_startproc
 1808              		@ args = 0, pretend = 0, frame = 8
 1809              		@ frame_needed = 0, uses_anonymous_args = 0
 1810              		.loc 1 990 1 is_stmt 0 view .LVU483
 1811 0000 30B5     		push	{r4, r5, lr}
 1812              	.LCFI53:
 1813              		.cfi_def_cfa_offset 12
 1814              		.cfi_offset 4, -12
 1815              		.cfi_offset 5, -8
 1816              		.cfi_offset 14, -4
 1817 0002 83B0     		sub	sp, sp, #12
 1818              	.LCFI54:
 1819              		.cfi_def_cfa_offset 24
 991:Core/Src/bno055.c ****     /* Variable used to return value of
 992:Core/Src/bno055.c ****      * communication routine*/
 993:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1820              		.loc 1 993 5 is_stmt 1 view .LVU484
 1821              	.LVL181:
 994:Core/Src/bno055.c **** 
 995:Core/Src/bno055.c ****     /* Array holding the mag x value
 996:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - x->LSB
 997:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - x->MSB
 998:Core/Src/bno055.c ****      */
 999:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1822              		.loc 1 999 5 view .LVU485
 1823              		.loc 1 999 8 is_stmt 0 view .LVU486
 1824 0004 0023     		movs	r3, #0
 1825 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1000:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1826              		.loc 1 1000 5 is_stmt 1 view .LVU487
 1827              	.LVL182:
1001:Core/Src/bno055.c **** 
1002:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1003:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1828              		.loc 1 1003 5 view .LVU488
 1829              		.loc 1 1003 18 is_stmt 0 view .LVU489
 1830 000a 134B     		ldr	r3, .L139
 1831 000c 1B68     		ldr	r3, [r3]
 1832              		.loc 1 1003 8 view .LVU490
 1833 000e EBB1     		cbz	r3, .L135
 1834 0010 0446     		mov	r4, r0
1004:Core/Src/bno055.c ****     {
1005:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1006:Core/Src/bno055.c ****     }
1007:Core/Src/bno055.c ****     else
1008:Core/Src/bno055.c ****     {
1009:Core/Src/bno055.c ****         /*condition check for page, chip id is
1010:Core/Src/bno055.c ****          * available in the page zero*/
1011:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1835              		.loc 1 1011 9 is_stmt 1 view .LVU491
 1836              		.loc 1 1011 21 is_stmt 0 view .LVU492
 1837 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 53


 1838              		.loc 1 1011 12 view .LVU493
 1839 0014 A3B9     		cbnz	r3, .L138
 1840              	.LVL183:
 1841              	.L133:
1012:Core/Src/bno055.c ****         {
1013:Core/Src/bno055.c ****             /* Write the page zero*/
1014:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1015:Core/Src/bno055.c ****         }
1016:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1842              		.loc 1 1016 53 discriminator 1 view .LVU494
 1843 0016 104B     		ldr	r3, .L139
 1844 0018 1B68     		ldr	r3, [r3]
 1845 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1846              		.loc 1 1016 41 discriminator 1 view .LVU495
 1847 001c CBB9     		cbnz	r3, .L136
 1848              	.L134:
1017:Core/Src/bno055.c ****         {
1018:Core/Src/bno055.c ****             /*Read the mag x two bytes of data */
1019:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1849              		.loc 1 1019 13 is_stmt 1 view .LVU496
 1850              		.loc 1 1019 32 is_stmt 0 view .LVU497
 1851 001e 0E4B     		ldr	r3, .L139
 1852 0020 1868     		ldr	r0, [r3]
 1853 0022 0569     		ldr	r5, [r0, #16]
 1854              		.loc 1 1019 24 view .LVU498
 1855 0024 0223     		movs	r3, #2
 1856 0026 01AA     		add	r2, sp, #4
 1857 0028 0E21     		movs	r1, #14
 1858 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1859 002c A847     		blx	r5
 1860              	.LVL184:
1020:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_X_LSB_VALUEX_REG,
1021:Core/Src/bno055.c ****                                                       data_u8,
1022:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1023:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1861              		.loc 1 1023 13 is_stmt 1 view .LVU499
1024:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_X_LSB_VALUEX);
1025:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1862              		.loc 1 1025 13 view .LVU500
1026:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_X_MSB_VALUEX);
1027:Core/Src/bno055.c ****             *mag_x_s16 =
 1863              		.loc 1 1027 13 view .LVU501
1028:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1864              		.loc 1 1028 31 is_stmt 0 view .LVU502
 1865 002e 9DF90520 		ldrsb	r2, [sp, #5]
1029:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1866              		.loc 1 1029 31 view .LVU503
 1867 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1028:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1868              		.loc 1 1028 17 view .LVU504
 1869 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1027:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1870              		.loc 1 1027 24 view .LVU505
 1871 003a 2380     		strh	r3, [r4]	@ movhi
 1872              	.LVL185:
 1873              	.L132:
1030:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 54


1031:Core/Src/bno055.c ****         else
1032:Core/Src/bno055.c ****         {
1033:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1034:Core/Src/bno055.c ****         }
1035:Core/Src/bno055.c ****     }
1036:Core/Src/bno055.c **** 
1037:Core/Src/bno055.c ****     return com_rslt;
1038:Core/Src/bno055.c **** }
 1874              		.loc 1 1038 1 view .LVU506
 1875 003c 03B0     		add	sp, sp, #12
 1876              	.LCFI55:
 1877              		.cfi_remember_state
 1878              		.cfi_def_cfa_offset 12
 1879              		@ sp needed
 1880 003e 30BD     		pop	{r4, r5, pc}
 1881              	.LVL186:
 1882              	.L138:
 1883              	.LCFI56:
 1884              		.cfi_restore_state
1014:Core/Src/bno055.c ****         }
 1885              		.loc 1 1014 13 is_stmt 1 view .LVU507
1014:Core/Src/bno055.c ****         }
 1886              		.loc 1 1014 23 is_stmt 0 view .LVU508
 1887 0040 0020     		movs	r0, #0
 1888              	.LVL187:
1014:Core/Src/bno055.c ****         }
 1889              		.loc 1 1014 23 view .LVU509
 1890 0042 FFF7FEFF 		bl	bno055_write_page_id
 1891              	.LVL188:
1016:Core/Src/bno055.c ****         {
 1892              		.loc 1 1016 9 is_stmt 1 view .LVU510
1016:Core/Src/bno055.c ****         {
 1893              		.loc 1 1016 12 is_stmt 0 view .LVU511
 1894 0046 0028     		cmp	r0, #0
 1895 0048 E9D0     		beq	.L134
 1896 004a E4E7     		b	.L133
 1897              	.LVL189:
 1898              	.L135:
1005:Core/Src/bno055.c ****     }
 1899              		.loc 1 1005 16 view .LVU512
 1900 004c 6FF07E00 		mvn	r0, #126
 1901              	.LVL190:
1005:Core/Src/bno055.c ****     }
 1902              		.loc 1 1005 16 view .LVU513
 1903 0050 F4E7     		b	.L132
 1904              	.LVL191:
 1905              	.L136:
1033:Core/Src/bno055.c ****         }
 1906              		.loc 1 1033 22 view .LVU514
 1907 0052 4FF0FF30 		mov	r0, #-1
 1908 0056 F1E7     		b	.L132
 1909              	.L140:
 1910              		.align	2
 1911              	.L139:
 1912 0058 00000000 		.word	.LANCHOR0
 1913              		.cfi_endproc
 1914              	.LFE15:
ARM GAS  /tmp/ccWoU29M.s 			page 55


 1916              		.section	.text.bno055_read_mag_y,"ax",%progbits
 1917              		.align	1
 1918              		.global	bno055_read_mag_y
 1919              		.syntax unified
 1920              		.thumb
 1921              		.thumb_func
 1922              		.fpu fpv4-sp-d16
 1924              	bno055_read_mag_y:
 1925              	.LVL192:
 1926              	.LFB16:
1039:Core/Src/bno055.c **** 
1040:Core/Src/bno055.c **** /*!
1041:Core/Src/bno055.c ****  *  @brief This API reads mag data y values
1042:Core/Src/bno055.c ****  *  from register 0x10 and 0x11 it is a two byte data
1043:Core/Src/bno055.c ****  *
1044:Core/Src/bno055.c ****  *
1045:Core/Src/bno055.c ****  *
1046:Core/Src/bno055.c ****  *
1047:Core/Src/bno055.c ****  *  @param mag_y_s16 : The y raw data
1048:Core/Src/bno055.c ****  *
1049:Core/Src/bno055.c ****  *
1050:Core/Src/bno055.c ****  *
1051:Core/Src/bno055.c ****  *  @return results of bus communication function
1052:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1053:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1054:Core/Src/bno055.c ****  *
1055:Core/Src/bno055.c ****  *
1056:Core/Src/bno055.c ****  */
1057:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_y(s16 *mag_y_s16)
1058:Core/Src/bno055.c **** {
 1927              		.loc 1 1058 1 is_stmt 1 view -0
 1928              		.cfi_startproc
 1929              		@ args = 0, pretend = 0, frame = 8
 1930              		@ frame_needed = 0, uses_anonymous_args = 0
 1931              		.loc 1 1058 1 is_stmt 0 view .LVU516
 1932 0000 30B5     		push	{r4, r5, lr}
 1933              	.LCFI57:
 1934              		.cfi_def_cfa_offset 12
 1935              		.cfi_offset 4, -12
 1936              		.cfi_offset 5, -8
 1937              		.cfi_offset 14, -4
 1938 0002 83B0     		sub	sp, sp, #12
 1939              	.LCFI58:
 1940              		.cfi_def_cfa_offset 24
1059:Core/Src/bno055.c ****     /* Variable used to return value of
1060:Core/Src/bno055.c ****      * communication routine*/
1061:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1941              		.loc 1 1061 5 is_stmt 1 view .LVU517
 1942              	.LVL193:
1062:Core/Src/bno055.c **** 
1063:Core/Src/bno055.c ****     /* Array holding the mag y value
1064:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - y->LSB
1065:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - y->MSB
1066:Core/Src/bno055.c ****      */
1067:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1943              		.loc 1 1067 5 view .LVU518
 1944              		.loc 1 1067 8 is_stmt 0 view .LVU519
ARM GAS  /tmp/ccWoU29M.s 			page 56


 1945 0004 0023     		movs	r3, #0
 1946 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1068:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1947              		.loc 1 1068 5 is_stmt 1 view .LVU520
 1948              	.LVL194:
1069:Core/Src/bno055.c **** 
1070:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1071:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1949              		.loc 1 1071 5 view .LVU521
 1950              		.loc 1 1071 18 is_stmt 0 view .LVU522
 1951 000a 134B     		ldr	r3, .L149
 1952 000c 1B68     		ldr	r3, [r3]
 1953              		.loc 1 1071 8 view .LVU523
 1954 000e EBB1     		cbz	r3, .L145
 1955 0010 0446     		mov	r4, r0
1072:Core/Src/bno055.c ****     {
1073:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1074:Core/Src/bno055.c ****     }
1075:Core/Src/bno055.c ****     else
1076:Core/Src/bno055.c ****     {
1077:Core/Src/bno055.c ****         /*condition check for page, chip id is
1078:Core/Src/bno055.c ****          * available in the page zero*/
1079:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1956              		.loc 1 1079 9 is_stmt 1 view .LVU524
 1957              		.loc 1 1079 21 is_stmt 0 view .LVU525
 1958 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1959              		.loc 1 1079 12 view .LVU526
 1960 0014 A3B9     		cbnz	r3, .L148
 1961              	.LVL195:
 1962              	.L143:
1080:Core/Src/bno055.c ****         {
1081:Core/Src/bno055.c ****             /* Write the page zero*/
1082:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1083:Core/Src/bno055.c ****         }
1084:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1963              		.loc 1 1084 53 discriminator 1 view .LVU527
 1964 0016 104B     		ldr	r3, .L149
 1965 0018 1B68     		ldr	r3, [r3]
 1966 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1967              		.loc 1 1084 41 discriminator 1 view .LVU528
 1968 001c CBB9     		cbnz	r3, .L146
 1969              	.L144:
1085:Core/Src/bno055.c ****         {
1086:Core/Src/bno055.c ****             /*Read the mag y two bytes of data */
1087:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1970              		.loc 1 1087 13 is_stmt 1 view .LVU529
 1971              		.loc 1 1087 32 is_stmt 0 view .LVU530
 1972 001e 0E4B     		ldr	r3, .L149
 1973 0020 1868     		ldr	r0, [r3]
 1974 0022 0569     		ldr	r5, [r0, #16]
 1975              		.loc 1 1087 24 view .LVU531
 1976 0024 0223     		movs	r3, #2
 1977 0026 01AA     		add	r2, sp, #4
 1978 0028 1021     		movs	r1, #16
 1979 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1980 002c A847     		blx	r5
 1981              	.LVL196:
ARM GAS  /tmp/ccWoU29M.s 			page 57


1088:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_Y_LSB_VALUEY_REG,
1089:Core/Src/bno055.c ****                                                       data_u8,
1090:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1091:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1982              		.loc 1 1091 13 is_stmt 1 view .LVU532
1092:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_Y_LSB_VALUEY);
1093:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1983              		.loc 1 1093 13 view .LVU533
1094:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_Y_MSB_VALUEY);
1095:Core/Src/bno055.c ****             *mag_y_s16 =
 1984              		.loc 1 1095 13 view .LVU534
1096:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1985              		.loc 1 1096 31 is_stmt 0 view .LVU535
 1986 002e 9DF90520 		ldrsb	r2, [sp, #5]
1097:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1987              		.loc 1 1097 31 view .LVU536
 1988 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1096:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1989              		.loc 1 1096 17 view .LVU537
 1990 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1095:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1991              		.loc 1 1095 24 view .LVU538
 1992 003a 2380     		strh	r3, [r4]	@ movhi
 1993              	.LVL197:
 1994              	.L142:
1098:Core/Src/bno055.c ****         }
1099:Core/Src/bno055.c ****         else
1100:Core/Src/bno055.c ****         {
1101:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1102:Core/Src/bno055.c ****         }
1103:Core/Src/bno055.c ****     }
1104:Core/Src/bno055.c **** 
1105:Core/Src/bno055.c ****     return com_rslt;
1106:Core/Src/bno055.c **** }
 1995              		.loc 1 1106 1 view .LVU539
 1996 003c 03B0     		add	sp, sp, #12
 1997              	.LCFI59:
 1998              		.cfi_remember_state
 1999              		.cfi_def_cfa_offset 12
 2000              		@ sp needed
 2001 003e 30BD     		pop	{r4, r5, pc}
 2002              	.LVL198:
 2003              	.L148:
 2004              	.LCFI60:
 2005              		.cfi_restore_state
1082:Core/Src/bno055.c ****         }
 2006              		.loc 1 1082 13 is_stmt 1 view .LVU540
1082:Core/Src/bno055.c ****         }
 2007              		.loc 1 1082 23 is_stmt 0 view .LVU541
 2008 0040 0020     		movs	r0, #0
 2009              	.LVL199:
1082:Core/Src/bno055.c ****         }
 2010              		.loc 1 1082 23 view .LVU542
 2011 0042 FFF7FEFF 		bl	bno055_write_page_id
 2012              	.LVL200:
1084:Core/Src/bno055.c ****         {
 2013              		.loc 1 1084 9 is_stmt 1 view .LVU543
ARM GAS  /tmp/ccWoU29M.s 			page 58


1084:Core/Src/bno055.c ****         {
 2014              		.loc 1 1084 12 is_stmt 0 view .LVU544
 2015 0046 0028     		cmp	r0, #0
 2016 0048 E9D0     		beq	.L144
 2017 004a E4E7     		b	.L143
 2018              	.LVL201:
 2019              	.L145:
1073:Core/Src/bno055.c ****     }
 2020              		.loc 1 1073 16 view .LVU545
 2021 004c 6FF07E00 		mvn	r0, #126
 2022              	.LVL202:
1073:Core/Src/bno055.c ****     }
 2023              		.loc 1 1073 16 view .LVU546
 2024 0050 F4E7     		b	.L142
 2025              	.LVL203:
 2026              	.L146:
1101:Core/Src/bno055.c ****         }
 2027              		.loc 1 1101 22 view .LVU547
 2028 0052 4FF0FF30 		mov	r0, #-1
 2029 0056 F1E7     		b	.L142
 2030              	.L150:
 2031              		.align	2
 2032              	.L149:
 2033 0058 00000000 		.word	.LANCHOR0
 2034              		.cfi_endproc
 2035              	.LFE16:
 2037              		.section	.text.bno055_read_mag_z,"ax",%progbits
 2038              		.align	1
 2039              		.global	bno055_read_mag_z
 2040              		.syntax unified
 2041              		.thumb
 2042              		.thumb_func
 2043              		.fpu fpv4-sp-d16
 2045              	bno055_read_mag_z:
 2046              	.LVL204:
 2047              	.LFB17:
1107:Core/Src/bno055.c **** 
1108:Core/Src/bno055.c **** /*!
1109:Core/Src/bno055.c ****  *  @brief This API reads mag data z values
1110:Core/Src/bno055.c ****  *  from register 0x12 and 0x13 it is a two byte data
1111:Core/Src/bno055.c ****  *
1112:Core/Src/bno055.c ****  *
1113:Core/Src/bno055.c ****  *
1114:Core/Src/bno055.c ****  *
1115:Core/Src/bno055.c ****  *  @param mag_z_s16 : The z raw data
1116:Core/Src/bno055.c ****  *
1117:Core/Src/bno055.c ****  *
1118:Core/Src/bno055.c ****  *
1119:Core/Src/bno055.c ****  *  @return results of bus communication function
1120:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1121:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1122:Core/Src/bno055.c ****  *
1123:Core/Src/bno055.c ****  *
1124:Core/Src/bno055.c ****  *
1125:Core/Src/bno055.c ****  */
1126:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_z(s16 *mag_z_s16)
1127:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccWoU29M.s 			page 59


 2048              		.loc 1 1127 1 is_stmt 1 view -0
 2049              		.cfi_startproc
 2050              		@ args = 0, pretend = 0, frame = 8
 2051              		@ frame_needed = 0, uses_anonymous_args = 0
 2052              		.loc 1 1127 1 is_stmt 0 view .LVU549
 2053 0000 30B5     		push	{r4, r5, lr}
 2054              	.LCFI61:
 2055              		.cfi_def_cfa_offset 12
 2056              		.cfi_offset 4, -12
 2057              		.cfi_offset 5, -8
 2058              		.cfi_offset 14, -4
 2059 0002 83B0     		sub	sp, sp, #12
 2060              	.LCFI62:
 2061              		.cfi_def_cfa_offset 24
1128:Core/Src/bno055.c ****     /* Variable used to return value of
1129:Core/Src/bno055.c ****      * communication routine*/
1130:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2062              		.loc 1 1130 5 is_stmt 1 view .LVU550
 2063              	.LVL205:
1131:Core/Src/bno055.c **** 
1132:Core/Src/bno055.c ****     /* Array holding the mag z value
1133:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - z->LSB
1134:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - z->MSB
1135:Core/Src/bno055.c ****      */
1136:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2064              		.loc 1 1136 5 view .LVU551
 2065              		.loc 1 1136 8 is_stmt 0 view .LVU552
 2066 0004 0023     		movs	r3, #0
 2067 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1137:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2068              		.loc 1 1137 5 is_stmt 1 view .LVU553
 2069              	.LVL206:
1138:Core/Src/bno055.c **** 
1139:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1140:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2070              		.loc 1 1140 5 view .LVU554
 2071              		.loc 1 1140 18 is_stmt 0 view .LVU555
 2072 000a 134B     		ldr	r3, .L159
 2073 000c 1B68     		ldr	r3, [r3]
 2074              		.loc 1 1140 8 view .LVU556
 2075 000e EBB1     		cbz	r3, .L155
 2076 0010 0446     		mov	r4, r0
1141:Core/Src/bno055.c ****     {
1142:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1143:Core/Src/bno055.c ****     }
1144:Core/Src/bno055.c ****     else
1145:Core/Src/bno055.c ****     {
1146:Core/Src/bno055.c ****         /*condition check for page, chip id is
1147:Core/Src/bno055.c ****          * available in the page zero*/
1148:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2077              		.loc 1 1148 9 is_stmt 1 view .LVU557
 2078              		.loc 1 1148 21 is_stmt 0 view .LVU558
 2079 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2080              		.loc 1 1148 12 view .LVU559
 2081 0014 A3B9     		cbnz	r3, .L158
 2082              	.LVL207:
 2083              	.L153:
ARM GAS  /tmp/ccWoU29M.s 			page 60


1149:Core/Src/bno055.c ****         {
1150:Core/Src/bno055.c ****             /* Write the page zero*/
1151:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1152:Core/Src/bno055.c ****         }
1153:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2084              		.loc 1 1153 53 discriminator 1 view .LVU560
 2085 0016 104B     		ldr	r3, .L159
 2086 0018 1B68     		ldr	r3, [r3]
 2087 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2088              		.loc 1 1153 41 discriminator 1 view .LVU561
 2089 001c CBB9     		cbnz	r3, .L156
 2090              	.L154:
1154:Core/Src/bno055.c ****         {
1155:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2091              		.loc 1 1155 13 is_stmt 1 view .LVU562
 2092              		.loc 1 1155 32 is_stmt 0 view .LVU563
 2093 001e 0E4B     		ldr	r3, .L159
 2094 0020 1868     		ldr	r0, [r3]
 2095 0022 0569     		ldr	r5, [r0, #16]
 2096              		.loc 1 1155 24 view .LVU564
 2097 0024 0223     		movs	r3, #2
 2098 0026 01AA     		add	r2, sp, #4
 2099 0028 1221     		movs	r1, #18
 2100 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2101 002c A847     		blx	r5
 2102              	.LVL208:
1156:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_Z_LSB_VALUEZ_REG,
1157:Core/Src/bno055.c ****                                                       data_u8,
1158:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1159:Core/Src/bno055.c **** 
1160:Core/Src/bno055.c ****             /*Read the mag z two bytes of data */
1161:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 2103              		.loc 1 1161 13 is_stmt 1 view .LVU565
1162:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_Z_LSB_VALUEZ);
1163:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 2104              		.loc 1 1163 13 view .LVU566
1164:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_Z_MSB_VALUEZ);
1165:Core/Src/bno055.c ****             *mag_z_s16 =
 2105              		.loc 1 1165 13 view .LVU567
1166:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2106              		.loc 1 1166 31 is_stmt 0 view .LVU568
 2107 002e 9DF90520 		ldrsb	r2, [sp, #5]
1167:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 2108              		.loc 1 1167 31 view .LVU569
 2109 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1166:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2110              		.loc 1 1166 17 view .LVU570
 2111 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1165:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2112              		.loc 1 1165 24 view .LVU571
 2113 003a 2380     		strh	r3, [r4]	@ movhi
 2114              	.LVL209:
 2115              	.L152:
1168:Core/Src/bno055.c ****         }
1169:Core/Src/bno055.c ****         else
1170:Core/Src/bno055.c ****         {
1171:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 61


1172:Core/Src/bno055.c ****         }
1173:Core/Src/bno055.c ****     }
1174:Core/Src/bno055.c **** 
1175:Core/Src/bno055.c ****     return com_rslt;
1176:Core/Src/bno055.c **** }
 2116              		.loc 1 1176 1 view .LVU572
 2117 003c 03B0     		add	sp, sp, #12
 2118              	.LCFI63:
 2119              		.cfi_remember_state
 2120              		.cfi_def_cfa_offset 12
 2121              		@ sp needed
 2122 003e 30BD     		pop	{r4, r5, pc}
 2123              	.LVL210:
 2124              	.L158:
 2125              	.LCFI64:
 2126              		.cfi_restore_state
1151:Core/Src/bno055.c ****         }
 2127              		.loc 1 1151 13 is_stmt 1 view .LVU573
1151:Core/Src/bno055.c ****         }
 2128              		.loc 1 1151 23 is_stmt 0 view .LVU574
 2129 0040 0020     		movs	r0, #0
 2130              	.LVL211:
1151:Core/Src/bno055.c ****         }
 2131              		.loc 1 1151 23 view .LVU575
 2132 0042 FFF7FEFF 		bl	bno055_write_page_id
 2133              	.LVL212:
1153:Core/Src/bno055.c ****         {
 2134              		.loc 1 1153 9 is_stmt 1 view .LVU576
1153:Core/Src/bno055.c ****         {
 2135              		.loc 1 1153 12 is_stmt 0 view .LVU577
 2136 0046 0028     		cmp	r0, #0
 2137 0048 E9D0     		beq	.L154
 2138 004a E4E7     		b	.L153
 2139              	.LVL213:
 2140              	.L155:
1142:Core/Src/bno055.c ****     }
 2141              		.loc 1 1142 16 view .LVU578
 2142 004c 6FF07E00 		mvn	r0, #126
 2143              	.LVL214:
1142:Core/Src/bno055.c ****     }
 2144              		.loc 1 1142 16 view .LVU579
 2145 0050 F4E7     		b	.L152
 2146              	.LVL215:
 2147              	.L156:
1171:Core/Src/bno055.c ****         }
 2148              		.loc 1 1171 22 view .LVU580
 2149 0052 4FF0FF30 		mov	r0, #-1
 2150 0056 F1E7     		b	.L152
 2151              	.L160:
 2152              		.align	2
 2153              	.L159:
 2154 0058 00000000 		.word	.LANCHOR0
 2155              		.cfi_endproc
 2156              	.LFE17:
 2158              		.section	.text.bno055_read_mag_xyz,"ax",%progbits
 2159              		.align	1
 2160              		.global	bno055_read_mag_xyz
ARM GAS  /tmp/ccWoU29M.s 			page 62


 2161              		.syntax unified
 2162              		.thumb
 2163              		.thumb_func
 2164              		.fpu fpv4-sp-d16
 2166              	bno055_read_mag_xyz:
 2167              	.LVL216:
 2168              	.LFB18:
1177:Core/Src/bno055.c **** 
1178:Core/Src/bno055.c **** /*!
1179:Core/Src/bno055.c ****  *  @brief This API reads mag data xyz values
1180:Core/Src/bno055.c ****  *  from register 0x0E to 0x13 it is a six byte data
1181:Core/Src/bno055.c ****  *
1182:Core/Src/bno055.c ****  *
1183:Core/Src/bno055.c ****  *  @param mag : The mag xyz values
1184:Core/Src/bno055.c ****  *
1185:Core/Src/bno055.c ****  *  Parameter |    result
1186:Core/Src/bno055.c ****  *  --------- | -----------------
1187:Core/Src/bno055.c ****  *   x        | The mag x data
1188:Core/Src/bno055.c ****  *   y        | The mag y data
1189:Core/Src/bno055.c ****  *   z        | The mag z data
1190:Core/Src/bno055.c ****  *
1191:Core/Src/bno055.c ****  *
1192:Core/Src/bno055.c ****  *
1193:Core/Src/bno055.c ****  *  @return results of bus communication function
1194:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1195:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1196:Core/Src/bno055.c ****  *
1197:Core/Src/bno055.c ****  */
1198:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_xyz(struct bno055_mag_t *mag)
1199:Core/Src/bno055.c **** {
 2169              		.loc 1 1199 1 is_stmt 1 view -0
 2170              		.cfi_startproc
 2171              		@ args = 0, pretend = 0, frame = 8
 2172              		@ frame_needed = 0, uses_anonymous_args = 0
 2173              		.loc 1 1199 1 is_stmt 0 view .LVU582
 2174 0000 30B5     		push	{r4, r5, lr}
 2175              	.LCFI65:
 2176              		.cfi_def_cfa_offset 12
 2177              		.cfi_offset 4, -12
 2178              		.cfi_offset 5, -8
 2179              		.cfi_offset 14, -4
 2180 0002 83B0     		sub	sp, sp, #12
 2181              	.LCFI66:
 2182              		.cfi_def_cfa_offset 24
 2183 0004 0446     		mov	r4, r0
1200:Core/Src/bno055.c ****     /* Variable used to return value of
1201:Core/Src/bno055.c ****      * communication routine*/
1202:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2184              		.loc 1 1202 5 is_stmt 1 view .LVU583
 2185              	.LVL217:
1203:Core/Src/bno055.c **** 
1204:Core/Src/bno055.c ****     /* Array holding the mag xyz value
1205:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
1206:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
1207:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
1208:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
1209:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
ARM GAS  /tmp/ccWoU29M.s 			page 63


1210:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
1211:Core/Src/bno055.c ****      */
1212:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_XYZ_DATA_SIZE] = {
 2186              		.loc 1 1212 5 view .LVU584
 2187              		.loc 1 1212 8 is_stmt 0 view .LVU585
 2188 0006 1D4B     		ldr	r3, .L169
 2189 0008 93E80300 		ldm	r3, {r0, r1}
 2190              	.LVL218:
 2191              		.loc 1 1212 8 view .LVU586
 2192 000c 0090     		str	r0, [sp]
 2193 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
1213:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
1214:Core/Src/bno055.c ****     };
1215:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2194              		.loc 1 1215 5 is_stmt 1 view .LVU587
 2195              	.LVL219:
1216:Core/Src/bno055.c **** 
1217:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1218:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2196              		.loc 1 1218 5 view .LVU588
 2197              		.loc 1 1218 18 is_stmt 0 view .LVU589
 2198 0012 1B4B     		ldr	r3, .L169+4
 2199 0014 1B68     		ldr	r3, [r3]
 2200              		.loc 1 1218 8 view .LVU590
 2201 0016 53B3     		cbz	r3, .L165
1219:Core/Src/bno055.c ****     {
1220:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1221:Core/Src/bno055.c ****     }
1222:Core/Src/bno055.c ****     else
1223:Core/Src/bno055.c ****     {
1224:Core/Src/bno055.c ****         /*condition check for page, chip id is
1225:Core/Src/bno055.c ****          * available in the page zero*/
1226:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2202              		.loc 1 1226 9 is_stmt 1 view .LVU591
 2203              		.loc 1 1226 21 is_stmt 0 view .LVU592
 2204 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2205              		.loc 1 1226 12 view .LVU593
 2206 001a 13BB     		cbnz	r3, .L168
 2207              	.LVL220:
 2208              	.L163:
1227:Core/Src/bno055.c ****         {
1228:Core/Src/bno055.c ****             /* Write the page zero*/
1229:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1230:Core/Src/bno055.c ****         }
1231:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2209              		.loc 1 1231 53 discriminator 1 view .LVU594
 2210 001c 184B     		ldr	r3, .L169+4
 2211 001e 1B68     		ldr	r3, [r3]
 2212 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2213              		.loc 1 1231 41 discriminator 1 view .LVU595
 2214 0022 3BBB     		cbnz	r3, .L166
 2215              	.L164:
1232:Core/Src/bno055.c ****         {
1233:Core/Src/bno055.c ****             /*Read the six byte value of mag xyz*/
1234:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2216              		.loc 1 1234 13 is_stmt 1 view .LVU596
 2217              		.loc 1 1234 32 is_stmt 0 view .LVU597
ARM GAS  /tmp/ccWoU29M.s 			page 64


 2218 0024 164B     		ldr	r3, .L169+4
 2219 0026 1868     		ldr	r0, [r3]
 2220 0028 0569     		ldr	r5, [r0, #16]
 2221              		.loc 1 1234 24 view .LVU598
 2222 002a 0623     		movs	r3, #6
 2223 002c 6A46     		mov	r2, sp
 2224 002e 0E21     		movs	r1, #14
 2225 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2226 0032 A847     		blx	r5
 2227              	.LVL221:
1235:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_X_LSB_VALUEX_REG,
1236:Core/Src/bno055.c ****                                                       data_u8,
1237:Core/Src/bno055.c ****                                                       BNO055_MAG_XYZ_DATA_SIZE);
1238:Core/Src/bno055.c **** 
1239:Core/Src/bno055.c ****             /* Data X*/
1240:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2228              		.loc 1 1240 13 is_stmt 1 view .LVU599
1241:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_X_LSB_VALUE
1242:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2229              		.loc 1 1242 13 view .LVU600
1243:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_X_MSB_VALUE
1244:Core/Src/bno055.c ****             mag->x =
 2230              		.loc 1 1244 13 view .LVU601
1245:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2231              		.loc 1 1245 31 is_stmt 0 view .LVU602
 2232 0034 9DF90120 		ldrsb	r2, [sp, #1]
1246:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 2233              		.loc 1 1246 31 view .LVU603
 2234 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
1245:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2235              		.loc 1 1245 17 view .LVU604
 2236 003c 43EA0223 		orr	r3, r3, r2, lsl #8
1244:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2237              		.loc 1 1244 20 view .LVU605
 2238 0040 2380     		strh	r3, [r4]	@ movhi
1247:Core/Src/bno055.c **** 
1248:Core/Src/bno055.c ****             /* Data Y*/
1249:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2239              		.loc 1 1249 13 is_stmt 1 view .LVU606
1250:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_Y_LSB_VALUE
1251:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2240              		.loc 1 1251 13 view .LVU607
1252:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_Y_MSB_VALUE
1253:Core/Src/bno055.c ****             mag->y =
 2241              		.loc 1 1253 13 view .LVU608
1254:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2242              		.loc 1 1254 31 is_stmt 0 view .LVU609
 2243 0042 9DF90320 		ldrsb	r2, [sp, #3]
1255:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 2244              		.loc 1 1255 31 view .LVU610
 2245 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
1254:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2246              		.loc 1 1254 17 view .LVU611
 2247 004a 43EA0223 		orr	r3, r3, r2, lsl #8
1253:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2248              		.loc 1 1253 20 view .LVU612
 2249 004e 6380     		strh	r3, [r4, #2]	@ movhi
ARM GAS  /tmp/ccWoU29M.s 			page 65


1256:Core/Src/bno055.c **** 
1257:Core/Src/bno055.c ****             /* Data Z*/
1258:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2250              		.loc 1 1258 13 is_stmt 1 view .LVU613
1259:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_Z_LSB_VALUE
1260:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2251              		.loc 1 1260 13 view .LVU614
1261:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_Z_MSB_VALUE
1262:Core/Src/bno055.c ****             mag->z =
 2252              		.loc 1 1262 13 view .LVU615
1263:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2253              		.loc 1 1263 31 is_stmt 0 view .LVU616
 2254 0050 9DF90520 		ldrsb	r2, [sp, #5]
1264:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 2255              		.loc 1 1264 31 view .LVU617
 2256 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1263:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2257              		.loc 1 1263 17 view .LVU618
 2258 0058 43EA0223 		orr	r3, r3, r2, lsl #8
1262:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2259              		.loc 1 1262 20 view .LVU619
 2260 005c A380     		strh	r3, [r4, #4]	@ movhi
 2261              	.LVL222:
 2262              	.L162:
1265:Core/Src/bno055.c ****         }
1266:Core/Src/bno055.c ****         else
1267:Core/Src/bno055.c ****         {
1268:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1269:Core/Src/bno055.c ****         }
1270:Core/Src/bno055.c ****     }
1271:Core/Src/bno055.c **** 
1272:Core/Src/bno055.c ****     return com_rslt;
1273:Core/Src/bno055.c **** }
 2263              		.loc 1 1273 1 view .LVU620
 2264 005e 03B0     		add	sp, sp, #12
 2265              	.LCFI67:
 2266              		.cfi_remember_state
 2267              		.cfi_def_cfa_offset 12
 2268              		@ sp needed
 2269 0060 30BD     		pop	{r4, r5, pc}
 2270              	.LVL223:
 2271              	.L168:
 2272              	.LCFI68:
 2273              		.cfi_restore_state
1229:Core/Src/bno055.c ****         }
 2274              		.loc 1 1229 13 is_stmt 1 view .LVU621
1229:Core/Src/bno055.c ****         }
 2275              		.loc 1 1229 23 is_stmt 0 view .LVU622
 2276 0062 0020     		movs	r0, #0
 2277 0064 FFF7FEFF 		bl	bno055_write_page_id
 2278              	.LVL224:
1231:Core/Src/bno055.c ****         {
 2279              		.loc 1 1231 9 is_stmt 1 view .LVU623
1231:Core/Src/bno055.c ****         {
 2280              		.loc 1 1231 12 is_stmt 0 view .LVU624
 2281 0068 0028     		cmp	r0, #0
 2282 006a DBD0     		beq	.L164
ARM GAS  /tmp/ccWoU29M.s 			page 66


 2283 006c D6E7     		b	.L163
 2284              	.LVL225:
 2285              	.L165:
1220:Core/Src/bno055.c ****     }
 2286              		.loc 1 1220 16 view .LVU625
 2287 006e 6FF07E00 		mvn	r0, #126
 2288 0072 F4E7     		b	.L162
 2289              	.LVL226:
 2290              	.L166:
1268:Core/Src/bno055.c ****         }
 2291              		.loc 1 1268 22 view .LVU626
 2292 0074 4FF0FF30 		mov	r0, #-1
 2293 0078 F1E7     		b	.L162
 2294              	.L170:
 2295 007a 00BF     		.align	2
 2296              	.L169:
 2297 007c 00000000 		.word	.LANCHOR1
 2298 0080 00000000 		.word	.LANCHOR0
 2299              		.cfi_endproc
 2300              	.LFE18:
 2302              		.section	.text.bno055_read_gyro_x,"ax",%progbits
 2303              		.align	1
 2304              		.global	bno055_read_gyro_x
 2305              		.syntax unified
 2306              		.thumb
 2307              		.thumb_func
 2308              		.fpu fpv4-sp-d16
 2310              	bno055_read_gyro_x:
 2311              	.LVL227:
 2312              	.LFB19:
1274:Core/Src/bno055.c **** 
1275:Core/Src/bno055.c **** /*!
1276:Core/Src/bno055.c ****  *  @brief This API reads gyro data x values
1277:Core/Src/bno055.c ****  *  from register 0x14 and 0x15 it is a two byte data
1278:Core/Src/bno055.c ****  *
1279:Core/Src/bno055.c ****  *
1280:Core/Src/bno055.c ****  *
1281:Core/Src/bno055.c ****  *
1282:Core/Src/bno055.c ****  *  @param gyro_x_s16 : The x raw data
1283:Core/Src/bno055.c ****  *
1284:Core/Src/bno055.c ****  *
1285:Core/Src/bno055.c ****  *
1286:Core/Src/bno055.c ****  *  @return results of bus communication function
1287:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1288:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1289:Core/Src/bno055.c ****  *
1290:Core/Src/bno055.c ****  *
1291:Core/Src/bno055.c ****  */
1292:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_x(s16 *gyro_x_s16)
1293:Core/Src/bno055.c **** {
 2313              		.loc 1 1293 1 is_stmt 1 view -0
 2314              		.cfi_startproc
 2315              		@ args = 0, pretend = 0, frame = 8
 2316              		@ frame_needed = 0, uses_anonymous_args = 0
 2317              		.loc 1 1293 1 is_stmt 0 view .LVU628
 2318 0000 30B5     		push	{r4, r5, lr}
 2319              	.LCFI69:
ARM GAS  /tmp/ccWoU29M.s 			page 67


 2320              		.cfi_def_cfa_offset 12
 2321              		.cfi_offset 4, -12
 2322              		.cfi_offset 5, -8
 2323              		.cfi_offset 14, -4
 2324 0002 83B0     		sub	sp, sp, #12
 2325              	.LCFI70:
 2326              		.cfi_def_cfa_offset 24
1294:Core/Src/bno055.c ****     /* Variable used to return value of
1295:Core/Src/bno055.c ****      * communication routine*/
1296:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2327              		.loc 1 1296 5 is_stmt 1 view .LVU629
 2328              	.LVL228:
1297:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2329              		.loc 1 1297 5 view .LVU630
 2330              		.loc 1 1297 8 is_stmt 0 view .LVU631
 2331 0004 0023     		movs	r3, #0
 2332 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1298:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2333              		.loc 1 1298 5 is_stmt 1 view .LVU632
 2334              	.LVL229:
1299:Core/Src/bno055.c **** 
1300:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1301:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2335              		.loc 1 1301 5 view .LVU633
 2336              		.loc 1 1301 18 is_stmt 0 view .LVU634
 2337 000a 134B     		ldr	r3, .L179
 2338 000c 1B68     		ldr	r3, [r3]
 2339              		.loc 1 1301 8 view .LVU635
 2340 000e EBB1     		cbz	r3, .L175
 2341 0010 0446     		mov	r4, r0
1302:Core/Src/bno055.c ****     {
1303:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1304:Core/Src/bno055.c ****     }
1305:Core/Src/bno055.c ****     else
1306:Core/Src/bno055.c ****     {
1307:Core/Src/bno055.c ****         /*condition check for page, chip id is
1308:Core/Src/bno055.c ****          * available in the page zero*/
1309:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2342              		.loc 1 1309 9 is_stmt 1 view .LVU636
 2343              		.loc 1 1309 21 is_stmt 0 view .LVU637
 2344 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2345              		.loc 1 1309 12 view .LVU638
 2346 0014 A3B9     		cbnz	r3, .L178
 2347              	.LVL230:
 2348              	.L173:
1310:Core/Src/bno055.c ****         {
1311:Core/Src/bno055.c ****             /* Write the page zero*/
1312:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1313:Core/Src/bno055.c ****         }
1314:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2349              		.loc 1 1314 53 discriminator 1 view .LVU639
 2350 0016 104B     		ldr	r3, .L179
 2351 0018 1B68     		ldr	r3, [r3]
 2352 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2353              		.loc 1 1314 41 discriminator 1 view .LVU640
 2354 001c CBB9     		cbnz	r3, .L176
 2355              	.L174:
ARM GAS  /tmp/ccWoU29M.s 			page 68


1315:Core/Src/bno055.c ****         {
1316:Core/Src/bno055.c ****             /* Read the gyro 16 bit x value*/
1317:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2356              		.loc 1 1317 13 is_stmt 1 view .LVU641
 2357              		.loc 1 1317 32 is_stmt 0 view .LVU642
 2358 001e 0E4B     		ldr	r3, .L179
 2359 0020 1868     		ldr	r0, [r3]
 2360 0022 0569     		ldr	r5, [r0, #16]
 2361              		.loc 1 1317 24 view .LVU643
 2362 0024 0223     		movs	r3, #2
 2363 0026 01AA     		add	r2, sp, #4
 2364 0028 1421     		movs	r1, #20
 2365 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2366 002c A847     		blx	r5
 2367              	.LVL231:
1318:Core/Src/bno055.c ****                                                       BNO055_GYRO_DATA_X_LSB_VALUEX_REG,
1319:Core/Src/bno055.c ****                                                       data_u8,
1320:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1321:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 2368              		.loc 1 1321 13 is_stmt 1 view .LVU644
1322:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_X_LSB_VALUEX);
1323:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 2369              		.loc 1 1323 13 view .LVU645
1324:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_X_MSB_VALUEX);
1325:Core/Src/bno055.c ****             *gyro_x_s16 =
 2370              		.loc 1 1325 13 view .LVU646
1326:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2371              		.loc 1 1326 31 is_stmt 0 view .LVU647
 2372 002e 9DF90520 		ldrsb	r2, [sp, #5]
1327:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 2373              		.loc 1 1327 31 view .LVU648
 2374 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1326:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2375              		.loc 1 1326 17 view .LVU649
 2376 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1325:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2377              		.loc 1 1325 25 view .LVU650
 2378 003a 2380     		strh	r3, [r4]	@ movhi
 2379              	.LVL232:
 2380              	.L172:
1328:Core/Src/bno055.c ****         }
1329:Core/Src/bno055.c ****         else
1330:Core/Src/bno055.c ****         {
1331:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1332:Core/Src/bno055.c ****         }
1333:Core/Src/bno055.c ****     }
1334:Core/Src/bno055.c **** 
1335:Core/Src/bno055.c ****     return com_rslt;
1336:Core/Src/bno055.c **** }
 2381              		.loc 1 1336 1 view .LVU651
 2382 003c 03B0     		add	sp, sp, #12
 2383              	.LCFI71:
 2384              		.cfi_remember_state
 2385              		.cfi_def_cfa_offset 12
 2386              		@ sp needed
 2387 003e 30BD     		pop	{r4, r5, pc}
 2388              	.LVL233:
ARM GAS  /tmp/ccWoU29M.s 			page 69


 2389              	.L178:
 2390              	.LCFI72:
 2391              		.cfi_restore_state
1312:Core/Src/bno055.c ****         }
 2392              		.loc 1 1312 13 is_stmt 1 view .LVU652
1312:Core/Src/bno055.c ****         }
 2393              		.loc 1 1312 23 is_stmt 0 view .LVU653
 2394 0040 0020     		movs	r0, #0
 2395              	.LVL234:
1312:Core/Src/bno055.c ****         }
 2396              		.loc 1 1312 23 view .LVU654
 2397 0042 FFF7FEFF 		bl	bno055_write_page_id
 2398              	.LVL235:
1314:Core/Src/bno055.c ****         {
 2399              		.loc 1 1314 9 is_stmt 1 view .LVU655
1314:Core/Src/bno055.c ****         {
 2400              		.loc 1 1314 12 is_stmt 0 view .LVU656
 2401 0046 0028     		cmp	r0, #0
 2402 0048 E9D0     		beq	.L174
 2403 004a E4E7     		b	.L173
 2404              	.LVL236:
 2405              	.L175:
1303:Core/Src/bno055.c ****     }
 2406              		.loc 1 1303 16 view .LVU657
 2407 004c 6FF07E00 		mvn	r0, #126
 2408              	.LVL237:
1303:Core/Src/bno055.c ****     }
 2409              		.loc 1 1303 16 view .LVU658
 2410 0050 F4E7     		b	.L172
 2411              	.LVL238:
 2412              	.L176:
1331:Core/Src/bno055.c ****         }
 2413              		.loc 1 1331 22 view .LVU659
 2414 0052 4FF0FF30 		mov	r0, #-1
 2415 0056 F1E7     		b	.L172
 2416              	.L180:
 2417              		.align	2
 2418              	.L179:
 2419 0058 00000000 		.word	.LANCHOR0
 2420              		.cfi_endproc
 2421              	.LFE19:
 2423              		.section	.text.bno055_read_gyro_y,"ax",%progbits
 2424              		.align	1
 2425              		.global	bno055_read_gyro_y
 2426              		.syntax unified
 2427              		.thumb
 2428              		.thumb_func
 2429              		.fpu fpv4-sp-d16
 2431              	bno055_read_gyro_y:
 2432              	.LVL239:
 2433              	.LFB20:
1337:Core/Src/bno055.c **** 
1338:Core/Src/bno055.c **** /*!
1339:Core/Src/bno055.c ****  *  @brief This API reads gyro data y values
1340:Core/Src/bno055.c ****  *  from register 0x16 and 0x17 it is a two byte data
1341:Core/Src/bno055.c ****  *
1342:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 70


1343:Core/Src/bno055.c ****  *
1344:Core/Src/bno055.c ****  *
1345:Core/Src/bno055.c ****  *  @param gyro_y_s16 : The y raw data
1346:Core/Src/bno055.c ****  *
1347:Core/Src/bno055.c ****  *
1348:Core/Src/bno055.c ****  *
1349:Core/Src/bno055.c ****  *  @return results of bus communication function
1350:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1351:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1352:Core/Src/bno055.c ****  *
1353:Core/Src/bno055.c ****  *
1354:Core/Src/bno055.c ****  */
1355:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_y(s16 *gyro_y_s16)
1356:Core/Src/bno055.c **** {
 2434              		.loc 1 1356 1 is_stmt 1 view -0
 2435              		.cfi_startproc
 2436              		@ args = 0, pretend = 0, frame = 8
 2437              		@ frame_needed = 0, uses_anonymous_args = 0
 2438              		.loc 1 1356 1 is_stmt 0 view .LVU661
 2439 0000 30B5     		push	{r4, r5, lr}
 2440              	.LCFI73:
 2441              		.cfi_def_cfa_offset 12
 2442              		.cfi_offset 4, -12
 2443              		.cfi_offset 5, -8
 2444              		.cfi_offset 14, -4
 2445 0002 83B0     		sub	sp, sp, #12
 2446              	.LCFI74:
 2447              		.cfi_def_cfa_offset 24
1357:Core/Src/bno055.c ****     /* Variable used to return value of
1358:Core/Src/bno055.c ****      * communication routine*/
1359:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2448              		.loc 1 1359 5 is_stmt 1 view .LVU662
 2449              	.LVL240:
1360:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2450              		.loc 1 1360 5 view .LVU663
 2451              		.loc 1 1360 8 is_stmt 0 view .LVU664
 2452 0004 0023     		movs	r3, #0
 2453 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1361:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2454              		.loc 1 1361 5 is_stmt 1 view .LVU665
 2455              	.LVL241:
1362:Core/Src/bno055.c **** 
1363:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1364:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2456              		.loc 1 1364 5 view .LVU666
 2457              		.loc 1 1364 18 is_stmt 0 view .LVU667
 2458 000a 134B     		ldr	r3, .L189
 2459 000c 1B68     		ldr	r3, [r3]
 2460              		.loc 1 1364 8 view .LVU668
 2461 000e EBB1     		cbz	r3, .L185
 2462 0010 0446     		mov	r4, r0
1365:Core/Src/bno055.c ****     {
1366:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1367:Core/Src/bno055.c ****     }
1368:Core/Src/bno055.c ****     else
1369:Core/Src/bno055.c ****     {
1370:Core/Src/bno055.c ****         /*condition check for page, chip id is
ARM GAS  /tmp/ccWoU29M.s 			page 71


1371:Core/Src/bno055.c ****          * available in the page zero*/
1372:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2463              		.loc 1 1372 9 is_stmt 1 view .LVU669
 2464              		.loc 1 1372 21 is_stmt 0 view .LVU670
 2465 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2466              		.loc 1 1372 12 view .LVU671
 2467 0014 A3B9     		cbnz	r3, .L188
 2468              	.LVL242:
 2469              	.L183:
1373:Core/Src/bno055.c ****         {
1374:Core/Src/bno055.c ****             /* Write the page zero*/
1375:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1376:Core/Src/bno055.c ****         }
1377:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2470              		.loc 1 1377 53 discriminator 1 view .LVU672
 2471 0016 104B     		ldr	r3, .L189
 2472 0018 1B68     		ldr	r3, [r3]
 2473 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2474              		.loc 1 1377 41 discriminator 1 view .LVU673
 2475 001c CBB9     		cbnz	r3, .L186
 2476              	.L184:
1378:Core/Src/bno055.c ****         {
1379:Core/Src/bno055.c ****             /* Read the value of gyro y */
1380:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2477              		.loc 1 1380 13 is_stmt 1 view .LVU674
 2478              		.loc 1 1380 32 is_stmt 0 view .LVU675
 2479 001e 0E4B     		ldr	r3, .L189
 2480 0020 1868     		ldr	r0, [r3]
 2481 0022 0569     		ldr	r5, [r0, #16]
 2482              		.loc 1 1380 24 view .LVU676
 2483 0024 0223     		movs	r3, #2
 2484 0026 01AA     		add	r2, sp, #4
 2485 0028 1621     		movs	r1, #22
 2486 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2487 002c A847     		blx	r5
 2488              	.LVL243:
1381:Core/Src/bno055.c ****                                                       BNO055_GYRO_DATA_Y_LSB_VALUEY_REG,
1382:Core/Src/bno055.c ****                                                       data_u8,
1383:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1384:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 2489              		.loc 1 1384 13 is_stmt 1 view .LVU677
1385:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_Y_LSB_VALUEY);
1386:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 2490              		.loc 1 1386 13 view .LVU678
1387:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_Y_MSB_VALUEY);
1388:Core/Src/bno055.c ****             *gyro_y_s16 =
 2491              		.loc 1 1388 13 view .LVU679
1389:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2492              		.loc 1 1389 31 is_stmt 0 view .LVU680
 2493 002e 9DF90520 		ldrsb	r2, [sp, #5]
1390:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 2494              		.loc 1 1390 31 view .LVU681
 2495 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1389:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2496              		.loc 1 1389 17 view .LVU682
 2497 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1388:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
ARM GAS  /tmp/ccWoU29M.s 			page 72


 2498              		.loc 1 1388 25 view .LVU683
 2499 003a 2380     		strh	r3, [r4]	@ movhi
 2500              	.LVL244:
 2501              	.L182:
1391:Core/Src/bno055.c ****         }
1392:Core/Src/bno055.c ****         else
1393:Core/Src/bno055.c ****         {
1394:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1395:Core/Src/bno055.c ****         }
1396:Core/Src/bno055.c ****     }
1397:Core/Src/bno055.c **** 
1398:Core/Src/bno055.c ****     return com_rslt;
1399:Core/Src/bno055.c **** }
 2502              		.loc 1 1399 1 view .LVU684
 2503 003c 03B0     		add	sp, sp, #12
 2504              	.LCFI75:
 2505              		.cfi_remember_state
 2506              		.cfi_def_cfa_offset 12
 2507              		@ sp needed
 2508 003e 30BD     		pop	{r4, r5, pc}
 2509              	.LVL245:
 2510              	.L188:
 2511              	.LCFI76:
 2512              		.cfi_restore_state
1375:Core/Src/bno055.c ****         }
 2513              		.loc 1 1375 13 is_stmt 1 view .LVU685
1375:Core/Src/bno055.c ****         }
 2514              		.loc 1 1375 23 is_stmt 0 view .LVU686
 2515 0040 0020     		movs	r0, #0
 2516              	.LVL246:
1375:Core/Src/bno055.c ****         }
 2517              		.loc 1 1375 23 view .LVU687
 2518 0042 FFF7FEFF 		bl	bno055_write_page_id
 2519              	.LVL247:
1377:Core/Src/bno055.c ****         {
 2520              		.loc 1 1377 9 is_stmt 1 view .LVU688
1377:Core/Src/bno055.c ****         {
 2521              		.loc 1 1377 12 is_stmt 0 view .LVU689
 2522 0046 0028     		cmp	r0, #0
 2523 0048 E9D0     		beq	.L184
 2524 004a E4E7     		b	.L183
 2525              	.LVL248:
 2526              	.L185:
1366:Core/Src/bno055.c ****     }
 2527              		.loc 1 1366 16 view .LVU690
 2528 004c 6FF07E00 		mvn	r0, #126
 2529              	.LVL249:
1366:Core/Src/bno055.c ****     }
 2530              		.loc 1 1366 16 view .LVU691
 2531 0050 F4E7     		b	.L182
 2532              	.LVL250:
 2533              	.L186:
1394:Core/Src/bno055.c ****         }
 2534              		.loc 1 1394 22 view .LVU692
 2535 0052 4FF0FF30 		mov	r0, #-1
 2536 0056 F1E7     		b	.L182
 2537              	.L190:
ARM GAS  /tmp/ccWoU29M.s 			page 73


 2538              		.align	2
 2539              	.L189:
 2540 0058 00000000 		.word	.LANCHOR0
 2541              		.cfi_endproc
 2542              	.LFE20:
 2544              		.section	.text.bno055_read_gyro_z,"ax",%progbits
 2545              		.align	1
 2546              		.global	bno055_read_gyro_z
 2547              		.syntax unified
 2548              		.thumb
 2549              		.thumb_func
 2550              		.fpu fpv4-sp-d16
 2552              	bno055_read_gyro_z:
 2553              	.LVL251:
 2554              	.LFB21:
1400:Core/Src/bno055.c **** 
1401:Core/Src/bno055.c **** /*!
1402:Core/Src/bno055.c ****  *  @brief This API reads gyro data z values
1403:Core/Src/bno055.c ****  *  from register 0x18 and 0x19 it is a two byte data
1404:Core/Src/bno055.c ****  *
1405:Core/Src/bno055.c ****  *  @param gyro_z_s16 : The z raw data
1406:Core/Src/bno055.c ****  *
1407:Core/Src/bno055.c ****  *  @return results of bus communication function
1408:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1409:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1410:Core/Src/bno055.c ****  *
1411:Core/Src/bno055.c ****  *
1412:Core/Src/bno055.c ****  */
1413:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_z(s16 *gyro_z_s16)
1414:Core/Src/bno055.c **** {
 2555              		.loc 1 1414 1 is_stmt 1 view -0
 2556              		.cfi_startproc
 2557              		@ args = 0, pretend = 0, frame = 8
 2558              		@ frame_needed = 0, uses_anonymous_args = 0
 2559              		.loc 1 1414 1 is_stmt 0 view .LVU694
 2560 0000 30B5     		push	{r4, r5, lr}
 2561              	.LCFI77:
 2562              		.cfi_def_cfa_offset 12
 2563              		.cfi_offset 4, -12
 2564              		.cfi_offset 5, -8
 2565              		.cfi_offset 14, -4
 2566 0002 83B0     		sub	sp, sp, #12
 2567              	.LCFI78:
 2568              		.cfi_def_cfa_offset 24
1415:Core/Src/bno055.c ****     /* Variable used to return value of
1416:Core/Src/bno055.c ****      * communication routine*/
1417:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2569              		.loc 1 1417 5 is_stmt 1 view .LVU695
 2570              	.LVL252:
1418:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2571              		.loc 1 1418 5 view .LVU696
 2572              		.loc 1 1418 8 is_stmt 0 view .LVU697
 2573 0004 0023     		movs	r3, #0
 2574 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1419:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2575              		.loc 1 1419 5 is_stmt 1 view .LVU698
 2576              	.LVL253:
ARM GAS  /tmp/ccWoU29M.s 			page 74


1420:Core/Src/bno055.c **** 
1421:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1422:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2577              		.loc 1 1422 5 view .LVU699
 2578              		.loc 1 1422 18 is_stmt 0 view .LVU700
 2579 000a 134B     		ldr	r3, .L199
 2580 000c 1B68     		ldr	r3, [r3]
 2581              		.loc 1 1422 8 view .LVU701
 2582 000e EBB1     		cbz	r3, .L195
 2583 0010 0446     		mov	r4, r0
1423:Core/Src/bno055.c ****     {
1424:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1425:Core/Src/bno055.c ****     }
1426:Core/Src/bno055.c ****     else
1427:Core/Src/bno055.c ****     {
1428:Core/Src/bno055.c ****         /*condition check for page, chip id is
1429:Core/Src/bno055.c ****          * available in the page zero*/
1430:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2584              		.loc 1 1430 9 is_stmt 1 view .LVU702
 2585              		.loc 1 1430 21 is_stmt 0 view .LVU703
 2586 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2587              		.loc 1 1430 12 view .LVU704
 2588 0014 A3B9     		cbnz	r3, .L198
 2589              	.LVL254:
 2590              	.L193:
1431:Core/Src/bno055.c ****         {
1432:Core/Src/bno055.c ****             /* Write the page zero*/
1433:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1434:Core/Src/bno055.c ****         }
1435:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2591              		.loc 1 1435 53 discriminator 1 view .LVU705
 2592 0016 104B     		ldr	r3, .L199
 2593 0018 1B68     		ldr	r3, [r3]
 2594 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2595              		.loc 1 1435 41 discriminator 1 view .LVU706
 2596 001c CBB9     		cbnz	r3, .L196
 2597              	.L194:
1436:Core/Src/bno055.c ****         {
1437:Core/Src/bno055.c ****             /* Read the gyro z 16 bit value*/
1438:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2598              		.loc 1 1438 13 is_stmt 1 view .LVU707
 2599              		.loc 1 1438 32 is_stmt 0 view .LVU708
 2600 001e 0E4B     		ldr	r3, .L199
 2601 0020 1868     		ldr	r0, [r3]
 2602 0022 0569     		ldr	r5, [r0, #16]
 2603              		.loc 1 1438 24 view .LVU709
 2604 0024 0223     		movs	r3, #2
 2605 0026 01AA     		add	r2, sp, #4
 2606 0028 1821     		movs	r1, #24
 2607 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2608 002c A847     		blx	r5
 2609              	.LVL255:
1439:Core/Src/bno055.c ****                                                       BNO055_GYRO_DATA_Z_LSB_VALUEZ_REG,
1440:Core/Src/bno055.c ****                                                       data_u8,
1441:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1442:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 2610              		.loc 1 1442 13 is_stmt 1 view .LVU710
ARM GAS  /tmp/ccWoU29M.s 			page 75


1443:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_Z_LSB_VALUEZ);
1444:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 2611              		.loc 1 1444 13 view .LVU711
1445:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_Z_MSB_VALUEZ);
1446:Core/Src/bno055.c ****             *gyro_z_s16 =
 2612              		.loc 1 1446 13 view .LVU712
1447:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2613              		.loc 1 1447 31 is_stmt 0 view .LVU713
 2614 002e 9DF90520 		ldrsb	r2, [sp, #5]
1448:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 2615              		.loc 1 1448 31 view .LVU714
 2616 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1447:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2617              		.loc 1 1447 17 view .LVU715
 2618 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1446:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2619              		.loc 1 1446 25 view .LVU716
 2620 003a 2380     		strh	r3, [r4]	@ movhi
 2621              	.LVL256:
 2622              	.L192:
1449:Core/Src/bno055.c ****         }
1450:Core/Src/bno055.c ****         else
1451:Core/Src/bno055.c ****         {
1452:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1453:Core/Src/bno055.c ****         }
1454:Core/Src/bno055.c ****     }
1455:Core/Src/bno055.c **** 
1456:Core/Src/bno055.c ****     return com_rslt;
1457:Core/Src/bno055.c **** }
 2623              		.loc 1 1457 1 view .LVU717
 2624 003c 03B0     		add	sp, sp, #12
 2625              	.LCFI79:
 2626              		.cfi_remember_state
 2627              		.cfi_def_cfa_offset 12
 2628              		@ sp needed
 2629 003e 30BD     		pop	{r4, r5, pc}
 2630              	.LVL257:
 2631              	.L198:
 2632              	.LCFI80:
 2633              		.cfi_restore_state
1433:Core/Src/bno055.c ****         }
 2634              		.loc 1 1433 13 is_stmt 1 view .LVU718
1433:Core/Src/bno055.c ****         }
 2635              		.loc 1 1433 23 is_stmt 0 view .LVU719
 2636 0040 0020     		movs	r0, #0
 2637              	.LVL258:
1433:Core/Src/bno055.c ****         }
 2638              		.loc 1 1433 23 view .LVU720
 2639 0042 FFF7FEFF 		bl	bno055_write_page_id
 2640              	.LVL259:
1435:Core/Src/bno055.c ****         {
 2641              		.loc 1 1435 9 is_stmt 1 view .LVU721
1435:Core/Src/bno055.c ****         {
 2642              		.loc 1 1435 12 is_stmt 0 view .LVU722
 2643 0046 0028     		cmp	r0, #0
 2644 0048 E9D0     		beq	.L194
 2645 004a E4E7     		b	.L193
ARM GAS  /tmp/ccWoU29M.s 			page 76


 2646              	.LVL260:
 2647              	.L195:
1424:Core/Src/bno055.c ****     }
 2648              		.loc 1 1424 16 view .LVU723
 2649 004c 6FF07E00 		mvn	r0, #126
 2650              	.LVL261:
1424:Core/Src/bno055.c ****     }
 2651              		.loc 1 1424 16 view .LVU724
 2652 0050 F4E7     		b	.L192
 2653              	.LVL262:
 2654              	.L196:
1452:Core/Src/bno055.c ****         }
 2655              		.loc 1 1452 22 view .LVU725
 2656 0052 4FF0FF30 		mov	r0, #-1
 2657 0056 F1E7     		b	.L192
 2658              	.L200:
 2659              		.align	2
 2660              	.L199:
 2661 0058 00000000 		.word	.LANCHOR0
 2662              		.cfi_endproc
 2663              	.LFE21:
 2665              		.section	.text.bno055_read_gyro_xyz,"ax",%progbits
 2666              		.align	1
 2667              		.global	bno055_read_gyro_xyz
 2668              		.syntax unified
 2669              		.thumb
 2670              		.thumb_func
 2671              		.fpu fpv4-sp-d16
 2673              	bno055_read_gyro_xyz:
 2674              	.LVL263:
 2675              	.LFB22:
1458:Core/Src/bno055.c **** 
1459:Core/Src/bno055.c **** /*!
1460:Core/Src/bno055.c ****  *  @brief This API reads gyro data xyz values
1461:Core/Src/bno055.c ****  *  from register 0x14 to 0x19 it is a six byte data
1462:Core/Src/bno055.c ****  *
1463:Core/Src/bno055.c ****  *
1464:Core/Src/bno055.c ****  *  @param gyro : The value of gyro xyz data's
1465:Core/Src/bno055.c ****  *
1466:Core/Src/bno055.c ****  *  Parameter |    result
1467:Core/Src/bno055.c ****  *  --------- | -----------------
1468:Core/Src/bno055.c ****  *   x        | The gyro x data
1469:Core/Src/bno055.c ****  *   y        | The gyro y data
1470:Core/Src/bno055.c ****  *   z        | The gyro z data
1471:Core/Src/bno055.c ****  *
1472:Core/Src/bno055.c ****  *
1473:Core/Src/bno055.c ****  *
1474:Core/Src/bno055.c ****  *  @return results of bus communication function
1475:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1476:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1477:Core/Src/bno055.c ****  *
1478:Core/Src/bno055.c ****  */
1479:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_xyz(struct bno055_gyro_t *gyro)
1480:Core/Src/bno055.c **** {
 2676              		.loc 1 1480 1 is_stmt 1 view -0
 2677              		.cfi_startproc
 2678              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccWoU29M.s 			page 77


 2679              		@ frame_needed = 0, uses_anonymous_args = 0
 2680              		.loc 1 1480 1 is_stmt 0 view .LVU727
 2681 0000 30B5     		push	{r4, r5, lr}
 2682              	.LCFI81:
 2683              		.cfi_def_cfa_offset 12
 2684              		.cfi_offset 4, -12
 2685              		.cfi_offset 5, -8
 2686              		.cfi_offset 14, -4
 2687 0002 83B0     		sub	sp, sp, #12
 2688              	.LCFI82:
 2689              		.cfi_def_cfa_offset 24
 2690 0004 0446     		mov	r4, r0
1481:Core/Src/bno055.c ****     /* Variable used to return value of
1482:Core/Src/bno055.c ****      * communication routine*/
1483:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2691              		.loc 1 1483 5 is_stmt 1 view .LVU728
 2692              	.LVL264:
1484:Core/Src/bno055.c **** 
1485:Core/Src/bno055.c ****     /* Array holding the gyro xyz value
1486:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
1487:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
1488:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
1489:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
1490:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
1491:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
1492:Core/Src/bno055.c ****      */
1493:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_XYZ_DATA_SIZE] = {
 2693              		.loc 1 1493 5 view .LVU729
 2694              		.loc 1 1493 8 is_stmt 0 view .LVU730
 2695 0006 1D4B     		ldr	r3, .L209
 2696 0008 93E80300 		ldm	r3, {r0, r1}
 2697              	.LVL265:
 2698              		.loc 1 1493 8 view .LVU731
 2699 000c 0090     		str	r0, [sp]
 2700 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
1494:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
1495:Core/Src/bno055.c ****     };
1496:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2701              		.loc 1 1496 5 is_stmt 1 view .LVU732
 2702              	.LVL266:
1497:Core/Src/bno055.c **** 
1498:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1499:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2703              		.loc 1 1499 5 view .LVU733
 2704              		.loc 1 1499 18 is_stmt 0 view .LVU734
 2705 0012 1B4B     		ldr	r3, .L209+4
 2706 0014 1B68     		ldr	r3, [r3]
 2707              		.loc 1 1499 8 view .LVU735
 2708 0016 53B3     		cbz	r3, .L205
1500:Core/Src/bno055.c ****     {
1501:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1502:Core/Src/bno055.c ****     }
1503:Core/Src/bno055.c ****     else
1504:Core/Src/bno055.c ****     {
1505:Core/Src/bno055.c ****         /*condition check for page, chip id is
1506:Core/Src/bno055.c ****          * available in the page zero*/
1507:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
ARM GAS  /tmp/ccWoU29M.s 			page 78


 2709              		.loc 1 1507 9 is_stmt 1 view .LVU736
 2710              		.loc 1 1507 21 is_stmt 0 view .LVU737
 2711 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2712              		.loc 1 1507 12 view .LVU738
 2713 001a 13BB     		cbnz	r3, .L208
 2714              	.LVL267:
 2715              	.L203:
1508:Core/Src/bno055.c ****         {
1509:Core/Src/bno055.c ****             /* Write the page zero*/
1510:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1511:Core/Src/bno055.c ****         }
1512:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2716              		.loc 1 1512 53 discriminator 1 view .LVU739
 2717 001c 184B     		ldr	r3, .L209+4
 2718 001e 1B68     		ldr	r3, [r3]
 2719 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2720              		.loc 1 1512 41 discriminator 1 view .LVU740
 2721 0022 3BBB     		cbnz	r3, .L206
 2722              	.L204:
1513:Core/Src/bno055.c ****         {
1514:Core/Src/bno055.c ****             /* Read the six bytes data of gyro xyz*/
1515:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2723              		.loc 1 1515 13 is_stmt 1 view .LVU741
 2724              		.loc 1 1515 32 is_stmt 0 view .LVU742
 2725 0024 164B     		ldr	r3, .L209+4
 2726 0026 1868     		ldr	r0, [r3]
 2727 0028 0569     		ldr	r5, [r0, #16]
 2728              		.loc 1 1515 24 view .LVU743
 2729 002a 0623     		movs	r3, #6
 2730 002c 6A46     		mov	r2, sp
 2731 002e 1421     		movs	r1, #20
 2732 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2733 0032 A847     		blx	r5
 2734              	.LVL268:
1516:Core/Src/bno055.c ****                                                       BNO055_GYRO_DATA_X_LSB_VALUEX_REG,
1517:Core/Src/bno055.c ****                                                       data_u8,
1518:Core/Src/bno055.c ****                                                       BNO055_GYRO_XYZ_DATA_SIZE);
1519:Core/Src/bno055.c **** 
1520:Core/Src/bno055.c ****             /* Data x*/
1521:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2735              		.loc 1 1521 13 is_stmt 1 view .LVU744
1522:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_X_LSB_VALU
1523:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2736              		.loc 1 1523 13 view .LVU745
1524:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_X_MSB_VALU
1525:Core/Src/bno055.c ****             gyro->x =
 2737              		.loc 1 1525 13 view .LVU746
1526:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2738              		.loc 1 1526 31 is_stmt 0 view .LVU747
 2739 0034 9DF90120 		ldrsb	r2, [sp, #1]
1527:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 2740              		.loc 1 1527 31 view .LVU748
 2741 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
1526:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2742              		.loc 1 1526 17 view .LVU749
 2743 003c 43EA0223 		orr	r3, r3, r2, lsl #8
1525:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
ARM GAS  /tmp/ccWoU29M.s 			page 79


 2744              		.loc 1 1525 21 view .LVU750
 2745 0040 2380     		strh	r3, [r4]	@ movhi
1528:Core/Src/bno055.c **** 
1529:Core/Src/bno055.c ****             /* Data y*/
1530:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2746              		.loc 1 1530 13 is_stmt 1 view .LVU751
1531:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_Y_LSB_VALU
1532:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2747              		.loc 1 1532 13 view .LVU752
1533:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_Y_MSB_VALU
1534:Core/Src/bno055.c ****             gyro->y =
 2748              		.loc 1 1534 13 view .LVU753
1535:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2749              		.loc 1 1535 31 is_stmt 0 view .LVU754
 2750 0042 9DF90320 		ldrsb	r2, [sp, #3]
1536:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 2751              		.loc 1 1536 31 view .LVU755
 2752 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
1535:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2753              		.loc 1 1535 17 view .LVU756
 2754 004a 43EA0223 		orr	r3, r3, r2, lsl #8
1534:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2755              		.loc 1 1534 21 view .LVU757
 2756 004e 6380     		strh	r3, [r4, #2]	@ movhi
1537:Core/Src/bno055.c **** 
1538:Core/Src/bno055.c ****             /* Data z*/
1539:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2757              		.loc 1 1539 13 is_stmt 1 view .LVU758
1540:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_Z_LSB_VALU
1541:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2758              		.loc 1 1541 13 view .LVU759
1542:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_Z_MSB_VALU
1543:Core/Src/bno055.c ****             gyro->z =
 2759              		.loc 1 1543 13 view .LVU760
1544:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2760              		.loc 1 1544 31 is_stmt 0 view .LVU761
 2761 0050 9DF90520 		ldrsb	r2, [sp, #5]
1545:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 2762              		.loc 1 1545 31 view .LVU762
 2763 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1544:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2764              		.loc 1 1544 17 view .LVU763
 2765 0058 43EA0223 		orr	r3, r3, r2, lsl #8
1543:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2766              		.loc 1 1543 21 view .LVU764
 2767 005c A380     		strh	r3, [r4, #4]	@ movhi
 2768              	.LVL269:
 2769              	.L202:
1546:Core/Src/bno055.c ****         }
1547:Core/Src/bno055.c ****         else
1548:Core/Src/bno055.c ****         {
1549:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1550:Core/Src/bno055.c ****         }
1551:Core/Src/bno055.c ****     }
1552:Core/Src/bno055.c **** 
1553:Core/Src/bno055.c ****     return com_rslt;
1554:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccWoU29M.s 			page 80


 2770              		.loc 1 1554 1 view .LVU765
 2771 005e 03B0     		add	sp, sp, #12
 2772              	.LCFI83:
 2773              		.cfi_remember_state
 2774              		.cfi_def_cfa_offset 12
 2775              		@ sp needed
 2776 0060 30BD     		pop	{r4, r5, pc}
 2777              	.LVL270:
 2778              	.L208:
 2779              	.LCFI84:
 2780              		.cfi_restore_state
1510:Core/Src/bno055.c ****         }
 2781              		.loc 1 1510 13 is_stmt 1 view .LVU766
1510:Core/Src/bno055.c ****         }
 2782              		.loc 1 1510 23 is_stmt 0 view .LVU767
 2783 0062 0020     		movs	r0, #0
 2784 0064 FFF7FEFF 		bl	bno055_write_page_id
 2785              	.LVL271:
1512:Core/Src/bno055.c ****         {
 2786              		.loc 1 1512 9 is_stmt 1 view .LVU768
1512:Core/Src/bno055.c ****         {
 2787              		.loc 1 1512 12 is_stmt 0 view .LVU769
 2788 0068 0028     		cmp	r0, #0
 2789 006a DBD0     		beq	.L204
 2790 006c D6E7     		b	.L203
 2791              	.LVL272:
 2792              	.L205:
1501:Core/Src/bno055.c ****     }
 2793              		.loc 1 1501 16 view .LVU770
 2794 006e 6FF07E00 		mvn	r0, #126
 2795 0072 F4E7     		b	.L202
 2796              	.LVL273:
 2797              	.L206:
1549:Core/Src/bno055.c ****         }
 2798              		.loc 1 1549 22 view .LVU771
 2799 0074 4FF0FF30 		mov	r0, #-1
 2800 0078 F1E7     		b	.L202
 2801              	.L210:
 2802 007a 00BF     		.align	2
 2803              	.L209:
 2804 007c 00000000 		.word	.LANCHOR1
 2805 0080 00000000 		.word	.LANCHOR0
 2806              		.cfi_endproc
 2807              	.LFE22:
 2809              		.section	.text.bno055_read_euler_h,"ax",%progbits
 2810              		.align	1
 2811              		.global	bno055_read_euler_h
 2812              		.syntax unified
 2813              		.thumb
 2814              		.thumb_func
 2815              		.fpu fpv4-sp-d16
 2817              	bno055_read_euler_h:
 2818              	.LVL274:
 2819              	.LFB23:
1555:Core/Src/bno055.c **** 
1556:Core/Src/bno055.c **** /*!
1557:Core/Src/bno055.c ****  *  @brief This API reads gyro data z values
ARM GAS  /tmp/ccWoU29M.s 			page 81


1558:Core/Src/bno055.c ****  *  from register 0x1A and 0x1B it is a two byte data
1559:Core/Src/bno055.c ****  *
1560:Core/Src/bno055.c ****  *  @param euler_h_s16 : The raw h data
1561:Core/Src/bno055.c ****  *
1562:Core/Src/bno055.c ****  *  @return results of bus communication function
1563:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1564:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1565:Core/Src/bno055.c ****  *
1566:Core/Src/bno055.c ****  */
1567:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_euler_h(s16 *euler_h_s16)
1568:Core/Src/bno055.c **** {
 2820              		.loc 1 1568 1 is_stmt 1 view -0
 2821              		.cfi_startproc
 2822              		@ args = 0, pretend = 0, frame = 8
 2823              		@ frame_needed = 0, uses_anonymous_args = 0
 2824              		.loc 1 1568 1 is_stmt 0 view .LVU773
 2825 0000 30B5     		push	{r4, r5, lr}
 2826              	.LCFI85:
 2827              		.cfi_def_cfa_offset 12
 2828              		.cfi_offset 4, -12
 2829              		.cfi_offset 5, -8
 2830              		.cfi_offset 14, -4
 2831 0002 83B0     		sub	sp, sp, #12
 2832              	.LCFI86:
 2833              		.cfi_def_cfa_offset 24
1569:Core/Src/bno055.c ****     /* Variable used to return value of
1570:Core/Src/bno055.c ****      * communication routine*/
1571:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2834              		.loc 1 1571 5 is_stmt 1 view .LVU774
 2835              	.LVL275:
1572:Core/Src/bno055.c **** 
1573:Core/Src/bno055.c ****     /* Array holding the Euler h value
1574:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_LSB] - h->LSB
1575:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_MSB] - h->MSB
1576:Core/Src/bno055.c ****      */
1577:Core/Src/bno055.c ****     u8 data_u8[BNO055_EULER_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2836              		.loc 1 1577 5 view .LVU775
 2837              		.loc 1 1577 8 is_stmt 0 view .LVU776
 2838 0004 0023     		movs	r3, #0
 2839 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1578:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2840              		.loc 1 1578 5 is_stmt 1 view .LVU777
 2841              	.LVL276:
1579:Core/Src/bno055.c **** 
1580:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1581:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2842              		.loc 1 1581 5 view .LVU778
 2843              		.loc 1 1581 18 is_stmt 0 view .LVU779
 2844 000a 134B     		ldr	r3, .L219
 2845 000c 1B68     		ldr	r3, [r3]
 2846              		.loc 1 1581 8 view .LVU780
 2847 000e EBB1     		cbz	r3, .L215
 2848 0010 0446     		mov	r4, r0
1582:Core/Src/bno055.c ****     {
1583:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1584:Core/Src/bno055.c ****     }
1585:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccWoU29M.s 			page 82


1586:Core/Src/bno055.c ****     {
1587:Core/Src/bno055.c ****         /*condition check for page, chip id is
1588:Core/Src/bno055.c ****          * available in the page zero*/
1589:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2849              		.loc 1 1589 9 is_stmt 1 view .LVU781
 2850              		.loc 1 1589 21 is_stmt 0 view .LVU782
 2851 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2852              		.loc 1 1589 12 view .LVU783
 2853 0014 A3B9     		cbnz	r3, .L218
 2854              	.LVL277:
 2855              	.L213:
1590:Core/Src/bno055.c ****         {
1591:Core/Src/bno055.c ****             /* Write the page zero*/
1592:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1593:Core/Src/bno055.c ****         }
1594:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2856              		.loc 1 1594 53 discriminator 1 view .LVU784
 2857 0016 104B     		ldr	r3, .L219
 2858 0018 1B68     		ldr	r3, [r3]
 2859 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2860              		.loc 1 1594 41 discriminator 1 view .LVU785
 2861 001c CBB9     		cbnz	r3, .L216
 2862              	.L214:
1595:Core/Src/bno055.c ****         {
1596:Core/Src/bno055.c ****             /* Read the eulre heading data*/
1597:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2863              		.loc 1 1597 13 is_stmt 1 view .LVU786
 2864              		.loc 1 1597 32 is_stmt 0 view .LVU787
 2865 001e 0E4B     		ldr	r3, .L219
 2866 0020 1868     		ldr	r0, [r3]
 2867 0022 0569     		ldr	r5, [r0, #16]
 2868              		.loc 1 1597 24 view .LVU788
 2869 0024 0223     		movs	r3, #2
 2870 0026 01AA     		add	r2, sp, #4
 2871 0028 1A21     		movs	r1, #26
 2872 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2873 002c A847     		blx	r5
 2874              	.LVL278:
1598:Core/Src/bno055.c ****                                                       BNO055_EULER_H_LSB_VALUEH_REG,
1599:Core/Src/bno055.c ****                                                       data_u8,
1600:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1601:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2875              		.loc 1 1601 13 is_stmt 1 view .LVU789
1602:Core/Src/bno055.c ****                                                                         BNO055_EULER_H_LSB_VALUEH);
1603:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2876              		.loc 1 1603 13 view .LVU790
1604:Core/Src/bno055.c ****                                                                         BNO055_EULER_H_MSB_VALUEH);
1605:Core/Src/bno055.c ****             *euler_h_s16 =
 2877              		.loc 1 1605 13 view .LVU791
1606:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2878              		.loc 1 1606 31 is_stmt 0 view .LVU792
 2879 002e 9DF90520 		ldrsb	r2, [sp, #5]
1607:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_LSB]));
 2880              		.loc 1 1607 31 view .LVU793
 2881 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1606:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2882              		.loc 1 1606 17 view .LVU794
ARM GAS  /tmp/ccWoU29M.s 			page 83


 2883 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1605:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2884              		.loc 1 1605 26 view .LVU795
 2885 003a 2380     		strh	r3, [r4]	@ movhi
 2886              	.LVL279:
 2887              	.L212:
1608:Core/Src/bno055.c ****         }
1609:Core/Src/bno055.c ****         else
1610:Core/Src/bno055.c ****         {
1611:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1612:Core/Src/bno055.c ****         }
1613:Core/Src/bno055.c ****     }
1614:Core/Src/bno055.c **** 
1615:Core/Src/bno055.c ****     return com_rslt;
1616:Core/Src/bno055.c **** }
 2888              		.loc 1 1616 1 view .LVU796
 2889 003c 03B0     		add	sp, sp, #12
 2890              	.LCFI87:
 2891              		.cfi_remember_state
 2892              		.cfi_def_cfa_offset 12
 2893              		@ sp needed
 2894 003e 30BD     		pop	{r4, r5, pc}
 2895              	.LVL280:
 2896              	.L218:
 2897              	.LCFI88:
 2898              		.cfi_restore_state
1592:Core/Src/bno055.c ****         }
 2899              		.loc 1 1592 13 is_stmt 1 view .LVU797
1592:Core/Src/bno055.c ****         }
 2900              		.loc 1 1592 23 is_stmt 0 view .LVU798
 2901 0040 0020     		movs	r0, #0
 2902              	.LVL281:
1592:Core/Src/bno055.c ****         }
 2903              		.loc 1 1592 23 view .LVU799
 2904 0042 FFF7FEFF 		bl	bno055_write_page_id
 2905              	.LVL282:
1594:Core/Src/bno055.c ****         {
 2906              		.loc 1 1594 9 is_stmt 1 view .LVU800
1594:Core/Src/bno055.c ****         {
 2907              		.loc 1 1594 12 is_stmt 0 view .LVU801
 2908 0046 0028     		cmp	r0, #0
 2909 0048 E9D0     		beq	.L214
 2910 004a E4E7     		b	.L213
 2911              	.LVL283:
 2912              	.L215:
1583:Core/Src/bno055.c ****     }
 2913              		.loc 1 1583 16 view .LVU802
 2914 004c 6FF07E00 		mvn	r0, #126
 2915              	.LVL284:
1583:Core/Src/bno055.c ****     }
 2916              		.loc 1 1583 16 view .LVU803
 2917 0050 F4E7     		b	.L212
 2918              	.LVL285:
 2919              	.L216:
1611:Core/Src/bno055.c ****         }
 2920              		.loc 1 1611 22 view .LVU804
 2921 0052 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccWoU29M.s 			page 84


 2922 0056 F1E7     		b	.L212
 2923              	.L220:
 2924              		.align	2
 2925              	.L219:
 2926 0058 00000000 		.word	.LANCHOR0
 2927              		.cfi_endproc
 2928              	.LFE23:
 2930              		.section	.text.bno055_read_euler_r,"ax",%progbits
 2931              		.align	1
 2932              		.global	bno055_read_euler_r
 2933              		.syntax unified
 2934              		.thumb
 2935              		.thumb_func
 2936              		.fpu fpv4-sp-d16
 2938              	bno055_read_euler_r:
 2939              	.LVL286:
 2940              	.LFB24:
1617:Core/Src/bno055.c **** 
1618:Core/Src/bno055.c **** /*!
1619:Core/Src/bno055.c ****  *  @brief This API reads Euler data r values
1620:Core/Src/bno055.c ****  *  from register 0x1C and 0x1D it is a two byte data
1621:Core/Src/bno055.c ****  *
1622:Core/Src/bno055.c ****  *  @param euler_r_s16 : The raw r data
1623:Core/Src/bno055.c ****  *
1624:Core/Src/bno055.c ****  *  @return results of bus communication function
1625:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1626:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1627:Core/Src/bno055.c ****  *
1628:Core/Src/bno055.c ****  */
1629:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_euler_r(s16 *euler_r_s16)
1630:Core/Src/bno055.c **** {
 2941              		.loc 1 1630 1 is_stmt 1 view -0
 2942              		.cfi_startproc
 2943              		@ args = 0, pretend = 0, frame = 8
 2944              		@ frame_needed = 0, uses_anonymous_args = 0
 2945              		.loc 1 1630 1 is_stmt 0 view .LVU806
 2946 0000 30B5     		push	{r4, r5, lr}
 2947              	.LCFI89:
 2948              		.cfi_def_cfa_offset 12
 2949              		.cfi_offset 4, -12
 2950              		.cfi_offset 5, -8
 2951              		.cfi_offset 14, -4
 2952 0002 83B0     		sub	sp, sp, #12
 2953              	.LCFI90:
 2954              		.cfi_def_cfa_offset 24
1631:Core/Src/bno055.c ****     /* Variable used to return value of
1632:Core/Src/bno055.c ****      * communication routine*/
1633:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2955              		.loc 1 1633 5 is_stmt 1 view .LVU807
 2956              	.LVL287:
1634:Core/Src/bno055.c **** 
1635:Core/Src/bno055.c ****     /* Array holding the Euler r value
1636:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_LSB] - r->LSB
1637:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_MSB] - r->MSB
1638:Core/Src/bno055.c ****      */
1639:Core/Src/bno055.c ****     u8 data_u8[BNO055_EULER_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2957              		.loc 1 1639 5 view .LVU808
ARM GAS  /tmp/ccWoU29M.s 			page 85


 2958              		.loc 1 1639 8 is_stmt 0 view .LVU809
 2959 0004 0023     		movs	r3, #0
 2960 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1640:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2961              		.loc 1 1640 5 is_stmt 1 view .LVU810
 2962              	.LVL288:
1641:Core/Src/bno055.c **** 
1642:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1643:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2963              		.loc 1 1643 5 view .LVU811
 2964              		.loc 1 1643 18 is_stmt 0 view .LVU812
 2965 000a 134B     		ldr	r3, .L229
 2966 000c 1B68     		ldr	r3, [r3]
 2967              		.loc 1 1643 8 view .LVU813
 2968 000e EBB1     		cbz	r3, .L225
 2969 0010 0446     		mov	r4, r0
1644:Core/Src/bno055.c ****     {
1645:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1646:Core/Src/bno055.c ****     }
1647:Core/Src/bno055.c ****     else
1648:Core/Src/bno055.c ****     {
1649:Core/Src/bno055.c ****         /*condition check for page, chip id is
1650:Core/Src/bno055.c ****          * available in the page zero*/
1651:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2970              		.loc 1 1651 9 is_stmt 1 view .LVU814
 2971              		.loc 1 1651 21 is_stmt 0 view .LVU815
 2972 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2973              		.loc 1 1651 12 view .LVU816
 2974 0014 A3B9     		cbnz	r3, .L228
 2975              	.LVL289:
 2976              	.L223:
1652:Core/Src/bno055.c ****         {
1653:Core/Src/bno055.c ****             /* Write the page zero*/
1654:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1655:Core/Src/bno055.c ****         }
1656:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2977              		.loc 1 1656 53 discriminator 1 view .LVU817
 2978 0016 104B     		ldr	r3, .L229
 2979 0018 1B68     		ldr	r3, [r3]
 2980 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2981              		.loc 1 1656 41 discriminator 1 view .LVU818
 2982 001c CBB9     		cbnz	r3, .L226
 2983              	.L224:
1657:Core/Src/bno055.c ****         {
1658:Core/Src/bno055.c ****             /* Read the Euler roll data*/
1659:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2984              		.loc 1 1659 13 is_stmt 1 view .LVU819
 2985              		.loc 1 1659 32 is_stmt 0 view .LVU820
 2986 001e 0E4B     		ldr	r3, .L229
 2987 0020 1868     		ldr	r0, [r3]
 2988 0022 0569     		ldr	r5, [r0, #16]
 2989              		.loc 1 1659 24 view .LVU821
 2990 0024 0223     		movs	r3, #2
 2991 0026 01AA     		add	r2, sp, #4
 2992 0028 1C21     		movs	r1, #28
 2993 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2994 002c A847     		blx	r5
ARM GAS  /tmp/ccWoU29M.s 			page 86


 2995              	.LVL290:
1660:Core/Src/bno055.c ****                                                       BNO055_EULER_R_LSB_VALUER_REG,
1661:Core/Src/bno055.c ****                                                       data_u8,
1662:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1663:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2996              		.loc 1 1663 13 is_stmt 1 view .LVU822
1664:Core/Src/bno055.c ****                                                                         BNO055_EULER_R_LSB_VALUER);
1665:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2997              		.loc 1 1665 13 view .LVU823
1666:Core/Src/bno055.c ****                                                                         BNO055_EULER_R_MSB_VALUER);
1667:Core/Src/bno055.c ****             *euler_r_s16 =
 2998              		.loc 1 1667 13 view .LVU824
1668:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2999              		.loc 1 1668 31 is_stmt 0 view .LVU825
 3000 002e 9DF90520 		ldrsb	r2, [sp, #5]
1669:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_LSB]));
 3001              		.loc 1 1669 31 view .LVU826
 3002 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1668:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 3003              		.loc 1 1668 17 view .LVU827
 3004 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1667:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 3005              		.loc 1 1667 26 view .LVU828
 3006 003a 2380     		strh	r3, [r4]	@ movhi
 3007              	.LVL291:
 3008              	.L222:
1670:Core/Src/bno055.c ****         }
1671:Core/Src/bno055.c ****         else
1672:Core/Src/bno055.c ****         {
1673:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1674:Core/Src/bno055.c ****         }
1675:Core/Src/bno055.c ****     }
1676:Core/Src/bno055.c **** 
1677:Core/Src/bno055.c ****     return com_rslt;
1678:Core/Src/bno055.c **** }
 3009              		.loc 1 1678 1 view .LVU829
 3010 003c 03B0     		add	sp, sp, #12
 3011              	.LCFI91:
 3012              		.cfi_remember_state
 3013              		.cfi_def_cfa_offset 12
 3014              		@ sp needed
 3015 003e 30BD     		pop	{r4, r5, pc}
 3016              	.LVL292:
 3017              	.L228:
 3018              	.LCFI92:
 3019              		.cfi_restore_state
1654:Core/Src/bno055.c ****         }
 3020              		.loc 1 1654 13 is_stmt 1 view .LVU830
1654:Core/Src/bno055.c ****         }
 3021              		.loc 1 1654 23 is_stmt 0 view .LVU831
 3022 0040 0020     		movs	r0, #0
 3023              	.LVL293:
1654:Core/Src/bno055.c ****         }
 3024              		.loc 1 1654 23 view .LVU832
 3025 0042 FFF7FEFF 		bl	bno055_write_page_id
 3026              	.LVL294:
1656:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 87


 3027              		.loc 1 1656 9 is_stmt 1 view .LVU833
1656:Core/Src/bno055.c ****         {
 3028              		.loc 1 1656 12 is_stmt 0 view .LVU834
 3029 0046 0028     		cmp	r0, #0
 3030 0048 E9D0     		beq	.L224
 3031 004a E4E7     		b	.L223
 3032              	.LVL295:
 3033              	.L225:
1645:Core/Src/bno055.c ****     }
 3034              		.loc 1 1645 16 view .LVU835
 3035 004c 6FF07E00 		mvn	r0, #126
 3036              	.LVL296:
1645:Core/Src/bno055.c ****     }
 3037              		.loc 1 1645 16 view .LVU836
 3038 0050 F4E7     		b	.L222
 3039              	.LVL297:
 3040              	.L226:
1673:Core/Src/bno055.c ****         }
 3041              		.loc 1 1673 22 view .LVU837
 3042 0052 4FF0FF30 		mov	r0, #-1
 3043 0056 F1E7     		b	.L222
 3044              	.L230:
 3045              		.align	2
 3046              	.L229:
 3047 0058 00000000 		.word	.LANCHOR0
 3048              		.cfi_endproc
 3049              	.LFE24:
 3051              		.section	.text.bno055_read_euler_p,"ax",%progbits
 3052              		.align	1
 3053              		.global	bno055_read_euler_p
 3054              		.syntax unified
 3055              		.thumb
 3056              		.thumb_func
 3057              		.fpu fpv4-sp-d16
 3059              	bno055_read_euler_p:
 3060              	.LVL298:
 3061              	.LFB25:
1679:Core/Src/bno055.c **** 
1680:Core/Src/bno055.c **** /*!
1681:Core/Src/bno055.c ****  *  @brief This API reads Euler data p values
1682:Core/Src/bno055.c ****  *  from register 0x1E and 0x1F it is a two byte data
1683:Core/Src/bno055.c ****  *
1684:Core/Src/bno055.c ****  *  @param euler_p_s16 : The raw p data
1685:Core/Src/bno055.c ****  *
1686:Core/Src/bno055.c ****  *  @return results of bus communication function
1687:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1688:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1689:Core/Src/bno055.c ****  *
1690:Core/Src/bno055.c ****  *
1691:Core/Src/bno055.c ****  */
1692:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_euler_p(s16 *euler_p_s16)
1693:Core/Src/bno055.c **** {
 3062              		.loc 1 1693 1 is_stmt 1 view -0
 3063              		.cfi_startproc
 3064              		@ args = 0, pretend = 0, frame = 8
 3065              		@ frame_needed = 0, uses_anonymous_args = 0
 3066              		.loc 1 1693 1 is_stmt 0 view .LVU839
ARM GAS  /tmp/ccWoU29M.s 			page 88


 3067 0000 30B5     		push	{r4, r5, lr}
 3068              	.LCFI93:
 3069              		.cfi_def_cfa_offset 12
 3070              		.cfi_offset 4, -12
 3071              		.cfi_offset 5, -8
 3072              		.cfi_offset 14, -4
 3073 0002 83B0     		sub	sp, sp, #12
 3074              	.LCFI94:
 3075              		.cfi_def_cfa_offset 24
1694:Core/Src/bno055.c ****     /* Variable used to return value of
1695:Core/Src/bno055.c ****      * communication routine*/
1696:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3076              		.loc 1 1696 5 is_stmt 1 view .LVU840
 3077              	.LVL299:
1697:Core/Src/bno055.c **** 
1698:Core/Src/bno055.c ****     /* Array holding the Euler p value
1699:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_LSB] - p->LSB
1700:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_MSB] - p->MSB
1701:Core/Src/bno055.c ****      */
1702:Core/Src/bno055.c ****     u8 data_u8[BNO055_EULER_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3078              		.loc 1 1702 5 view .LVU841
 3079              		.loc 1 1702 8 is_stmt 0 view .LVU842
 3080 0004 0023     		movs	r3, #0
 3081 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1703:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3082              		.loc 1 1703 5 is_stmt 1 view .LVU843
 3083              	.LVL300:
1704:Core/Src/bno055.c **** 
1705:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1706:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3084              		.loc 1 1706 5 view .LVU844
 3085              		.loc 1 1706 18 is_stmt 0 view .LVU845
 3086 000a 134B     		ldr	r3, .L239
 3087 000c 1B68     		ldr	r3, [r3]
 3088              		.loc 1 1706 8 view .LVU846
 3089 000e EBB1     		cbz	r3, .L235
 3090 0010 0446     		mov	r4, r0
1707:Core/Src/bno055.c ****     {
1708:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1709:Core/Src/bno055.c ****     }
1710:Core/Src/bno055.c ****     else
1711:Core/Src/bno055.c ****     {
1712:Core/Src/bno055.c ****         /*condition check for page, chip id is
1713:Core/Src/bno055.c ****          * available in the page zero*/
1714:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3091              		.loc 1 1714 9 is_stmt 1 view .LVU847
 3092              		.loc 1 1714 21 is_stmt 0 view .LVU848
 3093 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3094              		.loc 1 1714 12 view .LVU849
 3095 0014 A3B9     		cbnz	r3, .L238
 3096              	.LVL301:
 3097              	.L233:
1715:Core/Src/bno055.c ****         {
1716:Core/Src/bno055.c ****             /* Write the page zero*/
1717:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1718:Core/Src/bno055.c ****         }
1719:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
ARM GAS  /tmp/ccWoU29M.s 			page 89


 3098              		.loc 1 1719 53 discriminator 1 view .LVU850
 3099 0016 104B     		ldr	r3, .L239
 3100 0018 1B68     		ldr	r3, [r3]
 3101 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3102              		.loc 1 1719 41 discriminator 1 view .LVU851
 3103 001c CBB9     		cbnz	r3, .L236
 3104              	.L234:
1720:Core/Src/bno055.c ****         {
1721:Core/Src/bno055.c ****             /* Read the Euler p data*/
1722:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3105              		.loc 1 1722 13 is_stmt 1 view .LVU852
 3106              		.loc 1 1722 32 is_stmt 0 view .LVU853
 3107 001e 0E4B     		ldr	r3, .L239
 3108 0020 1868     		ldr	r0, [r3]
 3109 0022 0569     		ldr	r5, [r0, #16]
 3110              		.loc 1 1722 24 view .LVU854
 3111 0024 0223     		movs	r3, #2
 3112 0026 01AA     		add	r2, sp, #4
 3113 0028 1E21     		movs	r1, #30
 3114 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3115 002c A847     		blx	r5
 3116              	.LVL302:
1723:Core/Src/bno055.c ****                                                       BNO055_EULER_P_LSB_VALUEP_REG,
1724:Core/Src/bno055.c ****                                                       data_u8,
1725:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1726:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 3117              		.loc 1 1726 13 is_stmt 1 view .LVU855
1727:Core/Src/bno055.c ****                                                                         BNO055_EULER_P_LSB_VALUEP);
1728:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 3118              		.loc 1 1728 13 view .LVU856
1729:Core/Src/bno055.c ****                                                                         BNO055_EULER_P_MSB_VALUEP);
1730:Core/Src/bno055.c ****             *euler_p_s16 =
 3119              		.loc 1 1730 13 view .LVU857
1731:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 3120              		.loc 1 1731 31 is_stmt 0 view .LVU858
 3121 002e 9DF90520 		ldrsb	r2, [sp, #5]
1732:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_LSB]));
 3122              		.loc 1 1732 31 view .LVU859
 3123 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1731:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 3124              		.loc 1 1731 17 view .LVU860
 3125 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1730:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 3126              		.loc 1 1730 26 view .LVU861
 3127 003a 2380     		strh	r3, [r4]	@ movhi
 3128              	.LVL303:
 3129              	.L232:
1733:Core/Src/bno055.c ****         }
1734:Core/Src/bno055.c ****         else
1735:Core/Src/bno055.c ****         {
1736:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1737:Core/Src/bno055.c ****         }
1738:Core/Src/bno055.c ****     }
1739:Core/Src/bno055.c **** 
1740:Core/Src/bno055.c ****     return com_rslt;
1741:Core/Src/bno055.c **** }
 3130              		.loc 1 1741 1 view .LVU862
ARM GAS  /tmp/ccWoU29M.s 			page 90


 3131 003c 03B0     		add	sp, sp, #12
 3132              	.LCFI95:
 3133              		.cfi_remember_state
 3134              		.cfi_def_cfa_offset 12
 3135              		@ sp needed
 3136 003e 30BD     		pop	{r4, r5, pc}
 3137              	.LVL304:
 3138              	.L238:
 3139              	.LCFI96:
 3140              		.cfi_restore_state
1717:Core/Src/bno055.c ****         }
 3141              		.loc 1 1717 13 is_stmt 1 view .LVU863
1717:Core/Src/bno055.c ****         }
 3142              		.loc 1 1717 23 is_stmt 0 view .LVU864
 3143 0040 0020     		movs	r0, #0
 3144              	.LVL305:
1717:Core/Src/bno055.c ****         }
 3145              		.loc 1 1717 23 view .LVU865
 3146 0042 FFF7FEFF 		bl	bno055_write_page_id
 3147              	.LVL306:
1719:Core/Src/bno055.c ****         {
 3148              		.loc 1 1719 9 is_stmt 1 view .LVU866
1719:Core/Src/bno055.c ****         {
 3149              		.loc 1 1719 12 is_stmt 0 view .LVU867
 3150 0046 0028     		cmp	r0, #0
 3151 0048 E9D0     		beq	.L234
 3152 004a E4E7     		b	.L233
 3153              	.LVL307:
 3154              	.L235:
1708:Core/Src/bno055.c ****     }
 3155              		.loc 1 1708 16 view .LVU868
 3156 004c 6FF07E00 		mvn	r0, #126
 3157              	.LVL308:
1708:Core/Src/bno055.c ****     }
 3158              		.loc 1 1708 16 view .LVU869
 3159 0050 F4E7     		b	.L232
 3160              	.LVL309:
 3161              	.L236:
1736:Core/Src/bno055.c ****         }
 3162              		.loc 1 1736 22 view .LVU870
 3163 0052 4FF0FF30 		mov	r0, #-1
 3164 0056 F1E7     		b	.L232
 3165              	.L240:
 3166              		.align	2
 3167              	.L239:
 3168 0058 00000000 		.word	.LANCHOR0
 3169              		.cfi_endproc
 3170              	.LFE25:
 3172              		.section	.text.bno055_read_euler_hrp,"ax",%progbits
 3173              		.align	1
 3174              		.global	bno055_read_euler_hrp
 3175              		.syntax unified
 3176              		.thumb
 3177              		.thumb_func
 3178              		.fpu fpv4-sp-d16
 3180              	bno055_read_euler_hrp:
 3181              	.LVL310:
ARM GAS  /tmp/ccWoU29M.s 			page 91


 3182              	.LFB26:
1742:Core/Src/bno055.c **** 
1743:Core/Src/bno055.c **** /*!
1744:Core/Src/bno055.c ****  *  @brief This API reads Euler data hrp values
1745:Core/Src/bno055.c ****  *  from register 0x1A to 0x1F it is a six byte data
1746:Core/Src/bno055.c ****  *
1747:Core/Src/bno055.c ****  *
1748:Core/Src/bno055.c ****  *  @param euler : The Euler hrp data's
1749:Core/Src/bno055.c ****  *
1750:Core/Src/bno055.c ****  *  Parameter |    result
1751:Core/Src/bno055.c ****  *  --------- | -----------------
1752:Core/Src/bno055.c ****  *   h        | The Euler h data
1753:Core/Src/bno055.c ****  *   r        | The Euler r data
1754:Core/Src/bno055.c ****  *   p        | The Euler p data
1755:Core/Src/bno055.c ****  *
1756:Core/Src/bno055.c ****  *
1757:Core/Src/bno055.c ****  *  @return results of bus communication function
1758:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1759:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1760:Core/Src/bno055.c ****  *
1761:Core/Src/bno055.c ****  */
1762:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_euler_hrp(struct bno055_euler_t *euler)
1763:Core/Src/bno055.c **** {
 3183              		.loc 1 1763 1 is_stmt 1 view -0
 3184              		.cfi_startproc
 3185              		@ args = 0, pretend = 0, frame = 8
 3186              		@ frame_needed = 0, uses_anonymous_args = 0
 3187              		.loc 1 1763 1 is_stmt 0 view .LVU872
 3188 0000 30B5     		push	{r4, r5, lr}
 3189              	.LCFI97:
 3190              		.cfi_def_cfa_offset 12
 3191              		.cfi_offset 4, -12
 3192              		.cfi_offset 5, -8
 3193              		.cfi_offset 14, -4
 3194 0002 83B0     		sub	sp, sp, #12
 3195              	.LCFI98:
 3196              		.cfi_def_cfa_offset 24
 3197 0004 0446     		mov	r4, r0
1764:Core/Src/bno055.c ****     /* Variable used to return value of
1765:Core/Src/bno055.c ****      * communication routine*/
1766:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3198              		.loc 1 1766 5 is_stmt 1 view .LVU873
 3199              	.LVL311:
1767:Core/Src/bno055.c **** 
1768:Core/Src/bno055.c ****     /* Array holding the Euler hrp value
1769:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_LSB] - h->LSB
1770:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB] - h->MSB
1771:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_LSB] - r->MSB
1772:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB] - r->MSB
1773:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_LSB] - p->MSB
1774:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB] - p->MSB
1775:Core/Src/bno055.c ****      */
1776:Core/Src/bno055.c ****     u8 data_u8[BNO055_EULER_HRP_DATA_SIZE] = {
 3200              		.loc 1 1776 5 view .LVU874
 3201              		.loc 1 1776 8 is_stmt 0 view .LVU875
 3202 0006 1D4B     		ldr	r3, .L249
 3203 0008 93E80300 		ldm	r3, {r0, r1}
ARM GAS  /tmp/ccWoU29M.s 			page 92


 3204              	.LVL312:
 3205              		.loc 1 1776 8 view .LVU876
 3206 000c 0090     		str	r0, [sp]
 3207 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
1777:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
1778:Core/Src/bno055.c ****     };
1779:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3208              		.loc 1 1779 5 is_stmt 1 view .LVU877
 3209              	.LVL313:
1780:Core/Src/bno055.c **** 
1781:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1782:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3210              		.loc 1 1782 5 view .LVU878
 3211              		.loc 1 1782 18 is_stmt 0 view .LVU879
 3212 0012 1B4B     		ldr	r3, .L249+4
 3213 0014 1B68     		ldr	r3, [r3]
 3214              		.loc 1 1782 8 view .LVU880
 3215 0016 53B3     		cbz	r3, .L245
1783:Core/Src/bno055.c ****     {
1784:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1785:Core/Src/bno055.c ****     }
1786:Core/Src/bno055.c ****     else
1787:Core/Src/bno055.c ****     {
1788:Core/Src/bno055.c ****         /*condition check for page, chip id is
1789:Core/Src/bno055.c ****          * available in the page zero*/
1790:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3216              		.loc 1 1790 9 is_stmt 1 view .LVU881
 3217              		.loc 1 1790 21 is_stmt 0 view .LVU882
 3218 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3219              		.loc 1 1790 12 view .LVU883
 3220 001a 13BB     		cbnz	r3, .L248
 3221              	.LVL314:
 3222              	.L243:
1791:Core/Src/bno055.c ****         {
1792:Core/Src/bno055.c ****             /* Write the page zero*/
1793:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1794:Core/Src/bno055.c ****         }
1795:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3223              		.loc 1 1795 53 discriminator 1 view .LVU884
 3224 001c 184B     		ldr	r3, .L249+4
 3225 001e 1B68     		ldr	r3, [r3]
 3226 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3227              		.loc 1 1795 41 discriminator 1 view .LVU885
 3228 0022 3BBB     		cbnz	r3, .L246
 3229              	.L244:
1796:Core/Src/bno055.c ****         {
1797:Core/Src/bno055.c ****             /* Read the six byte of Euler hrp data*/
1798:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3230              		.loc 1 1798 13 is_stmt 1 view .LVU886
 3231              		.loc 1 1798 32 is_stmt 0 view .LVU887
 3232 0024 164B     		ldr	r3, .L249+4
 3233 0026 1868     		ldr	r0, [r3]
 3234 0028 0569     		ldr	r5, [r0, #16]
 3235              		.loc 1 1798 24 view .LVU888
 3236 002a 0623     		movs	r3, #6
 3237 002c 6A46     		mov	r2, sp
 3238 002e 1A21     		movs	r1, #26
ARM GAS  /tmp/ccWoU29M.s 			page 93


 3239 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3240 0032 A847     		blx	r5
 3241              	.LVL315:
1799:Core/Src/bno055.c ****                                                       BNO055_EULER_H_LSB_VALUEH_REG,
1800:Core/Src/bno055.c ****                                                       data_u8,
1801:Core/Src/bno055.c ****                                                       BNO055_EULER_HRP_DATA_SIZE);
1802:Core/Src/bno055.c **** 
1803:Core/Src/bno055.c ****             /* Data h*/
1804:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_LSB] = BNO055_GET_BITSLICE(
 3242              		.loc 1 1804 13 is_stmt 1 view .LVU889
1805:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_LSB],
1806:Core/Src/bno055.c ****                 BNO055_EULER_H_LSB_VALUEH);
1807:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB] = BNO055_GET_BITSLICE(
 3243              		.loc 1 1807 13 view .LVU890
1808:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB],
1809:Core/Src/bno055.c ****                 BNO055_EULER_H_MSB_VALUEH);
1810:Core/Src/bno055.c ****             euler->h =
 3244              		.loc 1 1810 13 view .LVU891
1811:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB])) << BNO055_SHIFT_EIG
 3245              		.loc 1 1811 31 is_stmt 0 view .LVU892
 3246 0034 9DF90120 		ldrsb	r2, [sp, #1]
1812:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_LSB]));
 3247              		.loc 1 1812 31 view .LVU893
 3248 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
1811:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB])) << BNO055_SHIFT_EIG
 3249              		.loc 1 1811 17 view .LVU894
 3250 003c 43EA0223 		orr	r3, r3, r2, lsl #8
1810:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB])) << BNO055_SHIFT_EIG
 3251              		.loc 1 1810 22 view .LVU895
 3252 0040 2380     		strh	r3, [r4]	@ movhi
1813:Core/Src/bno055.c **** 
1814:Core/Src/bno055.c ****             /* Data r*/
1815:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_LSB] = BNO055_GET_BITSLICE(
 3253              		.loc 1 1815 13 is_stmt 1 view .LVU896
1816:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_LSB],
1817:Core/Src/bno055.c ****                 BNO055_EULER_R_LSB_VALUER);
1818:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB] = BNO055_GET_BITSLICE(
 3254              		.loc 1 1818 13 view .LVU897
1819:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB],
1820:Core/Src/bno055.c ****                 BNO055_EULER_R_MSB_VALUER);
1821:Core/Src/bno055.c ****             euler->r =
 3255              		.loc 1 1821 13 view .LVU898
1822:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB])) << BNO055_SHIFT_EIG
 3256              		.loc 1 1822 31 is_stmt 0 view .LVU899
 3257 0042 9DF90320 		ldrsb	r2, [sp, #3]
1823:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_LSB]));
 3258              		.loc 1 1823 31 view .LVU900
 3259 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
1822:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB])) << BNO055_SHIFT_EIG
 3260              		.loc 1 1822 17 view .LVU901
 3261 004a 43EA0223 		orr	r3, r3, r2, lsl #8
1821:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB])) << BNO055_SHIFT_EIG
 3262              		.loc 1 1821 22 view .LVU902
 3263 004e 6380     		strh	r3, [r4, #2]	@ movhi
1824:Core/Src/bno055.c **** 
1825:Core/Src/bno055.c ****             /* Data p*/
1826:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_LSB] = BNO055_GET_BITSLICE(
ARM GAS  /tmp/ccWoU29M.s 			page 94


 3264              		.loc 1 1826 13 is_stmt 1 view .LVU903
1827:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_LSB],
1828:Core/Src/bno055.c ****                 BNO055_EULER_P_LSB_VALUEP);
1829:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB] = BNO055_GET_BITSLICE(
 3265              		.loc 1 1829 13 view .LVU904
1830:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB],
1831:Core/Src/bno055.c ****                 BNO055_EULER_P_MSB_VALUEP);
1832:Core/Src/bno055.c ****             euler->p =
 3266              		.loc 1 1832 13 view .LVU905
1833:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB])) << BNO055_SHIFT_EIG
 3267              		.loc 1 1833 31 is_stmt 0 view .LVU906
 3268 0050 9DF90520 		ldrsb	r2, [sp, #5]
1834:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_LSB]));
 3269              		.loc 1 1834 31 view .LVU907
 3270 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1833:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB])) << BNO055_SHIFT_EIG
 3271              		.loc 1 1833 17 view .LVU908
 3272 0058 43EA0223 		orr	r3, r3, r2, lsl #8
1832:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB])) << BNO055_SHIFT_EIG
 3273              		.loc 1 1832 22 view .LVU909
 3274 005c A380     		strh	r3, [r4, #4]	@ movhi
 3275              	.LVL316:
 3276              	.L242:
1835:Core/Src/bno055.c ****         }
1836:Core/Src/bno055.c ****         else
1837:Core/Src/bno055.c ****         {
1838:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1839:Core/Src/bno055.c ****         }
1840:Core/Src/bno055.c ****     }
1841:Core/Src/bno055.c **** 
1842:Core/Src/bno055.c ****     return com_rslt;
1843:Core/Src/bno055.c **** }
 3277              		.loc 1 1843 1 view .LVU910
 3278 005e 03B0     		add	sp, sp, #12
 3279              	.LCFI99:
 3280              		.cfi_remember_state
 3281              		.cfi_def_cfa_offset 12
 3282              		@ sp needed
 3283 0060 30BD     		pop	{r4, r5, pc}
 3284              	.LVL317:
 3285              	.L248:
 3286              	.LCFI100:
 3287              		.cfi_restore_state
1793:Core/Src/bno055.c ****         }
 3288              		.loc 1 1793 13 is_stmt 1 view .LVU911
1793:Core/Src/bno055.c ****         }
 3289              		.loc 1 1793 23 is_stmt 0 view .LVU912
 3290 0062 0020     		movs	r0, #0
 3291 0064 FFF7FEFF 		bl	bno055_write_page_id
 3292              	.LVL318:
1795:Core/Src/bno055.c ****         {
 3293              		.loc 1 1795 9 is_stmt 1 view .LVU913
1795:Core/Src/bno055.c ****         {
 3294              		.loc 1 1795 12 is_stmt 0 view .LVU914
 3295 0068 0028     		cmp	r0, #0
 3296 006a DBD0     		beq	.L244
 3297 006c D6E7     		b	.L243
ARM GAS  /tmp/ccWoU29M.s 			page 95


 3298              	.LVL319:
 3299              	.L245:
1784:Core/Src/bno055.c ****     }
 3300              		.loc 1 1784 16 view .LVU915
 3301 006e 6FF07E00 		mvn	r0, #126
 3302 0072 F4E7     		b	.L242
 3303              	.LVL320:
 3304              	.L246:
1838:Core/Src/bno055.c ****         }
 3305              		.loc 1 1838 22 view .LVU916
 3306 0074 4FF0FF30 		mov	r0, #-1
 3307 0078 F1E7     		b	.L242
 3308              	.L250:
 3309 007a 00BF     		.align	2
 3310              	.L249:
 3311 007c 00000000 		.word	.LANCHOR1
 3312 0080 00000000 		.word	.LANCHOR0
 3313              		.cfi_endproc
 3314              	.LFE26:
 3316              		.section	.text.bno055_read_quaternion_w,"ax",%progbits
 3317              		.align	1
 3318              		.global	bno055_read_quaternion_w
 3319              		.syntax unified
 3320              		.thumb
 3321              		.thumb_func
 3322              		.fpu fpv4-sp-d16
 3324              	bno055_read_quaternion_w:
 3325              	.LVL321:
 3326              	.LFB27:
1844:Core/Src/bno055.c **** 
1845:Core/Src/bno055.c **** /*!
1846:Core/Src/bno055.c ****  *  @brief This API reads quaternion data w values
1847:Core/Src/bno055.c ****  *  from register 0x20 and 0x21 it is a two byte data
1848:Core/Src/bno055.c ****  *
1849:Core/Src/bno055.c ****  *  @param quaternion_w_s16 : The raw w data
1850:Core/Src/bno055.c ****  *
1851:Core/Src/bno055.c ****  *  @return results of bus communication function
1852:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1853:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1854:Core/Src/bno055.c ****  *
1855:Core/Src/bno055.c ****  *
1856:Core/Src/bno055.c ****  */
1857:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_w(s16 *quaternion_w_s16)
1858:Core/Src/bno055.c **** {
 3327              		.loc 1 1858 1 is_stmt 1 view -0
 3328              		.cfi_startproc
 3329              		@ args = 0, pretend = 0, frame = 8
 3330              		@ frame_needed = 0, uses_anonymous_args = 0
 3331              		.loc 1 1858 1 is_stmt 0 view .LVU918
 3332 0000 30B5     		push	{r4, r5, lr}
 3333              	.LCFI101:
 3334              		.cfi_def_cfa_offset 12
 3335              		.cfi_offset 4, -12
 3336              		.cfi_offset 5, -8
 3337              		.cfi_offset 14, -4
 3338 0002 83B0     		sub	sp, sp, #12
 3339              	.LCFI102:
ARM GAS  /tmp/ccWoU29M.s 			page 96


 3340              		.cfi_def_cfa_offset 24
1859:Core/Src/bno055.c ****     /* Variable used to return value of
1860:Core/Src/bno055.c ****      * communication routine*/
1861:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3341              		.loc 1 1861 5 is_stmt 1 view .LVU919
 3342              	.LVL322:
1862:Core/Src/bno055.c **** 
1863:Core/Src/bno055.c ****     /* Array holding the Quaternion w value
1864:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] - w->LSB
1865:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] - w->MSB
1866:Core/Src/bno055.c ****      */
1867:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3343              		.loc 1 1867 5 view .LVU920
 3344              		.loc 1 1867 8 is_stmt 0 view .LVU921
 3345 0004 0023     		movs	r3, #0
 3346 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1868:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3347              		.loc 1 1868 5 is_stmt 1 view .LVU922
 3348              	.LVL323:
1869:Core/Src/bno055.c **** 
1870:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1871:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3349              		.loc 1 1871 5 view .LVU923
 3350              		.loc 1 1871 18 is_stmt 0 view .LVU924
 3351 000a 134B     		ldr	r3, .L259
 3352 000c 1B68     		ldr	r3, [r3]
 3353              		.loc 1 1871 8 view .LVU925
 3354 000e EBB1     		cbz	r3, .L255
 3355 0010 0446     		mov	r4, r0
1872:Core/Src/bno055.c ****     {
1873:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1874:Core/Src/bno055.c ****     }
1875:Core/Src/bno055.c ****     else
1876:Core/Src/bno055.c ****     {
1877:Core/Src/bno055.c ****         /*condition check for page, chip id is
1878:Core/Src/bno055.c ****          * available in the page zero*/
1879:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3356              		.loc 1 1879 9 is_stmt 1 view .LVU926
 3357              		.loc 1 1879 21 is_stmt 0 view .LVU927
 3358 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3359              		.loc 1 1879 12 view .LVU928
 3360 0014 A3B9     		cbnz	r3, .L258
 3361              	.LVL324:
 3362              	.L253:
1880:Core/Src/bno055.c ****         {
1881:Core/Src/bno055.c ****             /* Write the page zero*/
1882:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1883:Core/Src/bno055.c ****         }
1884:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3363              		.loc 1 1884 53 discriminator 1 view .LVU929
 3364 0016 104B     		ldr	r3, .L259
 3365 0018 1B68     		ldr	r3, [r3]
 3366 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3367              		.loc 1 1884 41 discriminator 1 view .LVU930
 3368 001c CBB9     		cbnz	r3, .L256
 3369              	.L254:
1885:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 97


1886:Core/Src/bno055.c ****             /* Read the two byte value
1887:Core/Src/bno055.c ****              * of quaternion w data*/
1888:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3370              		.loc 1 1888 13 is_stmt 1 view .LVU931
 3371              		.loc 1 1888 32 is_stmt 0 view .LVU932
 3372 001e 0E4B     		ldr	r3, .L259
 3373 0020 1868     		ldr	r0, [r3]
 3374 0022 0569     		ldr	r5, [r0, #16]
 3375              		.loc 1 1888 24 view .LVU933
 3376 0024 0223     		movs	r3, #2
 3377 0026 01AA     		add	r2, sp, #4
 3378 0028 2021     		movs	r1, #32
 3379 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3380 002c A847     		blx	r5
 3381              	.LVL325:
1889:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_W_LSB_VALUEW_REG,
1890:Core/Src/bno055.c ****                                                       data_u8,
1891:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1892:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3382              		.loc 1 1892 13 is_stmt 1 view .LVU934
1893:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
1894:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3383              		.loc 1 1894 13 view .LVU935
1895:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
1896:Core/Src/bno055.c ****             *quaternion_w_s16 =
 3384              		.loc 1 1896 13 view .LVU936
1897:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3385              		.loc 1 1897 31 is_stmt 0 view .LVU937
 3386 002e 9DF90520 		ldrsb	r2, [sp, #5]
1898:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB]));
 3387              		.loc 1 1898 31 view .LVU938
 3388 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1897:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3389              		.loc 1 1897 17 view .LVU939
 3390 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1896:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3391              		.loc 1 1896 31 view .LVU940
 3392 003a 2380     		strh	r3, [r4]	@ movhi
 3393              	.LVL326:
 3394              	.L252:
1899:Core/Src/bno055.c ****         }
1900:Core/Src/bno055.c ****         else
1901:Core/Src/bno055.c ****         {
1902:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1903:Core/Src/bno055.c ****         }
1904:Core/Src/bno055.c ****     }
1905:Core/Src/bno055.c **** 
1906:Core/Src/bno055.c ****     return com_rslt;
1907:Core/Src/bno055.c **** }
 3395              		.loc 1 1907 1 view .LVU941
 3396 003c 03B0     		add	sp, sp, #12
 3397              	.LCFI103:
 3398              		.cfi_remember_state
 3399              		.cfi_def_cfa_offset 12
 3400              		@ sp needed
 3401 003e 30BD     		pop	{r4, r5, pc}
 3402              	.LVL327:
ARM GAS  /tmp/ccWoU29M.s 			page 98


 3403              	.L258:
 3404              	.LCFI104:
 3405              		.cfi_restore_state
1882:Core/Src/bno055.c ****         }
 3406              		.loc 1 1882 13 is_stmt 1 view .LVU942
1882:Core/Src/bno055.c ****         }
 3407              		.loc 1 1882 23 is_stmt 0 view .LVU943
 3408 0040 0020     		movs	r0, #0
 3409              	.LVL328:
1882:Core/Src/bno055.c ****         }
 3410              		.loc 1 1882 23 view .LVU944
 3411 0042 FFF7FEFF 		bl	bno055_write_page_id
 3412              	.LVL329:
1884:Core/Src/bno055.c ****         {
 3413              		.loc 1 1884 9 is_stmt 1 view .LVU945
1884:Core/Src/bno055.c ****         {
 3414              		.loc 1 1884 12 is_stmt 0 view .LVU946
 3415 0046 0028     		cmp	r0, #0
 3416 0048 E9D0     		beq	.L254
 3417 004a E4E7     		b	.L253
 3418              	.LVL330:
 3419              	.L255:
1873:Core/Src/bno055.c ****     }
 3420              		.loc 1 1873 16 view .LVU947
 3421 004c 6FF07E00 		mvn	r0, #126
 3422              	.LVL331:
1873:Core/Src/bno055.c ****     }
 3423              		.loc 1 1873 16 view .LVU948
 3424 0050 F4E7     		b	.L252
 3425              	.LVL332:
 3426              	.L256:
1902:Core/Src/bno055.c ****         }
 3427              		.loc 1 1902 22 view .LVU949
 3428 0052 4FF0FF30 		mov	r0, #-1
 3429 0056 F1E7     		b	.L252
 3430              	.L260:
 3431              		.align	2
 3432              	.L259:
 3433 0058 00000000 		.word	.LANCHOR0
 3434              		.cfi_endproc
 3435              	.LFE27:
 3437              		.section	.text.bno055_read_quaternion_x,"ax",%progbits
 3438              		.align	1
 3439              		.global	bno055_read_quaternion_x
 3440              		.syntax unified
 3441              		.thumb
 3442              		.thumb_func
 3443              		.fpu fpv4-sp-d16
 3445              	bno055_read_quaternion_x:
 3446              	.LVL333:
 3447              	.LFB28:
1908:Core/Src/bno055.c **** 
1909:Core/Src/bno055.c **** /*!
1910:Core/Src/bno055.c ****  *  @brief This API reads quaternion data x values
1911:Core/Src/bno055.c ****  *  from register 0x22 and 0x23 it is a two byte data
1912:Core/Src/bno055.c ****  *
1913:Core/Src/bno055.c ****  *  @param quaternion_x_s16 : The raw x data
ARM GAS  /tmp/ccWoU29M.s 			page 99


1914:Core/Src/bno055.c ****  *
1915:Core/Src/bno055.c ****  *  @return results of bus communication function
1916:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1917:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1918:Core/Src/bno055.c ****  *
1919:Core/Src/bno055.c ****  *
1920:Core/Src/bno055.c ****  */
1921:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_x(s16 *quaternion_x_s16)
1922:Core/Src/bno055.c **** {
 3448              		.loc 1 1922 1 is_stmt 1 view -0
 3449              		.cfi_startproc
 3450              		@ args = 0, pretend = 0, frame = 8
 3451              		@ frame_needed = 0, uses_anonymous_args = 0
 3452              		.loc 1 1922 1 is_stmt 0 view .LVU951
 3453 0000 30B5     		push	{r4, r5, lr}
 3454              	.LCFI105:
 3455              		.cfi_def_cfa_offset 12
 3456              		.cfi_offset 4, -12
 3457              		.cfi_offset 5, -8
 3458              		.cfi_offset 14, -4
 3459 0002 83B0     		sub	sp, sp, #12
 3460              	.LCFI106:
 3461              		.cfi_def_cfa_offset 24
1923:Core/Src/bno055.c ****     /* Variable used to return value of
1924:Core/Src/bno055.c ****      * communication routine*/
1925:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3462              		.loc 1 1925 5 is_stmt 1 view .LVU952
 3463              	.LVL334:
1926:Core/Src/bno055.c **** 
1927:Core/Src/bno055.c ****     /* Array holding the quaternion x value
1928:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] - x->LSB
1929:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] - x->MSB
1930:Core/Src/bno055.c ****      */
1931:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3464              		.loc 1 1931 5 view .LVU953
 3465              		.loc 1 1931 8 is_stmt 0 view .LVU954
 3466 0004 0023     		movs	r3, #0
 3467 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1932:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3468              		.loc 1 1932 5 is_stmt 1 view .LVU955
 3469              	.LVL335:
1933:Core/Src/bno055.c **** 
1934:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1935:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3470              		.loc 1 1935 5 view .LVU956
 3471              		.loc 1 1935 18 is_stmt 0 view .LVU957
 3472 000a 134B     		ldr	r3, .L269
 3473 000c 1B68     		ldr	r3, [r3]
 3474              		.loc 1 1935 8 view .LVU958
 3475 000e EBB1     		cbz	r3, .L265
 3476 0010 0446     		mov	r4, r0
1936:Core/Src/bno055.c ****     {
1937:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1938:Core/Src/bno055.c ****     }
1939:Core/Src/bno055.c ****     else
1940:Core/Src/bno055.c ****     {
1941:Core/Src/bno055.c ****         /*condition check for page, chip id is
ARM GAS  /tmp/ccWoU29M.s 			page 100


1942:Core/Src/bno055.c ****          * available in the page zero*/
1943:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3477              		.loc 1 1943 9 is_stmt 1 view .LVU959
 3478              		.loc 1 1943 21 is_stmt 0 view .LVU960
 3479 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3480              		.loc 1 1943 12 view .LVU961
 3481 0014 A3B9     		cbnz	r3, .L268
 3482              	.LVL336:
 3483              	.L263:
1944:Core/Src/bno055.c ****         {
1945:Core/Src/bno055.c ****             /* Write the page zero*/
1946:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1947:Core/Src/bno055.c ****         }
1948:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3484              		.loc 1 1948 53 discriminator 1 view .LVU962
 3485 0016 104B     		ldr	r3, .L269
 3486 0018 1B68     		ldr	r3, [r3]
 3487 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3488              		.loc 1 1948 41 discriminator 1 view .LVU963
 3489 001c CBB9     		cbnz	r3, .L266
 3490              	.L264:
1949:Core/Src/bno055.c ****         {
1950:Core/Src/bno055.c ****             /* Read the two byte value
1951:Core/Src/bno055.c ****              * of quaternion x data*/
1952:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3491              		.loc 1 1952 13 is_stmt 1 view .LVU964
 3492              		.loc 1 1952 32 is_stmt 0 view .LVU965
 3493 001e 0E4B     		ldr	r3, .L269
 3494 0020 1868     		ldr	r0, [r3]
 3495 0022 0569     		ldr	r5, [r0, #16]
 3496              		.loc 1 1952 24 view .LVU966
 3497 0024 0223     		movs	r3, #2
 3498 0026 01AA     		add	r2, sp, #4
 3499 0028 2221     		movs	r1, #34
 3500 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3501 002c A847     		blx	r5
 3502              	.LVL337:
1953:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_X_LSB_VALUEX_REG,
1954:Core/Src/bno055.c ****                                                       data_u8,
1955:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1956:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3503              		.loc 1 1956 13 is_stmt 1 view .LVU967
1957:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
1958:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3504              		.loc 1 1958 13 view .LVU968
1959:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
1960:Core/Src/bno055.c ****             *quaternion_x_s16 =
 3505              		.loc 1 1960 13 view .LVU969
1961:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3506              		.loc 1 1961 31 is_stmt 0 view .LVU970
 3507 002e 9DF90520 		ldrsb	r2, [sp, #5]
1962:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB]));
 3508              		.loc 1 1962 31 view .LVU971
 3509 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1961:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3510              		.loc 1 1961 17 view .LVU972
 3511 0036 43EA0223 		orr	r3, r3, r2, lsl #8
ARM GAS  /tmp/ccWoU29M.s 			page 101


1960:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3512              		.loc 1 1960 31 view .LVU973
 3513 003a 2380     		strh	r3, [r4]	@ movhi
 3514              	.LVL338:
 3515              	.L262:
1963:Core/Src/bno055.c ****         }
1964:Core/Src/bno055.c ****         else
1965:Core/Src/bno055.c ****         {
1966:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1967:Core/Src/bno055.c ****         }
1968:Core/Src/bno055.c ****     }
1969:Core/Src/bno055.c **** 
1970:Core/Src/bno055.c ****     return com_rslt;
1971:Core/Src/bno055.c **** }
 3516              		.loc 1 1971 1 view .LVU974
 3517 003c 03B0     		add	sp, sp, #12
 3518              	.LCFI107:
 3519              		.cfi_remember_state
 3520              		.cfi_def_cfa_offset 12
 3521              		@ sp needed
 3522 003e 30BD     		pop	{r4, r5, pc}
 3523              	.LVL339:
 3524              	.L268:
 3525              	.LCFI108:
 3526              		.cfi_restore_state
1946:Core/Src/bno055.c ****         }
 3527              		.loc 1 1946 13 is_stmt 1 view .LVU975
1946:Core/Src/bno055.c ****         }
 3528              		.loc 1 1946 23 is_stmt 0 view .LVU976
 3529 0040 0020     		movs	r0, #0
 3530              	.LVL340:
1946:Core/Src/bno055.c ****         }
 3531              		.loc 1 1946 23 view .LVU977
 3532 0042 FFF7FEFF 		bl	bno055_write_page_id
 3533              	.LVL341:
1948:Core/Src/bno055.c ****         {
 3534              		.loc 1 1948 9 is_stmt 1 view .LVU978
1948:Core/Src/bno055.c ****         {
 3535              		.loc 1 1948 12 is_stmt 0 view .LVU979
 3536 0046 0028     		cmp	r0, #0
 3537 0048 E9D0     		beq	.L264
 3538 004a E4E7     		b	.L263
 3539              	.LVL342:
 3540              	.L265:
1937:Core/Src/bno055.c ****     }
 3541              		.loc 1 1937 16 view .LVU980
 3542 004c 6FF07E00 		mvn	r0, #126
 3543              	.LVL343:
1937:Core/Src/bno055.c ****     }
 3544              		.loc 1 1937 16 view .LVU981
 3545 0050 F4E7     		b	.L262
 3546              	.LVL344:
 3547              	.L266:
1966:Core/Src/bno055.c ****         }
 3548              		.loc 1 1966 22 view .LVU982
 3549 0052 4FF0FF30 		mov	r0, #-1
 3550 0056 F1E7     		b	.L262
ARM GAS  /tmp/ccWoU29M.s 			page 102


 3551              	.L270:
 3552              		.align	2
 3553              	.L269:
 3554 0058 00000000 		.word	.LANCHOR0
 3555              		.cfi_endproc
 3556              	.LFE28:
 3558              		.section	.text.bno055_read_quaternion_y,"ax",%progbits
 3559              		.align	1
 3560              		.global	bno055_read_quaternion_y
 3561              		.syntax unified
 3562              		.thumb
 3563              		.thumb_func
 3564              		.fpu fpv4-sp-d16
 3566              	bno055_read_quaternion_y:
 3567              	.LVL345:
 3568              	.LFB29:
1972:Core/Src/bno055.c **** 
1973:Core/Src/bno055.c **** /*!
1974:Core/Src/bno055.c ****  *  @brief This API reads quaternion data y values
1975:Core/Src/bno055.c ****  *  from register 0x24 and 0x25 it is a two byte data
1976:Core/Src/bno055.c ****  *
1977:Core/Src/bno055.c ****  *  @param quaternion_y_s16 : The raw y data
1978:Core/Src/bno055.c ****  *
1979:Core/Src/bno055.c ****  *  @return results of bus communication function
1980:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1981:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1982:Core/Src/bno055.c ****  *
1983:Core/Src/bno055.c ****  *
1984:Core/Src/bno055.c ****  */
1985:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_y(s16 *quaternion_y_s16)
1986:Core/Src/bno055.c **** {
 3569              		.loc 1 1986 1 is_stmt 1 view -0
 3570              		.cfi_startproc
 3571              		@ args = 0, pretend = 0, frame = 8
 3572              		@ frame_needed = 0, uses_anonymous_args = 0
 3573              		.loc 1 1986 1 is_stmt 0 view .LVU984
 3574 0000 30B5     		push	{r4, r5, lr}
 3575              	.LCFI109:
 3576              		.cfi_def_cfa_offset 12
 3577              		.cfi_offset 4, -12
 3578              		.cfi_offset 5, -8
 3579              		.cfi_offset 14, -4
 3580 0002 83B0     		sub	sp, sp, #12
 3581              	.LCFI110:
 3582              		.cfi_def_cfa_offset 24
1987:Core/Src/bno055.c ****     /* Variable used to return value of
1988:Core/Src/bno055.c ****      * communication routine*/
1989:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3583              		.loc 1 1989 5 is_stmt 1 view .LVU985
 3584              	.LVL346:
1990:Core/Src/bno055.c **** 
1991:Core/Src/bno055.c ****     /* Array holding the quaternion y value
1992:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] - y->LSB
1993:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] - y->MSB
1994:Core/Src/bno055.c ****      */
1995:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3585              		.loc 1 1995 5 view .LVU986
ARM GAS  /tmp/ccWoU29M.s 			page 103


 3586              		.loc 1 1995 8 is_stmt 0 view .LVU987
 3587 0004 0023     		movs	r3, #0
 3588 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1996:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3589              		.loc 1 1996 5 is_stmt 1 view .LVU988
 3590              	.LVL347:
1997:Core/Src/bno055.c **** 
1998:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1999:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3591              		.loc 1 1999 5 view .LVU989
 3592              		.loc 1 1999 18 is_stmt 0 view .LVU990
 3593 000a 134B     		ldr	r3, .L279
 3594 000c 1B68     		ldr	r3, [r3]
 3595              		.loc 1 1999 8 view .LVU991
 3596 000e EBB1     		cbz	r3, .L275
 3597 0010 0446     		mov	r4, r0
2000:Core/Src/bno055.c ****     {
2001:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2002:Core/Src/bno055.c ****     }
2003:Core/Src/bno055.c ****     else
2004:Core/Src/bno055.c ****     {
2005:Core/Src/bno055.c ****         /*condition check for page, chip id is
2006:Core/Src/bno055.c ****          * available in the page zero*/
2007:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3598              		.loc 1 2007 9 is_stmt 1 view .LVU992
 3599              		.loc 1 2007 21 is_stmt 0 view .LVU993
 3600 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3601              		.loc 1 2007 12 view .LVU994
 3602 0014 A3B9     		cbnz	r3, .L278
 3603              	.LVL348:
 3604              	.L273:
2008:Core/Src/bno055.c ****         {
2009:Core/Src/bno055.c ****             /* Write the page zero*/
2010:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2011:Core/Src/bno055.c ****         }
2012:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3605              		.loc 1 2012 53 discriminator 1 view .LVU995
 3606 0016 104B     		ldr	r3, .L279
 3607 0018 1B68     		ldr	r3, [r3]
 3608 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3609              		.loc 1 2012 41 discriminator 1 view .LVU996
 3610 001c CBB9     		cbnz	r3, .L276
 3611              	.L274:
2013:Core/Src/bno055.c ****         {
2014:Core/Src/bno055.c ****             /* Read the two byte value
2015:Core/Src/bno055.c ****              * of quaternion y data*/
2016:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3612              		.loc 1 2016 13 is_stmt 1 view .LVU997
 3613              		.loc 1 2016 32 is_stmt 0 view .LVU998
 3614 001e 0E4B     		ldr	r3, .L279
 3615 0020 1868     		ldr	r0, [r3]
 3616 0022 0569     		ldr	r5, [r0, #16]
 3617              		.loc 1 2016 24 view .LVU999
 3618 0024 0223     		movs	r3, #2
 3619 0026 01AA     		add	r2, sp, #4
 3620 0028 2421     		movs	r1, #36
 3621 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 104


 3622 002c A847     		blx	r5
 3623              	.LVL349:
2017:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_Y_LSB_VALUEY_REG,
2018:Core/Src/bno055.c ****                                                       data_u8,
2019:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2020:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3624              		.loc 1 2020 13 is_stmt 1 view .LVU1000
2021:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
2022:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3625              		.loc 1 2022 13 view .LVU1001
2023:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
2024:Core/Src/bno055.c ****             *quaternion_y_s16 =
 3626              		.loc 1 2024 13 view .LVU1002
2025:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3627              		.loc 1 2025 31 is_stmt 0 view .LVU1003
 3628 002e 9DF90520 		ldrsb	r2, [sp, #5]
2026:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB]));
 3629              		.loc 1 2026 31 view .LVU1004
 3630 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2025:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3631              		.loc 1 2025 17 view .LVU1005
 3632 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2024:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3633              		.loc 1 2024 31 view .LVU1006
 3634 003a 2380     		strh	r3, [r4]	@ movhi
 3635              	.LVL350:
 3636              	.L272:
2027:Core/Src/bno055.c ****         }
2028:Core/Src/bno055.c ****         else
2029:Core/Src/bno055.c ****         {
2030:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2031:Core/Src/bno055.c ****         }
2032:Core/Src/bno055.c ****     }
2033:Core/Src/bno055.c **** 
2034:Core/Src/bno055.c ****     return com_rslt;
2035:Core/Src/bno055.c **** }
 3637              		.loc 1 2035 1 view .LVU1007
 3638 003c 03B0     		add	sp, sp, #12
 3639              	.LCFI111:
 3640              		.cfi_remember_state
 3641              		.cfi_def_cfa_offset 12
 3642              		@ sp needed
 3643 003e 30BD     		pop	{r4, r5, pc}
 3644              	.LVL351:
 3645              	.L278:
 3646              	.LCFI112:
 3647              		.cfi_restore_state
2010:Core/Src/bno055.c ****         }
 3648              		.loc 1 2010 13 is_stmt 1 view .LVU1008
2010:Core/Src/bno055.c ****         }
 3649              		.loc 1 2010 23 is_stmt 0 view .LVU1009
 3650 0040 0020     		movs	r0, #0
 3651              	.LVL352:
2010:Core/Src/bno055.c ****         }
 3652              		.loc 1 2010 23 view .LVU1010
 3653 0042 FFF7FEFF 		bl	bno055_write_page_id
 3654              	.LVL353:
ARM GAS  /tmp/ccWoU29M.s 			page 105


2012:Core/Src/bno055.c ****         {
 3655              		.loc 1 2012 9 is_stmt 1 view .LVU1011
2012:Core/Src/bno055.c ****         {
 3656              		.loc 1 2012 12 is_stmt 0 view .LVU1012
 3657 0046 0028     		cmp	r0, #0
 3658 0048 E9D0     		beq	.L274
 3659 004a E4E7     		b	.L273
 3660              	.LVL354:
 3661              	.L275:
2001:Core/Src/bno055.c ****     }
 3662              		.loc 1 2001 16 view .LVU1013
 3663 004c 6FF07E00 		mvn	r0, #126
 3664              	.LVL355:
2001:Core/Src/bno055.c ****     }
 3665              		.loc 1 2001 16 view .LVU1014
 3666 0050 F4E7     		b	.L272
 3667              	.LVL356:
 3668              	.L276:
2030:Core/Src/bno055.c ****         }
 3669              		.loc 1 2030 22 view .LVU1015
 3670 0052 4FF0FF30 		mov	r0, #-1
 3671 0056 F1E7     		b	.L272
 3672              	.L280:
 3673              		.align	2
 3674              	.L279:
 3675 0058 00000000 		.word	.LANCHOR0
 3676              		.cfi_endproc
 3677              	.LFE29:
 3679              		.section	.text.bno055_read_quaternion_z,"ax",%progbits
 3680              		.align	1
 3681              		.global	bno055_read_quaternion_z
 3682              		.syntax unified
 3683              		.thumb
 3684              		.thumb_func
 3685              		.fpu fpv4-sp-d16
 3687              	bno055_read_quaternion_z:
 3688              	.LVL357:
 3689              	.LFB30:
2036:Core/Src/bno055.c **** 
2037:Core/Src/bno055.c **** /*!
2038:Core/Src/bno055.c ****  *  @brief This API reads quaternion data z values
2039:Core/Src/bno055.c ****  *  from register 0x26 and 0x27 it is a two byte data
2040:Core/Src/bno055.c ****  *
2041:Core/Src/bno055.c ****  *  @param quaternion_z_s16 : The raw z data
2042:Core/Src/bno055.c ****  *
2043:Core/Src/bno055.c ****  *  @return results of bus communication function
2044:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2045:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2046:Core/Src/bno055.c ****  *
2047:Core/Src/bno055.c ****  *
2048:Core/Src/bno055.c ****  */
2049:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_z(s16 *quaternion_z_s16)
2050:Core/Src/bno055.c **** {
 3690              		.loc 1 2050 1 is_stmt 1 view -0
 3691              		.cfi_startproc
 3692              		@ args = 0, pretend = 0, frame = 8
 3693              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccWoU29M.s 			page 106


 3694              		.loc 1 2050 1 is_stmt 0 view .LVU1017
 3695 0000 30B5     		push	{r4, r5, lr}
 3696              	.LCFI113:
 3697              		.cfi_def_cfa_offset 12
 3698              		.cfi_offset 4, -12
 3699              		.cfi_offset 5, -8
 3700              		.cfi_offset 14, -4
 3701 0002 83B0     		sub	sp, sp, #12
 3702              	.LCFI114:
 3703              		.cfi_def_cfa_offset 24
2051:Core/Src/bno055.c ****     /* Variable used to return value of
2052:Core/Src/bno055.c ****      * communication routine*/
2053:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3704              		.loc 1 2053 5 is_stmt 1 view .LVU1018
 3705              	.LVL358:
2054:Core/Src/bno055.c **** 
2055:Core/Src/bno055.c ****     /* Array holding the quaternion z value
2056:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] - z->LSB
2057:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] - z->MSB
2058:Core/Src/bno055.c ****      */
2059:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3706              		.loc 1 2059 5 view .LVU1019
 3707              		.loc 1 2059 8 is_stmt 0 view .LVU1020
 3708 0004 0023     		movs	r3, #0
 3709 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2060:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3710              		.loc 1 2060 5 is_stmt 1 view .LVU1021
 3711              	.LVL359:
2061:Core/Src/bno055.c **** 
2062:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2063:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3712              		.loc 1 2063 5 view .LVU1022
 3713              		.loc 1 2063 18 is_stmt 0 view .LVU1023
 3714 000a 134B     		ldr	r3, .L289
 3715 000c 1B68     		ldr	r3, [r3]
 3716              		.loc 1 2063 8 view .LVU1024
 3717 000e EBB1     		cbz	r3, .L285
 3718 0010 0446     		mov	r4, r0
2064:Core/Src/bno055.c ****     {
2065:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2066:Core/Src/bno055.c ****     }
2067:Core/Src/bno055.c ****     else
2068:Core/Src/bno055.c ****     {
2069:Core/Src/bno055.c ****         /*condition check for page, chip id is
2070:Core/Src/bno055.c ****          * available in the page zero*/
2071:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3719              		.loc 1 2071 9 is_stmt 1 view .LVU1025
 3720              		.loc 1 2071 21 is_stmt 0 view .LVU1026
 3721 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3722              		.loc 1 2071 12 view .LVU1027
 3723 0014 A3B9     		cbnz	r3, .L288
 3724              	.LVL360:
 3725              	.L283:
2072:Core/Src/bno055.c ****         {
2073:Core/Src/bno055.c ****             /* Write the page zero*/
2074:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2075:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 107


2076:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3726              		.loc 1 2076 53 discriminator 1 view .LVU1028
 3727 0016 104B     		ldr	r3, .L289
 3728 0018 1B68     		ldr	r3, [r3]
 3729 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3730              		.loc 1 2076 41 discriminator 1 view .LVU1029
 3731 001c CBB9     		cbnz	r3, .L286
 3732              	.L284:
2077:Core/Src/bno055.c ****         {
2078:Core/Src/bno055.c ****             /* Read the two byte value
2079:Core/Src/bno055.c ****              * of quaternion z data*/
2080:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3733              		.loc 1 2080 13 is_stmt 1 view .LVU1030
 3734              		.loc 1 2080 32 is_stmt 0 view .LVU1031
 3735 001e 0E4B     		ldr	r3, .L289
 3736 0020 1868     		ldr	r0, [r3]
 3737 0022 0569     		ldr	r5, [r0, #16]
 3738              		.loc 1 2080 24 view .LVU1032
 3739 0024 0223     		movs	r3, #2
 3740 0026 01AA     		add	r2, sp, #4
 3741 0028 2621     		movs	r1, #38
 3742 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3743 002c A847     		blx	r5
 3744              	.LVL361:
2081:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_Z_LSB_VALUEZ_REG,
2082:Core/Src/bno055.c ****                                                       data_u8,
2083:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2084:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3745              		.loc 1 2084 13 is_stmt 1 view .LVU1033
2085:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
2086:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3746              		.loc 1 2086 13 view .LVU1034
2087:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
2088:Core/Src/bno055.c ****             *quaternion_z_s16 =
 3747              		.loc 1 2088 13 view .LVU1035
2089:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3748              		.loc 1 2089 31 is_stmt 0 view .LVU1036
 3749 002e 9DF90520 		ldrsb	r2, [sp, #5]
2090:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB]));
 3750              		.loc 1 2090 31 view .LVU1037
 3751 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2089:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3752              		.loc 1 2089 17 view .LVU1038
 3753 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2088:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3754              		.loc 1 2088 31 view .LVU1039
 3755 003a 2380     		strh	r3, [r4]	@ movhi
 3756              	.LVL362:
 3757              	.L282:
2091:Core/Src/bno055.c ****         }
2092:Core/Src/bno055.c ****         else
2093:Core/Src/bno055.c ****         {
2094:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2095:Core/Src/bno055.c ****         }
2096:Core/Src/bno055.c ****     }
2097:Core/Src/bno055.c **** 
2098:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/ccWoU29M.s 			page 108


2099:Core/Src/bno055.c **** }
 3758              		.loc 1 2099 1 view .LVU1040
 3759 003c 03B0     		add	sp, sp, #12
 3760              	.LCFI115:
 3761              		.cfi_remember_state
 3762              		.cfi_def_cfa_offset 12
 3763              		@ sp needed
 3764 003e 30BD     		pop	{r4, r5, pc}
 3765              	.LVL363:
 3766              	.L288:
 3767              	.LCFI116:
 3768              		.cfi_restore_state
2074:Core/Src/bno055.c ****         }
 3769              		.loc 1 2074 13 is_stmt 1 view .LVU1041
2074:Core/Src/bno055.c ****         }
 3770              		.loc 1 2074 23 is_stmt 0 view .LVU1042
 3771 0040 0020     		movs	r0, #0
 3772              	.LVL364:
2074:Core/Src/bno055.c ****         }
 3773              		.loc 1 2074 23 view .LVU1043
 3774 0042 FFF7FEFF 		bl	bno055_write_page_id
 3775              	.LVL365:
2076:Core/Src/bno055.c ****         {
 3776              		.loc 1 2076 9 is_stmt 1 view .LVU1044
2076:Core/Src/bno055.c ****         {
 3777              		.loc 1 2076 12 is_stmt 0 view .LVU1045
 3778 0046 0028     		cmp	r0, #0
 3779 0048 E9D0     		beq	.L284
 3780 004a E4E7     		b	.L283
 3781              	.LVL366:
 3782              	.L285:
2065:Core/Src/bno055.c ****     }
 3783              		.loc 1 2065 16 view .LVU1046
 3784 004c 6FF07E00 		mvn	r0, #126
 3785              	.LVL367:
2065:Core/Src/bno055.c ****     }
 3786              		.loc 1 2065 16 view .LVU1047
 3787 0050 F4E7     		b	.L282
 3788              	.LVL368:
 3789              	.L286:
2094:Core/Src/bno055.c ****         }
 3790              		.loc 1 2094 22 view .LVU1048
 3791 0052 4FF0FF30 		mov	r0, #-1
 3792 0056 F1E7     		b	.L282
 3793              	.L290:
 3794              		.align	2
 3795              	.L289:
 3796 0058 00000000 		.word	.LANCHOR0
 3797              		.cfi_endproc
 3798              	.LFE30:
 3800              		.section	.text.bno055_read_quaternion_wxyz,"ax",%progbits
 3801              		.align	1
 3802              		.global	bno055_read_quaternion_wxyz
 3803              		.syntax unified
 3804              		.thumb
 3805              		.thumb_func
 3806              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccWoU29M.s 			page 109


 3808              	bno055_read_quaternion_wxyz:
 3809              	.LVL369:
 3810              	.LFB31:
2100:Core/Src/bno055.c **** 
2101:Core/Src/bno055.c **** /*!
2102:Core/Src/bno055.c ****  *  @brief This API reads Quaternion data wxyz values
2103:Core/Src/bno055.c ****  *  from register 0x20 to 0x27 it is a six byte data
2104:Core/Src/bno055.c ****  *
2105:Core/Src/bno055.c ****  *
2106:Core/Src/bno055.c ****  *  @param quaternion : The value of quaternion wxyz data's
2107:Core/Src/bno055.c ****  *
2108:Core/Src/bno055.c ****  *  Parameter |    result
2109:Core/Src/bno055.c ****  *  --------- | -----------------
2110:Core/Src/bno055.c ****  *   w        | The quaternion w data
2111:Core/Src/bno055.c ****  *   x        | The quaternion x data
2112:Core/Src/bno055.c ****  *   y        | The quaternion y data
2113:Core/Src/bno055.c ****  *   z        | The quaternion z data
2114:Core/Src/bno055.c ****  *
2115:Core/Src/bno055.c ****  *
2116:Core/Src/bno055.c ****  *
2117:Core/Src/bno055.c ****  *  @return results of bus communication function
2118:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2119:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2120:Core/Src/bno055.c ****  *
2121:Core/Src/bno055.c ****  */
2122:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_wxyz(struct bno055_quaternion_t *quaternion)
2123:Core/Src/bno055.c **** {
 3811              		.loc 1 2123 1 is_stmt 1 view -0
 3812              		.cfi_startproc
 3813              		@ args = 0, pretend = 0, frame = 8
 3814              		@ frame_needed = 0, uses_anonymous_args = 0
 3815              		.loc 1 2123 1 is_stmt 0 view .LVU1050
 3816 0000 30B5     		push	{r4, r5, lr}
 3817              	.LCFI117:
 3818              		.cfi_def_cfa_offset 12
 3819              		.cfi_offset 4, -12
 3820              		.cfi_offset 5, -8
 3821              		.cfi_offset 14, -4
 3822 0002 83B0     		sub	sp, sp, #12
 3823              	.LCFI118:
 3824              		.cfi_def_cfa_offset 24
 3825 0004 0446     		mov	r4, r0
2124:Core/Src/bno055.c ****     /* Variable used to return value of
2125:Core/Src/bno055.c ****      * communication routine*/
2126:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3826              		.loc 1 2126 5 is_stmt 1 view .LVU1051
 3827              	.LVL370:
2127:Core/Src/bno055.c **** 
2128:Core/Src/bno055.c ****     /* Array holding the quaternion wxyz value
2129:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_LSB] - w->LSB
2130:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB] - w->MSB
2131:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_LSB] - x->LSB
2132:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB] - x->MSB
2133:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_LSB] - y->MSB
2134:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB] - y->MSB
2135:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_LSB] - z->MSB
2136:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB] - z->MSB
ARM GAS  /tmp/ccWoU29M.s 			page 110


2137:Core/Src/bno055.c ****      */
2138:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_WXYZ_DATA_SIZE] = {
 3828              		.loc 1 2138 5 view .LVU1052
 3829              		.loc 1 2138 8 is_stmt 0 view .LVU1053
 3830 0006 214B     		ldr	r3, .L299
 3831 0008 93E80300 		ldm	r3, {r0, r1}
 3832              	.LVL371:
 3833              		.loc 1 2138 8 view .LVU1054
 3834 000c 02AB     		add	r3, sp, #8
 3835 000e 03E90300 		stmdb	r3, {r0, r1}
2139:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
2140:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
2141:Core/Src/bno055.c ****     };
2142:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3836              		.loc 1 2142 5 is_stmt 1 view .LVU1055
 3837              	.LVL372:
2143:Core/Src/bno055.c **** 
2144:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2145:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3838              		.loc 1 2145 5 view .LVU1056
 3839              		.loc 1 2145 18 is_stmt 0 view .LVU1057
 3840 0012 1F4B     		ldr	r3, .L299+4
 3841 0014 1B68     		ldr	r3, [r3]
 3842              		.loc 1 2145 8 view .LVU1058
 3843 0016 002B     		cmp	r3, #0
 3844 0018 31D0     		beq	.L295
2146:Core/Src/bno055.c ****     {
2147:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2148:Core/Src/bno055.c ****     }
2149:Core/Src/bno055.c ****     else
2150:Core/Src/bno055.c ****     {
2151:Core/Src/bno055.c ****         /*condition check for page, chip id is
2152:Core/Src/bno055.c ****          * available in the page zero*/
2153:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3845              		.loc 1 2153 9 is_stmt 1 view .LVU1059
 3846              		.loc 1 2153 21 is_stmt 0 view .LVU1060
 3847 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3848              		.loc 1 2153 12 view .LVU1061
 3849 001c 4BBB     		cbnz	r3, .L298
 3850              	.LVL373:
 3851              	.L293:
2154:Core/Src/bno055.c ****         {
2155:Core/Src/bno055.c ****             /* Write the page zero*/
2156:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2157:Core/Src/bno055.c ****         }
2158:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3852              		.loc 1 2158 53 discriminator 1 view .LVU1062
 3853 001e 1C4B     		ldr	r3, .L299+4
 3854 0020 1B68     		ldr	r3, [r3]
 3855 0022 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3856              		.loc 1 2158 41 discriminator 1 view .LVU1063
 3857 0024 73BB     		cbnz	r3, .L296
 3858              	.L294:
2159:Core/Src/bno055.c ****         {
2160:Core/Src/bno055.c ****             /* Read the eight byte value
2161:Core/Src/bno055.c ****              * of quaternion wxyz data*/
2162:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccWoU29M.s 			page 111


 3859              		.loc 1 2162 13 is_stmt 1 view .LVU1064
 3860              		.loc 1 2162 32 is_stmt 0 view .LVU1065
 3861 0026 1A4B     		ldr	r3, .L299+4
 3862 0028 1868     		ldr	r0, [r3]
 3863 002a 0569     		ldr	r5, [r0, #16]
 3864              		.loc 1 2162 24 view .LVU1066
 3865 002c 0823     		movs	r3, #8
 3866 002e 6A46     		mov	r2, sp
 3867 0030 2021     		movs	r1, #32
 3868 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3869 0034 A847     		blx	r5
 3870              	.LVL374:
2163:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_W_LSB_VALUEW_REG,
2164:Core/Src/bno055.c ****                                                       data_u8,
2165:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_WXYZ_DATA_SIZE);
2166:Core/Src/bno055.c **** 
2167:Core/Src/bno055.c ****             /* Data W*/
2168:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_LSB] =
 3871              		.loc 1 2168 13 is_stmt 1 view .LVU1067
2169:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_LSB],
2170:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_W_LSB_VALUEW);
2171:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB] =
 3872              		.loc 1 2171 13 view .LVU1068
2172:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB],
2173:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_W_MSB_VALUEW);
2174:Core/Src/bno055.c ****             quaternion->w =
 3873              		.loc 1 2174 13 view .LVU1069
2175:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB])) << BNO055_SHI
 3874              		.loc 1 2175 31 is_stmt 0 view .LVU1070
 3875 0036 9DF90120 		ldrsb	r2, [sp, #1]
2176:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_LSB]));
 3876              		.loc 1 2176 31 view .LVU1071
 3877 003a 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
2175:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB])) << BNO055_SHI
 3878              		.loc 1 2175 17 view .LVU1072
 3879 003e 43EA0223 		orr	r3, r3, r2, lsl #8
2174:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB])) << BNO055_SHI
 3880              		.loc 1 2174 27 view .LVU1073
 3881 0042 2380     		strh	r3, [r4]	@ movhi
2177:Core/Src/bno055.c **** 
2178:Core/Src/bno055.c ****             /* Data X*/
2179:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_LSB] =
 3882              		.loc 1 2179 13 is_stmt 1 view .LVU1074
2180:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_LSB],
2181:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_X_LSB_VALUEX);
2182:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB] =
 3883              		.loc 1 2182 13 view .LVU1075
2183:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB],
2184:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_X_MSB_VALUEX);
2185:Core/Src/bno055.c ****             quaternion->x =
 3884              		.loc 1 2185 13 view .LVU1076
2186:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB])) << BNO055_SHI
 3885              		.loc 1 2186 31 is_stmt 0 view .LVU1077
 3886 0044 9DF90320 		ldrsb	r2, [sp, #3]
2187:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_LSB]));
 3887              		.loc 1 2187 31 view .LVU1078
 3888 0048 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 112


2186:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB])) << BNO055_SHI
 3889              		.loc 1 2186 17 view .LVU1079
 3890 004c 43EA0223 		orr	r3, r3, r2, lsl #8
2185:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB])) << BNO055_SHI
 3891              		.loc 1 2185 27 view .LVU1080
 3892 0050 6380     		strh	r3, [r4, #2]	@ movhi
2188:Core/Src/bno055.c **** 
2189:Core/Src/bno055.c ****             /* Data Y*/
2190:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_LSB] =
 3893              		.loc 1 2190 13 is_stmt 1 view .LVU1081
2191:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_LSB],
2192:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_Y_LSB_VALUEY);
2193:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB] =
 3894              		.loc 1 2193 13 view .LVU1082
2194:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB],
2195:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_Y_MSB_VALUEY);
2196:Core/Src/bno055.c ****             quaternion->y =
 3895              		.loc 1 2196 13 view .LVU1083
2197:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB])) << BNO055_SHI
 3896              		.loc 1 2197 31 is_stmt 0 view .LVU1084
 3897 0052 9DF90520 		ldrsb	r2, [sp, #5]
2198:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_LSB]));
 3898              		.loc 1 2198 31 view .LVU1085
 3899 0056 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2197:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB])) << BNO055_SHI
 3900              		.loc 1 2197 17 view .LVU1086
 3901 005a 43EA0223 		orr	r3, r3, r2, lsl #8
2196:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB])) << BNO055_SHI
 3902              		.loc 1 2196 27 view .LVU1087
 3903 005e A380     		strh	r3, [r4, #4]	@ movhi
2199:Core/Src/bno055.c **** 
2200:Core/Src/bno055.c ****             /* Data Z*/
2201:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_LSB] =
 3904              		.loc 1 2201 13 is_stmt 1 view .LVU1088
2202:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_LSB],
2203:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_Z_LSB_VALUEZ);
2204:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB] =
 3905              		.loc 1 2204 13 view .LVU1089
2205:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB],
2206:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_Z_MSB_VALUEZ);
2207:Core/Src/bno055.c ****             quaternion->z =
 3906              		.loc 1 2207 13 view .LVU1090
2208:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB])) << BNO055_SHI
 3907              		.loc 1 2208 31 is_stmt 0 view .LVU1091
 3908 0060 9DF90720 		ldrsb	r2, [sp, #7]
2209:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_LSB]));
 3909              		.loc 1 2209 31 view .LVU1092
 3910 0064 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
2208:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB])) << BNO055_SHI
 3911              		.loc 1 2208 17 view .LVU1093
 3912 0068 43EA0223 		orr	r3, r3, r2, lsl #8
2207:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB])) << BNO055_SHI
 3913              		.loc 1 2207 27 view .LVU1094
 3914 006c E380     		strh	r3, [r4, #6]	@ movhi
 3915              	.LVL375:
 3916              	.L292:
2210:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 113


2211:Core/Src/bno055.c ****         else
2212:Core/Src/bno055.c ****         {
2213:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2214:Core/Src/bno055.c ****         }
2215:Core/Src/bno055.c ****     }
2216:Core/Src/bno055.c **** 
2217:Core/Src/bno055.c ****     return com_rslt;
2218:Core/Src/bno055.c **** }
 3917              		.loc 1 2218 1 view .LVU1095
 3918 006e 03B0     		add	sp, sp, #12
 3919              	.LCFI119:
 3920              		.cfi_remember_state
 3921              		.cfi_def_cfa_offset 12
 3922              		@ sp needed
 3923 0070 30BD     		pop	{r4, r5, pc}
 3924              	.LVL376:
 3925              	.L298:
 3926              	.LCFI120:
 3927              		.cfi_restore_state
2156:Core/Src/bno055.c ****         }
 3928              		.loc 1 2156 13 is_stmt 1 view .LVU1096
2156:Core/Src/bno055.c ****         }
 3929              		.loc 1 2156 23 is_stmt 0 view .LVU1097
 3930 0072 0020     		movs	r0, #0
 3931 0074 FFF7FEFF 		bl	bno055_write_page_id
 3932              	.LVL377:
2158:Core/Src/bno055.c ****         {
 3933              		.loc 1 2158 9 is_stmt 1 view .LVU1098
2158:Core/Src/bno055.c ****         {
 3934              		.loc 1 2158 12 is_stmt 0 view .LVU1099
 3935 0078 0028     		cmp	r0, #0
 3936 007a D4D0     		beq	.L294
 3937 007c CFE7     		b	.L293
 3938              	.LVL378:
 3939              	.L295:
2147:Core/Src/bno055.c ****     }
 3940              		.loc 1 2147 16 view .LVU1100
 3941 007e 6FF07E00 		mvn	r0, #126
 3942 0082 F4E7     		b	.L292
 3943              	.LVL379:
 3944              	.L296:
2213:Core/Src/bno055.c ****         }
 3945              		.loc 1 2213 22 view .LVU1101
 3946 0084 4FF0FF30 		mov	r0, #-1
 3947 0088 F1E7     		b	.L292
 3948              	.L300:
 3949 008a 00BF     		.align	2
 3950              	.L299:
 3951 008c 08000000 		.word	.LANCHOR1+8
 3952 0090 00000000 		.word	.LANCHOR0
 3953              		.cfi_endproc
 3954              	.LFE31:
 3956              		.section	.text.bno055_read_linear_accel_x,"ax",%progbits
 3957              		.align	1
 3958              		.global	bno055_read_linear_accel_x
 3959              		.syntax unified
 3960              		.thumb
ARM GAS  /tmp/ccWoU29M.s 			page 114


 3961              		.thumb_func
 3962              		.fpu fpv4-sp-d16
 3964              	bno055_read_linear_accel_x:
 3965              	.LVL380:
 3966              	.LFB32:
2219:Core/Src/bno055.c **** 
2220:Core/Src/bno055.c **** /*!
2221:Core/Src/bno055.c ****  *  @brief This API reads Linear accel data x values
2222:Core/Src/bno055.c ****  *  from register 0x29 and 0x2A it is a two byte data
2223:Core/Src/bno055.c ****  *
2224:Core/Src/bno055.c ****  *  @param linear_accel_x_s16 : The raw x data
2225:Core/Src/bno055.c ****  *
2226:Core/Src/bno055.c ****  *  @return results of bus communication function
2227:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2228:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2229:Core/Src/bno055.c ****  *
2230:Core/Src/bno055.c ****  *
2231:Core/Src/bno055.c ****  */
2232:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_linear_accel_x(s16 *linear_accel_x_s16)
2233:Core/Src/bno055.c **** {
 3967              		.loc 1 2233 1 is_stmt 1 view -0
 3968              		.cfi_startproc
 3969              		@ args = 0, pretend = 0, frame = 8
 3970              		@ frame_needed = 0, uses_anonymous_args = 0
 3971              		.loc 1 2233 1 is_stmt 0 view .LVU1103
 3972 0000 30B5     		push	{r4, r5, lr}
 3973              	.LCFI121:
 3974              		.cfi_def_cfa_offset 12
 3975              		.cfi_offset 4, -12
 3976              		.cfi_offset 5, -8
 3977              		.cfi_offset 14, -4
 3978 0002 83B0     		sub	sp, sp, #12
 3979              	.LCFI122:
 3980              		.cfi_def_cfa_offset 24
2234:Core/Src/bno055.c ****     /* Variable used to return value of
2235:Core/Src/bno055.c ****      * communication routine*/
2236:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3981              		.loc 1 2236 5 is_stmt 1 view .LVU1104
 3982              	.LVL381:
2237:Core/Src/bno055.c **** 
2238:Core/Src/bno055.c ****     /* Array holding the linear accel x value
2239:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - x->LSB
2240:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - x->MSB
2241:Core/Src/bno055.c ****      */
2242:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3983              		.loc 1 2242 5 view .LVU1105
 3984              		.loc 1 2242 8 is_stmt 0 view .LVU1106
 3985 0004 0023     		movs	r3, #0
 3986 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2243:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3987              		.loc 1 2243 5 is_stmt 1 view .LVU1107
 3988              	.LVL382:
2244:Core/Src/bno055.c **** 
2245:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2246:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3989              		.loc 1 2246 5 view .LVU1108
 3990              		.loc 1 2246 18 is_stmt 0 view .LVU1109
ARM GAS  /tmp/ccWoU29M.s 			page 115


 3991 000a 134B     		ldr	r3, .L309
 3992 000c 1B68     		ldr	r3, [r3]
 3993              		.loc 1 2246 8 view .LVU1110
 3994 000e EBB1     		cbz	r3, .L305
 3995 0010 0446     		mov	r4, r0
2247:Core/Src/bno055.c ****     {
2248:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2249:Core/Src/bno055.c ****     }
2250:Core/Src/bno055.c ****     else
2251:Core/Src/bno055.c ****     {
2252:Core/Src/bno055.c ****         /*condition check for page, chip id is
2253:Core/Src/bno055.c ****          * available in the page zero*/
2254:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3996              		.loc 1 2254 9 is_stmt 1 view .LVU1111
 3997              		.loc 1 2254 21 is_stmt 0 view .LVU1112
 3998 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3999              		.loc 1 2254 12 view .LVU1113
 4000 0014 A3B9     		cbnz	r3, .L308
 4001              	.LVL383:
 4002              	.L303:
2255:Core/Src/bno055.c ****         {
2256:Core/Src/bno055.c ****             /* Write the page zero*/
2257:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2258:Core/Src/bno055.c ****         }
2259:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4003              		.loc 1 2259 53 discriminator 1 view .LVU1114
 4004 0016 104B     		ldr	r3, .L309
 4005 0018 1B68     		ldr	r3, [r3]
 4006 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4007              		.loc 1 2259 41 discriminator 1 view .LVU1115
 4008 001c CBB9     		cbnz	r3, .L306
 4009              	.L304:
2260:Core/Src/bno055.c ****         {
2261:Core/Src/bno055.c ****             /* Read the two byte value
2262:Core/Src/bno055.c ****             * of linear accel x data*/
2263:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4010              		.loc 1 2263 13 is_stmt 1 view .LVU1116
 4011              		.loc 1 2263 32 is_stmt 0 view .LVU1117
 4012 001e 0E4B     		ldr	r3, .L309
 4013 0020 1868     		ldr	r0, [r3]
 4014 0022 0569     		ldr	r5, [r0, #16]
 4015              		.loc 1 2263 24 view .LVU1118
 4016 0024 0223     		movs	r3, #2
 4017 0026 01AA     		add	r2, sp, #4
 4018 0028 2821     		movs	r1, #40
 4019 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4020 002c A847     		blx	r5
 4021              	.LVL384:
2264:Core/Src/bno055.c ****                                                       BNO055_LINEAR_ACCEL_DATA_X_LSB_VALUEX_REG,
2265:Core/Src/bno055.c ****                                                       data_u8,
2266:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2267:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4022              		.loc 1 2267 13 is_stmt 1 view .LVU1119
2268:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_X_LSB_VA
2269:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 4023              		.loc 1 2269 13 view .LVU1120
2270:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_X_MSB_VA
ARM GAS  /tmp/ccWoU29M.s 			page 116


2271:Core/Src/bno055.c ****             *linear_accel_x_s16 =
 4024              		.loc 1 2271 13 view .LVU1121
2272:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4025              		.loc 1 2272 31 is_stmt 0 view .LVU1122
 4026 002e 9DF90520 		ldrsb	r2, [sp, #5]
2273:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4027              		.loc 1 2273 31 view .LVU1123
 4028 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2272:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4029              		.loc 1 2272 17 view .LVU1124
 4030 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2271:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4031              		.loc 1 2271 33 view .LVU1125
 4032 003a 2380     		strh	r3, [r4]	@ movhi
 4033              	.LVL385:
 4034              	.L302:
2274:Core/Src/bno055.c ****         }
2275:Core/Src/bno055.c ****         else
2276:Core/Src/bno055.c ****         {
2277:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2278:Core/Src/bno055.c ****         }
2279:Core/Src/bno055.c ****     }
2280:Core/Src/bno055.c **** 
2281:Core/Src/bno055.c ****     return com_rslt;
2282:Core/Src/bno055.c **** }
 4035              		.loc 1 2282 1 view .LVU1126
 4036 003c 03B0     		add	sp, sp, #12
 4037              	.LCFI123:
 4038              		.cfi_remember_state
 4039              		.cfi_def_cfa_offset 12
 4040              		@ sp needed
 4041 003e 30BD     		pop	{r4, r5, pc}
 4042              	.LVL386:
 4043              	.L308:
 4044              	.LCFI124:
 4045              		.cfi_restore_state
2257:Core/Src/bno055.c ****         }
 4046              		.loc 1 2257 13 is_stmt 1 view .LVU1127
2257:Core/Src/bno055.c ****         }
 4047              		.loc 1 2257 23 is_stmt 0 view .LVU1128
 4048 0040 0020     		movs	r0, #0
 4049              	.LVL387:
2257:Core/Src/bno055.c ****         }
 4050              		.loc 1 2257 23 view .LVU1129
 4051 0042 FFF7FEFF 		bl	bno055_write_page_id
 4052              	.LVL388:
2259:Core/Src/bno055.c ****         {
 4053              		.loc 1 2259 9 is_stmt 1 view .LVU1130
2259:Core/Src/bno055.c ****         {
 4054              		.loc 1 2259 12 is_stmt 0 view .LVU1131
 4055 0046 0028     		cmp	r0, #0
 4056 0048 E9D0     		beq	.L304
 4057 004a E4E7     		b	.L303
 4058              	.LVL389:
 4059              	.L305:
2248:Core/Src/bno055.c ****     }
 4060              		.loc 1 2248 16 view .LVU1132
ARM GAS  /tmp/ccWoU29M.s 			page 117


 4061 004c 6FF07E00 		mvn	r0, #126
 4062              	.LVL390:
2248:Core/Src/bno055.c ****     }
 4063              		.loc 1 2248 16 view .LVU1133
 4064 0050 F4E7     		b	.L302
 4065              	.LVL391:
 4066              	.L306:
2277:Core/Src/bno055.c ****         }
 4067              		.loc 1 2277 22 view .LVU1134
 4068 0052 4FF0FF30 		mov	r0, #-1
 4069 0056 F1E7     		b	.L302
 4070              	.L310:
 4071              		.align	2
 4072              	.L309:
 4073 0058 00000000 		.word	.LANCHOR0
 4074              		.cfi_endproc
 4075              	.LFE32:
 4077              		.section	.text.bno055_read_linear_accel_y,"ax",%progbits
 4078              		.align	1
 4079              		.global	bno055_read_linear_accel_y
 4080              		.syntax unified
 4081              		.thumb
 4082              		.thumb_func
 4083              		.fpu fpv4-sp-d16
 4085              	bno055_read_linear_accel_y:
 4086              	.LVL392:
 4087              	.LFB33:
2283:Core/Src/bno055.c **** 
2284:Core/Src/bno055.c **** /*!
2285:Core/Src/bno055.c ****  *  @brief This API reads Linear accel data x values
2286:Core/Src/bno055.c ****  *  from register 0x2B and 0x2C it is a two byte data
2287:Core/Src/bno055.c ****  *
2288:Core/Src/bno055.c ****  *  @param linear_accel_y_s16 : The raw y data
2289:Core/Src/bno055.c ****  *
2290:Core/Src/bno055.c ****  *  @return results of bus communication function
2291:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2292:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2293:Core/Src/bno055.c ****  *
2294:Core/Src/bno055.c ****  *
2295:Core/Src/bno055.c ****  */
2296:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_linear_accel_y(s16 *linear_accel_y_s16)
2297:Core/Src/bno055.c **** {
 4088              		.loc 1 2297 1 is_stmt 1 view -0
 4089              		.cfi_startproc
 4090              		@ args = 0, pretend = 0, frame = 8
 4091              		@ frame_needed = 0, uses_anonymous_args = 0
 4092              		.loc 1 2297 1 is_stmt 0 view .LVU1136
 4093 0000 30B5     		push	{r4, r5, lr}
 4094              	.LCFI125:
 4095              		.cfi_def_cfa_offset 12
 4096              		.cfi_offset 4, -12
 4097              		.cfi_offset 5, -8
 4098              		.cfi_offset 14, -4
 4099 0002 83B0     		sub	sp, sp, #12
 4100              	.LCFI126:
 4101              		.cfi_def_cfa_offset 24
2298:Core/Src/bno055.c ****     /* Variable used to return value of
ARM GAS  /tmp/ccWoU29M.s 			page 118


2299:Core/Src/bno055.c ****      * communication routine*/
2300:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4102              		.loc 1 2300 5 is_stmt 1 view .LVU1137
 4103              	.LVL393:
2301:Core/Src/bno055.c **** 
2302:Core/Src/bno055.c ****     /* Array holding the linear accel y value
2303:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - y->LSB
2304:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - y->MSB
2305:Core/Src/bno055.c ****      */
2306:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 4104              		.loc 1 2306 5 view .LVU1138
 4105              		.loc 1 2306 8 is_stmt 0 view .LVU1139
 4106 0004 0023     		movs	r3, #0
 4107 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2307:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4108              		.loc 1 2307 5 is_stmt 1 view .LVU1140
 4109              	.LVL394:
2308:Core/Src/bno055.c **** 
2309:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2310:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4110              		.loc 1 2310 5 view .LVU1141
 4111              		.loc 1 2310 18 is_stmt 0 view .LVU1142
 4112 000a 134B     		ldr	r3, .L319
 4113 000c 1B68     		ldr	r3, [r3]
 4114              		.loc 1 2310 8 view .LVU1143
 4115 000e EBB1     		cbz	r3, .L315
 4116 0010 0446     		mov	r4, r0
2311:Core/Src/bno055.c ****     {
2312:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2313:Core/Src/bno055.c ****     }
2314:Core/Src/bno055.c ****     else
2315:Core/Src/bno055.c ****     {
2316:Core/Src/bno055.c ****         /*condition check for page, chip id is
2317:Core/Src/bno055.c ****          * available in the page zero*/
2318:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4117              		.loc 1 2318 9 is_stmt 1 view .LVU1144
 4118              		.loc 1 2318 21 is_stmt 0 view .LVU1145
 4119 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4120              		.loc 1 2318 12 view .LVU1146
 4121 0014 A3B9     		cbnz	r3, .L318
 4122              	.LVL395:
 4123              	.L313:
2319:Core/Src/bno055.c ****         {
2320:Core/Src/bno055.c ****             /* Write the page zero*/
2321:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2322:Core/Src/bno055.c ****         }
2323:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4124              		.loc 1 2323 53 discriminator 1 view .LVU1147
 4125 0016 104B     		ldr	r3, .L319
 4126 0018 1B68     		ldr	r3, [r3]
 4127 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4128              		.loc 1 2323 41 discriminator 1 view .LVU1148
 4129 001c CBB9     		cbnz	r3, .L316
 4130              	.L314:
2324:Core/Src/bno055.c ****         {
2325:Core/Src/bno055.c ****             /* Read the two byte value
2326:Core/Src/bno055.c ****             * of linear accel y data*/
ARM GAS  /tmp/ccWoU29M.s 			page 119


2327:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4131              		.loc 1 2327 13 is_stmt 1 view .LVU1149
 4132              		.loc 1 2327 32 is_stmt 0 view .LVU1150
 4133 001e 0E4B     		ldr	r3, .L319
 4134 0020 1868     		ldr	r0, [r3]
 4135 0022 0569     		ldr	r5, [r0, #16]
 4136              		.loc 1 2327 24 view .LVU1151
 4137 0024 0223     		movs	r3, #2
 4138 0026 01AA     		add	r2, sp, #4
 4139 0028 2A21     		movs	r1, #42
 4140 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4141 002c A847     		blx	r5
 4142              	.LVL396:
2328:Core/Src/bno055.c ****                                                       BNO055_LINEAR_ACCEL_DATA_Y_LSB_VALUEY_REG,
2329:Core/Src/bno055.c ****                                                       data_u8,
2330:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2331:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4143              		.loc 1 2331 13 is_stmt 1 view .LVU1152
2332:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_Y_LSB_VA
2333:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 4144              		.loc 1 2333 13 view .LVU1153
2334:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_Y_MSB_VA
2335:Core/Src/bno055.c ****             *linear_accel_y_s16 =
 4145              		.loc 1 2335 13 view .LVU1154
2336:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4146              		.loc 1 2336 31 is_stmt 0 view .LVU1155
 4147 002e 9DF90520 		ldrsb	r2, [sp, #5]
2337:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4148              		.loc 1 2337 31 view .LVU1156
 4149 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2336:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4150              		.loc 1 2336 17 view .LVU1157
 4151 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2335:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4152              		.loc 1 2335 33 view .LVU1158
 4153 003a 2380     		strh	r3, [r4]	@ movhi
 4154              	.LVL397:
 4155              	.L312:
2338:Core/Src/bno055.c ****         }
2339:Core/Src/bno055.c ****         else
2340:Core/Src/bno055.c ****         {
2341:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2342:Core/Src/bno055.c ****         }
2343:Core/Src/bno055.c ****     }
2344:Core/Src/bno055.c **** 
2345:Core/Src/bno055.c ****     return com_rslt;
2346:Core/Src/bno055.c **** }
 4156              		.loc 1 2346 1 view .LVU1159
 4157 003c 03B0     		add	sp, sp, #12
 4158              	.LCFI127:
 4159              		.cfi_remember_state
 4160              		.cfi_def_cfa_offset 12
 4161              		@ sp needed
 4162 003e 30BD     		pop	{r4, r5, pc}
 4163              	.LVL398:
 4164              	.L318:
 4165              	.LCFI128:
ARM GAS  /tmp/ccWoU29M.s 			page 120


 4166              		.cfi_restore_state
2321:Core/Src/bno055.c ****         }
 4167              		.loc 1 2321 13 is_stmt 1 view .LVU1160
2321:Core/Src/bno055.c ****         }
 4168              		.loc 1 2321 23 is_stmt 0 view .LVU1161
 4169 0040 0020     		movs	r0, #0
 4170              	.LVL399:
2321:Core/Src/bno055.c ****         }
 4171              		.loc 1 2321 23 view .LVU1162
 4172 0042 FFF7FEFF 		bl	bno055_write_page_id
 4173              	.LVL400:
2323:Core/Src/bno055.c ****         {
 4174              		.loc 1 2323 9 is_stmt 1 view .LVU1163
2323:Core/Src/bno055.c ****         {
 4175              		.loc 1 2323 12 is_stmt 0 view .LVU1164
 4176 0046 0028     		cmp	r0, #0
 4177 0048 E9D0     		beq	.L314
 4178 004a E4E7     		b	.L313
 4179              	.LVL401:
 4180              	.L315:
2312:Core/Src/bno055.c ****     }
 4181              		.loc 1 2312 16 view .LVU1165
 4182 004c 6FF07E00 		mvn	r0, #126
 4183              	.LVL402:
2312:Core/Src/bno055.c ****     }
 4184              		.loc 1 2312 16 view .LVU1166
 4185 0050 F4E7     		b	.L312
 4186              	.LVL403:
 4187              	.L316:
2341:Core/Src/bno055.c ****         }
 4188              		.loc 1 2341 22 view .LVU1167
 4189 0052 4FF0FF30 		mov	r0, #-1
 4190 0056 F1E7     		b	.L312
 4191              	.L320:
 4192              		.align	2
 4193              	.L319:
 4194 0058 00000000 		.word	.LANCHOR0
 4195              		.cfi_endproc
 4196              	.LFE33:
 4198              		.section	.text.bno055_read_linear_accel_z,"ax",%progbits
 4199              		.align	1
 4200              		.global	bno055_read_linear_accel_z
 4201              		.syntax unified
 4202              		.thumb
 4203              		.thumb_func
 4204              		.fpu fpv4-sp-d16
 4206              	bno055_read_linear_accel_z:
 4207              	.LVL404:
 4208              	.LFB34:
2347:Core/Src/bno055.c **** 
2348:Core/Src/bno055.c **** /*!
2349:Core/Src/bno055.c ****  *  @brief This API reads Linear accel data x values
2350:Core/Src/bno055.c ****  *  from register 0x2C and 0x2D it is a two byte data
2351:Core/Src/bno055.c ****  *
2352:Core/Src/bno055.c ****  *  @param linear_accel_z_s16 : The raw z data
2353:Core/Src/bno055.c ****  *
2354:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/ccWoU29M.s 			page 121


2355:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2356:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2357:Core/Src/bno055.c ****  *
2358:Core/Src/bno055.c ****  *
2359:Core/Src/bno055.c ****  */
2360:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_linear_accel_z(s16 *linear_accel_z_s16)
2361:Core/Src/bno055.c **** {
 4209              		.loc 1 2361 1 is_stmt 1 view -0
 4210              		.cfi_startproc
 4211              		@ args = 0, pretend = 0, frame = 8
 4212              		@ frame_needed = 0, uses_anonymous_args = 0
 4213              		.loc 1 2361 1 is_stmt 0 view .LVU1169
 4214 0000 30B5     		push	{r4, r5, lr}
 4215              	.LCFI129:
 4216              		.cfi_def_cfa_offset 12
 4217              		.cfi_offset 4, -12
 4218              		.cfi_offset 5, -8
 4219              		.cfi_offset 14, -4
 4220 0002 83B0     		sub	sp, sp, #12
 4221              	.LCFI130:
 4222              		.cfi_def_cfa_offset 24
2362:Core/Src/bno055.c ****     /* Variable used to return value of
2363:Core/Src/bno055.c ****      * communication routine*/
2364:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4223              		.loc 1 2364 5 is_stmt 1 view .LVU1170
 4224              	.LVL405:
2365:Core/Src/bno055.c **** 
2366:Core/Src/bno055.c ****     /* Array holding the linear accel z value
2367:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - z->LSB
2368:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - z->MSB
2369:Core/Src/bno055.c ****      */
2370:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 4225              		.loc 1 2370 5 view .LVU1171
 4226              		.loc 1 2370 8 is_stmt 0 view .LVU1172
 4227 0004 0023     		movs	r3, #0
 4228 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2371:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4229              		.loc 1 2371 5 is_stmt 1 view .LVU1173
 4230              	.LVL406:
2372:Core/Src/bno055.c **** 
2373:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2374:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4231              		.loc 1 2374 5 view .LVU1174
 4232              		.loc 1 2374 18 is_stmt 0 view .LVU1175
 4233 000a 134B     		ldr	r3, .L329
 4234 000c 1B68     		ldr	r3, [r3]
 4235              		.loc 1 2374 8 view .LVU1176
 4236 000e EBB1     		cbz	r3, .L325
 4237 0010 0446     		mov	r4, r0
2375:Core/Src/bno055.c ****     {
2376:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2377:Core/Src/bno055.c ****     }
2378:Core/Src/bno055.c ****     else
2379:Core/Src/bno055.c ****     {
2380:Core/Src/bno055.c ****         /*condition check for page, chip id is
2381:Core/Src/bno055.c ****          * available in the page zero*/
2382:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
ARM GAS  /tmp/ccWoU29M.s 			page 122


 4238              		.loc 1 2382 9 is_stmt 1 view .LVU1177
 4239              		.loc 1 2382 21 is_stmt 0 view .LVU1178
 4240 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4241              		.loc 1 2382 12 view .LVU1179
 4242 0014 A3B9     		cbnz	r3, .L328
 4243              	.LVL407:
 4244              	.L323:
2383:Core/Src/bno055.c ****         {
2384:Core/Src/bno055.c ****             /* Write the page zero*/
2385:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2386:Core/Src/bno055.c ****         }
2387:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4245              		.loc 1 2387 53 discriminator 1 view .LVU1180
 4246 0016 104B     		ldr	r3, .L329
 4247 0018 1B68     		ldr	r3, [r3]
 4248 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4249              		.loc 1 2387 41 discriminator 1 view .LVU1181
 4250 001c CBB9     		cbnz	r3, .L326
 4251              	.L324:
2388:Core/Src/bno055.c ****         {
2389:Core/Src/bno055.c ****             /* Read the two byte value
2390:Core/Src/bno055.c ****             * of linear accel z data*/
2391:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4252              		.loc 1 2391 13 is_stmt 1 view .LVU1182
 4253              		.loc 1 2391 32 is_stmt 0 view .LVU1183
 4254 001e 0E4B     		ldr	r3, .L329
 4255 0020 1868     		ldr	r0, [r3]
 4256 0022 0569     		ldr	r5, [r0, #16]
 4257              		.loc 1 2391 24 view .LVU1184
 4258 0024 0223     		movs	r3, #2
 4259 0026 01AA     		add	r2, sp, #4
 4260 0028 2C21     		movs	r1, #44
 4261 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4262 002c A847     		blx	r5
 4263              	.LVL408:
2392:Core/Src/bno055.c ****                                                       BNO055_LINEAR_ACCEL_DATA_Z_LSB_VALUEZ_REG,
2393:Core/Src/bno055.c ****                                                       data_u8,
2394:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2395:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4264              		.loc 1 2395 13 is_stmt 1 view .LVU1185
2396:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_Z_LSB_VA
2397:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 4265              		.loc 1 2397 13 view .LVU1186
2398:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_Z_MSB_VA
2399:Core/Src/bno055.c ****             *linear_accel_z_s16 =
 4266              		.loc 1 2399 13 view .LVU1187
2400:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4267              		.loc 1 2400 31 is_stmt 0 view .LVU1188
 4268 002e 9DF90520 		ldrsb	r2, [sp, #5]
2401:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4269              		.loc 1 2401 31 view .LVU1189
 4270 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2400:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4271              		.loc 1 2400 17 view .LVU1190
 4272 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2399:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4273              		.loc 1 2399 33 view .LVU1191
ARM GAS  /tmp/ccWoU29M.s 			page 123


 4274 003a 2380     		strh	r3, [r4]	@ movhi
 4275              	.LVL409:
 4276              	.L322:
2402:Core/Src/bno055.c ****         }
2403:Core/Src/bno055.c ****         else
2404:Core/Src/bno055.c ****         {
2405:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2406:Core/Src/bno055.c ****         }
2407:Core/Src/bno055.c ****     }
2408:Core/Src/bno055.c **** 
2409:Core/Src/bno055.c ****     return com_rslt;
2410:Core/Src/bno055.c **** }
 4277              		.loc 1 2410 1 view .LVU1192
 4278 003c 03B0     		add	sp, sp, #12
 4279              	.LCFI131:
 4280              		.cfi_remember_state
 4281              		.cfi_def_cfa_offset 12
 4282              		@ sp needed
 4283 003e 30BD     		pop	{r4, r5, pc}
 4284              	.LVL410:
 4285              	.L328:
 4286              	.LCFI132:
 4287              		.cfi_restore_state
2385:Core/Src/bno055.c ****         }
 4288              		.loc 1 2385 13 is_stmt 1 view .LVU1193
2385:Core/Src/bno055.c ****         }
 4289              		.loc 1 2385 23 is_stmt 0 view .LVU1194
 4290 0040 0020     		movs	r0, #0
 4291              	.LVL411:
2385:Core/Src/bno055.c ****         }
 4292              		.loc 1 2385 23 view .LVU1195
 4293 0042 FFF7FEFF 		bl	bno055_write_page_id
 4294              	.LVL412:
2387:Core/Src/bno055.c ****         {
 4295              		.loc 1 2387 9 is_stmt 1 view .LVU1196
2387:Core/Src/bno055.c ****         {
 4296              		.loc 1 2387 12 is_stmt 0 view .LVU1197
 4297 0046 0028     		cmp	r0, #0
 4298 0048 E9D0     		beq	.L324
 4299 004a E4E7     		b	.L323
 4300              	.LVL413:
 4301              	.L325:
2376:Core/Src/bno055.c ****     }
 4302              		.loc 1 2376 16 view .LVU1198
 4303 004c 6FF07E00 		mvn	r0, #126
 4304              	.LVL414:
2376:Core/Src/bno055.c ****     }
 4305              		.loc 1 2376 16 view .LVU1199
 4306 0050 F4E7     		b	.L322
 4307              	.LVL415:
 4308              	.L326:
2405:Core/Src/bno055.c ****         }
 4309              		.loc 1 2405 22 view .LVU1200
 4310 0052 4FF0FF30 		mov	r0, #-1
 4311 0056 F1E7     		b	.L322
 4312              	.L330:
 4313              		.align	2
ARM GAS  /tmp/ccWoU29M.s 			page 124


 4314              	.L329:
 4315 0058 00000000 		.word	.LANCHOR0
 4316              		.cfi_endproc
 4317              	.LFE34:
 4319              		.section	.text.bno055_read_linear_accel_xyz,"ax",%progbits
 4320              		.align	1
 4321              		.global	bno055_read_linear_accel_xyz
 4322              		.syntax unified
 4323              		.thumb
 4324              		.thumb_func
 4325              		.fpu fpv4-sp-d16
 4327              	bno055_read_linear_accel_xyz:
 4328              	.LVL416:
 4329              	.LFB35:
2411:Core/Src/bno055.c **** 
2412:Core/Src/bno055.c **** /*!
2413:Core/Src/bno055.c ****  *  @brief This API reads Linear accel data xyz values
2414:Core/Src/bno055.c ****  *  from register 0x28 to 0x2D it is a six byte data
2415:Core/Src/bno055.c ****  *
2416:Core/Src/bno055.c ****  *
2417:Core/Src/bno055.c ****  *  @param linear_accel : The value of linear accel xyz data's
2418:Core/Src/bno055.c ****  *
2419:Core/Src/bno055.c ****  *  Parameter |    result
2420:Core/Src/bno055.c ****  *  --------- | -----------------
2421:Core/Src/bno055.c ****  *   x        | The linear accel x data
2422:Core/Src/bno055.c ****  *   y        | The linear accel y data
2423:Core/Src/bno055.c ****  *   z        | The linear accel z data
2424:Core/Src/bno055.c ****  *
2425:Core/Src/bno055.c ****  *
2426:Core/Src/bno055.c ****  *  @return results of bus communication function
2427:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2428:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2429:Core/Src/bno055.c ****  */
2430:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_linear_accel_xyz(struct bno055_linear_accel_t *linear_accel
2431:Core/Src/bno055.c **** {
 4330              		.loc 1 2431 1 is_stmt 1 view -0
 4331              		.cfi_startproc
 4332              		@ args = 0, pretend = 0, frame = 8
 4333              		@ frame_needed = 0, uses_anonymous_args = 0
 4334              		.loc 1 2431 1 is_stmt 0 view .LVU1202
 4335 0000 30B5     		push	{r4, r5, lr}
 4336              	.LCFI133:
 4337              		.cfi_def_cfa_offset 12
 4338              		.cfi_offset 4, -12
 4339              		.cfi_offset 5, -8
 4340              		.cfi_offset 14, -4
 4341 0002 83B0     		sub	sp, sp, #12
 4342              	.LCFI134:
 4343              		.cfi_def_cfa_offset 24
 4344 0004 0446     		mov	r4, r0
2432:Core/Src/bno055.c ****     /* Variable used to return value of
2433:Core/Src/bno055.c ****      * communication routine*/
2434:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4345              		.loc 1 2434 5 is_stmt 1 view .LVU1203
 4346              	.LVL417:
2435:Core/Src/bno055.c **** 
2436:Core/Src/bno055.c ****     /* Array holding the linear accel xyz value
ARM GAS  /tmp/ccWoU29M.s 			page 125


2437:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
2438:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
2439:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
2440:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
2441:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
2442:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
2443:Core/Src/bno055.c ****      */
2444:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_XYZ_DATA_SIZE] = {
 4347              		.loc 1 2444 5 view .LVU1204
 4348              		.loc 1 2444 8 is_stmt 0 view .LVU1205
 4349 0006 1D4B     		ldr	r3, .L339
 4350 0008 93E80300 		ldm	r3, {r0, r1}
 4351              	.LVL418:
 4352              		.loc 1 2444 8 view .LVU1206
 4353 000c 0090     		str	r0, [sp]
 4354 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
2445:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
2446:Core/Src/bno055.c ****     };
2447:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4355              		.loc 1 2447 5 is_stmt 1 view .LVU1207
 4356              	.LVL419:
2448:Core/Src/bno055.c **** 
2449:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2450:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4357              		.loc 1 2450 5 view .LVU1208
 4358              		.loc 1 2450 18 is_stmt 0 view .LVU1209
 4359 0012 1B4B     		ldr	r3, .L339+4
 4360 0014 1B68     		ldr	r3, [r3]
 4361              		.loc 1 2450 8 view .LVU1210
 4362 0016 53B3     		cbz	r3, .L335
2451:Core/Src/bno055.c ****     {
2452:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2453:Core/Src/bno055.c ****     }
2454:Core/Src/bno055.c ****     else
2455:Core/Src/bno055.c ****     {
2456:Core/Src/bno055.c ****         /*condition check for page, chip id is
2457:Core/Src/bno055.c ****          * available in the page zero*/
2458:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4363              		.loc 1 2458 9 is_stmt 1 view .LVU1211
 4364              		.loc 1 2458 21 is_stmt 0 view .LVU1212
 4365 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4366              		.loc 1 2458 12 view .LVU1213
 4367 001a 13BB     		cbnz	r3, .L338
 4368              	.LVL420:
 4369              	.L333:
2459:Core/Src/bno055.c ****         {
2460:Core/Src/bno055.c ****             /* Write the page zero*/
2461:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2462:Core/Src/bno055.c ****         }
2463:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4370              		.loc 1 2463 53 discriminator 1 view .LVU1214
 4371 001c 184B     		ldr	r3, .L339+4
 4372 001e 1B68     		ldr	r3, [r3]
 4373 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4374              		.loc 1 2463 41 discriminator 1 view .LVU1215
 4375 0022 3BBB     		cbnz	r3, .L336
 4376              	.L334:
ARM GAS  /tmp/ccWoU29M.s 			page 126


2464:Core/Src/bno055.c ****         {
2465:Core/Src/bno055.c ****             /* Read the six byte value
2466:Core/Src/bno055.c ****              *  of linear accel xyz data*/
2467:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4377              		.loc 1 2467 13 is_stmt 1 view .LVU1216
 4378              		.loc 1 2467 32 is_stmt 0 view .LVU1217
 4379 0024 164B     		ldr	r3, .L339+4
 4380 0026 1868     		ldr	r0, [r3]
 4381 0028 0569     		ldr	r5, [r0, #16]
 4382              		.loc 1 2467 24 view .LVU1218
 4383 002a 0623     		movs	r3, #6
 4384 002c 6A46     		mov	r2, sp
 4385 002e 2821     		movs	r1, #40
 4386 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4387 0032 A847     		blx	r5
 4388              	.LVL421:
2468:Core/Src/bno055.c ****                                                       BNO055_LINEAR_ACCEL_DATA_X_LSB_VALUEX_REG,
2469:Core/Src/bno055.c ****                                                       data_u8,
2470:Core/Src/bno055.c ****                                                       BNO055_ACCEL_XYZ_DATA_SIZE);
2471:Core/Src/bno055.c **** 
2472:Core/Src/bno055.c ****             /* Data x*/
2473:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4389              		.loc 1 2473 13 is_stmt 1 view .LVU1219
2474:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_X_
2475:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4390              		.loc 1 2475 13 view .LVU1220
2476:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_X_
2477:Core/Src/bno055.c ****             linear_accel->x =
 4391              		.loc 1 2477 13 view .LVU1221
2478:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4392              		.loc 1 2478 31 is_stmt 0 view .LVU1222
 4393 0034 9DF90120 		ldrsb	r2, [sp, #1]
2479:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 4394              		.loc 1 2479 31 view .LVU1223
 4395 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
2478:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4396              		.loc 1 2478 17 view .LVU1224
 4397 003c 43EA0223 		orr	r3, r3, r2, lsl #8
2477:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4398              		.loc 1 2477 29 view .LVU1225
 4399 0040 2380     		strh	r3, [r4]	@ movhi
2480:Core/Src/bno055.c **** 
2481:Core/Src/bno055.c ****             /* Data y*/
2482:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4400              		.loc 1 2482 13 is_stmt 1 view .LVU1226
2483:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_Y_
2484:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4401              		.loc 1 2484 13 view .LVU1227
2485:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_Y_
2486:Core/Src/bno055.c ****             linear_accel->y =
 4402              		.loc 1 2486 13 view .LVU1228
2487:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4403              		.loc 1 2487 31 is_stmt 0 view .LVU1229
 4404 0042 9DF90320 		ldrsb	r2, [sp, #3]
2488:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 4405              		.loc 1 2488 31 view .LVU1230
 4406 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 127


2487:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4407              		.loc 1 2487 17 view .LVU1231
 4408 004a 43EA0223 		orr	r3, r3, r2, lsl #8
2486:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4409              		.loc 1 2486 29 view .LVU1232
 4410 004e 6380     		strh	r3, [r4, #2]	@ movhi
2489:Core/Src/bno055.c **** 
2490:Core/Src/bno055.c ****             /* Data z*/
2491:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4411              		.loc 1 2491 13 is_stmt 1 view .LVU1233
2492:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_Z_
2493:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4412              		.loc 1 2493 13 view .LVU1234
2494:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_Z_
2495:Core/Src/bno055.c ****             linear_accel->z =
 4413              		.loc 1 2495 13 view .LVU1235
2496:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4414              		.loc 1 2496 31 is_stmt 0 view .LVU1236
 4415 0050 9DF90520 		ldrsb	r2, [sp, #5]
2497:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 4416              		.loc 1 2497 31 view .LVU1237
 4417 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2496:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4418              		.loc 1 2496 17 view .LVU1238
 4419 0058 43EA0223 		orr	r3, r3, r2, lsl #8
2495:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4420              		.loc 1 2495 29 view .LVU1239
 4421 005c A380     		strh	r3, [r4, #4]	@ movhi
 4422              	.LVL422:
 4423              	.L332:
2498:Core/Src/bno055.c ****         }
2499:Core/Src/bno055.c ****         else
2500:Core/Src/bno055.c ****         {
2501:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2502:Core/Src/bno055.c ****         }
2503:Core/Src/bno055.c ****     }
2504:Core/Src/bno055.c **** 
2505:Core/Src/bno055.c ****     return com_rslt;
2506:Core/Src/bno055.c **** }
 4424              		.loc 1 2506 1 view .LVU1240
 4425 005e 03B0     		add	sp, sp, #12
 4426              	.LCFI135:
 4427              		.cfi_remember_state
 4428              		.cfi_def_cfa_offset 12
 4429              		@ sp needed
 4430 0060 30BD     		pop	{r4, r5, pc}
 4431              	.LVL423:
 4432              	.L338:
 4433              	.LCFI136:
 4434              		.cfi_restore_state
2461:Core/Src/bno055.c ****         }
 4435              		.loc 1 2461 13 is_stmt 1 view .LVU1241
2461:Core/Src/bno055.c ****         }
 4436              		.loc 1 2461 23 is_stmt 0 view .LVU1242
 4437 0062 0020     		movs	r0, #0
 4438 0064 FFF7FEFF 		bl	bno055_write_page_id
 4439              	.LVL424:
ARM GAS  /tmp/ccWoU29M.s 			page 128


2463:Core/Src/bno055.c ****         {
 4440              		.loc 1 2463 9 is_stmt 1 view .LVU1243
2463:Core/Src/bno055.c ****         {
 4441              		.loc 1 2463 12 is_stmt 0 view .LVU1244
 4442 0068 0028     		cmp	r0, #0
 4443 006a DBD0     		beq	.L334
 4444 006c D6E7     		b	.L333
 4445              	.LVL425:
 4446              	.L335:
2452:Core/Src/bno055.c ****     }
 4447              		.loc 1 2452 16 view .LVU1245
 4448 006e 6FF07E00 		mvn	r0, #126
 4449 0072 F4E7     		b	.L332
 4450              	.LVL426:
 4451              	.L336:
2501:Core/Src/bno055.c ****         }
 4452              		.loc 1 2501 22 view .LVU1246
 4453 0074 4FF0FF30 		mov	r0, #-1
 4454 0078 F1E7     		b	.L332
 4455              	.L340:
 4456 007a 00BF     		.align	2
 4457              	.L339:
 4458 007c 00000000 		.word	.LANCHOR1
 4459 0080 00000000 		.word	.LANCHOR0
 4460              		.cfi_endproc
 4461              	.LFE35:
 4463              		.section	.text.bno055_read_gravity_x,"ax",%progbits
 4464              		.align	1
 4465              		.global	bno055_read_gravity_x
 4466              		.syntax unified
 4467              		.thumb
 4468              		.thumb_func
 4469              		.fpu fpv4-sp-d16
 4471              	bno055_read_gravity_x:
 4472              	.LVL427:
 4473              	.LFB36:
2507:Core/Src/bno055.c **** 
2508:Core/Src/bno055.c **** /*!
2509:Core/Src/bno055.c ****  *  @brief This API reads gravity data x values
2510:Core/Src/bno055.c ****  *  from register 0x2E and 0x2F it is a two byte data
2511:Core/Src/bno055.c ****  *
2512:Core/Src/bno055.c ****  *  @param gravity_x_s16 : The raw x data
2513:Core/Src/bno055.c ****  *
2514:Core/Src/bno055.c ****  *  @return results of bus communication function
2515:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2516:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2517:Core/Src/bno055.c ****  *
2518:Core/Src/bno055.c ****  *
2519:Core/Src/bno055.c ****  */
2520:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gravity_x(s16 *gravity_x_s16)
2521:Core/Src/bno055.c **** {
 4474              		.loc 1 2521 1 is_stmt 1 view -0
 4475              		.cfi_startproc
 4476              		@ args = 0, pretend = 0, frame = 8
 4477              		@ frame_needed = 0, uses_anonymous_args = 0
 4478              		.loc 1 2521 1 is_stmt 0 view .LVU1248
 4479 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccWoU29M.s 			page 129


 4480              	.LCFI137:
 4481              		.cfi_def_cfa_offset 12
 4482              		.cfi_offset 4, -12
 4483              		.cfi_offset 5, -8
 4484              		.cfi_offset 14, -4
 4485 0002 83B0     		sub	sp, sp, #12
 4486              	.LCFI138:
 4487              		.cfi_def_cfa_offset 24
2522:Core/Src/bno055.c ****     /* Variable used to return value of
2523:Core/Src/bno055.c ****      * communication routine*/
2524:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4488              		.loc 1 2524 5 is_stmt 1 view .LVU1249
 4489              	.LVL428:
2525:Core/Src/bno055.c **** 
2526:Core/Src/bno055.c ****     /* Array holding the gravity x value
2527:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - x->LSB
2528:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - x->MSB
2529:Core/Src/bno055.c ****      */
2530:Core/Src/bno055.c ****     u8 data_u8[BNO055_GRAVITY_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 4490              		.loc 1 2530 5 view .LVU1250
 4491              		.loc 1 2530 8 is_stmt 0 view .LVU1251
 4492 0004 0023     		movs	r3, #0
 4493 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2531:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4494              		.loc 1 2531 5 is_stmt 1 view .LVU1252
 4495              	.LVL429:
2532:Core/Src/bno055.c **** 
2533:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2534:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4496              		.loc 1 2534 5 view .LVU1253
 4497              		.loc 1 2534 18 is_stmt 0 view .LVU1254
 4498 000a 134B     		ldr	r3, .L349
 4499 000c 1B68     		ldr	r3, [r3]
 4500              		.loc 1 2534 8 view .LVU1255
 4501 000e EBB1     		cbz	r3, .L345
 4502 0010 0446     		mov	r4, r0
2535:Core/Src/bno055.c ****     {
2536:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2537:Core/Src/bno055.c ****     }
2538:Core/Src/bno055.c ****     else
2539:Core/Src/bno055.c ****     {
2540:Core/Src/bno055.c ****         /*condition check for page, chip id is
2541:Core/Src/bno055.c ****          * available in the page zero*/
2542:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4503              		.loc 1 2542 9 is_stmt 1 view .LVU1256
 4504              		.loc 1 2542 21 is_stmt 0 view .LVU1257
 4505 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4506              		.loc 1 2542 12 view .LVU1258
 4507 0014 A3B9     		cbnz	r3, .L348
 4508              	.LVL430:
 4509              	.L343:
2543:Core/Src/bno055.c ****         {
2544:Core/Src/bno055.c ****             /* Write the page zero*/
2545:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2546:Core/Src/bno055.c ****         }
2547:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4510              		.loc 1 2547 53 discriminator 1 view .LVU1259
ARM GAS  /tmp/ccWoU29M.s 			page 130


 4511 0016 104B     		ldr	r3, .L349
 4512 0018 1B68     		ldr	r3, [r3]
 4513 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4514              		.loc 1 2547 41 discriminator 1 view .LVU1260
 4515 001c CBB9     		cbnz	r3, .L346
 4516              	.L344:
2548:Core/Src/bno055.c ****         {
2549:Core/Src/bno055.c ****             /* Read the two byte value
2550:Core/Src/bno055.c ****              * of gravity x data*/
2551:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4517              		.loc 1 2551 13 is_stmt 1 view .LVU1261
 4518              		.loc 1 2551 32 is_stmt 0 view .LVU1262
 4519 001e 0E4B     		ldr	r3, .L349
 4520 0020 1868     		ldr	r0, [r3]
 4521 0022 0569     		ldr	r5, [r0, #16]
 4522              		.loc 1 2551 24 view .LVU1263
 4523 0024 0223     		movs	r3, #2
 4524 0026 01AA     		add	r2, sp, #4
 4525 0028 2E21     		movs	r1, #46
 4526 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4527 002c A847     		blx	r5
 4528              	.LVL431:
2552:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_DATA_X_LSB_VALUEX_REG,
2553:Core/Src/bno055.c ****                                                       data_u8,
2554:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2555:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4529              		.loc 1 2555 13 is_stmt 1 view .LVU1264
2556:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_X_LSB_VALUEX)
2557:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 4530              		.loc 1 2557 13 view .LVU1265
2558:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_X_MSB_VALUEX)
2559:Core/Src/bno055.c ****             *gravity_x_s16 =
 4531              		.loc 1 2559 13 view .LVU1266
2560:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4532              		.loc 1 2560 31 is_stmt 0 view .LVU1267
 4533 002e 9DF90520 		ldrsb	r2, [sp, #5]
2561:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4534              		.loc 1 2561 31 view .LVU1268
 4535 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2560:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4536              		.loc 1 2560 17 view .LVU1269
 4537 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2559:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4538              		.loc 1 2559 28 view .LVU1270
 4539 003a 2380     		strh	r3, [r4]	@ movhi
 4540              	.LVL432:
 4541              	.L342:
2562:Core/Src/bno055.c ****         }
2563:Core/Src/bno055.c ****         else
2564:Core/Src/bno055.c ****         {
2565:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2566:Core/Src/bno055.c ****         }
2567:Core/Src/bno055.c ****     }
2568:Core/Src/bno055.c **** 
2569:Core/Src/bno055.c ****     return com_rslt;
2570:Core/Src/bno055.c **** }
 4542              		.loc 1 2570 1 view .LVU1271
ARM GAS  /tmp/ccWoU29M.s 			page 131


 4543 003c 03B0     		add	sp, sp, #12
 4544              	.LCFI139:
 4545              		.cfi_remember_state
 4546              		.cfi_def_cfa_offset 12
 4547              		@ sp needed
 4548 003e 30BD     		pop	{r4, r5, pc}
 4549              	.LVL433:
 4550              	.L348:
 4551              	.LCFI140:
 4552              		.cfi_restore_state
2545:Core/Src/bno055.c ****         }
 4553              		.loc 1 2545 13 is_stmt 1 view .LVU1272
2545:Core/Src/bno055.c ****         }
 4554              		.loc 1 2545 23 is_stmt 0 view .LVU1273
 4555 0040 0020     		movs	r0, #0
 4556              	.LVL434:
2545:Core/Src/bno055.c ****         }
 4557              		.loc 1 2545 23 view .LVU1274
 4558 0042 FFF7FEFF 		bl	bno055_write_page_id
 4559              	.LVL435:
2547:Core/Src/bno055.c ****         {
 4560              		.loc 1 2547 9 is_stmt 1 view .LVU1275
2547:Core/Src/bno055.c ****         {
 4561              		.loc 1 2547 12 is_stmt 0 view .LVU1276
 4562 0046 0028     		cmp	r0, #0
 4563 0048 E9D0     		beq	.L344
 4564 004a E4E7     		b	.L343
 4565              	.LVL436:
 4566              	.L345:
2536:Core/Src/bno055.c ****     }
 4567              		.loc 1 2536 16 view .LVU1277
 4568 004c 6FF07E00 		mvn	r0, #126
 4569              	.LVL437:
2536:Core/Src/bno055.c ****     }
 4570              		.loc 1 2536 16 view .LVU1278
 4571 0050 F4E7     		b	.L342
 4572              	.LVL438:
 4573              	.L346:
2565:Core/Src/bno055.c ****         }
 4574              		.loc 1 2565 22 view .LVU1279
 4575 0052 4FF0FF30 		mov	r0, #-1
 4576 0056 F1E7     		b	.L342
 4577              	.L350:
 4578              		.align	2
 4579              	.L349:
 4580 0058 00000000 		.word	.LANCHOR0
 4581              		.cfi_endproc
 4582              	.LFE36:
 4584              		.section	.text.bno055_read_gravity_y,"ax",%progbits
 4585              		.align	1
 4586              		.global	bno055_read_gravity_y
 4587              		.syntax unified
 4588              		.thumb
 4589              		.thumb_func
 4590              		.fpu fpv4-sp-d16
 4592              	bno055_read_gravity_y:
 4593              	.LVL439:
ARM GAS  /tmp/ccWoU29M.s 			page 132


 4594              	.LFB37:
2571:Core/Src/bno055.c **** 
2572:Core/Src/bno055.c **** /*!
2573:Core/Src/bno055.c ****  *  @brief This API reads gravity data y values
2574:Core/Src/bno055.c ****  *  from register 0x30 and 0x31 it is a two byte data
2575:Core/Src/bno055.c ****  *
2576:Core/Src/bno055.c ****  *  @param gravity_y_s16 : The raw y data
2577:Core/Src/bno055.c ****  *
2578:Core/Src/bno055.c ****  *  @return results of bus communication function
2579:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2580:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2581:Core/Src/bno055.c ****  *
2582:Core/Src/bno055.c ****  *
2583:Core/Src/bno055.c ****  */
2584:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gravity_y(s16 *gravity_y_s16)
2585:Core/Src/bno055.c **** {
 4595              		.loc 1 2585 1 is_stmt 1 view -0
 4596              		.cfi_startproc
 4597              		@ args = 0, pretend = 0, frame = 8
 4598              		@ frame_needed = 0, uses_anonymous_args = 0
 4599              		.loc 1 2585 1 is_stmt 0 view .LVU1281
 4600 0000 30B5     		push	{r4, r5, lr}
 4601              	.LCFI141:
 4602              		.cfi_def_cfa_offset 12
 4603              		.cfi_offset 4, -12
 4604              		.cfi_offset 5, -8
 4605              		.cfi_offset 14, -4
 4606 0002 83B0     		sub	sp, sp, #12
 4607              	.LCFI142:
 4608              		.cfi_def_cfa_offset 24
2586:Core/Src/bno055.c ****     /* Variable used to return value of
2587:Core/Src/bno055.c ****      * communication routine*/
2588:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4609              		.loc 1 2588 5 is_stmt 1 view .LVU1282
 4610              	.LVL440:
2589:Core/Src/bno055.c **** 
2590:Core/Src/bno055.c ****     /* Array holding the gravity y value
2591:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - y->LSB
2592:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - y->MSB
2593:Core/Src/bno055.c ****      */
2594:Core/Src/bno055.c ****     u8 data_u8[BNO055_GRAVITY_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 4611              		.loc 1 2594 5 view .LVU1283
 4612              		.loc 1 2594 8 is_stmt 0 view .LVU1284
 4613 0004 0023     		movs	r3, #0
 4614 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2595:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4615              		.loc 1 2595 5 is_stmt 1 view .LVU1285
 4616              	.LVL441:
2596:Core/Src/bno055.c **** 
2597:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2598:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4617              		.loc 1 2598 5 view .LVU1286
 4618              		.loc 1 2598 18 is_stmt 0 view .LVU1287
 4619 000a 134B     		ldr	r3, .L359
 4620 000c 1B68     		ldr	r3, [r3]
 4621              		.loc 1 2598 8 view .LVU1288
 4622 000e EBB1     		cbz	r3, .L355
ARM GAS  /tmp/ccWoU29M.s 			page 133


 4623 0010 0446     		mov	r4, r0
2599:Core/Src/bno055.c ****     {
2600:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2601:Core/Src/bno055.c ****     }
2602:Core/Src/bno055.c ****     else
2603:Core/Src/bno055.c ****     {
2604:Core/Src/bno055.c ****         /*condition check for page, chip id is
2605:Core/Src/bno055.c ****          * available in the page zero*/
2606:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4624              		.loc 1 2606 9 is_stmt 1 view .LVU1289
 4625              		.loc 1 2606 21 is_stmt 0 view .LVU1290
 4626 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4627              		.loc 1 2606 12 view .LVU1291
 4628 0014 A3B9     		cbnz	r3, .L358
 4629              	.LVL442:
 4630              	.L353:
2607:Core/Src/bno055.c ****         {
2608:Core/Src/bno055.c ****             /* Write the page zero*/
2609:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2610:Core/Src/bno055.c ****         }
2611:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4631              		.loc 1 2611 53 discriminator 1 view .LVU1292
 4632 0016 104B     		ldr	r3, .L359
 4633 0018 1B68     		ldr	r3, [r3]
 4634 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4635              		.loc 1 2611 41 discriminator 1 view .LVU1293
 4636 001c CBB9     		cbnz	r3, .L356
 4637              	.L354:
2612:Core/Src/bno055.c ****         {
2613:Core/Src/bno055.c ****             /* Read the two byte value
2614:Core/Src/bno055.c ****              * of gravity y data*/
2615:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4638              		.loc 1 2615 13 is_stmt 1 view .LVU1294
 4639              		.loc 1 2615 32 is_stmt 0 view .LVU1295
 4640 001e 0E4B     		ldr	r3, .L359
 4641 0020 1868     		ldr	r0, [r3]
 4642 0022 0569     		ldr	r5, [r0, #16]
 4643              		.loc 1 2615 24 view .LVU1296
 4644 0024 0223     		movs	r3, #2
 4645 0026 01AA     		add	r2, sp, #4
 4646 0028 3021     		movs	r1, #48
 4647 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4648 002c A847     		blx	r5
 4649              	.LVL443:
2616:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_DATA_Y_LSB_VALUEY_REG,
2617:Core/Src/bno055.c ****                                                       data_u8,
2618:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2619:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4650              		.loc 1 2619 13 is_stmt 1 view .LVU1297
2620:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_Y_LSB_VALUEY)
2621:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 4651              		.loc 1 2621 13 view .LVU1298
2622:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_Y_MSB_VALUEY)
2623:Core/Src/bno055.c ****             *gravity_y_s16 =
 4652              		.loc 1 2623 13 view .LVU1299
2624:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4653              		.loc 1 2624 31 is_stmt 0 view .LVU1300
ARM GAS  /tmp/ccWoU29M.s 			page 134


 4654 002e 9DF90520 		ldrsb	r2, [sp, #5]
2625:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4655              		.loc 1 2625 31 view .LVU1301
 4656 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2624:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4657              		.loc 1 2624 17 view .LVU1302
 4658 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2623:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4659              		.loc 1 2623 28 view .LVU1303
 4660 003a 2380     		strh	r3, [r4]	@ movhi
 4661              	.LVL444:
 4662              	.L352:
2626:Core/Src/bno055.c ****         }
2627:Core/Src/bno055.c ****         else
2628:Core/Src/bno055.c ****         {
2629:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2630:Core/Src/bno055.c ****         }
2631:Core/Src/bno055.c ****     }
2632:Core/Src/bno055.c **** 
2633:Core/Src/bno055.c ****     return com_rslt;
2634:Core/Src/bno055.c **** }
 4663              		.loc 1 2634 1 view .LVU1304
 4664 003c 03B0     		add	sp, sp, #12
 4665              	.LCFI143:
 4666              		.cfi_remember_state
 4667              		.cfi_def_cfa_offset 12
 4668              		@ sp needed
 4669 003e 30BD     		pop	{r4, r5, pc}
 4670              	.LVL445:
 4671              	.L358:
 4672              	.LCFI144:
 4673              		.cfi_restore_state
2609:Core/Src/bno055.c ****         }
 4674              		.loc 1 2609 13 is_stmt 1 view .LVU1305
2609:Core/Src/bno055.c ****         }
 4675              		.loc 1 2609 23 is_stmt 0 view .LVU1306
 4676 0040 0020     		movs	r0, #0
 4677              	.LVL446:
2609:Core/Src/bno055.c ****         }
 4678              		.loc 1 2609 23 view .LVU1307
 4679 0042 FFF7FEFF 		bl	bno055_write_page_id
 4680              	.LVL447:
2611:Core/Src/bno055.c ****         {
 4681              		.loc 1 2611 9 is_stmt 1 view .LVU1308
2611:Core/Src/bno055.c ****         {
 4682              		.loc 1 2611 12 is_stmt 0 view .LVU1309
 4683 0046 0028     		cmp	r0, #0
 4684 0048 E9D0     		beq	.L354
 4685 004a E4E7     		b	.L353
 4686              	.LVL448:
 4687              	.L355:
2600:Core/Src/bno055.c ****     }
 4688              		.loc 1 2600 16 view .LVU1310
 4689 004c 6FF07E00 		mvn	r0, #126
 4690              	.LVL449:
2600:Core/Src/bno055.c ****     }
 4691              		.loc 1 2600 16 view .LVU1311
ARM GAS  /tmp/ccWoU29M.s 			page 135


 4692 0050 F4E7     		b	.L352
 4693              	.LVL450:
 4694              	.L356:
2629:Core/Src/bno055.c ****         }
 4695              		.loc 1 2629 22 view .LVU1312
 4696 0052 4FF0FF30 		mov	r0, #-1
 4697 0056 F1E7     		b	.L352
 4698              	.L360:
 4699              		.align	2
 4700              	.L359:
 4701 0058 00000000 		.word	.LANCHOR0
 4702              		.cfi_endproc
 4703              	.LFE37:
 4705              		.section	.text.bno055_read_gravity_z,"ax",%progbits
 4706              		.align	1
 4707              		.global	bno055_read_gravity_z
 4708              		.syntax unified
 4709              		.thumb
 4710              		.thumb_func
 4711              		.fpu fpv4-sp-d16
 4713              	bno055_read_gravity_z:
 4714              	.LVL451:
 4715              	.LFB38:
2635:Core/Src/bno055.c **** 
2636:Core/Src/bno055.c **** /*!
2637:Core/Src/bno055.c ****  *  @brief This API reads gravity data z values
2638:Core/Src/bno055.c ****  *  from register 0x32 and 0x33 it is a two byte data
2639:Core/Src/bno055.c ****  *
2640:Core/Src/bno055.c ****  *  @param gravity_z_s16 : The raw z data
2641:Core/Src/bno055.c ****  *
2642:Core/Src/bno055.c ****  *  @return results of bus communication function
2643:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2644:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2645:Core/Src/bno055.c ****  *
2646:Core/Src/bno055.c ****  *
2647:Core/Src/bno055.c ****  */
2648:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gravity_z(s16 *gravity_z_s16)
2649:Core/Src/bno055.c **** {
 4716              		.loc 1 2649 1 is_stmt 1 view -0
 4717              		.cfi_startproc
 4718              		@ args = 0, pretend = 0, frame = 8
 4719              		@ frame_needed = 0, uses_anonymous_args = 0
 4720              		.loc 1 2649 1 is_stmt 0 view .LVU1314
 4721 0000 30B5     		push	{r4, r5, lr}
 4722              	.LCFI145:
 4723              		.cfi_def_cfa_offset 12
 4724              		.cfi_offset 4, -12
 4725              		.cfi_offset 5, -8
 4726              		.cfi_offset 14, -4
 4727 0002 83B0     		sub	sp, sp, #12
 4728              	.LCFI146:
 4729              		.cfi_def_cfa_offset 24
2650:Core/Src/bno055.c ****     /* Variable used to return value of
2651:Core/Src/bno055.c ****      * communication routine*/
2652:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4730              		.loc 1 2652 5 is_stmt 1 view .LVU1315
 4731              	.LVL452:
ARM GAS  /tmp/ccWoU29M.s 			page 136


2653:Core/Src/bno055.c **** 
2654:Core/Src/bno055.c ****     /* Array holding the gravity z value
2655:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - z->LSB
2656:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - z->MSB
2657:Core/Src/bno055.c ****      */
2658:Core/Src/bno055.c ****     u8 data_u8[BNO055_GRAVITY_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 4732              		.loc 1 2658 5 view .LVU1316
 4733              		.loc 1 2658 8 is_stmt 0 view .LVU1317
 4734 0004 0023     		movs	r3, #0
 4735 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2659:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4736              		.loc 1 2659 5 is_stmt 1 view .LVU1318
 4737              	.LVL453:
2660:Core/Src/bno055.c **** 
2661:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2662:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4738              		.loc 1 2662 5 view .LVU1319
 4739              		.loc 1 2662 18 is_stmt 0 view .LVU1320
 4740 000a 134B     		ldr	r3, .L369
 4741 000c 1B68     		ldr	r3, [r3]
 4742              		.loc 1 2662 8 view .LVU1321
 4743 000e EBB1     		cbz	r3, .L365
 4744 0010 0446     		mov	r4, r0
2663:Core/Src/bno055.c ****     {
2664:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2665:Core/Src/bno055.c ****     }
2666:Core/Src/bno055.c ****     else
2667:Core/Src/bno055.c ****     {
2668:Core/Src/bno055.c ****         /*condition check for page, chip id is
2669:Core/Src/bno055.c ****          * available in the page zero*/
2670:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4745              		.loc 1 2670 9 is_stmt 1 view .LVU1322
 4746              		.loc 1 2670 21 is_stmt 0 view .LVU1323
 4747 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4748              		.loc 1 2670 12 view .LVU1324
 4749 0014 A3B9     		cbnz	r3, .L368
 4750              	.LVL454:
 4751              	.L363:
2671:Core/Src/bno055.c ****         {
2672:Core/Src/bno055.c ****             /* Write the page zero*/
2673:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2674:Core/Src/bno055.c ****         }
2675:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4752              		.loc 1 2675 53 discriminator 1 view .LVU1325
 4753 0016 104B     		ldr	r3, .L369
 4754 0018 1B68     		ldr	r3, [r3]
 4755 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4756              		.loc 1 2675 41 discriminator 1 view .LVU1326
 4757 001c CBB9     		cbnz	r3, .L366
 4758              	.L364:
2676:Core/Src/bno055.c ****         {
2677:Core/Src/bno055.c ****             /* Read the two byte value
2678:Core/Src/bno055.c ****              * of gravity z data*/
2679:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4759              		.loc 1 2679 13 is_stmt 1 view .LVU1327
 4760              		.loc 1 2679 32 is_stmt 0 view .LVU1328
 4761 001e 0E4B     		ldr	r3, .L369
ARM GAS  /tmp/ccWoU29M.s 			page 137


 4762 0020 1868     		ldr	r0, [r3]
 4763 0022 0569     		ldr	r5, [r0, #16]
 4764              		.loc 1 2679 24 view .LVU1329
 4765 0024 0223     		movs	r3, #2
 4766 0026 01AA     		add	r2, sp, #4
 4767 0028 3221     		movs	r1, #50
 4768 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4769 002c A847     		blx	r5
 4770              	.LVL455:
2680:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_DATA_Z_LSB_VALUEZ_REG,
2681:Core/Src/bno055.c ****                                                       data_u8,
2682:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2683:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4771              		.loc 1 2683 13 is_stmt 1 view .LVU1330
2684:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_Z_LSB_VALUEZ)
2685:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 4772              		.loc 1 2685 13 view .LVU1331
2686:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_Z_MSB_VALUEZ)
2687:Core/Src/bno055.c ****             *gravity_z_s16 =
 4773              		.loc 1 2687 13 view .LVU1332
2688:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4774              		.loc 1 2688 31 is_stmt 0 view .LVU1333
 4775 002e 9DF90520 		ldrsb	r2, [sp, #5]
2689:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4776              		.loc 1 2689 31 view .LVU1334
 4777 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2688:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4778              		.loc 1 2688 17 view .LVU1335
 4779 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2687:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4780              		.loc 1 2687 28 view .LVU1336
 4781 003a 2380     		strh	r3, [r4]	@ movhi
 4782              	.LVL456:
 4783              	.L362:
2690:Core/Src/bno055.c ****         }
2691:Core/Src/bno055.c ****         else
2692:Core/Src/bno055.c ****         {
2693:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2694:Core/Src/bno055.c ****         }
2695:Core/Src/bno055.c ****     }
2696:Core/Src/bno055.c **** 
2697:Core/Src/bno055.c ****     return com_rslt;
2698:Core/Src/bno055.c **** }
 4784              		.loc 1 2698 1 view .LVU1337
 4785 003c 03B0     		add	sp, sp, #12
 4786              	.LCFI147:
 4787              		.cfi_remember_state
 4788              		.cfi_def_cfa_offset 12
 4789              		@ sp needed
 4790 003e 30BD     		pop	{r4, r5, pc}
 4791              	.LVL457:
 4792              	.L368:
 4793              	.LCFI148:
 4794              		.cfi_restore_state
2673:Core/Src/bno055.c ****         }
 4795              		.loc 1 2673 13 is_stmt 1 view .LVU1338
2673:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 138


 4796              		.loc 1 2673 23 is_stmt 0 view .LVU1339
 4797 0040 0020     		movs	r0, #0
 4798              	.LVL458:
2673:Core/Src/bno055.c ****         }
 4799              		.loc 1 2673 23 view .LVU1340
 4800 0042 FFF7FEFF 		bl	bno055_write_page_id
 4801              	.LVL459:
2675:Core/Src/bno055.c ****         {
 4802              		.loc 1 2675 9 is_stmt 1 view .LVU1341
2675:Core/Src/bno055.c ****         {
 4803              		.loc 1 2675 12 is_stmt 0 view .LVU1342
 4804 0046 0028     		cmp	r0, #0
 4805 0048 E9D0     		beq	.L364
 4806 004a E4E7     		b	.L363
 4807              	.LVL460:
 4808              	.L365:
2664:Core/Src/bno055.c ****     }
 4809              		.loc 1 2664 16 view .LVU1343
 4810 004c 6FF07E00 		mvn	r0, #126
 4811              	.LVL461:
2664:Core/Src/bno055.c ****     }
 4812              		.loc 1 2664 16 view .LVU1344
 4813 0050 F4E7     		b	.L362
 4814              	.LVL462:
 4815              	.L366:
2693:Core/Src/bno055.c ****         }
 4816              		.loc 1 2693 22 view .LVU1345
 4817 0052 4FF0FF30 		mov	r0, #-1
 4818 0056 F1E7     		b	.L362
 4819              	.L370:
 4820              		.align	2
 4821              	.L369:
 4822 0058 00000000 		.word	.LANCHOR0
 4823              		.cfi_endproc
 4824              	.LFE38:
 4826              		.section	.text.bno055_read_gravity_xyz,"ax",%progbits
 4827              		.align	1
 4828              		.global	bno055_read_gravity_xyz
 4829              		.syntax unified
 4830              		.thumb
 4831              		.thumb_func
 4832              		.fpu fpv4-sp-d16
 4834              	bno055_read_gravity_xyz:
 4835              	.LVL463:
 4836              	.LFB39:
2699:Core/Src/bno055.c **** 
2700:Core/Src/bno055.c **** /*!
2701:Core/Src/bno055.c ****  *  @brief This API reads gravity data xyz values
2702:Core/Src/bno055.c ****  *  from register 0x2E to 0x33 it is a six byte data
2703:Core/Src/bno055.c ****  *
2704:Core/Src/bno055.c ****  *
2705:Core/Src/bno055.c ****  *  @param gravity : The value of gravity xyz data's
2706:Core/Src/bno055.c ****  *
2707:Core/Src/bno055.c ****  *  Parameter |    result
2708:Core/Src/bno055.c ****  *  --------- | -----------------
2709:Core/Src/bno055.c ****  *   x        | The gravity x data
2710:Core/Src/bno055.c ****  *   y        | The gravity y data
ARM GAS  /tmp/ccWoU29M.s 			page 139


2711:Core/Src/bno055.c ****  *   z        | The gravity z data
2712:Core/Src/bno055.c ****  *
2713:Core/Src/bno055.c ****  *
2714:Core/Src/bno055.c ****  *  @return results of bus communication function
2715:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2716:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2717:Core/Src/bno055.c ****  *
2718:Core/Src/bno055.c ****  */
2719:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gravity_xyz(struct bno055_gravity_t *gravity)
2720:Core/Src/bno055.c **** {
 4837              		.loc 1 2720 1 is_stmt 1 view -0
 4838              		.cfi_startproc
 4839              		@ args = 0, pretend = 0, frame = 8
 4840              		@ frame_needed = 0, uses_anonymous_args = 0
 4841              		.loc 1 2720 1 is_stmt 0 view .LVU1347
 4842 0000 30B5     		push	{r4, r5, lr}
 4843              	.LCFI149:
 4844              		.cfi_def_cfa_offset 12
 4845              		.cfi_offset 4, -12
 4846              		.cfi_offset 5, -8
 4847              		.cfi_offset 14, -4
 4848 0002 83B0     		sub	sp, sp, #12
 4849              	.LCFI150:
 4850              		.cfi_def_cfa_offset 24
 4851 0004 0446     		mov	r4, r0
2721:Core/Src/bno055.c ****     /* Variable used to return value of
2722:Core/Src/bno055.c ****      * communication routine*/
2723:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4852              		.loc 1 2723 5 is_stmt 1 view .LVU1348
 4853              	.LVL464:
2724:Core/Src/bno055.c **** 
2725:Core/Src/bno055.c ****     /* Array holding the gravity xyz value
2726:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
2727:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
2728:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
2729:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
2730:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
2731:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
2732:Core/Src/bno055.c ****      */
2733:Core/Src/bno055.c ****     u8 data_u8[BNO055_GRAVITY_XYZ_DATA_SIZE] = {
 4854              		.loc 1 2733 5 view .LVU1349
 4855              		.loc 1 2733 8 is_stmt 0 view .LVU1350
 4856 0006 1D4B     		ldr	r3, .L379
 4857 0008 93E80300 		ldm	r3, {r0, r1}
 4858              	.LVL465:
 4859              		.loc 1 2733 8 view .LVU1351
 4860 000c 0090     		str	r0, [sp]
 4861 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
2734:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
2735:Core/Src/bno055.c ****     };
2736:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4862              		.loc 1 2736 5 is_stmt 1 view .LVU1352
 4863              	.LVL466:
2737:Core/Src/bno055.c **** 
2738:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2739:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4864              		.loc 1 2739 5 view .LVU1353
ARM GAS  /tmp/ccWoU29M.s 			page 140


 4865              		.loc 1 2739 18 is_stmt 0 view .LVU1354
 4866 0012 1B4B     		ldr	r3, .L379+4
 4867 0014 1B68     		ldr	r3, [r3]
 4868              		.loc 1 2739 8 view .LVU1355
 4869 0016 53B3     		cbz	r3, .L375
2740:Core/Src/bno055.c ****     {
2741:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2742:Core/Src/bno055.c ****     }
2743:Core/Src/bno055.c ****     else
2744:Core/Src/bno055.c ****     {
2745:Core/Src/bno055.c ****         /*condition check for page, chip id is
2746:Core/Src/bno055.c ****          * available in the page zero*/
2747:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4870              		.loc 1 2747 9 is_stmt 1 view .LVU1356
 4871              		.loc 1 2747 21 is_stmt 0 view .LVU1357
 4872 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4873              		.loc 1 2747 12 view .LVU1358
 4874 001a 13BB     		cbnz	r3, .L378
 4875              	.LVL467:
 4876              	.L373:
2748:Core/Src/bno055.c ****         {
2749:Core/Src/bno055.c ****             /* Write the page zero*/
2750:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2751:Core/Src/bno055.c ****         }
2752:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4877              		.loc 1 2752 53 discriminator 1 view .LVU1359
 4878 001c 184B     		ldr	r3, .L379+4
 4879 001e 1B68     		ldr	r3, [r3]
 4880 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4881              		.loc 1 2752 41 discriminator 1 view .LVU1360
 4882 0022 3BBB     		cbnz	r3, .L376
 4883              	.L374:
2753:Core/Src/bno055.c ****         {
2754:Core/Src/bno055.c ****             /* Read the six byte value
2755:Core/Src/bno055.c ****              * of gravity xyz data*/
2756:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4884              		.loc 1 2756 13 is_stmt 1 view .LVU1361
 4885              		.loc 1 2756 32 is_stmt 0 view .LVU1362
 4886 0024 164B     		ldr	r3, .L379+4
 4887 0026 1868     		ldr	r0, [r3]
 4888 0028 0569     		ldr	r5, [r0, #16]
 4889              		.loc 1 2756 24 view .LVU1363
 4890 002a 0623     		movs	r3, #6
 4891 002c 6A46     		mov	r2, sp
 4892 002e 2E21     		movs	r1, #46
 4893 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4894 0032 A847     		blx	r5
 4895              	.LVL468:
2757:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_DATA_X_LSB_VALUEX_REG,
2758:Core/Src/bno055.c ****                                                       data_u8,
2759:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_XYZ_DATA_SIZE);
2760:Core/Src/bno055.c **** 
2761:Core/Src/bno055.c ****             /* Data x*/
2762:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4896              		.loc 1 2762 13 is_stmt 1 view .LVU1364
2763:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_X_LSB_V
2764:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
ARM GAS  /tmp/ccWoU29M.s 			page 141


 4897              		.loc 1 2764 13 view .LVU1365
2765:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_X_MSB_V
2766:Core/Src/bno055.c ****             gravity->x =
 4898              		.loc 1 2766 13 view .LVU1366
2767:Core/Src/bno055.c ****                 (s16)(((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB]) << BNO055_SHIFT_EIGHT_BITS)
 4899              		.loc 1 2767 30 is_stmt 0 view .LVU1367
 4900 0034 9DF90120 		ldrsb	r2, [sp, #1]
2768:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 4901              		.loc 1 2768 31 view .LVU1368
 4902 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
2767:Core/Src/bno055.c ****                 (s16)(((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB]) << BNO055_SHIFT_EIGHT_BITS)
 4903              		.loc 1 2767 17 view .LVU1369
 4904 003c 43EA0223 		orr	r3, r3, r2, lsl #8
2766:Core/Src/bno055.c ****                 (s16)(((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB]) << BNO055_SHIFT_EIGHT_BITS)
 4905              		.loc 1 2766 24 view .LVU1370
 4906 0040 2380     		strh	r3, [r4]	@ movhi
2769:Core/Src/bno055.c **** 
2770:Core/Src/bno055.c ****             /* Data y*/
2771:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4907              		.loc 1 2771 13 is_stmt 1 view .LVU1371
2772:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_Y_LSB_V
2773:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4908              		.loc 1 2773 13 view .LVU1372
2774:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_Y_MSB_V
2775:Core/Src/bno055.c ****             gravity->y =
 4909              		.loc 1 2775 13 view .LVU1373
2776:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4910              		.loc 1 2776 31 is_stmt 0 view .LVU1374
 4911 0042 9DF90320 		ldrsb	r2, [sp, #3]
2777:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 4912              		.loc 1 2777 31 view .LVU1375
 4913 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
2776:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4914              		.loc 1 2776 17 view .LVU1376
 4915 004a 43EA0223 		orr	r3, r3, r2, lsl #8
2775:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4916              		.loc 1 2775 24 view .LVU1377
 4917 004e 6380     		strh	r3, [r4, #2]	@ movhi
2778:Core/Src/bno055.c **** 
2779:Core/Src/bno055.c ****             /* Data z*/
2780:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4918              		.loc 1 2780 13 is_stmt 1 view .LVU1378
2781:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_Z_LSB_V
2782:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4919              		.loc 1 2782 13 view .LVU1379
2783:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_Z_MSB_V
2784:Core/Src/bno055.c ****             gravity->z =
 4920              		.loc 1 2784 13 view .LVU1380
2785:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4921              		.loc 1 2785 31 is_stmt 0 view .LVU1381
 4922 0050 9DF90520 		ldrsb	r2, [sp, #5]
2786:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 4923              		.loc 1 2786 31 view .LVU1382
 4924 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2785:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4925              		.loc 1 2785 17 view .LVU1383
 4926 0058 43EA0223 		orr	r3, r3, r2, lsl #8
ARM GAS  /tmp/ccWoU29M.s 			page 142


2784:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4927              		.loc 1 2784 24 view .LVU1384
 4928 005c A380     		strh	r3, [r4, #4]	@ movhi
 4929              	.LVL469:
 4930              	.L372:
2787:Core/Src/bno055.c ****         }
2788:Core/Src/bno055.c ****         else
2789:Core/Src/bno055.c ****         {
2790:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2791:Core/Src/bno055.c ****         }
2792:Core/Src/bno055.c ****     }
2793:Core/Src/bno055.c **** 
2794:Core/Src/bno055.c ****     return com_rslt;
2795:Core/Src/bno055.c **** }
 4931              		.loc 1 2795 1 view .LVU1385
 4932 005e 03B0     		add	sp, sp, #12
 4933              	.LCFI151:
 4934              		.cfi_remember_state
 4935              		.cfi_def_cfa_offset 12
 4936              		@ sp needed
 4937 0060 30BD     		pop	{r4, r5, pc}
 4938              	.LVL470:
 4939              	.L378:
 4940              	.LCFI152:
 4941              		.cfi_restore_state
2750:Core/Src/bno055.c ****         }
 4942              		.loc 1 2750 13 is_stmt 1 view .LVU1386
2750:Core/Src/bno055.c ****         }
 4943              		.loc 1 2750 23 is_stmt 0 view .LVU1387
 4944 0062 0020     		movs	r0, #0
 4945 0064 FFF7FEFF 		bl	bno055_write_page_id
 4946              	.LVL471:
2752:Core/Src/bno055.c ****         {
 4947              		.loc 1 2752 9 is_stmt 1 view .LVU1388
2752:Core/Src/bno055.c ****         {
 4948              		.loc 1 2752 12 is_stmt 0 view .LVU1389
 4949 0068 0028     		cmp	r0, #0
 4950 006a DBD0     		beq	.L374
 4951 006c D6E7     		b	.L373
 4952              	.LVL472:
 4953              	.L375:
2741:Core/Src/bno055.c ****     }
 4954              		.loc 1 2741 16 view .LVU1390
 4955 006e 6FF07E00 		mvn	r0, #126
 4956 0072 F4E7     		b	.L372
 4957              	.LVL473:
 4958              	.L376:
2790:Core/Src/bno055.c ****         }
 4959              		.loc 1 2790 22 view .LVU1391
 4960 0074 4FF0FF30 		mov	r0, #-1
 4961 0078 F1E7     		b	.L372
 4962              	.L380:
 4963 007a 00BF     		.align	2
 4964              	.L379:
 4965 007c 00000000 		.word	.LANCHOR1
 4966 0080 00000000 		.word	.LANCHOR0
 4967              		.cfi_endproc
ARM GAS  /tmp/ccWoU29M.s 			page 143


 4968              	.LFE39:
 4970              		.section	.text.bno055_read_temp_data,"ax",%progbits
 4971              		.align	1
 4972              		.global	bno055_read_temp_data
 4973              		.syntax unified
 4974              		.thumb
 4975              		.thumb_func
 4976              		.fpu fpv4-sp-d16
 4978              	bno055_read_temp_data:
 4979              	.LVL474:
 4980              	.LFB40:
2796:Core/Src/bno055.c **** 
2797:Core/Src/bno055.c **** /*!
2798:Core/Src/bno055.c ****  *  @brief This API reads temperature values
2799:Core/Src/bno055.c ****  *  from register 0x33 it is a byte data
2800:Core/Src/bno055.c ****  *
2801:Core/Src/bno055.c ****  *  @param temp_s8 : The raw temperature data
2802:Core/Src/bno055.c ****  *
2803:Core/Src/bno055.c ****  *  @return results of bus communication function
2804:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2805:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2806:Core/Src/bno055.c ****  *
2807:Core/Src/bno055.c ****  *
2808:Core/Src/bno055.c ****  */
2809:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_temp_data(s8 *temp_s8)
2810:Core/Src/bno055.c **** {
 4981              		.loc 1 2810 1 is_stmt 1 view -0
 4982              		.cfi_startproc
 4983              		@ args = 0, pretend = 0, frame = 8
 4984              		@ frame_needed = 0, uses_anonymous_args = 0
 4985              		.loc 1 2810 1 is_stmt 0 view .LVU1393
 4986 0000 70B5     		push	{r4, r5, r6, lr}
 4987              	.LCFI153:
 4988              		.cfi_def_cfa_offset 16
 4989              		.cfi_offset 4, -16
 4990              		.cfi_offset 5, -12
 4991              		.cfi_offset 6, -8
 4992              		.cfi_offset 14, -4
 4993 0002 82B0     		sub	sp, sp, #8
 4994              	.LCFI154:
 4995              		.cfi_def_cfa_offset 24
2811:Core/Src/bno055.c ****     /* Variable used to return value of
2812:Core/Src/bno055.c ****      * communication routine*/
2813:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4996              		.loc 1 2813 5 is_stmt 1 view .LVU1394
 4997              	.LVL475:
2814:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 4998              		.loc 1 2814 5 view .LVU1395
 4999              		.loc 1 2814 8 is_stmt 0 view .LVU1396
 5000 0004 0023     		movs	r3, #0
 5001 0006 8DF80730 		strb	r3, [sp, #7]
2815:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 5002              		.loc 1 2815 5 is_stmt 1 view .LVU1397
 5003              	.LVL476:
2816:Core/Src/bno055.c **** 
2817:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2818:Core/Src/bno055.c ****     if (p_bno055 == NULL)
ARM GAS  /tmp/ccWoU29M.s 			page 144


 5004              		.loc 1 2818 5 view .LVU1398
 5005              		.loc 1 2818 18 is_stmt 0 view .LVU1399
 5006 000a 124B     		ldr	r3, .L389
 5007 000c 1B68     		ldr	r3, [r3]
 5008              		.loc 1 2818 8 view .LVU1400
 5009 000e D3B1     		cbz	r3, .L385
 5010 0010 0546     		mov	r5, r0
2819:Core/Src/bno055.c ****     {
2820:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2821:Core/Src/bno055.c ****     }
2822:Core/Src/bno055.c ****     else
2823:Core/Src/bno055.c ****     {
2824:Core/Src/bno055.c ****         /*condition check for page, chip id is
2825:Core/Src/bno055.c ****          * available in the page zero*/
2826:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 5011              		.loc 1 2826 9 is_stmt 1 view .LVU1401
 5012              		.loc 1 2826 21 is_stmt 0 view .LVU1402
 5013 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 5014              		.loc 1 2826 12 view .LVU1403
 5015 0014 8BB9     		cbnz	r3, .L388
 5016              	.LVL477:
 5017              	.L383:
2827:Core/Src/bno055.c ****         {
2828:Core/Src/bno055.c ****             /* Write the page zero*/
2829:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2830:Core/Src/bno055.c ****         }
2831:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 5018              		.loc 1 2831 53 discriminator 1 view .LVU1404
 5019 0016 0F4B     		ldr	r3, .L389
 5020 0018 1B68     		ldr	r3, [r3]
 5021 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 5022              		.loc 1 2831 41 discriminator 1 view .LVU1405
 5023 001c B3B9     		cbnz	r3, .L386
 5024              	.L384:
2832:Core/Src/bno055.c ****         {
2833:Core/Src/bno055.c ****             /* Read the raw temperature data */
2834:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 5025              		.loc 1 2834 13 is_stmt 1 view .LVU1406
 5026              		.loc 1 2834 32 is_stmt 0 view .LVU1407
 5027 001e 0D4B     		ldr	r3, .L389
 5028 0020 1C68     		ldr	r4, [r3]
 5029 0022 2669     		ldr	r6, [r4, #16]
 5030              		.loc 1 2834 24 view .LVU1408
 5031 0024 0123     		movs	r3, #1
 5032 0026 0DF10702 		add	r2, sp, #7
 5033 002a 3421     		movs	r1, #52
 5034 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 5035 002e B047     		blx	r6
 5036              	.LVL478:
2835:Core/Src/bno055.c ****                                                       BNO055_TEMP_REG,
2836:Core/Src/bno055.c ****                                                       &data_u8,
2837:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
2838:Core/Src/bno055.c ****             *temp_s8 = data_u8;
 5037              		.loc 1 2838 13 is_stmt 1 view .LVU1409
 5038              		.loc 1 2838 22 is_stmt 0 view .LVU1410
 5039 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 5040 0034 2B70     		strb	r3, [r5]
ARM GAS  /tmp/ccWoU29M.s 			page 145


 5041              	.LVL479:
 5042              	.L382:
2839:Core/Src/bno055.c ****         }
2840:Core/Src/bno055.c ****         else
2841:Core/Src/bno055.c ****         {
2842:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2843:Core/Src/bno055.c ****         }
2844:Core/Src/bno055.c ****     }
2845:Core/Src/bno055.c **** 
2846:Core/Src/bno055.c ****     return com_rslt;
2847:Core/Src/bno055.c **** }
 5043              		.loc 1 2847 1 view .LVU1411
 5044 0036 02B0     		add	sp, sp, #8
 5045              	.LCFI155:
 5046              		.cfi_remember_state
 5047              		.cfi_def_cfa_offset 16
 5048              		@ sp needed
 5049 0038 70BD     		pop	{r4, r5, r6, pc}
 5050              	.LVL480:
 5051              	.L388:
 5052              	.LCFI156:
 5053              		.cfi_restore_state
2829:Core/Src/bno055.c ****         }
 5054              		.loc 1 2829 13 is_stmt 1 view .LVU1412
2829:Core/Src/bno055.c ****         }
 5055              		.loc 1 2829 23 is_stmt 0 view .LVU1413
 5056 003a 0020     		movs	r0, #0
 5057              	.LVL481:
2829:Core/Src/bno055.c ****         }
 5058              		.loc 1 2829 23 view .LVU1414
 5059 003c FFF7FEFF 		bl	bno055_write_page_id
 5060              	.LVL482:
2831:Core/Src/bno055.c ****         {
 5061              		.loc 1 2831 9 is_stmt 1 view .LVU1415
2831:Core/Src/bno055.c ****         {
 5062              		.loc 1 2831 12 is_stmt 0 view .LVU1416
 5063 0040 0028     		cmp	r0, #0
 5064 0042 ECD0     		beq	.L384
 5065 0044 E7E7     		b	.L383
 5066              	.LVL483:
 5067              	.L385:
2820:Core/Src/bno055.c ****     }
 5068              		.loc 1 2820 16 view .LVU1417
 5069 0046 6FF07E00 		mvn	r0, #126
 5070              	.LVL484:
2820:Core/Src/bno055.c ****     }
 5071              		.loc 1 2820 16 view .LVU1418
 5072 004a F4E7     		b	.L382
 5073              	.LVL485:
 5074              	.L386:
2842:Core/Src/bno055.c ****         }
 5075              		.loc 1 2842 22 view .LVU1419
 5076 004c 4FF0FF30 		mov	r0, #-1
 5077 0050 F1E7     		b	.L382
 5078              	.L390:
 5079 0052 00BF     		.align	2
 5080              	.L389:
ARM GAS  /tmp/ccWoU29M.s 			page 146


 5081 0054 00000000 		.word	.LANCHOR0
 5082              		.cfi_endproc
 5083              	.LFE40:
 5085              		.global	__aeabi_i2d
 5086              		.global	__aeabi_dmul
 5087              		.global	__aeabi_d2f
 5088              		.section	.text.bno055_convert_float_mag_x_uT,"ax",%progbits
 5089              		.align	1
 5090              		.global	bno055_convert_float_mag_x_uT
 5091              		.syntax unified
 5092              		.thumb
 5093              		.thumb_func
 5094              		.fpu fpv4-sp-d16
 5096              	bno055_convert_float_mag_x_uT:
 5097              	.LVL486:
 5098              	.LFB49:
2848:Core/Src/bno055.c **** #ifdef  BNO055_FLOAT_ENABLE
2849:Core/Src/bno055.c **** 
2850:Core/Src/bno055.c **** /*!
2851:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
2852:Core/Src/bno055.c ****  *  to meterpersecseq output as float
2853:Core/Src/bno055.c ****  *
2854:Core/Src/bno055.c ****  *  @param accel_x_f : The accel x meterpersecseq data
2855:Core/Src/bno055.c ****  *
2856:Core/Src/bno055.c ****  *
2857:Core/Src/bno055.c ****  *
2858:Core/Src/bno055.c ****  *  @return results of bus communication function
2859:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2860:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2861:Core/Src/bno055.c ****  *
2862:Core/Src/bno055.c ****  *
2863:Core/Src/bno055.c ****  */
2864:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_x_msq(float *accel_x_f)
2865:Core/Src/bno055.c **** {
2866:Core/Src/bno055.c ****     /* Variable used to return value of
2867:Core/Src/bno055.c ****      * communication routine*/
2868:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
2869:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
2870:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
2871:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
2872:Core/Src/bno055.c **** 
2873:Core/Src/bno055.c ****     /* Read the current accel unit and set the
2874:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
2875:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
2876:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
2877:Core/Src/bno055.c ****     {
2878:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
2879:Core/Src/bno055.c ****     }
2880:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
2881:Core/Src/bno055.c ****     {
2882:Core/Src/bno055.c ****         /* Read the accel raw x data*/
2883:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_x(&reg_accel_x_s16);
2884:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
2885:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
2886:Core/Src/bno055.c ****         {
2887:Core/Src/bno055.c ****             /* Convert the raw accel x to m/s2*/
2888:Core/Src/bno055.c ****             data_f = (float)(reg_accel_x_s16 / BNO055_ACCEL_DIV_MSQ);
ARM GAS  /tmp/ccWoU29M.s 			page 147


2889:Core/Src/bno055.c ****             *accel_x_f = data_f;
2890:Core/Src/bno055.c ****         }
2891:Core/Src/bno055.c ****         else
2892:Core/Src/bno055.c ****         {
2893:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2894:Core/Src/bno055.c ****         }
2895:Core/Src/bno055.c ****     }
2896:Core/Src/bno055.c ****     else
2897:Core/Src/bno055.c ****     {
2898:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
2899:Core/Src/bno055.c ****     }
2900:Core/Src/bno055.c **** 
2901:Core/Src/bno055.c ****     return com_rslt;
2902:Core/Src/bno055.c **** }
2903:Core/Src/bno055.c **** 
2904:Core/Src/bno055.c **** /*!
2905:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
2906:Core/Src/bno055.c ****  *  to millig output as float
2907:Core/Src/bno055.c ****  *
2908:Core/Src/bno055.c ****  *  @param accel_x_f : The accel x millig data
2909:Core/Src/bno055.c ****  *
2910:Core/Src/bno055.c ****  *
2911:Core/Src/bno055.c ****  *
2912:Core/Src/bno055.c ****  *  @return results of bus communication function
2913:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2914:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2915:Core/Src/bno055.c ****  *
2916:Core/Src/bno055.c ****  *
2917:Core/Src/bno055.c ****  *
2918:Core/Src/bno055.c ****  */
2919:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_x_mg(float *accel_x_f)
2920:Core/Src/bno055.c **** {
2921:Core/Src/bno055.c ****     /* Variable used to return value of
2922:Core/Src/bno055.c ****      * communication routine*/
2923:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
2924:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
2925:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
2926:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
2927:Core/Src/bno055.c **** 
2928:Core/Src/bno055.c ****     /* Read the current accel unit and set the
2929:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
2930:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
2931:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
2932:Core/Src/bno055.c ****     {
2933:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
2934:Core/Src/bno055.c ****     }
2935:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
2936:Core/Src/bno055.c ****     {
2937:Core/Src/bno055.c ****         /* Read the accel raw x data*/
2938:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_x(&reg_accel_x_s16);
2939:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
2940:Core/Src/bno055.c ****         {
2941:Core/Src/bno055.c ****             /* Convert the raw accel x to m/s2*/
2942:Core/Src/bno055.c ****             data_f = (float)(reg_accel_x_s16 / BNO055_ACCEL_DIV_MG);
2943:Core/Src/bno055.c ****             *accel_x_f = data_f;
2944:Core/Src/bno055.c ****         }
2945:Core/Src/bno055.c ****         else
ARM GAS  /tmp/ccWoU29M.s 			page 148


2946:Core/Src/bno055.c ****         {
2947:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2948:Core/Src/bno055.c ****         }
2949:Core/Src/bno055.c ****     }
2950:Core/Src/bno055.c ****     else
2951:Core/Src/bno055.c ****     {
2952:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
2953:Core/Src/bno055.c ****     }
2954:Core/Src/bno055.c **** 
2955:Core/Src/bno055.c ****     return com_rslt;
2956:Core/Src/bno055.c **** }
2957:Core/Src/bno055.c **** 
2958:Core/Src/bno055.c **** /*!
2959:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
2960:Core/Src/bno055.c ****  *  to meterpersecseq output as float
2961:Core/Src/bno055.c ****  *
2962:Core/Src/bno055.c ****  *  @param accel_y_f : The accel y meterpersecseq data
2963:Core/Src/bno055.c ****  *
2964:Core/Src/bno055.c ****  *
2965:Core/Src/bno055.c ****  *
2966:Core/Src/bno055.c ****  *  @return results of bus communication function
2967:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2968:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2969:Core/Src/bno055.c ****  *
2970:Core/Src/bno055.c ****  *
2971:Core/Src/bno055.c ****  */
2972:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_y_msq(float *accel_y_f)
2973:Core/Src/bno055.c **** {
2974:Core/Src/bno055.c ****     /* Variable used to return value of
2975:Core/Src/bno055.c ****      * communication routine*/
2976:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
2977:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
2978:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
2979:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
2980:Core/Src/bno055.c **** 
2981:Core/Src/bno055.c ****     /* Read the current accel unit and set the
2982:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
2983:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
2984:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
2985:Core/Src/bno055.c ****     {
2986:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
2987:Core/Src/bno055.c ****     }
2988:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
2989:Core/Src/bno055.c ****     {
2990:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_y(&reg_accel_y_s16);
2991:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
2992:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
2993:Core/Src/bno055.c ****         {
2994:Core/Src/bno055.c ****             /* Convert the raw accel y to m/s2*/
2995:Core/Src/bno055.c ****             data_f = (float)(reg_accel_y_s16 / BNO055_ACCEL_DIV_MSQ);
2996:Core/Src/bno055.c ****             *accel_y_f = data_f;
2997:Core/Src/bno055.c ****         }
2998:Core/Src/bno055.c ****         else
2999:Core/Src/bno055.c ****         {
3000:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3001:Core/Src/bno055.c ****         }
3002:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 149


3003:Core/Src/bno055.c ****     else
3004:Core/Src/bno055.c ****     {
3005:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3006:Core/Src/bno055.c ****     }
3007:Core/Src/bno055.c **** 
3008:Core/Src/bno055.c ****     return com_rslt;
3009:Core/Src/bno055.c **** }
3010:Core/Src/bno055.c **** 
3011:Core/Src/bno055.c **** /*!
3012:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel y raw data
3013:Core/Src/bno055.c ****  *  to millig output as float
3014:Core/Src/bno055.c ****  *
3015:Core/Src/bno055.c ****  *  @param accel_y_f : The accel y millig data
3016:Core/Src/bno055.c ****  *
3017:Core/Src/bno055.c ****  *
3018:Core/Src/bno055.c ****  *
3019:Core/Src/bno055.c ****  *  @return results of bus communication function
3020:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3021:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3022:Core/Src/bno055.c ****  *
3023:Core/Src/bno055.c ****  */
3024:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_y_mg(float *accel_y_f)
3025:Core/Src/bno055.c **** {
3026:Core/Src/bno055.c ****     /* Variable used to return value of
3027:Core/Src/bno055.c ****      * communication routine*/
3028:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3029:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
3030:Core/Src/bno055.c ****     float data = BNO055_INIT_VALUE;
3031:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
3032:Core/Src/bno055.c **** 
3033:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3034:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
3035:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
3036:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
3037:Core/Src/bno055.c ****     {
3038:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
3039:Core/Src/bno055.c ****     }
3040:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3041:Core/Src/bno055.c ****     {
3042:Core/Src/bno055.c ****         /* Read the accel raw z data*/
3043:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_y(&reg_accel_y_s16);
3044:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3045:Core/Src/bno055.c ****         {
3046:Core/Src/bno055.c ****             /* Convert the raw accel z to mg*/
3047:Core/Src/bno055.c ****             data = (float)(reg_accel_y_s16 / BNO055_ACCEL_DIV_MG);
3048:Core/Src/bno055.c ****             *accel_y_f = data;
3049:Core/Src/bno055.c ****         }
3050:Core/Src/bno055.c ****         else
3051:Core/Src/bno055.c ****         {
3052:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3053:Core/Src/bno055.c ****         }
3054:Core/Src/bno055.c ****     }
3055:Core/Src/bno055.c ****     else
3056:Core/Src/bno055.c ****     {
3057:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3058:Core/Src/bno055.c ****     }
3059:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 150


3060:Core/Src/bno055.c ****     return com_rslt;
3061:Core/Src/bno055.c **** }
3062:Core/Src/bno055.c **** 
3063:Core/Src/bno055.c **** /*!
3064:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel z raw data
3065:Core/Src/bno055.c ****  *  to meterpersecseq output as float
3066:Core/Src/bno055.c ****  *
3067:Core/Src/bno055.c ****  *  @param accel_z_f : The accel z meterpersecseq data
3068:Core/Src/bno055.c ****  *
3069:Core/Src/bno055.c ****  *
3070:Core/Src/bno055.c ****  *
3071:Core/Src/bno055.c ****  *  @return results of bus communication function
3072:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3073:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3074:Core/Src/bno055.c ****  *
3075:Core/Src/bno055.c ****  *
3076:Core/Src/bno055.c ****  */
3077:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_z_msq(float *accel_z_f)
3078:Core/Src/bno055.c **** {
3079:Core/Src/bno055.c ****     /* Variable used to return value of
3080:Core/Src/bno055.c ****      * communication routine*/
3081:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3082:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
3083:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3084:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
3085:Core/Src/bno055.c **** 
3086:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3087:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
3088:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
3089:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
3090:Core/Src/bno055.c ****     {
3091:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
3092:Core/Src/bno055.c ****     }
3093:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3094:Core/Src/bno055.c ****     {
3095:Core/Src/bno055.c ****         /* Read the accel raw z data*/
3096:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_z(&reg_accel_z_s16);
3097:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
3098:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3099:Core/Src/bno055.c ****         {
3100:Core/Src/bno055.c ****             /* Convert the raw accel z to m/s2*/
3101:Core/Src/bno055.c ****             data_f = (float)(reg_accel_z_s16 / BNO055_ACCEL_DIV_MSQ);
3102:Core/Src/bno055.c ****             *accel_z_f = data_f;
3103:Core/Src/bno055.c ****         }
3104:Core/Src/bno055.c ****         else
3105:Core/Src/bno055.c ****         {
3106:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3107:Core/Src/bno055.c ****         }
3108:Core/Src/bno055.c ****     }
3109:Core/Src/bno055.c ****     else
3110:Core/Src/bno055.c ****     {
3111:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3112:Core/Src/bno055.c ****     }
3113:Core/Src/bno055.c **** 
3114:Core/Src/bno055.c ****     return com_rslt;
3115:Core/Src/bno055.c **** }
3116:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 151


3117:Core/Src/bno055.c **** /*!
3118:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel z raw data
3119:Core/Src/bno055.c ****  *  to millig output as float
3120:Core/Src/bno055.c ****  *
3121:Core/Src/bno055.c ****  *  @param accel_z_f : The accel z millig data
3122:Core/Src/bno055.c ****  *
3123:Core/Src/bno055.c ****  *
3124:Core/Src/bno055.c ****  *
3125:Core/Src/bno055.c ****  *  @return results of bus communication function
3126:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3127:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3128:Core/Src/bno055.c ****  *
3129:Core/Src/bno055.c ****  *
3130:Core/Src/bno055.c ****  */
3131:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_z_mg(float *accel_z_f)
3132:Core/Src/bno055.c **** {
3133:Core/Src/bno055.c ****     /* Variable used to return value of
3134:Core/Src/bno055.c ****      * communication routine*/
3135:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3136:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
3137:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3138:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
3139:Core/Src/bno055.c **** 
3140:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3141:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2 */
3142:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
3143:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
3144:Core/Src/bno055.c ****     {
3145:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
3146:Core/Src/bno055.c ****     }
3147:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3148:Core/Src/bno055.c ****     {
3149:Core/Src/bno055.c ****         /* Read the accel raw z data*/
3150:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_z(&reg_accel_z_s16);
3151:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3152:Core/Src/bno055.c ****         {
3153:Core/Src/bno055.c ****             /* Convert the raw accel x to mg*/
3154:Core/Src/bno055.c ****             data_f = (float)(reg_accel_z_s16 / BNO055_ACCEL_DIV_MG);
3155:Core/Src/bno055.c ****             *accel_z_f = data_f;
3156:Core/Src/bno055.c ****         }
3157:Core/Src/bno055.c ****         else
3158:Core/Src/bno055.c ****         {
3159:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3160:Core/Src/bno055.c ****         }
3161:Core/Src/bno055.c ****     }
3162:Core/Src/bno055.c ****     else
3163:Core/Src/bno055.c ****     {
3164:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3165:Core/Src/bno055.c ****     }
3166:Core/Src/bno055.c **** 
3167:Core/Src/bno055.c ****     return com_rslt;
3168:Core/Src/bno055.c **** }
3169:Core/Src/bno055.c **** 
3170:Core/Src/bno055.c **** /*!
3171:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel xyz raw data
3172:Core/Src/bno055.c ****  *  to meterpersecseq output as float
3173:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 152


3174:Core/Src/bno055.c ****  *  @param accel_xyz : The meterpersecseq data of accel xyz
3175:Core/Src/bno055.c ****  *
3176:Core/Src/bno055.c ****  *  Parameter |    result
3177:Core/Src/bno055.c ****  *  --------- | -----------------
3178:Core/Src/bno055.c ****  *   x        | meterpersecseq data of accel
3179:Core/Src/bno055.c ****  *   y        | meterpersecseq data of accel
3180:Core/Src/bno055.c ****  *   z        | meterpersecseq data of accel
3181:Core/Src/bno055.c ****  *
3182:Core/Src/bno055.c ****  *  @return results of bus communication function
3183:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3184:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3185:Core/Src/bno055.c ****  *
3186:Core/Src/bno055.c ****  *
3187:Core/Src/bno055.c ****  */
3188:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_xyz_msq(struct bno055_accel_float_t *accel_x
3189:Core/Src/bno055.c **** {
3190:Core/Src/bno055.c ****     /* Variable used to return value of
3191:Core/Src/bno055.c ****      * communication routine*/
3192:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3193:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
3194:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
3195:Core/Src/bno055.c **** 
3196:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3197:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
3198:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
3199:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
3200:Core/Src/bno055.c ****     {
3201:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
3202:Core/Src/bno055.c ****     }
3203:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3204:Core/Src/bno055.c ****     {
3205:Core/Src/bno055.c ****         /* Read the accel raw xyz data*/
3206:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_xyz(&reg_accel_xyz);
3207:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3208:Core/Src/bno055.c ****         {
3209:Core/Src/bno055.c ****             /* Convert the accel raw xyz to meterpersecseq*/
3210:Core/Src/bno055.c ****             accel_xyz->x = (float)(reg_accel_xyz.x / BNO055_ACCEL_DIV_MSQ);
3211:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
3212:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
3213:Core/Src/bno055.c ****         }
3214:Core/Src/bno055.c ****         else
3215:Core/Src/bno055.c ****         {
3216:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3217:Core/Src/bno055.c ****         }
3218:Core/Src/bno055.c ****     }
3219:Core/Src/bno055.c ****     else
3220:Core/Src/bno055.c ****     {
3221:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3222:Core/Src/bno055.c ****     }
3223:Core/Src/bno055.c **** 
3224:Core/Src/bno055.c ****     return com_rslt;
3225:Core/Src/bno055.c **** }
3226:Core/Src/bno055.c **** 
3227:Core/Src/bno055.c **** /*!
3228:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel xyz raw data
3229:Core/Src/bno055.c ****  *  to millig output as float
3230:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 153


3231:Core/Src/bno055.c ****  *  @param accel_xyz : The millig data of accel xyz
3232:Core/Src/bno055.c ****  *
3233:Core/Src/bno055.c ****  *  Parameter |    result
3234:Core/Src/bno055.c ****  *  --------- | -----------------
3235:Core/Src/bno055.c ****  *   x        | millig data of accel
3236:Core/Src/bno055.c ****  *   y        | millig data of accel
3237:Core/Src/bno055.c ****  *   z        | millig data of accel
3238:Core/Src/bno055.c ****  *
3239:Core/Src/bno055.c ****  *
3240:Core/Src/bno055.c ****  *  @return results of bus communication function
3241:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3242:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3243:Core/Src/bno055.c ****  *
3244:Core/Src/bno055.c ****  *
3245:Core/Src/bno055.c ****  */
3246:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_xyz_mg(struct bno055_accel_float_t *accel_xy
3247:Core/Src/bno055.c **** {
3248:Core/Src/bno055.c ****     /* Variable used to return value of
3249:Core/Src/bno055.c ****      * communication routine*/
3250:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3251:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
3252:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
3253:Core/Src/bno055.c **** 
3254:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3255:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
3256:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
3257:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
3258:Core/Src/bno055.c ****     {
3259:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
3260:Core/Src/bno055.c ****     }
3261:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3262:Core/Src/bno055.c ****     {
3263:Core/Src/bno055.c ****         /* Read the accel raw y data*/
3264:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_xyz(&reg_accel_xyz);
3265:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3266:Core/Src/bno055.c ****         {
3267:Core/Src/bno055.c ****             /*Convert the accel raw xyz to millig */
3268:Core/Src/bno055.c ****             accel_xyz->x = (float)(reg_accel_xyz.x / BNO055_ACCEL_DIV_MG);
3269:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
3270:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
3271:Core/Src/bno055.c ****         }
3272:Core/Src/bno055.c ****         else
3273:Core/Src/bno055.c ****         {
3274:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3275:Core/Src/bno055.c ****         }
3276:Core/Src/bno055.c ****     }
3277:Core/Src/bno055.c ****     else
3278:Core/Src/bno055.c ****     {
3279:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3280:Core/Src/bno055.c ****     }
3281:Core/Src/bno055.c **** 
3282:Core/Src/bno055.c ****     return com_rslt;
3283:Core/Src/bno055.c **** }
3284:Core/Src/bno055.c **** 
3285:Core/Src/bno055.c **** /*!
3286:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag x raw data
3287:Core/Src/bno055.c ****  *  to microTesla output as float
ARM GAS  /tmp/ccWoU29M.s 			page 154


3288:Core/Src/bno055.c ****  *
3289:Core/Src/bno055.c ****  *  @param mag_x_f : The mag x microTesla data
3290:Core/Src/bno055.c ****  *
3291:Core/Src/bno055.c ****  *
3292:Core/Src/bno055.c ****  *
3293:Core/Src/bno055.c ****  *  @return results of bus communication function
3294:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3295:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3296:Core/Src/bno055.c ****  *
3297:Core/Src/bno055.c ****  *
3298:Core/Src/bno055.c ****  */
3299:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_mag_x_uT(float *mag_x_f)
3300:Core/Src/bno055.c **** {
 5099              		.loc 1 3300 1 is_stmt 1 view -0
 5100              		.cfi_startproc
 5101              		@ args = 0, pretend = 0, frame = 8
 5102              		@ frame_needed = 0, uses_anonymous_args = 0
 5103              		.loc 1 3300 1 is_stmt 0 view .LVU1421
 5104 0000 30B5     		push	{r4, r5, lr}
 5105              	.LCFI157:
 5106              		.cfi_def_cfa_offset 12
 5107              		.cfi_offset 4, -12
 5108              		.cfi_offset 5, -8
 5109              		.cfi_offset 14, -4
 5110 0002 83B0     		sub	sp, sp, #12
 5111              	.LCFI158:
 5112              		.cfi_def_cfa_offset 24
 5113 0004 0446     		mov	r4, r0
3301:Core/Src/bno055.c ****     /* Variable used to return value of
3302:Core/Src/bno055.c ****      * communication routine*/
3303:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5114              		.loc 1 3303 5 is_stmt 1 view .LVU1422
 5115              	.LVL487:
3304:Core/Src/bno055.c ****     s16 reg_mag_x_s16 = BNO055_INIT_VALUE;
 5116              		.loc 1 3304 5 view .LVU1423
 5117              		.loc 1 3304 9 is_stmt 0 view .LVU1424
 5118 0006 0023     		movs	r3, #0
 5119 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3305:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5120              		.loc 1 3305 5 is_stmt 1 view .LVU1425
 5121              	.LVL488:
3306:Core/Src/bno055.c **** 
3307:Core/Src/bno055.c ****     /* Read raw mag x data */
3308:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_x(&reg_mag_x_s16);
 5122              		.loc 1 3308 5 view .LVU1426
 5123              		.loc 1 3308 16 is_stmt 0 view .LVU1427
 5124 000c 0DF10600 		add	r0, sp, #6
 5125              	.LVL489:
 5126              		.loc 1 3308 16 view .LVU1428
 5127 0010 FFF7FEFF 		bl	bno055_read_mag_x
 5128              	.LVL490:
3309:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5129              		.loc 1 3309 5 is_stmt 1 view .LVU1429
 5130              		.loc 1 3309 8 is_stmt 0 view .LVU1430
 5131 0014 70B9     		cbnz	r0, .L393
 5132 0016 0546     		mov	r5, r0
3310:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccWoU29M.s 			page 155


3311:Core/Src/bno055.c ****         /* Convert the raw mag x to microTesla*/
3312:Core/Src/bno055.c ****         data_f = (float)(reg_mag_x_s16 / BNO055_MAG_DIV_UT);
 5133              		.loc 1 3312 9 is_stmt 1 view .LVU1431
 5134              		.loc 1 3312 40 is_stmt 0 view .LVU1432
 5135 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5136              	.LVL491:
 5137              		.loc 1 3312 40 view .LVU1433
 5138 001c FFF7FEFF 		bl	__aeabi_i2d
 5139              	.LVL492:
 5140 0020 0022     		movs	r2, #0
 5141 0022 064B     		ldr	r3, .L395
 5142 0024 FFF7FEFF 		bl	__aeabi_dmul
 5143              	.LVL493:
 5144              		.loc 1 3312 16 view .LVU1434
 5145 0028 FFF7FEFF 		bl	__aeabi_d2f
 5146              	.LVL494:
3313:Core/Src/bno055.c ****         *mag_x_f = data_f;
 5147              		.loc 1 3313 9 is_stmt 1 view .LVU1435
 5148              		.loc 1 3313 18 is_stmt 0 view .LVU1436
 5149 002c 2060     		str	r0, [r4]	@ float
 5150              	.LVL495:
 5151              	.L392:
3314:Core/Src/bno055.c ****     }
3315:Core/Src/bno055.c ****     else
3316:Core/Src/bno055.c ****     {
3317:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3318:Core/Src/bno055.c ****     }
3319:Core/Src/bno055.c **** 
3320:Core/Src/bno055.c ****     return com_rslt;
 5152              		.loc 1 3320 5 is_stmt 1 view .LVU1437
3321:Core/Src/bno055.c **** }
 5153              		.loc 1 3321 1 is_stmt 0 view .LVU1438
 5154 002e 2846     		mov	r0, r5
 5155 0030 03B0     		add	sp, sp, #12
 5156              	.LCFI159:
 5157              		.cfi_remember_state
 5158              		.cfi_def_cfa_offset 12
 5159              		@ sp needed
 5160 0032 30BD     		pop	{r4, r5, pc}
 5161              	.LVL496:
 5162              	.L393:
 5163              	.LCFI160:
 5164              		.cfi_restore_state
3317:Core/Src/bno055.c ****     }
 5165              		.loc 1 3317 18 view .LVU1439
 5166 0034 4FF0FF35 		mov	r5, #-1
 5167 0038 F9E7     		b	.L392
 5168              	.L396:
 5169 003a 00BF     		.align	2
 5170              	.L395:
 5171 003c 0000B03F 		.word	1068498944
 5172              		.cfi_endproc
 5173              	.LFE49:
 5175              		.section	.text.bno055_convert_float_mag_y_uT,"ax",%progbits
 5176              		.align	1
 5177              		.global	bno055_convert_float_mag_y_uT
 5178              		.syntax unified
ARM GAS  /tmp/ccWoU29M.s 			page 156


 5179              		.thumb
 5180              		.thumb_func
 5181              		.fpu fpv4-sp-d16
 5183              	bno055_convert_float_mag_y_uT:
 5184              	.LVL497:
 5185              	.LFB50:
3322:Core/Src/bno055.c **** 
3323:Core/Src/bno055.c **** /*!
3324:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag y raw data
3325:Core/Src/bno055.c ****  *  to microTesla output as float
3326:Core/Src/bno055.c ****  *
3327:Core/Src/bno055.c ****  *  @param mag_y_f : The mag y microTesla data
3328:Core/Src/bno055.c ****  *
3329:Core/Src/bno055.c ****  *
3330:Core/Src/bno055.c ****  *
3331:Core/Src/bno055.c ****  *  @return results of bus communication function
3332:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3333:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3334:Core/Src/bno055.c ****  *
3335:Core/Src/bno055.c ****  */
3336:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_mag_y_uT(float *mag_y_f)
3337:Core/Src/bno055.c **** {
 5186              		.loc 1 3337 1 is_stmt 1 view -0
 5187              		.cfi_startproc
 5188              		@ args = 0, pretend = 0, frame = 8
 5189              		@ frame_needed = 0, uses_anonymous_args = 0
 5190              		.loc 1 3337 1 is_stmt 0 view .LVU1441
 5191 0000 30B5     		push	{r4, r5, lr}
 5192              	.LCFI161:
 5193              		.cfi_def_cfa_offset 12
 5194              		.cfi_offset 4, -12
 5195              		.cfi_offset 5, -8
 5196              		.cfi_offset 14, -4
 5197 0002 83B0     		sub	sp, sp, #12
 5198              	.LCFI162:
 5199              		.cfi_def_cfa_offset 24
 5200 0004 0446     		mov	r4, r0
3338:Core/Src/bno055.c ****     /* Variable used to return value of
3339:Core/Src/bno055.c ****      * communication routine*/
3340:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5201              		.loc 1 3340 5 is_stmt 1 view .LVU1442
 5202              	.LVL498:
3341:Core/Src/bno055.c ****     s16 reg_mag_y_s16 = BNO055_INIT_VALUE;
 5203              		.loc 1 3341 5 view .LVU1443
 5204              		.loc 1 3341 9 is_stmt 0 view .LVU1444
 5205 0006 0023     		movs	r3, #0
 5206 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3342:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5207              		.loc 1 3342 5 is_stmt 1 view .LVU1445
 5208              	.LVL499:
3343:Core/Src/bno055.c **** 
3344:Core/Src/bno055.c ****     /* Read raw mag y data */
3345:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_y(&reg_mag_y_s16);
 5209              		.loc 1 3345 5 view .LVU1446
 5210              		.loc 1 3345 16 is_stmt 0 view .LVU1447
 5211 000c 0DF10600 		add	r0, sp, #6
 5212              	.LVL500:
ARM GAS  /tmp/ccWoU29M.s 			page 157


 5213              		.loc 1 3345 16 view .LVU1448
 5214 0010 FFF7FEFF 		bl	bno055_read_mag_y
 5215              	.LVL501:
3346:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5216              		.loc 1 3346 5 is_stmt 1 view .LVU1449
 5217              		.loc 1 3346 8 is_stmt 0 view .LVU1450
 5218 0014 70B9     		cbnz	r0, .L399
 5219 0016 0546     		mov	r5, r0
3347:Core/Src/bno055.c ****     {
3348:Core/Src/bno055.c ****         /* Convert the raw mag y to microTesla*/
3349:Core/Src/bno055.c ****         data_f = (float)(reg_mag_y_s16 / BNO055_MAG_DIV_UT);
 5220              		.loc 1 3349 9 is_stmt 1 view .LVU1451
 5221              		.loc 1 3349 40 is_stmt 0 view .LVU1452
 5222 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5223              	.LVL502:
 5224              		.loc 1 3349 40 view .LVU1453
 5225 001c FFF7FEFF 		bl	__aeabi_i2d
 5226              	.LVL503:
 5227 0020 0022     		movs	r2, #0
 5228 0022 064B     		ldr	r3, .L401
 5229 0024 FFF7FEFF 		bl	__aeabi_dmul
 5230              	.LVL504:
 5231              		.loc 1 3349 16 view .LVU1454
 5232 0028 FFF7FEFF 		bl	__aeabi_d2f
 5233              	.LVL505:
3350:Core/Src/bno055.c ****         *mag_y_f = data_f;
 5234              		.loc 1 3350 9 is_stmt 1 view .LVU1455
 5235              		.loc 1 3350 18 is_stmt 0 view .LVU1456
 5236 002c 2060     		str	r0, [r4]	@ float
 5237              	.LVL506:
 5238              	.L398:
3351:Core/Src/bno055.c ****     }
3352:Core/Src/bno055.c ****     else
3353:Core/Src/bno055.c ****     {
3354:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3355:Core/Src/bno055.c ****     }
3356:Core/Src/bno055.c **** 
3357:Core/Src/bno055.c ****     return com_rslt;
 5239              		.loc 1 3357 5 is_stmt 1 view .LVU1457
3358:Core/Src/bno055.c **** }
 5240              		.loc 1 3358 1 is_stmt 0 view .LVU1458
 5241 002e 2846     		mov	r0, r5
 5242 0030 03B0     		add	sp, sp, #12
 5243              	.LCFI163:
 5244              		.cfi_remember_state
 5245              		.cfi_def_cfa_offset 12
 5246              		@ sp needed
 5247 0032 30BD     		pop	{r4, r5, pc}
 5248              	.LVL507:
 5249              	.L399:
 5250              	.LCFI164:
 5251              		.cfi_restore_state
3354:Core/Src/bno055.c ****     }
 5252              		.loc 1 3354 18 view .LVU1459
 5253 0034 4FF0FF35 		mov	r5, #-1
 5254 0038 F9E7     		b	.L398
 5255              	.L402:
ARM GAS  /tmp/ccWoU29M.s 			page 158


 5256 003a 00BF     		.align	2
 5257              	.L401:
 5258 003c 0000B03F 		.word	1068498944
 5259              		.cfi_endproc
 5260              	.LFE50:
 5262              		.section	.text.bno055_convert_float_mag_z_uT,"ax",%progbits
 5263              		.align	1
 5264              		.global	bno055_convert_float_mag_z_uT
 5265              		.syntax unified
 5266              		.thumb
 5267              		.thumb_func
 5268              		.fpu fpv4-sp-d16
 5270              	bno055_convert_float_mag_z_uT:
 5271              	.LVL508:
 5272              	.LFB51:
3359:Core/Src/bno055.c **** 
3360:Core/Src/bno055.c **** /*!
3361:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag z raw data
3362:Core/Src/bno055.c ****  *  to microTesla output as float
3363:Core/Src/bno055.c ****  *
3364:Core/Src/bno055.c ****  *  @param mag_z_f : The mag z microTesla data
3365:Core/Src/bno055.c ****  *
3366:Core/Src/bno055.c ****  *
3367:Core/Src/bno055.c ****  *
3368:Core/Src/bno055.c ****  *  @return results of bus communication function
3369:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3370:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3371:Core/Src/bno055.c ****  *
3372:Core/Src/bno055.c ****  */
3373:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_mag_z_uT(float *mag_z_f)
3374:Core/Src/bno055.c **** {
 5273              		.loc 1 3374 1 is_stmt 1 view -0
 5274              		.cfi_startproc
 5275              		@ args = 0, pretend = 0, frame = 8
 5276              		@ frame_needed = 0, uses_anonymous_args = 0
 5277              		.loc 1 3374 1 is_stmt 0 view .LVU1461
 5278 0000 30B5     		push	{r4, r5, lr}
 5279              	.LCFI165:
 5280              		.cfi_def_cfa_offset 12
 5281              		.cfi_offset 4, -12
 5282              		.cfi_offset 5, -8
 5283              		.cfi_offset 14, -4
 5284 0002 83B0     		sub	sp, sp, #12
 5285              	.LCFI166:
 5286              		.cfi_def_cfa_offset 24
 5287 0004 0446     		mov	r4, r0
3375:Core/Src/bno055.c ****     /* Variable used to return value of
3376:Core/Src/bno055.c ****      * communication routine*/
3377:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5288              		.loc 1 3377 5 is_stmt 1 view .LVU1462
 5289              	.LVL509:
3378:Core/Src/bno055.c ****     s16 reg_mag_z_s16 = BNO055_INIT_VALUE;
 5290              		.loc 1 3378 5 view .LVU1463
 5291              		.loc 1 3378 9 is_stmt 0 view .LVU1464
 5292 0006 0023     		movs	r3, #0
 5293 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3379:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccWoU29M.s 			page 159


 5294              		.loc 1 3379 5 is_stmt 1 view .LVU1465
 5295              	.LVL510:
3380:Core/Src/bno055.c **** 
3381:Core/Src/bno055.c ****     /* Read raw mag z data */
3382:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_z(&reg_mag_z_s16);
 5296              		.loc 1 3382 5 view .LVU1466
 5297              		.loc 1 3382 16 is_stmt 0 view .LVU1467
 5298 000c 0DF10600 		add	r0, sp, #6
 5299              	.LVL511:
 5300              		.loc 1 3382 16 view .LVU1468
 5301 0010 FFF7FEFF 		bl	bno055_read_mag_z
 5302              	.LVL512:
3383:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5303              		.loc 1 3383 5 is_stmt 1 view .LVU1469
 5304              		.loc 1 3383 8 is_stmt 0 view .LVU1470
 5305 0014 70B9     		cbnz	r0, .L405
 5306 0016 0546     		mov	r5, r0
3384:Core/Src/bno055.c ****     {
3385:Core/Src/bno055.c ****         /* Convert the raw mag z to microTesla*/
3386:Core/Src/bno055.c ****         data_f = (float)(reg_mag_z_s16 / BNO055_MAG_DIV_UT);
 5307              		.loc 1 3386 9 is_stmt 1 view .LVU1471
 5308              		.loc 1 3386 40 is_stmt 0 view .LVU1472
 5309 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5310              	.LVL513:
 5311              		.loc 1 3386 40 view .LVU1473
 5312 001c FFF7FEFF 		bl	__aeabi_i2d
 5313              	.LVL514:
 5314 0020 0022     		movs	r2, #0
 5315 0022 064B     		ldr	r3, .L407
 5316 0024 FFF7FEFF 		bl	__aeabi_dmul
 5317              	.LVL515:
 5318              		.loc 1 3386 16 view .LVU1474
 5319 0028 FFF7FEFF 		bl	__aeabi_d2f
 5320              	.LVL516:
3387:Core/Src/bno055.c ****         *mag_z_f = data_f;
 5321              		.loc 1 3387 9 is_stmt 1 view .LVU1475
 5322              		.loc 1 3387 18 is_stmt 0 view .LVU1476
 5323 002c 2060     		str	r0, [r4]	@ float
 5324              	.LVL517:
 5325              	.L404:
3388:Core/Src/bno055.c ****     }
3389:Core/Src/bno055.c ****     else
3390:Core/Src/bno055.c ****     {
3391:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3392:Core/Src/bno055.c ****     }
3393:Core/Src/bno055.c **** 
3394:Core/Src/bno055.c ****     return com_rslt;
 5326              		.loc 1 3394 5 is_stmt 1 view .LVU1477
3395:Core/Src/bno055.c **** }
 5327              		.loc 1 3395 1 is_stmt 0 view .LVU1478
 5328 002e 2846     		mov	r0, r5
 5329 0030 03B0     		add	sp, sp, #12
 5330              	.LCFI167:
 5331              		.cfi_remember_state
 5332              		.cfi_def_cfa_offset 12
 5333              		@ sp needed
 5334 0032 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccWoU29M.s 			page 160


 5335              	.LVL518:
 5336              	.L405:
 5337              	.LCFI168:
 5338              		.cfi_restore_state
3391:Core/Src/bno055.c ****     }
 5339              		.loc 1 3391 18 view .LVU1479
 5340 0034 4FF0FF35 		mov	r5, #-1
 5341 0038 F9E7     		b	.L404
 5342              	.L408:
 5343 003a 00BF     		.align	2
 5344              	.L407:
 5345 003c 0000B03F 		.word	1068498944
 5346              		.cfi_endproc
 5347              	.LFE51:
 5349              		.section	.text.bno055_convert_float_mag_xyz_uT,"ax",%progbits
 5350              		.align	1
 5351              		.global	bno055_convert_float_mag_xyz_uT
 5352              		.syntax unified
 5353              		.thumb
 5354              		.thumb_func
 5355              		.fpu fpv4-sp-d16
 5357              	bno055_convert_float_mag_xyz_uT:
 5358              	.LVL519:
 5359              	.LFB52:
3396:Core/Src/bno055.c **** 
3397:Core/Src/bno055.c **** /*!
3398:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag yz raw data
3399:Core/Src/bno055.c ****  *  to microTesla output as float
3400:Core/Src/bno055.c ****  *
3401:Core/Src/bno055.c ****  *  @param mag_xyz_data : The microTesla data of mag xyz
3402:Core/Src/bno055.c ****  *
3403:Core/Src/bno055.c ****  *  Parameter |    result
3404:Core/Src/bno055.c ****  *  --------- | -----------------
3405:Core/Src/bno055.c ****  *    x       | microTesla data of mag
3406:Core/Src/bno055.c ****  *    y       | microTesla data of mag
3407:Core/Src/bno055.c ****  *    z       | microTesla data of mag
3408:Core/Src/bno055.c ****  *
3409:Core/Src/bno055.c ****  *
3410:Core/Src/bno055.c ****  *  @return results of bus communication function
3411:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3412:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3413:Core/Src/bno055.c ****  *
3414:Core/Src/bno055.c ****  */
3415:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_mag_xyz_uT(struct bno055_mag_float_t *mag_xyz_data
3416:Core/Src/bno055.c **** {
 5360              		.loc 1 3416 1 is_stmt 1 view -0
 5361              		.cfi_startproc
 5362              		@ args = 0, pretend = 0, frame = 8
 5363              		@ frame_needed = 0, uses_anonymous_args = 0
 5364              		.loc 1 3416 1 is_stmt 0 view .LVU1481
 5365 0000 30B5     		push	{r4, r5, lr}
 5366              	.LCFI169:
 5367              		.cfi_def_cfa_offset 12
 5368              		.cfi_offset 4, -12
 5369              		.cfi_offset 5, -8
 5370              		.cfi_offset 14, -4
 5371 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccWoU29M.s 			page 161


 5372              	.LCFI170:
 5373              		.cfi_def_cfa_offset 24
 5374 0004 0446     		mov	r4, r0
3417:Core/Src/bno055.c ****     /* Variable used to return value of
3418:Core/Src/bno055.c ****      * communication routine*/
3419:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5375              		.loc 1 3419 5 is_stmt 1 view .LVU1482
 5376              	.LVL520:
3420:Core/Src/bno055.c ****     struct bno055_mag_t mag_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 5377              		.loc 1 3420 5 view .LVU1483
 5378              		.loc 1 3420 25 is_stmt 0 view .LVU1484
 5379 0006 0023     		movs	r3, #0
 5380 0008 ADF80030 		strh	r3, [sp]	@ movhi
 5381 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 5382 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
3421:Core/Src/bno055.c **** 
3422:Core/Src/bno055.c ****     /* Read raw mag x data */
3423:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_xyz(&mag_xyz);
 5383              		.loc 1 3423 5 is_stmt 1 view .LVU1485
 5384              		.loc 1 3423 16 is_stmt 0 view .LVU1486
 5385 0014 6846     		mov	r0, sp
 5386              	.LVL521:
 5387              		.loc 1 3423 16 view .LVU1487
 5388 0016 FFF7FEFF 		bl	bno055_read_mag_xyz
 5389              	.LVL522:
3424:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5390              		.loc 1 3424 5 is_stmt 1 view .LVU1488
 5391              		.loc 1 3424 8 is_stmt 0 view .LVU1489
 5392 001a 20BB     		cbnz	r0, .L411
 5393 001c 0546     		mov	r5, r0
3425:Core/Src/bno055.c ****     {
3426:Core/Src/bno055.c ****         /* Convert mag raw xyz to microTesla*/
3427:Core/Src/bno055.c ****         mag_xyz_data->x = (float)(mag_xyz.x / BNO055_MAG_DIV_UT);
 5394              		.loc 1 3427 9 is_stmt 1 view .LVU1490
 5395              		.loc 1 3427 45 is_stmt 0 view .LVU1491
 5396 001e BDF90000 		ldrsh	r0, [sp]
 5397              	.LVL523:
 5398              		.loc 1 3427 45 view .LVU1492
 5399 0022 FFF7FEFF 		bl	__aeabi_i2d
 5400              	.LVL524:
 5401 0026 0022     		movs	r2, #0
 5402 0028 104B     		ldr	r3, .L413
 5403 002a FFF7FEFF 		bl	__aeabi_dmul
 5404              	.LVL525:
 5405              		.loc 1 3427 27 view .LVU1493
 5406 002e FFF7FEFF 		bl	__aeabi_d2f
 5407              	.LVL526:
 5408              		.loc 1 3427 25 view .LVU1494
 5409 0032 2060     		str	r0, [r4]	@ float
3428:Core/Src/bno055.c ****         mag_xyz_data->y = (float)(mag_xyz.y / BNO055_MAG_DIV_UT);
 5410              		.loc 1 3428 9 is_stmt 1 view .LVU1495
 5411              		.loc 1 3428 45 is_stmt 0 view .LVU1496
 5412 0034 BDF90200 		ldrsh	r0, [sp, #2]
 5413 0038 FFF7FEFF 		bl	__aeabi_i2d
 5414              	.LVL527:
 5415 003c 0022     		movs	r2, #0
 5416 003e 0B4B     		ldr	r3, .L413
ARM GAS  /tmp/ccWoU29M.s 			page 162


 5417 0040 FFF7FEFF 		bl	__aeabi_dmul
 5418              	.LVL528:
 5419              		.loc 1 3428 27 view .LVU1497
 5420 0044 FFF7FEFF 		bl	__aeabi_d2f
 5421              	.LVL529:
 5422              		.loc 1 3428 25 view .LVU1498
 5423 0048 6060     		str	r0, [r4, #4]	@ float
3429:Core/Src/bno055.c ****         mag_xyz_data->z = (float)(mag_xyz.z / BNO055_MAG_DIV_UT);
 5424              		.loc 1 3429 9 is_stmt 1 view .LVU1499
 5425              		.loc 1 3429 45 is_stmt 0 view .LVU1500
 5426 004a BDF90400 		ldrsh	r0, [sp, #4]
 5427 004e FFF7FEFF 		bl	__aeabi_i2d
 5428              	.LVL530:
 5429 0052 0022     		movs	r2, #0
 5430 0054 054B     		ldr	r3, .L413
 5431 0056 FFF7FEFF 		bl	__aeabi_dmul
 5432              	.LVL531:
 5433              		.loc 1 3429 27 view .LVU1501
 5434 005a FFF7FEFF 		bl	__aeabi_d2f
 5435              	.LVL532:
 5436              		.loc 1 3429 25 view .LVU1502
 5437 005e A060     		str	r0, [r4, #8]	@ float
 5438              	.L410:
 5439              	.LVL533:
3430:Core/Src/bno055.c ****     }
3431:Core/Src/bno055.c ****     else
3432:Core/Src/bno055.c ****     {
3433:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3434:Core/Src/bno055.c ****     }
3435:Core/Src/bno055.c **** 
3436:Core/Src/bno055.c ****     return com_rslt;
 5440              		.loc 1 3436 5 is_stmt 1 view .LVU1503
3437:Core/Src/bno055.c **** }
 5441              		.loc 1 3437 1 is_stmt 0 view .LVU1504
 5442 0060 2846     		mov	r0, r5
 5443 0062 03B0     		add	sp, sp, #12
 5444              	.LCFI171:
 5445              		.cfi_remember_state
 5446              		.cfi_def_cfa_offset 12
 5447              		@ sp needed
 5448 0064 30BD     		pop	{r4, r5, pc}
 5449              	.LVL534:
 5450              	.L411:
 5451              	.LCFI172:
 5452              		.cfi_restore_state
3433:Core/Src/bno055.c ****     }
 5453              		.loc 1 3433 18 view .LVU1505
 5454 0066 4FF0FF35 		mov	r5, #-1
 5455 006a F9E7     		b	.L410
 5456              	.L414:
 5457              		.align	2
 5458              	.L413:
 5459 006c 0000B03F 		.word	1068498944
 5460              		.cfi_endproc
 5461              	.LFE52:
 5463              		.global	__aeabi_ddiv
 5464              		.section	.text.bno055_convert_float_linear_accel_x_msq,"ax",%progbits
ARM GAS  /tmp/ccWoU29M.s 			page 163


 5465              		.align	1
 5466              		.global	bno055_convert_float_linear_accel_x_msq
 5467              		.syntax unified
 5468              		.thumb
 5469              		.thumb_func
 5470              		.fpu fpv4-sp-d16
 5472              	bno055_convert_float_linear_accel_x_msq:
 5473              	.LVL535:
 5474              	.LFB69:
3438:Core/Src/bno055.c **** 
3439:Core/Src/bno055.c **** /*!
3440:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro x raw data
3441:Core/Src/bno055.c ****  *  to dps output as float
3442:Core/Src/bno055.c ****  *
3443:Core/Src/bno055.c ****  *  @param gyro_x_f : The gyro x dps float data
3444:Core/Src/bno055.c ****  *
3445:Core/Src/bno055.c ****  *
3446:Core/Src/bno055.c ****  *
3447:Core/Src/bno055.c ****  *  @return results of bus communication function
3448:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3449:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3450:Core/Src/bno055.c ****  */
3451:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_x_dps(float *gyro_x_f)
3452:Core/Src/bno055.c **** {
3453:Core/Src/bno055.c ****     /* Variable used to return value of
3454:Core/Src/bno055.c ****      * communication routine*/
3455:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3456:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
3457:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3458:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3459:Core/Src/bno055.c **** 
3460:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3461:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
3462:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3463:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
3464:Core/Src/bno055.c ****     {
3465:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
3466:Core/Src/bno055.c ****     }
3467:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3468:Core/Src/bno055.c ****     {
3469:Core/Src/bno055.c ****         /* Read gyro raw x data */
3470:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_x(&reg_gyro_x_s16);
3471:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3472:Core/Src/bno055.c ****         {
3473:Core/Src/bno055.c ****             /* Convert the raw gyro x to dps*/
3474:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_x_s16 / BNO055_GYRO_DIV_DPS);
3475:Core/Src/bno055.c ****             *gyro_x_f = data_f;
3476:Core/Src/bno055.c ****         }
3477:Core/Src/bno055.c ****         else
3478:Core/Src/bno055.c ****         {
3479:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3480:Core/Src/bno055.c ****         }
3481:Core/Src/bno055.c ****     }
3482:Core/Src/bno055.c ****     else
3483:Core/Src/bno055.c ****     {
3484:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3485:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 164


3486:Core/Src/bno055.c **** 
3487:Core/Src/bno055.c ****     return com_rslt;
3488:Core/Src/bno055.c **** }
3489:Core/Src/bno055.c **** 
3490:Core/Src/bno055.c **** /*!
3491:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro x raw data
3492:Core/Src/bno055.c ****  *  to rps output as float
3493:Core/Src/bno055.c ****  *
3494:Core/Src/bno055.c ****  *  @param gyro_x_f : The gyro x dps float data
3495:Core/Src/bno055.c ****  *
3496:Core/Src/bno055.c ****  *
3497:Core/Src/bno055.c ****  *
3498:Core/Src/bno055.c ****  *  @return results of bus communication function
3499:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3500:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3501:Core/Src/bno055.c ****  *
3502:Core/Src/bno055.c ****  */
3503:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_x_rps(float *gyro_x_f)
3504:Core/Src/bno055.c **** {
3505:Core/Src/bno055.c ****     /* Variable used to return value of
3506:Core/Src/bno055.c ****      * communication routine*/
3507:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3508:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
3509:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3510:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3511:Core/Src/bno055.c **** 
3512:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3513:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
3514:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3515:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
3516:Core/Src/bno055.c ****     {
3517:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
3518:Core/Src/bno055.c ****     }
3519:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3520:Core/Src/bno055.c ****     {
3521:Core/Src/bno055.c ****         /* Read gyro raw x data */
3522:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_x(&reg_gyro_x_s16);
3523:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3524:Core/Src/bno055.c ****         {
3525:Core/Src/bno055.c ****             /* Convert the raw gyro x to rps*/
3526:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_x_s16 / BNO055_GYRO_DIV_RPS);
3527:Core/Src/bno055.c ****             *gyro_x_f = data_f;
3528:Core/Src/bno055.c ****         }
3529:Core/Src/bno055.c ****         else
3530:Core/Src/bno055.c ****         {
3531:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3532:Core/Src/bno055.c ****         }
3533:Core/Src/bno055.c ****     }
3534:Core/Src/bno055.c ****     else
3535:Core/Src/bno055.c ****     {
3536:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3537:Core/Src/bno055.c ****     }
3538:Core/Src/bno055.c **** 
3539:Core/Src/bno055.c ****     return com_rslt;
3540:Core/Src/bno055.c **** }
3541:Core/Src/bno055.c **** 
3542:Core/Src/bno055.c **** /*!
ARM GAS  /tmp/ccWoU29M.s 			page 165


3543:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro y raw data
3544:Core/Src/bno055.c ****  *  to dps output as float
3545:Core/Src/bno055.c ****  *
3546:Core/Src/bno055.c ****  *  @param gyro_y_f : The gyro y dps float data
3547:Core/Src/bno055.c ****  *
3548:Core/Src/bno055.c ****  *
3549:Core/Src/bno055.c ****  *
3550:Core/Src/bno055.c ****  *  @return results of bus communication function
3551:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3552:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3553:Core/Src/bno055.c ****  *
3554:Core/Src/bno055.c ****  */
3555:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_y_dps(float *gyro_y_f)
3556:Core/Src/bno055.c **** {
3557:Core/Src/bno055.c ****     /* Variable used to return value of
3558:Core/Src/bno055.c ****      * communication routine*/
3559:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3560:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
3561:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3562:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3563:Core/Src/bno055.c **** 
3564:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3565:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
3566:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3567:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
3568:Core/Src/bno055.c ****     {
3569:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
3570:Core/Src/bno055.c ****     }
3571:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3572:Core/Src/bno055.c ****     {
3573:Core/Src/bno055.c ****         /* Read gyro raw y data */
3574:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_y(&reg_gyro_y_s16);
3575:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3576:Core/Src/bno055.c ****         {
3577:Core/Src/bno055.c ****             /* Convert the raw gyro x to dps*/
3578:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_y_s16 / BNO055_GYRO_DIV_DPS);
3579:Core/Src/bno055.c ****             *gyro_y_f = data_f;
3580:Core/Src/bno055.c ****         }
3581:Core/Src/bno055.c ****         else
3582:Core/Src/bno055.c ****         {
3583:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3584:Core/Src/bno055.c ****         }
3585:Core/Src/bno055.c ****     }
3586:Core/Src/bno055.c ****     else
3587:Core/Src/bno055.c ****     {
3588:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3589:Core/Src/bno055.c ****     }
3590:Core/Src/bno055.c **** 
3591:Core/Src/bno055.c ****     return com_rslt;
3592:Core/Src/bno055.c **** }
3593:Core/Src/bno055.c **** 
3594:Core/Src/bno055.c **** /*!
3595:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro y raw data
3596:Core/Src/bno055.c ****  *  to rps output as float
3597:Core/Src/bno055.c ****  *
3598:Core/Src/bno055.c ****  *  @param gyro_y_f : The gyro y dps float data
3599:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 166


3600:Core/Src/bno055.c ****  *
3601:Core/Src/bno055.c ****  *
3602:Core/Src/bno055.c ****  *  @return results of bus communication function
3603:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3604:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3605:Core/Src/bno055.c ****  *
3606:Core/Src/bno055.c ****  *
3607:Core/Src/bno055.c ****  */
3608:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_y_rps(float *gyro_y_f)
3609:Core/Src/bno055.c **** {
3610:Core/Src/bno055.c ****     /* Variable used to return value of
3611:Core/Src/bno055.c ****      * communication routine*/
3612:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3613:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
3614:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3615:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3616:Core/Src/bno055.c **** 
3617:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3618:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
3619:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3620:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
3621:Core/Src/bno055.c ****     {
3622:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
3623:Core/Src/bno055.c ****     }
3624:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3625:Core/Src/bno055.c ****     {
3626:Core/Src/bno055.c ****         /* Read gyro raw y data */
3627:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_y(&reg_gyro_y_s16);
3628:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3629:Core/Src/bno055.c ****         {
3630:Core/Src/bno055.c ****             /* Convert the raw gyro x to rps*/
3631:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_y_s16 / BNO055_GYRO_DIV_RPS);
3632:Core/Src/bno055.c ****             *gyro_y_f = data_f;
3633:Core/Src/bno055.c ****         }
3634:Core/Src/bno055.c ****         else
3635:Core/Src/bno055.c ****         {
3636:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3637:Core/Src/bno055.c ****         }
3638:Core/Src/bno055.c ****     }
3639:Core/Src/bno055.c ****     else
3640:Core/Src/bno055.c ****     {
3641:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3642:Core/Src/bno055.c ****     }
3643:Core/Src/bno055.c **** 
3644:Core/Src/bno055.c ****     return com_rslt;
3645:Core/Src/bno055.c **** }
3646:Core/Src/bno055.c **** 
3647:Core/Src/bno055.c **** /*!
3648:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro z raw data
3649:Core/Src/bno055.c ****  *  to dps output as float
3650:Core/Src/bno055.c ****  *
3651:Core/Src/bno055.c ****  *  @param gyro_z_f : The gyro z dps float data
3652:Core/Src/bno055.c ****  *
3653:Core/Src/bno055.c ****  *
3654:Core/Src/bno055.c ****  *
3655:Core/Src/bno055.c ****  *  @return results of bus communication function
3656:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
ARM GAS  /tmp/ccWoU29M.s 			page 167


3657:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3658:Core/Src/bno055.c ****  *
3659:Core/Src/bno055.c ****  */
3660:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_z_dps(float *gyro_z_f)
3661:Core/Src/bno055.c **** {
3662:Core/Src/bno055.c ****     /* Variable used to return value of
3663:Core/Src/bno055.c ****      * communication routine*/
3664:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3665:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
3666:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3667:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3668:Core/Src/bno055.c **** 
3669:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3670:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
3671:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3672:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
3673:Core/Src/bno055.c ****     {
3674:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
3675:Core/Src/bno055.c ****     }
3676:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3677:Core/Src/bno055.c ****     {
3678:Core/Src/bno055.c ****         /* Read gyro raw z data */
3679:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_z(&reg_gyro_z_s16);
3680:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3681:Core/Src/bno055.c ****         {
3682:Core/Src/bno055.c ****             /* Convert the raw gyro x to dps*/
3683:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_z_s16 / BNO055_GYRO_DIV_DPS);
3684:Core/Src/bno055.c ****             *gyro_z_f = data_f;
3685:Core/Src/bno055.c ****         }
3686:Core/Src/bno055.c ****         else
3687:Core/Src/bno055.c ****         {
3688:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3689:Core/Src/bno055.c ****         }
3690:Core/Src/bno055.c ****     }
3691:Core/Src/bno055.c ****     else
3692:Core/Src/bno055.c ****     {
3693:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3694:Core/Src/bno055.c ****     }
3695:Core/Src/bno055.c **** 
3696:Core/Src/bno055.c ****     return com_rslt;
3697:Core/Src/bno055.c **** }
3698:Core/Src/bno055.c **** 
3699:Core/Src/bno055.c **** /*!
3700:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro z raw data
3701:Core/Src/bno055.c ****  *  to rps output as float
3702:Core/Src/bno055.c ****  *
3703:Core/Src/bno055.c ****  *  @param gyro_z_f : The gyro z rps float data
3704:Core/Src/bno055.c ****  *
3705:Core/Src/bno055.c ****  *
3706:Core/Src/bno055.c ****  *
3707:Core/Src/bno055.c ****  *  @return results of bus communication function
3708:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3709:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3710:Core/Src/bno055.c ****  *
3711:Core/Src/bno055.c ****  */
3712:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_z_rps(float *gyro_z_f)
3713:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccWoU29M.s 			page 168


3714:Core/Src/bno055.c ****     /* Variable used to return value of
3715:Core/Src/bno055.c ****      * communication routine*/
3716:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3717:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
3718:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3719:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3720:Core/Src/bno055.c **** 
3721:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3722:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
3723:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3724:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
3725:Core/Src/bno055.c ****     {
3726:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
3727:Core/Src/bno055.c ****     }
3728:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3729:Core/Src/bno055.c ****     {
3730:Core/Src/bno055.c ****         /* Read gyro raw x data */
3731:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_z(&reg_gyro_z_s16);
3732:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3733:Core/Src/bno055.c ****         {
3734:Core/Src/bno055.c ****             /* Convert the raw gyro x to rps*/
3735:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_z_s16 / BNO055_GYRO_DIV_RPS);
3736:Core/Src/bno055.c ****             *gyro_z_f = data_f;
3737:Core/Src/bno055.c ****         }
3738:Core/Src/bno055.c ****         else
3739:Core/Src/bno055.c ****         {
3740:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3741:Core/Src/bno055.c ****         }
3742:Core/Src/bno055.c ****     }
3743:Core/Src/bno055.c ****     else
3744:Core/Src/bno055.c ****     {
3745:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3746:Core/Src/bno055.c ****     }
3747:Core/Src/bno055.c **** 
3748:Core/Src/bno055.c ****     return com_rslt;
3749:Core/Src/bno055.c **** }
3750:Core/Src/bno055.c **** 
3751:Core/Src/bno055.c **** /*!
3752:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro xyz raw data
3753:Core/Src/bno055.c ****  *  to dps output as float
3754:Core/Src/bno055.c ****  *
3755:Core/Src/bno055.c ****  *  @param gyro_xyz_data : The dps data of gyro xyz
3756:Core/Src/bno055.c ****  *
3757:Core/Src/bno055.c ****  *  Parameter |    result
3758:Core/Src/bno055.c ****  *  --------- | -----------------
3759:Core/Src/bno055.c ****  *    x       | dps data of gyro
3760:Core/Src/bno055.c ****  *    y       | dps data of gyro
3761:Core/Src/bno055.c ****  *    z       | dps data of gyro
3762:Core/Src/bno055.c ****  *
3763:Core/Src/bno055.c ****  *
3764:Core/Src/bno055.c ****  *  @return results of bus communication function
3765:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3766:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3767:Core/Src/bno055.c ****  *
3768:Core/Src/bno055.c ****  *
3769:Core/Src/bno055.c ****  */
3770:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_xyz_dps(struct bno055_gyro_float_t *gyro_xyz_
ARM GAS  /tmp/ccWoU29M.s 			page 169


3771:Core/Src/bno055.c **** {
3772:Core/Src/bno055.c ****     /* Variable used to return value of
3773:Core/Src/bno055.c ****      * communication routine*/
3774:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3775:Core/Src/bno055.c ****     struct bno055_gyro_t gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
3776:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3777:Core/Src/bno055.c **** 
3778:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3779:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
3780:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3781:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
3782:Core/Src/bno055.c ****     {
3783:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
3784:Core/Src/bno055.c ****     }
3785:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3786:Core/Src/bno055.c ****     {
3787:Core/Src/bno055.c ****         /* Read gyro raw xyz data */
3788:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_xyz(&gyro_xyz);
3789:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3790:Core/Src/bno055.c ****         {
3791:Core/Src/bno055.c ****             /* Convert gyro raw xyz to dps*/
3792:Core/Src/bno055.c ****             gyro_xyz_data->x = (float)(gyro_xyz.x / BNO055_GYRO_DIV_DPS);
3793:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
3794:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
3795:Core/Src/bno055.c ****         }
3796:Core/Src/bno055.c ****         else
3797:Core/Src/bno055.c ****         {
3798:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3799:Core/Src/bno055.c ****         }
3800:Core/Src/bno055.c ****     }
3801:Core/Src/bno055.c ****     else
3802:Core/Src/bno055.c ****     {
3803:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3804:Core/Src/bno055.c ****     }
3805:Core/Src/bno055.c **** 
3806:Core/Src/bno055.c ****     return com_rslt;
3807:Core/Src/bno055.c **** }
3808:Core/Src/bno055.c **** 
3809:Core/Src/bno055.c **** /*!
3810:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro xyz raw data
3811:Core/Src/bno055.c ****  *  to rps output as float
3812:Core/Src/bno055.c ****  *
3813:Core/Src/bno055.c ****  *  @param gyro_xyz_data : The rps data of gyro xyz
3814:Core/Src/bno055.c ****  *
3815:Core/Src/bno055.c ****  *  Parameter |    result
3816:Core/Src/bno055.c ****  *  --------- | -----------------
3817:Core/Src/bno055.c ****  *    x       | rps data of gyro
3818:Core/Src/bno055.c ****  *    y       | rps data of gyro
3819:Core/Src/bno055.c ****  *    z       | rps data of gyro
3820:Core/Src/bno055.c ****  *
3821:Core/Src/bno055.c ****  *
3822:Core/Src/bno055.c ****  *  @return results of bus communication function
3823:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3824:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3825:Core/Src/bno055.c ****  *
3826:Core/Src/bno055.c ****  *
3827:Core/Src/bno055.c ****  */
ARM GAS  /tmp/ccWoU29M.s 			page 170


3828:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_xyz_rps(struct bno055_gyro_float_t *gyro_xyz_
3829:Core/Src/bno055.c **** {
3830:Core/Src/bno055.c ****     /* Variable used to return value of
3831:Core/Src/bno055.c ****      * communication routine*/
3832:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3833:Core/Src/bno055.c ****     struct bno055_gyro_t gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
3834:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3835:Core/Src/bno055.c **** 
3836:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3837:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
3838:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3839:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
3840:Core/Src/bno055.c ****     {
3841:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
3842:Core/Src/bno055.c ****     }
3843:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3844:Core/Src/bno055.c ****     {
3845:Core/Src/bno055.c ****         /* Read gyro raw xyz data */
3846:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_xyz(&gyro_xyz);
3847:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3848:Core/Src/bno055.c ****         {
3849:Core/Src/bno055.c ****             /* Convert gyro raw xyz to rps*/
3850:Core/Src/bno055.c ****             gyro_xyz_data->x = (float)(gyro_xyz.x / BNO055_GYRO_DIV_RPS);
3851:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
3852:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
3853:Core/Src/bno055.c ****         }
3854:Core/Src/bno055.c ****         else
3855:Core/Src/bno055.c ****         {
3856:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3857:Core/Src/bno055.c ****         }
3858:Core/Src/bno055.c ****     }
3859:Core/Src/bno055.c ****     else
3860:Core/Src/bno055.c ****     {
3861:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3862:Core/Src/bno055.c ****     }
3863:Core/Src/bno055.c **** 
3864:Core/Src/bno055.c ****     return com_rslt;
3865:Core/Src/bno055.c **** }
3866:Core/Src/bno055.c **** 
3867:Core/Src/bno055.c **** /*!
3868:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler h raw data
3869:Core/Src/bno055.c ****  *  to degree output as float
3870:Core/Src/bno055.c ****  *
3871:Core/Src/bno055.c ****  *  @param euler_h_f : The float value of Euler h degree
3872:Core/Src/bno055.c ****  *
3873:Core/Src/bno055.c ****  *  @return results of bus communication function
3874:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3875:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3876:Core/Src/bno055.c ****  *
3877:Core/Src/bno055.c ****  *
3878:Core/Src/bno055.c ****  */
3879:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_h_deg(float *euler_h_f)
3880:Core/Src/bno055.c **** {
3881:Core/Src/bno055.c ****     /* Variable used to return value of
3882:Core/Src/bno055.c ****      * communication routine*/
3883:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3884:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccWoU29M.s 			page 171


3885:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3886:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
3887:Core/Src/bno055.c **** 
3888:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
3889:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
3890:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
3891:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
3892:Core/Src/bno055.c ****     {
3893:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
3894:Core/Src/bno055.c ****     }
3895:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3896:Core/Src/bno055.c ****     {
3897:Core/Src/bno055.c ****         /* Read Euler raw h data*/
3898:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_h(&reg_euler_h_s16);
3899:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3900:Core/Src/bno055.c ****         {
3901:Core/Src/bno055.c ****             /* Convert raw Euler h data to degree*/
3902:Core/Src/bno055.c ****             data_f = (float)(reg_euler_h_s16 / BNO055_EULER_DIV_DEG);
3903:Core/Src/bno055.c ****             *euler_h_f = data_f;
3904:Core/Src/bno055.c ****         }
3905:Core/Src/bno055.c ****         else
3906:Core/Src/bno055.c ****         {
3907:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3908:Core/Src/bno055.c ****         }
3909:Core/Src/bno055.c ****     }
3910:Core/Src/bno055.c ****     else
3911:Core/Src/bno055.c ****     {
3912:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3913:Core/Src/bno055.c ****     }
3914:Core/Src/bno055.c **** 
3915:Core/Src/bno055.c ****     return com_rslt;
3916:Core/Src/bno055.c **** }
3917:Core/Src/bno055.c **** 
3918:Core/Src/bno055.c **** /*!
3919:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler h raw data
3920:Core/Src/bno055.c ****  *  to radians output as float
3921:Core/Src/bno055.c ****  *
3922:Core/Src/bno055.c ****  *  @param euler_h_f : The float value of Euler h radians
3923:Core/Src/bno055.c ****  *
3924:Core/Src/bno055.c ****  *  @return results of bus communication function
3925:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3926:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3927:Core/Src/bno055.c ****  *
3928:Core/Src/bno055.c ****  *
3929:Core/Src/bno055.c ****  */
3930:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_h_rad(float *euler_h_f)
3931:Core/Src/bno055.c **** {
3932:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3933:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
3934:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3935:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
3936:Core/Src/bno055.c **** 
3937:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
3938:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
3939:Core/Src/bno055.c ****     {
3940:Core/Src/bno055.c ****         /* Read the current Euler unit and set the
3941:Core/Src/bno055.c ****          * unit as radians if the unit is in degree */
ARM GAS  /tmp/ccWoU29M.s 			page 172


3942:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
3943:Core/Src/bno055.c ****     }
3944:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3945:Core/Src/bno055.c ****     {
3946:Core/Src/bno055.c ****         /* Read Euler raw h data*/
3947:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_h(&reg_euler_h_s16);
3948:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3949:Core/Src/bno055.c ****         {
3950:Core/Src/bno055.c ****             /* Convert raw Euler h data to degree*/
3951:Core/Src/bno055.c ****             data_f = (float)(reg_euler_h_s16 / BNO055_EULER_DIV_RAD);
3952:Core/Src/bno055.c ****             *euler_h_f = data_f;
3953:Core/Src/bno055.c ****         }
3954:Core/Src/bno055.c ****         else
3955:Core/Src/bno055.c ****         {
3956:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3957:Core/Src/bno055.c ****         }
3958:Core/Src/bno055.c ****     }
3959:Core/Src/bno055.c ****     else
3960:Core/Src/bno055.c ****     {
3961:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3962:Core/Src/bno055.c ****     }
3963:Core/Src/bno055.c **** 
3964:Core/Src/bno055.c ****     return com_rslt;
3965:Core/Src/bno055.c **** }
3966:Core/Src/bno055.c **** 
3967:Core/Src/bno055.c **** /*!
3968:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler r raw data
3969:Core/Src/bno055.c ****  *  to degree output as float
3970:Core/Src/bno055.c ****  *
3971:Core/Src/bno055.c ****  *  @param euler_r_f : The float value of Euler r degree
3972:Core/Src/bno055.c ****  *
3973:Core/Src/bno055.c ****  *  @return results of bus communication function
3974:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3975:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3976:Core/Src/bno055.c ****  *
3977:Core/Src/bno055.c ****  */
3978:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_r_deg(float *euler_r_f)
3979:Core/Src/bno055.c **** {
3980:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3981:Core/Src/bno055.c ****     s16 reg_euler_r = BNO055_INIT_VALUE;
3982:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3983:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
3984:Core/Src/bno055.c **** 
3985:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
3986:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
3987:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
3988:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
3989:Core/Src/bno055.c ****     {
3990:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
3991:Core/Src/bno055.c ****     }
3992:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3993:Core/Src/bno055.c ****     {
3994:Core/Src/bno055.c ****         /* Read Euler raw r data*/
3995:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_r(&reg_euler_r);
3996:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3997:Core/Src/bno055.c ****         {
3998:Core/Src/bno055.c ****             /* Convert raw Euler r data to degree*/
ARM GAS  /tmp/ccWoU29M.s 			page 173


3999:Core/Src/bno055.c ****             data_f = (float)(reg_euler_r / BNO055_EULER_DIV_DEG);
4000:Core/Src/bno055.c ****             *euler_r_f = data_f;
4001:Core/Src/bno055.c ****         }
4002:Core/Src/bno055.c ****         else
4003:Core/Src/bno055.c ****         {
4004:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4005:Core/Src/bno055.c ****         }
4006:Core/Src/bno055.c ****     }
4007:Core/Src/bno055.c ****     else
4008:Core/Src/bno055.c ****     {
4009:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4010:Core/Src/bno055.c ****     }
4011:Core/Src/bno055.c **** 
4012:Core/Src/bno055.c ****     return com_rslt;
4013:Core/Src/bno055.c **** }
4014:Core/Src/bno055.c **** 
4015:Core/Src/bno055.c **** /*!
4016:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler r raw data
4017:Core/Src/bno055.c ****  *  to radians output as float
4018:Core/Src/bno055.c ****  *
4019:Core/Src/bno055.c ****  *  @param euler_r_f : The float value of Euler r radians
4020:Core/Src/bno055.c ****  *
4021:Core/Src/bno055.c ****  *  @return results of bus communication function
4022:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4023:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4024:Core/Src/bno055.c ****  *
4025:Core/Src/bno055.c ****  */
4026:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_r_rad(float *euler_r_f)
4027:Core/Src/bno055.c **** {
4028:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4029:Core/Src/bno055.c ****     s16 reg_euler_r_f = BNO055_INIT_VALUE;
4030:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4031:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4032:Core/Src/bno055.c **** 
4033:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4034:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
4035:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4036:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
4037:Core/Src/bno055.c ****     {
4038:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
4039:Core/Src/bno055.c ****     }
4040:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4041:Core/Src/bno055.c ****     {
4042:Core/Src/bno055.c ****         /* Read Euler raw r data*/
4043:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_r(&reg_euler_r_f);
4044:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4045:Core/Src/bno055.c ****         {
4046:Core/Src/bno055.c ****             /* Convert raw Euler r data to radians*/
4047:Core/Src/bno055.c ****             data_f = (float)(reg_euler_r_f / BNO055_EULER_DIV_RAD);
4048:Core/Src/bno055.c ****             *euler_r_f = data_f;
4049:Core/Src/bno055.c ****         }
4050:Core/Src/bno055.c ****         else
4051:Core/Src/bno055.c ****         {
4052:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4053:Core/Src/bno055.c ****         }
4054:Core/Src/bno055.c ****     }
4055:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccWoU29M.s 			page 174


4056:Core/Src/bno055.c ****     {
4057:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4058:Core/Src/bno055.c ****     }
4059:Core/Src/bno055.c **** 
4060:Core/Src/bno055.c ****     return com_rslt;
4061:Core/Src/bno055.c **** }
4062:Core/Src/bno055.c **** 
4063:Core/Src/bno055.c **** /*!
4064:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler p raw data
4065:Core/Src/bno055.c ****  *  to degree output as float
4066:Core/Src/bno055.c ****  *
4067:Core/Src/bno055.c ****  *  @param euler_p_f : The float value of Euler p degree
4068:Core/Src/bno055.c ****  *
4069:Core/Src/bno055.c ****  *  @return results of bus communication function
4070:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4071:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4072:Core/Src/bno055.c ****  *
4073:Core/Src/bno055.c ****  */
4074:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_p_deg(float *euler_p_f)
4075:Core/Src/bno055.c **** {
4076:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4077:Core/Src/bno055.c ****     s16 reg_euler_p_f = BNO055_INIT_VALUE;
4078:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4079:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4080:Core/Src/bno055.c **** 
4081:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4082:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
4083:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4084:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
4085:Core/Src/bno055.c ****     {
4086:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
4087:Core/Src/bno055.c ****     }
4088:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4089:Core/Src/bno055.c ****     {
4090:Core/Src/bno055.c ****         /* Read Euler raw p data*/
4091:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_p(&reg_euler_p_f);
4092:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4093:Core/Src/bno055.c ****         {
4094:Core/Src/bno055.c ****             /* Convert raw Euler p data to degree*/
4095:Core/Src/bno055.c ****             data_f = (float)(reg_euler_p_f / BNO055_EULER_DIV_DEG);
4096:Core/Src/bno055.c ****             *euler_p_f = data_f;
4097:Core/Src/bno055.c ****         }
4098:Core/Src/bno055.c ****         else
4099:Core/Src/bno055.c ****         {
4100:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4101:Core/Src/bno055.c ****         }
4102:Core/Src/bno055.c ****     }
4103:Core/Src/bno055.c ****     else
4104:Core/Src/bno055.c ****     {
4105:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4106:Core/Src/bno055.c ****     }
4107:Core/Src/bno055.c **** 
4108:Core/Src/bno055.c ****     return com_rslt;
4109:Core/Src/bno055.c **** }
4110:Core/Src/bno055.c **** 
4111:Core/Src/bno055.c **** /*!
4112:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler p raw data
ARM GAS  /tmp/ccWoU29M.s 			page 175


4113:Core/Src/bno055.c ****  *  to radians output as float
4114:Core/Src/bno055.c ****  *
4115:Core/Src/bno055.c ****  *  @param euler_p_f : The float value of Euler p radians
4116:Core/Src/bno055.c ****  *
4117:Core/Src/bno055.c ****  *  @return results of bus communication function
4118:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4119:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4120:Core/Src/bno055.c ****  *
4121:Core/Src/bno055.c ****  *
4122:Core/Src/bno055.c ****  */
4123:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_p_rad(float *euler_p_f)
4124:Core/Src/bno055.c **** {
4125:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4126:Core/Src/bno055.c ****     s16 reg_euler_p_f = BNO055_INIT_VALUE;
4127:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4128:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4129:Core/Src/bno055.c **** 
4130:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4131:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
4132:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4133:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
4134:Core/Src/bno055.c ****     {
4135:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
4136:Core/Src/bno055.c ****     }
4137:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4138:Core/Src/bno055.c ****     {
4139:Core/Src/bno055.c ****         /* Read Euler raw r data*/
4140:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_p(&reg_euler_p_f);
4141:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4142:Core/Src/bno055.c ****         {
4143:Core/Src/bno055.c ****             /* Convert raw Euler r data to radians*/
4144:Core/Src/bno055.c ****             data_f = (float)(reg_euler_p_f / BNO055_EULER_DIV_RAD);
4145:Core/Src/bno055.c ****             *euler_p_f = data_f;
4146:Core/Src/bno055.c ****         }
4147:Core/Src/bno055.c ****         else
4148:Core/Src/bno055.c ****         {
4149:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4150:Core/Src/bno055.c ****         }
4151:Core/Src/bno055.c ****     }
4152:Core/Src/bno055.c ****     else
4153:Core/Src/bno055.c ****     {
4154:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4155:Core/Src/bno055.c ****     }
4156:Core/Src/bno055.c **** 
4157:Core/Src/bno055.c ****     return com_rslt;
4158:Core/Src/bno055.c **** }
4159:Core/Src/bno055.c **** 
4160:Core/Src/bno055.c **** /*!
4161:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler hrp raw data
4162:Core/Src/bno055.c ****  *  to degree output as float
4163:Core/Src/bno055.c ****  *
4164:Core/Src/bno055.c ****  *  @param euler_hpr : The degree data of Euler hrp
4165:Core/Src/bno055.c ****  *
4166:Core/Src/bno055.c ****  *  Parameter |    result
4167:Core/Src/bno055.c ****  *  --------- | -----------------
4168:Core/Src/bno055.c ****  *    h       | degree data of Euler
4169:Core/Src/bno055.c ****  *    r       | degree data of Euler
ARM GAS  /tmp/ccWoU29M.s 			page 176


4170:Core/Src/bno055.c ****  *    p       | degree data of Euler
4171:Core/Src/bno055.c ****  *
4172:Core/Src/bno055.c ****  *
4173:Core/Src/bno055.c ****  *  @return results of bus communication function
4174:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4175:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4176:Core/Src/bno055.c ****  *
4177:Core/Src/bno055.c ****  */
4178:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_hpr_deg(struct bno055_euler_float_t *euler_h
4179:Core/Src/bno055.c **** {
4180:Core/Src/bno055.c ****     /* Variable used to return value of
4181:Core/Src/bno055.c ****      * communication routine*/
4182:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4183:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
4184:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4185:Core/Src/bno055.c **** 
4186:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4187:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
4188:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4189:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
4190:Core/Src/bno055.c ****     {
4191:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
4192:Core/Src/bno055.c ****     }
4193:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4194:Core/Src/bno055.c ****     {
4195:Core/Src/bno055.c ****         /* Read Euler raw hrp data*/
4196:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_hrp(&reg_euler);
4197:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4198:Core/Src/bno055.c ****         {
4199:Core/Src/bno055.c ****             /* Convert raw Euler hrp to degree*/
4200:Core/Src/bno055.c ****             euler_hpr->h = (float)(reg_euler.h / BNO055_EULER_DIV_DEG);
4201:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
4202:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
4203:Core/Src/bno055.c ****         }
4204:Core/Src/bno055.c ****         else
4205:Core/Src/bno055.c ****         {
4206:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4207:Core/Src/bno055.c ****         }
4208:Core/Src/bno055.c ****     }
4209:Core/Src/bno055.c ****     else
4210:Core/Src/bno055.c ****     {
4211:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4212:Core/Src/bno055.c ****     }
4213:Core/Src/bno055.c **** 
4214:Core/Src/bno055.c ****     return com_rslt;
4215:Core/Src/bno055.c **** }
4216:Core/Src/bno055.c **** 
4217:Core/Src/bno055.c **** /*!
4218:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler xyz raw data
4219:Core/Src/bno055.c ****  *  to radians output as float
4220:Core/Src/bno055.c ****  *
4221:Core/Src/bno055.c ****  *  @param euler_hpr : The radians data of Euler hrp
4222:Core/Src/bno055.c ****  *
4223:Core/Src/bno055.c ****  *  Parameter |    result
4224:Core/Src/bno055.c ****  *  --------- | -----------------
4225:Core/Src/bno055.c ****  *    h       | radians data of Euler
4226:Core/Src/bno055.c ****  *    r       | radians data of Euler
ARM GAS  /tmp/ccWoU29M.s 			page 177


4227:Core/Src/bno055.c ****  *    p       | radians data of Euler
4228:Core/Src/bno055.c ****  *
4229:Core/Src/bno055.c ****  *
4230:Core/Src/bno055.c ****  *  @return results of bus communication function
4231:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4232:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4233:Core/Src/bno055.c ****  *
4234:Core/Src/bno055.c ****  */
4235:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_hpr_rad(struct bno055_euler_float_t *euler_h
4236:Core/Src/bno055.c **** {
4237:Core/Src/bno055.c ****     /* Variable used to return value of
4238:Core/Src/bno055.c ****      * communication routine*/
4239:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4240:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
4241:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4242:Core/Src/bno055.c **** 
4243:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4244:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
4245:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4246:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
4247:Core/Src/bno055.c ****     {
4248:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
4249:Core/Src/bno055.c ****     }
4250:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4251:Core/Src/bno055.c ****     {
4252:Core/Src/bno055.c ****         /* Read Euler raw hrp data*/
4253:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_hrp(&reg_euler);
4254:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4255:Core/Src/bno055.c ****         {
4256:Core/Src/bno055.c ****             /* Convert raw hrp to radians */
4257:Core/Src/bno055.c ****             euler_hpr->h = (float)(reg_euler.h / BNO055_EULER_DIV_RAD);
4258:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
4259:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
4260:Core/Src/bno055.c ****         }
4261:Core/Src/bno055.c ****         else
4262:Core/Src/bno055.c ****         {
4263:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4264:Core/Src/bno055.c ****         }
4265:Core/Src/bno055.c ****     }
4266:Core/Src/bno055.c ****     else
4267:Core/Src/bno055.c ****     {
4268:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4269:Core/Src/bno055.c ****     }
4270:Core/Src/bno055.c **** 
4271:Core/Src/bno055.c ****     return com_rslt;
4272:Core/Src/bno055.c **** }
4273:Core/Src/bno055.c **** 
4274:Core/Src/bno055.c **** /*!
4275:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
4276:Core/Src/bno055.c ****  *  accel x raw data to meterpersecseq output as float
4277:Core/Src/bno055.c ****  *
4278:Core/Src/bno055.c ****  *  @param linear_accel_x_f : The float value of linear accel x meterpersecseq
4279:Core/Src/bno055.c ****  *
4280:Core/Src/bno055.c ****  *  @return results of bus communication function
4281:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4282:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4283:Core/Src/bno055.c ****  */
ARM GAS  /tmp/ccWoU29M.s 			page 178


4284:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_linear_accel_x_msq(float *linear_accel_x_f)
4285:Core/Src/bno055.c **** {
 5475              		.loc 1 4285 1 is_stmt 1 view -0
 5476              		.cfi_startproc
 5477              		@ args = 0, pretend = 0, frame = 8
 5478              		@ frame_needed = 0, uses_anonymous_args = 0
 5479              		.loc 1 4285 1 is_stmt 0 view .LVU1507
 5480 0000 30B5     		push	{r4, r5, lr}
 5481              	.LCFI173:
 5482              		.cfi_def_cfa_offset 12
 5483              		.cfi_offset 4, -12
 5484              		.cfi_offset 5, -8
 5485              		.cfi_offset 14, -4
 5486 0002 83B0     		sub	sp, sp, #12
 5487              	.LCFI174:
 5488              		.cfi_def_cfa_offset 24
 5489 0004 0446     		mov	r4, r0
4286:Core/Src/bno055.c ****     /* Variable used to return value of
4287:Core/Src/bno055.c ****      * communication routine*/
4288:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5490              		.loc 1 4288 5 is_stmt 1 view .LVU1508
 5491              	.LVL536:
4289:Core/Src/bno055.c ****     s16 reg_linear_accel_x_s16 = BNO055_INIT_VALUE;
 5492              		.loc 1 4289 5 view .LVU1509
 5493              		.loc 1 4289 9 is_stmt 0 view .LVU1510
 5494 0006 0023     		movs	r3, #0
 5495 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4290:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5496              		.loc 1 4290 5 is_stmt 1 view .LVU1511
 5497              	.LVL537:
4291:Core/Src/bno055.c **** 
4292:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
4293:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_x(&reg_linear_accel_x_s16);
 5498              		.loc 1 4293 5 view .LVU1512
 5499              		.loc 1 4293 16 is_stmt 0 view .LVU1513
 5500 000c 0DF10600 		add	r0, sp, #6
 5501              	.LVL538:
 5502              		.loc 1 4293 16 view .LVU1514
 5503 0010 FFF7FEFF 		bl	bno055_read_linear_accel_x
 5504              	.LVL539:
4294:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5505              		.loc 1 4294 5 is_stmt 1 view .LVU1515
 5506              		.loc 1 4294 8 is_stmt 0 view .LVU1516
 5507 0014 70B9     		cbnz	r0, .L417
 5508 0016 0546     		mov	r5, r0
4295:Core/Src/bno055.c ****     {
4296:Core/Src/bno055.c ****         /* Convert the raw linear accel x to m/s2*/
4297:Core/Src/bno055.c ****         data_f = (float)(reg_linear_accel_x_s16 / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5509              		.loc 1 4297 9 is_stmt 1 view .LVU1517
 5510              		.loc 1 4297 49 is_stmt 0 view .LVU1518
 5511 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5512              	.LVL540:
 5513              		.loc 1 4297 49 view .LVU1519
 5514 001c FFF7FEFF 		bl	__aeabi_i2d
 5515              	.LVL541:
 5516 0020 0022     		movs	r2, #0
 5517 0022 064B     		ldr	r3, .L419
ARM GAS  /tmp/ccWoU29M.s 			page 179


 5518 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5519              	.LVL542:
 5520              		.loc 1 4297 16 view .LVU1520
 5521 0028 FFF7FEFF 		bl	__aeabi_d2f
 5522              	.LVL543:
4298:Core/Src/bno055.c ****         *linear_accel_x_f = data_f;
 5523              		.loc 1 4298 9 is_stmt 1 view .LVU1521
 5524              		.loc 1 4298 27 is_stmt 0 view .LVU1522
 5525 002c 2060     		str	r0, [r4]	@ float
 5526              	.LVL544:
 5527              	.L416:
4299:Core/Src/bno055.c ****     }
4300:Core/Src/bno055.c ****     else
4301:Core/Src/bno055.c ****     {
4302:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4303:Core/Src/bno055.c ****     }
4304:Core/Src/bno055.c **** 
4305:Core/Src/bno055.c ****     return com_rslt;
 5528              		.loc 1 4305 5 is_stmt 1 view .LVU1523
4306:Core/Src/bno055.c **** }
 5529              		.loc 1 4306 1 is_stmt 0 view .LVU1524
 5530 002e 2846     		mov	r0, r5
 5531 0030 03B0     		add	sp, sp, #12
 5532              	.LCFI175:
 5533              		.cfi_remember_state
 5534              		.cfi_def_cfa_offset 12
 5535              		@ sp needed
 5536 0032 30BD     		pop	{r4, r5, pc}
 5537              	.LVL545:
 5538              	.L417:
 5539              	.LCFI176:
 5540              		.cfi_restore_state
4302:Core/Src/bno055.c ****     }
 5541              		.loc 1 4302 18 view .LVU1525
 5542 0034 4FF0FF35 		mov	r5, #-1
 5543 0038 F9E7     		b	.L416
 5544              	.L420:
 5545 003a 00BF     		.align	2
 5546              	.L419:
 5547 003c 00005940 		.word	1079574528
 5548              		.cfi_endproc
 5549              	.LFE69:
 5551              		.section	.text.bno055_convert_float_linear_accel_y_msq,"ax",%progbits
 5552              		.align	1
 5553              		.global	bno055_convert_float_linear_accel_y_msq
 5554              		.syntax unified
 5555              		.thumb
 5556              		.thumb_func
 5557              		.fpu fpv4-sp-d16
 5559              	bno055_convert_float_linear_accel_y_msq:
 5560              	.LVL546:
 5561              	.LFB70:
4307:Core/Src/bno055.c **** 
4308:Core/Src/bno055.c **** /*!
4309:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
4310:Core/Src/bno055.c ****  *  accel y raw data to meterpersecseq output as float
4311:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 180


4312:Core/Src/bno055.c ****  *  @param linear_accel_y_f : The float value of linear accel y meterpersecseq
4313:Core/Src/bno055.c ****  *
4314:Core/Src/bno055.c ****  *  @return results of bus communication function
4315:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4316:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4317:Core/Src/bno055.c ****  */
4318:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_linear_accel_y_msq(float *linear_accel_y_f)
4319:Core/Src/bno055.c **** {
 5562              		.loc 1 4319 1 is_stmt 1 view -0
 5563              		.cfi_startproc
 5564              		@ args = 0, pretend = 0, frame = 8
 5565              		@ frame_needed = 0, uses_anonymous_args = 0
 5566              		.loc 1 4319 1 is_stmt 0 view .LVU1527
 5567 0000 30B5     		push	{r4, r5, lr}
 5568              	.LCFI177:
 5569              		.cfi_def_cfa_offset 12
 5570              		.cfi_offset 4, -12
 5571              		.cfi_offset 5, -8
 5572              		.cfi_offset 14, -4
 5573 0002 83B0     		sub	sp, sp, #12
 5574              	.LCFI178:
 5575              		.cfi_def_cfa_offset 24
 5576 0004 0446     		mov	r4, r0
4320:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5577              		.loc 1 4320 5 is_stmt 1 view .LVU1528
 5578              	.LVL547:
4321:Core/Src/bno055.c ****     s16 reg_linear_accel_y = BNO055_INIT_VALUE;
 5579              		.loc 1 4321 5 view .LVU1529
 5580              		.loc 1 4321 9 is_stmt 0 view .LVU1530
 5581 0006 0023     		movs	r3, #0
 5582 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4322:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5583              		.loc 1 4322 5 is_stmt 1 view .LVU1531
 5584              	.LVL548:
4323:Core/Src/bno055.c **** 
4324:Core/Src/bno055.c ****     /* Read the raw y of linear accel */
4325:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_y(&reg_linear_accel_y);
 5585              		.loc 1 4325 5 view .LVU1532
 5586              		.loc 1 4325 16 is_stmt 0 view .LVU1533
 5587 000c 0DF10600 		add	r0, sp, #6
 5588              	.LVL549:
 5589              		.loc 1 4325 16 view .LVU1534
 5590 0010 FFF7FEFF 		bl	bno055_read_linear_accel_y
 5591              	.LVL550:
4326:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5592              		.loc 1 4326 5 is_stmt 1 view .LVU1535
 5593              		.loc 1 4326 8 is_stmt 0 view .LVU1536
 5594 0014 70B9     		cbnz	r0, .L423
 5595 0016 0546     		mov	r5, r0
4327:Core/Src/bno055.c ****     {
4328:Core/Src/bno055.c ****         /* Convert the raw linear accel x to m/s2*/
4329:Core/Src/bno055.c ****         data_f = (float)(reg_linear_accel_y / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5596              		.loc 1 4329 9 is_stmt 1 view .LVU1537
 5597              		.loc 1 4329 45 is_stmt 0 view .LVU1538
 5598 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5599              	.LVL551:
 5600              		.loc 1 4329 45 view .LVU1539
ARM GAS  /tmp/ccWoU29M.s 			page 181


 5601 001c FFF7FEFF 		bl	__aeabi_i2d
 5602              	.LVL552:
 5603 0020 0022     		movs	r2, #0
 5604 0022 064B     		ldr	r3, .L425
 5605 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5606              	.LVL553:
 5607              		.loc 1 4329 16 view .LVU1540
 5608 0028 FFF7FEFF 		bl	__aeabi_d2f
 5609              	.LVL554:
4330:Core/Src/bno055.c ****         *linear_accel_y_f = data_f;
 5610              		.loc 1 4330 9 is_stmt 1 view .LVU1541
 5611              		.loc 1 4330 27 is_stmt 0 view .LVU1542
 5612 002c 2060     		str	r0, [r4]	@ float
 5613              	.LVL555:
 5614              	.L422:
4331:Core/Src/bno055.c ****     }
4332:Core/Src/bno055.c ****     else
4333:Core/Src/bno055.c ****     {
4334:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4335:Core/Src/bno055.c ****     }
4336:Core/Src/bno055.c **** 
4337:Core/Src/bno055.c ****     return com_rslt;
 5615              		.loc 1 4337 5 is_stmt 1 view .LVU1543
4338:Core/Src/bno055.c **** }
 5616              		.loc 1 4338 1 is_stmt 0 view .LVU1544
 5617 002e 2846     		mov	r0, r5
 5618 0030 03B0     		add	sp, sp, #12
 5619              	.LCFI179:
 5620              		.cfi_remember_state
 5621              		.cfi_def_cfa_offset 12
 5622              		@ sp needed
 5623 0032 30BD     		pop	{r4, r5, pc}
 5624              	.LVL556:
 5625              	.L423:
 5626              	.LCFI180:
 5627              		.cfi_restore_state
4334:Core/Src/bno055.c ****     }
 5628              		.loc 1 4334 18 view .LVU1545
 5629 0034 4FF0FF35 		mov	r5, #-1
 5630 0038 F9E7     		b	.L422
 5631              	.L426:
 5632 003a 00BF     		.align	2
 5633              	.L425:
 5634 003c 00005940 		.word	1079574528
 5635              		.cfi_endproc
 5636              	.LFE70:
 5638              		.section	.text.bno055_convert_float_linear_accel_z_msq,"ax",%progbits
 5639              		.align	1
 5640              		.global	bno055_convert_float_linear_accel_z_msq
 5641              		.syntax unified
 5642              		.thumb
 5643              		.thumb_func
 5644              		.fpu fpv4-sp-d16
 5646              	bno055_convert_float_linear_accel_z_msq:
 5647              	.LVL557:
 5648              	.LFB71:
4339:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 182


4340:Core/Src/bno055.c **** /*!
4341:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
4342:Core/Src/bno055.c ****  *  accel z raw data to meterpersecseq output as float
4343:Core/Src/bno055.c ****  *
4344:Core/Src/bno055.c ****  *  @param linear_accel_z_f : The float value of linear accel z meterpersecseq
4345:Core/Src/bno055.c ****  *
4346:Core/Src/bno055.c ****  *  @return results of bus communication function
4347:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4348:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4349:Core/Src/bno055.c ****  *
4350:Core/Src/bno055.c ****  */
4351:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_linear_accel_z_msq(float *linear_accel_z_f)
4352:Core/Src/bno055.c **** {
 5649              		.loc 1 4352 1 is_stmt 1 view -0
 5650              		.cfi_startproc
 5651              		@ args = 0, pretend = 0, frame = 8
 5652              		@ frame_needed = 0, uses_anonymous_args = 0
 5653              		.loc 1 4352 1 is_stmt 0 view .LVU1547
 5654 0000 30B5     		push	{r4, r5, lr}
 5655              	.LCFI181:
 5656              		.cfi_def_cfa_offset 12
 5657              		.cfi_offset 4, -12
 5658              		.cfi_offset 5, -8
 5659              		.cfi_offset 14, -4
 5660 0002 83B0     		sub	sp, sp, #12
 5661              	.LCFI182:
 5662              		.cfi_def_cfa_offset 24
 5663 0004 0446     		mov	r4, r0
4353:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5664              		.loc 1 4353 5 is_stmt 1 view .LVU1548
 5665              	.LVL558:
4354:Core/Src/bno055.c ****     s16 reg_linear_accel_z = BNO055_INIT_VALUE;
 5666              		.loc 1 4354 5 view .LVU1549
 5667              		.loc 1 4354 9 is_stmt 0 view .LVU1550
 5668 0006 0023     		movs	r3, #0
 5669 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4355:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5670              		.loc 1 4355 5 is_stmt 1 view .LVU1551
 5671              	.LVL559:
4356:Core/Src/bno055.c **** 
4357:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
4358:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_z(&reg_linear_accel_z);
 5672              		.loc 1 4358 5 view .LVU1552
 5673              		.loc 1 4358 16 is_stmt 0 view .LVU1553
 5674 000c 0DF10600 		add	r0, sp, #6
 5675              	.LVL560:
 5676              		.loc 1 4358 16 view .LVU1554
 5677 0010 FFF7FEFF 		bl	bno055_read_linear_accel_z
 5678              	.LVL561:
4359:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5679              		.loc 1 4359 5 is_stmt 1 view .LVU1555
 5680              		.loc 1 4359 8 is_stmt 0 view .LVU1556
 5681 0014 70B9     		cbnz	r0, .L429
 5682 0016 0546     		mov	r5, r0
4360:Core/Src/bno055.c ****     {
4361:Core/Src/bno055.c ****         /* Convert the raw linear accel z to m/s2*/
4362:Core/Src/bno055.c ****         data_f = (float)(reg_linear_accel_z / BNO055_LINEAR_ACCEL_DIV_MSQ);
ARM GAS  /tmp/ccWoU29M.s 			page 183


 5683              		.loc 1 4362 9 is_stmt 1 view .LVU1557
 5684              		.loc 1 4362 45 is_stmt 0 view .LVU1558
 5685 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5686              	.LVL562:
 5687              		.loc 1 4362 45 view .LVU1559
 5688 001c FFF7FEFF 		bl	__aeabi_i2d
 5689              	.LVL563:
 5690 0020 0022     		movs	r2, #0
 5691 0022 064B     		ldr	r3, .L431
 5692 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5693              	.LVL564:
 5694              		.loc 1 4362 16 view .LVU1560
 5695 0028 FFF7FEFF 		bl	__aeabi_d2f
 5696              	.LVL565:
4363:Core/Src/bno055.c ****         *linear_accel_z_f = data_f;
 5697              		.loc 1 4363 9 is_stmt 1 view .LVU1561
 5698              		.loc 1 4363 27 is_stmt 0 view .LVU1562
 5699 002c 2060     		str	r0, [r4]	@ float
 5700              	.LVL566:
 5701              	.L428:
4364:Core/Src/bno055.c ****     }
4365:Core/Src/bno055.c ****     else
4366:Core/Src/bno055.c ****     {
4367:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4368:Core/Src/bno055.c ****     }
4369:Core/Src/bno055.c **** 
4370:Core/Src/bno055.c ****     return com_rslt;
 5702              		.loc 1 4370 5 is_stmt 1 view .LVU1563
4371:Core/Src/bno055.c **** }
 5703              		.loc 1 4371 1 is_stmt 0 view .LVU1564
 5704 002e 2846     		mov	r0, r5
 5705 0030 03B0     		add	sp, sp, #12
 5706              	.LCFI183:
 5707              		.cfi_remember_state
 5708              		.cfi_def_cfa_offset 12
 5709              		@ sp needed
 5710 0032 30BD     		pop	{r4, r5, pc}
 5711              	.LVL567:
 5712              	.L429:
 5713              	.LCFI184:
 5714              		.cfi_restore_state
4367:Core/Src/bno055.c ****     }
 5715              		.loc 1 4367 18 view .LVU1565
 5716 0034 4FF0FF35 		mov	r5, #-1
 5717 0038 F9E7     		b	.L428
 5718              	.L432:
 5719 003a 00BF     		.align	2
 5720              	.L431:
 5721 003c 00005940 		.word	1079574528
 5722              		.cfi_endproc
 5723              	.LFE71:
 5725              		.section	.text.bno055_convert_float_linear_accel_xyz_msq,"ax",%progbits
 5726              		.align	1
 5727              		.global	bno055_convert_float_linear_accel_xyz_msq
 5728              		.syntax unified
 5729              		.thumb
 5730              		.thumb_func
ARM GAS  /tmp/ccWoU29M.s 			page 184


 5731              		.fpu fpv4-sp-d16
 5733              	bno055_convert_float_linear_accel_xyz_msq:
 5734              	.LVL568:
 5735              	.LFB72:
4372:Core/Src/bno055.c **** 
4373:Core/Src/bno055.c **** /*!
4374:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear accel xyz raw data
4375:Core/Src/bno055.c ****  *  to meterpersecseq output as float
4376:Core/Src/bno055.c ****  *
4377:Core/Src/bno055.c ****  *  @param linear_accel_xyz : The meterpersecseq data of linear accel xyz
4378:Core/Src/bno055.c ****  *
4379:Core/Src/bno055.c ****  *  Parameter |    result
4380:Core/Src/bno055.c ****  *  --------- | -----------------
4381:Core/Src/bno055.c ****  *    x       | meterpersecseq data of linear accel
4382:Core/Src/bno055.c ****  *    y       | meterpersecseq data of linear accel
4383:Core/Src/bno055.c ****  *    z       | meterpersecseq data of linear accel
4384:Core/Src/bno055.c ****  *
4385:Core/Src/bno055.c ****  *
4386:Core/Src/bno055.c ****  *  @return results of bus communication function
4387:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4388:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4389:Core/Src/bno055.c ****  *
4390:Core/Src/bno055.c ****  *
4391:Core/Src/bno055.c ****  */
4392:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_linear_accel_xyz_msq(
4393:Core/Src/bno055.c ****     struct bno055_linear_accel_float_t *linear_accel_xyz)
4394:Core/Src/bno055.c **** {
 5736              		.loc 1 4394 1 is_stmt 1 view -0
 5737              		.cfi_startproc
 5738              		@ args = 0, pretend = 0, frame = 8
 5739              		@ frame_needed = 0, uses_anonymous_args = 0
 5740              		.loc 1 4394 1 is_stmt 0 view .LVU1567
 5741 0000 30B5     		push	{r4, r5, lr}
 5742              	.LCFI185:
 5743              		.cfi_def_cfa_offset 12
 5744              		.cfi_offset 4, -12
 5745              		.cfi_offset 5, -8
 5746              		.cfi_offset 14, -4
 5747 0002 83B0     		sub	sp, sp, #12
 5748              	.LCFI186:
 5749              		.cfi_def_cfa_offset 24
 5750 0004 0446     		mov	r4, r0
4395:Core/Src/bno055.c ****     /* Variable used to return value of
4396:Core/Src/bno055.c ****      * communication routine*/
4397:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5751              		.loc 1 4397 5 is_stmt 1 view .LVU1568
 5752              	.LVL569:
4398:Core/Src/bno055.c ****     struct bno055_linear_accel_t reg_linear_accel = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_
 5753              		.loc 1 4398 5 view .LVU1569
 5754              		.loc 1 4398 34 is_stmt 0 view .LVU1570
 5755 0006 0023     		movs	r3, #0
 5756 0008 ADF80030 		strh	r3, [sp]	@ movhi
 5757 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 5758 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
4399:Core/Src/bno055.c **** 
4400:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
4401:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_xyz(&reg_linear_accel);
ARM GAS  /tmp/ccWoU29M.s 			page 185


 5759              		.loc 1 4401 5 is_stmt 1 view .LVU1571
 5760              		.loc 1 4401 16 is_stmt 0 view .LVU1572
 5761 0014 6846     		mov	r0, sp
 5762              	.LVL570:
 5763              		.loc 1 4401 16 view .LVU1573
 5764 0016 FFF7FEFF 		bl	bno055_read_linear_accel_xyz
 5765              	.LVL571:
4402:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5766              		.loc 1 4402 5 is_stmt 1 view .LVU1574
 5767              		.loc 1 4402 8 is_stmt 0 view .LVU1575
 5768 001a 20BB     		cbnz	r0, .L435
 5769 001c 0546     		mov	r5, r0
4403:Core/Src/bno055.c ****     {
4404:Core/Src/bno055.c ****         linear_accel_xyz->x = (float)(reg_linear_accel.x / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5770              		.loc 1 4404 9 is_stmt 1 view .LVU1576
 5771              		.loc 1 4404 58 is_stmt 0 view .LVU1577
 5772 001e BDF90000 		ldrsh	r0, [sp]
 5773              	.LVL572:
 5774              		.loc 1 4404 58 view .LVU1578
 5775 0022 FFF7FEFF 		bl	__aeabi_i2d
 5776              	.LVL573:
 5777 0026 0022     		movs	r2, #0
 5778 0028 104B     		ldr	r3, .L437
 5779 002a FFF7FEFF 		bl	__aeabi_ddiv
 5780              	.LVL574:
 5781              		.loc 1 4404 31 view .LVU1579
 5782 002e FFF7FEFF 		bl	__aeabi_d2f
 5783              	.LVL575:
 5784              		.loc 1 4404 29 view .LVU1580
 5785 0032 2060     		str	r0, [r4]	@ float
4405:Core/Src/bno055.c ****         linear_accel_xyz->y = (float)(reg_linear_accel.y / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5786              		.loc 1 4405 9 is_stmt 1 view .LVU1581
 5787              		.loc 1 4405 58 is_stmt 0 view .LVU1582
 5788 0034 BDF90200 		ldrsh	r0, [sp, #2]
 5789 0038 FFF7FEFF 		bl	__aeabi_i2d
 5790              	.LVL576:
 5791 003c 0022     		movs	r2, #0
 5792 003e 0B4B     		ldr	r3, .L437
 5793 0040 FFF7FEFF 		bl	__aeabi_ddiv
 5794              	.LVL577:
 5795              		.loc 1 4405 31 view .LVU1583
 5796 0044 FFF7FEFF 		bl	__aeabi_d2f
 5797              	.LVL578:
 5798              		.loc 1 4405 29 view .LVU1584
 5799 0048 6060     		str	r0, [r4, #4]	@ float
4406:Core/Src/bno055.c ****         linear_accel_xyz->z = (float)(reg_linear_accel.z / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5800              		.loc 1 4406 9 is_stmt 1 view .LVU1585
 5801              		.loc 1 4406 58 is_stmt 0 view .LVU1586
 5802 004a BDF90400 		ldrsh	r0, [sp, #4]
 5803 004e FFF7FEFF 		bl	__aeabi_i2d
 5804              	.LVL579:
 5805 0052 0022     		movs	r2, #0
 5806 0054 054B     		ldr	r3, .L437
 5807 0056 FFF7FEFF 		bl	__aeabi_ddiv
 5808              	.LVL580:
 5809              		.loc 1 4406 31 view .LVU1587
 5810 005a FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  /tmp/ccWoU29M.s 			page 186


 5811              	.LVL581:
 5812              		.loc 1 4406 29 view .LVU1588
 5813 005e A060     		str	r0, [r4, #8]	@ float
 5814              	.L434:
 5815              	.LVL582:
4407:Core/Src/bno055.c ****     }
4408:Core/Src/bno055.c ****     else
4409:Core/Src/bno055.c ****     {
4410:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4411:Core/Src/bno055.c ****     }
4412:Core/Src/bno055.c **** 
4413:Core/Src/bno055.c ****     return com_rslt;
 5816              		.loc 1 4413 5 is_stmt 1 view .LVU1589
4414:Core/Src/bno055.c **** }
 5817              		.loc 1 4414 1 is_stmt 0 view .LVU1590
 5818 0060 2846     		mov	r0, r5
 5819 0062 03B0     		add	sp, sp, #12
 5820              	.LCFI187:
 5821              		.cfi_remember_state
 5822              		.cfi_def_cfa_offset 12
 5823              		@ sp needed
 5824 0064 30BD     		pop	{r4, r5, pc}
 5825              	.LVL583:
 5826              	.L435:
 5827              	.LCFI188:
 5828              		.cfi_restore_state
4410:Core/Src/bno055.c ****     }
 5829              		.loc 1 4410 18 view .LVU1591
 5830 0066 4FF0FF35 		mov	r5, #-1
 5831 006a F9E7     		b	.L434
 5832              	.L438:
 5833              		.align	2
 5834              	.L437:
 5835 006c 00005940 		.word	1079574528
 5836              		.cfi_endproc
 5837              	.LFE72:
 5839              		.section	.text.bno055_convert_gravity_float_x_msq,"ax",%progbits
 5840              		.align	1
 5841              		.global	bno055_convert_gravity_float_x_msq
 5842              		.syntax unified
 5843              		.thumb
 5844              		.thumb_func
 5845              		.fpu fpv4-sp-d16
 5847              	bno055_convert_gravity_float_x_msq:
 5848              	.LVL584:
 5849              	.LFB73:
4415:Core/Src/bno055.c **** 
4416:Core/Src/bno055.c **** /*!
4417:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
4418:Core/Src/bno055.c ****  *  x raw data to meterpersecseq output as float
4419:Core/Src/bno055.c ****  *
4420:Core/Src/bno055.c ****  *  @param gravity_x_f : The float value of gravity x meterpersecseq
4421:Core/Src/bno055.c ****  *
4422:Core/Src/bno055.c ****  *  @return results of bus communication function
4423:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4424:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4425:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 187


4426:Core/Src/bno055.c ****  *
4427:Core/Src/bno055.c ****  */
4428:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_float_x_msq(float *gravity_x_f)
4429:Core/Src/bno055.c **** {
 5850              		.loc 1 4429 1 is_stmt 1 view -0
 5851              		.cfi_startproc
 5852              		@ args = 0, pretend = 0, frame = 8
 5853              		@ frame_needed = 0, uses_anonymous_args = 0
 5854              		.loc 1 4429 1 is_stmt 0 view .LVU1593
 5855 0000 30B5     		push	{r4, r5, lr}
 5856              	.LCFI189:
 5857              		.cfi_def_cfa_offset 12
 5858              		.cfi_offset 4, -12
 5859              		.cfi_offset 5, -8
 5860              		.cfi_offset 14, -4
 5861 0002 83B0     		sub	sp, sp, #12
 5862              	.LCFI190:
 5863              		.cfi_def_cfa_offset 24
 5864 0004 0446     		mov	r4, r0
4430:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5865              		.loc 1 4430 5 is_stmt 1 view .LVU1594
 5866              	.LVL585:
4431:Core/Src/bno055.c ****     s16 reg_gravity_x_s16 = BNO055_INIT_VALUE;
 5867              		.loc 1 4431 5 view .LVU1595
 5868              		.loc 1 4431 9 is_stmt 0 view .LVU1596
 5869 0006 0023     		movs	r3, #0
 5870 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4432:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5871              		.loc 1 4432 5 is_stmt 1 view .LVU1597
 5872              	.LVL586:
4433:Core/Src/bno055.c **** 
4434:Core/Src/bno055.c ****     /* Read raw gravity of x*/
4435:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_x(&reg_gravity_x_s16);
 5873              		.loc 1 4435 5 view .LVU1598
 5874              		.loc 1 4435 16 is_stmt 0 view .LVU1599
 5875 000c 0DF10600 		add	r0, sp, #6
 5876              	.LVL587:
 5877              		.loc 1 4435 16 view .LVU1600
 5878 0010 FFF7FEFF 		bl	bno055_read_gravity_x
 5879              	.LVL588:
4436:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5880              		.loc 1 4436 5 is_stmt 1 view .LVU1601
 5881              		.loc 1 4436 8 is_stmt 0 view .LVU1602
 5882 0014 70B9     		cbnz	r0, .L441
 5883 0016 0546     		mov	r5, r0
4437:Core/Src/bno055.c ****     {
4438:Core/Src/bno055.c ****         /* Convert the raw gravity x to m/s2*/
4439:Core/Src/bno055.c ****         data_f = (float)(reg_gravity_x_s16 / BNO055_GRAVITY_DIV_MSQ);
 5884              		.loc 1 4439 9 is_stmt 1 view .LVU1603
 5885              		.loc 1 4439 44 is_stmt 0 view .LVU1604
 5886 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5887              	.LVL589:
 5888              		.loc 1 4439 44 view .LVU1605
 5889 001c FFF7FEFF 		bl	__aeabi_i2d
 5890              	.LVL590:
 5891 0020 0022     		movs	r2, #0
 5892 0022 064B     		ldr	r3, .L443
ARM GAS  /tmp/ccWoU29M.s 			page 188


 5893 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5894              	.LVL591:
 5895              		.loc 1 4439 16 view .LVU1606
 5896 0028 FFF7FEFF 		bl	__aeabi_d2f
 5897              	.LVL592:
4440:Core/Src/bno055.c ****         *gravity_x_f = data_f;
 5898              		.loc 1 4440 9 is_stmt 1 view .LVU1607
 5899              		.loc 1 4440 22 is_stmt 0 view .LVU1608
 5900 002c 2060     		str	r0, [r4]	@ float
 5901              	.LVL593:
 5902              	.L440:
4441:Core/Src/bno055.c ****     }
4442:Core/Src/bno055.c ****     else
4443:Core/Src/bno055.c ****     {
4444:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4445:Core/Src/bno055.c ****     }
4446:Core/Src/bno055.c **** 
4447:Core/Src/bno055.c ****     return com_rslt;
 5903              		.loc 1 4447 5 is_stmt 1 view .LVU1609
4448:Core/Src/bno055.c **** }
 5904              		.loc 1 4448 1 is_stmt 0 view .LVU1610
 5905 002e 2846     		mov	r0, r5
 5906 0030 03B0     		add	sp, sp, #12
 5907              	.LCFI191:
 5908              		.cfi_remember_state
 5909              		.cfi_def_cfa_offset 12
 5910              		@ sp needed
 5911 0032 30BD     		pop	{r4, r5, pc}
 5912              	.LVL594:
 5913              	.L441:
 5914              	.LCFI192:
 5915              		.cfi_restore_state
4444:Core/Src/bno055.c ****     }
 5916              		.loc 1 4444 18 view .LVU1611
 5917 0034 4FF0FF35 		mov	r5, #-1
 5918 0038 F9E7     		b	.L440
 5919              	.L444:
 5920 003a 00BF     		.align	2
 5921              	.L443:
 5922 003c 00005940 		.word	1079574528
 5923              		.cfi_endproc
 5924              	.LFE73:
 5926              		.section	.text.bno055_convert_gravity_float_y_msq,"ax",%progbits
 5927              		.align	1
 5928              		.global	bno055_convert_gravity_float_y_msq
 5929              		.syntax unified
 5930              		.thumb
 5931              		.thumb_func
 5932              		.fpu fpv4-sp-d16
 5934              	bno055_convert_gravity_float_y_msq:
 5935              	.LVL595:
 5936              	.LFB74:
4449:Core/Src/bno055.c **** 
4450:Core/Src/bno055.c **** /*!
4451:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
4452:Core/Src/bno055.c ****  *  y raw data to meterpersecseq output as float
4453:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 189


4454:Core/Src/bno055.c ****  *  @param gravity_y_f : The float value of gravity y meterpersecseq
4455:Core/Src/bno055.c ****  *
4456:Core/Src/bno055.c ****  *  @return results of bus communication function
4457:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4458:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4459:Core/Src/bno055.c ****  *
4460:Core/Src/bno055.c ****  *
4461:Core/Src/bno055.c ****  */
4462:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_float_y_msq(float *gravity_y_f)
4463:Core/Src/bno055.c **** {
 5937              		.loc 1 4463 1 is_stmt 1 view -0
 5938              		.cfi_startproc
 5939              		@ args = 0, pretend = 0, frame = 8
 5940              		@ frame_needed = 0, uses_anonymous_args = 0
 5941              		.loc 1 4463 1 is_stmt 0 view .LVU1613
 5942 0000 30B5     		push	{r4, r5, lr}
 5943              	.LCFI193:
 5944              		.cfi_def_cfa_offset 12
 5945              		.cfi_offset 4, -12
 5946              		.cfi_offset 5, -8
 5947              		.cfi_offset 14, -4
 5948 0002 83B0     		sub	sp, sp, #12
 5949              	.LCFI194:
 5950              		.cfi_def_cfa_offset 24
 5951 0004 0446     		mov	r4, r0
4464:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5952              		.loc 1 4464 5 is_stmt 1 view .LVU1614
 5953              	.LVL596:
4465:Core/Src/bno055.c ****     s16 reg_gravity_y_s16 = BNO055_INIT_VALUE;
 5954              		.loc 1 4465 5 view .LVU1615
 5955              		.loc 1 4465 9 is_stmt 0 view .LVU1616
 5956 0006 0023     		movs	r3, #0
 5957 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4466:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5958              		.loc 1 4466 5 is_stmt 1 view .LVU1617
 5959              	.LVL597:
4467:Core/Src/bno055.c **** 
4468:Core/Src/bno055.c ****     /* Read raw gravity of y*/
4469:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_y(&reg_gravity_y_s16);
 5960              		.loc 1 4469 5 view .LVU1618
 5961              		.loc 1 4469 16 is_stmt 0 view .LVU1619
 5962 000c 0DF10600 		add	r0, sp, #6
 5963              	.LVL598:
 5964              		.loc 1 4469 16 view .LVU1620
 5965 0010 FFF7FEFF 		bl	bno055_read_gravity_y
 5966              	.LVL599:
4470:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5967              		.loc 1 4470 5 is_stmt 1 view .LVU1621
 5968              		.loc 1 4470 8 is_stmt 0 view .LVU1622
 5969 0014 70B9     		cbnz	r0, .L447
 5970 0016 0546     		mov	r5, r0
4471:Core/Src/bno055.c ****     {
4472:Core/Src/bno055.c ****         /* Convert the raw gravity y to m/s2*/
4473:Core/Src/bno055.c ****         data_f = (float)(reg_gravity_y_s16 / BNO055_GRAVITY_DIV_MSQ);
 5971              		.loc 1 4473 9 is_stmt 1 view .LVU1623
 5972              		.loc 1 4473 44 is_stmt 0 view .LVU1624
 5973 0018 BDF90600 		ldrsh	r0, [sp, #6]
ARM GAS  /tmp/ccWoU29M.s 			page 190


 5974              	.LVL600:
 5975              		.loc 1 4473 44 view .LVU1625
 5976 001c FFF7FEFF 		bl	__aeabi_i2d
 5977              	.LVL601:
 5978 0020 0022     		movs	r2, #0
 5979 0022 064B     		ldr	r3, .L449
 5980 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5981              	.LVL602:
 5982              		.loc 1 4473 16 view .LVU1626
 5983 0028 FFF7FEFF 		bl	__aeabi_d2f
 5984              	.LVL603:
4474:Core/Src/bno055.c ****         *gravity_y_f = data_f;
 5985              		.loc 1 4474 9 is_stmt 1 view .LVU1627
 5986              		.loc 1 4474 22 is_stmt 0 view .LVU1628
 5987 002c 2060     		str	r0, [r4]	@ float
 5988              	.LVL604:
 5989              	.L446:
4475:Core/Src/bno055.c ****     }
4476:Core/Src/bno055.c ****     else
4477:Core/Src/bno055.c ****     {
4478:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4479:Core/Src/bno055.c ****     }
4480:Core/Src/bno055.c **** 
4481:Core/Src/bno055.c ****     return com_rslt;
 5990              		.loc 1 4481 5 is_stmt 1 view .LVU1629
4482:Core/Src/bno055.c **** }
 5991              		.loc 1 4482 1 is_stmt 0 view .LVU1630
 5992 002e 2846     		mov	r0, r5
 5993 0030 03B0     		add	sp, sp, #12
 5994              	.LCFI195:
 5995              		.cfi_remember_state
 5996              		.cfi_def_cfa_offset 12
 5997              		@ sp needed
 5998 0032 30BD     		pop	{r4, r5, pc}
 5999              	.LVL605:
 6000              	.L447:
 6001              	.LCFI196:
 6002              		.cfi_restore_state
4478:Core/Src/bno055.c ****     }
 6003              		.loc 1 4478 18 view .LVU1631
 6004 0034 4FF0FF35 		mov	r5, #-1
 6005 0038 F9E7     		b	.L446
 6006              	.L450:
 6007 003a 00BF     		.align	2
 6008              	.L449:
 6009 003c 00005940 		.word	1079574528
 6010              		.cfi_endproc
 6011              	.LFE74:
 6013              		.section	.text.bno055_convert_gravity_float_z_msq,"ax",%progbits
 6014              		.align	1
 6015              		.global	bno055_convert_gravity_float_z_msq
 6016              		.syntax unified
 6017              		.thumb
 6018              		.thumb_func
 6019              		.fpu fpv4-sp-d16
 6021              	bno055_convert_gravity_float_z_msq:
 6022              	.LVL606:
ARM GAS  /tmp/ccWoU29M.s 			page 191


 6023              	.LFB75:
4483:Core/Src/bno055.c **** 
4484:Core/Src/bno055.c **** /*!
4485:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
4486:Core/Src/bno055.c ****  *  z raw data to meterpersecseq output as float
4487:Core/Src/bno055.c ****  *
4488:Core/Src/bno055.c ****  *  @param gravity_z_f : The float value of gravity z meterpersecseq
4489:Core/Src/bno055.c ****  *
4490:Core/Src/bno055.c ****  *  @return results of bus communication function
4491:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4492:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4493:Core/Src/bno055.c ****  *
4494:Core/Src/bno055.c ****  */
4495:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_float_z_msq(float *gravity_z_f)
4496:Core/Src/bno055.c **** {
 6024              		.loc 1 4496 1 is_stmt 1 view -0
 6025              		.cfi_startproc
 6026              		@ args = 0, pretend = 0, frame = 8
 6027              		@ frame_needed = 0, uses_anonymous_args = 0
 6028              		.loc 1 4496 1 is_stmt 0 view .LVU1633
 6029 0000 30B5     		push	{r4, r5, lr}
 6030              	.LCFI197:
 6031              		.cfi_def_cfa_offset 12
 6032              		.cfi_offset 4, -12
 6033              		.cfi_offset 5, -8
 6034              		.cfi_offset 14, -4
 6035 0002 83B0     		sub	sp, sp, #12
 6036              	.LCFI198:
 6037              		.cfi_def_cfa_offset 24
 6038 0004 0446     		mov	r4, r0
4497:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6039              		.loc 1 4497 5 is_stmt 1 view .LVU1634
 6040              	.LVL607:
4498:Core/Src/bno055.c ****     s16 reg_gravity_z_s16 = BNO055_INIT_VALUE;
 6041              		.loc 1 4498 5 view .LVU1635
 6042              		.loc 1 4498 9 is_stmt 0 view .LVU1636
 6043 0006 0023     		movs	r3, #0
 6044 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4499:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 6045              		.loc 1 4499 5 is_stmt 1 view .LVU1637
 6046              	.LVL608:
4500:Core/Src/bno055.c **** 
4501:Core/Src/bno055.c ****     /* Read raw gravity of z */
4502:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_z(&reg_gravity_z_s16);
 6047              		.loc 1 4502 5 view .LVU1638
 6048              		.loc 1 4502 16 is_stmt 0 view .LVU1639
 6049 000c 0DF10600 		add	r0, sp, #6
 6050              	.LVL609:
 6051              		.loc 1 4502 16 view .LVU1640
 6052 0010 FFF7FEFF 		bl	bno055_read_gravity_z
 6053              	.LVL610:
4503:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6054              		.loc 1 4503 5 is_stmt 1 view .LVU1641
 6055              		.loc 1 4503 8 is_stmt 0 view .LVU1642
 6056 0014 70B9     		cbnz	r0, .L453
 6057 0016 0546     		mov	r5, r0
4504:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccWoU29M.s 			page 192


4505:Core/Src/bno055.c ****         /* Convert the raw gravity z to m/s2*/
4506:Core/Src/bno055.c ****         data_f = (float)(reg_gravity_z_s16 / BNO055_GRAVITY_DIV_MSQ);
 6058              		.loc 1 4506 9 is_stmt 1 view .LVU1643
 6059              		.loc 1 4506 44 is_stmt 0 view .LVU1644
 6060 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6061              	.LVL611:
 6062              		.loc 1 4506 44 view .LVU1645
 6063 001c FFF7FEFF 		bl	__aeabi_i2d
 6064              	.LVL612:
 6065 0020 0022     		movs	r2, #0
 6066 0022 064B     		ldr	r3, .L455
 6067 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6068              	.LVL613:
 6069              		.loc 1 4506 16 view .LVU1646
 6070 0028 FFF7FEFF 		bl	__aeabi_d2f
 6071              	.LVL614:
4507:Core/Src/bno055.c ****         *gravity_z_f = data_f;
 6072              		.loc 1 4507 9 is_stmt 1 view .LVU1647
 6073              		.loc 1 4507 22 is_stmt 0 view .LVU1648
 6074 002c 2060     		str	r0, [r4]	@ float
 6075              	.LVL615:
 6076              	.L452:
4508:Core/Src/bno055.c ****     }
4509:Core/Src/bno055.c ****     else
4510:Core/Src/bno055.c ****     {
4511:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4512:Core/Src/bno055.c ****     }
4513:Core/Src/bno055.c **** 
4514:Core/Src/bno055.c ****     return com_rslt;
 6077              		.loc 1 4514 5 is_stmt 1 view .LVU1649
4515:Core/Src/bno055.c **** }
 6078              		.loc 1 4515 1 is_stmt 0 view .LVU1650
 6079 002e 2846     		mov	r0, r5
 6080 0030 03B0     		add	sp, sp, #12
 6081              	.LCFI199:
 6082              		.cfi_remember_state
 6083              		.cfi_def_cfa_offset 12
 6084              		@ sp needed
 6085 0032 30BD     		pop	{r4, r5, pc}
 6086              	.LVL616:
 6087              	.L453:
 6088              	.LCFI200:
 6089              		.cfi_restore_state
4511:Core/Src/bno055.c ****     }
 6090              		.loc 1 4511 18 view .LVU1651
 6091 0034 4FF0FF35 		mov	r5, #-1
 6092 0038 F9E7     		b	.L452
 6093              	.L456:
 6094 003a 00BF     		.align	2
 6095              	.L455:
 6096 003c 00005940 		.word	1079574528
 6097              		.cfi_endproc
 6098              	.LFE75:
 6100              		.section	.text.bno055_convert_float_gravity_xyz_msq,"ax",%progbits
 6101              		.align	1
 6102              		.global	bno055_convert_float_gravity_xyz_msq
 6103              		.syntax unified
ARM GAS  /tmp/ccWoU29M.s 			page 193


 6104              		.thumb
 6105              		.thumb_func
 6106              		.fpu fpv4-sp-d16
 6108              	bno055_convert_float_gravity_xyz_msq:
 6109              	.LVL617:
 6110              	.LFB76:
4516:Core/Src/bno055.c **** 
4517:Core/Src/bno055.c **** /*!
4518:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity xyz raw data
4519:Core/Src/bno055.c ****  *  to meterpersecseq output as float
4520:Core/Src/bno055.c ****  *
4521:Core/Src/bno055.c ****  *  @param gravity_xyz : The meterpersecseq data of gravity xyz
4522:Core/Src/bno055.c ****  *
4523:Core/Src/bno055.c ****  *  Parameter |    result
4524:Core/Src/bno055.c ****  *  --------- | -----------------
4525:Core/Src/bno055.c ****  *    x       | meterpersecseq data of gravity
4526:Core/Src/bno055.c ****  *    y       | meterpersecseq data of gravity
4527:Core/Src/bno055.c ****  *    z       | meterpersecseq data of gravity
4528:Core/Src/bno055.c ****  *
4529:Core/Src/bno055.c ****  *
4530:Core/Src/bno055.c ****  *  @return results of bus communication function
4531:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4532:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4533:Core/Src/bno055.c ****  *
4534:Core/Src/bno055.c ****  *
4535:Core/Src/bno055.c ****  */
4536:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gravity_xyz_msq(struct bno055_gravity_float_t *gra
4537:Core/Src/bno055.c **** {
 6111              		.loc 1 4537 1 is_stmt 1 view -0
 6112              		.cfi_startproc
 6113              		@ args = 0, pretend = 0, frame = 8
 6114              		@ frame_needed = 0, uses_anonymous_args = 0
 6115              		.loc 1 4537 1 is_stmt 0 view .LVU1653
 6116 0000 30B5     		push	{r4, r5, lr}
 6117              	.LCFI201:
 6118              		.cfi_def_cfa_offset 12
 6119              		.cfi_offset 4, -12
 6120              		.cfi_offset 5, -8
 6121              		.cfi_offset 14, -4
 6122 0002 83B0     		sub	sp, sp, #12
 6123              	.LCFI202:
 6124              		.cfi_def_cfa_offset 24
 6125 0004 0446     		mov	r4, r0
4538:Core/Src/bno055.c ****     /* Variable used to return value of
4539:Core/Src/bno055.c ****      * communication routine*/
4540:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6126              		.loc 1 4540 5 is_stmt 1 view .LVU1654
 6127              	.LVL618:
4541:Core/Src/bno055.c ****     struct bno055_gravity_t reg_gravity_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_V
 6128              		.loc 1 4541 5 view .LVU1655
 6129              		.loc 1 4541 29 is_stmt 0 view .LVU1656
 6130 0006 0023     		movs	r3, #0
 6131 0008 ADF80030 		strh	r3, [sp]	@ movhi
 6132 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 6133 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
4542:Core/Src/bno055.c **** 
4543:Core/Src/bno055.c ****     /* Read raw gravity of xyz */
ARM GAS  /tmp/ccWoU29M.s 			page 194


4544:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_xyz(&reg_gravity_xyz);
 6134              		.loc 1 4544 5 is_stmt 1 view .LVU1657
 6135              		.loc 1 4544 16 is_stmt 0 view .LVU1658
 6136 0014 6846     		mov	r0, sp
 6137              	.LVL619:
 6138              		.loc 1 4544 16 view .LVU1659
 6139 0016 FFF7FEFF 		bl	bno055_read_gravity_xyz
 6140              	.LVL620:
4545:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6141              		.loc 1 4545 5 is_stmt 1 view .LVU1660
 6142              		.loc 1 4545 8 is_stmt 0 view .LVU1661
 6143 001a 20BB     		cbnz	r0, .L459
 6144 001c 0546     		mov	r5, r0
4546:Core/Src/bno055.c ****     {
4547:Core/Src/bno055.c ****         /* Convert raw gravity xyz to meterpersecseq */
4548:Core/Src/bno055.c ****         gravity_xyz->x = (float)(reg_gravity_xyz.x / BNO055_GRAVITY_DIV_MSQ);
 6145              		.loc 1 4548 9 is_stmt 1 view .LVU1662
 6146              		.loc 1 4548 52 is_stmt 0 view .LVU1663
 6147 001e BDF90000 		ldrsh	r0, [sp]
 6148              	.LVL621:
 6149              		.loc 1 4548 52 view .LVU1664
 6150 0022 FFF7FEFF 		bl	__aeabi_i2d
 6151              	.LVL622:
 6152 0026 0022     		movs	r2, #0
 6153 0028 104B     		ldr	r3, .L461
 6154 002a FFF7FEFF 		bl	__aeabi_ddiv
 6155              	.LVL623:
 6156              		.loc 1 4548 26 view .LVU1665
 6157 002e FFF7FEFF 		bl	__aeabi_d2f
 6158              	.LVL624:
 6159              		.loc 1 4548 24 view .LVU1666
 6160 0032 2060     		str	r0, [r4]	@ float
4549:Core/Src/bno055.c ****         gravity_xyz->y = (float)(reg_gravity_xyz.y / BNO055_GRAVITY_DIV_MSQ);
 6161              		.loc 1 4549 9 is_stmt 1 view .LVU1667
 6162              		.loc 1 4549 52 is_stmt 0 view .LVU1668
 6163 0034 BDF90200 		ldrsh	r0, [sp, #2]
 6164 0038 FFF7FEFF 		bl	__aeabi_i2d
 6165              	.LVL625:
 6166 003c 0022     		movs	r2, #0
 6167 003e 0B4B     		ldr	r3, .L461
 6168 0040 FFF7FEFF 		bl	__aeabi_ddiv
 6169              	.LVL626:
 6170              		.loc 1 4549 26 view .LVU1669
 6171 0044 FFF7FEFF 		bl	__aeabi_d2f
 6172              	.LVL627:
 6173              		.loc 1 4549 24 view .LVU1670
 6174 0048 6060     		str	r0, [r4, #4]	@ float
4550:Core/Src/bno055.c ****         gravity_xyz->z = (float)(reg_gravity_xyz.z / BNO055_GRAVITY_DIV_MSQ);
 6175              		.loc 1 4550 9 is_stmt 1 view .LVU1671
 6176              		.loc 1 4550 52 is_stmt 0 view .LVU1672
 6177 004a BDF90400 		ldrsh	r0, [sp, #4]
 6178 004e FFF7FEFF 		bl	__aeabi_i2d
 6179              	.LVL628:
 6180 0052 0022     		movs	r2, #0
 6181 0054 054B     		ldr	r3, .L461
 6182 0056 FFF7FEFF 		bl	__aeabi_ddiv
 6183              	.LVL629:
ARM GAS  /tmp/ccWoU29M.s 			page 195


 6184              		.loc 1 4550 26 view .LVU1673
 6185 005a FFF7FEFF 		bl	__aeabi_d2f
 6186              	.LVL630:
 6187              		.loc 1 4550 24 view .LVU1674
 6188 005e A060     		str	r0, [r4, #8]	@ float
 6189              	.L458:
 6190              	.LVL631:
4551:Core/Src/bno055.c ****     }
4552:Core/Src/bno055.c ****     else
4553:Core/Src/bno055.c ****     {
4554:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4555:Core/Src/bno055.c ****     }
4556:Core/Src/bno055.c **** 
4557:Core/Src/bno055.c ****     return com_rslt;
 6191              		.loc 1 4557 5 is_stmt 1 view .LVU1675
4558:Core/Src/bno055.c **** }
 6192              		.loc 1 4558 1 is_stmt 0 view .LVU1676
 6193 0060 2846     		mov	r0, r5
 6194 0062 03B0     		add	sp, sp, #12
 6195              	.LCFI203:
 6196              		.cfi_remember_state
 6197              		.cfi_def_cfa_offset 12
 6198              		@ sp needed
 6199 0064 30BD     		pop	{r4, r5, pc}
 6200              	.LVL632:
 6201              	.L459:
 6202              	.LCFI204:
 6203              		.cfi_restore_state
4554:Core/Src/bno055.c ****     }
 6204              		.loc 1 4554 18 view .LVU1677
 6205 0066 4FF0FF35 		mov	r5, #-1
 6206 006a F9E7     		b	.L458
 6207              	.L462:
 6208              		.align	2
 6209              	.L461:
 6210 006c 00005940 		.word	1079574528
 6211              		.cfi_endproc
 6212              	.LFE76:
 6214              		.section	.text.bno055_convert_double_mag_x_uT,"ax",%progbits
 6215              		.align	1
 6216              		.global	bno055_convert_double_mag_x_uT
 6217              		.syntax unified
 6218              		.thumb
 6219              		.thumb_func
 6220              		.fpu fpv4-sp-d16
 6222              	bno055_convert_double_mag_x_uT:
 6223              	.LVL633:
 6224              	.LFB87:
4559:Core/Src/bno055.c **** 
4560:Core/Src/bno055.c **** /*!
4561:Core/Src/bno055.c ****  *  @brief This API is used to convert the temperature
4562:Core/Src/bno055.c ****  *  data to Fahrenheit output as float
4563:Core/Src/bno055.c ****  *
4564:Core/Src/bno055.c ****  *  @param temp_f : The float value of temperature Fahrenheit
4565:Core/Src/bno055.c ****  *
4566:Core/Src/bno055.c ****  *  @return results of bus communication function
4567:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
ARM GAS  /tmp/ccWoU29M.s 			page 196


4568:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4569:Core/Src/bno055.c ****  *
4570:Core/Src/bno055.c ****  *
4571:Core/Src/bno055.c ****  */
4572:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_temp_fahrenheit(float *temp_f)
4573:Core/Src/bno055.c **** {
4574:Core/Src/bno055.c ****     /* Variable used to return value of
4575:Core/Src/bno055.c ****      * communication routine*/
4576:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4577:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
4578:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4579:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
4580:Core/Src/bno055.c **** 
4581:Core/Src/bno055.c ****     /* Read the current temperature unit and set the
4582:Core/Src/bno055.c ****      * unit as Fahrenheit if the unit is in Celsius */
4583:Core/Src/bno055.c ****     com_rslt = bno055_get_temp_unit(&temp_unit_u8);
4584:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
4585:Core/Src/bno055.c ****     {
4586:Core/Src/bno055.c ****         com_rslt += bno055_set_temp_unit(BNO055_TEMP_UNIT_FAHRENHEIT);
4587:Core/Src/bno055.c ****     }
4588:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4589:Core/Src/bno055.c ****     {
4590:Core/Src/bno055.c ****         /* Read the raw temperature data */
4591:Core/Src/bno055.c ****         com_rslt += bno055_read_temp_data(&reg_temp_s8);
4592:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4593:Core/Src/bno055.c ****         {
4594:Core/Src/bno055.c ****             /* Convert raw temperature data to Fahrenheit*/
4595:Core/Src/bno055.c ****             data_f = (float)(reg_temp_s8 / BNO055_TEMP_DIV_FAHRENHEIT);
4596:Core/Src/bno055.c ****             *temp_f = data_f;
4597:Core/Src/bno055.c ****         }
4598:Core/Src/bno055.c ****         else
4599:Core/Src/bno055.c ****         {
4600:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4601:Core/Src/bno055.c ****         }
4602:Core/Src/bno055.c ****     }
4603:Core/Src/bno055.c ****     else
4604:Core/Src/bno055.c ****     {
4605:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4606:Core/Src/bno055.c ****     }
4607:Core/Src/bno055.c **** 
4608:Core/Src/bno055.c ****     return com_rslt;
4609:Core/Src/bno055.c **** }
4610:Core/Src/bno055.c **** 
4611:Core/Src/bno055.c **** /*!
4612:Core/Src/bno055.c ****  *  @brief This API is used to convert the temperature
4613:Core/Src/bno055.c ****  *  data to Celsius output as float
4614:Core/Src/bno055.c ****  *
4615:Core/Src/bno055.c ****  *  @param temp_f : The float value of temperature Celsius
4616:Core/Src/bno055.c ****  *
4617:Core/Src/bno055.c ****  *  @return results of bus communication function
4618:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4619:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4620:Core/Src/bno055.c ****  *
4621:Core/Src/bno055.c ****  *
4622:Core/Src/bno055.c ****  *
4623:Core/Src/bno055.c ****  */
4624:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_temp_celsius(float *temp_f)
ARM GAS  /tmp/ccWoU29M.s 			page 197


4625:Core/Src/bno055.c **** {
4626:Core/Src/bno055.c ****     /* Variable used to return value of
4627:Core/Src/bno055.c ****      * communication routine*/
4628:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4629:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
4630:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4631:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
4632:Core/Src/bno055.c **** 
4633:Core/Src/bno055.c ****     /* Read the current temperature unit and set the
4634:Core/Src/bno055.c ****      * unit as Fahrenheit if the unit is in Celsius */
4635:Core/Src/bno055.c ****     com_rslt = bno055_get_temp_unit(&temp_unit_u8);
4636:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
4637:Core/Src/bno055.c ****     {
4638:Core/Src/bno055.c ****         com_rslt += bno055_set_temp_unit(BNO055_TEMP_UNIT_CELSIUS);
4639:Core/Src/bno055.c ****     }
4640:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4641:Core/Src/bno055.c ****     {
4642:Core/Src/bno055.c ****         /* Read the raw temperature data */
4643:Core/Src/bno055.c ****         com_rslt += bno055_read_temp_data(&reg_temp_s8);
4644:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4645:Core/Src/bno055.c ****         {
4646:Core/Src/bno055.c ****             /* Convert raw temperature data to Fahrenheit*/
4647:Core/Src/bno055.c ****             data_f = (float)(reg_temp_s8 / BNO055_TEMP_DIV_CELSIUS);
4648:Core/Src/bno055.c ****             *temp_f = data_f;
4649:Core/Src/bno055.c ****         }
4650:Core/Src/bno055.c ****         else
4651:Core/Src/bno055.c ****         {
4652:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4653:Core/Src/bno055.c ****         }
4654:Core/Src/bno055.c ****     }
4655:Core/Src/bno055.c ****     else
4656:Core/Src/bno055.c ****     {
4657:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4658:Core/Src/bno055.c ****     }
4659:Core/Src/bno055.c **** 
4660:Core/Src/bno055.c ****     return com_rslt;
4661:Core/Src/bno055.c **** }
4662:Core/Src/bno055.c **** #endif
4663:Core/Src/bno055.c **** #ifdef  BNO055_DOUBLE_ENABLE
4664:Core/Src/bno055.c **** 
4665:Core/Src/bno055.c **** /*!
4666:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
4667:Core/Src/bno055.c ****  *  to meterpersecseq output as double
4668:Core/Src/bno055.c ****  *
4669:Core/Src/bno055.c ****  *  @param accel_x_d : The accel x meterpersecseq data
4670:Core/Src/bno055.c ****  *
4671:Core/Src/bno055.c ****  *
4672:Core/Src/bno055.c ****  *
4673:Core/Src/bno055.c ****  *  @return results of bus communication function
4674:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4675:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4676:Core/Src/bno055.c ****  *
4677:Core/Src/bno055.c ****  *
4678:Core/Src/bno055.c ****  */
4679:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_x_msq(double *accel_x_d)
4680:Core/Src/bno055.c **** {
4681:Core/Src/bno055.c ****     /* Variable used to return value of
ARM GAS  /tmp/ccWoU29M.s 			page 198


4682:Core/Src/bno055.c ****      * communication routine*/
4683:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4684:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
4685:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
4686:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4687:Core/Src/bno055.c **** 
4688:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4689:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
4690:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4691:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
4692:Core/Src/bno055.c ****     {
4693:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
4694:Core/Src/bno055.c ****     }
4695:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4696:Core/Src/bno055.c ****     {
4697:Core/Src/bno055.c ****         /* Read the accel raw y data*/
4698:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_x(&reg_accel_x_s16);
4699:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4700:Core/Src/bno055.c ****         {
4701:Core/Src/bno055.c ****             /* Convert the raw x to m/s2 */
4702:Core/Src/bno055.c ****             data_f = (double)(reg_accel_x_s16 / BNO055_ACCEL_DIV_MSQ);
4703:Core/Src/bno055.c ****             *accel_x_d = data_f;
4704:Core/Src/bno055.c ****         }
4705:Core/Src/bno055.c ****         else
4706:Core/Src/bno055.c ****         {
4707:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4708:Core/Src/bno055.c ****         }
4709:Core/Src/bno055.c ****     }
4710:Core/Src/bno055.c ****     else
4711:Core/Src/bno055.c ****     {
4712:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4713:Core/Src/bno055.c ****     }
4714:Core/Src/bno055.c **** 
4715:Core/Src/bno055.c ****     return com_rslt;
4716:Core/Src/bno055.c **** }
4717:Core/Src/bno055.c **** 
4718:Core/Src/bno055.c **** /*!
4719:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
4720:Core/Src/bno055.c ****  *  to millig output as double
4721:Core/Src/bno055.c ****  *
4722:Core/Src/bno055.c ****  *  @param accel_x_d : The accel x millig data
4723:Core/Src/bno055.c ****  *
4724:Core/Src/bno055.c ****  *
4725:Core/Src/bno055.c ****  *
4726:Core/Src/bno055.c ****  *  @return results of bus communication function
4727:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4728:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4729:Core/Src/bno055.c ****  *
4730:Core/Src/bno055.c ****  *
4731:Core/Src/bno055.c ****  *
4732:Core/Src/bno055.c ****  */
4733:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_x_mg(double *accel_x_d)
4734:Core/Src/bno055.c **** {
4735:Core/Src/bno055.c ****     /* Variable used to return value of
4736:Core/Src/bno055.c ****      * communication routine*/
4737:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4738:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccWoU29M.s 			page 199


4739:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
4740:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4741:Core/Src/bno055.c **** 
4742:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4743:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
4744:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4745:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
4746:Core/Src/bno055.c ****     {
4747:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
4748:Core/Src/bno055.c ****     }
4749:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4750:Core/Src/bno055.c ****     {
4751:Core/Src/bno055.c ****         /* Read the accel raw y data*/
4752:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_x(&reg_accel_x_s16);
4753:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4754:Core/Src/bno055.c ****         {
4755:Core/Src/bno055.c ****             /* Convert the raw x to mg */
4756:Core/Src/bno055.c ****             data_f = (double)(reg_accel_x_s16 / BNO055_ACCEL_DIV_MG);
4757:Core/Src/bno055.c ****             *accel_x_d = data_f;
4758:Core/Src/bno055.c ****         }
4759:Core/Src/bno055.c ****         else
4760:Core/Src/bno055.c ****         {
4761:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4762:Core/Src/bno055.c ****         }
4763:Core/Src/bno055.c ****     }
4764:Core/Src/bno055.c ****     else
4765:Core/Src/bno055.c ****     {
4766:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4767:Core/Src/bno055.c ****     }
4768:Core/Src/bno055.c **** 
4769:Core/Src/bno055.c ****     return com_rslt;
4770:Core/Src/bno055.c **** }
4771:Core/Src/bno055.c **** 
4772:Core/Src/bno055.c **** /*!
4773:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel y raw data
4774:Core/Src/bno055.c ****  *  to meterpersecseq output as double
4775:Core/Src/bno055.c ****  *
4776:Core/Src/bno055.c ****  *  @param accel_y_d : The accel y meterpersecseq data
4777:Core/Src/bno055.c ****  *
4778:Core/Src/bno055.c ****  *
4779:Core/Src/bno055.c ****  *
4780:Core/Src/bno055.c ****  *  @return results of bus communication function
4781:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4782:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4783:Core/Src/bno055.c ****  *
4784:Core/Src/bno055.c ****  *
4785:Core/Src/bno055.c ****  *
4786:Core/Src/bno055.c ****  */
4787:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_y_msq(double *accel_y_d)
4788:Core/Src/bno055.c **** {
4789:Core/Src/bno055.c ****     /* Variable used to return value of
4790:Core/Src/bno055.c ****      * communication routine*/
4791:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4792:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
4793:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
4794:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4795:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 200


4796:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4797:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
4798:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4799:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
4800:Core/Src/bno055.c ****     {
4801:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
4802:Core/Src/bno055.c ****     }
4803:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4804:Core/Src/bno055.c ****     {
4805:Core/Src/bno055.c ****         /* Read the accel raw y data*/
4806:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_y(&reg_accel_y_s16);
4807:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4808:Core/Src/bno055.c ****         {
4809:Core/Src/bno055.c ****             /* Convert the raw x to m/s2 */
4810:Core/Src/bno055.c ****             data_f = (double)(reg_accel_y_s16 / BNO055_ACCEL_DIV_MSQ);
4811:Core/Src/bno055.c ****             *accel_y_d = data_f;
4812:Core/Src/bno055.c ****         }
4813:Core/Src/bno055.c ****         else
4814:Core/Src/bno055.c ****         {
4815:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4816:Core/Src/bno055.c ****         }
4817:Core/Src/bno055.c ****     }
4818:Core/Src/bno055.c ****     else
4819:Core/Src/bno055.c ****     {
4820:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4821:Core/Src/bno055.c ****     }
4822:Core/Src/bno055.c **** 
4823:Core/Src/bno055.c ****     return com_rslt;
4824:Core/Src/bno055.c **** }
4825:Core/Src/bno055.c **** 
4826:Core/Src/bno055.c **** /*!
4827:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel y raw data
4828:Core/Src/bno055.c ****  *  to millig output as double
4829:Core/Src/bno055.c ****  *
4830:Core/Src/bno055.c ****  *  @param accel_y_d : The accel y millig data
4831:Core/Src/bno055.c ****  *
4832:Core/Src/bno055.c ****  *
4833:Core/Src/bno055.c ****  *
4834:Core/Src/bno055.c ****  *  @return results of bus communication function
4835:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4836:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4837:Core/Src/bno055.c ****  *
4838:Core/Src/bno055.c ****  *
4839:Core/Src/bno055.c ****  */
4840:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_y_mg(double *accel_y_d)
4841:Core/Src/bno055.c **** {
4842:Core/Src/bno055.c ****     /* Variable used to return value of
4843:Core/Src/bno055.c ****      * communication routine*/
4844:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4845:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
4846:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
4847:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4848:Core/Src/bno055.c **** 
4849:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4850:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
4851:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4852:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
ARM GAS  /tmp/ccWoU29M.s 			page 201


4853:Core/Src/bno055.c ****     {
4854:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
4855:Core/Src/bno055.c ****     }
4856:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4857:Core/Src/bno055.c ****     {
4858:Core/Src/bno055.c ****         /* Read the accel raw y data*/
4859:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_y(&reg_accel_y_s16);
4860:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4861:Core/Src/bno055.c ****         {
4862:Core/Src/bno055.c ****             /* Convert the raw y to mg */
4863:Core/Src/bno055.c ****             data_d = (double)(reg_accel_y_s16 / BNO055_ACCEL_DIV_MG);
4864:Core/Src/bno055.c ****             *accel_y_d = data_d;
4865:Core/Src/bno055.c ****         }
4866:Core/Src/bno055.c ****         else
4867:Core/Src/bno055.c ****         {
4868:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4869:Core/Src/bno055.c ****         }
4870:Core/Src/bno055.c ****     }
4871:Core/Src/bno055.c ****     else
4872:Core/Src/bno055.c ****     {
4873:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4874:Core/Src/bno055.c ****     }
4875:Core/Src/bno055.c **** 
4876:Core/Src/bno055.c ****     return com_rslt;
4877:Core/Src/bno055.c **** }
4878:Core/Src/bno055.c **** 
4879:Core/Src/bno055.c **** /*!
4880:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel z raw data
4881:Core/Src/bno055.c ****  *  to meterpersecseq output as double
4882:Core/Src/bno055.c ****  *
4883:Core/Src/bno055.c ****  *  @param accel_z_d : The accel z meterpersecseq data
4884:Core/Src/bno055.c ****  *
4885:Core/Src/bno055.c ****  *
4886:Core/Src/bno055.c ****  *
4887:Core/Src/bno055.c ****  *  @return results of bus communication function
4888:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4889:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4890:Core/Src/bno055.c ****  */
4891:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_z_msq(double *accel_z_d)
4892:Core/Src/bno055.c **** {
4893:Core/Src/bno055.c ****     /* Variable used to return value of
4894:Core/Src/bno055.c ****      * communication routine*/
4895:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4896:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
4897:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
4898:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4899:Core/Src/bno055.c **** 
4900:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4901:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
4902:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4903:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
4904:Core/Src/bno055.c ****     {
4905:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
4906:Core/Src/bno055.c ****     }
4907:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4908:Core/Src/bno055.c ****     {
4909:Core/Src/bno055.c ****         /* Read the accel raw z data*/
ARM GAS  /tmp/ccWoU29M.s 			page 202


4910:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_z(&reg_accel_z_s16);
4911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4912:Core/Src/bno055.c ****         {
4913:Core/Src/bno055.c ****             /* Convert the raw z to m/s2 */
4914:Core/Src/bno055.c ****             data_d = (double)(reg_accel_z_s16 / BNO055_ACCEL_DIV_MSQ);
4915:Core/Src/bno055.c ****             *accel_z_d = data_d;
4916:Core/Src/bno055.c ****         }
4917:Core/Src/bno055.c ****         else
4918:Core/Src/bno055.c ****         {
4919:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4920:Core/Src/bno055.c ****         }
4921:Core/Src/bno055.c ****     }
4922:Core/Src/bno055.c ****     else
4923:Core/Src/bno055.c ****     {
4924:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4925:Core/Src/bno055.c ****     }
4926:Core/Src/bno055.c **** 
4927:Core/Src/bno055.c ****     return com_rslt;
4928:Core/Src/bno055.c **** }
4929:Core/Src/bno055.c **** 
4930:Core/Src/bno055.c **** /*!
4931:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel z raw data
4932:Core/Src/bno055.c ****  *  to millig output as double
4933:Core/Src/bno055.c ****  *
4934:Core/Src/bno055.c ****  *  @param accel_z_d : The accel z millig data
4935:Core/Src/bno055.c ****  *
4936:Core/Src/bno055.c ****  *
4937:Core/Src/bno055.c ****  *
4938:Core/Src/bno055.c ****  *  @return results of bus communication function
4939:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4940:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4941:Core/Src/bno055.c ****  *
4942:Core/Src/bno055.c ****  */
4943:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_z_mg(double *accel_z_d)
4944:Core/Src/bno055.c **** {
4945:Core/Src/bno055.c ****     /* Variable used to return value of
4946:Core/Src/bno055.c ****      * communication routine*/
4947:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4948:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
4949:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
4950:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4951:Core/Src/bno055.c **** 
4952:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4953:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
4954:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4955:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
4956:Core/Src/bno055.c ****     {
4957:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
4958:Core/Src/bno055.c ****     }
4959:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4960:Core/Src/bno055.c ****     {
4961:Core/Src/bno055.c ****         /* Read the accel raw z data*/
4962:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_z(&reg_accel_z_s16);
4963:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4964:Core/Src/bno055.c ****         {
4965:Core/Src/bno055.c ****             /* Convert the raw z to mg */
4966:Core/Src/bno055.c ****             data_d = (double)(reg_accel_z_s16 / BNO055_ACCEL_DIV_MG);
ARM GAS  /tmp/ccWoU29M.s 			page 203


4967:Core/Src/bno055.c ****             *accel_z_d = data_d;
4968:Core/Src/bno055.c ****         }
4969:Core/Src/bno055.c ****         else
4970:Core/Src/bno055.c ****         {
4971:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4972:Core/Src/bno055.c ****         }
4973:Core/Src/bno055.c ****     }
4974:Core/Src/bno055.c ****     else
4975:Core/Src/bno055.c ****     {
4976:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4977:Core/Src/bno055.c ****     }
4978:Core/Src/bno055.c **** 
4979:Core/Src/bno055.c ****     return com_rslt;
4980:Core/Src/bno055.c **** }
4981:Core/Src/bno055.c **** 
4982:Core/Src/bno055.c **** /*!
4983:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel xyz raw data
4984:Core/Src/bno055.c ****  *  to meterpersecseq output as double
4985:Core/Src/bno055.c ****  *
4986:Core/Src/bno055.c ****  *  @param accel_xyz : The meterpersecseq data of accel xyz
4987:Core/Src/bno055.c ****  *
4988:Core/Src/bno055.c ****  *  Parameter |    result
4989:Core/Src/bno055.c ****  *  --------- | -----------------
4990:Core/Src/bno055.c ****  *   x        | meterpersecseq data of accel
4991:Core/Src/bno055.c ****  *   y        | meterpersecseq data of accel
4992:Core/Src/bno055.c ****  *   z        | meterpersecseq data of accel
4993:Core/Src/bno055.c ****  *
4994:Core/Src/bno055.c ****  *
4995:Core/Src/bno055.c ****  *  @return results of bus communication function
4996:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4997:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4998:Core/Src/bno055.c ****  *
4999:Core/Src/bno055.c ****  *
5000:Core/Src/bno055.c ****  */
5001:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_xyz_msq(struct bno055_accel_double_t *accel
5002:Core/Src/bno055.c **** {
5003:Core/Src/bno055.c ****     /* Variable used to return value of
5004:Core/Src/bno055.c ****      * communication routine*/
5005:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5006:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
5007:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
5008:Core/Src/bno055.c **** 
5009:Core/Src/bno055.c ****     /* Read the current accel unit and set the
5010:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
5011:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
5012:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
5013:Core/Src/bno055.c ****     {
5014:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
5015:Core/Src/bno055.c ****     }
5016:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5017:Core/Src/bno055.c ****     {
5018:Core/Src/bno055.c ****         /* Read the accel raw xyz data*/
5019:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_xyz(&reg_accel_xyz);
5020:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5021:Core/Src/bno055.c ****         {
5022:Core/Src/bno055.c ****             /* Convert raw xyz to m/s2*/
5023:Core/Src/bno055.c ****             accel_xyz->x = (double)(reg_accel_xyz.x / BNO055_ACCEL_DIV_MSQ);
ARM GAS  /tmp/ccWoU29M.s 			page 204


5024:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
5025:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
5026:Core/Src/bno055.c ****         }
5027:Core/Src/bno055.c ****         else
5028:Core/Src/bno055.c ****         {
5029:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5030:Core/Src/bno055.c ****         }
5031:Core/Src/bno055.c ****     }
5032:Core/Src/bno055.c ****     else
5033:Core/Src/bno055.c ****     {
5034:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5035:Core/Src/bno055.c ****     }
5036:Core/Src/bno055.c **** 
5037:Core/Src/bno055.c ****     return com_rslt;
5038:Core/Src/bno055.c **** }
5039:Core/Src/bno055.c **** 
5040:Core/Src/bno055.c **** /*!
5041:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel xyz raw data
5042:Core/Src/bno055.c ****  *  to millig output as double
5043:Core/Src/bno055.c ****  *
5044:Core/Src/bno055.c ****  *  @param accel_xyz : The millig data of accel xyz
5045:Core/Src/bno055.c ****  *
5046:Core/Src/bno055.c ****  *  Parameter |    result
5047:Core/Src/bno055.c ****  *  --------- | -----------------
5048:Core/Src/bno055.c ****  *   x        | millig data of accel
5049:Core/Src/bno055.c ****  *   y        | millig data of accel
5050:Core/Src/bno055.c ****  *   z        | millig data of accel
5051:Core/Src/bno055.c ****  *
5052:Core/Src/bno055.c ****  *
5053:Core/Src/bno055.c ****  *  @return results of bus communication function
5054:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5055:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5056:Core/Src/bno055.c ****  *
5057:Core/Src/bno055.c ****  */
5058:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_xyz_mg(struct bno055_accel_double_t *accel_
5059:Core/Src/bno055.c **** {
5060:Core/Src/bno055.c ****     /* Variable used to return value of
5061:Core/Src/bno055.c ****      * communication routine*/
5062:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5063:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
5064:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
5065:Core/Src/bno055.c **** 
5066:Core/Src/bno055.c ****     /* Read the current accel unit and set the
5067:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
5068:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
5069:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
5070:Core/Src/bno055.c ****     {
5071:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
5072:Core/Src/bno055.c ****     }
5073:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5074:Core/Src/bno055.c ****     {
5075:Core/Src/bno055.c ****         /* Read the accel raw xyz data*/
5076:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_xyz(&reg_accel_xyz);
5077:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5078:Core/Src/bno055.c ****         {
5079:Core/Src/bno055.c ****             /* Convert raw xyz to mg*/
5080:Core/Src/bno055.c ****             accel_xyz->x = (double)(reg_accel_xyz.x / BNO055_ACCEL_DIV_MG);
ARM GAS  /tmp/ccWoU29M.s 			page 205


5081:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
5082:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
5083:Core/Src/bno055.c ****         }
5084:Core/Src/bno055.c ****         else
5085:Core/Src/bno055.c ****         {
5086:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5087:Core/Src/bno055.c ****         }
5088:Core/Src/bno055.c ****     }
5089:Core/Src/bno055.c ****     else
5090:Core/Src/bno055.c ****     {
5091:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5092:Core/Src/bno055.c ****     }
5093:Core/Src/bno055.c **** 
5094:Core/Src/bno055.c ****     return com_rslt;
5095:Core/Src/bno055.c **** }
5096:Core/Src/bno055.c **** 
5097:Core/Src/bno055.c **** /*!
5098:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag x raw data
5099:Core/Src/bno055.c ****  *  to microTesla output as double
5100:Core/Src/bno055.c ****  *
5101:Core/Src/bno055.c ****  *  @param mag_x_d : The mag x microTesla data
5102:Core/Src/bno055.c ****  *
5103:Core/Src/bno055.c ****  *
5104:Core/Src/bno055.c ****  *
5105:Core/Src/bno055.c ****  *  @return results of bus communication function
5106:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5107:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5108:Core/Src/bno055.c ****  *
5109:Core/Src/bno055.c ****  *
5110:Core/Src/bno055.c ****  *
5111:Core/Src/bno055.c ****  */
5112:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_mag_x_uT(double *mag_x_d)
5113:Core/Src/bno055.c **** {
 6225              		.loc 1 5113 1 is_stmt 1 view -0
 6226              		.cfi_startproc
 6227              		@ args = 0, pretend = 0, frame = 8
 6228              		@ frame_needed = 0, uses_anonymous_args = 0
 6229              		.loc 1 5113 1 is_stmt 0 view .LVU1679
 6230 0000 30B5     		push	{r4, r5, lr}
 6231              	.LCFI205:
 6232              		.cfi_def_cfa_offset 12
 6233              		.cfi_offset 4, -12
 6234              		.cfi_offset 5, -8
 6235              		.cfi_offset 14, -4
 6236 0002 83B0     		sub	sp, sp, #12
 6237              	.LCFI206:
 6238              		.cfi_def_cfa_offset 24
 6239 0004 0446     		mov	r4, r0
5114:Core/Src/bno055.c ****     /* Variable used to return value of
5115:Core/Src/bno055.c ****      * communication routine*/
5116:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6240              		.loc 1 5116 5 is_stmt 1 view .LVU1680
 6241              	.LVL634:
5117:Core/Src/bno055.c ****     s16 reg_mag_x_s16 = BNO055_INIT_VALUE;
 6242              		.loc 1 5117 5 view .LVU1681
 6243              		.loc 1 5117 9 is_stmt 0 view .LVU1682
 6244 0006 0023     		movs	r3, #0
ARM GAS  /tmp/ccWoU29M.s 			page 206


 6245 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5118:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6246              		.loc 1 5118 5 is_stmt 1 view .LVU1683
 6247              	.LVL635:
5119:Core/Src/bno055.c **** 
5120:Core/Src/bno055.c ****     /* Read raw mag x data */
5121:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_x(&reg_mag_x_s16);
 6248              		.loc 1 5121 5 view .LVU1684
 6249              		.loc 1 5121 16 is_stmt 0 view .LVU1685
 6250 000c 0DF10600 		add	r0, sp, #6
 6251              	.LVL636:
 6252              		.loc 1 5121 16 view .LVU1686
 6253 0010 FFF7FEFF 		bl	bno055_read_mag_x
 6254              	.LVL637:
5122:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6255              		.loc 1 5122 5 is_stmt 1 view .LVU1687
 6256              		.loc 1 5122 8 is_stmt 0 view .LVU1688
 6257 0014 68B9     		cbnz	r0, .L465
 6258 0016 0546     		mov	r5, r0
5123:Core/Src/bno055.c ****     {
5124:Core/Src/bno055.c ****         /* Convert raw mag x to microTesla */
5125:Core/Src/bno055.c ****         data_d = (double)(reg_mag_x_s16 / BNO055_MAG_DIV_UT);
 6259              		.loc 1 5125 9 is_stmt 1 view .LVU1689
 6260              		.loc 1 5125 18 is_stmt 0 view .LVU1690
 6261 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6262              	.LVL638:
 6263              		.loc 1 5125 18 view .LVU1691
 6264 001c FFF7FEFF 		bl	__aeabi_i2d
 6265              	.LVL639:
 6266              		.loc 1 5125 16 view .LVU1692
 6267 0020 0022     		movs	r2, #0
 6268 0022 054B     		ldr	r3, .L467
 6269 0024 FFF7FEFF 		bl	__aeabi_dmul
 6270              	.LVL640:
5126:Core/Src/bno055.c ****         *mag_x_d = data_d;
 6271              		.loc 1 5126 9 is_stmt 1 view .LVU1693
 6272              		.loc 1 5126 18 is_stmt 0 view .LVU1694
 6273 0028 C4E90001 		strd	r0, [r4]
 6274              	.LVL641:
 6275              	.L464:
5127:Core/Src/bno055.c ****     }
5128:Core/Src/bno055.c ****     else
5129:Core/Src/bno055.c ****     {
5130:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5131:Core/Src/bno055.c ****     }
5132:Core/Src/bno055.c **** 
5133:Core/Src/bno055.c ****     return com_rslt;
 6276              		.loc 1 5133 5 is_stmt 1 view .LVU1695
5134:Core/Src/bno055.c **** }
 6277              		.loc 1 5134 1 is_stmt 0 view .LVU1696
 6278 002c 2846     		mov	r0, r5
 6279 002e 03B0     		add	sp, sp, #12
 6280              	.LCFI207:
 6281              		.cfi_remember_state
 6282              		.cfi_def_cfa_offset 12
 6283              		@ sp needed
 6284 0030 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccWoU29M.s 			page 207


 6285              	.LVL642:
 6286              	.L465:
 6287              	.LCFI208:
 6288              		.cfi_restore_state
5130:Core/Src/bno055.c ****     }
 6289              		.loc 1 5130 18 view .LVU1697
 6290 0032 4FF0FF35 		mov	r5, #-1
 6291 0036 F9E7     		b	.L464
 6292              	.L468:
 6293              		.align	2
 6294              	.L467:
 6295 0038 0000B03F 		.word	1068498944
 6296              		.cfi_endproc
 6297              	.LFE87:
 6299              		.section	.text.bno055_convert_double_mag_y_uT,"ax",%progbits
 6300              		.align	1
 6301              		.global	bno055_convert_double_mag_y_uT
 6302              		.syntax unified
 6303              		.thumb
 6304              		.thumb_func
 6305              		.fpu fpv4-sp-d16
 6307              	bno055_convert_double_mag_y_uT:
 6308              	.LVL643:
 6309              	.LFB88:
5135:Core/Src/bno055.c **** 
5136:Core/Src/bno055.c **** /*!
5137:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag y raw data
5138:Core/Src/bno055.c ****  *  to microTesla output as double
5139:Core/Src/bno055.c ****  *
5140:Core/Src/bno055.c ****  *  @param mag_y_d : The mag y microTesla data
5141:Core/Src/bno055.c ****  *
5142:Core/Src/bno055.c ****  *
5143:Core/Src/bno055.c ****  *
5144:Core/Src/bno055.c ****  *  @return results of bus communication function
5145:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5146:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5147:Core/Src/bno055.c ****  *
5148:Core/Src/bno055.c ****  *
5149:Core/Src/bno055.c ****  */
5150:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_mag_y_uT(double *mag_y_d)
5151:Core/Src/bno055.c **** {
 6310              		.loc 1 5151 1 is_stmt 1 view -0
 6311              		.cfi_startproc
 6312              		@ args = 0, pretend = 0, frame = 8
 6313              		@ frame_needed = 0, uses_anonymous_args = 0
 6314              		.loc 1 5151 1 is_stmt 0 view .LVU1699
 6315 0000 30B5     		push	{r4, r5, lr}
 6316              	.LCFI209:
 6317              		.cfi_def_cfa_offset 12
 6318              		.cfi_offset 4, -12
 6319              		.cfi_offset 5, -8
 6320              		.cfi_offset 14, -4
 6321 0002 83B0     		sub	sp, sp, #12
 6322              	.LCFI210:
 6323              		.cfi_def_cfa_offset 24
 6324 0004 0446     		mov	r4, r0
5152:Core/Src/bno055.c ****     /* Variable used to return value of
ARM GAS  /tmp/ccWoU29M.s 			page 208


5153:Core/Src/bno055.c ****      * communication routine*/
5154:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6325              		.loc 1 5154 5 is_stmt 1 view .LVU1700
 6326              	.LVL644:
5155:Core/Src/bno055.c ****     s16 reg_mag_y_s16 = BNO055_INIT_VALUE;
 6327              		.loc 1 5155 5 view .LVU1701
 6328              		.loc 1 5155 9 is_stmt 0 view .LVU1702
 6329 0006 0023     		movs	r3, #0
 6330 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5156:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6331              		.loc 1 5156 5 is_stmt 1 view .LVU1703
 6332              	.LVL645:
5157:Core/Src/bno055.c **** 
5158:Core/Src/bno055.c ****     /* Read raw mag y data */
5159:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_y(&reg_mag_y_s16);
 6333              		.loc 1 5159 5 view .LVU1704
 6334              		.loc 1 5159 16 is_stmt 0 view .LVU1705
 6335 000c 0DF10600 		add	r0, sp, #6
 6336              	.LVL646:
 6337              		.loc 1 5159 16 view .LVU1706
 6338 0010 FFF7FEFF 		bl	bno055_read_mag_y
 6339              	.LVL647:
5160:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6340              		.loc 1 5160 5 is_stmt 1 view .LVU1707
 6341              		.loc 1 5160 8 is_stmt 0 view .LVU1708
 6342 0014 68B9     		cbnz	r0, .L471
 6343 0016 0546     		mov	r5, r0
5161:Core/Src/bno055.c ****     {
5162:Core/Src/bno055.c ****         /* Convert raw mag y to microTesla */
5163:Core/Src/bno055.c ****         data_d = (double)(reg_mag_y_s16 / BNO055_MAG_DIV_UT);
 6344              		.loc 1 5163 9 is_stmt 1 view .LVU1709
 6345              		.loc 1 5163 18 is_stmt 0 view .LVU1710
 6346 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6347              	.LVL648:
 6348              		.loc 1 5163 18 view .LVU1711
 6349 001c FFF7FEFF 		bl	__aeabi_i2d
 6350              	.LVL649:
 6351              		.loc 1 5163 16 view .LVU1712
 6352 0020 0022     		movs	r2, #0
 6353 0022 054B     		ldr	r3, .L473
 6354 0024 FFF7FEFF 		bl	__aeabi_dmul
 6355              	.LVL650:
5164:Core/Src/bno055.c ****         *mag_y_d = data_d;
 6356              		.loc 1 5164 9 is_stmt 1 view .LVU1713
 6357              		.loc 1 5164 18 is_stmt 0 view .LVU1714
 6358 0028 C4E90001 		strd	r0, [r4]
 6359              	.LVL651:
 6360              	.L470:
5165:Core/Src/bno055.c ****     }
5166:Core/Src/bno055.c ****     else
5167:Core/Src/bno055.c ****     {
5168:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5169:Core/Src/bno055.c ****     }
5170:Core/Src/bno055.c **** 
5171:Core/Src/bno055.c ****     return com_rslt;
 6361              		.loc 1 5171 5 is_stmt 1 view .LVU1715
5172:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccWoU29M.s 			page 209


 6362              		.loc 1 5172 1 is_stmt 0 view .LVU1716
 6363 002c 2846     		mov	r0, r5
 6364 002e 03B0     		add	sp, sp, #12
 6365              	.LCFI211:
 6366              		.cfi_remember_state
 6367              		.cfi_def_cfa_offset 12
 6368              		@ sp needed
 6369 0030 30BD     		pop	{r4, r5, pc}
 6370              	.LVL652:
 6371              	.L471:
 6372              	.LCFI212:
 6373              		.cfi_restore_state
5168:Core/Src/bno055.c ****     }
 6374              		.loc 1 5168 18 view .LVU1717
 6375 0032 4FF0FF35 		mov	r5, #-1
 6376 0036 F9E7     		b	.L470
 6377              	.L474:
 6378              		.align	2
 6379              	.L473:
 6380 0038 0000B03F 		.word	1068498944
 6381              		.cfi_endproc
 6382              	.LFE88:
 6384              		.section	.text.bno055_convert_double_mag_z_uT,"ax",%progbits
 6385              		.align	1
 6386              		.global	bno055_convert_double_mag_z_uT
 6387              		.syntax unified
 6388              		.thumb
 6389              		.thumb_func
 6390              		.fpu fpv4-sp-d16
 6392              	bno055_convert_double_mag_z_uT:
 6393              	.LVL653:
 6394              	.LFB89:
5173:Core/Src/bno055.c **** 
5174:Core/Src/bno055.c **** /*!
5175:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag z raw data
5176:Core/Src/bno055.c ****  *  to microTesla output as double
5177:Core/Src/bno055.c ****  *
5178:Core/Src/bno055.c ****  *  @param mag_z_d : The mag z microTesla data
5179:Core/Src/bno055.c ****  *
5180:Core/Src/bno055.c ****  *
5181:Core/Src/bno055.c ****  *
5182:Core/Src/bno055.c ****  *  @return results of bus communication function
5183:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5184:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5185:Core/Src/bno055.c ****  *
5186:Core/Src/bno055.c ****  *
5187:Core/Src/bno055.c ****  */
5188:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_mag_z_uT(double *mag_z_d)
5189:Core/Src/bno055.c **** {
 6395              		.loc 1 5189 1 is_stmt 1 view -0
 6396              		.cfi_startproc
 6397              		@ args = 0, pretend = 0, frame = 8
 6398              		@ frame_needed = 0, uses_anonymous_args = 0
 6399              		.loc 1 5189 1 is_stmt 0 view .LVU1719
 6400 0000 30B5     		push	{r4, r5, lr}
 6401              	.LCFI213:
 6402              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccWoU29M.s 			page 210


 6403              		.cfi_offset 4, -12
 6404              		.cfi_offset 5, -8
 6405              		.cfi_offset 14, -4
 6406 0002 83B0     		sub	sp, sp, #12
 6407              	.LCFI214:
 6408              		.cfi_def_cfa_offset 24
 6409 0004 0446     		mov	r4, r0
5190:Core/Src/bno055.c ****     /* Variable used to return value of
5191:Core/Src/bno055.c ****      * communication routine*/
5192:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6410              		.loc 1 5192 5 is_stmt 1 view .LVU1720
 6411              	.LVL654:
5193:Core/Src/bno055.c ****     s16 reg_mag_z_s16 = BNO055_INIT_VALUE;
 6412              		.loc 1 5193 5 view .LVU1721
 6413              		.loc 1 5193 9 is_stmt 0 view .LVU1722
 6414 0006 0023     		movs	r3, #0
 6415 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5194:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6416              		.loc 1 5194 5 is_stmt 1 view .LVU1723
 6417              	.LVL655:
5195:Core/Src/bno055.c **** 
5196:Core/Src/bno055.c ****     /* Read raw mag x */
5197:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_z(&reg_mag_z_s16);
 6418              		.loc 1 5197 5 view .LVU1724
 6419              		.loc 1 5197 16 is_stmt 0 view .LVU1725
 6420 000c 0DF10600 		add	r0, sp, #6
 6421              	.LVL656:
 6422              		.loc 1 5197 16 view .LVU1726
 6423 0010 FFF7FEFF 		bl	bno055_read_mag_z
 6424              	.LVL657:
5198:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6425              		.loc 1 5198 5 is_stmt 1 view .LVU1727
 6426              		.loc 1 5198 8 is_stmt 0 view .LVU1728
 6427 0014 68B9     		cbnz	r0, .L477
 6428 0016 0546     		mov	r5, r0
5199:Core/Src/bno055.c ****     {
5200:Core/Src/bno055.c ****         /* Convert raw mag x to microTesla */
5201:Core/Src/bno055.c ****         data_d = (double)(reg_mag_z_s16 / BNO055_MAG_DIV_UT);
 6429              		.loc 1 5201 9 is_stmt 1 view .LVU1729
 6430              		.loc 1 5201 18 is_stmt 0 view .LVU1730
 6431 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6432              	.LVL658:
 6433              		.loc 1 5201 18 view .LVU1731
 6434 001c FFF7FEFF 		bl	__aeabi_i2d
 6435              	.LVL659:
 6436              		.loc 1 5201 16 view .LVU1732
 6437 0020 0022     		movs	r2, #0
 6438 0022 054B     		ldr	r3, .L479
 6439 0024 FFF7FEFF 		bl	__aeabi_dmul
 6440              	.LVL660:
5202:Core/Src/bno055.c ****         *mag_z_d = data_d;
 6441              		.loc 1 5202 9 is_stmt 1 view .LVU1733
 6442              		.loc 1 5202 18 is_stmt 0 view .LVU1734
 6443 0028 C4E90001 		strd	r0, [r4]
 6444              	.LVL661:
 6445              	.L476:
5203:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 211


5204:Core/Src/bno055.c ****     else
5205:Core/Src/bno055.c ****     {
5206:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5207:Core/Src/bno055.c ****     }
5208:Core/Src/bno055.c **** 
5209:Core/Src/bno055.c ****     return com_rslt;
 6446              		.loc 1 5209 5 is_stmt 1 view .LVU1735
5210:Core/Src/bno055.c **** }
 6447              		.loc 1 5210 1 is_stmt 0 view .LVU1736
 6448 002c 2846     		mov	r0, r5
 6449 002e 03B0     		add	sp, sp, #12
 6450              	.LCFI215:
 6451              		.cfi_remember_state
 6452              		.cfi_def_cfa_offset 12
 6453              		@ sp needed
 6454 0030 30BD     		pop	{r4, r5, pc}
 6455              	.LVL662:
 6456              	.L477:
 6457              	.LCFI216:
 6458              		.cfi_restore_state
5206:Core/Src/bno055.c ****     }
 6459              		.loc 1 5206 18 view .LVU1737
 6460 0032 4FF0FF35 		mov	r5, #-1
 6461 0036 F9E7     		b	.L476
 6462              	.L480:
 6463              		.align	2
 6464              	.L479:
 6465 0038 0000B03F 		.word	1068498944
 6466              		.cfi_endproc
 6467              	.LFE89:
 6469              		.section	.text.bno055_convert_double_mag_xyz_uT,"ax",%progbits
 6470              		.align	1
 6471              		.global	bno055_convert_double_mag_xyz_uT
 6472              		.syntax unified
 6473              		.thumb
 6474              		.thumb_func
 6475              		.fpu fpv4-sp-d16
 6477              	bno055_convert_double_mag_xyz_uT:
 6478              	.LVL663:
 6479              	.LFB90:
5211:Core/Src/bno055.c **** 
5212:Core/Src/bno055.c **** /*!
5213:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag yz raw data
5214:Core/Src/bno055.c ****  *  to microTesla output as double
5215:Core/Src/bno055.c ****  *
5216:Core/Src/bno055.c ****  *  @param mag_xyz : The microTesla data of mag xyz
5217:Core/Src/bno055.c ****  *
5218:Core/Src/bno055.c ****  *  Parameter |    result
5219:Core/Src/bno055.c ****  *  --------- | -----------------
5220:Core/Src/bno055.c ****  *   x        | microTesla data of mag
5221:Core/Src/bno055.c ****  *   y        | microTesla data of mag
5222:Core/Src/bno055.c ****  *   z        | microTesla data of mag
5223:Core/Src/bno055.c ****  *
5224:Core/Src/bno055.c ****  *
5225:Core/Src/bno055.c ****  *  @return results of bus communication function
5226:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5227:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
ARM GAS  /tmp/ccWoU29M.s 			page 212


5228:Core/Src/bno055.c ****  *
5229:Core/Src/bno055.c ****  */
5230:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_mag_xyz_uT(struct bno055_mag_double_t *mag_xyz)
5231:Core/Src/bno055.c **** {
 6480              		.loc 1 5231 1 is_stmt 1 view -0
 6481              		.cfi_startproc
 6482              		@ args = 0, pretend = 0, frame = 8
 6483              		@ frame_needed = 0, uses_anonymous_args = 0
 6484              		.loc 1 5231 1 is_stmt 0 view .LVU1739
 6485 0000 30B5     		push	{r4, r5, lr}
 6486              	.LCFI217:
 6487              		.cfi_def_cfa_offset 12
 6488              		.cfi_offset 4, -12
 6489              		.cfi_offset 5, -8
 6490              		.cfi_offset 14, -4
 6491 0002 83B0     		sub	sp, sp, #12
 6492              	.LCFI218:
 6493              		.cfi_def_cfa_offset 24
 6494 0004 0446     		mov	r4, r0
5232:Core/Src/bno055.c ****     /* Variable used to return value of
5233:Core/Src/bno055.c ****      * communication routine*/
5234:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6495              		.loc 1 5234 5 is_stmt 1 view .LVU1740
 6496              	.LVL664:
5235:Core/Src/bno055.c ****     struct bno055_mag_t reg_mag_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 6497              		.loc 1 5235 5 view .LVU1741
 6498              		.loc 1 5235 25 is_stmt 0 view .LVU1742
 6499 0006 0023     		movs	r3, #0
 6500 0008 ADF80030 		strh	r3, [sp]	@ movhi
 6501 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 6502 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
5236:Core/Src/bno055.c **** 
5237:Core/Src/bno055.c ****     /* Read raw mag xyz data */
5238:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_xyz(&reg_mag_xyz);
 6503              		.loc 1 5238 5 is_stmt 1 view .LVU1743
 6504              		.loc 1 5238 16 is_stmt 0 view .LVU1744
 6505 0014 6846     		mov	r0, sp
 6506              	.LVL665:
 6507              		.loc 1 5238 16 view .LVU1745
 6508 0016 FFF7FEFF 		bl	bno055_read_mag_xyz
 6509              	.LVL666:
5239:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6510              		.loc 1 5239 5 is_stmt 1 view .LVU1746
 6511              		.loc 1 5239 8 is_stmt 0 view .LVU1747
 6512 001a 08BB     		cbnz	r0, .L483
 6513 001c 0546     		mov	r5, r0
5240:Core/Src/bno055.c ****     {
5241:Core/Src/bno055.c ****         /* Convert raw mag xyz to microTesla*/
5242:Core/Src/bno055.c ****         mag_xyz->x = (double)(reg_mag_xyz.x / BNO055_MAG_DIV_UT);
 6514              		.loc 1 5242 9 is_stmt 1 view .LVU1748
 6515              		.loc 1 5242 22 is_stmt 0 view .LVU1749
 6516 001e BDF90000 		ldrsh	r0, [sp]
 6517              	.LVL667:
 6518              		.loc 1 5242 22 view .LVU1750
 6519 0022 FFF7FEFF 		bl	__aeabi_i2d
 6520              	.LVL668:
 6521 0026 0022     		movs	r2, #0
ARM GAS  /tmp/ccWoU29M.s 			page 213


 6522 0028 0F4B     		ldr	r3, .L485
 6523 002a FFF7FEFF 		bl	__aeabi_dmul
 6524              	.LVL669:
 6525              		.loc 1 5242 20 view .LVU1751
 6526 002e C4E90001 		strd	r0, [r4]
5243:Core/Src/bno055.c ****         mag_xyz->y = (double)(reg_mag_xyz.y / BNO055_MAG_DIV_UT);
 6527              		.loc 1 5243 9 is_stmt 1 view .LVU1752
 6528              		.loc 1 5243 22 is_stmt 0 view .LVU1753
 6529 0032 BDF90200 		ldrsh	r0, [sp, #2]
 6530 0036 FFF7FEFF 		bl	__aeabi_i2d
 6531              	.LVL670:
 6532 003a 0022     		movs	r2, #0
 6533 003c 0A4B     		ldr	r3, .L485
 6534 003e FFF7FEFF 		bl	__aeabi_dmul
 6535              	.LVL671:
 6536              		.loc 1 5243 20 view .LVU1754
 6537 0042 C4E90201 		strd	r0, [r4, #8]
5244:Core/Src/bno055.c ****         mag_xyz->z = (double)(reg_mag_xyz.z / BNO055_MAG_DIV_UT);
 6538              		.loc 1 5244 9 is_stmt 1 view .LVU1755
 6539              		.loc 1 5244 22 is_stmt 0 view .LVU1756
 6540 0046 BDF90400 		ldrsh	r0, [sp, #4]
 6541 004a FFF7FEFF 		bl	__aeabi_i2d
 6542              	.LVL672:
 6543 004e 0022     		movs	r2, #0
 6544 0050 054B     		ldr	r3, .L485
 6545 0052 FFF7FEFF 		bl	__aeabi_dmul
 6546              	.LVL673:
 6547              		.loc 1 5244 20 view .LVU1757
 6548 0056 C4E90401 		strd	r0, [r4, #16]
 6549              	.L482:
 6550              	.LVL674:
5245:Core/Src/bno055.c ****     }
5246:Core/Src/bno055.c ****     else
5247:Core/Src/bno055.c ****     {
5248:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5249:Core/Src/bno055.c ****     }
5250:Core/Src/bno055.c **** 
5251:Core/Src/bno055.c ****     return com_rslt;
 6551              		.loc 1 5251 5 is_stmt 1 view .LVU1758
5252:Core/Src/bno055.c **** }
 6552              		.loc 1 5252 1 is_stmt 0 view .LVU1759
 6553 005a 2846     		mov	r0, r5
 6554 005c 03B0     		add	sp, sp, #12
 6555              	.LCFI219:
 6556              		.cfi_remember_state
 6557              		.cfi_def_cfa_offset 12
 6558              		@ sp needed
 6559 005e 30BD     		pop	{r4, r5, pc}
 6560              	.LVL675:
 6561              	.L483:
 6562              	.LCFI220:
 6563              		.cfi_restore_state
5248:Core/Src/bno055.c ****     }
 6564              		.loc 1 5248 18 view .LVU1760
 6565 0060 4FF0FF35 		mov	r5, #-1
 6566 0064 F9E7     		b	.L482
 6567              	.L486:
ARM GAS  /tmp/ccWoU29M.s 			page 214


 6568 0066 00BF     		.align	2
 6569              	.L485:
 6570 0068 0000B03F 		.word	1068498944
 6571              		.cfi_endproc
 6572              	.LFE90:
 6574              		.section	.text.bno055_convert_double_linear_accel_x_msq,"ax",%progbits
 6575              		.align	1
 6576              		.global	bno055_convert_double_linear_accel_x_msq
 6577              		.syntax unified
 6578              		.thumb
 6579              		.thumb_func
 6580              		.fpu fpv4-sp-d16
 6582              	bno055_convert_double_linear_accel_x_msq:
 6583              	.LVL676:
 6584              	.LFB107:
5253:Core/Src/bno055.c **** 
5254:Core/Src/bno055.c **** /*!
5255:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro x raw data
5256:Core/Src/bno055.c ****  *  to dps output as double
5257:Core/Src/bno055.c ****  *
5258:Core/Src/bno055.c ****  *  @param gyro_x_d : The gyro x dps double data
5259:Core/Src/bno055.c ****  *
5260:Core/Src/bno055.c ****  *
5261:Core/Src/bno055.c ****  *
5262:Core/Src/bno055.c ****  *  @return results of bus communication function
5263:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5264:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5265:Core/Src/bno055.c ****  *
5266:Core/Src/bno055.c ****  *
5267:Core/Src/bno055.c ****  */
5268:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_x_dps(double *gyro_x_d)
5269:Core/Src/bno055.c **** {
5270:Core/Src/bno055.c ****     /* Variable used to return value of
5271:Core/Src/bno055.c ****      * communication routine*/
5272:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5273:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
5274:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5275:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5276:Core/Src/bno055.c **** 
5277:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5278:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
5279:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5280:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
5281:Core/Src/bno055.c ****     {
5282:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
5283:Core/Src/bno055.c ****     }
5284:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5285:Core/Src/bno055.c ****     {
5286:Core/Src/bno055.c ****         /* Read gyro raw x data */
5287:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_x(&reg_gyro_x_s16);
5288:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5289:Core/Src/bno055.c ****         {
5290:Core/Src/bno055.c ****             /* Convert raw gyro x to dps */
5291:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_x_s16 / BNO055_GYRO_DIV_DPS);
5292:Core/Src/bno055.c ****             *gyro_x_d = data_d;
5293:Core/Src/bno055.c ****         }
5294:Core/Src/bno055.c ****         else
ARM GAS  /tmp/ccWoU29M.s 			page 215


5295:Core/Src/bno055.c ****         {
5296:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5297:Core/Src/bno055.c ****         }
5298:Core/Src/bno055.c ****     }
5299:Core/Src/bno055.c ****     else
5300:Core/Src/bno055.c ****     {
5301:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5302:Core/Src/bno055.c ****     }
5303:Core/Src/bno055.c **** 
5304:Core/Src/bno055.c ****     return com_rslt;
5305:Core/Src/bno055.c **** }
5306:Core/Src/bno055.c **** 
5307:Core/Src/bno055.c **** /*!
5308:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro x raw data
5309:Core/Src/bno055.c ****  *  to rps output as double
5310:Core/Src/bno055.c ****  *
5311:Core/Src/bno055.c ****  *  @param gyro_x_d : The gyro x dps double data
5312:Core/Src/bno055.c ****  *
5313:Core/Src/bno055.c ****  *
5314:Core/Src/bno055.c ****  *
5315:Core/Src/bno055.c ****  *  @return results of bus communication function
5316:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5317:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5318:Core/Src/bno055.c ****  *
5319:Core/Src/bno055.c ****  *
5320:Core/Src/bno055.c ****  */
5321:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_x_rps(double *gyro_x_d)
5322:Core/Src/bno055.c **** {
5323:Core/Src/bno055.c ****     /* Variable used to return value of
5324:Core/Src/bno055.c ****      * communication routine*/
5325:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5326:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
5327:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5328:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5329:Core/Src/bno055.c **** 
5330:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5331:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
5332:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5333:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
5334:Core/Src/bno055.c ****     {
5335:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
5336:Core/Src/bno055.c ****     }
5337:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5338:Core/Src/bno055.c ****     {
5339:Core/Src/bno055.c ****         /* Read gyro raw x data */
5340:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_x(&reg_gyro_x_s16);
5341:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5342:Core/Src/bno055.c ****         {
5343:Core/Src/bno055.c ****             /* Convert raw gyro x to rps */
5344:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_x_s16 / BNO055_GYRO_DIV_RPS);
5345:Core/Src/bno055.c ****             *gyro_x_d = data_d;
5346:Core/Src/bno055.c ****         }
5347:Core/Src/bno055.c ****         else
5348:Core/Src/bno055.c ****         {
5349:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5350:Core/Src/bno055.c ****         }
5351:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 216


5352:Core/Src/bno055.c ****     else
5353:Core/Src/bno055.c ****     {
5354:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5355:Core/Src/bno055.c ****     }
5356:Core/Src/bno055.c **** 
5357:Core/Src/bno055.c ****     return com_rslt;
5358:Core/Src/bno055.c **** }
5359:Core/Src/bno055.c **** 
5360:Core/Src/bno055.c **** /*!
5361:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro y raw data
5362:Core/Src/bno055.c ****  *  to dps output as double
5363:Core/Src/bno055.c ****  *
5364:Core/Src/bno055.c ****  *  @param gyro_y_d : The gyro y dps double data
5365:Core/Src/bno055.c ****  *
5366:Core/Src/bno055.c ****  *
5367:Core/Src/bno055.c ****  *
5368:Core/Src/bno055.c ****  *  @return results of bus communication function
5369:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5370:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5371:Core/Src/bno055.c ****  *
5372:Core/Src/bno055.c ****  *
5373:Core/Src/bno055.c ****  */
5374:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_y_dps(double *gyro_y_d)
5375:Core/Src/bno055.c **** {
5376:Core/Src/bno055.c ****     /* Variable used to return value of
5377:Core/Src/bno055.c ****      * communication routine*/
5378:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5379:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
5380:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5381:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5382:Core/Src/bno055.c **** 
5383:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5384:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
5385:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5386:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
5387:Core/Src/bno055.c ****     {
5388:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
5389:Core/Src/bno055.c ****     }
5390:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5391:Core/Src/bno055.c ****     {
5392:Core/Src/bno055.c ****         /* Read gyro raw y data */
5393:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_y(&reg_gyro_y_s16);
5394:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5395:Core/Src/bno055.c ****         {
5396:Core/Src/bno055.c ****             /* Convert raw gyro y to dps */
5397:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_y_s16 / BNO055_GYRO_DIV_DPS);
5398:Core/Src/bno055.c ****             *gyro_y_d = data_d;
5399:Core/Src/bno055.c ****         }
5400:Core/Src/bno055.c ****         else
5401:Core/Src/bno055.c ****         {
5402:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5403:Core/Src/bno055.c ****         }
5404:Core/Src/bno055.c ****     }
5405:Core/Src/bno055.c ****     else
5406:Core/Src/bno055.c ****     {
5407:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5408:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 217


5409:Core/Src/bno055.c **** 
5410:Core/Src/bno055.c ****     return com_rslt;
5411:Core/Src/bno055.c **** }
5412:Core/Src/bno055.c **** 
5413:Core/Src/bno055.c **** /*!
5414:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro y raw data
5415:Core/Src/bno055.c ****  *  to rps output as double
5416:Core/Src/bno055.c ****  *
5417:Core/Src/bno055.c ****  *  @param gyro_y_d : The gyro y dps double data
5418:Core/Src/bno055.c ****  *
5419:Core/Src/bno055.c ****  *
5420:Core/Src/bno055.c ****  *
5421:Core/Src/bno055.c ****  *  @return results of bus communication function
5422:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5423:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5424:Core/Src/bno055.c ****  *
5425:Core/Src/bno055.c ****  *
5426:Core/Src/bno055.c ****  */
5427:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_y_rps(double *gyro_y_d)
5428:Core/Src/bno055.c **** {
5429:Core/Src/bno055.c ****     /* Variable used to return value of
5430:Core/Src/bno055.c ****      * communication routine*/
5431:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5432:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
5433:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5434:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5435:Core/Src/bno055.c **** 
5436:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5437:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
5438:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5439:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
5440:Core/Src/bno055.c ****     {
5441:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
5442:Core/Src/bno055.c ****     }
5443:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5444:Core/Src/bno055.c ****     {
5445:Core/Src/bno055.c ****         /* Read gyro raw y data */
5446:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_y(&reg_gyro_y_s16);
5447:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5448:Core/Src/bno055.c ****         {
5449:Core/Src/bno055.c ****             /* Convert raw gyro y to rps */
5450:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_y_s16 / BNO055_GYRO_DIV_RPS);
5451:Core/Src/bno055.c ****             *gyro_y_d = data_d;
5452:Core/Src/bno055.c ****         }
5453:Core/Src/bno055.c ****         else
5454:Core/Src/bno055.c ****         {
5455:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5456:Core/Src/bno055.c ****         }
5457:Core/Src/bno055.c ****     }
5458:Core/Src/bno055.c ****     else
5459:Core/Src/bno055.c ****     {
5460:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5461:Core/Src/bno055.c ****     }
5462:Core/Src/bno055.c **** 
5463:Core/Src/bno055.c ****     return com_rslt;
5464:Core/Src/bno055.c **** }
5465:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 218


5466:Core/Src/bno055.c **** /*!
5467:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro z raw data
5468:Core/Src/bno055.c ****  *  to dps output as double
5469:Core/Src/bno055.c ****  *
5470:Core/Src/bno055.c ****  *  @param gyro_z_d : The gyro z dps double data
5471:Core/Src/bno055.c ****  *
5472:Core/Src/bno055.c ****  *
5473:Core/Src/bno055.c ****  *
5474:Core/Src/bno055.c ****  *  @return results of bus communication function
5475:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5476:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5477:Core/Src/bno055.c ****  *
5478:Core/Src/bno055.c ****  *
5479:Core/Src/bno055.c ****  */
5480:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_z_dps(double *gyro_z_d)
5481:Core/Src/bno055.c **** {
5482:Core/Src/bno055.c ****     /* Variable used to return value of
5483:Core/Src/bno055.c ****      * communication routine*/
5484:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5485:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
5486:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5487:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5488:Core/Src/bno055.c **** 
5489:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5490:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
5491:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5492:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
5493:Core/Src/bno055.c ****     {
5494:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
5495:Core/Src/bno055.c ****     }
5496:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5497:Core/Src/bno055.c ****     {
5498:Core/Src/bno055.c ****         /* Read gyro raw z data */
5499:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_z(&reg_gyro_z_s16);
5500:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5501:Core/Src/bno055.c ****         {
5502:Core/Src/bno055.c ****             /* Convert raw gyro z to dps */
5503:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_z_s16 / BNO055_GYRO_DIV_DPS);
5504:Core/Src/bno055.c ****             *gyro_z_d = data_d;
5505:Core/Src/bno055.c ****         }
5506:Core/Src/bno055.c ****         else
5507:Core/Src/bno055.c ****         {
5508:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5509:Core/Src/bno055.c ****         }
5510:Core/Src/bno055.c ****     }
5511:Core/Src/bno055.c ****     else
5512:Core/Src/bno055.c ****     {
5513:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5514:Core/Src/bno055.c ****     }
5515:Core/Src/bno055.c **** 
5516:Core/Src/bno055.c ****     return com_rslt;
5517:Core/Src/bno055.c **** }
5518:Core/Src/bno055.c **** 
5519:Core/Src/bno055.c **** /*!
5520:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro z raw data
5521:Core/Src/bno055.c ****  *  to rps output as double
5522:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 219


5523:Core/Src/bno055.c ****  *  @param gyro_z_d : The gyro z rps double data
5524:Core/Src/bno055.c ****  *
5525:Core/Src/bno055.c ****  *
5526:Core/Src/bno055.c ****  *
5527:Core/Src/bno055.c ****  *  @return results of bus communication function
5528:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5529:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5530:Core/Src/bno055.c ****  *
5531:Core/Src/bno055.c ****  *
5532:Core/Src/bno055.c ****  */
5533:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_z_rps(double *gyro_z_d)
5534:Core/Src/bno055.c **** {
5535:Core/Src/bno055.c ****     /* Variable used to return value of
5536:Core/Src/bno055.c ****      * communication routine*/
5537:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5538:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
5539:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5540:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5541:Core/Src/bno055.c **** 
5542:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5543:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
5544:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5545:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
5546:Core/Src/bno055.c ****     {
5547:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
5548:Core/Src/bno055.c ****     }
5549:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5550:Core/Src/bno055.c ****     {
5551:Core/Src/bno055.c ****         /* Read gyro raw x data */
5552:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_z(&reg_gyro_z_s16);
5553:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5554:Core/Src/bno055.c ****         {
5555:Core/Src/bno055.c ****             /* Convert raw gyro x to rps */
5556:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_z_s16 / BNO055_GYRO_DIV_RPS);
5557:Core/Src/bno055.c ****             *gyro_z_d = data_d;
5558:Core/Src/bno055.c ****         }
5559:Core/Src/bno055.c ****         else
5560:Core/Src/bno055.c ****         {
5561:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5562:Core/Src/bno055.c ****         }
5563:Core/Src/bno055.c ****     }
5564:Core/Src/bno055.c ****     else
5565:Core/Src/bno055.c ****     {
5566:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5567:Core/Src/bno055.c ****     }
5568:Core/Src/bno055.c **** 
5569:Core/Src/bno055.c ****     return com_rslt;
5570:Core/Src/bno055.c **** }
5571:Core/Src/bno055.c **** 
5572:Core/Src/bno055.c **** /*!
5573:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro xyz raw data
5574:Core/Src/bno055.c ****  *  to dps output as double
5575:Core/Src/bno055.c ****  *
5576:Core/Src/bno055.c ****  *  @param gyro_xyz : The dps data of gyro xyz
5577:Core/Src/bno055.c ****  *
5578:Core/Src/bno055.c ****  *  Parameter |    result
5579:Core/Src/bno055.c ****  *  --------- | -----------------
ARM GAS  /tmp/ccWoU29M.s 			page 220


5580:Core/Src/bno055.c ****  *   x        | dps data of gyro
5581:Core/Src/bno055.c ****  *   y        | dps data of gyro
5582:Core/Src/bno055.c ****  *   z        | dps data of gyro
5583:Core/Src/bno055.c ****  *
5584:Core/Src/bno055.c ****  *
5585:Core/Src/bno055.c ****  *  @return results of bus communication function
5586:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5587:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5588:Core/Src/bno055.c ****  *
5589:Core/Src/bno055.c ****  */
5590:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_xyz_dps(struct bno055_gyro_double_t *gyro_xy
5591:Core/Src/bno055.c **** {
5592:Core/Src/bno055.c ****     /* Variable used to return value of
5593:Core/Src/bno055.c ****      * communication routine*/
5594:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5595:Core/Src/bno055.c ****     struct bno055_gyro_t reg_gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE }
5596:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5597:Core/Src/bno055.c **** 
5598:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5599:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
5600:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5601:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
5602:Core/Src/bno055.c ****     {
5603:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
5604:Core/Src/bno055.c ****     }
5605:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5606:Core/Src/bno055.c ****     {
5607:Core/Src/bno055.c ****         /* Read gyro raw xyz data */
5608:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_xyz(&reg_gyro_xyz);
5609:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5610:Core/Src/bno055.c ****         {
5611:Core/Src/bno055.c ****             /* Convert gyro raw xyz to dps*/
5612:Core/Src/bno055.c ****             gyro_xyz->x = (double)(reg_gyro_xyz.x / BNO055_GYRO_DIV_DPS);
5613:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_DPS);
5614:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_DPS);
5615:Core/Src/bno055.c ****         }
5616:Core/Src/bno055.c ****         else
5617:Core/Src/bno055.c ****         {
5618:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5619:Core/Src/bno055.c ****         }
5620:Core/Src/bno055.c ****     }
5621:Core/Src/bno055.c ****     else
5622:Core/Src/bno055.c ****     {
5623:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5624:Core/Src/bno055.c ****     }
5625:Core/Src/bno055.c **** 
5626:Core/Src/bno055.c ****     return com_rslt;
5627:Core/Src/bno055.c **** }
5628:Core/Src/bno055.c **** 
5629:Core/Src/bno055.c **** /*!
5630:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro xyz raw data
5631:Core/Src/bno055.c ****  *  to rps output as double
5632:Core/Src/bno055.c ****  *
5633:Core/Src/bno055.c ****  *  @param gyro_xyz : The rps data of gyro xyz
5634:Core/Src/bno055.c ****  *
5635:Core/Src/bno055.c ****  *  Parameter |    result
5636:Core/Src/bno055.c ****  *  --------- | -----------------
ARM GAS  /tmp/ccWoU29M.s 			page 221


5637:Core/Src/bno055.c ****  *   x        | rps data of gyro
5638:Core/Src/bno055.c ****  *   y        | rps data of gyro
5639:Core/Src/bno055.c ****  *   z        | rps data of gyro
5640:Core/Src/bno055.c ****  *
5641:Core/Src/bno055.c ****  *
5642:Core/Src/bno055.c ****  *  @return results of bus communication function
5643:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5644:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5645:Core/Src/bno055.c ****  *
5646:Core/Src/bno055.c ****  */
5647:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_xyz_rps(struct bno055_gyro_double_t *gyro_xy
5648:Core/Src/bno055.c **** {
5649:Core/Src/bno055.c ****     /* Variable used to return value of
5650:Core/Src/bno055.c ****      * communication routine*/
5651:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5652:Core/Src/bno055.c ****     struct bno055_gyro_t reg_gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE }
5653:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5654:Core/Src/bno055.c **** 
5655:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5656:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
5657:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5658:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
5659:Core/Src/bno055.c ****     {
5660:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
5661:Core/Src/bno055.c ****     }
5662:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5663:Core/Src/bno055.c ****     {
5664:Core/Src/bno055.c ****         /* Read gyro raw x data */
5665:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_xyz(&reg_gyro_xyz);
5666:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5667:Core/Src/bno055.c ****         {
5668:Core/Src/bno055.c ****             /* Convert the raw gyro xyz to rps*/
5669:Core/Src/bno055.c ****             gyro_xyz->x = (double)(reg_gyro_xyz.x / BNO055_GYRO_DIV_RPS);
5670:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_RPS);
5671:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_RPS);
5672:Core/Src/bno055.c ****         }
5673:Core/Src/bno055.c ****         else
5674:Core/Src/bno055.c ****         {
5675:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5676:Core/Src/bno055.c ****         }
5677:Core/Src/bno055.c ****     }
5678:Core/Src/bno055.c ****     else
5679:Core/Src/bno055.c ****     {
5680:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5681:Core/Src/bno055.c ****     }
5682:Core/Src/bno055.c **** 
5683:Core/Src/bno055.c ****     return com_rslt;
5684:Core/Src/bno055.c **** }
5685:Core/Src/bno055.c **** 
5686:Core/Src/bno055.c **** /*!
5687:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler h raw data
5688:Core/Src/bno055.c ****  *  to degree output as double
5689:Core/Src/bno055.c ****  *
5690:Core/Src/bno055.c ****  *  @param euler_h_d : The double value of Euler h degree
5691:Core/Src/bno055.c ****  *
5692:Core/Src/bno055.c ****  *  @return results of bus communication function
5693:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
ARM GAS  /tmp/ccWoU29M.s 			page 222


5694:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5695:Core/Src/bno055.c ****  *
5696:Core/Src/bno055.c ****  *
5697:Core/Src/bno055.c ****  */
5698:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_h_deg(double *euler_h_d)
5699:Core/Src/bno055.c **** {
5700:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5701:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
5702:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5703:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5704:Core/Src/bno055.c **** 
5705:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5706:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
5707:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5708:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
5709:Core/Src/bno055.c ****     {
5710:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
5711:Core/Src/bno055.c ****     }
5712:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5713:Core/Src/bno055.c ****     {
5714:Core/Src/bno055.c ****         /* Read Euler raw h data*/
5715:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_h(&reg_euler_h_s16);
5716:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5717:Core/Src/bno055.c ****         {
5718:Core/Src/bno055.c ****             /* Convert raw Euler h to degree */
5719:Core/Src/bno055.c ****             data_d = (double)(reg_euler_h_s16 / BNO055_EULER_DIV_DEG);
5720:Core/Src/bno055.c ****             *euler_h_d = data_d;
5721:Core/Src/bno055.c ****         }
5722:Core/Src/bno055.c ****         else
5723:Core/Src/bno055.c ****         {
5724:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5725:Core/Src/bno055.c ****         }
5726:Core/Src/bno055.c ****     }
5727:Core/Src/bno055.c ****     else
5728:Core/Src/bno055.c ****     {
5729:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5730:Core/Src/bno055.c ****     }
5731:Core/Src/bno055.c **** 
5732:Core/Src/bno055.c ****     return com_rslt;
5733:Core/Src/bno055.c **** }
5734:Core/Src/bno055.c **** 
5735:Core/Src/bno055.c **** /*!
5736:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler h raw data
5737:Core/Src/bno055.c ****  *  to radians output as double
5738:Core/Src/bno055.c ****  *
5739:Core/Src/bno055.c ****  *  @param euler_h_d : The double value of Euler h radians
5740:Core/Src/bno055.c ****  *
5741:Core/Src/bno055.c ****  *  @return results of bus communication function
5742:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5743:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5744:Core/Src/bno055.c ****  *
5745:Core/Src/bno055.c ****  *
5746:Core/Src/bno055.c ****  */
5747:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_h_rad(double *euler_h_d)
5748:Core/Src/bno055.c **** {
5749:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5750:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccWoU29M.s 			page 223


5751:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5752:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5753:Core/Src/bno055.c **** 
5754:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5755:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
5756:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5757:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
5758:Core/Src/bno055.c ****     {
5759:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
5760:Core/Src/bno055.c ****     }
5761:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5762:Core/Src/bno055.c ****     {
5763:Core/Src/bno055.c ****         /* Read Euler raw h data*/
5764:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_h(&reg_euler_h_s16);
5765:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5766:Core/Src/bno055.c ****         {
5767:Core/Src/bno055.c ****             /* Convert raw Euler h to radians */
5768:Core/Src/bno055.c ****             data_d = (double)(reg_euler_h_s16 / BNO055_EULER_DIV_RAD);
5769:Core/Src/bno055.c ****             *euler_h_d = data_d;
5770:Core/Src/bno055.c ****         }
5771:Core/Src/bno055.c ****         else
5772:Core/Src/bno055.c ****         {
5773:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5774:Core/Src/bno055.c ****         }
5775:Core/Src/bno055.c ****     }
5776:Core/Src/bno055.c ****     else
5777:Core/Src/bno055.c ****     {
5778:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5779:Core/Src/bno055.c ****     }
5780:Core/Src/bno055.c **** 
5781:Core/Src/bno055.c ****     return com_rslt;
5782:Core/Src/bno055.c **** }
5783:Core/Src/bno055.c **** 
5784:Core/Src/bno055.c **** /*!
5785:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler r raw data
5786:Core/Src/bno055.c ****  *  to degree output as double
5787:Core/Src/bno055.c ****  *
5788:Core/Src/bno055.c ****  *  @param euler_r_d : The double value of Euler r degree
5789:Core/Src/bno055.c ****  *
5790:Core/Src/bno055.c ****  *  @return results of bus communication function
5791:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5792:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5793:Core/Src/bno055.c ****  *
5794:Core/Src/bno055.c ****  *
5795:Core/Src/bno055.c ****  */
5796:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_r_deg(double *euler_r_d)
5797:Core/Src/bno055.c **** {
5798:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5799:Core/Src/bno055.c ****     s16 reg_euler_r_s16 = BNO055_INIT_VALUE;
5800:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5801:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5802:Core/Src/bno055.c **** 
5803:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5804:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
5805:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5806:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
5807:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccWoU29M.s 			page 224


5808:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
5809:Core/Src/bno055.c ****     }
5810:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5811:Core/Src/bno055.c ****     {
5812:Core/Src/bno055.c ****         /* Read Euler raw r data*/
5813:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_r(&reg_euler_r_s16);
5814:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5815:Core/Src/bno055.c ****         {
5816:Core/Src/bno055.c ****             /* Convert raw Euler r to degree */
5817:Core/Src/bno055.c ****             data_d = (double)(reg_euler_r_s16 / BNO055_EULER_DIV_DEG);
5818:Core/Src/bno055.c ****             *euler_r_d = data_d;
5819:Core/Src/bno055.c ****         }
5820:Core/Src/bno055.c ****         else
5821:Core/Src/bno055.c ****         {
5822:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5823:Core/Src/bno055.c ****         }
5824:Core/Src/bno055.c ****     }
5825:Core/Src/bno055.c ****     else
5826:Core/Src/bno055.c ****     {
5827:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5828:Core/Src/bno055.c ****     }
5829:Core/Src/bno055.c **** 
5830:Core/Src/bno055.c ****     return com_rslt;
5831:Core/Src/bno055.c **** }
5832:Core/Src/bno055.c **** 
5833:Core/Src/bno055.c **** /*!
5834:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler r raw data
5835:Core/Src/bno055.c ****  *  to radians output as double
5836:Core/Src/bno055.c ****  *
5837:Core/Src/bno055.c ****  *  @param euler_r_d : The double value of Euler r radians
5838:Core/Src/bno055.c ****  *
5839:Core/Src/bno055.c ****  *  @return results of bus communication function
5840:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5841:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5842:Core/Src/bno055.c ****  *
5843:Core/Src/bno055.c ****  *
5844:Core/Src/bno055.c ****  */
5845:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_r_rad(double *euler_r_d)
5846:Core/Src/bno055.c **** {
5847:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5848:Core/Src/bno055.c ****     s16 reg_euler_r_s16 = BNO055_INIT_VALUE;
5849:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5850:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5851:Core/Src/bno055.c **** 
5852:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5853:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
5854:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5855:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
5856:Core/Src/bno055.c ****     {
5857:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
5858:Core/Src/bno055.c ****     }
5859:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5860:Core/Src/bno055.c ****     {
5861:Core/Src/bno055.c ****         /* Read Euler raw r data*/
5862:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_r(&reg_euler_r_s16);
5863:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5864:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 225


5865:Core/Src/bno055.c ****             /* Convert raw Euler r to radians */
5866:Core/Src/bno055.c ****             data_d = (double)(reg_euler_r_s16 / BNO055_EULER_DIV_RAD);
5867:Core/Src/bno055.c ****             *euler_r_d = data_d;
5868:Core/Src/bno055.c ****         }
5869:Core/Src/bno055.c ****         else
5870:Core/Src/bno055.c ****         {
5871:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5872:Core/Src/bno055.c ****         }
5873:Core/Src/bno055.c ****     }
5874:Core/Src/bno055.c ****     else
5875:Core/Src/bno055.c ****     {
5876:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5877:Core/Src/bno055.c ****     }
5878:Core/Src/bno055.c **** 
5879:Core/Src/bno055.c ****     return com_rslt;
5880:Core/Src/bno055.c **** }
5881:Core/Src/bno055.c **** 
5882:Core/Src/bno055.c **** /*!
5883:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler p raw data
5884:Core/Src/bno055.c ****  *  to degree output as double
5885:Core/Src/bno055.c ****  *
5886:Core/Src/bno055.c ****  *  @param euler_p_d : The double value of Euler p degree
5887:Core/Src/bno055.c ****  *
5888:Core/Src/bno055.c ****  *  @return results of bus communication function
5889:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5890:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5891:Core/Src/bno055.c ****  *
5892:Core/Src/bno055.c ****  *
5893:Core/Src/bno055.c ****  */
5894:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_p_deg(double *euler_p_d)
5895:Core/Src/bno055.c **** {
5896:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5897:Core/Src/bno055.c ****     s16 reg_euler_p_s16 = BNO055_INIT_VALUE;
5898:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5899:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5900:Core/Src/bno055.c **** 
5901:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5902:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
5903:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5904:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
5905:Core/Src/bno055.c ****     {
5906:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
5907:Core/Src/bno055.c ****     }
5908:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5909:Core/Src/bno055.c ****     {
5910:Core/Src/bno055.c ****         /* Read Euler raw p data*/
5911:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_p(&reg_euler_p_s16);
5912:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5913:Core/Src/bno055.c ****         {
5914:Core/Src/bno055.c ****             /* Convert raw Euler p to degree*/
5915:Core/Src/bno055.c ****             data_d = (double)(reg_euler_p_s16 / BNO055_EULER_DIV_DEG);
5916:Core/Src/bno055.c ****             *euler_p_d = data_d;
5917:Core/Src/bno055.c ****         }
5918:Core/Src/bno055.c ****         else
5919:Core/Src/bno055.c ****         {
5920:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5921:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 226


5922:Core/Src/bno055.c ****     }
5923:Core/Src/bno055.c ****     else
5924:Core/Src/bno055.c ****     {
5925:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5926:Core/Src/bno055.c ****     }
5927:Core/Src/bno055.c **** 
5928:Core/Src/bno055.c ****     return com_rslt;
5929:Core/Src/bno055.c **** }
5930:Core/Src/bno055.c **** 
5931:Core/Src/bno055.c **** /*!
5932:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler p raw data
5933:Core/Src/bno055.c ****  *  to radians output as double
5934:Core/Src/bno055.c ****  *
5935:Core/Src/bno055.c ****  *  @param euler_p_d : The double value of Euler p radians
5936:Core/Src/bno055.c ****  *
5937:Core/Src/bno055.c ****  *  @return results of bus communication function
5938:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5939:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5940:Core/Src/bno055.c ****  *
5941:Core/Src/bno055.c ****  *
5942:Core/Src/bno055.c ****  */
5943:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_p_rad(double *euler_p_d)
5944:Core/Src/bno055.c **** {
5945:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5946:Core/Src/bno055.c ****     s16 reg_euler_p_s16 = BNO055_INIT_VALUE;
5947:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5948:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5949:Core/Src/bno055.c **** 
5950:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5951:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
5952:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5953:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
5954:Core/Src/bno055.c ****     {
5955:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
5956:Core/Src/bno055.c ****     }
5957:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5958:Core/Src/bno055.c ****     {
5959:Core/Src/bno055.c ****         /* Read Euler raw p data*/
5960:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_p(&reg_euler_p_s16);
5961:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5962:Core/Src/bno055.c ****         {
5963:Core/Src/bno055.c ****             /* Convert raw p to radians*/
5964:Core/Src/bno055.c ****             data_d = (double)(reg_euler_p_s16 / BNO055_EULER_DIV_RAD);
5965:Core/Src/bno055.c ****             *euler_p_d = data_d;
5966:Core/Src/bno055.c ****         }
5967:Core/Src/bno055.c ****         else
5968:Core/Src/bno055.c ****         {
5969:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5970:Core/Src/bno055.c ****         }
5971:Core/Src/bno055.c ****     }
5972:Core/Src/bno055.c ****     else
5973:Core/Src/bno055.c ****     {
5974:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5975:Core/Src/bno055.c ****     }
5976:Core/Src/bno055.c **** 
5977:Core/Src/bno055.c ****     return com_rslt;
5978:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccWoU29M.s 			page 227


5979:Core/Src/bno055.c **** 
5980:Core/Src/bno055.c **** /*!
5981:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler hpr raw data
5982:Core/Src/bno055.c ****  *  to degree output as double
5983:Core/Src/bno055.c ****  *
5984:Core/Src/bno055.c ****  *  @param euler_hpr : The degree data of Euler hpr
5985:Core/Src/bno055.c ****  *
5986:Core/Src/bno055.c ****  *  Parameter |    result
5987:Core/Src/bno055.c ****  *  --------- | -----------------
5988:Core/Src/bno055.c ****  *   h        | degree data of Euler
5989:Core/Src/bno055.c ****  *   r        | degree data of Euler
5990:Core/Src/bno055.c ****  *   p        | degree data of Euler
5991:Core/Src/bno055.c ****  *
5992:Core/Src/bno055.c ****  *
5993:Core/Src/bno055.c ****  *  @return results of bus communication function
5994:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5995:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5996:Core/Src/bno055.c ****  *
5997:Core/Src/bno055.c ****  */
5998:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_hpr_deg(struct bno055_euler_double_t *euler
5999:Core/Src/bno055.c **** {
6000:Core/Src/bno055.c ****     /* Variable used to return value of
6001:Core/Src/bno055.c ****      * communication routine*/
6002:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
6003:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
6004:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
6005:Core/Src/bno055.c **** 
6006:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
6007:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
6008:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
6009:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
6010:Core/Src/bno055.c ****     {
6011:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
6012:Core/Src/bno055.c ****     }
6013:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
6014:Core/Src/bno055.c ****     {
6015:Core/Src/bno055.c ****         /* Read Euler raw h data*/
6016:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_hrp(&reg_euler);
6017:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
6018:Core/Src/bno055.c ****         {
6019:Core/Src/bno055.c ****             /* Convert raw Euler hrp to degree*/
6020:Core/Src/bno055.c ****             euler_hpr->h = (double)(reg_euler.h / BNO055_EULER_DIV_DEG);
6021:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_DEG);
6022:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_DEG);
6023:Core/Src/bno055.c ****         }
6024:Core/Src/bno055.c ****         else
6025:Core/Src/bno055.c ****         {
6026:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6027:Core/Src/bno055.c ****         }
6028:Core/Src/bno055.c ****     }
6029:Core/Src/bno055.c ****     else
6030:Core/Src/bno055.c ****     {
6031:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6032:Core/Src/bno055.c ****     }
6033:Core/Src/bno055.c **** 
6034:Core/Src/bno055.c ****     return com_rslt;
6035:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccWoU29M.s 			page 228


6036:Core/Src/bno055.c **** 
6037:Core/Src/bno055.c **** /*!
6038:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler hpr raw data
6039:Core/Src/bno055.c ****  *  to radians output as double
6040:Core/Src/bno055.c ****  *
6041:Core/Src/bno055.c ****  *  @param euler_hpr : The radians data of Euler hpr
6042:Core/Src/bno055.c ****  *
6043:Core/Src/bno055.c ****  *  Parameter |    result
6044:Core/Src/bno055.c ****  *  --------- | -----------------
6045:Core/Src/bno055.c ****  *   h        | radians data of Euler
6046:Core/Src/bno055.c ****  *   r        | radians data of Euler
6047:Core/Src/bno055.c ****  *   p        | radians data of Euler
6048:Core/Src/bno055.c ****  *
6049:Core/Src/bno055.c ****  *
6050:Core/Src/bno055.c ****  *  @return results of bus communication function
6051:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6052:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6053:Core/Src/bno055.c ****  *
6054:Core/Src/bno055.c ****  */
6055:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_hpr_rad(struct bno055_euler_double_t *euler
6056:Core/Src/bno055.c **** {
6057:Core/Src/bno055.c ****     /* Variable used to return value of
6058:Core/Src/bno055.c ****      * communication routine*/
6059:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
6060:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
6061:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
6062:Core/Src/bno055.c **** 
6063:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
6064:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
6065:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
6066:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
6067:Core/Src/bno055.c ****     {
6068:Core/Src/bno055.c ****         com_rslt = bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
6069:Core/Src/bno055.c ****     }
6070:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
6071:Core/Src/bno055.c ****     {
6072:Core/Src/bno055.c ****         /* Read the raw hrp */
6073:Core/Src/bno055.c ****         com_rslt = bno055_read_euler_hrp(&reg_euler);
6074:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
6075:Core/Src/bno055.c ****         {
6076:Core/Src/bno055.c ****             /* Convert raw Euler hrp to radians*/
6077:Core/Src/bno055.c ****             euler_hpr->h = (double)(reg_euler.h / BNO055_EULER_DIV_RAD);
6078:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
6079:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_RAD);
6080:Core/Src/bno055.c ****         }
6081:Core/Src/bno055.c ****         else
6082:Core/Src/bno055.c ****         {
6083:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6084:Core/Src/bno055.c ****         }
6085:Core/Src/bno055.c ****     }
6086:Core/Src/bno055.c ****     else
6087:Core/Src/bno055.c ****     {
6088:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6089:Core/Src/bno055.c ****     }
6090:Core/Src/bno055.c **** 
6091:Core/Src/bno055.c ****     return com_rslt;
6092:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccWoU29M.s 			page 229


6093:Core/Src/bno055.c **** 
6094:Core/Src/bno055.c **** /*!
6095:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
6096:Core/Src/bno055.c ****  *  accel x raw data to meterpersecseq output as double
6097:Core/Src/bno055.c ****  *
6098:Core/Src/bno055.c ****  *  @param linear_accel_x_d : The double value of
6099:Core/Src/bno055.c ****  *  linear accel x meterpersecseq
6100:Core/Src/bno055.c ****  *
6101:Core/Src/bno055.c ****  *  @return results of bus communication function
6102:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6103:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6104:Core/Src/bno055.c ****  *
6105:Core/Src/bno055.c ****  *
6106:Core/Src/bno055.c ****  */
6107:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_linear_accel_x_msq(double *linear_accel_x_d)
6108:Core/Src/bno055.c **** {
 6585              		.loc 1 6108 1 is_stmt 1 view -0
 6586              		.cfi_startproc
 6587              		@ args = 0, pretend = 0, frame = 8
 6588              		@ frame_needed = 0, uses_anonymous_args = 0
 6589              		.loc 1 6108 1 is_stmt 0 view .LVU1762
 6590 0000 30B5     		push	{r4, r5, lr}
 6591              	.LCFI221:
 6592              		.cfi_def_cfa_offset 12
 6593              		.cfi_offset 4, -12
 6594              		.cfi_offset 5, -8
 6595              		.cfi_offset 14, -4
 6596 0002 83B0     		sub	sp, sp, #12
 6597              	.LCFI222:
 6598              		.cfi_def_cfa_offset 24
 6599 0004 0446     		mov	r4, r0
6109:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6600              		.loc 1 6109 5 is_stmt 1 view .LVU1763
 6601              	.LVL677:
6110:Core/Src/bno055.c ****     s16 reg_linear_accel_x_s16 = BNO055_INIT_VALUE;
 6602              		.loc 1 6110 5 view .LVU1764
 6603              		.loc 1 6110 9 is_stmt 0 view .LVU1765
 6604 0006 0023     		movs	r3, #0
 6605 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6111:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6606              		.loc 1 6111 5 is_stmt 1 view .LVU1766
 6607              	.LVL678:
6112:Core/Src/bno055.c **** 
6113:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
6114:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_x(&reg_linear_accel_x_s16);
 6608              		.loc 1 6114 5 view .LVU1767
 6609              		.loc 1 6114 16 is_stmt 0 view .LVU1768
 6610 000c 0DF10600 		add	r0, sp, #6
 6611              	.LVL679:
 6612              		.loc 1 6114 16 view .LVU1769
 6613 0010 FFF7FEFF 		bl	bno055_read_linear_accel_x
 6614              	.LVL680:
6115:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6615              		.loc 1 6115 5 is_stmt 1 view .LVU1770
 6616              		.loc 1 6115 8 is_stmt 0 view .LVU1771
 6617 0014 68B9     		cbnz	r0, .L489
 6618 0016 0546     		mov	r5, r0
ARM GAS  /tmp/ccWoU29M.s 			page 230


6116:Core/Src/bno055.c ****     {
6117:Core/Src/bno055.c ****         /* Convert the raw x to m/s2 */
6118:Core/Src/bno055.c ****         data_d = (double)(reg_linear_accel_x_s16 / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6619              		.loc 1 6118 9 is_stmt 1 view .LVU1772
 6620              		.loc 1 6118 18 is_stmt 0 view .LVU1773
 6621 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6622              	.LVL681:
 6623              		.loc 1 6118 18 view .LVU1774
 6624 001c FFF7FEFF 		bl	__aeabi_i2d
 6625              	.LVL682:
 6626              		.loc 1 6118 16 view .LVU1775
 6627 0020 0022     		movs	r2, #0
 6628 0022 054B     		ldr	r3, .L491
 6629 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6630              	.LVL683:
6119:Core/Src/bno055.c ****         *linear_accel_x_d = data_d;
 6631              		.loc 1 6119 9 is_stmt 1 view .LVU1776
 6632              		.loc 1 6119 27 is_stmt 0 view .LVU1777
 6633 0028 C4E90001 		strd	r0, [r4]
 6634              	.LVL684:
 6635              	.L488:
6120:Core/Src/bno055.c ****     }
6121:Core/Src/bno055.c ****     else
6122:Core/Src/bno055.c ****     {
6123:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6124:Core/Src/bno055.c ****     }
6125:Core/Src/bno055.c **** 
6126:Core/Src/bno055.c ****     return com_rslt;
 6636              		.loc 1 6126 5 is_stmt 1 view .LVU1778
6127:Core/Src/bno055.c **** }
 6637              		.loc 1 6127 1 is_stmt 0 view .LVU1779
 6638 002c 2846     		mov	r0, r5
 6639 002e 03B0     		add	sp, sp, #12
 6640              	.LCFI223:
 6641              		.cfi_remember_state
 6642              		.cfi_def_cfa_offset 12
 6643              		@ sp needed
 6644 0030 30BD     		pop	{r4, r5, pc}
 6645              	.LVL685:
 6646              	.L489:
 6647              	.LCFI224:
 6648              		.cfi_restore_state
6123:Core/Src/bno055.c ****     }
 6649              		.loc 1 6123 18 view .LVU1780
 6650 0032 4FF0FF35 		mov	r5, #-1
 6651 0036 F9E7     		b	.L488
 6652              	.L492:
 6653              		.align	2
 6654              	.L491:
 6655 0038 00005940 		.word	1079574528
 6656              		.cfi_endproc
 6657              	.LFE107:
 6659              		.section	.text.bno055_convert_double_linear_accel_y_msq,"ax",%progbits
 6660              		.align	1
 6661              		.global	bno055_convert_double_linear_accel_y_msq
 6662              		.syntax unified
 6663              		.thumb
ARM GAS  /tmp/ccWoU29M.s 			page 231


 6664              		.thumb_func
 6665              		.fpu fpv4-sp-d16
 6667              	bno055_convert_double_linear_accel_y_msq:
 6668              	.LVL686:
 6669              	.LFB108:
6128:Core/Src/bno055.c **** 
6129:Core/Src/bno055.c **** /*!
6130:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
6131:Core/Src/bno055.c ****  *  accel y raw data to meterpersecseq output as double
6132:Core/Src/bno055.c ****  *
6133:Core/Src/bno055.c ****  *  @param linear_accel_y_d : The double value of
6134:Core/Src/bno055.c ****  *  linear accel y meterpersecseq
6135:Core/Src/bno055.c ****  *
6136:Core/Src/bno055.c ****  *  @return results of bus communication function
6137:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6138:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6139:Core/Src/bno055.c ****  *
6140:Core/Src/bno055.c ****  *
6141:Core/Src/bno055.c ****  */
6142:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_linear_accel_y_msq(double *linear_accel_y_d)
6143:Core/Src/bno055.c **** {
 6670              		.loc 1 6143 1 is_stmt 1 view -0
 6671              		.cfi_startproc
 6672              		@ args = 0, pretend = 0, frame = 8
 6673              		@ frame_needed = 0, uses_anonymous_args = 0
 6674              		.loc 1 6143 1 is_stmt 0 view .LVU1782
 6675 0000 30B5     		push	{r4, r5, lr}
 6676              	.LCFI225:
 6677              		.cfi_def_cfa_offset 12
 6678              		.cfi_offset 4, -12
 6679              		.cfi_offset 5, -8
 6680              		.cfi_offset 14, -4
 6681 0002 83B0     		sub	sp, sp, #12
 6682              	.LCFI226:
 6683              		.cfi_def_cfa_offset 24
 6684 0004 0446     		mov	r4, r0
6144:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6685              		.loc 1 6144 5 is_stmt 1 view .LVU1783
 6686              	.LVL687:
6145:Core/Src/bno055.c ****     s16 reg_linear_accel_y_s16 = BNO055_INIT_VALUE;
 6687              		.loc 1 6145 5 view .LVU1784
 6688              		.loc 1 6145 9 is_stmt 0 view .LVU1785
 6689 0006 0023     		movs	r3, #0
 6690 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6146:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6691              		.loc 1 6146 5 is_stmt 1 view .LVU1786
 6692              	.LVL688:
6147:Core/Src/bno055.c **** 
6148:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
6149:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_y(&reg_linear_accel_y_s16);
 6693              		.loc 1 6149 5 view .LVU1787
 6694              		.loc 1 6149 16 is_stmt 0 view .LVU1788
 6695 000c 0DF10600 		add	r0, sp, #6
 6696              	.LVL689:
 6697              		.loc 1 6149 16 view .LVU1789
 6698 0010 FFF7FEFF 		bl	bno055_read_linear_accel_y
 6699              	.LVL690:
ARM GAS  /tmp/ccWoU29M.s 			page 232


6150:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6700              		.loc 1 6150 5 is_stmt 1 view .LVU1790
 6701              		.loc 1 6150 8 is_stmt 0 view .LVU1791
 6702 0014 68B9     		cbnz	r0, .L495
 6703 0016 0546     		mov	r5, r0
6151:Core/Src/bno055.c ****     {
6152:Core/Src/bno055.c ****         /* Convert the raw y to m/s2 */
6153:Core/Src/bno055.c ****         data_d = (double)(reg_linear_accel_y_s16 / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6704              		.loc 1 6153 9 is_stmt 1 view .LVU1792
 6705              		.loc 1 6153 18 is_stmt 0 view .LVU1793
 6706 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6707              	.LVL691:
 6708              		.loc 1 6153 18 view .LVU1794
 6709 001c FFF7FEFF 		bl	__aeabi_i2d
 6710              	.LVL692:
 6711              		.loc 1 6153 16 view .LVU1795
 6712 0020 0022     		movs	r2, #0
 6713 0022 054B     		ldr	r3, .L497
 6714 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6715              	.LVL693:
6154:Core/Src/bno055.c ****         *linear_accel_y_d = data_d;
 6716              		.loc 1 6154 9 is_stmt 1 view .LVU1796
 6717              		.loc 1 6154 27 is_stmt 0 view .LVU1797
 6718 0028 C4E90001 		strd	r0, [r4]
 6719              	.LVL694:
 6720              	.L494:
6155:Core/Src/bno055.c ****     }
6156:Core/Src/bno055.c ****     else
6157:Core/Src/bno055.c ****     {
6158:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6159:Core/Src/bno055.c ****     }
6160:Core/Src/bno055.c **** 
6161:Core/Src/bno055.c ****     return com_rslt;
 6721              		.loc 1 6161 5 is_stmt 1 view .LVU1798
6162:Core/Src/bno055.c **** }
 6722              		.loc 1 6162 1 is_stmt 0 view .LVU1799
 6723 002c 2846     		mov	r0, r5
 6724 002e 03B0     		add	sp, sp, #12
 6725              	.LCFI227:
 6726              		.cfi_remember_state
 6727              		.cfi_def_cfa_offset 12
 6728              		@ sp needed
 6729 0030 30BD     		pop	{r4, r5, pc}
 6730              	.LVL695:
 6731              	.L495:
 6732              	.LCFI228:
 6733              		.cfi_restore_state
6158:Core/Src/bno055.c ****     }
 6734              		.loc 1 6158 18 view .LVU1800
 6735 0032 4FF0FF35 		mov	r5, #-1
 6736 0036 F9E7     		b	.L494
 6737              	.L498:
 6738              		.align	2
 6739              	.L497:
 6740 0038 00005940 		.word	1079574528
 6741              		.cfi_endproc
 6742              	.LFE108:
ARM GAS  /tmp/ccWoU29M.s 			page 233


 6744              		.section	.text.bno055_convert_double_linear_accel_z_msq,"ax",%progbits
 6745              		.align	1
 6746              		.global	bno055_convert_double_linear_accel_z_msq
 6747              		.syntax unified
 6748              		.thumb
 6749              		.thumb_func
 6750              		.fpu fpv4-sp-d16
 6752              	bno055_convert_double_linear_accel_z_msq:
 6753              	.LVL696:
 6754              	.LFB109:
6163:Core/Src/bno055.c **** 
6164:Core/Src/bno055.c **** /*!
6165:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
6166:Core/Src/bno055.c ****  *  accel z raw data to meterpersecseq output as double
6167:Core/Src/bno055.c ****  *
6168:Core/Src/bno055.c ****  *  @param linear_accel_z_d : The double value of
6169:Core/Src/bno055.c ****  *  linear accel z meterpersecseq
6170:Core/Src/bno055.c ****  *
6171:Core/Src/bno055.c ****  *  @return results of bus communication function
6172:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6173:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6174:Core/Src/bno055.c ****  *
6175:Core/Src/bno055.c ****  *
6176:Core/Src/bno055.c ****  */
6177:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_linear_accel_z_msq(double *linear_accel_z_d)
6178:Core/Src/bno055.c **** {
 6755              		.loc 1 6178 1 is_stmt 1 view -0
 6756              		.cfi_startproc
 6757              		@ args = 0, pretend = 0, frame = 8
 6758              		@ frame_needed = 0, uses_anonymous_args = 0
 6759              		.loc 1 6178 1 is_stmt 0 view .LVU1802
 6760 0000 30B5     		push	{r4, r5, lr}
 6761              	.LCFI229:
 6762              		.cfi_def_cfa_offset 12
 6763              		.cfi_offset 4, -12
 6764              		.cfi_offset 5, -8
 6765              		.cfi_offset 14, -4
 6766 0002 83B0     		sub	sp, sp, #12
 6767              	.LCFI230:
 6768              		.cfi_def_cfa_offset 24
 6769 0004 0446     		mov	r4, r0
6179:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6770              		.loc 1 6179 5 is_stmt 1 view .LVU1803
 6771              	.LVL697:
6180:Core/Src/bno055.c ****     s16 reg_linear_accel_z_s16 = BNO055_INIT_VALUE;
 6772              		.loc 1 6180 5 view .LVU1804
 6773              		.loc 1 6180 9 is_stmt 0 view .LVU1805
 6774 0006 0023     		movs	r3, #0
 6775 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6181:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6776              		.loc 1 6181 5 is_stmt 1 view .LVU1806
 6777              	.LVL698:
6182:Core/Src/bno055.c **** 
6183:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
6184:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_z(&reg_linear_accel_z_s16);
 6778              		.loc 1 6184 5 view .LVU1807
 6779              		.loc 1 6184 16 is_stmt 0 view .LVU1808
ARM GAS  /tmp/ccWoU29M.s 			page 234


 6780 000c 0DF10600 		add	r0, sp, #6
 6781              	.LVL699:
 6782              		.loc 1 6184 16 view .LVU1809
 6783 0010 FFF7FEFF 		bl	bno055_read_linear_accel_z
 6784              	.LVL700:
6185:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6785              		.loc 1 6185 5 is_stmt 1 view .LVU1810
 6786              		.loc 1 6185 8 is_stmt 0 view .LVU1811
 6787 0014 68B9     		cbnz	r0, .L501
 6788 0016 0546     		mov	r5, r0
6186:Core/Src/bno055.c ****     {
6187:Core/Src/bno055.c ****         /* Convert the raw z to m/s2 */
6188:Core/Src/bno055.c ****         data_d = (double)(reg_linear_accel_z_s16 / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6789              		.loc 1 6188 9 is_stmt 1 view .LVU1812
 6790              		.loc 1 6188 18 is_stmt 0 view .LVU1813
 6791 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6792              	.LVL701:
 6793              		.loc 1 6188 18 view .LVU1814
 6794 001c FFF7FEFF 		bl	__aeabi_i2d
 6795              	.LVL702:
 6796              		.loc 1 6188 16 view .LVU1815
 6797 0020 0022     		movs	r2, #0
 6798 0022 054B     		ldr	r3, .L503
 6799 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6800              	.LVL703:
6189:Core/Src/bno055.c ****         *linear_accel_z_d = data_d;
 6801              		.loc 1 6189 9 is_stmt 1 view .LVU1816
 6802              		.loc 1 6189 27 is_stmt 0 view .LVU1817
 6803 0028 C4E90001 		strd	r0, [r4]
 6804              	.LVL704:
 6805              	.L500:
6190:Core/Src/bno055.c ****     }
6191:Core/Src/bno055.c ****     else
6192:Core/Src/bno055.c ****     {
6193:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6194:Core/Src/bno055.c ****     }
6195:Core/Src/bno055.c **** 
6196:Core/Src/bno055.c ****     return com_rslt;
 6806              		.loc 1 6196 5 is_stmt 1 view .LVU1818
6197:Core/Src/bno055.c **** }
 6807              		.loc 1 6197 1 is_stmt 0 view .LVU1819
 6808 002c 2846     		mov	r0, r5
 6809 002e 03B0     		add	sp, sp, #12
 6810              	.LCFI231:
 6811              		.cfi_remember_state
 6812              		.cfi_def_cfa_offset 12
 6813              		@ sp needed
 6814 0030 30BD     		pop	{r4, r5, pc}
 6815              	.LVL705:
 6816              	.L501:
 6817              	.LCFI232:
 6818              		.cfi_restore_state
6193:Core/Src/bno055.c ****     }
 6819              		.loc 1 6193 18 view .LVU1820
 6820 0032 4FF0FF35 		mov	r5, #-1
 6821 0036 F9E7     		b	.L500
 6822              	.L504:
ARM GAS  /tmp/ccWoU29M.s 			page 235


 6823              		.align	2
 6824              	.L503:
 6825 0038 00005940 		.word	1079574528
 6826              		.cfi_endproc
 6827              	.LFE109:
 6829              		.section	.text.bno055_convert_double_linear_accel_xyz_msq,"ax",%progbits
 6830              		.align	1
 6831              		.global	bno055_convert_double_linear_accel_xyz_msq
 6832              		.syntax unified
 6833              		.thumb
 6834              		.thumb_func
 6835              		.fpu fpv4-sp-d16
 6837              	bno055_convert_double_linear_accel_xyz_msq:
 6838              	.LVL706:
 6839              	.LFB110:
6198:Core/Src/bno055.c **** 
6199:Core/Src/bno055.c **** /*!
6200:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear accel xyz raw data
6201:Core/Src/bno055.c ****  *  to meterpersecseq output as double
6202:Core/Src/bno055.c ****  *
6203:Core/Src/bno055.c ****  *  @param linear_accel_xyz : The meterpersecseq data of linear accel xyz
6204:Core/Src/bno055.c ****  *
6205:Core/Src/bno055.c ****  *  Parameter |    result
6206:Core/Src/bno055.c ****  *  --------- | -----------------
6207:Core/Src/bno055.c ****  *   x        | meterpersecseq data of linear accel
6208:Core/Src/bno055.c ****  *   y        | meterpersecseq data of linear accel
6209:Core/Src/bno055.c ****  *   z        | meterpersecseq data of linear accel
6210:Core/Src/bno055.c ****  *
6211:Core/Src/bno055.c ****  *
6212:Core/Src/bno055.c ****  *  @return results of bus communication function
6213:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6214:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6215:Core/Src/bno055.c ****  *
6216:Core/Src/bno055.c ****  */
6217:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_linear_accel_xyz_msq(
6218:Core/Src/bno055.c ****     struct bno055_linear_accel_double_t *linear_accel_xyz)
6219:Core/Src/bno055.c **** {
 6840              		.loc 1 6219 1 is_stmt 1 view -0
 6841              		.cfi_startproc
 6842              		@ args = 0, pretend = 0, frame = 8
 6843              		@ frame_needed = 0, uses_anonymous_args = 0
 6844              		.loc 1 6219 1 is_stmt 0 view .LVU1822
 6845 0000 30B5     		push	{r4, r5, lr}
 6846              	.LCFI233:
 6847              		.cfi_def_cfa_offset 12
 6848              		.cfi_offset 4, -12
 6849              		.cfi_offset 5, -8
 6850              		.cfi_offset 14, -4
 6851 0002 83B0     		sub	sp, sp, #12
 6852              	.LCFI234:
 6853              		.cfi_def_cfa_offset 24
 6854 0004 0446     		mov	r4, r0
6220:Core/Src/bno055.c ****     /* Variable used to return value of
6221:Core/Src/bno055.c ****      * communication routine*/
6222:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6855              		.loc 1 6222 5 is_stmt 1 view .LVU1823
 6856              	.LVL707:
ARM GAS  /tmp/ccWoU29M.s 			page 236


6223:Core/Src/bno055.c ****     struct bno055_linear_accel_t reg_linear_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO
 6857              		.loc 1 6223 5 view .LVU1824
 6858              		.loc 1 6223 34 is_stmt 0 view .LVU1825
 6859 0006 0023     		movs	r3, #0
 6860 0008 ADF80030 		strh	r3, [sp]	@ movhi
 6861 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 6862 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
6224:Core/Src/bno055.c **** 
6225:Core/Src/bno055.c ****     /* Read the raw xyz of linear accel */
6226:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_xyz(&reg_linear_accel_xyz);
 6863              		.loc 1 6226 5 is_stmt 1 view .LVU1826
 6864              		.loc 1 6226 16 is_stmt 0 view .LVU1827
 6865 0014 6846     		mov	r0, sp
 6866              	.LVL708:
 6867              		.loc 1 6226 16 view .LVU1828
 6868 0016 FFF7FEFF 		bl	bno055_read_linear_accel_xyz
 6869              	.LVL709:
6227:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6870              		.loc 1 6227 5 is_stmt 1 view .LVU1829
 6871              		.loc 1 6227 8 is_stmt 0 view .LVU1830
 6872 001a 08BB     		cbnz	r0, .L507
 6873 001c 0546     		mov	r5, r0
6228:Core/Src/bno055.c ****     {
6229:Core/Src/bno055.c ****         /* Convert the raw xyz of linear accel to m/s2 */
6230:Core/Src/bno055.c ****         linear_accel_xyz->x = (double)(reg_linear_accel_xyz.x / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6874              		.loc 1 6230 9 is_stmt 1 view .LVU1831
 6875              		.loc 1 6230 31 is_stmt 0 view .LVU1832
 6876 001e BDF90000 		ldrsh	r0, [sp]
 6877              	.LVL710:
 6878              		.loc 1 6230 31 view .LVU1833
 6879 0022 FFF7FEFF 		bl	__aeabi_i2d
 6880              	.LVL711:
 6881 0026 0022     		movs	r2, #0
 6882 0028 0F4B     		ldr	r3, .L509
 6883 002a FFF7FEFF 		bl	__aeabi_ddiv
 6884              	.LVL712:
 6885              		.loc 1 6230 29 view .LVU1834
 6886 002e C4E90001 		strd	r0, [r4]
6231:Core/Src/bno055.c ****         linear_accel_xyz->y = (double)(reg_linear_accel_xyz.y / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6887              		.loc 1 6231 9 is_stmt 1 view .LVU1835
 6888              		.loc 1 6231 31 is_stmt 0 view .LVU1836
 6889 0032 BDF90200 		ldrsh	r0, [sp, #2]
 6890 0036 FFF7FEFF 		bl	__aeabi_i2d
 6891              	.LVL713:
 6892 003a 0022     		movs	r2, #0
 6893 003c 0A4B     		ldr	r3, .L509
 6894 003e FFF7FEFF 		bl	__aeabi_ddiv
 6895              	.LVL714:
 6896              		.loc 1 6231 29 view .LVU1837
 6897 0042 C4E90201 		strd	r0, [r4, #8]
6232:Core/Src/bno055.c ****         linear_accel_xyz->z = (double)(reg_linear_accel_xyz.z / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6898              		.loc 1 6232 9 is_stmt 1 view .LVU1838
 6899              		.loc 1 6232 31 is_stmt 0 view .LVU1839
 6900 0046 BDF90400 		ldrsh	r0, [sp, #4]
 6901 004a FFF7FEFF 		bl	__aeabi_i2d
 6902              	.LVL715:
 6903 004e 0022     		movs	r2, #0
ARM GAS  /tmp/ccWoU29M.s 			page 237


 6904 0050 054B     		ldr	r3, .L509
 6905 0052 FFF7FEFF 		bl	__aeabi_ddiv
 6906              	.LVL716:
 6907              		.loc 1 6232 29 view .LVU1840
 6908 0056 C4E90401 		strd	r0, [r4, #16]
 6909              	.L506:
 6910              	.LVL717:
6233:Core/Src/bno055.c ****     }
6234:Core/Src/bno055.c ****     else
6235:Core/Src/bno055.c ****     {
6236:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6237:Core/Src/bno055.c ****     }
6238:Core/Src/bno055.c **** 
6239:Core/Src/bno055.c ****     return com_rslt;
 6911              		.loc 1 6239 5 is_stmt 1 view .LVU1841
6240:Core/Src/bno055.c **** }
 6912              		.loc 1 6240 1 is_stmt 0 view .LVU1842
 6913 005a 2846     		mov	r0, r5
 6914 005c 03B0     		add	sp, sp, #12
 6915              	.LCFI235:
 6916              		.cfi_remember_state
 6917              		.cfi_def_cfa_offset 12
 6918              		@ sp needed
 6919 005e 30BD     		pop	{r4, r5, pc}
 6920              	.LVL718:
 6921              	.L507:
 6922              	.LCFI236:
 6923              		.cfi_restore_state
6236:Core/Src/bno055.c ****     }
 6924              		.loc 1 6236 18 view .LVU1843
 6925 0060 4FF0FF35 		mov	r5, #-1
 6926 0064 F9E7     		b	.L506
 6927              	.L510:
 6928 0066 00BF     		.align	2
 6929              	.L509:
 6930 0068 00005940 		.word	1079574528
 6931              		.cfi_endproc
 6932              	.LFE110:
 6934              		.section	.text.bno055_convert_gravity_double_x_msq,"ax",%progbits
 6935              		.align	1
 6936              		.global	bno055_convert_gravity_double_x_msq
 6937              		.syntax unified
 6938              		.thumb
 6939              		.thumb_func
 6940              		.fpu fpv4-sp-d16
 6942              	bno055_convert_gravity_double_x_msq:
 6943              	.LVL719:
 6944              	.LFB111:
6241:Core/Src/bno055.c **** 
6242:Core/Src/bno055.c **** /*!
6243:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
6244:Core/Src/bno055.c ****  *  x raw data to meterpersecseq output as double
6245:Core/Src/bno055.c ****  *
6246:Core/Src/bno055.c ****  *  @param gravity_x_d : The double value of gravity x meterpersecseq
6247:Core/Src/bno055.c ****  *
6248:Core/Src/bno055.c ****  *  @return results of bus communication function
6249:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
ARM GAS  /tmp/ccWoU29M.s 			page 238


6250:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6251:Core/Src/bno055.c ****  *
6252:Core/Src/bno055.c ****  *
6253:Core/Src/bno055.c ****  */
6254:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_double_x_msq(double *gravity_x_d)
6255:Core/Src/bno055.c **** {
 6945              		.loc 1 6255 1 is_stmt 1 view -0
 6946              		.cfi_startproc
 6947              		@ args = 0, pretend = 0, frame = 8
 6948              		@ frame_needed = 0, uses_anonymous_args = 0
 6949              		.loc 1 6255 1 is_stmt 0 view .LVU1845
 6950 0000 30B5     		push	{r4, r5, lr}
 6951              	.LCFI237:
 6952              		.cfi_def_cfa_offset 12
 6953              		.cfi_offset 4, -12
 6954              		.cfi_offset 5, -8
 6955              		.cfi_offset 14, -4
 6956 0002 83B0     		sub	sp, sp, #12
 6957              	.LCFI238:
 6958              		.cfi_def_cfa_offset 24
 6959 0004 0446     		mov	r4, r0
6256:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6960              		.loc 1 6256 5 is_stmt 1 view .LVU1846
 6961              	.LVL720:
6257:Core/Src/bno055.c ****     s16 reg_gravity_x_s16 = BNO055_INIT_VALUE;
 6962              		.loc 1 6257 5 view .LVU1847
 6963              		.loc 1 6257 9 is_stmt 0 view .LVU1848
 6964 0006 0023     		movs	r3, #0
 6965 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6258:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6966              		.loc 1 6258 5 is_stmt 1 view .LVU1849
 6967              	.LVL721:
6259:Core/Src/bno055.c **** 
6260:Core/Src/bno055.c ****     /* Read raw gravity of x*/
6261:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_x(&reg_gravity_x_s16);
 6968              		.loc 1 6261 5 view .LVU1850
 6969              		.loc 1 6261 16 is_stmt 0 view .LVU1851
 6970 000c 0DF10600 		add	r0, sp, #6
 6971              	.LVL722:
 6972              		.loc 1 6261 16 view .LVU1852
 6973 0010 FFF7FEFF 		bl	bno055_read_gravity_x
 6974              	.LVL723:
6262:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6975              		.loc 1 6262 5 is_stmt 1 view .LVU1853
 6976              		.loc 1 6262 8 is_stmt 0 view .LVU1854
 6977 0014 68B9     		cbnz	r0, .L513
 6978 0016 0546     		mov	r5, r0
6263:Core/Src/bno055.c ****     {
6264:Core/Src/bno055.c ****         /* Convert raw gravity of x to m/s2 */
6265:Core/Src/bno055.c ****         data_d = (double)(reg_gravity_x_s16 / BNO055_GRAVITY_DIV_MSQ);
 6979              		.loc 1 6265 9 is_stmt 1 view .LVU1855
 6980              		.loc 1 6265 18 is_stmt 0 view .LVU1856
 6981 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6982              	.LVL724:
 6983              		.loc 1 6265 18 view .LVU1857
 6984 001c FFF7FEFF 		bl	__aeabi_i2d
 6985              	.LVL725:
ARM GAS  /tmp/ccWoU29M.s 			page 239


 6986              		.loc 1 6265 16 view .LVU1858
 6987 0020 0022     		movs	r2, #0
 6988 0022 054B     		ldr	r3, .L515
 6989 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6990              	.LVL726:
6266:Core/Src/bno055.c ****         *gravity_x_d = data_d;
 6991              		.loc 1 6266 9 is_stmt 1 view .LVU1859
 6992              		.loc 1 6266 22 is_stmt 0 view .LVU1860
 6993 0028 C4E90001 		strd	r0, [r4]
 6994              	.LVL727:
 6995              	.L512:
6267:Core/Src/bno055.c ****     }
6268:Core/Src/bno055.c ****     else
6269:Core/Src/bno055.c ****     {
6270:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6271:Core/Src/bno055.c ****     }
6272:Core/Src/bno055.c **** 
6273:Core/Src/bno055.c ****     return com_rslt;
 6996              		.loc 1 6273 5 is_stmt 1 view .LVU1861
6274:Core/Src/bno055.c **** }
 6997              		.loc 1 6274 1 is_stmt 0 view .LVU1862
 6998 002c 2846     		mov	r0, r5
 6999 002e 03B0     		add	sp, sp, #12
 7000              	.LCFI239:
 7001              		.cfi_remember_state
 7002              		.cfi_def_cfa_offset 12
 7003              		@ sp needed
 7004 0030 30BD     		pop	{r4, r5, pc}
 7005              	.LVL728:
 7006              	.L513:
 7007              	.LCFI240:
 7008              		.cfi_restore_state
6270:Core/Src/bno055.c ****     }
 7009              		.loc 1 6270 18 view .LVU1863
 7010 0032 4FF0FF35 		mov	r5, #-1
 7011 0036 F9E7     		b	.L512
 7012              	.L516:
 7013              		.align	2
 7014              	.L515:
 7015 0038 00005940 		.word	1079574528
 7016              		.cfi_endproc
 7017              	.LFE111:
 7019              		.section	.text.bno055_convert_gravity_double_y_msq,"ax",%progbits
 7020              		.align	1
 7021              		.global	bno055_convert_gravity_double_y_msq
 7022              		.syntax unified
 7023              		.thumb
 7024              		.thumb_func
 7025              		.fpu fpv4-sp-d16
 7027              	bno055_convert_gravity_double_y_msq:
 7028              	.LVL729:
 7029              	.LFB112:
6275:Core/Src/bno055.c **** 
6276:Core/Src/bno055.c **** /*!
6277:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
6278:Core/Src/bno055.c ****  *  y raw data to meterpersecseq output as double
6279:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 240


6280:Core/Src/bno055.c ****  *  @param gravity_y_d : The double value of gravity y meterpersecseq
6281:Core/Src/bno055.c ****  *
6282:Core/Src/bno055.c ****  *  @return results of bus communication function
6283:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6284:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6285:Core/Src/bno055.c ****  *
6286:Core/Src/bno055.c ****  *
6287:Core/Src/bno055.c ****  */
6288:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_double_y_msq(double *gravity_y_d)
6289:Core/Src/bno055.c **** {
 7030              		.loc 1 6289 1 is_stmt 1 view -0
 7031              		.cfi_startproc
 7032              		@ args = 0, pretend = 0, frame = 8
 7033              		@ frame_needed = 0, uses_anonymous_args = 0
 7034              		.loc 1 6289 1 is_stmt 0 view .LVU1865
 7035 0000 30B5     		push	{r4, r5, lr}
 7036              	.LCFI241:
 7037              		.cfi_def_cfa_offset 12
 7038              		.cfi_offset 4, -12
 7039              		.cfi_offset 5, -8
 7040              		.cfi_offset 14, -4
 7041 0002 83B0     		sub	sp, sp, #12
 7042              	.LCFI242:
 7043              		.cfi_def_cfa_offset 24
 7044 0004 0546     		mov	r5, r0
6290:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7045              		.loc 1 6290 5 is_stmt 1 view .LVU1866
 7046              	.LVL730:
6291:Core/Src/bno055.c ****     s16 reg_gravity_y_s16 = BNO055_INIT_VALUE;
 7047              		.loc 1 6291 5 view .LVU1867
 7048              		.loc 1 6291 9 is_stmt 0 view .LVU1868
 7049 0006 0023     		movs	r3, #0
 7050 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6292:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 7051              		.loc 1 6292 5 is_stmt 1 view .LVU1869
 7052              	.LVL731:
6293:Core/Src/bno055.c **** 
6294:Core/Src/bno055.c ****     /* Read raw gravity of y */
6295:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_y(&reg_gravity_y_s16);
 7053              		.loc 1 6295 5 view .LVU1870
 7054              		.loc 1 6295 16 is_stmt 0 view .LVU1871
 7055 000c 0DF10600 		add	r0, sp, #6
 7056              	.LVL732:
 7057              		.loc 1 6295 16 view .LVU1872
 7058 0010 FFF7FEFF 		bl	bno055_read_gravity_y
 7059              	.LVL733:
6296:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 7060              		.loc 1 6296 5 is_stmt 1 view .LVU1873
 7061              		.loc 1 6296 8 is_stmt 0 view .LVU1874
 7062 0014 0446     		mov	r4, r0
 7063 0016 60B9     		cbnz	r0, .L518
6297:Core/Src/bno055.c ****     {
6298:Core/Src/bno055.c ****         /* convert raw gravity of y to m/s2 */
6299:Core/Src/bno055.c ****         data_d = (double)(reg_gravity_y_s16 / BNO055_GRAVITY_DIV_MSQ);
 7064              		.loc 1 6299 9 is_stmt 1 view .LVU1875
 7065              		.loc 1 6299 18 is_stmt 0 view .LVU1876
 7066 0018 BDF90600 		ldrsh	r0, [sp, #6]
ARM GAS  /tmp/ccWoU29M.s 			page 241


 7067              	.LVL734:
 7068              		.loc 1 6299 18 view .LVU1877
 7069 001c FFF7FEFF 		bl	__aeabi_i2d
 7070              	.LVL735:
 7071              		.loc 1 6299 16 view .LVU1878
 7072 0020 0022     		movs	r2, #0
 7073 0022 054B     		ldr	r3, .L521
 7074 0024 FFF7FEFF 		bl	__aeabi_ddiv
 7075              	.LVL736:
6300:Core/Src/bno055.c ****         *gravity_y_d = data_d;
 7076              		.loc 1 6300 9 is_stmt 1 view .LVU1879
 7077              		.loc 1 6300 22 is_stmt 0 view .LVU1880
 7078 0028 C5E90001 		strd	r0, [r5]
 7079              	.LVL737:
 7080              	.L519:
6301:Core/Src/bno055.c ****     }
6302:Core/Src/bno055.c ****     else
6303:Core/Src/bno055.c ****     {
6304:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6305:Core/Src/bno055.c ****     }
6306:Core/Src/bno055.c **** 
6307:Core/Src/bno055.c ****     return com_rslt;
 7081              		.loc 1 6307 5 is_stmt 1 view .LVU1881
6308:Core/Src/bno055.c **** }
 7082              		.loc 1 6308 1 is_stmt 0 view .LVU1882
 7083 002c 2046     		mov	r0, r4
 7084 002e 03B0     		add	sp, sp, #12
 7085              	.LCFI243:
 7086              		.cfi_remember_state
 7087              		.cfi_def_cfa_offset 12
 7088              		@ sp needed
 7089 0030 30BD     		pop	{r4, r5, pc}
 7090              	.LVL738:
 7091              	.L518:
 7092              	.LCFI244:
 7093              		.cfi_restore_state
6304:Core/Src/bno055.c ****     }
 7094              		.loc 1 6304 9 is_stmt 1 view .LVU1883
6304:Core/Src/bno055.c ****     }
 7095              		.loc 1 6304 18 is_stmt 0 view .LVU1884
 7096 0032 441E     		subs	r4, r0, #1
 7097 0034 64B2     		sxtb	r4, r4
 7098              	.LVL739:
6304:Core/Src/bno055.c ****     }
 7099              		.loc 1 6304 18 view .LVU1885
 7100 0036 F9E7     		b	.L519
 7101              	.L522:
 7102              		.align	2
 7103              	.L521:
 7104 0038 00005940 		.word	1079574528
 7105              		.cfi_endproc
 7106              	.LFE112:
 7108              		.section	.text.bno055_convert_gravity_double_z_msq,"ax",%progbits
 7109              		.align	1
 7110              		.global	bno055_convert_gravity_double_z_msq
 7111              		.syntax unified
 7112              		.thumb
ARM GAS  /tmp/ccWoU29M.s 			page 242


 7113              		.thumb_func
 7114              		.fpu fpv4-sp-d16
 7116              	bno055_convert_gravity_double_z_msq:
 7117              	.LVL740:
 7118              	.LFB113:
6309:Core/Src/bno055.c **** 
6310:Core/Src/bno055.c **** /*!
6311:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
6312:Core/Src/bno055.c ****  *  z raw data to meterpersecseq output as double
6313:Core/Src/bno055.c ****  *
6314:Core/Src/bno055.c ****  *  @param gravity_z_d : The double value of gravity z meterpersecseq
6315:Core/Src/bno055.c ****  *
6316:Core/Src/bno055.c ****  *  @return results of bus communication function
6317:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6318:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6319:Core/Src/bno055.c ****  *
6320:Core/Src/bno055.c ****  *
6321:Core/Src/bno055.c ****  */
6322:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_double_z_msq(double *gravity_z_d)
6323:Core/Src/bno055.c **** {
 7119              		.loc 1 6323 1 is_stmt 1 view -0
 7120              		.cfi_startproc
 7121              		@ args = 0, pretend = 0, frame = 8
 7122              		@ frame_needed = 0, uses_anonymous_args = 0
 7123              		.loc 1 6323 1 is_stmt 0 view .LVU1887
 7124 0000 30B5     		push	{r4, r5, lr}
 7125              	.LCFI245:
 7126              		.cfi_def_cfa_offset 12
 7127              		.cfi_offset 4, -12
 7128              		.cfi_offset 5, -8
 7129              		.cfi_offset 14, -4
 7130 0002 83B0     		sub	sp, sp, #12
 7131              	.LCFI246:
 7132              		.cfi_def_cfa_offset 24
 7133 0004 0546     		mov	r5, r0
6324:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7134              		.loc 1 6324 5 is_stmt 1 view .LVU1888
 7135              	.LVL741:
6325:Core/Src/bno055.c ****     s16 reg_gravity_z_s16 = BNO055_INIT_VALUE;
 7136              		.loc 1 6325 5 view .LVU1889
 7137              		.loc 1 6325 9 is_stmt 0 view .LVU1890
 7138 0006 0023     		movs	r3, #0
 7139 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6326:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 7140              		.loc 1 6326 5 is_stmt 1 view .LVU1891
 7141              	.LVL742:
6327:Core/Src/bno055.c **** 
6328:Core/Src/bno055.c ****     /* Read raw gravity of z */
6329:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_z(&reg_gravity_z_s16);
 7142              		.loc 1 6329 5 view .LVU1892
 7143              		.loc 1 6329 16 is_stmt 0 view .LVU1893
 7144 000c 0DF10600 		add	r0, sp, #6
 7145              	.LVL743:
 7146              		.loc 1 6329 16 view .LVU1894
 7147 0010 FFF7FEFF 		bl	bno055_read_gravity_z
 7148              	.LVL744:
6330:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/ccWoU29M.s 			page 243


 7149              		.loc 1 6330 5 is_stmt 1 view .LVU1895
 7150              		.loc 1 6330 8 is_stmt 0 view .LVU1896
 7151 0014 0446     		mov	r4, r0
 7152 0016 60B9     		cbnz	r0, .L524
6331:Core/Src/bno055.c ****     {
6332:Core/Src/bno055.c ****         /* Convert raw gravity of z to m/s2 */
6333:Core/Src/bno055.c ****         data_d = (double)(reg_gravity_z_s16 / BNO055_GRAVITY_DIV_MSQ);
 7153              		.loc 1 6333 9 is_stmt 1 view .LVU1897
 7154              		.loc 1 6333 18 is_stmt 0 view .LVU1898
 7155 0018 BDF90600 		ldrsh	r0, [sp, #6]
 7156              	.LVL745:
 7157              		.loc 1 6333 18 view .LVU1899
 7158 001c FFF7FEFF 		bl	__aeabi_i2d
 7159              	.LVL746:
 7160              		.loc 1 6333 16 view .LVU1900
 7161 0020 0022     		movs	r2, #0
 7162 0022 054B     		ldr	r3, .L527
 7163 0024 FFF7FEFF 		bl	__aeabi_ddiv
 7164              	.LVL747:
6334:Core/Src/bno055.c ****         *gravity_z_d = data_d;
 7165              		.loc 1 6334 9 is_stmt 1 view .LVU1901
 7166              		.loc 1 6334 22 is_stmt 0 view .LVU1902
 7167 0028 C5E90001 		strd	r0, [r5]
 7168              	.LVL748:
 7169              	.L525:
6335:Core/Src/bno055.c ****     }
6336:Core/Src/bno055.c ****     else
6337:Core/Src/bno055.c ****     {
6338:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6339:Core/Src/bno055.c ****     }
6340:Core/Src/bno055.c **** 
6341:Core/Src/bno055.c ****     return com_rslt;
 7170              		.loc 1 6341 5 is_stmt 1 view .LVU1903
6342:Core/Src/bno055.c **** }
 7171              		.loc 1 6342 1 is_stmt 0 view .LVU1904
 7172 002c 2046     		mov	r0, r4
 7173 002e 03B0     		add	sp, sp, #12
 7174              	.LCFI247:
 7175              		.cfi_remember_state
 7176              		.cfi_def_cfa_offset 12
 7177              		@ sp needed
 7178 0030 30BD     		pop	{r4, r5, pc}
 7179              	.LVL749:
 7180              	.L524:
 7181              	.LCFI248:
 7182              		.cfi_restore_state
6338:Core/Src/bno055.c ****     }
 7183              		.loc 1 6338 9 is_stmt 1 view .LVU1905
6338:Core/Src/bno055.c ****     }
 7184              		.loc 1 6338 18 is_stmt 0 view .LVU1906
 7185 0032 441E     		subs	r4, r0, #1
 7186 0034 64B2     		sxtb	r4, r4
 7187              	.LVL750:
6338:Core/Src/bno055.c ****     }
 7188              		.loc 1 6338 18 view .LVU1907
 7189 0036 F9E7     		b	.L525
 7190              	.L528:
ARM GAS  /tmp/ccWoU29M.s 			page 244


 7191              		.align	2
 7192              	.L527:
 7193 0038 00005940 		.word	1079574528
 7194              		.cfi_endproc
 7195              	.LFE113:
 7197              		.section	.text.bno055_convert_double_gravity_xyz_msq,"ax",%progbits
 7198              		.align	1
 7199              		.global	bno055_convert_double_gravity_xyz_msq
 7200              		.syntax unified
 7201              		.thumb
 7202              		.thumb_func
 7203              		.fpu fpv4-sp-d16
 7205              	bno055_convert_double_gravity_xyz_msq:
 7206              	.LVL751:
 7207              	.LFB114:
6343:Core/Src/bno055.c **** 
6344:Core/Src/bno055.c **** /*!
6345:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity xyz raw data
6346:Core/Src/bno055.c ****  *  to meterpersecseq output as double
6347:Core/Src/bno055.c ****  *
6348:Core/Src/bno055.c ****  *  @param gravity_xyz : The meterpersecseq data of gravity xyz
6349:Core/Src/bno055.c ****  *
6350:Core/Src/bno055.c ****  *  Parameter |    result
6351:Core/Src/bno055.c ****  *  --------- | -----------------
6352:Core/Src/bno055.c ****  *   x        | meterpersecseq data of gravity
6353:Core/Src/bno055.c ****  *   y        | meterpersecseq data of gravity
6354:Core/Src/bno055.c ****  *   z        | meterpersecseq data of gravity
6355:Core/Src/bno055.c ****  *
6356:Core/Src/bno055.c ****  *
6357:Core/Src/bno055.c ****  *  @return results of bus communication function
6358:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6359:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6360:Core/Src/bno055.c ****  *
6361:Core/Src/bno055.c ****  */
6362:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gravity_xyz_msq(struct bno055_gravity_double_t *g
6363:Core/Src/bno055.c **** {
 7208              		.loc 1 6363 1 is_stmt 1 view -0
 7209              		.cfi_startproc
 7210              		@ args = 0, pretend = 0, frame = 8
 7211              		@ frame_needed = 0, uses_anonymous_args = 0
 7212              		.loc 1 6363 1 is_stmt 0 view .LVU1909
 7213 0000 30B5     		push	{r4, r5, lr}
 7214              	.LCFI249:
 7215              		.cfi_def_cfa_offset 12
 7216              		.cfi_offset 4, -12
 7217              		.cfi_offset 5, -8
 7218              		.cfi_offset 14, -4
 7219 0002 83B0     		sub	sp, sp, #12
 7220              	.LCFI250:
 7221              		.cfi_def_cfa_offset 24
 7222 0004 0446     		mov	r4, r0
6364:Core/Src/bno055.c ****     /* Variable used to return value of
6365:Core/Src/bno055.c ****      * communication routine*/
6366:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7223              		.loc 1 6366 5 is_stmt 1 view .LVU1910
 7224              	.LVL752:
6367:Core/Src/bno055.c ****     struct bno055_gravity_t reg_gravity_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_V
ARM GAS  /tmp/ccWoU29M.s 			page 245


 7225              		.loc 1 6367 5 view .LVU1911
 7226              		.loc 1 6367 29 is_stmt 0 view .LVU1912
 7227 0006 0023     		movs	r3, #0
 7228 0008 ADF80030 		strh	r3, [sp]	@ movhi
 7229 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 7230 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
6368:Core/Src/bno055.c **** 
6369:Core/Src/bno055.c ****     /* Read raw gravity of xyz */
6370:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_xyz(&reg_gravity_xyz);
 7231              		.loc 1 6370 5 is_stmt 1 view .LVU1913
 7232              		.loc 1 6370 16 is_stmt 0 view .LVU1914
 7233 0014 6846     		mov	r0, sp
 7234              	.LVL753:
 7235              		.loc 1 6370 16 view .LVU1915
 7236 0016 FFF7FEFF 		bl	bno055_read_gravity_xyz
 7237              	.LVL754:
6371:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 7238              		.loc 1 6371 5 is_stmt 1 view .LVU1916
 7239              		.loc 1 6371 8 is_stmt 0 view .LVU1917
 7240 001a 0546     		mov	r5, r0
 7241 001c 00BB     		cbnz	r0, .L530
6372:Core/Src/bno055.c ****     {
6373:Core/Src/bno055.c ****         /* Convert raw gravity of xyz to m/s2 */
6374:Core/Src/bno055.c ****         gravity_xyz->x = (double)(reg_gravity_xyz.x / BNO055_GRAVITY_DIV_MSQ);
 7242              		.loc 1 6374 9 is_stmt 1 view .LVU1918
 7243              		.loc 1 6374 26 is_stmt 0 view .LVU1919
 7244 001e BDF90000 		ldrsh	r0, [sp]
 7245              	.LVL755:
 7246              		.loc 1 6374 26 view .LVU1920
 7247 0022 FFF7FEFF 		bl	__aeabi_i2d
 7248              	.LVL756:
 7249 0026 0022     		movs	r2, #0
 7250 0028 0F4B     		ldr	r3, .L533
 7251 002a FFF7FEFF 		bl	__aeabi_ddiv
 7252              	.LVL757:
 7253              		.loc 1 6374 24 view .LVU1921
 7254 002e C4E90001 		strd	r0, [r4]
6375:Core/Src/bno055.c ****         gravity_xyz->y = (double)(reg_gravity_xyz.y / BNO055_GRAVITY_DIV_MSQ);
 7255              		.loc 1 6375 9 is_stmt 1 view .LVU1922
 7256              		.loc 1 6375 26 is_stmt 0 view .LVU1923
 7257 0032 BDF90200 		ldrsh	r0, [sp, #2]
 7258 0036 FFF7FEFF 		bl	__aeabi_i2d
 7259              	.LVL758:
 7260 003a 0022     		movs	r2, #0
 7261 003c 0A4B     		ldr	r3, .L533
 7262 003e FFF7FEFF 		bl	__aeabi_ddiv
 7263              	.LVL759:
 7264              		.loc 1 6375 24 view .LVU1924
 7265 0042 C4E90201 		strd	r0, [r4, #8]
6376:Core/Src/bno055.c ****         gravity_xyz->z = (double)(reg_gravity_xyz.z / BNO055_GRAVITY_DIV_MSQ);
 7266              		.loc 1 6376 9 is_stmt 1 view .LVU1925
 7267              		.loc 1 6376 26 is_stmt 0 view .LVU1926
 7268 0046 BDF90400 		ldrsh	r0, [sp, #4]
 7269 004a FFF7FEFF 		bl	__aeabi_i2d
 7270              	.LVL760:
 7271 004e 0022     		movs	r2, #0
 7272 0050 054B     		ldr	r3, .L533
ARM GAS  /tmp/ccWoU29M.s 			page 246


 7273 0052 FFF7FEFF 		bl	__aeabi_ddiv
 7274              	.LVL761:
 7275              		.loc 1 6376 24 view .LVU1927
 7276 0056 C4E90401 		strd	r0, [r4, #16]
 7277              	.L531:
 7278              	.LVL762:
6377:Core/Src/bno055.c ****     }
6378:Core/Src/bno055.c ****     else
6379:Core/Src/bno055.c ****     {
6380:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6381:Core/Src/bno055.c ****     }
6382:Core/Src/bno055.c **** 
6383:Core/Src/bno055.c ****     return com_rslt;
 7279              		.loc 1 6383 5 is_stmt 1 view .LVU1928
6384:Core/Src/bno055.c **** }
 7280              		.loc 1 6384 1 is_stmt 0 view .LVU1929
 7281 005a 2846     		mov	r0, r5
 7282 005c 03B0     		add	sp, sp, #12
 7283              	.LCFI251:
 7284              		.cfi_remember_state
 7285              		.cfi_def_cfa_offset 12
 7286              		@ sp needed
 7287 005e 30BD     		pop	{r4, r5, pc}
 7288              	.LVL763:
 7289              	.L530:
 7290              	.LCFI252:
 7291              		.cfi_restore_state
6380:Core/Src/bno055.c ****     }
 7292              		.loc 1 6380 9 is_stmt 1 view .LVU1930
6380:Core/Src/bno055.c ****     }
 7293              		.loc 1 6380 18 is_stmt 0 view .LVU1931
 7294 0060 451E     		subs	r5, r0, #1
 7295 0062 6DB2     		sxtb	r5, r5
 7296              	.LVL764:
6380:Core/Src/bno055.c ****     }
 7297              		.loc 1 6380 18 view .LVU1932
 7298 0064 F9E7     		b	.L531
 7299              	.L534:
 7300 0066 00BF     		.align	2
 7301              	.L533:
 7302 0068 00005940 		.word	1079574528
 7303              		.cfi_endproc
 7304              	.LFE114:
 7306              		.section	.text.bno055_get_mag_calib_stat,"ax",%progbits
 7307              		.align	1
 7308              		.global	bno055_get_mag_calib_stat
 7309              		.syntax unified
 7310              		.thumb
 7311              		.thumb_func
 7312              		.fpu fpv4-sp-d16
 7314              	bno055_get_mag_calib_stat:
 7315              	.LVL765:
 7316              	.LFB117:
6385:Core/Src/bno055.c **** 
6386:Core/Src/bno055.c **** /*!
6387:Core/Src/bno055.c ****  *  @brief This API is used to convert the temperature
6388:Core/Src/bno055.c ****  *  data to Fahrenheit output as double
ARM GAS  /tmp/ccWoU29M.s 			page 247


6389:Core/Src/bno055.c ****  *
6390:Core/Src/bno055.c ****  *  @param temp_d : The double value of temperature Fahrenheit
6391:Core/Src/bno055.c ****  *
6392:Core/Src/bno055.c ****  *  @return results of bus communication function
6393:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6394:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6395:Core/Src/bno055.c ****  *
6396:Core/Src/bno055.c ****  *
6397:Core/Src/bno055.c ****  */
6398:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_temp_fahrenheit(double *temp_d)
6399:Core/Src/bno055.c **** {
6400:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
6401:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
6402:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
6403:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
6404:Core/Src/bno055.c **** 
6405:Core/Src/bno055.c ****     /* Read the current temperature unit and set the
6406:Core/Src/bno055.c ****      * unit as Fahrenheit if the unit is in Celsius */
6407:Core/Src/bno055.c ****     com_rslt = bno055_get_temp_unit(&temp_unit_u8);
6408:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
6409:Core/Src/bno055.c ****     {
6410:Core/Src/bno055.c ****         com_rslt += bno055_set_temp_unit(BNO055_TEMP_UNIT_FAHRENHEIT);
6411:Core/Src/bno055.c ****     }
6412:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
6413:Core/Src/bno055.c ****     {
6414:Core/Src/bno055.c ****         /* Read the raw temperature data */
6415:Core/Src/bno055.c ****         com_rslt += bno055_read_temp_data(&reg_temp_s8);
6416:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
6417:Core/Src/bno055.c ****         {
6418:Core/Src/bno055.c ****             /* Convert raw temperature data to Fahrenheit*/
6419:Core/Src/bno055.c ****             data_d = (double)(reg_temp_s8 / BNO055_TEMP_DIV_FAHRENHEIT);
6420:Core/Src/bno055.c ****             *temp_d = data_d;
6421:Core/Src/bno055.c ****         }
6422:Core/Src/bno055.c ****         else
6423:Core/Src/bno055.c ****         {
6424:Core/Src/bno055.c ****             com_rslt += BNO055_ERROR;
6425:Core/Src/bno055.c ****         }
6426:Core/Src/bno055.c ****     }
6427:Core/Src/bno055.c ****     else
6428:Core/Src/bno055.c ****     {
6429:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6430:Core/Src/bno055.c ****     }
6431:Core/Src/bno055.c **** 
6432:Core/Src/bno055.c ****     return com_rslt;
6433:Core/Src/bno055.c **** }
6434:Core/Src/bno055.c **** 
6435:Core/Src/bno055.c **** /*!
6436:Core/Src/bno055.c ****  *  @brief This API is used to convert the temperature
6437:Core/Src/bno055.c ****  *  data to Celsius output as double
6438:Core/Src/bno055.c ****  *
6439:Core/Src/bno055.c ****  *  @param temp_d : The double value of temperature Celsius
6440:Core/Src/bno055.c ****  *
6441:Core/Src/bno055.c ****  *  @return results of bus communication function
6442:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6443:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6444:Core/Src/bno055.c ****  *
6445:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 248


6446:Core/Src/bno055.c ****  */
6447:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_temp_celsius(double *temp_d)
6448:Core/Src/bno055.c **** {
6449:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
6450:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
6451:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
6452:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
6453:Core/Src/bno055.c **** 
6454:Core/Src/bno055.c ****     /* Read the current temperature unit and set the
6455:Core/Src/bno055.c ****      * unit as Fahrenheit if the unit is in Celsius */
6456:Core/Src/bno055.c ****     com_rslt = bno055_get_temp_unit(&temp_unit_u8);
6457:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
6458:Core/Src/bno055.c ****     {
6459:Core/Src/bno055.c ****         com_rslt += bno055_set_temp_unit(BNO055_TEMP_UNIT_CELSIUS);
6460:Core/Src/bno055.c ****     }
6461:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
6462:Core/Src/bno055.c ****     {
6463:Core/Src/bno055.c ****         /* Read the raw temperature data */
6464:Core/Src/bno055.c ****         com_rslt += bno055_read_temp_data(&reg_temp_s8);
6465:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
6466:Core/Src/bno055.c ****         {
6467:Core/Src/bno055.c ****             /* Convert raw temperature data to Fahrenheit*/
6468:Core/Src/bno055.c ****             data_d = (double)(reg_temp_s8 / BNO055_TEMP_DIV_CELSIUS);
6469:Core/Src/bno055.c ****             *temp_d = data_d;
6470:Core/Src/bno055.c ****         }
6471:Core/Src/bno055.c ****         else
6472:Core/Src/bno055.c ****         {
6473:Core/Src/bno055.c ****             com_rslt += BNO055_ERROR;
6474:Core/Src/bno055.c ****         }
6475:Core/Src/bno055.c ****     }
6476:Core/Src/bno055.c ****     else
6477:Core/Src/bno055.c ****     {
6478:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6479:Core/Src/bno055.c ****     }
6480:Core/Src/bno055.c **** 
6481:Core/Src/bno055.c ****     return com_rslt;
6482:Core/Src/bno055.c **** }
6483:Core/Src/bno055.c **** #endif
6484:Core/Src/bno055.c **** 
6485:Core/Src/bno055.c **** /*!
6486:Core/Src/bno055.c ****  *  @brief This API used to read
6487:Core/Src/bno055.c ****  *  mag calibration status from register from 0x35 bit 0 and 1
6488:Core/Src/bno055.c ****  *
6489:Core/Src/bno055.c ****  *  @param mag_calib_u8 : The value of mag calib status
6490:Core/Src/bno055.c ****  *
6491:Core/Src/bno055.c ****  *
6492:Core/Src/bno055.c ****  *  @return results of bus communication function
6493:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6494:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6495:Core/Src/bno055.c ****  *
6496:Core/Src/bno055.c ****  */
6497:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_calib_stat(u8 *mag_calib_u8)
6498:Core/Src/bno055.c **** {
 7317              		.loc 1 6498 1 is_stmt 1 view -0
 7318              		.cfi_startproc
 7319              		@ args = 0, pretend = 0, frame = 8
 7320              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccWoU29M.s 			page 249


 7321              		.loc 1 6498 1 is_stmt 0 view .LVU1934
 7322 0000 30B5     		push	{r4, r5, lr}
 7323              	.LCFI253:
 7324              		.cfi_def_cfa_offset 12
 7325              		.cfi_offset 4, -12
 7326              		.cfi_offset 5, -8
 7327              		.cfi_offset 14, -4
 7328 0002 83B0     		sub	sp, sp, #12
 7329              	.LCFI254:
 7330              		.cfi_def_cfa_offset 24
6499:Core/Src/bno055.c ****     /* Variable used to return value of
6500:Core/Src/bno055.c ****      * communication routine*/
6501:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7331              		.loc 1 6501 5 is_stmt 1 view .LVU1935
 7332              	.LVL766:
6502:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7333              		.loc 1 6502 5 view .LVU1936
 7334              		.loc 1 6502 8 is_stmt 0 view .LVU1937
 7335 0004 0023     		movs	r3, #0
 7336 0006 8DF80730 		strb	r3, [sp, #7]
6503:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7337              		.loc 1 6503 5 is_stmt 1 view .LVU1938
 7338              	.LVL767:
6504:Core/Src/bno055.c **** 
6505:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6506:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7339              		.loc 1 6506 5 view .LVU1939
 7340              		.loc 1 6506 18 is_stmt 0 view .LVU1940
 7341 000a 134B     		ldr	r3, .L543
 7342 000c 1B68     		ldr	r3, [r3]
 7343              		.loc 1 6506 8 view .LVU1941
 7344 000e E3B1     		cbz	r3, .L539
 7345 0010 0446     		mov	r4, r0
6507:Core/Src/bno055.c ****     {
6508:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6509:Core/Src/bno055.c ****     }
6510:Core/Src/bno055.c ****     else
6511:Core/Src/bno055.c ****     {
6512:Core/Src/bno055.c ****         /*condition check for page, mag calib
6513:Core/Src/bno055.c ****          * available in the page zero*/
6514:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7346              		.loc 1 6514 9 is_stmt 1 view .LVU1942
 7347              		.loc 1 6514 21 is_stmt 0 view .LVU1943
 7348 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7349              		.loc 1 6514 12 view .LVU1944
 7350 0014 9BB9     		cbnz	r3, .L542
 7351              	.LVL768:
 7352              	.L537:
6515:Core/Src/bno055.c ****         {
6516:Core/Src/bno055.c ****             /* Write the page zero*/
6517:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6518:Core/Src/bno055.c ****         }
6519:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7353              		.loc 1 6519 53 discriminator 1 view .LVU1945
 7354 0016 104B     		ldr	r3, .L543
 7355 0018 1B68     		ldr	r3, [r3]
 7356 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 250


 7357              		.loc 1 6519 41 discriminator 1 view .LVU1946
 7358 001c C3B9     		cbnz	r3, .L540
 7359              	.L538:
6520:Core/Src/bno055.c ****         {
6521:Core/Src/bno055.c ****             /* Read the mag calib stat_s8 */
6522:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7360              		.loc 1 6522 13 is_stmt 1 view .LVU1947
 7361              		.loc 1 6522 32 is_stmt 0 view .LVU1948
 7362 001e 0E4B     		ldr	r3, .L543
 7363 0020 1868     		ldr	r0, [r3]
 7364 0022 0569     		ldr	r5, [r0, #16]
 7365              		.loc 1 6522 24 view .LVU1949
 7366 0024 0123     		movs	r3, #1
 7367 0026 0DF10702 		add	r2, sp, #7
 7368 002a 3521     		movs	r1, #53
 7369 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7370 002e A847     		blx	r5
 7371              	.LVL769:
6523:Core/Src/bno055.c ****                                                       BNO055_MAG_CALIB_STAT_REG,
6524:Core/Src/bno055.c ****                                                       &data_u8r,
6525:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6526:Core/Src/bno055.c ****             *mag_calib_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_CALIB_STAT);
 7372              		.loc 1 6526 13 is_stmt 1 view .LVU1950
 7373              		.loc 1 6526 29 is_stmt 0 view .LVU1951
 7374 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7375 0034 03F00303 		and	r3, r3, #3
 7376              		.loc 1 6526 27 view .LVU1952
 7377 0038 2370     		strb	r3, [r4]
 7378              	.LVL770:
 7379              	.L536:
6527:Core/Src/bno055.c ****         }
6528:Core/Src/bno055.c ****         else
6529:Core/Src/bno055.c ****         {
6530:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6531:Core/Src/bno055.c ****         }
6532:Core/Src/bno055.c ****     }
6533:Core/Src/bno055.c **** 
6534:Core/Src/bno055.c ****     return com_rslt;
6535:Core/Src/bno055.c **** }
 7380              		.loc 1 6535 1 view .LVU1953
 7381 003a 03B0     		add	sp, sp, #12
 7382              	.LCFI255:
 7383              		.cfi_remember_state
 7384              		.cfi_def_cfa_offset 12
 7385              		@ sp needed
 7386 003c 30BD     		pop	{r4, r5, pc}
 7387              	.LVL771:
 7388              	.L542:
 7389              	.LCFI256:
 7390              		.cfi_restore_state
6517:Core/Src/bno055.c ****         }
 7391              		.loc 1 6517 13 is_stmt 1 view .LVU1954
6517:Core/Src/bno055.c ****         }
 7392              		.loc 1 6517 23 is_stmt 0 view .LVU1955
 7393 003e 0020     		movs	r0, #0
 7394              	.LVL772:
6517:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 251


 7395              		.loc 1 6517 23 view .LVU1956
 7396 0040 FFF7FEFF 		bl	bno055_write_page_id
 7397              	.LVL773:
6519:Core/Src/bno055.c ****         {
 7398              		.loc 1 6519 9 is_stmt 1 view .LVU1957
6519:Core/Src/bno055.c ****         {
 7399              		.loc 1 6519 12 is_stmt 0 view .LVU1958
 7400 0044 0028     		cmp	r0, #0
 7401 0046 EAD0     		beq	.L538
 7402 0048 E5E7     		b	.L537
 7403              	.LVL774:
 7404              	.L539:
6508:Core/Src/bno055.c ****     }
 7405              		.loc 1 6508 16 view .LVU1959
 7406 004a 6FF07E00 		mvn	r0, #126
 7407              	.LVL775:
6508:Core/Src/bno055.c ****     }
 7408              		.loc 1 6508 16 view .LVU1960
 7409 004e F4E7     		b	.L536
 7410              	.LVL776:
 7411              	.L540:
6530:Core/Src/bno055.c ****         }
 7412              		.loc 1 6530 22 view .LVU1961
 7413 0050 4FF0FF30 		mov	r0, #-1
 7414 0054 F1E7     		b	.L536
 7415              	.L544:
 7416 0056 00BF     		.align	2
 7417              	.L543:
 7418 0058 00000000 		.word	.LANCHOR0
 7419              		.cfi_endproc
 7420              	.LFE117:
 7422              		.section	.text.bno055_get_accel_calib_stat,"ax",%progbits
 7423              		.align	1
 7424              		.global	bno055_get_accel_calib_stat
 7425              		.syntax unified
 7426              		.thumb
 7427              		.thumb_func
 7428              		.fpu fpv4-sp-d16
 7430              	bno055_get_accel_calib_stat:
 7431              	.LVL777:
 7432              	.LFB118:
6536:Core/Src/bno055.c **** 
6537:Core/Src/bno055.c **** /*!
6538:Core/Src/bno055.c ****  *  @brief This API used to read
6539:Core/Src/bno055.c ****  *  accel calibration status from register from 0x35 bit 2 and 3
6540:Core/Src/bno055.c ****  *
6541:Core/Src/bno055.c ****  *  @param accel_calib_u8 : The value of accel calib status
6542:Core/Src/bno055.c ****  *
6543:Core/Src/bno055.c ****  *
6544:Core/Src/bno055.c ****  *  @return results of bus communication function
6545:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6546:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6547:Core/Src/bno055.c ****  *
6548:Core/Src/bno055.c ****  */
6549:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_calib_stat(u8 *accel_calib_u8)
6550:Core/Src/bno055.c **** {
 7433              		.loc 1 6550 1 is_stmt 1 view -0
ARM GAS  /tmp/ccWoU29M.s 			page 252


 7434              		.cfi_startproc
 7435              		@ args = 0, pretend = 0, frame = 8
 7436              		@ frame_needed = 0, uses_anonymous_args = 0
 7437              		.loc 1 6550 1 is_stmt 0 view .LVU1963
 7438 0000 30B5     		push	{r4, r5, lr}
 7439              	.LCFI257:
 7440              		.cfi_def_cfa_offset 12
 7441              		.cfi_offset 4, -12
 7442              		.cfi_offset 5, -8
 7443              		.cfi_offset 14, -4
 7444 0002 83B0     		sub	sp, sp, #12
 7445              	.LCFI258:
 7446              		.cfi_def_cfa_offset 24
6551:Core/Src/bno055.c ****     /* Variable used to return value of
6552:Core/Src/bno055.c ****      * communication routine*/
6553:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7447              		.loc 1 6553 5 is_stmt 1 view .LVU1964
 7448              	.LVL778:
6554:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7449              		.loc 1 6554 5 view .LVU1965
 7450              		.loc 1 6554 8 is_stmt 0 view .LVU1966
 7451 0004 0023     		movs	r3, #0
 7452 0006 8DF80730 		strb	r3, [sp, #7]
6555:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7453              		.loc 1 6555 5 is_stmt 1 view .LVU1967
 7454              	.LVL779:
6556:Core/Src/bno055.c **** 
6557:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty*/
6558:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7455              		.loc 1 6558 5 view .LVU1968
 7456              		.loc 1 6558 18 is_stmt 0 view .LVU1969
 7457 000a 134B     		ldr	r3, .L553
 7458 000c 1B68     		ldr	r3, [r3]
 7459              		.loc 1 6558 8 view .LVU1970
 7460 000e E3B1     		cbz	r3, .L549
 7461 0010 0446     		mov	r4, r0
6559:Core/Src/bno055.c ****     {
6560:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6561:Core/Src/bno055.c ****     }
6562:Core/Src/bno055.c ****     else
6563:Core/Src/bno055.c ****     {
6564:Core/Src/bno055.c ****         /*condition check for page, accel calib
6565:Core/Src/bno055.c ****          * available in the page zero*/
6566:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7462              		.loc 1 6566 9 is_stmt 1 view .LVU1971
 7463              		.loc 1 6566 21 is_stmt 0 view .LVU1972
 7464 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7465              		.loc 1 6566 12 view .LVU1973
 7466 0014 9BB9     		cbnz	r3, .L552
 7467              	.LVL780:
 7468              	.L547:
6567:Core/Src/bno055.c ****         {
6568:Core/Src/bno055.c ****             /* Write the page zero*/
6569:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6570:Core/Src/bno055.c ****         }
6571:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7469              		.loc 1 6571 53 discriminator 1 view .LVU1974
ARM GAS  /tmp/ccWoU29M.s 			page 253


 7470 0016 104B     		ldr	r3, .L553
 7471 0018 1B68     		ldr	r3, [r3]
 7472 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7473              		.loc 1 6571 41 discriminator 1 view .LVU1975
 7474 001c C3B9     		cbnz	r3, .L550
 7475              	.L548:
6572:Core/Src/bno055.c ****         {
6573:Core/Src/bno055.c ****             /* Read the accel calib stat_s8 */
6574:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7476              		.loc 1 6574 13 is_stmt 1 view .LVU1976
 7477              		.loc 1 6574 32 is_stmt 0 view .LVU1977
 7478 001e 0E4B     		ldr	r3, .L553
 7479 0020 1868     		ldr	r0, [r3]
 7480 0022 0569     		ldr	r5, [r0, #16]
 7481              		.loc 1 6574 24 view .LVU1978
 7482 0024 0123     		movs	r3, #1
 7483 0026 0DF10702 		add	r2, sp, #7
 7484 002a 3521     		movs	r1, #53
 7485 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7486 002e A847     		blx	r5
 7487              	.LVL781:
6575:Core/Src/bno055.c ****                                                       BNO055_ACCEL_CALIB_STAT_REG,
6576:Core/Src/bno055.c ****                                                       &data_u8r,
6577:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6578:Core/Src/bno055.c ****             *accel_calib_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_CALIB_STAT);
 7488              		.loc 1 6578 13 is_stmt 1 view .LVU1979
 7489              		.loc 1 6578 31 is_stmt 0 view .LVU1980
 7490 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7491 0034 C3F38103 		ubfx	r3, r3, #2, #2
 7492              		.loc 1 6578 29 view .LVU1981
 7493 0038 2370     		strb	r3, [r4]
 7494              	.LVL782:
 7495              	.L546:
6579:Core/Src/bno055.c ****         }
6580:Core/Src/bno055.c ****         else
6581:Core/Src/bno055.c ****         {
6582:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6583:Core/Src/bno055.c ****         }
6584:Core/Src/bno055.c ****     }
6585:Core/Src/bno055.c **** 
6586:Core/Src/bno055.c ****     return com_rslt;
6587:Core/Src/bno055.c **** }
 7496              		.loc 1 6587 1 view .LVU1982
 7497 003a 03B0     		add	sp, sp, #12
 7498              	.LCFI259:
 7499              		.cfi_remember_state
 7500              		.cfi_def_cfa_offset 12
 7501              		@ sp needed
 7502 003c 30BD     		pop	{r4, r5, pc}
 7503              	.LVL783:
 7504              	.L552:
 7505              	.LCFI260:
 7506              		.cfi_restore_state
6569:Core/Src/bno055.c ****         }
 7507              		.loc 1 6569 13 is_stmt 1 view .LVU1983
6569:Core/Src/bno055.c ****         }
 7508              		.loc 1 6569 23 is_stmt 0 view .LVU1984
ARM GAS  /tmp/ccWoU29M.s 			page 254


 7509 003e 0020     		movs	r0, #0
 7510              	.LVL784:
6569:Core/Src/bno055.c ****         }
 7511              		.loc 1 6569 23 view .LVU1985
 7512 0040 FFF7FEFF 		bl	bno055_write_page_id
 7513              	.LVL785:
6571:Core/Src/bno055.c ****         {
 7514              		.loc 1 6571 9 is_stmt 1 view .LVU1986
6571:Core/Src/bno055.c ****         {
 7515              		.loc 1 6571 12 is_stmt 0 view .LVU1987
 7516 0044 0028     		cmp	r0, #0
 7517 0046 EAD0     		beq	.L548
 7518 0048 E5E7     		b	.L547
 7519              	.LVL786:
 7520              	.L549:
6560:Core/Src/bno055.c ****     }
 7521              		.loc 1 6560 16 view .LVU1988
 7522 004a 6FF07E00 		mvn	r0, #126
 7523              	.LVL787:
6560:Core/Src/bno055.c ****     }
 7524              		.loc 1 6560 16 view .LVU1989
 7525 004e F4E7     		b	.L546
 7526              	.LVL788:
 7527              	.L550:
6582:Core/Src/bno055.c ****         }
 7528              		.loc 1 6582 22 view .LVU1990
 7529 0050 4FF0FF30 		mov	r0, #-1
 7530 0054 F1E7     		b	.L546
 7531              	.L554:
 7532 0056 00BF     		.align	2
 7533              	.L553:
 7534 0058 00000000 		.word	.LANCHOR0
 7535              		.cfi_endproc
 7536              	.LFE118:
 7538              		.section	.text.bno055_get_gyro_calib_stat,"ax",%progbits
 7539              		.align	1
 7540              		.global	bno055_get_gyro_calib_stat
 7541              		.syntax unified
 7542              		.thumb
 7543              		.thumb_func
 7544              		.fpu fpv4-sp-d16
 7546              	bno055_get_gyro_calib_stat:
 7547              	.LVL789:
 7548              	.LFB119:
6588:Core/Src/bno055.c **** 
6589:Core/Src/bno055.c **** /*!
6590:Core/Src/bno055.c ****  *  @brief This API used to read
6591:Core/Src/bno055.c ****  *  gyro calibration status from register from 0x35 bit 4 and 5
6592:Core/Src/bno055.c ****  *
6593:Core/Src/bno055.c ****  *  @param gyro_calib_u8 : The value of gyro calib status
6594:Core/Src/bno055.c ****  *
6595:Core/Src/bno055.c ****  *
6596:Core/Src/bno055.c ****  *  @return results of bus communication function
6597:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6598:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6599:Core/Src/bno055.c ****  *
6600:Core/Src/bno055.c ****  */
ARM GAS  /tmp/ccWoU29M.s 			page 255


6601:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_calib_stat(u8 *gyro_calib_u8)
6602:Core/Src/bno055.c **** {
 7549              		.loc 1 6602 1 is_stmt 1 view -0
 7550              		.cfi_startproc
 7551              		@ args = 0, pretend = 0, frame = 8
 7552              		@ frame_needed = 0, uses_anonymous_args = 0
 7553              		.loc 1 6602 1 is_stmt 0 view .LVU1992
 7554 0000 30B5     		push	{r4, r5, lr}
 7555              	.LCFI261:
 7556              		.cfi_def_cfa_offset 12
 7557              		.cfi_offset 4, -12
 7558              		.cfi_offset 5, -8
 7559              		.cfi_offset 14, -4
 7560 0002 83B0     		sub	sp, sp, #12
 7561              	.LCFI262:
 7562              		.cfi_def_cfa_offset 24
6603:Core/Src/bno055.c ****     /* Variable used to return value of
6604:Core/Src/bno055.c ****      * communication routine*/
6605:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7563              		.loc 1 6605 5 is_stmt 1 view .LVU1993
 7564              	.LVL790:
6606:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7565              		.loc 1 6606 5 view .LVU1994
 7566              		.loc 1 6606 8 is_stmt 0 view .LVU1995
 7567 0004 0023     		movs	r3, #0
 7568 0006 8DF80730 		strb	r3, [sp, #7]
6607:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7569              		.loc 1 6607 5 is_stmt 1 view .LVU1996
 7570              	.LVL791:
6608:Core/Src/bno055.c **** 
6609:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6610:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7571              		.loc 1 6610 5 view .LVU1997
 7572              		.loc 1 6610 18 is_stmt 0 view .LVU1998
 7573 000a 134B     		ldr	r3, .L563
 7574 000c 1B68     		ldr	r3, [r3]
 7575              		.loc 1 6610 8 view .LVU1999
 7576 000e E3B1     		cbz	r3, .L559
 7577 0010 0446     		mov	r4, r0
6611:Core/Src/bno055.c ****     {
6612:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6613:Core/Src/bno055.c ****     }
6614:Core/Src/bno055.c ****     else
6615:Core/Src/bno055.c ****     {
6616:Core/Src/bno055.c ****         /*condition check for page, gyro calib
6617:Core/Src/bno055.c ****          * available in the page zero*/
6618:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7578              		.loc 1 6618 9 is_stmt 1 view .LVU2000
 7579              		.loc 1 6618 21 is_stmt 0 view .LVU2001
 7580 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7581              		.loc 1 6618 12 view .LVU2002
 7582 0014 9BB9     		cbnz	r3, .L562
 7583              	.LVL792:
 7584              	.L557:
6619:Core/Src/bno055.c ****         {
6620:Core/Src/bno055.c ****             /* Write the page zero*/
6621:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
ARM GAS  /tmp/ccWoU29M.s 			page 256


6622:Core/Src/bno055.c ****         }
6623:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7585              		.loc 1 6623 53 discriminator 1 view .LVU2003
 7586 0016 104B     		ldr	r3, .L563
 7587 0018 1B68     		ldr	r3, [r3]
 7588 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7589              		.loc 1 6623 41 discriminator 1 view .LVU2004
 7590 001c C3B9     		cbnz	r3, .L560
 7591              	.L558:
6624:Core/Src/bno055.c ****         {
6625:Core/Src/bno055.c ****             /* Read the gyro calib status */
6626:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7592              		.loc 1 6626 13 is_stmt 1 view .LVU2005
 7593              		.loc 1 6626 32 is_stmt 0 view .LVU2006
 7594 001e 0E4B     		ldr	r3, .L563
 7595 0020 1868     		ldr	r0, [r3]
 7596 0022 0569     		ldr	r5, [r0, #16]
 7597              		.loc 1 6626 24 view .LVU2007
 7598 0024 0123     		movs	r3, #1
 7599 0026 0DF10702 		add	r2, sp, #7
 7600 002a 3521     		movs	r1, #53
 7601 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7602 002e A847     		blx	r5
 7603              	.LVL793:
6627:Core/Src/bno055.c ****                                                       BNO055_GYRO_CALIB_STAT_REG,
6628:Core/Src/bno055.c ****                                                       &data_u8r,
6629:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6630:Core/Src/bno055.c ****             *gyro_calib_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_CALIB_STAT);
 7604              		.loc 1 6630 13 is_stmt 1 view .LVU2008
 7605              		.loc 1 6630 30 is_stmt 0 view .LVU2009
 7606 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7607 0034 C3F30113 		ubfx	r3, r3, #4, #2
 7608              		.loc 1 6630 28 view .LVU2010
 7609 0038 2370     		strb	r3, [r4]
 7610              	.LVL794:
 7611              	.L556:
6631:Core/Src/bno055.c ****         }
6632:Core/Src/bno055.c ****         else
6633:Core/Src/bno055.c ****         {
6634:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6635:Core/Src/bno055.c ****         }
6636:Core/Src/bno055.c ****     }
6637:Core/Src/bno055.c **** 
6638:Core/Src/bno055.c ****     return com_rslt;
6639:Core/Src/bno055.c **** }
 7612              		.loc 1 6639 1 view .LVU2011
 7613 003a 03B0     		add	sp, sp, #12
 7614              	.LCFI263:
 7615              		.cfi_remember_state
 7616              		.cfi_def_cfa_offset 12
 7617              		@ sp needed
 7618 003c 30BD     		pop	{r4, r5, pc}
 7619              	.LVL795:
 7620              	.L562:
 7621              	.LCFI264:
 7622              		.cfi_restore_state
6621:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 257


 7623              		.loc 1 6621 13 is_stmt 1 view .LVU2012
6621:Core/Src/bno055.c ****         }
 7624              		.loc 1 6621 23 is_stmt 0 view .LVU2013
 7625 003e 0020     		movs	r0, #0
 7626              	.LVL796:
6621:Core/Src/bno055.c ****         }
 7627              		.loc 1 6621 23 view .LVU2014
 7628 0040 FFF7FEFF 		bl	bno055_write_page_id
 7629              	.LVL797:
6623:Core/Src/bno055.c ****         {
 7630              		.loc 1 6623 9 is_stmt 1 view .LVU2015
6623:Core/Src/bno055.c ****         {
 7631              		.loc 1 6623 12 is_stmt 0 view .LVU2016
 7632 0044 0028     		cmp	r0, #0
 7633 0046 EAD0     		beq	.L558
 7634 0048 E5E7     		b	.L557
 7635              	.LVL798:
 7636              	.L559:
6612:Core/Src/bno055.c ****     }
 7637              		.loc 1 6612 16 view .LVU2017
 7638 004a 6FF07E00 		mvn	r0, #126
 7639              	.LVL799:
6612:Core/Src/bno055.c ****     }
 7640              		.loc 1 6612 16 view .LVU2018
 7641 004e F4E7     		b	.L556
 7642              	.LVL800:
 7643              	.L560:
6634:Core/Src/bno055.c ****         }
 7644              		.loc 1 6634 22 view .LVU2019
 7645 0050 4FF0FF30 		mov	r0, #-1
 7646 0054 F1E7     		b	.L556
 7647              	.L564:
 7648 0056 00BF     		.align	2
 7649              	.L563:
 7650 0058 00000000 		.word	.LANCHOR0
 7651              		.cfi_endproc
 7652              	.LFE119:
 7654              		.section	.text.bno055_get_sys_calib_stat,"ax",%progbits
 7655              		.align	1
 7656              		.global	bno055_get_sys_calib_stat
 7657              		.syntax unified
 7658              		.thumb
 7659              		.thumb_func
 7660              		.fpu fpv4-sp-d16
 7662              	bno055_get_sys_calib_stat:
 7663              	.LVL801:
 7664              	.LFB120:
6640:Core/Src/bno055.c **** 
6641:Core/Src/bno055.c **** /*!
6642:Core/Src/bno055.c ****  *  @brief This API used to read
6643:Core/Src/bno055.c ****  *  system calibration status from register from 0x35 bit 6 and 7
6644:Core/Src/bno055.c ****  *
6645:Core/Src/bno055.c ****  *  @param sys_calib_u8 : The value of system calib status
6646:Core/Src/bno055.c ****  *
6647:Core/Src/bno055.c ****  *
6648:Core/Src/bno055.c ****  *  @return results of bus communication function
6649:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
ARM GAS  /tmp/ccWoU29M.s 			page 258


6650:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6651:Core/Src/bno055.c ****  *
6652:Core/Src/bno055.c ****  */
6653:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_sys_calib_stat(u8 *sys_calib_u8)
6654:Core/Src/bno055.c **** {
 7665              		.loc 1 6654 1 is_stmt 1 view -0
 7666              		.cfi_startproc
 7667              		@ args = 0, pretend = 0, frame = 8
 7668              		@ frame_needed = 0, uses_anonymous_args = 0
 7669              		.loc 1 6654 1 is_stmt 0 view .LVU2021
 7670 0000 30B5     		push	{r4, r5, lr}
 7671              	.LCFI265:
 7672              		.cfi_def_cfa_offset 12
 7673              		.cfi_offset 4, -12
 7674              		.cfi_offset 5, -8
 7675              		.cfi_offset 14, -4
 7676 0002 83B0     		sub	sp, sp, #12
 7677              	.LCFI266:
 7678              		.cfi_def_cfa_offset 24
6655:Core/Src/bno055.c ****     /* Variable used to return value of
6656:Core/Src/bno055.c ****      * communication routine*/
6657:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7679              		.loc 1 6657 5 is_stmt 1 view .LVU2022
 7680              	.LVL802:
6658:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7681              		.loc 1 6658 5 view .LVU2023
 7682              		.loc 1 6658 8 is_stmt 0 view .LVU2024
 7683 0004 0023     		movs	r3, #0
 7684 0006 8DF80730 		strb	r3, [sp, #7]
6659:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7685              		.loc 1 6659 5 is_stmt 1 view .LVU2025
 7686              	.LVL803:
6660:Core/Src/bno055.c **** 
6661:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty*/
6662:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7687              		.loc 1 6662 5 view .LVU2026
 7688              		.loc 1 6662 18 is_stmt 0 view .LVU2027
 7689 000a 124B     		ldr	r3, .L573
 7690 000c 1B68     		ldr	r3, [r3]
 7691              		.loc 1 6662 8 view .LVU2028
 7692 000e DBB1     		cbz	r3, .L569
 7693 0010 0446     		mov	r4, r0
6663:Core/Src/bno055.c ****     {
6664:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6665:Core/Src/bno055.c ****     }
6666:Core/Src/bno055.c ****     else
6667:Core/Src/bno055.c ****     {
6668:Core/Src/bno055.c ****         /*condition check for page,system calib
6669:Core/Src/bno055.c ****          * available in the page zero*/
6670:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7694              		.loc 1 6670 9 is_stmt 1 view .LVU2029
 7695              		.loc 1 6670 21 is_stmt 0 view .LVU2030
 7696 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7697              		.loc 1 6670 12 view .LVU2031
 7698 0014 93B9     		cbnz	r3, .L572
 7699              	.LVL804:
 7700              	.L567:
ARM GAS  /tmp/ccWoU29M.s 			page 259


6671:Core/Src/bno055.c ****         {
6672:Core/Src/bno055.c ****             /* Write the page zero*/
6673:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6674:Core/Src/bno055.c ****         }
6675:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7701              		.loc 1 6675 53 discriminator 1 view .LVU2032
 7702 0016 0F4B     		ldr	r3, .L573
 7703 0018 1B68     		ldr	r3, [r3]
 7704 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7705              		.loc 1 6675 41 discriminator 1 view .LVU2033
 7706 001c BBB9     		cbnz	r3, .L570
 7707              	.L568:
6676:Core/Src/bno055.c ****         {
6677:Core/Src/bno055.c ****             /* Read the system calib */
6678:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7708              		.loc 1 6678 13 is_stmt 1 view .LVU2034
 7709              		.loc 1 6678 32 is_stmt 0 view .LVU2035
 7710 001e 0D4B     		ldr	r3, .L573
 7711 0020 1868     		ldr	r0, [r3]
 7712 0022 0569     		ldr	r5, [r0, #16]
 7713              		.loc 1 6678 24 view .LVU2036
 7714 0024 0123     		movs	r3, #1
 7715 0026 0DF10702 		add	r2, sp, #7
 7716 002a 3521     		movs	r1, #53
 7717 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7718 002e A847     		blx	r5
 7719              	.LVL805:
6679:Core/Src/bno055.c ****                                                       BNO055_SYS_CALIB_STAT_REG,
6680:Core/Src/bno055.c ****                                                       &data_u8r,
6681:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6682:Core/Src/bno055.c ****             *sys_calib_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_CALIB_STAT);
 7720              		.loc 1 6682 13 is_stmt 1 view .LVU2037
 7721              		.loc 1 6682 29 is_stmt 0 view .LVU2038
 7722 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7723 0034 9B09     		lsrs	r3, r3, #6
 7724              		.loc 1 6682 27 view .LVU2039
 7725 0036 2370     		strb	r3, [r4]
 7726              	.LVL806:
 7727              	.L566:
6683:Core/Src/bno055.c ****         }
6684:Core/Src/bno055.c ****         else
6685:Core/Src/bno055.c ****         {
6686:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6687:Core/Src/bno055.c ****         }
6688:Core/Src/bno055.c ****     }
6689:Core/Src/bno055.c **** 
6690:Core/Src/bno055.c ****     return com_rslt;
6691:Core/Src/bno055.c **** }
 7728              		.loc 1 6691 1 view .LVU2040
 7729 0038 03B0     		add	sp, sp, #12
 7730              	.LCFI267:
 7731              		.cfi_remember_state
 7732              		.cfi_def_cfa_offset 12
 7733              		@ sp needed
 7734 003a 30BD     		pop	{r4, r5, pc}
 7735              	.LVL807:
 7736              	.L572:
ARM GAS  /tmp/ccWoU29M.s 			page 260


 7737              	.LCFI268:
 7738              		.cfi_restore_state
6673:Core/Src/bno055.c ****         }
 7739              		.loc 1 6673 13 is_stmt 1 view .LVU2041
6673:Core/Src/bno055.c ****         }
 7740              		.loc 1 6673 23 is_stmt 0 view .LVU2042
 7741 003c 0020     		movs	r0, #0
 7742              	.LVL808:
6673:Core/Src/bno055.c ****         }
 7743              		.loc 1 6673 23 view .LVU2043
 7744 003e FFF7FEFF 		bl	bno055_write_page_id
 7745              	.LVL809:
6675:Core/Src/bno055.c ****         {
 7746              		.loc 1 6675 9 is_stmt 1 view .LVU2044
6675:Core/Src/bno055.c ****         {
 7747              		.loc 1 6675 12 is_stmt 0 view .LVU2045
 7748 0042 0028     		cmp	r0, #0
 7749 0044 EBD0     		beq	.L568
 7750 0046 E6E7     		b	.L567
 7751              	.LVL810:
 7752              	.L569:
6664:Core/Src/bno055.c ****     }
 7753              		.loc 1 6664 16 view .LVU2046
 7754 0048 6FF07E00 		mvn	r0, #126
 7755              	.LVL811:
6664:Core/Src/bno055.c ****     }
 7756              		.loc 1 6664 16 view .LVU2047
 7757 004c F4E7     		b	.L566
 7758              	.LVL812:
 7759              	.L570:
6686:Core/Src/bno055.c ****         }
 7760              		.loc 1 6686 22 view .LVU2048
 7761 004e 4FF0FF30 		mov	r0, #-1
 7762 0052 F1E7     		b	.L566
 7763              	.L574:
 7764              		.align	2
 7765              	.L573:
 7766 0054 00000000 		.word	.LANCHOR0
 7767              		.cfi_endproc
 7768              	.LFE120:
 7770              		.section	.text.bno055_get_selftest_accel,"ax",%progbits
 7771              		.align	1
 7772              		.global	bno055_get_selftest_accel
 7773              		.syntax unified
 7774              		.thumb
 7775              		.thumb_func
 7776              		.fpu fpv4-sp-d16
 7778              	bno055_get_selftest_accel:
 7779              	.LVL813:
 7780              	.LFB121:
6692:Core/Src/bno055.c **** 
6693:Core/Src/bno055.c **** /*!
6694:Core/Src/bno055.c ****  *  @brief This API used to read
6695:Core/Src/bno055.c ****  *  self test of accel from register from 0x36 bit 0
6696:Core/Src/bno055.c ****  *
6697:Core/Src/bno055.c ****  *  @param selftest_accel_u8 : The value of self test of accel
6698:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 261


6699:Core/Src/bno055.c ****  *    selftest_accel_u8 |  result
6700:Core/Src/bno055.c ****  *   -------------------- | ---------------------
6701:Core/Src/bno055.c ****  *     0x00               | indicates test failed
6702:Core/Src/bno055.c ****  *     0x01               | indicated test passed
6703:Core/Src/bno055.c ****  *
6704:Core/Src/bno055.c ****  *  @return results of bus communication function
6705:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6706:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6707:Core/Src/bno055.c ****  *
6708:Core/Src/bno055.c ****  */
6709:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest_accel(u8 *selftest_accel_u8)
6710:Core/Src/bno055.c **** {
 7781              		.loc 1 6710 1 is_stmt 1 view -0
 7782              		.cfi_startproc
 7783              		@ args = 0, pretend = 0, frame = 8
 7784              		@ frame_needed = 0, uses_anonymous_args = 0
 7785              		.loc 1 6710 1 is_stmt 0 view .LVU2050
 7786 0000 30B5     		push	{r4, r5, lr}
 7787              	.LCFI269:
 7788              		.cfi_def_cfa_offset 12
 7789              		.cfi_offset 4, -12
 7790              		.cfi_offset 5, -8
 7791              		.cfi_offset 14, -4
 7792 0002 83B0     		sub	sp, sp, #12
 7793              	.LCFI270:
 7794              		.cfi_def_cfa_offset 24
6711:Core/Src/bno055.c ****     /* Variable used to return value of
6712:Core/Src/bno055.c ****      * communication routine*/
6713:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7795              		.loc 1 6713 5 is_stmt 1 view .LVU2051
 7796              	.LVL814:
6714:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7797              		.loc 1 6714 5 view .LVU2052
 7798              		.loc 1 6714 8 is_stmt 0 view .LVU2053
 7799 0004 0023     		movs	r3, #0
 7800 0006 8DF80730 		strb	r3, [sp, #7]
6715:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7801              		.loc 1 6715 5 is_stmt 1 view .LVU2054
 7802              	.LVL815:
6716:Core/Src/bno055.c **** 
6717:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6718:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7803              		.loc 1 6718 5 view .LVU2055
 7804              		.loc 1 6718 18 is_stmt 0 view .LVU2056
 7805 000a 134B     		ldr	r3, .L583
 7806 000c 1B68     		ldr	r3, [r3]
 7807              		.loc 1 6718 8 view .LVU2057
 7808 000e E3B1     		cbz	r3, .L579
 7809 0010 0446     		mov	r4, r0
6719:Core/Src/bno055.c ****     {
6720:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6721:Core/Src/bno055.c ****     }
6722:Core/Src/bno055.c ****     else
6723:Core/Src/bno055.c ****     {
6724:Core/Src/bno055.c ****         /*condition check for page, accel self test is
6725:Core/Src/bno055.c ****          * available in the page zero*/
6726:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
ARM GAS  /tmp/ccWoU29M.s 			page 262


 7810              		.loc 1 6726 9 is_stmt 1 view .LVU2058
 7811              		.loc 1 6726 21 is_stmt 0 view .LVU2059
 7812 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7813              		.loc 1 6726 12 view .LVU2060
 7814 0014 9BB9     		cbnz	r3, .L582
 7815              	.LVL816:
 7816              	.L577:
6727:Core/Src/bno055.c ****         {
6728:Core/Src/bno055.c ****             /* Write the page zero*/
6729:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6730:Core/Src/bno055.c ****         }
6731:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7817              		.loc 1 6731 53 discriminator 1 view .LVU2061
 7818 0016 104B     		ldr	r3, .L583
 7819 0018 1B68     		ldr	r3, [r3]
 7820 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7821              		.loc 1 6731 41 discriminator 1 view .LVU2062
 7822 001c C3B9     		cbnz	r3, .L580
 7823              	.L578:
6732:Core/Src/bno055.c ****         {
6733:Core/Src/bno055.c ****             /* Read the accel self test */
6734:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7824              		.loc 1 6734 13 is_stmt 1 view .LVU2063
 7825              		.loc 1 6734 32 is_stmt 0 view .LVU2064
 7826 001e 0E4B     		ldr	r3, .L583
 7827 0020 1868     		ldr	r0, [r3]
 7828 0022 0569     		ldr	r5, [r0, #16]
 7829              		.loc 1 6734 24 view .LVU2065
 7830 0024 0123     		movs	r3, #1
 7831 0026 0DF10702 		add	r2, sp, #7
 7832 002a 3621     		movs	r1, #54
 7833 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7834 002e A847     		blx	r5
 7835              	.LVL817:
6735:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_ACCEL_REG,
6736:Core/Src/bno055.c ****                                                       &data_u8r,
6737:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6738:Core/Src/bno055.c ****             *selftest_accel_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST_ACCEL);
 7836              		.loc 1 6738 13 is_stmt 1 view .LVU2066
 7837              		.loc 1 6738 34 is_stmt 0 view .LVU2067
 7838 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7839 0034 03F00103 		and	r3, r3, #1
 7840              		.loc 1 6738 32 view .LVU2068
 7841 0038 2370     		strb	r3, [r4]
 7842              	.LVL818:
 7843              	.L576:
6739:Core/Src/bno055.c ****         }
6740:Core/Src/bno055.c ****         else
6741:Core/Src/bno055.c ****         {
6742:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6743:Core/Src/bno055.c ****         }
6744:Core/Src/bno055.c ****     }
6745:Core/Src/bno055.c **** 
6746:Core/Src/bno055.c ****     return com_rslt;
6747:Core/Src/bno055.c **** }
 7844              		.loc 1 6747 1 view .LVU2069
 7845 003a 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccWoU29M.s 			page 263


 7846              	.LCFI271:
 7847              		.cfi_remember_state
 7848              		.cfi_def_cfa_offset 12
 7849              		@ sp needed
 7850 003c 30BD     		pop	{r4, r5, pc}
 7851              	.LVL819:
 7852              	.L582:
 7853              	.LCFI272:
 7854              		.cfi_restore_state
6729:Core/Src/bno055.c ****         }
 7855              		.loc 1 6729 13 is_stmt 1 view .LVU2070
6729:Core/Src/bno055.c ****         }
 7856              		.loc 1 6729 23 is_stmt 0 view .LVU2071
 7857 003e 0020     		movs	r0, #0
 7858              	.LVL820:
6729:Core/Src/bno055.c ****         }
 7859              		.loc 1 6729 23 view .LVU2072
 7860 0040 FFF7FEFF 		bl	bno055_write_page_id
 7861              	.LVL821:
6731:Core/Src/bno055.c ****         {
 7862              		.loc 1 6731 9 is_stmt 1 view .LVU2073
6731:Core/Src/bno055.c ****         {
 7863              		.loc 1 6731 12 is_stmt 0 view .LVU2074
 7864 0044 0028     		cmp	r0, #0
 7865 0046 EAD0     		beq	.L578
 7866 0048 E5E7     		b	.L577
 7867              	.LVL822:
 7868              	.L579:
6720:Core/Src/bno055.c ****     }
 7869              		.loc 1 6720 16 view .LVU2075
 7870 004a 6FF07E00 		mvn	r0, #126
 7871              	.LVL823:
6720:Core/Src/bno055.c ****     }
 7872              		.loc 1 6720 16 view .LVU2076
 7873 004e F4E7     		b	.L576
 7874              	.LVL824:
 7875              	.L580:
6742:Core/Src/bno055.c ****         }
 7876              		.loc 1 6742 22 view .LVU2077
 7877 0050 4FF0FF30 		mov	r0, #-1
 7878 0054 F1E7     		b	.L576
 7879              	.L584:
 7880 0056 00BF     		.align	2
 7881              	.L583:
 7882 0058 00000000 		.word	.LANCHOR0
 7883              		.cfi_endproc
 7884              	.LFE121:
 7886              		.section	.text.bno055_get_selftest_mag,"ax",%progbits
 7887              		.align	1
 7888              		.global	bno055_get_selftest_mag
 7889              		.syntax unified
 7890              		.thumb
 7891              		.thumb_func
 7892              		.fpu fpv4-sp-d16
 7894              	bno055_get_selftest_mag:
 7895              	.LVL825:
 7896              	.LFB122:
ARM GAS  /tmp/ccWoU29M.s 			page 264


6748:Core/Src/bno055.c **** 
6749:Core/Src/bno055.c **** /*!
6750:Core/Src/bno055.c ****  *  @brief This API used to read
6751:Core/Src/bno055.c ****  *  self test of mag from register from 0x36 bit 1
6752:Core/Src/bno055.c ****  *
6753:Core/Src/bno055.c ****  *  @param selftest_mag_u8 : The value of self test of mag
6754:Core/Src/bno055.c ****  *
6755:Core/Src/bno055.c ****  *     selftest_mag_u8  |  result
6756:Core/Src/bno055.c ****  *   -------------------- | ---------------------
6757:Core/Src/bno055.c ****  *     0x00               | indicates test failed
6758:Core/Src/bno055.c ****  *     0x01               | indicated test passed
6759:Core/Src/bno055.c ****  *
6760:Core/Src/bno055.c ****  *  @return results of bus communication function
6761:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6762:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6763:Core/Src/bno055.c ****  *
6764:Core/Src/bno055.c ****  */
6765:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest_mag(u8 *selftest_mag_u8)
6766:Core/Src/bno055.c **** {
 7897              		.loc 1 6766 1 is_stmt 1 view -0
 7898              		.cfi_startproc
 7899              		@ args = 0, pretend = 0, frame = 8
 7900              		@ frame_needed = 0, uses_anonymous_args = 0
 7901              		.loc 1 6766 1 is_stmt 0 view .LVU2079
 7902 0000 30B5     		push	{r4, r5, lr}
 7903              	.LCFI273:
 7904              		.cfi_def_cfa_offset 12
 7905              		.cfi_offset 4, -12
 7906              		.cfi_offset 5, -8
 7907              		.cfi_offset 14, -4
 7908 0002 83B0     		sub	sp, sp, #12
 7909              	.LCFI274:
 7910              		.cfi_def_cfa_offset 24
6767:Core/Src/bno055.c ****     /* Variable used to return value of
6768:Core/Src/bno055.c ****      * communication routine*/
6769:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7911              		.loc 1 6769 5 is_stmt 1 view .LVU2080
 7912              	.LVL826:
6770:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7913              		.loc 1 6770 5 view .LVU2081
 7914              		.loc 1 6770 8 is_stmt 0 view .LVU2082
 7915 0004 0023     		movs	r3, #0
 7916 0006 8DF80730 		strb	r3, [sp, #7]
6771:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7917              		.loc 1 6771 5 is_stmt 1 view .LVU2083
 7918              	.LVL827:
6772:Core/Src/bno055.c **** 
6773:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6774:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7919              		.loc 1 6774 5 view .LVU2084
 7920              		.loc 1 6774 18 is_stmt 0 view .LVU2085
 7921 000a 134B     		ldr	r3, .L593
 7922 000c 1B68     		ldr	r3, [r3]
 7923              		.loc 1 6774 8 view .LVU2086
 7924 000e E3B1     		cbz	r3, .L589
 7925 0010 0446     		mov	r4, r0
6775:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccWoU29M.s 			page 265


6776:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6777:Core/Src/bno055.c ****     }
6778:Core/Src/bno055.c ****     else
6779:Core/Src/bno055.c ****     {
6780:Core/Src/bno055.c ****         /*condition check for page, self test of mag is
6781:Core/Src/bno055.c ****          * available in the page zero*/
6782:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7926              		.loc 1 6782 9 is_stmt 1 view .LVU2087
 7927              		.loc 1 6782 21 is_stmt 0 view .LVU2088
 7928 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7929              		.loc 1 6782 12 view .LVU2089
 7930 0014 9BB9     		cbnz	r3, .L592
 7931              	.LVL828:
 7932              	.L587:
6783:Core/Src/bno055.c ****         {
6784:Core/Src/bno055.c ****             /* Write the page zero*/
6785:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6786:Core/Src/bno055.c ****         }
6787:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7933              		.loc 1 6787 53 discriminator 1 view .LVU2090
 7934 0016 104B     		ldr	r3, .L593
 7935 0018 1B68     		ldr	r3, [r3]
 7936 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7937              		.loc 1 6787 41 discriminator 1 view .LVU2091
 7938 001c C3B9     		cbnz	r3, .L590
 7939              	.L588:
6788:Core/Src/bno055.c ****         {
6789:Core/Src/bno055.c ****             /* Read the mag self test */
6790:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7940              		.loc 1 6790 13 is_stmt 1 view .LVU2092
 7941              		.loc 1 6790 32 is_stmt 0 view .LVU2093
 7942 001e 0E4B     		ldr	r3, .L593
 7943 0020 1868     		ldr	r0, [r3]
 7944 0022 0569     		ldr	r5, [r0, #16]
 7945              		.loc 1 6790 24 view .LVU2094
 7946 0024 0123     		movs	r3, #1
 7947 0026 0DF10702 		add	r2, sp, #7
 7948 002a 3621     		movs	r1, #54
 7949 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7950 002e A847     		blx	r5
 7951              	.LVL829:
6791:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_MAG_REG,
6792:Core/Src/bno055.c ****                                                       &data_u8r,
6793:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6794:Core/Src/bno055.c ****             *selftest_mag_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST_MAG);
 7952              		.loc 1 6794 13 is_stmt 1 view .LVU2095
 7953              		.loc 1 6794 32 is_stmt 0 view .LVU2096
 7954 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7955 0034 C3F34003 		ubfx	r3, r3, #1, #1
 7956              		.loc 1 6794 30 view .LVU2097
 7957 0038 2370     		strb	r3, [r4]
 7958              	.LVL830:
 7959              	.L586:
6795:Core/Src/bno055.c ****         }
6796:Core/Src/bno055.c ****         else
6797:Core/Src/bno055.c ****         {
6798:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 266


6799:Core/Src/bno055.c ****         }
6800:Core/Src/bno055.c ****     }
6801:Core/Src/bno055.c **** 
6802:Core/Src/bno055.c ****     return com_rslt;
6803:Core/Src/bno055.c **** }
 7960              		.loc 1 6803 1 view .LVU2098
 7961 003a 03B0     		add	sp, sp, #12
 7962              	.LCFI275:
 7963              		.cfi_remember_state
 7964              		.cfi_def_cfa_offset 12
 7965              		@ sp needed
 7966 003c 30BD     		pop	{r4, r5, pc}
 7967              	.LVL831:
 7968              	.L592:
 7969              	.LCFI276:
 7970              		.cfi_restore_state
6785:Core/Src/bno055.c ****         }
 7971              		.loc 1 6785 13 is_stmt 1 view .LVU2099
6785:Core/Src/bno055.c ****         }
 7972              		.loc 1 6785 23 is_stmt 0 view .LVU2100
 7973 003e 0020     		movs	r0, #0
 7974              	.LVL832:
6785:Core/Src/bno055.c ****         }
 7975              		.loc 1 6785 23 view .LVU2101
 7976 0040 FFF7FEFF 		bl	bno055_write_page_id
 7977              	.LVL833:
6787:Core/Src/bno055.c ****         {
 7978              		.loc 1 6787 9 is_stmt 1 view .LVU2102
6787:Core/Src/bno055.c ****         {
 7979              		.loc 1 6787 12 is_stmt 0 view .LVU2103
 7980 0044 0028     		cmp	r0, #0
 7981 0046 EAD0     		beq	.L588
 7982 0048 E5E7     		b	.L587
 7983              	.LVL834:
 7984              	.L589:
6776:Core/Src/bno055.c ****     }
 7985              		.loc 1 6776 16 view .LVU2104
 7986 004a 6FF07E00 		mvn	r0, #126
 7987              	.LVL835:
6776:Core/Src/bno055.c ****     }
 7988              		.loc 1 6776 16 view .LVU2105
 7989 004e F4E7     		b	.L586
 7990              	.LVL836:
 7991              	.L590:
6798:Core/Src/bno055.c ****         }
 7992              		.loc 1 6798 22 view .LVU2106
 7993 0050 4FF0FF30 		mov	r0, #-1
 7994 0054 F1E7     		b	.L586
 7995              	.L594:
 7996 0056 00BF     		.align	2
 7997              	.L593:
 7998 0058 00000000 		.word	.LANCHOR0
 7999              		.cfi_endproc
 8000              	.LFE122:
 8002              		.section	.text.bno055_get_selftest_gyro,"ax",%progbits
 8003              		.align	1
 8004              		.global	bno055_get_selftest_gyro
ARM GAS  /tmp/ccWoU29M.s 			page 267


 8005              		.syntax unified
 8006              		.thumb
 8007              		.thumb_func
 8008              		.fpu fpv4-sp-d16
 8010              	bno055_get_selftest_gyro:
 8011              	.LVL837:
 8012              	.LFB123:
6804:Core/Src/bno055.c **** 
6805:Core/Src/bno055.c **** /*!
6806:Core/Src/bno055.c ****  *  @brief This API used to read
6807:Core/Src/bno055.c ****  *  self test of gyro from register from 0x36 bit 2
6808:Core/Src/bno055.c ****  *
6809:Core/Src/bno055.c ****  *  @param selftest_gyro_u8 : The value of self test of gyro
6810:Core/Src/bno055.c ****  *
6811:Core/Src/bno055.c ****  *     selftest_gyro_u8 |  result
6812:Core/Src/bno055.c ****  *   -------------------- | ---------------------
6813:Core/Src/bno055.c ****  *     0x00               | indicates test failed
6814:Core/Src/bno055.c ****  *     0x01               | indicated test passed
6815:Core/Src/bno055.c ****  *
6816:Core/Src/bno055.c ****  *  @return results of bus communication function
6817:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6818:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6819:Core/Src/bno055.c ****  *
6820:Core/Src/bno055.c ****  */
6821:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest_gyro(u8 *selftest_gyro_u8)
6822:Core/Src/bno055.c **** {
 8013              		.loc 1 6822 1 is_stmt 1 view -0
 8014              		.cfi_startproc
 8015              		@ args = 0, pretend = 0, frame = 8
 8016              		@ frame_needed = 0, uses_anonymous_args = 0
 8017              		.loc 1 6822 1 is_stmt 0 view .LVU2108
 8018 0000 30B5     		push	{r4, r5, lr}
 8019              	.LCFI277:
 8020              		.cfi_def_cfa_offset 12
 8021              		.cfi_offset 4, -12
 8022              		.cfi_offset 5, -8
 8023              		.cfi_offset 14, -4
 8024 0002 83B0     		sub	sp, sp, #12
 8025              	.LCFI278:
 8026              		.cfi_def_cfa_offset 24
6823:Core/Src/bno055.c ****     /* Variable used to return value of
6824:Core/Src/bno055.c ****      * communication routine*/
6825:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8027              		.loc 1 6825 5 is_stmt 1 view .LVU2109
 8028              	.LVL838:
6826:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8029              		.loc 1 6826 5 view .LVU2110
 8030              		.loc 1 6826 8 is_stmt 0 view .LVU2111
 8031 0004 0023     		movs	r3, #0
 8032 0006 8DF80730 		strb	r3, [sp, #7]
6827:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8033              		.loc 1 6827 5 is_stmt 1 view .LVU2112
 8034              	.LVL839:
6828:Core/Src/bno055.c **** 
6829:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6830:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8035              		.loc 1 6830 5 view .LVU2113
ARM GAS  /tmp/ccWoU29M.s 			page 268


 8036              		.loc 1 6830 18 is_stmt 0 view .LVU2114
 8037 000a 134B     		ldr	r3, .L603
 8038 000c 1B68     		ldr	r3, [r3]
 8039              		.loc 1 6830 8 view .LVU2115
 8040 000e E3B1     		cbz	r3, .L599
 8041 0010 0446     		mov	r4, r0
6831:Core/Src/bno055.c ****     {
6832:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6833:Core/Src/bno055.c ****     }
6834:Core/Src/bno055.c ****     else
6835:Core/Src/bno055.c ****     {
6836:Core/Src/bno055.c ****         /*condition check for page self test of gyro is
6837:Core/Src/bno055.c ****          * available in the page zero*/
6838:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8042              		.loc 1 6838 9 is_stmt 1 view .LVU2116
 8043              		.loc 1 6838 21 is_stmt 0 view .LVU2117
 8044 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8045              		.loc 1 6838 12 view .LVU2118
 8046 0014 9BB9     		cbnz	r3, .L602
 8047              	.LVL840:
 8048              	.L597:
6839:Core/Src/bno055.c ****         {
6840:Core/Src/bno055.c ****             /* Write the page zero*/
6841:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6842:Core/Src/bno055.c ****         }
6843:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8049              		.loc 1 6843 53 discriminator 1 view .LVU2119
 8050 0016 104B     		ldr	r3, .L603
 8051 0018 1B68     		ldr	r3, [r3]
 8052 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8053              		.loc 1 6843 41 discriminator 1 view .LVU2120
 8054 001c C3B9     		cbnz	r3, .L600
 8055              	.L598:
6844:Core/Src/bno055.c ****         {
6845:Core/Src/bno055.c ****             /* Read the gyro self test */
6846:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8056              		.loc 1 6846 13 is_stmt 1 view .LVU2121
 8057              		.loc 1 6846 32 is_stmt 0 view .LVU2122
 8058 001e 0E4B     		ldr	r3, .L603
 8059 0020 1868     		ldr	r0, [r3]
 8060 0022 0569     		ldr	r5, [r0, #16]
 8061              		.loc 1 6846 24 view .LVU2123
 8062 0024 0123     		movs	r3, #1
 8063 0026 0DF10702 		add	r2, sp, #7
 8064 002a 3621     		movs	r1, #54
 8065 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8066 002e A847     		blx	r5
 8067              	.LVL841:
6847:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_GYRO_REG,
6848:Core/Src/bno055.c ****                                                       &data_u8r,
6849:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6850:Core/Src/bno055.c ****             *selftest_gyro_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST_GYRO);
 8068              		.loc 1 6850 13 is_stmt 1 view .LVU2124
 8069              		.loc 1 6850 33 is_stmt 0 view .LVU2125
 8070 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8071 0034 C3F38003 		ubfx	r3, r3, #2, #1
 8072              		.loc 1 6850 31 view .LVU2126
ARM GAS  /tmp/ccWoU29M.s 			page 269


 8073 0038 2370     		strb	r3, [r4]
 8074              	.LVL842:
 8075              	.L596:
6851:Core/Src/bno055.c ****         }
6852:Core/Src/bno055.c ****         else
6853:Core/Src/bno055.c ****         {
6854:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6855:Core/Src/bno055.c ****         }
6856:Core/Src/bno055.c ****     }
6857:Core/Src/bno055.c **** 
6858:Core/Src/bno055.c ****     return com_rslt;
6859:Core/Src/bno055.c **** }
 8076              		.loc 1 6859 1 view .LVU2127
 8077 003a 03B0     		add	sp, sp, #12
 8078              	.LCFI279:
 8079              		.cfi_remember_state
 8080              		.cfi_def_cfa_offset 12
 8081              		@ sp needed
 8082 003c 30BD     		pop	{r4, r5, pc}
 8083              	.LVL843:
 8084              	.L602:
 8085              	.LCFI280:
 8086              		.cfi_restore_state
6841:Core/Src/bno055.c ****         }
 8087              		.loc 1 6841 13 is_stmt 1 view .LVU2128
6841:Core/Src/bno055.c ****         }
 8088              		.loc 1 6841 23 is_stmt 0 view .LVU2129
 8089 003e 0020     		movs	r0, #0
 8090              	.LVL844:
6841:Core/Src/bno055.c ****         }
 8091              		.loc 1 6841 23 view .LVU2130
 8092 0040 FFF7FEFF 		bl	bno055_write_page_id
 8093              	.LVL845:
6843:Core/Src/bno055.c ****         {
 8094              		.loc 1 6843 9 is_stmt 1 view .LVU2131
6843:Core/Src/bno055.c ****         {
 8095              		.loc 1 6843 12 is_stmt 0 view .LVU2132
 8096 0044 0028     		cmp	r0, #0
 8097 0046 EAD0     		beq	.L598
 8098 0048 E5E7     		b	.L597
 8099              	.LVL846:
 8100              	.L599:
6832:Core/Src/bno055.c ****     }
 8101              		.loc 1 6832 16 view .LVU2133
 8102 004a 6FF07E00 		mvn	r0, #126
 8103              	.LVL847:
6832:Core/Src/bno055.c ****     }
 8104              		.loc 1 6832 16 view .LVU2134
 8105 004e F4E7     		b	.L596
 8106              	.LVL848:
 8107              	.L600:
6854:Core/Src/bno055.c ****         }
 8108              		.loc 1 6854 22 view .LVU2135
 8109 0050 4FF0FF30 		mov	r0, #-1
 8110 0054 F1E7     		b	.L596
 8111              	.L604:
 8112 0056 00BF     		.align	2
ARM GAS  /tmp/ccWoU29M.s 			page 270


 8113              	.L603:
 8114 0058 00000000 		.word	.LANCHOR0
 8115              		.cfi_endproc
 8116              	.LFE123:
 8118              		.section	.text.bno055_get_selftest_mcu,"ax",%progbits
 8119              		.align	1
 8120              		.global	bno055_get_selftest_mcu
 8121              		.syntax unified
 8122              		.thumb
 8123              		.thumb_func
 8124              		.fpu fpv4-sp-d16
 8126              	bno055_get_selftest_mcu:
 8127              	.LVL849:
 8128              	.LFB124:
6860:Core/Src/bno055.c **** 
6861:Core/Src/bno055.c **** /*!
6862:Core/Src/bno055.c ****  *  @brief This API used to read
6863:Core/Src/bno055.c ****  *  self test of micro controller from register from 0x36 bit 3
6864:Core/Src/bno055.c ****  *
6865:Core/Src/bno055.c ****  *  @param selftest_mcu_u8 : The value of self test of micro controller
6866:Core/Src/bno055.c ****  *
6867:Core/Src/bno055.c ****  *     selftest_mcu_u8  |  result
6868:Core/Src/bno055.c ****  *   -------------------- | ---------------------
6869:Core/Src/bno055.c ****  *     0x00               | indicates test failed
6870:Core/Src/bno055.c ****  *     0x01               | indicated test passed
6871:Core/Src/bno055.c ****  *
6872:Core/Src/bno055.c ****  *  @return results of bus communication function
6873:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6874:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6875:Core/Src/bno055.c ****  *
6876:Core/Src/bno055.c ****  */
6877:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest_mcu(u8 *selftest_mcu_u8)
6878:Core/Src/bno055.c **** {
 8129              		.loc 1 6878 1 is_stmt 1 view -0
 8130              		.cfi_startproc
 8131              		@ args = 0, pretend = 0, frame = 8
 8132              		@ frame_needed = 0, uses_anonymous_args = 0
 8133              		.loc 1 6878 1 is_stmt 0 view .LVU2137
 8134 0000 30B5     		push	{r4, r5, lr}
 8135              	.LCFI281:
 8136              		.cfi_def_cfa_offset 12
 8137              		.cfi_offset 4, -12
 8138              		.cfi_offset 5, -8
 8139              		.cfi_offset 14, -4
 8140 0002 83B0     		sub	sp, sp, #12
 8141              	.LCFI282:
 8142              		.cfi_def_cfa_offset 24
6879:Core/Src/bno055.c ****     /* Variable used to return value of
6880:Core/Src/bno055.c ****      * communication routine*/
6881:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8143              		.loc 1 6881 5 is_stmt 1 view .LVU2138
 8144              	.LVL850:
6882:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8145              		.loc 1 6882 5 view .LVU2139
 8146              		.loc 1 6882 8 is_stmt 0 view .LVU2140
 8147 0004 0023     		movs	r3, #0
 8148 0006 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/ccWoU29M.s 			page 271


6883:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8149              		.loc 1 6883 5 is_stmt 1 view .LVU2141
 8150              	.LVL851:
6884:Core/Src/bno055.c **** 
6885:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6886:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8151              		.loc 1 6886 5 view .LVU2142
 8152              		.loc 1 6886 18 is_stmt 0 view .LVU2143
 8153 000a 134B     		ldr	r3, .L613
 8154 000c 1B68     		ldr	r3, [r3]
 8155              		.loc 1 6886 8 view .LVU2144
 8156 000e E3B1     		cbz	r3, .L609
 8157 0010 0446     		mov	r4, r0
6887:Core/Src/bno055.c ****     {
6888:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6889:Core/Src/bno055.c ****     }
6890:Core/Src/bno055.c ****     else
6891:Core/Src/bno055.c ****     {
6892:Core/Src/bno055.c ****         /*condition check for page self test of micro controller
6893:Core/Src/bno055.c ****          * is available in the page zero*/
6894:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8158              		.loc 1 6894 9 is_stmt 1 view .LVU2145
 8159              		.loc 1 6894 21 is_stmt 0 view .LVU2146
 8160 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8161              		.loc 1 6894 12 view .LVU2147
 8162 0014 9BB9     		cbnz	r3, .L612
 8163              	.LVL852:
 8164              	.L607:
6895:Core/Src/bno055.c ****         {
6896:Core/Src/bno055.c ****             /* Write the page zero*/
6897:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6898:Core/Src/bno055.c ****         }
6899:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8165              		.loc 1 6899 53 discriminator 1 view .LVU2148
 8166 0016 104B     		ldr	r3, .L613
 8167 0018 1B68     		ldr	r3, [r3]
 8168 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8169              		.loc 1 6899 41 discriminator 1 view .LVU2149
 8170 001c C3B9     		cbnz	r3, .L610
 8171              	.L608:
6900:Core/Src/bno055.c ****         {
6901:Core/Src/bno055.c ****             /* Read the self test of micro controller*/
6902:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8172              		.loc 1 6902 13 is_stmt 1 view .LVU2150
 8173              		.loc 1 6902 32 is_stmt 0 view .LVU2151
 8174 001e 0E4B     		ldr	r3, .L613
 8175 0020 1868     		ldr	r0, [r3]
 8176 0022 0569     		ldr	r5, [r0, #16]
 8177              		.loc 1 6902 24 view .LVU2152
 8178 0024 0123     		movs	r3, #1
 8179 0026 0DF10702 		add	r2, sp, #7
 8180 002a 3621     		movs	r1, #54
 8181 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8182 002e A847     		blx	r5
 8183              	.LVL853:
6903:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_MCU_REG,
6904:Core/Src/bno055.c ****                                                       &data_u8r,
ARM GAS  /tmp/ccWoU29M.s 			page 272


6905:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6906:Core/Src/bno055.c ****             *selftest_mcu_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST_MCU);
 8184              		.loc 1 6906 13 is_stmt 1 view .LVU2153
 8185              		.loc 1 6906 32 is_stmt 0 view .LVU2154
 8186 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8187 0034 C3F3C003 		ubfx	r3, r3, #3, #1
 8188              		.loc 1 6906 30 view .LVU2155
 8189 0038 2370     		strb	r3, [r4]
 8190              	.LVL854:
 8191              	.L606:
6907:Core/Src/bno055.c ****         }
6908:Core/Src/bno055.c ****         else
6909:Core/Src/bno055.c ****         {
6910:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6911:Core/Src/bno055.c ****         }
6912:Core/Src/bno055.c ****     }
6913:Core/Src/bno055.c **** 
6914:Core/Src/bno055.c ****     return com_rslt;
6915:Core/Src/bno055.c **** }
 8192              		.loc 1 6915 1 view .LVU2156
 8193 003a 03B0     		add	sp, sp, #12
 8194              	.LCFI283:
 8195              		.cfi_remember_state
 8196              		.cfi_def_cfa_offset 12
 8197              		@ sp needed
 8198 003c 30BD     		pop	{r4, r5, pc}
 8199              	.LVL855:
 8200              	.L612:
 8201              	.LCFI284:
 8202              		.cfi_restore_state
6897:Core/Src/bno055.c ****         }
 8203              		.loc 1 6897 13 is_stmt 1 view .LVU2157
6897:Core/Src/bno055.c ****         }
 8204              		.loc 1 6897 23 is_stmt 0 view .LVU2158
 8205 003e 0020     		movs	r0, #0
 8206              	.LVL856:
6897:Core/Src/bno055.c ****         }
 8207              		.loc 1 6897 23 view .LVU2159
 8208 0040 FFF7FEFF 		bl	bno055_write_page_id
 8209              	.LVL857:
6899:Core/Src/bno055.c ****         {
 8210              		.loc 1 6899 9 is_stmt 1 view .LVU2160
6899:Core/Src/bno055.c ****         {
 8211              		.loc 1 6899 12 is_stmt 0 view .LVU2161
 8212 0044 0028     		cmp	r0, #0
 8213 0046 EAD0     		beq	.L608
 8214 0048 E5E7     		b	.L607
 8215              	.LVL858:
 8216              	.L609:
6888:Core/Src/bno055.c ****     }
 8217              		.loc 1 6888 16 view .LVU2162
 8218 004a 6FF07E00 		mvn	r0, #126
 8219              	.LVL859:
6888:Core/Src/bno055.c ****     }
 8220              		.loc 1 6888 16 view .LVU2163
 8221 004e F4E7     		b	.L606
 8222              	.LVL860:
ARM GAS  /tmp/ccWoU29M.s 			page 273


 8223              	.L610:
6910:Core/Src/bno055.c ****         }
 8224              		.loc 1 6910 22 view .LVU2164
 8225 0050 4FF0FF30 		mov	r0, #-1
 8226 0054 F1E7     		b	.L606
 8227              	.L614:
 8228 0056 00BF     		.align	2
 8229              	.L613:
 8230 0058 00000000 		.word	.LANCHOR0
 8231              		.cfi_endproc
 8232              	.LFE124:
 8234              		.section	.text.bno055_get_intr_stat_gyro_any_motion,"ax",%progbits
 8235              		.align	1
 8236              		.global	bno055_get_intr_stat_gyro_any_motion
 8237              		.syntax unified
 8238              		.thumb
 8239              		.thumb_func
 8240              		.fpu fpv4-sp-d16
 8242              	bno055_get_intr_stat_gyro_any_motion:
 8243              	.LVL861:
 8244              	.LFB125:
6916:Core/Src/bno055.c **** 
6917:Core/Src/bno055.c **** /*!
6918:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
6919:Core/Src/bno055.c ****  *  gyro anymotion interrupt from register from 0x37 bit 2
6920:Core/Src/bno055.c ****  *
6921:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt
6922:Core/Src/bno055.c ****  *
6923:Core/Src/bno055.c ****  *     gyro_any_motion_u8  |  result
6924:Core/Src/bno055.c ****  *    --------------------   | ---------------------
6925:Core/Src/bno055.c ****  *     0x00                  | indicates no interrupt triggered
6926:Core/Src/bno055.c ****  *     0x01                  | indicates interrupt triggered
6927:Core/Src/bno055.c ****  *
6928:Core/Src/bno055.c ****  *  @return results of bus communication function
6929:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6930:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6931:Core/Src/bno055.c ****  *
6932:Core/Src/bno055.c ****  *  @note Gyro anymotion interrupt can be BNO055_BIT_ENABLE
6933:Core/Src/bno055.c ****  *  by the following APIs
6934:Core/Src/bno055.c ****  *
6935:Core/Src/bno055.c ****  *  bno055_set_intr_mask_gyro_any_motion()
6936:Core/Src/bno055.c ****  *
6937:Core/Src/bno055.c ****  *  bno055_set_intr_gyro_any_motion()
6938:Core/Src/bno055.c ****  *
6939:Core/Src/bno055.c ****  */
6940:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_gyro_any_motion(u8 *gyro_any_motion_u8)
6941:Core/Src/bno055.c **** {
 8245              		.loc 1 6941 1 is_stmt 1 view -0
 8246              		.cfi_startproc
 8247              		@ args = 0, pretend = 0, frame = 8
 8248              		@ frame_needed = 0, uses_anonymous_args = 0
 8249              		.loc 1 6941 1 is_stmt 0 view .LVU2166
 8250 0000 30B5     		push	{r4, r5, lr}
 8251              	.LCFI285:
 8252              		.cfi_def_cfa_offset 12
 8253              		.cfi_offset 4, -12
 8254              		.cfi_offset 5, -8
ARM GAS  /tmp/ccWoU29M.s 			page 274


 8255              		.cfi_offset 14, -4
 8256 0002 83B0     		sub	sp, sp, #12
 8257              	.LCFI286:
 8258              		.cfi_def_cfa_offset 24
6942:Core/Src/bno055.c ****     /* Variable used to return value of
6943:Core/Src/bno055.c ****      * communication routine*/
6944:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8259              		.loc 1 6944 5 is_stmt 1 view .LVU2167
 8260              	.LVL862:
6945:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8261              		.loc 1 6945 5 view .LVU2168
 8262              		.loc 1 6945 8 is_stmt 0 view .LVU2169
 8263 0004 0023     		movs	r3, #0
 8264 0006 8DF80730 		strb	r3, [sp, #7]
6946:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8265              		.loc 1 6946 5 is_stmt 1 view .LVU2170
 8266              	.LVL863:
6947:Core/Src/bno055.c **** 
6948:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6949:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8267              		.loc 1 6949 5 view .LVU2171
 8268              		.loc 1 6949 18 is_stmt 0 view .LVU2172
 8269 000a 134B     		ldr	r3, .L623
 8270 000c 1B68     		ldr	r3, [r3]
 8271              		.loc 1 6949 8 view .LVU2173
 8272 000e E3B1     		cbz	r3, .L619
 8273 0010 0446     		mov	r4, r0
6950:Core/Src/bno055.c ****     {
6951:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6952:Core/Src/bno055.c ****     }
6953:Core/Src/bno055.c ****     else
6954:Core/Src/bno055.c ****     {
6955:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion interrupt
6956:Core/Src/bno055.c ****          * status is available in the page zero*/
6957:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8274              		.loc 1 6957 9 is_stmt 1 view .LVU2174
 8275              		.loc 1 6957 21 is_stmt 0 view .LVU2175
 8276 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8277              		.loc 1 6957 12 view .LVU2176
 8278 0014 9BB9     		cbnz	r3, .L622
 8279              	.LVL864:
 8280              	.L617:
6958:Core/Src/bno055.c ****         {
6959:Core/Src/bno055.c ****             /* Write the page zero*/
6960:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6961:Core/Src/bno055.c ****         }
6962:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8281              		.loc 1 6962 53 discriminator 1 view .LVU2177
 8282 0016 104B     		ldr	r3, .L623
 8283 0018 1B68     		ldr	r3, [r3]
 8284 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8285              		.loc 1 6962 41 discriminator 1 view .LVU2178
 8286 001c C3B9     		cbnz	r3, .L620
 8287              	.L618:
6963:Core/Src/bno055.c ****         {
6964:Core/Src/bno055.c ****             /* Read the gyro anymotion interrupt stat_s8*/
6965:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccWoU29M.s 			page 275


 8288              		.loc 1 6965 13 is_stmt 1 view .LVU2179
 8289              		.loc 1 6965 32 is_stmt 0 view .LVU2180
 8290 001e 0E4B     		ldr	r3, .L623
 8291 0020 1868     		ldr	r0, [r3]
 8292 0022 0569     		ldr	r5, [r0, #16]
 8293              		.loc 1 6965 24 view .LVU2181
 8294 0024 0123     		movs	r3, #1
 8295 0026 0DF10702 		add	r2, sp, #7
 8296 002a 3721     		movs	r1, #55
 8297 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8298 002e A847     		blx	r5
 8299              	.LVL865:
6966:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_GYRO_ANY_MOTION_REG,
6967:Core/Src/bno055.c ****                                                       &data_u8r,
6968:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6969:Core/Src/bno055.c ****             *gyro_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_GYRO_ANY_MOTION);
 8300              		.loc 1 6969 13 is_stmt 1 view .LVU2182
 8301              		.loc 1 6969 35 is_stmt 0 view .LVU2183
 8302 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8303 0034 C3F38003 		ubfx	r3, r3, #2, #1
 8304              		.loc 1 6969 33 view .LVU2184
 8305 0038 2370     		strb	r3, [r4]
 8306              	.LVL866:
 8307              	.L616:
6970:Core/Src/bno055.c ****         }
6971:Core/Src/bno055.c ****         else
6972:Core/Src/bno055.c ****         {
6973:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6974:Core/Src/bno055.c ****         }
6975:Core/Src/bno055.c ****     }
6976:Core/Src/bno055.c **** 
6977:Core/Src/bno055.c ****     return com_rslt;
6978:Core/Src/bno055.c **** }
 8308              		.loc 1 6978 1 view .LVU2185
 8309 003a 03B0     		add	sp, sp, #12
 8310              	.LCFI287:
 8311              		.cfi_remember_state
 8312              		.cfi_def_cfa_offset 12
 8313              		@ sp needed
 8314 003c 30BD     		pop	{r4, r5, pc}
 8315              	.LVL867:
 8316              	.L622:
 8317              	.LCFI288:
 8318              		.cfi_restore_state
6960:Core/Src/bno055.c ****         }
 8319              		.loc 1 6960 13 is_stmt 1 view .LVU2186
6960:Core/Src/bno055.c ****         }
 8320              		.loc 1 6960 23 is_stmt 0 view .LVU2187
 8321 003e 0020     		movs	r0, #0
 8322              	.LVL868:
6960:Core/Src/bno055.c ****         }
 8323              		.loc 1 6960 23 view .LVU2188
 8324 0040 FFF7FEFF 		bl	bno055_write_page_id
 8325              	.LVL869:
6962:Core/Src/bno055.c ****         {
 8326              		.loc 1 6962 9 is_stmt 1 view .LVU2189
6962:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 276


 8327              		.loc 1 6962 12 is_stmt 0 view .LVU2190
 8328 0044 0028     		cmp	r0, #0
 8329 0046 EAD0     		beq	.L618
 8330 0048 E5E7     		b	.L617
 8331              	.LVL870:
 8332              	.L619:
6951:Core/Src/bno055.c ****     }
 8333              		.loc 1 6951 16 view .LVU2191
 8334 004a 6FF07E00 		mvn	r0, #126
 8335              	.LVL871:
6951:Core/Src/bno055.c ****     }
 8336              		.loc 1 6951 16 view .LVU2192
 8337 004e F4E7     		b	.L616
 8338              	.LVL872:
 8339              	.L620:
6973:Core/Src/bno055.c ****         }
 8340              		.loc 1 6973 22 view .LVU2193
 8341 0050 4FF0FF30 		mov	r0, #-1
 8342 0054 F1E7     		b	.L616
 8343              	.L624:
 8344 0056 00BF     		.align	2
 8345              	.L623:
 8346 0058 00000000 		.word	.LANCHOR0
 8347              		.cfi_endproc
 8348              	.LFE125:
 8350              		.section	.text.bno055_get_intr_stat_gyro_highrate,"ax",%progbits
 8351              		.align	1
 8352              		.global	bno055_get_intr_stat_gyro_highrate
 8353              		.syntax unified
 8354              		.thumb
 8355              		.thumb_func
 8356              		.fpu fpv4-sp-d16
 8358              	bno055_get_intr_stat_gyro_highrate:
 8359              	.LVL873:
 8360              	.LFB126:
6979:Core/Src/bno055.c **** 
6980:Core/Src/bno055.c **** /*!
6981:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
6982:Core/Src/bno055.c ****  *  gyro highrate interrupt from register from 0x37 bit 3
6983:Core/Src/bno055.c ****  *
6984:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt
6985:Core/Src/bno055.c ****  *
6986:Core/Src/bno055.c ****  *     gyro_highrate_u8   |  result
6987:Core/Src/bno055.c ****  *    -------------------   | ---------------------
6988:Core/Src/bno055.c ****  *     0x00                 | indicates no interrupt triggered
6989:Core/Src/bno055.c ****  *     0x01                 | indicates interrupt triggered
6990:Core/Src/bno055.c ****  *
6991:Core/Src/bno055.c ****  *  @return results of bus communication function
6992:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6993:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6994:Core/Src/bno055.c ****  *
6995:Core/Src/bno055.c ****  *  @note Gyro highrate interrupt can be configured
6996:Core/Src/bno055.c ****  *          by the following APIs
6997:Core/Src/bno055.c ****  *
6998:Core/Src/bno055.c ****  *  bno055_set_intr_mask_gyro_highrate()
6999:Core/Src/bno055.c ****  *
7000:Core/Src/bno055.c ****  *  bno055_set_intr_gyro_highrate()
ARM GAS  /tmp/ccWoU29M.s 			page 277


7001:Core/Src/bno055.c ****  */
7002:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_gyro_highrate(u8 *gyro_highrate_u8)
7003:Core/Src/bno055.c **** {
 8361              		.loc 1 7003 1 is_stmt 1 view -0
 8362              		.cfi_startproc
 8363              		@ args = 0, pretend = 0, frame = 8
 8364              		@ frame_needed = 0, uses_anonymous_args = 0
 8365              		.loc 1 7003 1 is_stmt 0 view .LVU2195
 8366 0000 30B5     		push	{r4, r5, lr}
 8367              	.LCFI289:
 8368              		.cfi_def_cfa_offset 12
 8369              		.cfi_offset 4, -12
 8370              		.cfi_offset 5, -8
 8371              		.cfi_offset 14, -4
 8372 0002 83B0     		sub	sp, sp, #12
 8373              	.LCFI290:
 8374              		.cfi_def_cfa_offset 24
7004:Core/Src/bno055.c ****     /* Variable used to return value of
7005:Core/Src/bno055.c ****      * communication routine*/
7006:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8375              		.loc 1 7006 5 is_stmt 1 view .LVU2196
 8376              	.LVL874:
7007:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8377              		.loc 1 7007 5 view .LVU2197
 8378              		.loc 1 7007 8 is_stmt 0 view .LVU2198
 8379 0004 0023     		movs	r3, #0
 8380 0006 8DF80730 		strb	r3, [sp, #7]
7008:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8381              		.loc 1 7008 5 is_stmt 1 view .LVU2199
 8382              	.LVL875:
7009:Core/Src/bno055.c **** 
7010:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7011:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8383              		.loc 1 7011 5 view .LVU2200
 8384              		.loc 1 7011 18 is_stmt 0 view .LVU2201
 8385 000a 134B     		ldr	r3, .L633
 8386 000c 1B68     		ldr	r3, [r3]
 8387              		.loc 1 7011 8 view .LVU2202
 8388 000e E3B1     		cbz	r3, .L629
 8389 0010 0446     		mov	r4, r0
7012:Core/Src/bno055.c ****     {
7013:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7014:Core/Src/bno055.c ****     }
7015:Core/Src/bno055.c ****     else
7016:Core/Src/bno055.c ****     {
7017:Core/Src/bno055.c ****         /*condition check for page, gyro highrate is
7018:Core/Src/bno055.c ****          * available in the page zero*/
7019:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8390              		.loc 1 7019 9 is_stmt 1 view .LVU2203
 8391              		.loc 1 7019 21 is_stmt 0 view .LVU2204
 8392 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8393              		.loc 1 7019 12 view .LVU2205
 8394 0014 9BB9     		cbnz	r3, .L632
 8395              	.LVL876:
 8396              	.L627:
7020:Core/Src/bno055.c ****         {
7021:Core/Src/bno055.c ****             /* Write the page zero*/
ARM GAS  /tmp/ccWoU29M.s 			page 278


7022:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7023:Core/Src/bno055.c ****         }
7024:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8397              		.loc 1 7024 53 discriminator 1 view .LVU2206
 8398 0016 104B     		ldr	r3, .L633
 8399 0018 1B68     		ldr	r3, [r3]
 8400 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8401              		.loc 1 7024 41 discriminator 1 view .LVU2207
 8402 001c C3B9     		cbnz	r3, .L630
 8403              	.L628:
7025:Core/Src/bno055.c ****         {
7026:Core/Src/bno055.c ****             /* Read the gyro highrate interrupt stat_s8*/
7027:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8404              		.loc 1 7027 13 is_stmt 1 view .LVU2208
 8405              		.loc 1 7027 32 is_stmt 0 view .LVU2209
 8406 001e 0E4B     		ldr	r3, .L633
 8407 0020 1868     		ldr	r0, [r3]
 8408 0022 0569     		ldr	r5, [r0, #16]
 8409              		.loc 1 7027 24 view .LVU2210
 8410 0024 0123     		movs	r3, #1
 8411 0026 0DF10702 		add	r2, sp, #7
 8412 002a 3721     		movs	r1, #55
 8413 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8414 002e A847     		blx	r5
 8415              	.LVL877:
7028:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_GYRO_HIGHRATE_REG,
7029:Core/Src/bno055.c ****                                                       &data_u8r,
7030:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7031:Core/Src/bno055.c ****             *gyro_highrate_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_GYRO_HIGHRATE);
 8416              		.loc 1 7031 13 is_stmt 1 view .LVU2211
 8417              		.loc 1 7031 33 is_stmt 0 view .LVU2212
 8418 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8419 0034 C3F3C003 		ubfx	r3, r3, #3, #1
 8420              		.loc 1 7031 31 view .LVU2213
 8421 0038 2370     		strb	r3, [r4]
 8422              	.LVL878:
 8423              	.L626:
7032:Core/Src/bno055.c ****         }
7033:Core/Src/bno055.c ****         else
7034:Core/Src/bno055.c ****         {
7035:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7036:Core/Src/bno055.c ****         }
7037:Core/Src/bno055.c ****     }
7038:Core/Src/bno055.c **** 
7039:Core/Src/bno055.c ****     return com_rslt;
7040:Core/Src/bno055.c **** }
 8424              		.loc 1 7040 1 view .LVU2214
 8425 003a 03B0     		add	sp, sp, #12
 8426              	.LCFI291:
 8427              		.cfi_remember_state
 8428              		.cfi_def_cfa_offset 12
 8429              		@ sp needed
 8430 003c 30BD     		pop	{r4, r5, pc}
 8431              	.LVL879:
 8432              	.L632:
 8433              	.LCFI292:
 8434              		.cfi_restore_state
ARM GAS  /tmp/ccWoU29M.s 			page 279


7022:Core/Src/bno055.c ****         }
 8435              		.loc 1 7022 13 is_stmt 1 view .LVU2215
7022:Core/Src/bno055.c ****         }
 8436              		.loc 1 7022 23 is_stmt 0 view .LVU2216
 8437 003e 0020     		movs	r0, #0
 8438              	.LVL880:
7022:Core/Src/bno055.c ****         }
 8439              		.loc 1 7022 23 view .LVU2217
 8440 0040 FFF7FEFF 		bl	bno055_write_page_id
 8441              	.LVL881:
7024:Core/Src/bno055.c ****         {
 8442              		.loc 1 7024 9 is_stmt 1 view .LVU2218
7024:Core/Src/bno055.c ****         {
 8443              		.loc 1 7024 12 is_stmt 0 view .LVU2219
 8444 0044 0028     		cmp	r0, #0
 8445 0046 EAD0     		beq	.L628
 8446 0048 E5E7     		b	.L627
 8447              	.LVL882:
 8448              	.L629:
7013:Core/Src/bno055.c ****     }
 8449              		.loc 1 7013 16 view .LVU2220
 8450 004a 6FF07E00 		mvn	r0, #126
 8451              	.LVL883:
7013:Core/Src/bno055.c ****     }
 8452              		.loc 1 7013 16 view .LVU2221
 8453 004e F4E7     		b	.L626
 8454              	.LVL884:
 8455              	.L630:
7035:Core/Src/bno055.c ****         }
 8456              		.loc 1 7035 22 view .LVU2222
 8457 0050 4FF0FF30 		mov	r0, #-1
 8458 0054 F1E7     		b	.L626
 8459              	.L634:
 8460 0056 00BF     		.align	2
 8461              	.L633:
 8462 0058 00000000 		.word	.LANCHOR0
 8463              		.cfi_endproc
 8464              	.LFE126:
 8466              		.section	.text.bno055_get_intr_stat_accel_high_g,"ax",%progbits
 8467              		.align	1
 8468              		.global	bno055_get_intr_stat_accel_high_g
 8469              		.syntax unified
 8470              		.thumb
 8471              		.thumb_func
 8472              		.fpu fpv4-sp-d16
 8474              	bno055_get_intr_stat_accel_high_g:
 8475              	.LVL885:
 8476              	.LFB127:
7041:Core/Src/bno055.c **** 
7042:Core/Src/bno055.c **** /*!
7043:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
7044:Core/Src/bno055.c ****  *  accel highg interrupt from register from 0x37 bit 5
7045:Core/Src/bno055.c ****  *
7046:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt
7047:Core/Src/bno055.c ****  *
7048:Core/Src/bno055.c ****  *     accel_high_g_u8    |  result
7049:Core/Src/bno055.c ****  *    -------------------   | ---------------------
ARM GAS  /tmp/ccWoU29M.s 			page 280


7050:Core/Src/bno055.c ****  *     0x00                 | indicates no interrupt triggered
7051:Core/Src/bno055.c ****  *     0x01                 | indicates interrupt triggered
7052:Core/Src/bno055.c ****  *
7053:Core/Src/bno055.c ****  *  @return results of bus communication function
7054:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7055:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7056:Core/Src/bno055.c ****  *
7057:Core/Src/bno055.c ****  *  @note Accel highg interrupt can be configured
7058:Core/Src/bno055.c ****  *          by the following APIs
7059:Core/Src/bno055.c ****  *
7060:Core/Src/bno055.c ****  *  bno055_set_intr_mask_accel_high_g()
7061:Core/Src/bno055.c ****  *
7062:Core/Src/bno055.c ****  *  bno055_set_intr_accel_high_g()
7063:Core/Src/bno055.c ****  *
7064:Core/Src/bno055.c ****  */
7065:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_accel_high_g(u8 *accel_high_g_u8)
7066:Core/Src/bno055.c **** {
 8477              		.loc 1 7066 1 is_stmt 1 view -0
 8478              		.cfi_startproc
 8479              		@ args = 0, pretend = 0, frame = 8
 8480              		@ frame_needed = 0, uses_anonymous_args = 0
 8481              		.loc 1 7066 1 is_stmt 0 view .LVU2224
 8482 0000 30B5     		push	{r4, r5, lr}
 8483              	.LCFI293:
 8484              		.cfi_def_cfa_offset 12
 8485              		.cfi_offset 4, -12
 8486              		.cfi_offset 5, -8
 8487              		.cfi_offset 14, -4
 8488 0002 83B0     		sub	sp, sp, #12
 8489              	.LCFI294:
 8490              		.cfi_def_cfa_offset 24
7067:Core/Src/bno055.c ****     /* Variable used to return value of
7068:Core/Src/bno055.c ****      * communication routine*/
7069:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8491              		.loc 1 7069 5 is_stmt 1 view .LVU2225
 8492              	.LVL886:
7070:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8493              		.loc 1 7070 5 view .LVU2226
 8494              		.loc 1 7070 8 is_stmt 0 view .LVU2227
 8495 0004 0023     		movs	r3, #0
 8496 0006 8DF80730 		strb	r3, [sp, #7]
7071:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8497              		.loc 1 7071 5 is_stmt 1 view .LVU2228
 8498              	.LVL887:
7072:Core/Src/bno055.c **** 
7073:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7074:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8499              		.loc 1 7074 5 view .LVU2229
 8500              		.loc 1 7074 18 is_stmt 0 view .LVU2230
 8501 000a 134B     		ldr	r3, .L643
 8502 000c 1B68     		ldr	r3, [r3]
 8503              		.loc 1 7074 8 view .LVU2231
 8504 000e E3B1     		cbz	r3, .L639
 8505 0010 0446     		mov	r4, r0
7075:Core/Src/bno055.c ****     {
7076:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7077:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 281


7078:Core/Src/bno055.c ****     else
7079:Core/Src/bno055.c ****     {
7080:Core/Src/bno055.c ****         /*condition check for page, accel highg is
7081:Core/Src/bno055.c ****          * available in the page zero*/
7082:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8506              		.loc 1 7082 9 is_stmt 1 view .LVU2232
 8507              		.loc 1 7082 21 is_stmt 0 view .LVU2233
 8508 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8509              		.loc 1 7082 12 view .LVU2234
 8510 0014 9BB9     		cbnz	r3, .L642
 8511              	.LVL888:
 8512              	.L637:
7083:Core/Src/bno055.c ****         {
7084:Core/Src/bno055.c ****             /* Write the page zero*/
7085:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7086:Core/Src/bno055.c ****         }
7087:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8513              		.loc 1 7087 53 discriminator 1 view .LVU2235
 8514 0016 104B     		ldr	r3, .L643
 8515 0018 1B68     		ldr	r3, [r3]
 8516 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8517              		.loc 1 7087 41 discriminator 1 view .LVU2236
 8518 001c C3B9     		cbnz	r3, .L640
 8519              	.L638:
7088:Core/Src/bno055.c ****         {
7089:Core/Src/bno055.c ****             /* Read the accel highg interrupt stat_s8 */
7090:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8520              		.loc 1 7090 13 is_stmt 1 view .LVU2237
 8521              		.loc 1 7090 32 is_stmt 0 view .LVU2238
 8522 001e 0E4B     		ldr	r3, .L643
 8523 0020 1868     		ldr	r0, [r3]
 8524 0022 0569     		ldr	r5, [r0, #16]
 8525              		.loc 1 7090 24 view .LVU2239
 8526 0024 0123     		movs	r3, #1
 8527 0026 0DF10702 		add	r2, sp, #7
 8528 002a 3721     		movs	r1, #55
 8529 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8530 002e A847     		blx	r5
 8531              	.LVL889:
7091:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_ACCEL_HIGH_G_REG,
7092:Core/Src/bno055.c ****                                                       &data_u8r,
7093:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7094:Core/Src/bno055.c ****             *accel_high_g_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_ACCEL_HIGH_G);
 8532              		.loc 1 7094 13 is_stmt 1 view .LVU2240
 8533              		.loc 1 7094 32 is_stmt 0 view .LVU2241
 8534 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8535 0034 C3F34013 		ubfx	r3, r3, #5, #1
 8536              		.loc 1 7094 30 view .LVU2242
 8537 0038 2370     		strb	r3, [r4]
 8538              	.LVL890:
 8539              	.L636:
7095:Core/Src/bno055.c ****         }
7096:Core/Src/bno055.c ****         else
7097:Core/Src/bno055.c ****         {
7098:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7099:Core/Src/bno055.c ****         }
7100:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 282


7101:Core/Src/bno055.c **** 
7102:Core/Src/bno055.c ****     return com_rslt;
7103:Core/Src/bno055.c **** }
 8540              		.loc 1 7103 1 view .LVU2243
 8541 003a 03B0     		add	sp, sp, #12
 8542              	.LCFI295:
 8543              		.cfi_remember_state
 8544              		.cfi_def_cfa_offset 12
 8545              		@ sp needed
 8546 003c 30BD     		pop	{r4, r5, pc}
 8547              	.LVL891:
 8548              	.L642:
 8549              	.LCFI296:
 8550              		.cfi_restore_state
7085:Core/Src/bno055.c ****         }
 8551              		.loc 1 7085 13 is_stmt 1 view .LVU2244
7085:Core/Src/bno055.c ****         }
 8552              		.loc 1 7085 23 is_stmt 0 view .LVU2245
 8553 003e 0020     		movs	r0, #0
 8554              	.LVL892:
7085:Core/Src/bno055.c ****         }
 8555              		.loc 1 7085 23 view .LVU2246
 8556 0040 FFF7FEFF 		bl	bno055_write_page_id
 8557              	.LVL893:
7087:Core/Src/bno055.c ****         {
 8558              		.loc 1 7087 9 is_stmt 1 view .LVU2247
7087:Core/Src/bno055.c ****         {
 8559              		.loc 1 7087 12 is_stmt 0 view .LVU2248
 8560 0044 0028     		cmp	r0, #0
 8561 0046 EAD0     		beq	.L638
 8562 0048 E5E7     		b	.L637
 8563              	.LVL894:
 8564              	.L639:
7076:Core/Src/bno055.c ****     }
 8565              		.loc 1 7076 16 view .LVU2249
 8566 004a 6FF07E00 		mvn	r0, #126
 8567              	.LVL895:
7076:Core/Src/bno055.c ****     }
 8568              		.loc 1 7076 16 view .LVU2250
 8569 004e F4E7     		b	.L636
 8570              	.LVL896:
 8571              	.L640:
7098:Core/Src/bno055.c ****         }
 8572              		.loc 1 7098 22 view .LVU2251
 8573 0050 4FF0FF30 		mov	r0, #-1
 8574 0054 F1E7     		b	.L636
 8575              	.L644:
 8576 0056 00BF     		.align	2
 8577              	.L643:
 8578 0058 00000000 		.word	.LANCHOR0
 8579              		.cfi_endproc
 8580              	.LFE127:
 8582              		.section	.text.bno055_get_intr_stat_accel_any_motion,"ax",%progbits
 8583              		.align	1
 8584              		.global	bno055_get_intr_stat_accel_any_motion
 8585              		.syntax unified
 8586              		.thumb
ARM GAS  /tmp/ccWoU29M.s 			page 283


 8587              		.thumb_func
 8588              		.fpu fpv4-sp-d16
 8590              	bno055_get_intr_stat_accel_any_motion:
 8591              	.LVL897:
 8592              	.LFB128:
7104:Core/Src/bno055.c **** 
7105:Core/Src/bno055.c **** /*!
7106:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
7107:Core/Src/bno055.c ****  *  accel anymotion interrupt from register from 0x37 bit 6
7108:Core/Src/bno055.c ****  *
7109:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt
7110:Core/Src/bno055.c ****  *
7111:Core/Src/bno055.c ****  *     accel_any_motion_u8 |  result
7112:Core/Src/bno055.c ****  *    -------------------   | ---------------------
7113:Core/Src/bno055.c ****  *     0x00                 | indicates no interrupt triggered
7114:Core/Src/bno055.c ****  *     0x01                 | indicates interrupt triggered
7115:Core/Src/bno055.c ****  *
7116:Core/Src/bno055.c ****  *  @return results of bus communication function
7117:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7118:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7119:Core/Src/bno055.c ****  *
7120:Core/Src/bno055.c ****  *  @note Accel anymotion interrupt can be configured
7121:Core/Src/bno055.c ****  *          by the following APIs
7122:Core/Src/bno055.c ****  *
7123:Core/Src/bno055.c ****  *  bno055_set_intr_mask_accel_any_motion()
7124:Core/Src/bno055.c ****  *
7125:Core/Src/bno055.c ****  *  bno055_set_intr_accel_any_motion()
7126:Core/Src/bno055.c ****  */
7127:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_accel_any_motion(u8 *accel_any_motion_u8)
7128:Core/Src/bno055.c **** {
 8593              		.loc 1 7128 1 is_stmt 1 view -0
 8594              		.cfi_startproc
 8595              		@ args = 0, pretend = 0, frame = 8
 8596              		@ frame_needed = 0, uses_anonymous_args = 0
 8597              		.loc 1 7128 1 is_stmt 0 view .LVU2253
 8598 0000 30B5     		push	{r4, r5, lr}
 8599              	.LCFI297:
 8600              		.cfi_def_cfa_offset 12
 8601              		.cfi_offset 4, -12
 8602              		.cfi_offset 5, -8
 8603              		.cfi_offset 14, -4
 8604 0002 83B0     		sub	sp, sp, #12
 8605              	.LCFI298:
 8606              		.cfi_def_cfa_offset 24
7129:Core/Src/bno055.c ****     /* Variable used to return value of
7130:Core/Src/bno055.c ****      * communication routine*/
7131:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8607              		.loc 1 7131 5 is_stmt 1 view .LVU2254
 8608              	.LVL898:
7132:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8609              		.loc 1 7132 5 view .LVU2255
 8610              		.loc 1 7132 8 is_stmt 0 view .LVU2256
 8611 0004 0023     		movs	r3, #0
 8612 0006 8DF80730 		strb	r3, [sp, #7]
7133:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8613              		.loc 1 7133 5 is_stmt 1 view .LVU2257
 8614              	.LVL899:
ARM GAS  /tmp/ccWoU29M.s 			page 284


7134:Core/Src/bno055.c **** 
7135:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7136:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8615              		.loc 1 7136 5 view .LVU2258
 8616              		.loc 1 7136 18 is_stmt 0 view .LVU2259
 8617 000a 134B     		ldr	r3, .L653
 8618 000c 1B68     		ldr	r3, [r3]
 8619              		.loc 1 7136 8 view .LVU2260
 8620 000e E3B1     		cbz	r3, .L649
 8621 0010 0446     		mov	r4, r0
7137:Core/Src/bno055.c ****     {
7138:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7139:Core/Src/bno055.c ****     }
7140:Core/Src/bno055.c ****     else
7141:Core/Src/bno055.c ****     {
7142:Core/Src/bno055.c ****         /*condition check for page, accel anymotion is
7143:Core/Src/bno055.c ****          * available in the page zero*/
7144:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8622              		.loc 1 7144 9 is_stmt 1 view .LVU2261
 8623              		.loc 1 7144 21 is_stmt 0 view .LVU2262
 8624 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8625              		.loc 1 7144 12 view .LVU2263
 8626 0014 9BB9     		cbnz	r3, .L652
 8627              	.LVL900:
 8628              	.L647:
7145:Core/Src/bno055.c ****         {
7146:Core/Src/bno055.c ****             /* Write the page zero*/
7147:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7148:Core/Src/bno055.c ****         }
7149:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8629              		.loc 1 7149 53 discriminator 1 view .LVU2264
 8630 0016 104B     		ldr	r3, .L653
 8631 0018 1B68     		ldr	r3, [r3]
 8632 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8633              		.loc 1 7149 41 discriminator 1 view .LVU2265
 8634 001c C3B9     		cbnz	r3, .L650
 8635              	.L648:
7150:Core/Src/bno055.c ****         {
7151:Core/Src/bno055.c ****             /* Read the accel anymotion interrupt stat_s8 */
7152:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8636              		.loc 1 7152 13 is_stmt 1 view .LVU2266
 8637              		.loc 1 7152 32 is_stmt 0 view .LVU2267
 8638 001e 0E4B     		ldr	r3, .L653
 8639 0020 1868     		ldr	r0, [r3]
 8640 0022 0569     		ldr	r5, [r0, #16]
 8641              		.loc 1 7152 24 view .LVU2268
 8642 0024 0123     		movs	r3, #1
 8643 0026 0DF10702 		add	r2, sp, #7
 8644 002a 3721     		movs	r1, #55
 8645 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8646 002e A847     		blx	r5
 8647              	.LVL901:
7153:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_ACCEL_ANY_MOTION_REG,
7154:Core/Src/bno055.c ****                                                       &data_u8r,
7155:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7156:Core/Src/bno055.c ****             *accel_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_ACCEL_ANY_MOTION)
 8648              		.loc 1 7156 13 is_stmt 1 view .LVU2269
ARM GAS  /tmp/ccWoU29M.s 			page 285


 8649              		.loc 1 7156 36 is_stmt 0 view .LVU2270
 8650 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8651 0034 C3F38013 		ubfx	r3, r3, #6, #1
 8652              		.loc 1 7156 34 view .LVU2271
 8653 0038 2370     		strb	r3, [r4]
 8654              	.LVL902:
 8655              	.L646:
7157:Core/Src/bno055.c ****         }
7158:Core/Src/bno055.c ****         else
7159:Core/Src/bno055.c ****         {
7160:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7161:Core/Src/bno055.c ****         }
7162:Core/Src/bno055.c ****     }
7163:Core/Src/bno055.c **** 
7164:Core/Src/bno055.c ****     return com_rslt;
7165:Core/Src/bno055.c **** }
 8656              		.loc 1 7165 1 view .LVU2272
 8657 003a 03B0     		add	sp, sp, #12
 8658              	.LCFI299:
 8659              		.cfi_remember_state
 8660              		.cfi_def_cfa_offset 12
 8661              		@ sp needed
 8662 003c 30BD     		pop	{r4, r5, pc}
 8663              	.LVL903:
 8664              	.L652:
 8665              	.LCFI300:
 8666              		.cfi_restore_state
7147:Core/Src/bno055.c ****         }
 8667              		.loc 1 7147 13 is_stmt 1 view .LVU2273
7147:Core/Src/bno055.c ****         }
 8668              		.loc 1 7147 23 is_stmt 0 view .LVU2274
 8669 003e 0020     		movs	r0, #0
 8670              	.LVL904:
7147:Core/Src/bno055.c ****         }
 8671              		.loc 1 7147 23 view .LVU2275
 8672 0040 FFF7FEFF 		bl	bno055_write_page_id
 8673              	.LVL905:
7149:Core/Src/bno055.c ****         {
 8674              		.loc 1 7149 9 is_stmt 1 view .LVU2276
7149:Core/Src/bno055.c ****         {
 8675              		.loc 1 7149 12 is_stmt 0 view .LVU2277
 8676 0044 0028     		cmp	r0, #0
 8677 0046 EAD0     		beq	.L648
 8678 0048 E5E7     		b	.L647
 8679              	.LVL906:
 8680              	.L649:
7138:Core/Src/bno055.c ****     }
 8681              		.loc 1 7138 16 view .LVU2278
 8682 004a 6FF07E00 		mvn	r0, #126
 8683              	.LVL907:
7138:Core/Src/bno055.c ****     }
 8684              		.loc 1 7138 16 view .LVU2279
 8685 004e F4E7     		b	.L646
 8686              	.LVL908:
 8687              	.L650:
7160:Core/Src/bno055.c ****         }
 8688              		.loc 1 7160 22 view .LVU2280
ARM GAS  /tmp/ccWoU29M.s 			page 286


 8689 0050 4FF0FF30 		mov	r0, #-1
 8690 0054 F1E7     		b	.L646
 8691              	.L654:
 8692 0056 00BF     		.align	2
 8693              	.L653:
 8694 0058 00000000 		.word	.LANCHOR0
 8695              		.cfi_endproc
 8696              	.LFE128:
 8698              		.section	.text.bno055_get_intr_stat_accel_no_motion,"ax",%progbits
 8699              		.align	1
 8700              		.global	bno055_get_intr_stat_accel_no_motion
 8701              		.syntax unified
 8702              		.thumb
 8703              		.thumb_func
 8704              		.fpu fpv4-sp-d16
 8706              	bno055_get_intr_stat_accel_no_motion:
 8707              	.LVL909:
 8708              	.LFB129:
7166:Core/Src/bno055.c **** 
7167:Core/Src/bno055.c **** /*!
7168:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
7169:Core/Src/bno055.c ****  *  accel nomotion/slowmotion interrupt from register from 0x37 bit 6
7170:Core/Src/bno055.c ****  *
7171:Core/Src/bno055.c ****  *  @param accel_no_motion_u8 : The value of accel
7172:Core/Src/bno055.c ****  *  nomotion/slowmotion interrupt
7173:Core/Src/bno055.c ****  *
7174:Core/Src/bno055.c ****  *     accel_no_motion_u8 |  result
7175:Core/Src/bno055.c ****  *    -------------------   | ---------------------
7176:Core/Src/bno055.c ****  *     0x00                 | indicates no interrupt triggered
7177:Core/Src/bno055.c ****  *     0x01                 | indicates interrupt triggered
7178:Core/Src/bno055.c ****  *
7179:Core/Src/bno055.c ****  *  @return results of bus communication function
7180:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7181:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7182:Core/Src/bno055.c ****  *
7183:Core/Src/bno055.c ****  *  @note Accel nomotion/slowmotion interrupt can be configured
7184:Core/Src/bno055.c ****  *          by the following APIs
7185:Core/Src/bno055.c ****  *
7186:Core/Src/bno055.c ****  *  bno055_set_intr_mask_accel_nomotion()
7187:Core/Src/bno055.c ****  *
7188:Core/Src/bno055.c ****  *  bno055_set_intr_accel_nomotion()
7189:Core/Src/bno055.c ****  */
7190:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_accel_no_motion(u8 *accel_no_motion_u8)
7191:Core/Src/bno055.c **** {
 8709              		.loc 1 7191 1 is_stmt 1 view -0
 8710              		.cfi_startproc
 8711              		@ args = 0, pretend = 0, frame = 8
 8712              		@ frame_needed = 0, uses_anonymous_args = 0
 8713              		.loc 1 7191 1 is_stmt 0 view .LVU2282
 8714 0000 30B5     		push	{r4, r5, lr}
 8715              	.LCFI301:
 8716              		.cfi_def_cfa_offset 12
 8717              		.cfi_offset 4, -12
 8718              		.cfi_offset 5, -8
 8719              		.cfi_offset 14, -4
 8720 0002 83B0     		sub	sp, sp, #12
 8721              	.LCFI302:
ARM GAS  /tmp/ccWoU29M.s 			page 287


 8722              		.cfi_def_cfa_offset 24
7192:Core/Src/bno055.c ****     /* Variable used to return value of
7193:Core/Src/bno055.c ****      * communication routine*/
7194:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8723              		.loc 1 7194 5 is_stmt 1 view .LVU2283
 8724              	.LVL910:
7195:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8725              		.loc 1 7195 5 view .LVU2284
 8726              		.loc 1 7195 8 is_stmt 0 view .LVU2285
 8727 0004 0023     		movs	r3, #0
 8728 0006 8DF80730 		strb	r3, [sp, #7]
7196:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8729              		.loc 1 7196 5 is_stmt 1 view .LVU2286
 8730              	.LVL911:
7197:Core/Src/bno055.c **** 
7198:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7199:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8731              		.loc 1 7199 5 view .LVU2287
 8732              		.loc 1 7199 18 is_stmt 0 view .LVU2288
 8733 000a 124B     		ldr	r3, .L663
 8734 000c 1B68     		ldr	r3, [r3]
 8735              		.loc 1 7199 8 view .LVU2289
 8736 000e DBB1     		cbz	r3, .L659
 8737 0010 0446     		mov	r4, r0
7200:Core/Src/bno055.c ****     {
7201:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7202:Core/Src/bno055.c ****     }
7203:Core/Src/bno055.c ****     else
7204:Core/Src/bno055.c ****     {
7205:Core/Src/bno055.c ****         /*condition check for page, accel
7206:Core/Src/bno055.c ****         * nomotion/slowmotion interrupt
7207:Core/Src/bno055.c ****         * is available in the page zero*/
7208:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8738              		.loc 1 7208 9 is_stmt 1 view .LVU2290
 8739              		.loc 1 7208 21 is_stmt 0 view .LVU2291
 8740 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8741              		.loc 1 7208 12 view .LVU2292
 8742 0014 93B9     		cbnz	r3, .L662
 8743              	.LVL912:
 8744              	.L657:
7209:Core/Src/bno055.c ****         {
7210:Core/Src/bno055.c ****             /* Write the page zero*/
7211:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7212:Core/Src/bno055.c ****         }
7213:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8745              		.loc 1 7213 53 discriminator 1 view .LVU2293
 8746 0016 0F4B     		ldr	r3, .L663
 8747 0018 1B68     		ldr	r3, [r3]
 8748 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8749              		.loc 1 7213 41 discriminator 1 view .LVU2294
 8750 001c BBB9     		cbnz	r3, .L660
 8751              	.L658:
7214:Core/Src/bno055.c ****         {
7215:Core/Src/bno055.c ****             /* Read the stat_s8 of accel
7216:Core/Src/bno055.c ****              * nomotion/slowmotion interrupt*/
7217:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8752              		.loc 1 7217 13 is_stmt 1 view .LVU2295
ARM GAS  /tmp/ccWoU29M.s 			page 288


 8753              		.loc 1 7217 32 is_stmt 0 view .LVU2296
 8754 001e 0D4B     		ldr	r3, .L663
 8755 0020 1868     		ldr	r0, [r3]
 8756 0022 0569     		ldr	r5, [r0, #16]
 8757              		.loc 1 7217 24 view .LVU2297
 8758 0024 0123     		movs	r3, #1
 8759 0026 0DF10702 		add	r2, sp, #7
 8760 002a 3721     		movs	r1, #55
 8761 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8762 002e A847     		blx	r5
 8763              	.LVL913:
7218:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_ACCEL_NO_MOTION_REG,
7219:Core/Src/bno055.c ****                                                       &data_u8r,
7220:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7221:Core/Src/bno055.c ****             *accel_no_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_ACCEL_NO_MOTION);
 8764              		.loc 1 7221 13 is_stmt 1 view .LVU2298
 8765              		.loc 1 7221 35 is_stmt 0 view .LVU2299
 8766 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8767 0034 DB09     		lsrs	r3, r3, #7
 8768              		.loc 1 7221 33 view .LVU2300
 8769 0036 2370     		strb	r3, [r4]
 8770              	.LVL914:
 8771              	.L656:
7222:Core/Src/bno055.c ****         }
7223:Core/Src/bno055.c ****         else
7224:Core/Src/bno055.c ****         {
7225:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7226:Core/Src/bno055.c ****         }
7227:Core/Src/bno055.c ****     }
7228:Core/Src/bno055.c **** 
7229:Core/Src/bno055.c ****     return com_rslt;
7230:Core/Src/bno055.c **** }
 8772              		.loc 1 7230 1 view .LVU2301
 8773 0038 03B0     		add	sp, sp, #12
 8774              	.LCFI303:
 8775              		.cfi_remember_state
 8776              		.cfi_def_cfa_offset 12
 8777              		@ sp needed
 8778 003a 30BD     		pop	{r4, r5, pc}
 8779              	.LVL915:
 8780              	.L662:
 8781              	.LCFI304:
 8782              		.cfi_restore_state
7211:Core/Src/bno055.c ****         }
 8783              		.loc 1 7211 13 is_stmt 1 view .LVU2302
7211:Core/Src/bno055.c ****         }
 8784              		.loc 1 7211 23 is_stmt 0 view .LVU2303
 8785 003c 0020     		movs	r0, #0
 8786              	.LVL916:
7211:Core/Src/bno055.c ****         }
 8787              		.loc 1 7211 23 view .LVU2304
 8788 003e FFF7FEFF 		bl	bno055_write_page_id
 8789              	.LVL917:
7213:Core/Src/bno055.c ****         {
 8790              		.loc 1 7213 9 is_stmt 1 view .LVU2305
7213:Core/Src/bno055.c ****         {
 8791              		.loc 1 7213 12 is_stmt 0 view .LVU2306
ARM GAS  /tmp/ccWoU29M.s 			page 289


 8792 0042 0028     		cmp	r0, #0
 8793 0044 EBD0     		beq	.L658
 8794 0046 E6E7     		b	.L657
 8795              	.LVL918:
 8796              	.L659:
7201:Core/Src/bno055.c ****     }
 8797              		.loc 1 7201 16 view .LVU2307
 8798 0048 6FF07E00 		mvn	r0, #126
 8799              	.LVL919:
7201:Core/Src/bno055.c ****     }
 8800              		.loc 1 7201 16 view .LVU2308
 8801 004c F4E7     		b	.L656
 8802              	.LVL920:
 8803              	.L660:
7225:Core/Src/bno055.c ****         }
 8804              		.loc 1 7225 22 view .LVU2309
 8805 004e 4FF0FF30 		mov	r0, #-1
 8806 0052 F1E7     		b	.L656
 8807              	.L664:
 8808              		.align	2
 8809              	.L663:
 8810 0054 00000000 		.word	.LANCHOR0
 8811              		.cfi_endproc
 8812              	.LFE129:
 8814              		.section	.text.bno055_get_stat_main_clk,"ax",%progbits
 8815              		.align	1
 8816              		.global	bno055_get_stat_main_clk
 8817              		.syntax unified
 8818              		.thumb
 8819              		.thumb_func
 8820              		.fpu fpv4-sp-d16
 8822              	bno055_get_stat_main_clk:
 8823              	.LVL921:
 8824              	.LFB130:
7231:Core/Src/bno055.c **** 
7232:Core/Src/bno055.c **** /*!
7233:Core/Src/bno055.c ****  *  @brief This API is used to read status of main clock
7234:Core/Src/bno055.c ****  *  from the register 0x38 bit 0
7235:Core/Src/bno055.c ****  *
7236:Core/Src/bno055.c ****  *  @param stat_main_clk_u8 : the status of main clock
7237:Core/Src/bno055.c ****  *
7238:Core/Src/bno055.c ****  *
7239:Core/Src/bno055.c ****  *  @return results of bus communication function
7240:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7241:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7242:Core/Src/bno055.c ****  *
7243:Core/Src/bno055.c ****  */
7244:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_stat_main_clk(u8 *stat_main_clk_u8)
7245:Core/Src/bno055.c **** {
 8825              		.loc 1 7245 1 is_stmt 1 view -0
 8826              		.cfi_startproc
 8827              		@ args = 0, pretend = 0, frame = 8
 8828              		@ frame_needed = 0, uses_anonymous_args = 0
 8829              		.loc 1 7245 1 is_stmt 0 view .LVU2311
 8830 0000 30B5     		push	{r4, r5, lr}
 8831              	.LCFI305:
 8832              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccWoU29M.s 			page 290


 8833              		.cfi_offset 4, -12
 8834              		.cfi_offset 5, -8
 8835              		.cfi_offset 14, -4
 8836 0002 83B0     		sub	sp, sp, #12
 8837              	.LCFI306:
 8838              		.cfi_def_cfa_offset 24
7246:Core/Src/bno055.c ****     /* Variable used to return value of
7247:Core/Src/bno055.c ****      * communication routine*/
7248:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8839              		.loc 1 7248 5 is_stmt 1 view .LVU2312
 8840              	.LVL922:
7249:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8841              		.loc 1 7249 5 view .LVU2313
 8842              		.loc 1 7249 8 is_stmt 0 view .LVU2314
 8843 0004 0023     		movs	r3, #0
 8844 0006 8DF80730 		strb	r3, [sp, #7]
7250:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8845              		.loc 1 7250 5 is_stmt 1 view .LVU2315
 8846              	.LVL923:
7251:Core/Src/bno055.c **** 
7252:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7253:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8847              		.loc 1 7253 5 view .LVU2316
 8848              		.loc 1 7253 18 is_stmt 0 view .LVU2317
 8849 000a 134B     		ldr	r3, .L673
 8850 000c 1B68     		ldr	r3, [r3]
 8851              		.loc 1 7253 8 view .LVU2318
 8852 000e E3B1     		cbz	r3, .L669
 8853 0010 0446     		mov	r4, r0
7254:Core/Src/bno055.c ****     {
7255:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7256:Core/Src/bno055.c ****     }
7257:Core/Src/bno055.c ****     else
7258:Core/Src/bno055.c ****     {
7259:Core/Src/bno055.c ****         /*condition check for page, status of main clk is
7260:Core/Src/bno055.c ****          * available in the page zero*/
7261:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8854              		.loc 1 7261 9 is_stmt 1 view .LVU2319
 8855              		.loc 1 7261 21 is_stmt 0 view .LVU2320
 8856 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8857              		.loc 1 7261 12 view .LVU2321
 8858 0014 9BB9     		cbnz	r3, .L672
 8859              	.LVL924:
 8860              	.L667:
7262:Core/Src/bno055.c ****         {
7263:Core/Src/bno055.c ****             /* Write the page zero*/
7264:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7265:Core/Src/bno055.c ****         }
7266:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8861              		.loc 1 7266 53 discriminator 1 view .LVU2322
 8862 0016 104B     		ldr	r3, .L673
 8863 0018 1B68     		ldr	r3, [r3]
 8864 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8865              		.loc 1 7266 41 discriminator 1 view .LVU2323
 8866 001c C3B9     		cbnz	r3, .L670
 8867              	.L668:
7267:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 291


7268:Core/Src/bno055.c ****             /* Read the status of main clk */
7269:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8868              		.loc 1 7269 13 is_stmt 1 view .LVU2324
 8869              		.loc 1 7269 32 is_stmt 0 view .LVU2325
 8870 001e 0E4B     		ldr	r3, .L673
 8871 0020 1868     		ldr	r0, [r3]
 8872 0022 0569     		ldr	r5, [r0, #16]
 8873              		.loc 1 7269 24 view .LVU2326
 8874 0024 0123     		movs	r3, #1
 8875 0026 0DF10702 		add	r2, sp, #7
 8876 002a 3821     		movs	r1, #56
 8877 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8878 002e A847     		blx	r5
 8879              	.LVL925:
7270:Core/Src/bno055.c ****                                                       BNO055_SYS_MAIN_CLK_REG,
7271:Core/Src/bno055.c ****                                                       &data_u8r,
7272:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7273:Core/Src/bno055.c ****             *stat_main_clk_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_MAIN_CLK);
 8880              		.loc 1 7273 13 is_stmt 1 view .LVU2327
 8881              		.loc 1 7273 33 is_stmt 0 view .LVU2328
 8882 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8883 0034 03F01003 		and	r3, r3, #16
 8884              		.loc 1 7273 31 view .LVU2329
 8885 0038 2370     		strb	r3, [r4]
 8886              	.LVL926:
 8887              	.L666:
7274:Core/Src/bno055.c ****         }
7275:Core/Src/bno055.c ****         else
7276:Core/Src/bno055.c ****         {
7277:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7278:Core/Src/bno055.c ****         }
7279:Core/Src/bno055.c ****     }
7280:Core/Src/bno055.c **** 
7281:Core/Src/bno055.c ****     return com_rslt;
7282:Core/Src/bno055.c **** }
 8888              		.loc 1 7282 1 view .LVU2330
 8889 003a 03B0     		add	sp, sp, #12
 8890              	.LCFI307:
 8891              		.cfi_remember_state
 8892              		.cfi_def_cfa_offset 12
 8893              		@ sp needed
 8894 003c 30BD     		pop	{r4, r5, pc}
 8895              	.LVL927:
 8896              	.L672:
 8897              	.LCFI308:
 8898              		.cfi_restore_state
7264:Core/Src/bno055.c ****         }
 8899              		.loc 1 7264 13 is_stmt 1 view .LVU2331
7264:Core/Src/bno055.c ****         }
 8900              		.loc 1 7264 23 is_stmt 0 view .LVU2332
 8901 003e 0020     		movs	r0, #0
 8902              	.LVL928:
7264:Core/Src/bno055.c ****         }
 8903              		.loc 1 7264 23 view .LVU2333
 8904 0040 FFF7FEFF 		bl	bno055_write_page_id
 8905              	.LVL929:
7266:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 292


 8906              		.loc 1 7266 9 is_stmt 1 view .LVU2334
7266:Core/Src/bno055.c ****         {
 8907              		.loc 1 7266 12 is_stmt 0 view .LVU2335
 8908 0044 0028     		cmp	r0, #0
 8909 0046 EAD0     		beq	.L668
 8910 0048 E5E7     		b	.L667
 8911              	.LVL930:
 8912              	.L669:
7255:Core/Src/bno055.c ****     }
 8913              		.loc 1 7255 16 view .LVU2336
 8914 004a 6FF07E00 		mvn	r0, #126
 8915              	.LVL931:
7255:Core/Src/bno055.c ****     }
 8916              		.loc 1 7255 16 view .LVU2337
 8917 004e F4E7     		b	.L666
 8918              	.LVL932:
 8919              	.L670:
7277:Core/Src/bno055.c ****         }
 8920              		.loc 1 7277 22 view .LVU2338
 8921 0050 4FF0FF30 		mov	r0, #-1
 8922 0054 F1E7     		b	.L666
 8923              	.L674:
 8924 0056 00BF     		.align	2
 8925              	.L673:
 8926 0058 00000000 		.word	.LANCHOR0
 8927              		.cfi_endproc
 8928              	.LFE130:
 8930              		.section	.text.bno055_get_sys_stat_code,"ax",%progbits
 8931              		.align	1
 8932              		.global	bno055_get_sys_stat_code
 8933              		.syntax unified
 8934              		.thumb
 8935              		.thumb_func
 8936              		.fpu fpv4-sp-d16
 8938              	bno055_get_sys_stat_code:
 8939              	.LVL933:
 8940              	.LFB131:
7283:Core/Src/bno055.c **** 
7284:Core/Src/bno055.c **** /*!
7285:Core/Src/bno055.c ****  *  @brief This API is used to read system status
7286:Core/Src/bno055.c ****  *  code from the register 0x39 it is a byte of data
7287:Core/Src/bno055.c ****  *
7288:Core/Src/bno055.c ****  *  @param sys_stat_u8 : the status of system
7289:Core/Src/bno055.c ****  *
7290:Core/Src/bno055.c ****  *
7291:Core/Src/bno055.c ****  *  @return results of bus communication function
7292:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7293:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7294:Core/Src/bno055.c ****  *
7295:Core/Src/bno055.c ****  */
7296:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_sys_stat_code(u8 *sys_stat_u8)
7297:Core/Src/bno055.c **** {
 8941              		.loc 1 7297 1 is_stmt 1 view -0
 8942              		.cfi_startproc
 8943              		@ args = 0, pretend = 0, frame = 8
 8944              		@ frame_needed = 0, uses_anonymous_args = 0
 8945              		.loc 1 7297 1 is_stmt 0 view .LVU2340
ARM GAS  /tmp/ccWoU29M.s 			page 293


 8946 0000 70B5     		push	{r4, r5, r6, lr}
 8947              	.LCFI309:
 8948              		.cfi_def_cfa_offset 16
 8949              		.cfi_offset 4, -16
 8950              		.cfi_offset 5, -12
 8951              		.cfi_offset 6, -8
 8952              		.cfi_offset 14, -4
 8953 0002 82B0     		sub	sp, sp, #8
 8954              	.LCFI310:
 8955              		.cfi_def_cfa_offset 24
7298:Core/Src/bno055.c ****     /* Variable used to return value of
7299:Core/Src/bno055.c ****      * communication routine*/
7300:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8956              		.loc 1 7300 5 is_stmt 1 view .LVU2341
 8957              	.LVL934:
7301:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8958              		.loc 1 7301 5 view .LVU2342
 8959              		.loc 1 7301 8 is_stmt 0 view .LVU2343
 8960 0004 0023     		movs	r3, #0
 8961 0006 8DF80730 		strb	r3, [sp, #7]
7302:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8962              		.loc 1 7302 5 is_stmt 1 view .LVU2344
 8963              	.LVL935:
7303:Core/Src/bno055.c **** 
7304:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7305:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8964              		.loc 1 7305 5 view .LVU2345
 8965              		.loc 1 7305 18 is_stmt 0 view .LVU2346
 8966 000a 124B     		ldr	r3, .L683
 8967 000c 1B68     		ldr	r3, [r3]
 8968              		.loc 1 7305 8 view .LVU2347
 8969 000e D3B1     		cbz	r3, .L679
 8970 0010 0546     		mov	r5, r0
7306:Core/Src/bno055.c ****     {
7307:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7308:Core/Src/bno055.c ****     }
7309:Core/Src/bno055.c ****     else
7310:Core/Src/bno055.c ****     {
7311:Core/Src/bno055.c ****         /*condition check for page, the status of system is
7312:Core/Src/bno055.c ****          * available in the page zero*/
7313:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8971              		.loc 1 7313 9 is_stmt 1 view .LVU2348
 8972              		.loc 1 7313 21 is_stmt 0 view .LVU2349
 8973 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8974              		.loc 1 7313 12 view .LVU2350
 8975 0014 8BB9     		cbnz	r3, .L682
 8976              	.LVL936:
 8977              	.L677:
7314:Core/Src/bno055.c ****         {
7315:Core/Src/bno055.c ****             /* Write the page zero*/
7316:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7317:Core/Src/bno055.c ****         }
7318:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8978              		.loc 1 7318 53 discriminator 1 view .LVU2351
 8979 0016 0F4B     		ldr	r3, .L683
 8980 0018 1B68     		ldr	r3, [r3]
 8981 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 294


 8982              		.loc 1 7318 41 discriminator 1 view .LVU2352
 8983 001c B3B9     		cbnz	r3, .L680
 8984              	.L678:
7319:Core/Src/bno055.c ****         {
7320:Core/Src/bno055.c ****             /* Read the the status of system*/
7321:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8985              		.loc 1 7321 13 is_stmt 1 view .LVU2353
 8986              		.loc 1 7321 32 is_stmt 0 view .LVU2354
 8987 001e 0D4B     		ldr	r3, .L683
 8988 0020 1C68     		ldr	r4, [r3]
 8989 0022 2669     		ldr	r6, [r4, #16]
 8990              		.loc 1 7321 24 view .LVU2355
 8991 0024 0123     		movs	r3, #1
 8992 0026 0DF10702 		add	r2, sp, #7
 8993 002a 3921     		movs	r1, #57
 8994 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 8995 002e B047     		blx	r6
 8996              	.LVL937:
7322:Core/Src/bno055.c ****                                                       BNO055_SYS_STAT_CODE_REG,
7323:Core/Src/bno055.c ****                                                       &data_u8r,
7324:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7325:Core/Src/bno055.c ****             *sys_stat_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_STAT_CODE);
 8997              		.loc 1 7325 13 is_stmt 1 view .LVU2356
 8998              		.loc 1 7325 26 is_stmt 0 view .LVU2357
 8999 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9000 0034 2B70     		strb	r3, [r5]
 9001              	.LVL938:
 9002              	.L676:
7326:Core/Src/bno055.c ****         }
7327:Core/Src/bno055.c ****         else
7328:Core/Src/bno055.c ****         {
7329:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7330:Core/Src/bno055.c ****         }
7331:Core/Src/bno055.c ****     }
7332:Core/Src/bno055.c **** 
7333:Core/Src/bno055.c ****     return com_rslt;
7334:Core/Src/bno055.c **** }
 9003              		.loc 1 7334 1 view .LVU2358
 9004 0036 02B0     		add	sp, sp, #8
 9005              	.LCFI311:
 9006              		.cfi_remember_state
 9007              		.cfi_def_cfa_offset 16
 9008              		@ sp needed
 9009 0038 70BD     		pop	{r4, r5, r6, pc}
 9010              	.LVL939:
 9011              	.L682:
 9012              	.LCFI312:
 9013              		.cfi_restore_state
7316:Core/Src/bno055.c ****         }
 9014              		.loc 1 7316 13 is_stmt 1 view .LVU2359
7316:Core/Src/bno055.c ****         }
 9015              		.loc 1 7316 23 is_stmt 0 view .LVU2360
 9016 003a 0020     		movs	r0, #0
 9017              	.LVL940:
7316:Core/Src/bno055.c ****         }
 9018              		.loc 1 7316 23 view .LVU2361
 9019 003c FFF7FEFF 		bl	bno055_write_page_id
ARM GAS  /tmp/ccWoU29M.s 			page 295


 9020              	.LVL941:
7318:Core/Src/bno055.c ****         {
 9021              		.loc 1 7318 9 is_stmt 1 view .LVU2362
7318:Core/Src/bno055.c ****         {
 9022              		.loc 1 7318 12 is_stmt 0 view .LVU2363
 9023 0040 0028     		cmp	r0, #0
 9024 0042 ECD0     		beq	.L678
 9025 0044 E7E7     		b	.L677
 9026              	.LVL942:
 9027              	.L679:
7307:Core/Src/bno055.c ****     }
 9028              		.loc 1 7307 16 view .LVU2364
 9029 0046 6FF07E00 		mvn	r0, #126
 9030              	.LVL943:
7307:Core/Src/bno055.c ****     }
 9031              		.loc 1 7307 16 view .LVU2365
 9032 004a F4E7     		b	.L676
 9033              	.LVL944:
 9034              	.L680:
7329:Core/Src/bno055.c ****         }
 9035              		.loc 1 7329 22 view .LVU2366
 9036 004c 4FF0FF30 		mov	r0, #-1
 9037 0050 F1E7     		b	.L676
 9038              	.L684:
 9039 0052 00BF     		.align	2
 9040              	.L683:
 9041 0054 00000000 		.word	.LANCHOR0
 9042              		.cfi_endproc
 9043              	.LFE131:
 9045              		.section	.text.bno055_get_sys_error_code,"ax",%progbits
 9046              		.align	1
 9047              		.global	bno055_get_sys_error_code
 9048              		.syntax unified
 9049              		.thumb
 9050              		.thumb_func
 9051              		.fpu fpv4-sp-d16
 9053              	bno055_get_sys_error_code:
 9054              	.LVL945:
 9055              	.LFB132:
7335:Core/Src/bno055.c **** 
7336:Core/Src/bno055.c **** /*!
7337:Core/Src/bno055.c ****  *  @brief This API is used to read system BNO055_ERROR
7338:Core/Src/bno055.c ****  *  code from the register 0x3A it is a byte of data
7339:Core/Src/bno055.c ****  *
7340:Core/Src/bno055.c ****  *  @param sys_error_u8 : The value of system BNO055_ERROR code
7341:Core/Src/bno055.c ****  *
7342:Core/Src/bno055.c ****  *
7343:Core/Src/bno055.c ****  *  @return results of bus communication function
7344:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7345:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7346:Core/Src/bno055.c ****  *
7347:Core/Src/bno055.c ****  *
7348:Core/Src/bno055.c ****  */
7349:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_sys_error_code(u8 *sys_error_u8)
7350:Core/Src/bno055.c **** {
 9056              		.loc 1 7350 1 is_stmt 1 view -0
 9057              		.cfi_startproc
ARM GAS  /tmp/ccWoU29M.s 			page 296


 9058              		@ args = 0, pretend = 0, frame = 8
 9059              		@ frame_needed = 0, uses_anonymous_args = 0
 9060              		.loc 1 7350 1 is_stmt 0 view .LVU2368
 9061 0000 70B5     		push	{r4, r5, r6, lr}
 9062              	.LCFI313:
 9063              		.cfi_def_cfa_offset 16
 9064              		.cfi_offset 4, -16
 9065              		.cfi_offset 5, -12
 9066              		.cfi_offset 6, -8
 9067              		.cfi_offset 14, -4
 9068 0002 82B0     		sub	sp, sp, #8
 9069              	.LCFI314:
 9070              		.cfi_def_cfa_offset 24
7351:Core/Src/bno055.c ****     /* Variable used to return value of
7352:Core/Src/bno055.c ****      * communication routine*/
7353:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9071              		.loc 1 7353 5 is_stmt 1 view .LVU2369
 9072              	.LVL946:
7354:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9073              		.loc 1 7354 5 view .LVU2370
 9074              		.loc 1 7354 8 is_stmt 0 view .LVU2371
 9075 0004 0023     		movs	r3, #0
 9076 0006 8DF80730 		strb	r3, [sp, #7]
7355:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9077              		.loc 1 7355 5 is_stmt 1 view .LVU2372
 9078              	.LVL947:
7356:Core/Src/bno055.c **** 
7357:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7358:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9079              		.loc 1 7358 5 view .LVU2373
 9080              		.loc 1 7358 18 is_stmt 0 view .LVU2374
 9081 000a 124B     		ldr	r3, .L693
 9082 000c 1B68     		ldr	r3, [r3]
 9083              		.loc 1 7358 8 view .LVU2375
 9084 000e D3B1     		cbz	r3, .L689
 9085 0010 0546     		mov	r5, r0
7359:Core/Src/bno055.c ****     {
7360:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7361:Core/Src/bno055.c ****     }
7362:Core/Src/bno055.c ****     else
7363:Core/Src/bno055.c ****     {
7364:Core/Src/bno055.c ****         /*condition check for page, system BNO055_ERROR code is
7365:Core/Src/bno055.c ****          * available in the page zero*/
7366:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9086              		.loc 1 7366 9 is_stmt 1 view .LVU2376
 9087              		.loc 1 7366 21 is_stmt 0 view .LVU2377
 9088 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9089              		.loc 1 7366 12 view .LVU2378
 9090 0014 8BB9     		cbnz	r3, .L692
 9091              	.LVL948:
 9092              	.L687:
7367:Core/Src/bno055.c ****         {
7368:Core/Src/bno055.c ****             /* Write the page zero*/
7369:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7370:Core/Src/bno055.c ****         }
7371:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9093              		.loc 1 7371 53 discriminator 1 view .LVU2379
ARM GAS  /tmp/ccWoU29M.s 			page 297


 9094 0016 0F4B     		ldr	r3, .L693
 9095 0018 1B68     		ldr	r3, [r3]
 9096 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9097              		.loc 1 7371 41 discriminator 1 view .LVU2380
 9098 001c B3B9     		cbnz	r3, .L690
 9099              	.L688:
7372:Core/Src/bno055.c ****         {
7373:Core/Src/bno055.c ****             /* Read the system BNO055_ERROR code*/
7374:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9100              		.loc 1 7374 13 is_stmt 1 view .LVU2381
 9101              		.loc 1 7374 32 is_stmt 0 view .LVU2382
 9102 001e 0D4B     		ldr	r3, .L693
 9103 0020 1C68     		ldr	r4, [r3]
 9104 0022 2669     		ldr	r6, [r4, #16]
 9105              		.loc 1 7374 24 view .LVU2383
 9106 0024 0123     		movs	r3, #1
 9107 0026 0DF10702 		add	r2, sp, #7
 9108 002a 3A21     		movs	r1, #58
 9109 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 9110 002e B047     		blx	r6
 9111              	.LVL949:
7375:Core/Src/bno055.c ****                                                       BNO055_SYS_ERROR_CODE_REG,
7376:Core/Src/bno055.c ****                                                       &data_u8r,
7377:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7378:Core/Src/bno055.c ****             *sys_error_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_ERROR_CODE);
 9112              		.loc 1 7378 13 is_stmt 1 view .LVU2384
 9113              		.loc 1 7378 27 is_stmt 0 view .LVU2385
 9114 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9115 0034 2B70     		strb	r3, [r5]
 9116              	.LVL950:
 9117              	.L686:
7379:Core/Src/bno055.c ****         }
7380:Core/Src/bno055.c ****         else
7381:Core/Src/bno055.c ****         {
7382:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7383:Core/Src/bno055.c ****         }
7384:Core/Src/bno055.c ****     }
7385:Core/Src/bno055.c **** 
7386:Core/Src/bno055.c ****     return com_rslt;
7387:Core/Src/bno055.c **** }
 9118              		.loc 1 7387 1 view .LVU2386
 9119 0036 02B0     		add	sp, sp, #8
 9120              	.LCFI315:
 9121              		.cfi_remember_state
 9122              		.cfi_def_cfa_offset 16
 9123              		@ sp needed
 9124 0038 70BD     		pop	{r4, r5, r6, pc}
 9125              	.LVL951:
 9126              	.L692:
 9127              	.LCFI316:
 9128              		.cfi_restore_state
7369:Core/Src/bno055.c ****         }
 9129              		.loc 1 7369 13 is_stmt 1 view .LVU2387
7369:Core/Src/bno055.c ****         }
 9130              		.loc 1 7369 23 is_stmt 0 view .LVU2388
 9131 003a 0020     		movs	r0, #0
 9132              	.LVL952:
ARM GAS  /tmp/ccWoU29M.s 			page 298


7369:Core/Src/bno055.c ****         }
 9133              		.loc 1 7369 23 view .LVU2389
 9134 003c FFF7FEFF 		bl	bno055_write_page_id
 9135              	.LVL953:
7371:Core/Src/bno055.c ****         {
 9136              		.loc 1 7371 9 is_stmt 1 view .LVU2390
7371:Core/Src/bno055.c ****         {
 9137              		.loc 1 7371 12 is_stmt 0 view .LVU2391
 9138 0040 0028     		cmp	r0, #0
 9139 0042 ECD0     		beq	.L688
 9140 0044 E7E7     		b	.L687
 9141              	.LVL954:
 9142              	.L689:
7360:Core/Src/bno055.c ****     }
 9143              		.loc 1 7360 16 view .LVU2392
 9144 0046 6FF07E00 		mvn	r0, #126
 9145              	.LVL955:
7360:Core/Src/bno055.c ****     }
 9146              		.loc 1 7360 16 view .LVU2393
 9147 004a F4E7     		b	.L686
 9148              	.LVL956:
 9149              	.L690:
7382:Core/Src/bno055.c ****         }
 9150              		.loc 1 7382 22 view .LVU2394
 9151 004c 4FF0FF30 		mov	r0, #-1
 9152 0050 F1E7     		b	.L686
 9153              	.L694:
 9154 0052 00BF     		.align	2
 9155              	.L693:
 9156 0054 00000000 		.word	.LANCHOR0
 9157              		.cfi_endproc
 9158              	.LFE132:
 9160              		.section	.text.bno055_get_accel_unit,"ax",%progbits
 9161              		.align	1
 9162              		.global	bno055_get_accel_unit
 9163              		.syntax unified
 9164              		.thumb
 9165              		.thumb_func
 9166              		.fpu fpv4-sp-d16
 9168              	bno055_get_accel_unit:
 9169              	.LVL957:
 9170              	.LFB133:
7388:Core/Src/bno055.c **** 
7389:Core/Src/bno055.c **** /*!
7390:Core/Src/bno055.c ****  *  @brief This API used to read the accel unit
7391:Core/Src/bno055.c ****  *  from register from 0x3B bit 0
7392:Core/Src/bno055.c ****  *
7393:Core/Src/bno055.c ****  *  @param accel_unit_u8 : The value of accel unit
7394:Core/Src/bno055.c ****  *
7395:Core/Src/bno055.c ****  *    accel_unit_u8 |   result
7396:Core/Src/bno055.c ****  *   -------------    | ---------------
7397:Core/Src/bno055.c ****  *        0x00        | BNO055_ACCEL_UNIT_MSQ
7398:Core/Src/bno055.c ****  *        0x01        | BNO055_ACCEL_UNIT_MG
7399:Core/Src/bno055.c ****  *
7400:Core/Src/bno055.c ****  *  @return results of bus communication function
7401:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7402:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
ARM GAS  /tmp/ccWoU29M.s 			page 299


7403:Core/Src/bno055.c ****  *
7404:Core/Src/bno055.c ****  */
7405:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_unit(u8 *accel_unit_u8)
7406:Core/Src/bno055.c **** {
 9171              		.loc 1 7406 1 is_stmt 1 view -0
 9172              		.cfi_startproc
 9173              		@ args = 0, pretend = 0, frame = 8
 9174              		@ frame_needed = 0, uses_anonymous_args = 0
 9175              		.loc 1 7406 1 is_stmt 0 view .LVU2396
 9176 0000 30B5     		push	{r4, r5, lr}
 9177              	.LCFI317:
 9178              		.cfi_def_cfa_offset 12
 9179              		.cfi_offset 4, -12
 9180              		.cfi_offset 5, -8
 9181              		.cfi_offset 14, -4
 9182 0002 83B0     		sub	sp, sp, #12
 9183              	.LCFI318:
 9184              		.cfi_def_cfa_offset 24
7407:Core/Src/bno055.c ****     /* Variable used to return value of
7408:Core/Src/bno055.c ****      * communication routine*/
7409:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9185              		.loc 1 7409 5 is_stmt 1 view .LVU2397
 9186              	.LVL958:
7410:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9187              		.loc 1 7410 5 view .LVU2398
 9188              		.loc 1 7410 8 is_stmt 0 view .LVU2399
 9189 0004 0023     		movs	r3, #0
 9190 0006 8DF80730 		strb	r3, [sp, #7]
7411:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9191              		.loc 1 7411 5 is_stmt 1 view .LVU2400
 9192              	.LVL959:
7412:Core/Src/bno055.c **** 
7413:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7414:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9193              		.loc 1 7414 5 view .LVU2401
 9194              		.loc 1 7414 18 is_stmt 0 view .LVU2402
 9195 000a 134B     		ldr	r3, .L703
 9196 000c 1B68     		ldr	r3, [r3]
 9197              		.loc 1 7414 8 view .LVU2403
 9198 000e E3B1     		cbz	r3, .L699
 9199 0010 0446     		mov	r4, r0
7415:Core/Src/bno055.c ****     {
7416:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7417:Core/Src/bno055.c ****     }
7418:Core/Src/bno055.c ****     else
7419:Core/Src/bno055.c ****     {
7420:Core/Src/bno055.c ****         /*condition check for page, accel unit is
7421:Core/Src/bno055.c ****          * available in the page zero*/
7422:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9200              		.loc 1 7422 9 is_stmt 1 view .LVU2404
 9201              		.loc 1 7422 21 is_stmt 0 view .LVU2405
 9202 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9203              		.loc 1 7422 12 view .LVU2406
 9204 0014 9BB9     		cbnz	r3, .L702
 9205              	.LVL960:
 9206              	.L697:
7423:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 300


7424:Core/Src/bno055.c ****             /* Write the page zero*/
7425:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7426:Core/Src/bno055.c ****         }
7427:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9207              		.loc 1 7427 53 discriminator 1 view .LVU2407
 9208 0016 104B     		ldr	r3, .L703
 9209 0018 1B68     		ldr	r3, [r3]
 9210 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9211              		.loc 1 7427 41 discriminator 1 view .LVU2408
 9212 001c C3B9     		cbnz	r3, .L700
 9213              	.L698:
7428:Core/Src/bno055.c ****         {
7429:Core/Src/bno055.c ****             /* Read the accel unit */
7430:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9214              		.loc 1 7430 13 is_stmt 1 view .LVU2409
 9215              		.loc 1 7430 32 is_stmt 0 view .LVU2410
 9216 001e 0E4B     		ldr	r3, .L703
 9217 0020 1868     		ldr	r0, [r3]
 9218 0022 0569     		ldr	r5, [r0, #16]
 9219              		.loc 1 7430 24 view .LVU2411
 9220 0024 0123     		movs	r3, #1
 9221 0026 0DF10702 		add	r2, sp, #7
 9222 002a 3B21     		movs	r1, #59
 9223 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9224 002e A847     		blx	r5
 9225              	.LVL961:
7431:Core/Src/bno055.c ****                                                       BNO055_ACCEL_UNIT_REG,
7432:Core/Src/bno055.c ****                                                       &data_u8r,
7433:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7434:Core/Src/bno055.c ****             *accel_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_UNIT);
 9226              		.loc 1 7434 13 is_stmt 1 view .LVU2412
 9227              		.loc 1 7434 30 is_stmt 0 view .LVU2413
 9228 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9229 0034 03F00103 		and	r3, r3, #1
 9230              		.loc 1 7434 28 view .LVU2414
 9231 0038 2370     		strb	r3, [r4]
 9232              	.LVL962:
 9233              	.L696:
7435:Core/Src/bno055.c ****         }
7436:Core/Src/bno055.c ****         else
7437:Core/Src/bno055.c ****         {
7438:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7439:Core/Src/bno055.c ****         }
7440:Core/Src/bno055.c ****     }
7441:Core/Src/bno055.c **** 
7442:Core/Src/bno055.c ****     return com_rslt;
7443:Core/Src/bno055.c **** }
 9234              		.loc 1 7443 1 view .LVU2415
 9235 003a 03B0     		add	sp, sp, #12
 9236              	.LCFI319:
 9237              		.cfi_remember_state
 9238              		.cfi_def_cfa_offset 12
 9239              		@ sp needed
 9240 003c 30BD     		pop	{r4, r5, pc}
 9241              	.LVL963:
 9242              	.L702:
 9243              	.LCFI320:
ARM GAS  /tmp/ccWoU29M.s 			page 301


 9244              		.cfi_restore_state
7425:Core/Src/bno055.c ****         }
 9245              		.loc 1 7425 13 is_stmt 1 view .LVU2416
7425:Core/Src/bno055.c ****         }
 9246              		.loc 1 7425 23 is_stmt 0 view .LVU2417
 9247 003e 0020     		movs	r0, #0
 9248              	.LVL964:
7425:Core/Src/bno055.c ****         }
 9249              		.loc 1 7425 23 view .LVU2418
 9250 0040 FFF7FEFF 		bl	bno055_write_page_id
 9251              	.LVL965:
7427:Core/Src/bno055.c ****         {
 9252              		.loc 1 7427 9 is_stmt 1 view .LVU2419
7427:Core/Src/bno055.c ****         {
 9253              		.loc 1 7427 12 is_stmt 0 view .LVU2420
 9254 0044 0028     		cmp	r0, #0
 9255 0046 EAD0     		beq	.L698
 9256 0048 E5E7     		b	.L697
 9257              	.LVL966:
 9258              	.L699:
7416:Core/Src/bno055.c ****     }
 9259              		.loc 1 7416 16 view .LVU2421
 9260 004a 6FF07E00 		mvn	r0, #126
 9261              	.LVL967:
7416:Core/Src/bno055.c ****     }
 9262              		.loc 1 7416 16 view .LVU2422
 9263 004e F4E7     		b	.L696
 9264              	.LVL968:
 9265              	.L700:
7438:Core/Src/bno055.c ****         }
 9266              		.loc 1 7438 22 view .LVU2423
 9267 0050 4FF0FF30 		mov	r0, #-1
 9268 0054 F1E7     		b	.L696
 9269              	.L704:
 9270 0056 00BF     		.align	2
 9271              	.L703:
 9272 0058 00000000 		.word	.LANCHOR0
 9273              		.cfi_endproc
 9274              	.LFE133:
 9276              		.section	.text.bno055_get_gyro_unit,"ax",%progbits
 9277              		.align	1
 9278              		.global	bno055_get_gyro_unit
 9279              		.syntax unified
 9280              		.thumb
 9281              		.thumb_func
 9282              		.fpu fpv4-sp-d16
 9284              	bno055_get_gyro_unit:
 9285              	.LVL969:
 9286              	.LFB135:
7444:Core/Src/bno055.c **** 
7445:Core/Src/bno055.c **** /*!
7446:Core/Src/bno055.c ****  *  @brief This API used to write the accel unit
7447:Core/Src/bno055.c ****  *  from register from 0x3B bit 0
7448:Core/Src/bno055.c ****  *
7449:Core/Src/bno055.c ****  *  @param accel_unit_u8 : The value of accel unit
7450:Core/Src/bno055.c ****  *
7451:Core/Src/bno055.c ****  *    accel_unit_u8 |   result
ARM GAS  /tmp/ccWoU29M.s 			page 302


7452:Core/Src/bno055.c ****  *   -------------    | ---------------
7453:Core/Src/bno055.c ****  *        0x00        | BNO055_ACCEL_UNIT_MSQ
7454:Core/Src/bno055.c ****  *        0x01        | BNO055_ACCEL_UNIT_MG
7455:Core/Src/bno055.c ****  *
7456:Core/Src/bno055.c ****  *  @return results of bus communication function
7457:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7458:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7459:Core/Src/bno055.c ****  *
7460:Core/Src/bno055.c ****  *
7461:Core/Src/bno055.c ****  */
7462:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_unit(u8 accel_unit_u8)
7463:Core/Src/bno055.c **** {
7464:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
7465:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
7466:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
7467:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
7468:Core/Src/bno055.c **** 
7469:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7470:Core/Src/bno055.c ****     if (p_bno055 == NULL)
7471:Core/Src/bno055.c ****     {
7472:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7473:Core/Src/bno055.c ****     }
7474:Core/Src/bno055.c ****     else
7475:Core/Src/bno055.c ****     {
7476:Core/Src/bno055.c ****         /* The write operation effective only if the operation
7477:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
7478:Core/Src/bno055.c ****          * current operation mode and set the config mode */
7479:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
7480:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
7481:Core/Src/bno055.c ****         {
7482:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7483:Core/Src/bno055.c ****             {
7484:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
7485:Core/Src/bno055.c ****             }
7486:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
7487:Core/Src/bno055.c ****             {
7488:Core/Src/bno055.c ****                 /* Write the accel unit */
7489:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
7490:Core/Src/bno055.c ****                                                           BNO055_ACCEL_UNIT_REG,
7491:Core/Src/bno055.c ****                                                           &data_u8r,
7492:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
7493:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
7494:Core/Src/bno055.c ****                 {
7495:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_UNIT, accel_unit_u8);
7496:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
7497:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
7498:Core/Src/bno055.c ****                                                                 &data_u8r,
7499:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
7500:Core/Src/bno055.c ****                 }
7501:Core/Src/bno055.c ****             }
7502:Core/Src/bno055.c ****             else
7503:Core/Src/bno055.c ****             {
7504:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
7505:Core/Src/bno055.c ****             }
7506:Core/Src/bno055.c ****         }
7507:Core/Src/bno055.c ****         else
7508:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 303


7509:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7510:Core/Src/bno055.c ****         }
7511:Core/Src/bno055.c ****     }
7512:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7513:Core/Src/bno055.c ****     {
7514:Core/Src/bno055.c ****         /* set the operation mode
7515:Core/Src/bno055.c ****          * of previous operation mode*/
7516:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
7517:Core/Src/bno055.c ****     }
7518:Core/Src/bno055.c **** 
7519:Core/Src/bno055.c ****     return com_rslt;
7520:Core/Src/bno055.c **** }
7521:Core/Src/bno055.c **** 
7522:Core/Src/bno055.c **** /*!
7523:Core/Src/bno055.c ****  *  @brief This API used to read the gyro unit
7524:Core/Src/bno055.c ****  *  from register from 0x3B bit 1
7525:Core/Src/bno055.c ****  *
7526:Core/Src/bno055.c ****  *  @param gyro_unit_u8 : The value of accel unit
7527:Core/Src/bno055.c ****  *
7528:Core/Src/bno055.c ****  *  gyro_unit_u8  |  result
7529:Core/Src/bno055.c ****  *  -------------   | -----------
7530:Core/Src/bno055.c ****  *    0x00          | BNO055_GYRO_UNIT_DPS
7531:Core/Src/bno055.c ****  *    0x01          | BNO055_GYRO_UNIT_RPS
7532:Core/Src/bno055.c ****  *
7533:Core/Src/bno055.c ****  *  @return results of bus communication function
7534:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7535:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7536:Core/Src/bno055.c ****  *
7537:Core/Src/bno055.c ****  *
7538:Core/Src/bno055.c ****  */
7539:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_unit(u8 *gyro_unit_u8)
7540:Core/Src/bno055.c **** {
 9287              		.loc 1 7540 1 is_stmt 1 view -0
 9288              		.cfi_startproc
 9289              		@ args = 0, pretend = 0, frame = 8
 9290              		@ frame_needed = 0, uses_anonymous_args = 0
 9291              		.loc 1 7540 1 is_stmt 0 view .LVU2425
 9292 0000 30B5     		push	{r4, r5, lr}
 9293              	.LCFI321:
 9294              		.cfi_def_cfa_offset 12
 9295              		.cfi_offset 4, -12
 9296              		.cfi_offset 5, -8
 9297              		.cfi_offset 14, -4
 9298 0002 83B0     		sub	sp, sp, #12
 9299              	.LCFI322:
 9300              		.cfi_def_cfa_offset 24
7541:Core/Src/bno055.c ****     /* Variable used to return value of
7542:Core/Src/bno055.c ****      * communication routine*/
7543:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9301              		.loc 1 7543 5 is_stmt 1 view .LVU2426
 9302              	.LVL970:
7544:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9303              		.loc 1 7544 5 view .LVU2427
 9304              		.loc 1 7544 8 is_stmt 0 view .LVU2428
 9305 0004 0023     		movs	r3, #0
 9306 0006 8DF80730 		strb	r3, [sp, #7]
7545:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 304


 9307              		.loc 1 7545 5 is_stmt 1 view .LVU2429
 9308              	.LVL971:
7546:Core/Src/bno055.c **** 
7547:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7548:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9309              		.loc 1 7548 5 view .LVU2430
 9310              		.loc 1 7548 18 is_stmt 0 view .LVU2431
 9311 000a 134B     		ldr	r3, .L713
 9312 000c 1B68     		ldr	r3, [r3]
 9313              		.loc 1 7548 8 view .LVU2432
 9314 000e E3B1     		cbz	r3, .L709
 9315 0010 0446     		mov	r4, r0
7549:Core/Src/bno055.c ****     {
7550:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7551:Core/Src/bno055.c ****     }
7552:Core/Src/bno055.c ****     else
7553:Core/Src/bno055.c ****     {
7554:Core/Src/bno055.c ****         /*condition check for page, gyro unit is
7555:Core/Src/bno055.c ****          * available in the page zero*/
7556:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9316              		.loc 1 7556 9 is_stmt 1 view .LVU2433
 9317              		.loc 1 7556 21 is_stmt 0 view .LVU2434
 9318 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9319              		.loc 1 7556 12 view .LVU2435
 9320 0014 9BB9     		cbnz	r3, .L712
 9321              	.LVL972:
 9322              	.L707:
7557:Core/Src/bno055.c ****         {
7558:Core/Src/bno055.c ****             /* Write the page zero*/
7559:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7560:Core/Src/bno055.c ****         }
7561:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9323              		.loc 1 7561 53 discriminator 1 view .LVU2436
 9324 0016 104B     		ldr	r3, .L713
 9325 0018 1B68     		ldr	r3, [r3]
 9326 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9327              		.loc 1 7561 41 discriminator 1 view .LVU2437
 9328 001c C3B9     		cbnz	r3, .L710
 9329              	.L708:
7562:Core/Src/bno055.c ****         {
7563:Core/Src/bno055.c ****             /* Read the gyro unit */
7564:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9330              		.loc 1 7564 13 is_stmt 1 view .LVU2438
 9331              		.loc 1 7564 32 is_stmt 0 view .LVU2439
 9332 001e 0E4B     		ldr	r3, .L713
 9333 0020 1868     		ldr	r0, [r3]
 9334 0022 0569     		ldr	r5, [r0, #16]
 9335              		.loc 1 7564 24 view .LVU2440
 9336 0024 0123     		movs	r3, #1
 9337 0026 0DF10702 		add	r2, sp, #7
 9338 002a 3B21     		movs	r1, #59
 9339 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9340 002e A847     		blx	r5
 9341              	.LVL973:
7565:Core/Src/bno055.c ****                                                       BNO055_GYRO_UNIT_REG,
7566:Core/Src/bno055.c ****                                                       &data_u8r,
7567:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/ccWoU29M.s 			page 305


7568:Core/Src/bno055.c ****             *gyro_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_UNIT);
 9342              		.loc 1 7568 13 is_stmt 1 view .LVU2441
 9343              		.loc 1 7568 29 is_stmt 0 view .LVU2442
 9344 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9345 0034 C3F34003 		ubfx	r3, r3, #1, #1
 9346              		.loc 1 7568 27 view .LVU2443
 9347 0038 2370     		strb	r3, [r4]
 9348              	.LVL974:
 9349              	.L706:
7569:Core/Src/bno055.c ****         }
7570:Core/Src/bno055.c ****         else
7571:Core/Src/bno055.c ****         {
7572:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7573:Core/Src/bno055.c ****         }
7574:Core/Src/bno055.c ****     }
7575:Core/Src/bno055.c **** 
7576:Core/Src/bno055.c ****     return com_rslt;
7577:Core/Src/bno055.c **** }
 9350              		.loc 1 7577 1 view .LVU2444
 9351 003a 03B0     		add	sp, sp, #12
 9352              	.LCFI323:
 9353              		.cfi_remember_state
 9354              		.cfi_def_cfa_offset 12
 9355              		@ sp needed
 9356 003c 30BD     		pop	{r4, r5, pc}
 9357              	.LVL975:
 9358              	.L712:
 9359              	.LCFI324:
 9360              		.cfi_restore_state
7559:Core/Src/bno055.c ****         }
 9361              		.loc 1 7559 13 is_stmt 1 view .LVU2445
7559:Core/Src/bno055.c ****         }
 9362              		.loc 1 7559 23 is_stmt 0 view .LVU2446
 9363 003e 0020     		movs	r0, #0
 9364              	.LVL976:
7559:Core/Src/bno055.c ****         }
 9365              		.loc 1 7559 23 view .LVU2447
 9366 0040 FFF7FEFF 		bl	bno055_write_page_id
 9367              	.LVL977:
7561:Core/Src/bno055.c ****         {
 9368              		.loc 1 7561 9 is_stmt 1 view .LVU2448
7561:Core/Src/bno055.c ****         {
 9369              		.loc 1 7561 12 is_stmt 0 view .LVU2449
 9370 0044 0028     		cmp	r0, #0
 9371 0046 EAD0     		beq	.L708
 9372 0048 E5E7     		b	.L707
 9373              	.LVL978:
 9374              	.L709:
7550:Core/Src/bno055.c ****     }
 9375              		.loc 1 7550 16 view .LVU2450
 9376 004a 6FF07E00 		mvn	r0, #126
 9377              	.LVL979:
7550:Core/Src/bno055.c ****     }
 9378              		.loc 1 7550 16 view .LVU2451
 9379 004e F4E7     		b	.L706
 9380              	.LVL980:
 9381              	.L710:
ARM GAS  /tmp/ccWoU29M.s 			page 306


7572:Core/Src/bno055.c ****         }
 9382              		.loc 1 7572 22 view .LVU2452
 9383 0050 4FF0FF30 		mov	r0, #-1
 9384 0054 F1E7     		b	.L706
 9385              	.L714:
 9386 0056 00BF     		.align	2
 9387              	.L713:
 9388 0058 00000000 		.word	.LANCHOR0
 9389              		.cfi_endproc
 9390              	.LFE135:
 9392              		.section	.text.bno055_get_euler_unit,"ax",%progbits
 9393              		.align	1
 9394              		.global	bno055_get_euler_unit
 9395              		.syntax unified
 9396              		.thumb
 9397              		.thumb_func
 9398              		.fpu fpv4-sp-d16
 9400              	bno055_get_euler_unit:
 9401              	.LVL981:
 9402              	.LFB137:
7578:Core/Src/bno055.c **** 
7579:Core/Src/bno055.c **** /*!
7580:Core/Src/bno055.c ****  *  @brief This API used to write the gyro unit
7581:Core/Src/bno055.c ****  *  from register from 0x3B bit 1
7582:Core/Src/bno055.c ****  *
7583:Core/Src/bno055.c ****  *  @param gyro_unit_u8 : The value of accel unit
7584:Core/Src/bno055.c ****  *
7585:Core/Src/bno055.c ****  *  gyro_unit_u8  |  result
7586:Core/Src/bno055.c ****  *  -------------   | -----------
7587:Core/Src/bno055.c ****  *    0x00          | BNO055_GYRO_UNIT_DPS
7588:Core/Src/bno055.c ****  *    0x01          | BNO055_GYRO_UNIT_RPS
7589:Core/Src/bno055.c ****  *
7590:Core/Src/bno055.c ****  *  @return results of bus communication function
7591:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7592:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7593:Core/Src/bno055.c ****  *
7594:Core/Src/bno055.c ****  *
7595:Core/Src/bno055.c ****  */
7596:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_unit(u8 gyro_unit_u8)
7597:Core/Src/bno055.c **** {
7598:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
7599:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
7600:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
7601:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
7602:Core/Src/bno055.c **** 
7603:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7604:Core/Src/bno055.c ****     if (p_bno055 == NULL)
7605:Core/Src/bno055.c ****     {
7606:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7607:Core/Src/bno055.c ****     }
7608:Core/Src/bno055.c ****     else
7609:Core/Src/bno055.c ****     {
7610:Core/Src/bno055.c ****         /* The write operation effective only if the operation
7611:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
7612:Core/Src/bno055.c ****          * current operation mode and set the config mode */
7613:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
7614:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
ARM GAS  /tmp/ccWoU29M.s 			page 307


7615:Core/Src/bno055.c ****         {
7616:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7617:Core/Src/bno055.c ****             {
7618:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
7619:Core/Src/bno055.c ****             }
7620:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
7621:Core/Src/bno055.c ****             {
7622:Core/Src/bno055.c ****                 /* Write the gyro unit */
7623:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
7624:Core/Src/bno055.c ****                                                           BNO055_GYRO_UNIT_REG,
7625:Core/Src/bno055.c ****                                                           &data_u8r,
7626:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
7627:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
7628:Core/Src/bno055.c ****                 {
7629:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_UNIT, gyro_unit_u8);
7630:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
7631:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
7632:Core/Src/bno055.c ****                                                                 &data_u8r,
7633:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
7634:Core/Src/bno055.c ****                 }
7635:Core/Src/bno055.c ****             }
7636:Core/Src/bno055.c ****             else
7637:Core/Src/bno055.c ****             {
7638:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
7639:Core/Src/bno055.c ****             }
7640:Core/Src/bno055.c ****         }
7641:Core/Src/bno055.c ****         else
7642:Core/Src/bno055.c ****         {
7643:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7644:Core/Src/bno055.c ****         }
7645:Core/Src/bno055.c ****     }
7646:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7647:Core/Src/bno055.c ****     {
7648:Core/Src/bno055.c ****         /* set the operation mode
7649:Core/Src/bno055.c ****          * of previous operation mode*/
7650:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
7651:Core/Src/bno055.c ****     }
7652:Core/Src/bno055.c **** 
7653:Core/Src/bno055.c ****     return com_rslt;
7654:Core/Src/bno055.c **** }
7655:Core/Src/bno055.c **** 
7656:Core/Src/bno055.c **** /*!
7657:Core/Src/bno055.c ****  *  @brief This API used to read the Euler unit
7658:Core/Src/bno055.c ****  *  from register from 0x3B bit 2
7659:Core/Src/bno055.c ****  *
7660:Core/Src/bno055.c ****  *  @param euler_unit_u8 : The value of accel unit
7661:Core/Src/bno055.c ****  *
7662:Core/Src/bno055.c ****  *    euler_unit_u8 | result
7663:Core/Src/bno055.c ****  *   --------------   | -----------
7664:Core/Src/bno055.c ****  *      0x00          | BNO055_EULER_UNIT_DEG
7665:Core/Src/bno055.c ****  *      0x01          | BNO055_EULER_UNIT_RAD
7666:Core/Src/bno055.c ****  *
7667:Core/Src/bno055.c ****  *  @return results of bus communication function
7668:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7669:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7670:Core/Src/bno055.c ****  *
7671:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 308


7672:Core/Src/bno055.c ****  */
7673:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_euler_unit(u8 *euler_unit_u8)
7674:Core/Src/bno055.c **** {
 9403              		.loc 1 7674 1 is_stmt 1 view -0
 9404              		.cfi_startproc
 9405              		@ args = 0, pretend = 0, frame = 8
 9406              		@ frame_needed = 0, uses_anonymous_args = 0
 9407              		.loc 1 7674 1 is_stmt 0 view .LVU2454
 9408 0000 30B5     		push	{r4, r5, lr}
 9409              	.LCFI325:
 9410              		.cfi_def_cfa_offset 12
 9411              		.cfi_offset 4, -12
 9412              		.cfi_offset 5, -8
 9413              		.cfi_offset 14, -4
 9414 0002 83B0     		sub	sp, sp, #12
 9415              	.LCFI326:
 9416              		.cfi_def_cfa_offset 24
7675:Core/Src/bno055.c ****     /* Variable used to return value of
7676:Core/Src/bno055.c ****      * communication routine*/
7677:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9417              		.loc 1 7677 5 is_stmt 1 view .LVU2455
 9418              	.LVL982:
7678:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9419              		.loc 1 7678 5 view .LVU2456
 9420              		.loc 1 7678 8 is_stmt 0 view .LVU2457
 9421 0004 0023     		movs	r3, #0
 9422 0006 8DF80730 		strb	r3, [sp, #7]
7679:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9423              		.loc 1 7679 5 is_stmt 1 view .LVU2458
 9424              	.LVL983:
7680:Core/Src/bno055.c **** 
7681:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7682:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9425              		.loc 1 7682 5 view .LVU2459
 9426              		.loc 1 7682 18 is_stmt 0 view .LVU2460
 9427 000a 134B     		ldr	r3, .L723
 9428 000c 1B68     		ldr	r3, [r3]
 9429              		.loc 1 7682 8 view .LVU2461
 9430 000e E3B1     		cbz	r3, .L719
 9431 0010 0446     		mov	r4, r0
7683:Core/Src/bno055.c ****     {
7684:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7685:Core/Src/bno055.c ****     }
7686:Core/Src/bno055.c ****     else
7687:Core/Src/bno055.c ****     {
7688:Core/Src/bno055.c ****         /*condition check for page, Euler unit is
7689:Core/Src/bno055.c ****          * available in the page zero*/
7690:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9432              		.loc 1 7690 9 is_stmt 1 view .LVU2462
 9433              		.loc 1 7690 21 is_stmt 0 view .LVU2463
 9434 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9435              		.loc 1 7690 12 view .LVU2464
 9436 0014 9BB9     		cbnz	r3, .L722
 9437              	.LVL984:
 9438              	.L717:
7691:Core/Src/bno055.c ****         {
7692:Core/Src/bno055.c ****             /* Write the page zero*/
ARM GAS  /tmp/ccWoU29M.s 			page 309


7693:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7694:Core/Src/bno055.c ****         }
7695:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9439              		.loc 1 7695 53 discriminator 1 view .LVU2465
 9440 0016 104B     		ldr	r3, .L723
 9441 0018 1B68     		ldr	r3, [r3]
 9442 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9443              		.loc 1 7695 41 discriminator 1 view .LVU2466
 9444 001c C3B9     		cbnz	r3, .L720
 9445              	.L718:
7696:Core/Src/bno055.c ****         {
7697:Core/Src/bno055.c ****             /* Read the Euler unit */
7698:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9446              		.loc 1 7698 13 is_stmt 1 view .LVU2467
 9447              		.loc 1 7698 32 is_stmt 0 view .LVU2468
 9448 001e 0E4B     		ldr	r3, .L723
 9449 0020 1868     		ldr	r0, [r3]
 9450 0022 0569     		ldr	r5, [r0, #16]
 9451              		.loc 1 7698 24 view .LVU2469
 9452 0024 0123     		movs	r3, #1
 9453 0026 0DF10702 		add	r2, sp, #7
 9454 002a 3B21     		movs	r1, #59
 9455 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9456 002e A847     		blx	r5
 9457              	.LVL985:
7699:Core/Src/bno055.c ****                                                       BNO055_EULER_UNIT_REG,
7700:Core/Src/bno055.c ****                                                       &data_u8r,
7701:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7702:Core/Src/bno055.c ****             *euler_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_EULER_UNIT);
 9458              		.loc 1 7702 13 is_stmt 1 view .LVU2470
 9459              		.loc 1 7702 30 is_stmt 0 view .LVU2471
 9460 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9461 0034 C3F38003 		ubfx	r3, r3, #2, #1
 9462              		.loc 1 7702 28 view .LVU2472
 9463 0038 2370     		strb	r3, [r4]
 9464              	.LVL986:
 9465              	.L716:
7703:Core/Src/bno055.c ****         }
7704:Core/Src/bno055.c ****         else
7705:Core/Src/bno055.c ****         {
7706:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7707:Core/Src/bno055.c ****         }
7708:Core/Src/bno055.c ****     }
7709:Core/Src/bno055.c **** 
7710:Core/Src/bno055.c ****     return com_rslt;
7711:Core/Src/bno055.c **** }
 9466              		.loc 1 7711 1 view .LVU2473
 9467 003a 03B0     		add	sp, sp, #12
 9468              	.LCFI327:
 9469              		.cfi_remember_state
 9470              		.cfi_def_cfa_offset 12
 9471              		@ sp needed
 9472 003c 30BD     		pop	{r4, r5, pc}
 9473              	.LVL987:
 9474              	.L722:
 9475              	.LCFI328:
 9476              		.cfi_restore_state
ARM GAS  /tmp/ccWoU29M.s 			page 310


7693:Core/Src/bno055.c ****         }
 9477              		.loc 1 7693 13 is_stmt 1 view .LVU2474
7693:Core/Src/bno055.c ****         }
 9478              		.loc 1 7693 23 is_stmt 0 view .LVU2475
 9479 003e 0020     		movs	r0, #0
 9480              	.LVL988:
7693:Core/Src/bno055.c ****         }
 9481              		.loc 1 7693 23 view .LVU2476
 9482 0040 FFF7FEFF 		bl	bno055_write_page_id
 9483              	.LVL989:
7695:Core/Src/bno055.c ****         {
 9484              		.loc 1 7695 9 is_stmt 1 view .LVU2477
7695:Core/Src/bno055.c ****         {
 9485              		.loc 1 7695 12 is_stmt 0 view .LVU2478
 9486 0044 0028     		cmp	r0, #0
 9487 0046 EAD0     		beq	.L718
 9488 0048 E5E7     		b	.L717
 9489              	.LVL990:
 9490              	.L719:
7684:Core/Src/bno055.c ****     }
 9491              		.loc 1 7684 16 view .LVU2479
 9492 004a 6FF07E00 		mvn	r0, #126
 9493              	.LVL991:
7684:Core/Src/bno055.c ****     }
 9494              		.loc 1 7684 16 view .LVU2480
 9495 004e F4E7     		b	.L716
 9496              	.LVL992:
 9497              	.L720:
7706:Core/Src/bno055.c ****         }
 9498              		.loc 1 7706 22 view .LVU2481
 9499 0050 4FF0FF30 		mov	r0, #-1
 9500 0054 F1E7     		b	.L716
 9501              	.L724:
 9502 0056 00BF     		.align	2
 9503              	.L723:
 9504 0058 00000000 		.word	.LANCHOR0
 9505              		.cfi_endproc
 9506              	.LFE137:
 9508              		.section	.text.bno055_get_tilt_unit,"ax",%progbits
 9509              		.align	1
 9510              		.global	bno055_get_tilt_unit
 9511              		.syntax unified
 9512              		.thumb
 9513              		.thumb_func
 9514              		.fpu fpv4-sp-d16
 9516              	bno055_get_tilt_unit:
 9517              	.LVL993:
 9518              	.LFB139:
7712:Core/Src/bno055.c **** 
7713:Core/Src/bno055.c **** /*!
7714:Core/Src/bno055.c ****  *  @brief This API used to write the Euler unit
7715:Core/Src/bno055.c ****  *  from register from 0x3B bit 2
7716:Core/Src/bno055.c ****  *
7717:Core/Src/bno055.c ****  *  @param euler_unit_u8 : The value of Euler unit
7718:Core/Src/bno055.c ****  *
7719:Core/Src/bno055.c ****  *    euler_unit_u8 | result
7720:Core/Src/bno055.c ****  *   --------------   | -----------
ARM GAS  /tmp/ccWoU29M.s 			page 311


7721:Core/Src/bno055.c ****  *      0x00          | BNO055_EULER_UNIT_DEG
7722:Core/Src/bno055.c ****  *      0x01          | BNO055_EULER_UNIT_RAD
7723:Core/Src/bno055.c ****  *
7724:Core/Src/bno055.c ****  *  @return results of bus communication function
7725:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7726:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7727:Core/Src/bno055.c ****  *
7728:Core/Src/bno055.c ****  *
7729:Core/Src/bno055.c ****  */
7730:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_euler_unit(u8 euler_unit_u8)
7731:Core/Src/bno055.c **** {
7732:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
7733:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
7734:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
7735:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
7736:Core/Src/bno055.c **** 
7737:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7738:Core/Src/bno055.c ****     if (p_bno055 == NULL)
7739:Core/Src/bno055.c ****     {
7740:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7741:Core/Src/bno055.c ****     }
7742:Core/Src/bno055.c ****     else
7743:Core/Src/bno055.c ****     {
7744:Core/Src/bno055.c ****         /* The write operation effective only if the operation
7745:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
7746:Core/Src/bno055.c ****          * current operation mode and set the config mode */
7747:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
7748:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
7749:Core/Src/bno055.c ****         {
7750:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7751:Core/Src/bno055.c ****             {
7752:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
7753:Core/Src/bno055.c ****             }
7754:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
7755:Core/Src/bno055.c ****             {
7756:Core/Src/bno055.c ****                 /* Write the Euler unit*/
7757:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
7758:Core/Src/bno055.c ****                                                           BNO055_EULER_UNIT_REG,
7759:Core/Src/bno055.c ****                                                           &data_u8r,
7760:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
7761:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
7762:Core/Src/bno055.c ****                 {
7763:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_EULER_UNIT, euler_unit_u8);
7764:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
7765:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
7766:Core/Src/bno055.c ****                                                                 &data_u8r,
7767:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
7768:Core/Src/bno055.c ****                 }
7769:Core/Src/bno055.c ****             }
7770:Core/Src/bno055.c ****             else
7771:Core/Src/bno055.c ****             {
7772:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
7773:Core/Src/bno055.c ****             }
7774:Core/Src/bno055.c ****         }
7775:Core/Src/bno055.c ****         else
7776:Core/Src/bno055.c ****         {
7777:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 312


7778:Core/Src/bno055.c ****         }
7779:Core/Src/bno055.c ****     }
7780:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7781:Core/Src/bno055.c ****     {
7782:Core/Src/bno055.c ****         /* set the operation mode
7783:Core/Src/bno055.c ****          * of previous operation mode*/
7784:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
7785:Core/Src/bno055.c ****     }
7786:Core/Src/bno055.c **** 
7787:Core/Src/bno055.c ****     return com_rslt;
7788:Core/Src/bno055.c **** }
7789:Core/Src/bno055.c **** 
7790:Core/Src/bno055.c **** /*!
7791:Core/Src/bno055.c ****  *  @brief This API used to write the tilt unit
7792:Core/Src/bno055.c ****  *  from register from 0x3B bit 3
7793:Core/Src/bno055.c ****  *
7794:Core/Src/bno055.c ****  *  @param tilt_unit_u8 : The value of tilt unit
7795:Core/Src/bno055.c ****  *
7796:Core/Src/bno055.c ****  *    tilt_unit_u8  | result
7797:Core/Src/bno055.c ****  *   ---------------  | ---------
7798:Core/Src/bno055.c ****  *     0x00           | degrees
7799:Core/Src/bno055.c ****  *     0x01           | radians
7800:Core/Src/bno055.c ****  *
7801:Core/Src/bno055.c ****  *  @return results of bus communication function
7802:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7803:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7804:Core/Src/bno055.c ****  *
7805:Core/Src/bno055.c ****  *
7806:Core/Src/bno055.c ****  */
7807:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_tilt_unit(u8 *tilt_unit_u8)
7808:Core/Src/bno055.c **** {
 9519              		.loc 1 7808 1 is_stmt 1 view -0
 9520              		.cfi_startproc
 9521              		@ args = 0, pretend = 0, frame = 8
 9522              		@ frame_needed = 0, uses_anonymous_args = 0
 9523              		.loc 1 7808 1 is_stmt 0 view .LVU2483
 9524 0000 30B5     		push	{r4, r5, lr}
 9525              	.LCFI329:
 9526              		.cfi_def_cfa_offset 12
 9527              		.cfi_offset 4, -12
 9528              		.cfi_offset 5, -8
 9529              		.cfi_offset 14, -4
 9530 0002 83B0     		sub	sp, sp, #12
 9531              	.LCFI330:
 9532              		.cfi_def_cfa_offset 24
7809:Core/Src/bno055.c ****     /* Variable used to return value of
7810:Core/Src/bno055.c ****      * communication routine*/
7811:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9533              		.loc 1 7811 5 is_stmt 1 view .LVU2484
 9534              	.LVL994:
7812:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9535              		.loc 1 7812 5 view .LVU2485
 9536              		.loc 1 7812 8 is_stmt 0 view .LVU2486
 9537 0004 0023     		movs	r3, #0
 9538 0006 8DF80730 		strb	r3, [sp, #7]
7813:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9539              		.loc 1 7813 5 is_stmt 1 view .LVU2487
ARM GAS  /tmp/ccWoU29M.s 			page 313


 9540              	.LVL995:
7814:Core/Src/bno055.c **** 
7815:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7816:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9541              		.loc 1 7816 5 view .LVU2488
 9542              		.loc 1 7816 18 is_stmt 0 view .LVU2489
 9543 000a 134B     		ldr	r3, .L733
 9544 000c 1B68     		ldr	r3, [r3]
 9545              		.loc 1 7816 8 view .LVU2490
 9546 000e E3B1     		cbz	r3, .L729
 9547 0010 0446     		mov	r4, r0
7817:Core/Src/bno055.c ****     {
7818:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7819:Core/Src/bno055.c ****     }
7820:Core/Src/bno055.c ****     else
7821:Core/Src/bno055.c ****     {
7822:Core/Src/bno055.c ****         /*condition check for page, chip id is
7823:Core/Src/bno055.c ****          * available in the page zero*/
7824:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9548              		.loc 1 7824 9 is_stmt 1 view .LVU2491
 9549              		.loc 1 7824 21 is_stmt 0 view .LVU2492
 9550 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9551              		.loc 1 7824 12 view .LVU2493
 9552 0014 9BB9     		cbnz	r3, .L732
 9553              	.LVL996:
 9554              	.L727:
7825:Core/Src/bno055.c ****         {
7826:Core/Src/bno055.c ****             /* Write the page zero*/
7827:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7828:Core/Src/bno055.c ****         }
7829:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9555              		.loc 1 7829 53 discriminator 1 view .LVU2494
 9556 0016 104B     		ldr	r3, .L733
 9557 0018 1B68     		ldr	r3, [r3]
 9558 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9559              		.loc 1 7829 41 discriminator 1 view .LVU2495
 9560 001c C3B9     		cbnz	r3, .L730
 9561              	.L728:
7830:Core/Src/bno055.c ****         {
7831:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9562              		.loc 1 7831 13 is_stmt 1 view .LVU2496
 9563              		.loc 1 7831 32 is_stmt 0 view .LVU2497
 9564 001e 0E4B     		ldr	r3, .L733
 9565 0020 1868     		ldr	r0, [r3]
 9566 0022 0569     		ldr	r5, [r0, #16]
 9567              		.loc 1 7831 24 view .LVU2498
 9568 0024 0123     		movs	r3, #1
 9569 0026 0DF10702 		add	r2, sp, #7
 9570 002a 3B21     		movs	r1, #59
 9571 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9572 002e A847     		blx	r5
 9573              	.LVL997:
7832:Core/Src/bno055.c ****                                                       BNO055_TILT_UNIT_REG,
7833:Core/Src/bno055.c ****                                                       &data_u8r,
7834:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7835:Core/Src/bno055.c ****             *tilt_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_TILT_UNIT);
 9574              		.loc 1 7835 13 is_stmt 1 view .LVU2499
ARM GAS  /tmp/ccWoU29M.s 			page 314


 9575              		.loc 1 7835 29 is_stmt 0 view .LVU2500
 9576 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9577 0034 C3F3C003 		ubfx	r3, r3, #3, #1
 9578              		.loc 1 7835 27 view .LVU2501
 9579 0038 2370     		strb	r3, [r4]
 9580              	.LVL998:
 9581              	.L726:
7836:Core/Src/bno055.c ****         }
7837:Core/Src/bno055.c ****         else
7838:Core/Src/bno055.c ****         {
7839:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7840:Core/Src/bno055.c ****         }
7841:Core/Src/bno055.c ****     }
7842:Core/Src/bno055.c **** 
7843:Core/Src/bno055.c ****     return com_rslt;
7844:Core/Src/bno055.c **** }
 9582              		.loc 1 7844 1 view .LVU2502
 9583 003a 03B0     		add	sp, sp, #12
 9584              	.LCFI331:
 9585              		.cfi_remember_state
 9586              		.cfi_def_cfa_offset 12
 9587              		@ sp needed
 9588 003c 30BD     		pop	{r4, r5, pc}
 9589              	.LVL999:
 9590              	.L732:
 9591              	.LCFI332:
 9592              		.cfi_restore_state
7827:Core/Src/bno055.c ****         }
 9593              		.loc 1 7827 13 is_stmt 1 view .LVU2503
7827:Core/Src/bno055.c ****         }
 9594              		.loc 1 7827 23 is_stmt 0 view .LVU2504
 9595 003e 0020     		movs	r0, #0
 9596              	.LVL1000:
7827:Core/Src/bno055.c ****         }
 9597              		.loc 1 7827 23 view .LVU2505
 9598 0040 FFF7FEFF 		bl	bno055_write_page_id
 9599              	.LVL1001:
7829:Core/Src/bno055.c ****         {
 9600              		.loc 1 7829 9 is_stmt 1 view .LVU2506
7829:Core/Src/bno055.c ****         {
 9601              		.loc 1 7829 12 is_stmt 0 view .LVU2507
 9602 0044 0028     		cmp	r0, #0
 9603 0046 EAD0     		beq	.L728
 9604 0048 E5E7     		b	.L727
 9605              	.LVL1002:
 9606              	.L729:
7818:Core/Src/bno055.c ****     }
 9607              		.loc 1 7818 16 view .LVU2508
 9608 004a 6FF07E00 		mvn	r0, #126
 9609              	.LVL1003:
7818:Core/Src/bno055.c ****     }
 9610              		.loc 1 7818 16 view .LVU2509
 9611 004e F4E7     		b	.L726
 9612              	.LVL1004:
 9613              	.L730:
7839:Core/Src/bno055.c ****         }
 9614              		.loc 1 7839 22 view .LVU2510
ARM GAS  /tmp/ccWoU29M.s 			page 315


 9615 0050 4FF0FF30 		mov	r0, #-1
 9616 0054 F1E7     		b	.L726
 9617              	.L734:
 9618 0056 00BF     		.align	2
 9619              	.L733:
 9620 0058 00000000 		.word	.LANCHOR0
 9621              		.cfi_endproc
 9622              	.LFE139:
 9624              		.section	.text.bno055_get_temp_unit,"ax",%progbits
 9625              		.align	1
 9626              		.global	bno055_get_temp_unit
 9627              		.syntax unified
 9628              		.thumb
 9629              		.thumb_func
 9630              		.fpu fpv4-sp-d16
 9632              	bno055_get_temp_unit:
 9633              	.LVL1005:
 9634              	.LFB141:
7845:Core/Src/bno055.c **** 
7846:Core/Src/bno055.c **** /*!
7847:Core/Src/bno055.c ****  *  @brief This API used to write the tilt unit
7848:Core/Src/bno055.c ****  *  from register from 0x3B bit 3
7849:Core/Src/bno055.c ****  *
7850:Core/Src/bno055.c ****  *  @param tilt_unit_u8 : The value of tilt unit
7851:Core/Src/bno055.c ****  *
7852:Core/Src/bno055.c ****  *    tilt_unit_u8  | result
7853:Core/Src/bno055.c ****  *   ---------------  | ---------
7854:Core/Src/bno055.c ****  *     0x00           | degrees
7855:Core/Src/bno055.c ****  *     0x01           | radians
7856:Core/Src/bno055.c ****  *
7857:Core/Src/bno055.c ****  *  @return results of bus communication function
7858:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7859:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7860:Core/Src/bno055.c ****  *
7861:Core/Src/bno055.c ****  *
7862:Core/Src/bno055.c ****  *
7863:Core/Src/bno055.c ****  *  \return Communication results
7864:Core/Src/bno055.c ****  *
7865:Core/Src/bno055.c ****  *
7866:Core/Src/bno055.c ****  */
7867:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_tilt_unit(u8 tilt_unit_u8)
7868:Core/Src/bno055.c **** {
7869:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
7870:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
7871:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
7872:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
7873:Core/Src/bno055.c **** 
7874:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7875:Core/Src/bno055.c ****     if (p_bno055 == NULL)
7876:Core/Src/bno055.c ****     {
7877:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7878:Core/Src/bno055.c ****     }
7879:Core/Src/bno055.c ****     else
7880:Core/Src/bno055.c ****     {
7881:Core/Src/bno055.c ****         /* The write operation effective only if the operation
7882:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
7883:Core/Src/bno055.c ****          * current operation mode and set the config mode */
ARM GAS  /tmp/ccWoU29M.s 			page 316


7884:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
7885:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
7886:Core/Src/bno055.c ****         {
7887:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7888:Core/Src/bno055.c ****             {
7889:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
7890:Core/Src/bno055.c ****             }
7891:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
7892:Core/Src/bno055.c ****             {
7893:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
7894:Core/Src/bno055.c ****                                                           BNO055_TILT_UNIT_REG,
7895:Core/Src/bno055.c ****                                                           &data_u8r,
7896:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
7897:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
7898:Core/Src/bno055.c ****                 {
7899:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_TILT_UNIT, tilt_unit_u8);
7900:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
7901:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
7902:Core/Src/bno055.c ****                                                                 &data_u8r,
7903:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
7904:Core/Src/bno055.c ****                 }
7905:Core/Src/bno055.c ****             }
7906:Core/Src/bno055.c ****             else
7907:Core/Src/bno055.c ****             {
7908:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
7909:Core/Src/bno055.c ****             }
7910:Core/Src/bno055.c ****         }
7911:Core/Src/bno055.c ****         else
7912:Core/Src/bno055.c ****         {
7913:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7914:Core/Src/bno055.c ****         }
7915:Core/Src/bno055.c ****     }
7916:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7917:Core/Src/bno055.c ****     {
7918:Core/Src/bno055.c ****         /* set the operation mode
7919:Core/Src/bno055.c ****          * of previous operation mode*/
7920:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
7921:Core/Src/bno055.c ****     }
7922:Core/Src/bno055.c **** 
7923:Core/Src/bno055.c ****     return com_rslt;
7924:Core/Src/bno055.c **** }
7925:Core/Src/bno055.c **** 
7926:Core/Src/bno055.c **** /*!
7927:Core/Src/bno055.c ****  *  @brief This API used to read the temperature unit
7928:Core/Src/bno055.c ****  *  from register from 0x3B bit 4
7929:Core/Src/bno055.c ****  *
7930:Core/Src/bno055.c ****  *  @param temp_unit_u8 : The value of temperature unit
7931:Core/Src/bno055.c ****  *
7932:Core/Src/bno055.c ****  *    temp_unit_u8  |  result
7933:Core/Src/bno055.c ****  *   -----------      | --------------
7934:Core/Src/bno055.c ****  *      0x00          | BNO055_TEMP_UNIT_CELSIUS
7935:Core/Src/bno055.c ****  *      0x01          | BNO055_TEMP_UNIT_FAHRENHEIT
7936:Core/Src/bno055.c ****  *
7937:Core/Src/bno055.c ****  *  @return results of bus communication function
7938:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7939:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7940:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 317


7941:Core/Src/bno055.c ****  */
7942:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_temp_unit(u8 *temp_unit_u8)
7943:Core/Src/bno055.c **** {
 9635              		.loc 1 7943 1 is_stmt 1 view -0
 9636              		.cfi_startproc
 9637              		@ args = 0, pretend = 0, frame = 8
 9638              		@ frame_needed = 0, uses_anonymous_args = 0
 9639              		.loc 1 7943 1 is_stmt 0 view .LVU2512
 9640 0000 30B5     		push	{r4, r5, lr}
 9641              	.LCFI333:
 9642              		.cfi_def_cfa_offset 12
 9643              		.cfi_offset 4, -12
 9644              		.cfi_offset 5, -8
 9645              		.cfi_offset 14, -4
 9646 0002 83B0     		sub	sp, sp, #12
 9647              	.LCFI334:
 9648              		.cfi_def_cfa_offset 24
7944:Core/Src/bno055.c ****     /* Variable used to return value of
7945:Core/Src/bno055.c ****      * communication routine*/
7946:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9649              		.loc 1 7946 5 is_stmt 1 view .LVU2513
 9650              	.LVL1006:
7947:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9651              		.loc 1 7947 5 view .LVU2514
 9652              		.loc 1 7947 8 is_stmt 0 view .LVU2515
 9653 0004 0023     		movs	r3, #0
 9654 0006 8DF80730 		strb	r3, [sp, #7]
7948:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9655              		.loc 1 7948 5 is_stmt 1 view .LVU2516
 9656              	.LVL1007:
7949:Core/Src/bno055.c **** 
7950:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7951:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9657              		.loc 1 7951 5 view .LVU2517
 9658              		.loc 1 7951 18 is_stmt 0 view .LVU2518
 9659 000a 134B     		ldr	r3, .L743
 9660 000c 1B68     		ldr	r3, [r3]
 9661              		.loc 1 7951 8 view .LVU2519
 9662 000e E3B1     		cbz	r3, .L739
 9663 0010 0446     		mov	r4, r0
7952:Core/Src/bno055.c ****     {
7953:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7954:Core/Src/bno055.c ****     }
7955:Core/Src/bno055.c ****     else
7956:Core/Src/bno055.c ****     {
7957:Core/Src/bno055.c ****         /*condition check for page, temperature unit is
7958:Core/Src/bno055.c ****          * available in the page zero*/
7959:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9664              		.loc 1 7959 9 is_stmt 1 view .LVU2520
 9665              		.loc 1 7959 21 is_stmt 0 view .LVU2521
 9666 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9667              		.loc 1 7959 12 view .LVU2522
 9668 0014 9BB9     		cbnz	r3, .L742
 9669              	.LVL1008:
 9670              	.L737:
7960:Core/Src/bno055.c ****         {
7961:Core/Src/bno055.c ****             /* Write the page zero*/
ARM GAS  /tmp/ccWoU29M.s 			page 318


7962:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7963:Core/Src/bno055.c ****         }
7964:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9671              		.loc 1 7964 53 discriminator 1 view .LVU2523
 9672 0016 104B     		ldr	r3, .L743
 9673 0018 1B68     		ldr	r3, [r3]
 9674 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9675              		.loc 1 7964 41 discriminator 1 view .LVU2524
 9676 001c C3B9     		cbnz	r3, .L740
 9677              	.L738:
7965:Core/Src/bno055.c ****         {
7966:Core/Src/bno055.c ****             /* Read the temperature unit */
7967:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9678              		.loc 1 7967 13 is_stmt 1 view .LVU2525
 9679              		.loc 1 7967 32 is_stmt 0 view .LVU2526
 9680 001e 0E4B     		ldr	r3, .L743
 9681 0020 1868     		ldr	r0, [r3]
 9682 0022 0569     		ldr	r5, [r0, #16]
 9683              		.loc 1 7967 24 view .LVU2527
 9684 0024 0123     		movs	r3, #1
 9685 0026 0DF10702 		add	r2, sp, #7
 9686 002a 3B21     		movs	r1, #59
 9687 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9688 002e A847     		blx	r5
 9689              	.LVL1009:
7968:Core/Src/bno055.c ****                                                       BNO055_TEMP_UNIT_REG,
7969:Core/Src/bno055.c ****                                                       &data_u8r,
7970:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7971:Core/Src/bno055.c ****             *temp_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_TEMP_UNIT);
 9690              		.loc 1 7971 13 is_stmt 1 view .LVU2528
 9691              		.loc 1 7971 29 is_stmt 0 view .LVU2529
 9692 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9693 0034 C3F30013 		ubfx	r3, r3, #4, #1
 9694              		.loc 1 7971 27 view .LVU2530
 9695 0038 2370     		strb	r3, [r4]
 9696              	.LVL1010:
 9697              	.L736:
7972:Core/Src/bno055.c ****         }
7973:Core/Src/bno055.c ****         else
7974:Core/Src/bno055.c ****         {
7975:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7976:Core/Src/bno055.c ****         }
7977:Core/Src/bno055.c ****     }
7978:Core/Src/bno055.c **** 
7979:Core/Src/bno055.c ****     return com_rslt;
7980:Core/Src/bno055.c **** }
 9698              		.loc 1 7980 1 view .LVU2531
 9699 003a 03B0     		add	sp, sp, #12
 9700              	.LCFI335:
 9701              		.cfi_remember_state
 9702              		.cfi_def_cfa_offset 12
 9703              		@ sp needed
 9704 003c 30BD     		pop	{r4, r5, pc}
 9705              	.LVL1011:
 9706              	.L742:
 9707              	.LCFI336:
 9708              		.cfi_restore_state
ARM GAS  /tmp/ccWoU29M.s 			page 319


7962:Core/Src/bno055.c ****         }
 9709              		.loc 1 7962 13 is_stmt 1 view .LVU2532
7962:Core/Src/bno055.c ****         }
 9710              		.loc 1 7962 23 is_stmt 0 view .LVU2533
 9711 003e 0020     		movs	r0, #0
 9712              	.LVL1012:
7962:Core/Src/bno055.c ****         }
 9713              		.loc 1 7962 23 view .LVU2534
 9714 0040 FFF7FEFF 		bl	bno055_write_page_id
 9715              	.LVL1013:
7964:Core/Src/bno055.c ****         {
 9716              		.loc 1 7964 9 is_stmt 1 view .LVU2535
7964:Core/Src/bno055.c ****         {
 9717              		.loc 1 7964 12 is_stmt 0 view .LVU2536
 9718 0044 0028     		cmp	r0, #0
 9719 0046 EAD0     		beq	.L738
 9720 0048 E5E7     		b	.L737
 9721              	.LVL1014:
 9722              	.L739:
7953:Core/Src/bno055.c ****     }
 9723              		.loc 1 7953 16 view .LVU2537
 9724 004a 6FF07E00 		mvn	r0, #126
 9725              	.LVL1015:
7953:Core/Src/bno055.c ****     }
 9726              		.loc 1 7953 16 view .LVU2538
 9727 004e F4E7     		b	.L736
 9728              	.LVL1016:
 9729              	.L740:
7975:Core/Src/bno055.c ****         }
 9730              		.loc 1 7975 22 view .LVU2539
 9731 0050 4FF0FF30 		mov	r0, #-1
 9732 0054 F1E7     		b	.L736
 9733              	.L744:
 9734 0056 00BF     		.align	2
 9735              	.L743:
 9736 0058 00000000 		.word	.LANCHOR0
 9737              		.cfi_endproc
 9738              	.LFE141:
 9740              		.section	.text.bno055_get_data_output_format,"ax",%progbits
 9741              		.align	1
 9742              		.global	bno055_get_data_output_format
 9743              		.syntax unified
 9744              		.thumb
 9745              		.thumb_func
 9746              		.fpu fpv4-sp-d16
 9748              	bno055_get_data_output_format:
 9749              	.LVL1017:
 9750              	.LFB143:
7981:Core/Src/bno055.c **** 
7982:Core/Src/bno055.c **** /*!
7983:Core/Src/bno055.c ****  *  @brief This API used to write the temperature unit
7984:Core/Src/bno055.c ****  *  from register from 0x3B bit 4
7985:Core/Src/bno055.c ****  *
7986:Core/Src/bno055.c ****  *  @param temp_unit_u8 : The value of temperature unit
7987:Core/Src/bno055.c ****  *
7988:Core/Src/bno055.c ****  *    temp_unit_u8  |  result
7989:Core/Src/bno055.c ****  *   -----------      | --------------
ARM GAS  /tmp/ccWoU29M.s 			page 320


7990:Core/Src/bno055.c ****  *      0x00          | BNO055_TEMP_UNIT_CELSIUS
7991:Core/Src/bno055.c ****  *      0x01          | BNO055_TEMP_UNIT_FAHRENHEIT
7992:Core/Src/bno055.c ****  *
7993:Core/Src/bno055.c ****  *  @return results of bus communication function
7994:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7995:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7996:Core/Src/bno055.c ****  *
7997:Core/Src/bno055.c ****  *
7998:Core/Src/bno055.c ****  */
7999:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_temp_unit(u8 temp_unit_u8)
8000:Core/Src/bno055.c **** {
8001:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
8002:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
8003:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
8004:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
8005:Core/Src/bno055.c **** 
8006:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8007:Core/Src/bno055.c ****     if (p_bno055 == NULL)
8008:Core/Src/bno055.c ****     {
8009:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8010:Core/Src/bno055.c ****     }
8011:Core/Src/bno055.c ****     else
8012:Core/Src/bno055.c ****     {
8013:Core/Src/bno055.c ****         /* The write operation effective only if the operation
8014:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
8015:Core/Src/bno055.c ****          * current operation mode and set the config mode */
8016:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
8017:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
8018:Core/Src/bno055.c ****         {
8019:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
8020:Core/Src/bno055.c ****             {
8021:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
8022:Core/Src/bno055.c ****             }
8023:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
8024:Core/Src/bno055.c ****             {
8025:Core/Src/bno055.c ****                 /* Write the temperature unit */
8026:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
8027:Core/Src/bno055.c ****                                                           BNO055_TEMP_UNIT_REG,
8028:Core/Src/bno055.c ****                                                           &data_u8r,
8029:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8030:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
8031:Core/Src/bno055.c ****                 {
8032:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_TEMP_UNIT, temp_unit_u8);
8033:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
8034:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
8035:Core/Src/bno055.c ****                                                                 &data_u8r,
8036:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
8037:Core/Src/bno055.c ****                 }
8038:Core/Src/bno055.c ****             }
8039:Core/Src/bno055.c ****             else
8040:Core/Src/bno055.c ****             {
8041:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
8042:Core/Src/bno055.c ****             }
8043:Core/Src/bno055.c ****         }
8044:Core/Src/bno055.c ****         else
8045:Core/Src/bno055.c ****         {
8046:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 321


8047:Core/Src/bno055.c ****         }
8048:Core/Src/bno055.c ****     }
8049:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
8050:Core/Src/bno055.c ****     {
8051:Core/Src/bno055.c ****         /* set the operation mode
8052:Core/Src/bno055.c ****          * of previous operation mode*/
8053:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
8054:Core/Src/bno055.c ****     }
8055:Core/Src/bno055.c **** 
8056:Core/Src/bno055.c ****     return com_rslt;
8057:Core/Src/bno055.c **** }
8058:Core/Src/bno055.c **** 
8059:Core/Src/bno055.c **** /*!
8060:Core/Src/bno055.c ****  *  @brief This API used to read the current selected orientation mode
8061:Core/Src/bno055.c ****  *  from register from 0x3B bit 7
8062:Core/Src/bno055.c ****  *
8063:Core/Src/bno055.c ****  *  @param data_output_format_u8 : The value of data output format
8064:Core/Src/bno055.c ****  *
8065:Core/Src/bno055.c ****  *    data_output_format_u8  | result
8066:Core/Src/bno055.c ****  *   --------------------      | --------
8067:Core/Src/bno055.c ****  *    0x00                     | Windows
8068:Core/Src/bno055.c ****  *    0x01                     | Android
8069:Core/Src/bno055.c ****  *
8070:Core/Src/bno055.c ****  *  @return results of bus communication function
8071:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8072:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8073:Core/Src/bno055.c ****  *
8074:Core/Src/bno055.c ****  */
8075:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_data_output_format(u8 *data_output_format_u8)
8076:Core/Src/bno055.c **** {
 9751              		.loc 1 8076 1 is_stmt 1 view -0
 9752              		.cfi_startproc
 9753              		@ args = 0, pretend = 0, frame = 8
 9754              		@ frame_needed = 0, uses_anonymous_args = 0
 9755              		.loc 1 8076 1 is_stmt 0 view .LVU2541
 9756 0000 30B5     		push	{r4, r5, lr}
 9757              	.LCFI337:
 9758              		.cfi_def_cfa_offset 12
 9759              		.cfi_offset 4, -12
 9760              		.cfi_offset 5, -8
 9761              		.cfi_offset 14, -4
 9762 0002 83B0     		sub	sp, sp, #12
 9763              	.LCFI338:
 9764              		.cfi_def_cfa_offset 24
8077:Core/Src/bno055.c ****     /* Variable used to return value of
8078:Core/Src/bno055.c ****      * communication routine*/
8079:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9765              		.loc 1 8079 5 is_stmt 1 view .LVU2542
 9766              	.LVL1018:
8080:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9767              		.loc 1 8080 5 view .LVU2543
 9768              		.loc 1 8080 8 is_stmt 0 view .LVU2544
 9769 0004 0023     		movs	r3, #0
 9770 0006 8DF80730 		strb	r3, [sp, #7]
8081:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9771              		.loc 1 8081 5 is_stmt 1 view .LVU2545
 9772              	.LVL1019:
ARM GAS  /tmp/ccWoU29M.s 			page 322


8082:Core/Src/bno055.c **** 
8083:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8084:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9773              		.loc 1 8084 5 view .LVU2546
 9774              		.loc 1 8084 18 is_stmt 0 view .LVU2547
 9775 000a 124B     		ldr	r3, .L753
 9776 000c 1B68     		ldr	r3, [r3]
 9777              		.loc 1 8084 8 view .LVU2548
 9778 000e DBB1     		cbz	r3, .L749
 9779 0010 0446     		mov	r4, r0
8085:Core/Src/bno055.c ****     {
8086:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8087:Core/Src/bno055.c ****     }
8088:Core/Src/bno055.c ****     else
8089:Core/Src/bno055.c ****     {
8090:Core/Src/bno055.c ****         /*condition check for page, data output format is
8091:Core/Src/bno055.c ****          * available in the page zero*/
8092:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9780              		.loc 1 8092 9 is_stmt 1 view .LVU2549
 9781              		.loc 1 8092 21 is_stmt 0 view .LVU2550
 9782 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9783              		.loc 1 8092 12 view .LVU2551
 9784 0014 93B9     		cbnz	r3, .L752
 9785              	.LVL1020:
 9786              	.L747:
8093:Core/Src/bno055.c ****         {
8094:Core/Src/bno055.c ****             /* Write the page zero*/
8095:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8096:Core/Src/bno055.c ****         }
8097:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9787              		.loc 1 8097 53 discriminator 1 view .LVU2552
 9788 0016 0F4B     		ldr	r3, .L753
 9789 0018 1B68     		ldr	r3, [r3]
 9790 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9791              		.loc 1 8097 41 discriminator 1 view .LVU2553
 9792 001c BBB9     		cbnz	r3, .L750
 9793              	.L748:
8098:Core/Src/bno055.c ****         {
8099:Core/Src/bno055.c ****             /* Read the data output format */
8100:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9794              		.loc 1 8100 13 is_stmt 1 view .LVU2554
 9795              		.loc 1 8100 32 is_stmt 0 view .LVU2555
 9796 001e 0D4B     		ldr	r3, .L753
 9797 0020 1868     		ldr	r0, [r3]
 9798 0022 0569     		ldr	r5, [r0, #16]
 9799              		.loc 1 8100 24 view .LVU2556
 9800 0024 0123     		movs	r3, #1
 9801 0026 0DF10702 		add	r2, sp, #7
 9802 002a 3B21     		movs	r1, #59
 9803 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9804 002e A847     		blx	r5
 9805              	.LVL1021:
8101:Core/Src/bno055.c ****                                                       BNO055_DATA_OUTPUT_FORMAT_REG,
8102:Core/Src/bno055.c ****                                                       &data_u8r,
8103:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8104:Core/Src/bno055.c ****             *data_output_format_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_DATA_OUTPUT_FORMAT);
 9806              		.loc 1 8104 13 is_stmt 1 view .LVU2557
ARM GAS  /tmp/ccWoU29M.s 			page 323


 9807              		.loc 1 8104 38 is_stmt 0 view .LVU2558
 9808 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9809 0034 DB09     		lsrs	r3, r3, #7
 9810              		.loc 1 8104 36 view .LVU2559
 9811 0036 2370     		strb	r3, [r4]
 9812              	.LVL1022:
 9813              	.L746:
8105:Core/Src/bno055.c ****         }
8106:Core/Src/bno055.c ****         else
8107:Core/Src/bno055.c ****         {
8108:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8109:Core/Src/bno055.c ****         }
8110:Core/Src/bno055.c ****     }
8111:Core/Src/bno055.c **** 
8112:Core/Src/bno055.c ****     return com_rslt;
8113:Core/Src/bno055.c **** }
 9814              		.loc 1 8113 1 view .LVU2560
 9815 0038 03B0     		add	sp, sp, #12
 9816              	.LCFI339:
 9817              		.cfi_remember_state
 9818              		.cfi_def_cfa_offset 12
 9819              		@ sp needed
 9820 003a 30BD     		pop	{r4, r5, pc}
 9821              	.LVL1023:
 9822              	.L752:
 9823              	.LCFI340:
 9824              		.cfi_restore_state
8095:Core/Src/bno055.c ****         }
 9825              		.loc 1 8095 13 is_stmt 1 view .LVU2561
8095:Core/Src/bno055.c ****         }
 9826              		.loc 1 8095 23 is_stmt 0 view .LVU2562
 9827 003c 0020     		movs	r0, #0
 9828              	.LVL1024:
8095:Core/Src/bno055.c ****         }
 9829              		.loc 1 8095 23 view .LVU2563
 9830 003e FFF7FEFF 		bl	bno055_write_page_id
 9831              	.LVL1025:
8097:Core/Src/bno055.c ****         {
 9832              		.loc 1 8097 9 is_stmt 1 view .LVU2564
8097:Core/Src/bno055.c ****         {
 9833              		.loc 1 8097 12 is_stmt 0 view .LVU2565
 9834 0042 0028     		cmp	r0, #0
 9835 0044 EBD0     		beq	.L748
 9836 0046 E6E7     		b	.L747
 9837              	.LVL1026:
 9838              	.L749:
8086:Core/Src/bno055.c ****     }
 9839              		.loc 1 8086 16 view .LVU2566
 9840 0048 6FF07E00 		mvn	r0, #126
 9841              	.LVL1027:
8086:Core/Src/bno055.c ****     }
 9842              		.loc 1 8086 16 view .LVU2567
 9843 004c F4E7     		b	.L746
 9844              	.LVL1028:
 9845              	.L750:
8108:Core/Src/bno055.c ****         }
 9846              		.loc 1 8108 22 view .LVU2568
ARM GAS  /tmp/ccWoU29M.s 			page 324


 9847 004e 4FF0FF30 		mov	r0, #-1
 9848 0052 F1E7     		b	.L746
 9849              	.L754:
 9850              		.align	2
 9851              	.L753:
 9852 0054 00000000 		.word	.LANCHOR0
 9853              		.cfi_endproc
 9854              	.LFE143:
 9856              		.section	.text.bno055_get_operation_mode,"ax",%progbits
 9857              		.align	1
 9858              		.global	bno055_get_operation_mode
 9859              		.syntax unified
 9860              		.thumb
 9861              		.thumb_func
 9862              		.fpu fpv4-sp-d16
 9864              	bno055_get_operation_mode:
 9865              	.LVL1029:
 9866              	.LFB145:
8114:Core/Src/bno055.c **** 
8115:Core/Src/bno055.c **** /*!
8116:Core/Src/bno055.c ****  *  @brief This API used to write the current selected orientation mode
8117:Core/Src/bno055.c ****  *  from register from 0x3B bit 7
8118:Core/Src/bno055.c ****  *
8119:Core/Src/bno055.c ****  *  @param data_output_format_u8 : The value of data output format
8120:Core/Src/bno055.c ****  *
8121:Core/Src/bno055.c ****  *    data_output_format_u8  | result
8122:Core/Src/bno055.c ****  *   --------------------      | --------
8123:Core/Src/bno055.c ****  *    0x00                     | Windows
8124:Core/Src/bno055.c ****  *    0x01                     | Android
8125:Core/Src/bno055.c ****  *
8126:Core/Src/bno055.c ****  *  @return results of bus communication function
8127:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8128:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8129:Core/Src/bno055.c ****  *
8130:Core/Src/bno055.c ****  *
8131:Core/Src/bno055.c ****  */
8132:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_data_output_format(u8 data_output_format_u8)
8133:Core/Src/bno055.c **** {
8134:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
8135:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
8136:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
8137:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
8138:Core/Src/bno055.c **** 
8139:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8140:Core/Src/bno055.c ****     if (p_bno055 == NULL)
8141:Core/Src/bno055.c ****     {
8142:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8143:Core/Src/bno055.c ****     }
8144:Core/Src/bno055.c ****     else
8145:Core/Src/bno055.c ****     {
8146:Core/Src/bno055.c ****         /* The write operation effective only if the operation
8147:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
8148:Core/Src/bno055.c ****          * current operation mode and set the config mode */
8149:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
8150:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
8151:Core/Src/bno055.c ****         {
8152:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
ARM GAS  /tmp/ccWoU29M.s 			page 325


8153:Core/Src/bno055.c ****             {
8154:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
8155:Core/Src/bno055.c ****             }
8156:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
8157:Core/Src/bno055.c ****             {
8158:Core/Src/bno055.c ****                 /* Write the data output format */
8159:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
8160:Core/Src/bno055.c ****                                                           BNO055_DATA_OUTPUT_FORMAT_REG,
8161:Core/Src/bno055.c ****                                                           &data_u8r,
8162:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8163:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
8164:Core/Src/bno055.c ****                 {
8165:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_DATA_OUTPUT_FORMAT, data_output
8166:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
8167:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
8168:Core/Src/bno055.c ****                                                                 &data_u8r,
8169:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
8170:Core/Src/bno055.c ****                 }
8171:Core/Src/bno055.c ****             }
8172:Core/Src/bno055.c ****             else
8173:Core/Src/bno055.c ****             {
8174:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
8175:Core/Src/bno055.c ****             }
8176:Core/Src/bno055.c ****         }
8177:Core/Src/bno055.c ****         else
8178:Core/Src/bno055.c ****         {
8179:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8180:Core/Src/bno055.c ****         }
8181:Core/Src/bno055.c ****     }
8182:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
8183:Core/Src/bno055.c ****     {
8184:Core/Src/bno055.c ****         /* set the operation mode
8185:Core/Src/bno055.c ****          * of previous operation mode*/
8186:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
8187:Core/Src/bno055.c ****     }
8188:Core/Src/bno055.c **** 
8189:Core/Src/bno055.c ****     return com_rslt;
8190:Core/Src/bno055.c **** }
8191:Core/Src/bno055.c **** 
8192:Core/Src/bno055.c **** /*! @brief This API used to read the operation mode
8193:Core/Src/bno055.c ****  *  from register from 0x3D bit 0 to 3
8194:Core/Src/bno055.c ****  *
8195:Core/Src/bno055.c ****  *  @param operation_mode_u8 : The value of operation mode
8196:Core/Src/bno055.c ****  *
8197:Core/Src/bno055.c ****  * operation_mode_u8 |      result      | comments
8198:Core/Src/bno055.c ****  * ----------|----------------------------|----------------------------
8199:Core/Src/bno055.c ****  *  0x00     | BNO055_OPERATION_MODE_CONFIG      | Configuration mode
8200:Core/Src/bno055.c ****  *  0x01     | BNO055_OPERATION_MODE_ACCONLY     | Reads accel data alone
8201:Core/Src/bno055.c ****  *  0x02     | BNO055_OPERATION_MODE_MAGONLY     | Reads mag data alone
8202:Core/Src/bno055.c ****  *  0x03     | BNO055_OPERATION_MODE_GYRONLY     | Reads gyro data alone
8203:Core/Src/bno055.c ****  *  0x04     | BNO055_OPERATION_MODE_ACCMAG      | Reads accel and mag data
8204:Core/Src/bno055.c ****  *  0x05     | BNO055_OPERATION_MODE_ACCGYRO     | Reads accel and gyro data
8205:Core/Src/bno055.c ****  *  0x06     | BNO055_OPERATION_MODE_MAGGYRO     | Reads accel and mag data
8206:Core/Src/bno055.c ****  *  0x07     | OPERATION_MODE_ANY_MOTION  | Reads accel mag and gyro data
8207:Core/Src/bno055.c ****  *  0x08     | BNO055_OPERATION_MODE_IMUPLUS     | Inertial measurement unit
8208:Core/Src/bno055.c ****  *   -       |       -                    | Reads accel,gyro and fusion data
8209:Core/Src/bno055.c ****  *  0x09     | BNO055_OPERATION_MODE_COMPASS     | Reads accel, mag data
ARM GAS  /tmp/ccWoU29M.s 			page 326


8210:Core/Src/bno055.c ****  *   -       |       -                    | and fusion data
8211:Core/Src/bno055.c ****  *  0x0A     | BNO055_OPERATION_MODE_M4G         | Reads accel, mag data
8212:Core/Src/bno055.c ****  *    -      |       -                    | and fusion data
8213:Core/Src/bno055.c ****  *  0x0B     | BNO055_OPERATION_MODE_NDOF_FMC_OFF| Nine degrees of freedom with
8214:Core/Src/bno055.c ****  *   -       |       -                    | fast magnetic calibration
8215:Core/Src/bno055.c ****  *   -       |       -                    | Reads accel,mag, gyro
8216:Core/Src/bno055.c ****  *   -       |       -                    | and fusion data
8217:Core/Src/bno055.c ****  *  0x0C     | BNO055_OPERATION_MODE_NDOF        | Nine degrees of freedom
8218:Core/Src/bno055.c ****  *   -       |       -                    | Reads accel,mag, gyro
8219:Core/Src/bno055.c ****  *   -       |       -                    | and fusion data
8220:Core/Src/bno055.c ****  *
8221:Core/Src/bno055.c ****  *  @return results of bus communication function
8222:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8223:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8224:Core/Src/bno055.c ****  *
8225:Core/Src/bno055.c ****  *  @note In the config mode, all sensor and fusion data
8226:Core/Src/bno055.c ****  *  becomes zero and it is mainly derived
8227:Core/Src/bno055.c ****  *  to configure the various settings of the BNO
8228:Core/Src/bno055.c ****  *
8229:Core/Src/bno055.c ****  */
8230:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_operation_mode(u8 *operation_mode_u8)
8231:Core/Src/bno055.c **** {
 9867              		.loc 1 8231 1 is_stmt 1 view -0
 9868              		.cfi_startproc
 9869              		@ args = 0, pretend = 0, frame = 8
 9870              		@ frame_needed = 0, uses_anonymous_args = 0
 9871              		.loc 1 8231 1 is_stmt 0 view .LVU2570
 9872 0000 30B5     		push	{r4, r5, lr}
 9873              	.LCFI341:
 9874              		.cfi_def_cfa_offset 12
 9875              		.cfi_offset 4, -12
 9876              		.cfi_offset 5, -8
 9877              		.cfi_offset 14, -4
 9878 0002 83B0     		sub	sp, sp, #12
 9879              	.LCFI342:
 9880              		.cfi_def_cfa_offset 24
8232:Core/Src/bno055.c ****     /* Variable used to return value of
8233:Core/Src/bno055.c ****      * communication routine*/
8234:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9881              		.loc 1 8234 5 is_stmt 1 view .LVU2571
 9882              	.LVL1030:
8235:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9883              		.loc 1 8235 5 view .LVU2572
 9884              		.loc 1 8235 8 is_stmt 0 view .LVU2573
 9885 0004 0023     		movs	r3, #0
 9886 0006 8DF80730 		strb	r3, [sp, #7]
8236:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9887              		.loc 1 8236 5 is_stmt 1 view .LVU2574
 9888              	.LVL1031:
8237:Core/Src/bno055.c **** 
8238:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8239:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9889              		.loc 1 8239 5 view .LVU2575
 9890              		.loc 1 8239 18 is_stmt 0 view .LVU2576
 9891 000a 134B     		ldr	r3, .L763
 9892 000c 1B68     		ldr	r3, [r3]
 9893              		.loc 1 8239 8 view .LVU2577
ARM GAS  /tmp/ccWoU29M.s 			page 327


 9894 000e E3B1     		cbz	r3, .L759
 9895 0010 0446     		mov	r4, r0
8240:Core/Src/bno055.c ****     {
8241:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8242:Core/Src/bno055.c ****     }
8243:Core/Src/bno055.c ****     else
8244:Core/Src/bno055.c ****     {
8245:Core/Src/bno055.c ****         /*condition check for page, operation mode is
8246:Core/Src/bno055.c ****          * available in the page zero*/
8247:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9896              		.loc 1 8247 9 is_stmt 1 view .LVU2578
 9897              		.loc 1 8247 21 is_stmt 0 view .LVU2579
 9898 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9899              		.loc 1 8247 12 view .LVU2580
 9900 0014 9BB9     		cbnz	r3, .L762
 9901              	.LVL1032:
 9902              	.L757:
8248:Core/Src/bno055.c ****         {
8249:Core/Src/bno055.c ****             /* Write the page zero*/
8250:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8251:Core/Src/bno055.c ****         }
8252:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9903              		.loc 1 8252 53 discriminator 1 view .LVU2581
 9904 0016 104B     		ldr	r3, .L763
 9905 0018 1B68     		ldr	r3, [r3]
 9906 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9907              		.loc 1 8252 41 discriminator 1 view .LVU2582
 9908 001c C3B9     		cbnz	r3, .L760
 9909              	.L758:
8253:Core/Src/bno055.c ****         {
8254:Core/Src/bno055.c ****             /* Read the value of operation mode*/
8255:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9910              		.loc 1 8255 13 is_stmt 1 view .LVU2583
 9911              		.loc 1 8255 32 is_stmt 0 view .LVU2584
 9912 001e 0E4B     		ldr	r3, .L763
 9913 0020 1868     		ldr	r0, [r3]
 9914 0022 0569     		ldr	r5, [r0, #16]
 9915              		.loc 1 8255 24 view .LVU2585
 9916 0024 0123     		movs	r3, #1
 9917 0026 0DF10702 		add	r2, sp, #7
 9918 002a 3D21     		movs	r1, #61
 9919 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9920 002e A847     		blx	r5
 9921              	.LVL1033:
8256:Core/Src/bno055.c ****                                                       BNO055_OPERATION_MODE_REG,
8257:Core/Src/bno055.c ****                                                       &data_u8r,
8258:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8259:Core/Src/bno055.c ****             *operation_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_OPERATION_MODE);
 9922              		.loc 1 8259 13 is_stmt 1 view .LVU2586
 9923              		.loc 1 8259 34 is_stmt 0 view .LVU2587
 9924 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9925 0034 03F00F03 		and	r3, r3, #15
 9926              		.loc 1 8259 32 view .LVU2588
 9927 0038 2370     		strb	r3, [r4]
 9928              	.LVL1034:
 9929              	.L756:
8260:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 328


8261:Core/Src/bno055.c ****         else
8262:Core/Src/bno055.c ****         {
8263:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8264:Core/Src/bno055.c ****         }
8265:Core/Src/bno055.c ****     }
8266:Core/Src/bno055.c **** 
8267:Core/Src/bno055.c ****     return com_rslt;
8268:Core/Src/bno055.c **** }
 9930              		.loc 1 8268 1 view .LVU2589
 9931 003a 03B0     		add	sp, sp, #12
 9932              	.LCFI343:
 9933              		.cfi_remember_state
 9934              		.cfi_def_cfa_offset 12
 9935              		@ sp needed
 9936 003c 30BD     		pop	{r4, r5, pc}
 9937              	.LVL1035:
 9938              	.L762:
 9939              	.LCFI344:
 9940              		.cfi_restore_state
8250:Core/Src/bno055.c ****         }
 9941              		.loc 1 8250 13 is_stmt 1 view .LVU2590
8250:Core/Src/bno055.c ****         }
 9942              		.loc 1 8250 23 is_stmt 0 view .LVU2591
 9943 003e 0020     		movs	r0, #0
 9944              	.LVL1036:
8250:Core/Src/bno055.c ****         }
 9945              		.loc 1 8250 23 view .LVU2592
 9946 0040 FFF7FEFF 		bl	bno055_write_page_id
 9947              	.LVL1037:
8252:Core/Src/bno055.c ****         {
 9948              		.loc 1 8252 9 is_stmt 1 view .LVU2593
8252:Core/Src/bno055.c ****         {
 9949              		.loc 1 8252 12 is_stmt 0 view .LVU2594
 9950 0044 0028     		cmp	r0, #0
 9951 0046 EAD0     		beq	.L758
 9952 0048 E5E7     		b	.L757
 9953              	.LVL1038:
 9954              	.L759:
8241:Core/Src/bno055.c ****     }
 9955              		.loc 1 8241 16 view .LVU2595
 9956 004a 6FF07E00 		mvn	r0, #126
 9957              	.LVL1039:
8241:Core/Src/bno055.c ****     }
 9958              		.loc 1 8241 16 view .LVU2596
 9959 004e F4E7     		b	.L756
 9960              	.LVL1040:
 9961              	.L760:
8263:Core/Src/bno055.c ****         }
 9962              		.loc 1 8263 22 view .LVU2597
 9963 0050 4FF0FF30 		mov	r0, #-1
 9964 0054 F1E7     		b	.L756
 9965              	.L764:
 9966 0056 00BF     		.align	2
 9967              	.L763:
 9968 0058 00000000 		.word	.LANCHOR0
 9969              		.cfi_endproc
 9970              	.LFE145:
ARM GAS  /tmp/ccWoU29M.s 			page 329


 9972              		.section	.text.bno055_set_operation_mode,"ax",%progbits
 9973              		.align	1
 9974              		.global	bno055_set_operation_mode
 9975              		.syntax unified
 9976              		.thumb
 9977              		.thumb_func
 9978              		.fpu fpv4-sp-d16
 9980              	bno055_set_operation_mode:
 9981              	.LVL1041:
 9982              	.LFB146:
8269:Core/Src/bno055.c **** 
8270:Core/Src/bno055.c **** /*! @brief This API used to write the operation mode
8271:Core/Src/bno055.c ****  *  from register from 0x3D bit 0 to 3
8272:Core/Src/bno055.c ****  *
8273:Core/Src/bno055.c ****  *  @param operation_mode_u8 : The value of operation mode
8274:Core/Src/bno055.c ****  *
8275:Core/Src/bno055.c ****  *  operation_mode_u8  |      result            | comments
8276:Core/Src/bno055.c ****  * ---------|-----------------------------------|--------------------------
8277:Core/Src/bno055.c ****  *  0x00    | BNO055_OPERATION_MODE_CONFIG      | Configuration mode
8278:Core/Src/bno055.c ****  *  0x01    | BNO055_OPERATION_MODE_ACCONLY     | Reads accel data alone
8279:Core/Src/bno055.c ****  *  0x02    | BNO055_OPERATION_MODE_MAGONLY     | Reads mag data alone
8280:Core/Src/bno055.c ****  *  0x03    | BNO055_OPERATION_MODE_GYRONLY     | Reads gyro data alone
8281:Core/Src/bno055.c ****  *  0x04    | BNO055_OPERATION_MODE_ACCMAG      | Reads accel and mag data
8282:Core/Src/bno055.c ****  *  0x05    | BNO055_OPERATION_MODE_ACCGYRO     | Reads accel and gyro data
8283:Core/Src/bno055.c ****  *  0x06    | BNO055_OPERATION_MODE_MAGGYRO     | Reads accel and mag data
8284:Core/Src/bno055.c ****  *  0x07    | OPERATION_MODE_ANY_MOTION         | Reads accel mag and
8285:Core/Src/bno055.c ****  *          |       -                           | gyro data
8286:Core/Src/bno055.c ****  *  0x08    | BNO055_OPERATION_MODE_IMUPLUS     | Inertial measurement unit
8287:Core/Src/bno055.c ****  *   -      |                                   | Reads accel,gyro and
8288:Core/Src/bno055.c ****  *          |       -                           | fusion data
8289:Core/Src/bno055.c ****  *  0x09    | BNO055_OPERATION_MODE_COMPASS     | Reads accel, mag data
8290:Core/Src/bno055.c ****  *   -      |       -                           | and fusion data
8291:Core/Src/bno055.c ****  *  0x0A    | BNO055_OPERATION_MODE_M4G         | Reads accel, mag data
8292:Core/Src/bno055.c ****  *    -     |       -                           | and fusion data
8293:Core/Src/bno055.c ****  *  0x0B    | BNO055_OPERATION_MODE_NDOF_FMC_OFF| Nine degrees of freedom with
8294:Core/Src/bno055.c ****  *   -      |       -                           | fast magnetic calibration
8295:Core/Src/bno055.c ****  *   -      |       -                           | Reads accel,mag, gyro
8296:Core/Src/bno055.c ****  *   -      |       -                           | and fusion data
8297:Core/Src/bno055.c ****  *  0x0C    | BNO055_OPERATION_MODE_NDOF        | Nine degrees of freedom
8298:Core/Src/bno055.c ****  *   -      |       -                           | Reads accel,mag, gyro
8299:Core/Src/bno055.c ****  *   -      |       -                           | and fusion data
8300:Core/Src/bno055.c ****  *
8301:Core/Src/bno055.c ****  *  @return results of bus communication function
8302:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8303:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8304:Core/Src/bno055.c ****  *
8305:Core/Src/bno055.c ****  *  @note In the config mode, all sensor and fusion data
8306:Core/Src/bno055.c ****  *  becomes zero and it is mainly derived
8307:Core/Src/bno055.c ****  *  to configure the various settings of the BNO
8308:Core/Src/bno055.c ****  *
8309:Core/Src/bno055.c ****  */
8310:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_operation_mode(u8 operation_mode_u8)
8311:Core/Src/bno055.c **** {
 9983              		.loc 1 8311 1 is_stmt 1 view -0
 9984              		.cfi_startproc
 9985              		@ args = 0, pretend = 0, frame = 8
 9986              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccWoU29M.s 			page 330


 9987              		.loc 1 8311 1 is_stmt 0 view .LVU2599
 9988 0000 70B5     		push	{r4, r5, r6, lr}
 9989              	.LCFI345:
 9990              		.cfi_def_cfa_offset 16
 9991              		.cfi_offset 4, -16
 9992              		.cfi_offset 5, -12
 9993              		.cfi_offset 6, -8
 9994              		.cfi_offset 14, -4
 9995 0002 82B0     		sub	sp, sp, #8
 9996              	.LCFI346:
 9997              		.cfi_def_cfa_offset 24
8312:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9998              		.loc 1 8312 5 is_stmt 1 view .LVU2600
 9999              	.LVL1042:
8313:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 10000              		.loc 1 8313 5 view .LVU2601
 10001              		.loc 1 8313 8 is_stmt 0 view .LVU2602
 10002 0004 0023     		movs	r3, #0
 10003 0006 8DF80730 		strb	r3, [sp, #7]
8314:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 10004              		.loc 1 8314 5 is_stmt 1 view .LVU2603
 10005              		.loc 1 8314 8 is_stmt 0 view .LVU2604
 10006 000a 8DF80630 		strb	r3, [sp, #6]
8315:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 10007              		.loc 1 8315 5 is_stmt 1 view .LVU2605
 10008              	.LVL1043:
8316:Core/Src/bno055.c **** 
8317:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8318:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 10009              		.loc 1 8318 5 view .LVU2606
 10010              		.loc 1 8318 18 is_stmt 0 view .LVU2607
 10011 000e 434B     		ldr	r3, .L773
 10012 0010 1B68     		ldr	r3, [r3]
 10013              		.loc 1 8318 8 view .LVU2608
 10014 0012 002B     		cmp	r3, #0
 10015 0014 7CD0     		beq	.L769
 10016 0016 0546     		mov	r5, r0
8319:Core/Src/bno055.c ****     {
8320:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8321:Core/Src/bno055.c ****     }
8322:Core/Src/bno055.c ****     else
8323:Core/Src/bno055.c ****     {
8324:Core/Src/bno055.c ****         /* The write operation effective only if the operation
8325:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
8326:Core/Src/bno055.c ****          * current operation mode and set the config mode */
8327:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 10017              		.loc 1 8327 9 is_stmt 1 view .LVU2609
 10018              		.loc 1 8327 19 is_stmt 0 view .LVU2610
 10019 0018 0DF10600 		add	r0, sp, #6
 10020              	.LVL1044:
 10021              		.loc 1 8327 19 view .LVU2611
 10022 001c FFF7FEFF 		bl	bno055_get_operation_mode
 10023              	.LVL1045:
8328:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 10024              		.loc 1 8328 9 is_stmt 1 view .LVU2612
 10025              		.loc 1 8328 12 is_stmt 0 view .LVU2613
 10026 0020 0028     		cmp	r0, #0
ARM GAS  /tmp/ccWoU29M.s 			page 331


 10027 0022 78D1     		bne	.L770
8329:Core/Src/bno055.c ****         {
8330:Core/Src/bno055.c ****             /* If the previous operation mode is config it is
8331:Core/Src/bno055.c ****              * directly write the operation mode */
8332:Core/Src/bno055.c ****             if (prev_opmode_u8 == BNO055_OPERATION_MODE_CONFIG)
 10028              		.loc 1 8332 13 is_stmt 1 view .LVU2614
 10029              		.loc 1 8332 32 is_stmt 0 view .LVU2615
 10030 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 10031              		.loc 1 8332 16 view .LVU2616
 10032 0028 43BB     		cbnz	r3, .L767
8333:Core/Src/bno055.c ****             {
8334:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 10033              		.loc 1 8334 17 is_stmt 1 view .LVU2617
 10034              		.loc 1 8334 36 is_stmt 0 view .LVU2618
 10035 002a 3C4B     		ldr	r3, .L773
 10036 002c 1868     		ldr	r0, [r3]
 10037              	.LVL1046:
 10038              		.loc 1 8334 36 view .LVU2619
 10039 002e 0469     		ldr	r4, [r0, #16]
 10040              		.loc 1 8334 28 view .LVU2620
 10041 0030 0123     		movs	r3, #1
 10042 0032 0DF10702 		add	r2, sp, #7
 10043 0036 3D21     		movs	r1, #61
 10044 0038 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 10045 003a A047     		blx	r4
 10046              	.LVL1047:
8335:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
8336:Core/Src/bno055.c ****                                                           &data_u8r,
8337:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8338:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 10047              		.loc 1 8338 17 is_stmt 1 view .LVU2621
 10048              		.loc 1 8338 20 is_stmt 0 view .LVU2622
 10049 003c 0446     		mov	r4, r0
 10050 003e D0B9     		cbnz	r0, .L766
8339:Core/Src/bno055.c ****                 {
8340:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_OPERATION_MODE, operation_mode_
 10051              		.loc 1 8340 21 is_stmt 1 view .LVU2623
 10052              		.loc 1 8340 32 is_stmt 0 view .LVU2624
 10053 0040 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 10054              	.LVL1048:
 10055              		.loc 1 8340 32 view .LVU2625
 10056 0044 20F00F00 		bic	r0, r0, #15
 10057 0048 43B2     		sxtb	r3, r0
 10058 004a 05F00F00 		and	r0, r5, #15
 10059 004e 1843     		orrs	r0, r0, r3
 10060              		.loc 1 8340 30 view .LVU2626
 10061 0050 8DF80700 		strb	r0, [sp, #7]
8341:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10062              		.loc 1 8341 21 is_stmt 1 view .LVU2627
 10063              		.loc 1 8341 41 is_stmt 0 view .LVU2628
 10064 0054 314D     		ldr	r5, .L773
 10065 0056 2868     		ldr	r0, [r5]
 10066 0058 C668     		ldr	r6, [r0, #12]
 10067              		.loc 1 8341 33 view .LVU2629
 10068 005a 0123     		movs	r3, #1
 10069 005c 0DF10702 		add	r2, sp, #7
 10070 0060 3D21     		movs	r1, #61
ARM GAS  /tmp/ccWoU29M.s 			page 332


 10071 0062 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 10072 0064 B047     		blx	r6
 10073              	.LVL1049:
 10074              		.loc 1 8341 30 view .LVU2630
 10075 0066 54FA80F4 		uxtab	r4, r4, r0
 10076 006a 64B2     		sxtb	r4, r4
 10077              	.LVL1050:
8342:Core/Src/bno055.c ****                                                                 BNO055_OPERATION_MODE_REG,
8343:Core/Src/bno055.c ****                                                                 &data_u8r,
8344:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
8345:Core/Src/bno055.c **** 
8346:Core/Src/bno055.c ****                     /* Config mode to other
8347:Core/Src/bno055.c ****                      * operation mode switching
8348:Core/Src/bno055.c ****                      * required delay of 600ms*/
8349:Core/Src/bno055.c ****                     p_bno055->delay_msec(BNO055_MODE_SWITCHING_DELAY);
 10078              		.loc 1 8349 21 is_stmt 1 view .LVU2631
 10079              		.loc 1 8349 29 is_stmt 0 view .LVU2632
 10080 006c 2B68     		ldr	r3, [r5]
 10081 006e 5B69     		ldr	r3, [r3, #20]
 10082              		.loc 1 8349 21 view .LVU2633
 10083 0070 4FF41670 		mov	r0, #600
 10084 0074 9847     		blx	r3
 10085              	.LVL1051:
 10086              	.L766:
8350:Core/Src/bno055.c ****                 }
8351:Core/Src/bno055.c ****             }
8352:Core/Src/bno055.c ****             else
8353:Core/Src/bno055.c ****             {
8354:Core/Src/bno055.c ****                 /* If the previous operation
8355:Core/Src/bno055.c ****                  * mode is not config it is
8356:Core/Src/bno055.c ****                  * write the config mode */
8357:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
8358:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
8359:Core/Src/bno055.c ****                                                           &data_u8r,
8360:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8361:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
8362:Core/Src/bno055.c ****                 {
8363:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_OPERATION_MODE, BNO055_OPERATIO
8364:Core/Src/bno055.c ****                     com_rslt +=
8365:Core/Src/bno055.c ****                         bno055_write_register(BNO055_OPERATION_MODE_REG, &data_u8r, BNO055_GEN_READ
8366:Core/Src/bno055.c **** 
8367:Core/Src/bno055.c ****                     /* other mode to config mode switching
8368:Core/Src/bno055.c ****                      * required delay of 20ms*/
8369:Core/Src/bno055.c ****                     p_bno055->delay_msec(BNO055_CONFIG_MODE_SWITCHING_DELAY);
8370:Core/Src/bno055.c ****                 }
8371:Core/Src/bno055.c **** 
8372:Core/Src/bno055.c ****                 /* Write the operation mode */
8373:Core/Src/bno055.c ****                 if (operation_mode_u8 != BNO055_OPERATION_MODE_CONFIG)
8374:Core/Src/bno055.c ****                 {
8375:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
8376:Core/Src/bno055.c ****                                                               BNO055_OPERATION_MODE_REG,
8377:Core/Src/bno055.c ****                                                               &data_u8r,
8378:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
8379:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
8380:Core/Src/bno055.c ****                     {
8381:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_OPERATION_MODE, operation_m
8382:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccWoU29M.s 			page 333


8383:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
8384:Core/Src/bno055.c ****                                                                     &data_u8r,
8385:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
8386:Core/Src/bno055.c **** 
8387:Core/Src/bno055.c ****                         /* Config mode to other
8388:Core/Src/bno055.c ****                          * operation mode switching
8389:Core/Src/bno055.c ****                          * required delay of 600ms*/
8390:Core/Src/bno055.c ****                         p_bno055->delay_msec(BNO055_MODE_SWITCHING_DELAY);
8391:Core/Src/bno055.c ****                     }
8392:Core/Src/bno055.c ****                 }
8393:Core/Src/bno055.c ****             }
8394:Core/Src/bno055.c ****         }
8395:Core/Src/bno055.c ****         else
8396:Core/Src/bno055.c ****         {
8397:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8398:Core/Src/bno055.c ****         }
8399:Core/Src/bno055.c ****     }
8400:Core/Src/bno055.c **** 
8401:Core/Src/bno055.c ****     return com_rslt;
8402:Core/Src/bno055.c **** }
 10087              		.loc 1 8402 1 view .LVU2634
 10088 0076 2046     		mov	r0, r4
 10089 0078 02B0     		add	sp, sp, #8
 10090              	.LCFI347:
 10091              		.cfi_remember_state
 10092              		.cfi_def_cfa_offset 16
 10093              		@ sp needed
 10094 007a 70BD     		pop	{r4, r5, r6, pc}
 10095              	.LVL1052:
 10096              	.L767:
 10097              	.LCFI348:
 10098              		.cfi_restore_state
8357:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
 10099              		.loc 1 8357 17 is_stmt 1 view .LVU2635
8357:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
 10100              		.loc 1 8357 36 is_stmt 0 view .LVU2636
 10101 007c 274B     		ldr	r3, .L773
 10102 007e 1868     		ldr	r0, [r3]
 10103              	.LVL1053:
8357:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
 10104              		.loc 1 8357 36 view .LVU2637
 10105 0080 0469     		ldr	r4, [r0, #16]
8357:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
 10106              		.loc 1 8357 28 view .LVU2638
 10107 0082 0123     		movs	r3, #1
 10108 0084 0DF10702 		add	r2, sp, #7
 10109 0088 3D21     		movs	r1, #61
 10110 008a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 10111 008c A047     		blx	r4
 10112              	.LVL1054:
8361:Core/Src/bno055.c ****                 {
 10113              		.loc 1 8361 17 is_stmt 1 view .LVU2639
8361:Core/Src/bno055.c ****                 {
 10114              		.loc 1 8361 20 is_stmt 0 view .LVU2640
 10115 008e 0446     		mov	r4, r0
 10116 0090 48B3     		cbz	r0, .L772
 10117              	.LVL1055:
ARM GAS  /tmp/ccWoU29M.s 			page 334


 10118              	.L768:
8373:Core/Src/bno055.c ****                 {
 10119              		.loc 1 8373 17 is_stmt 1 view .LVU2641
8373:Core/Src/bno055.c ****                 {
 10120              		.loc 1 8373 20 is_stmt 0 view .LVU2642
 10121 0092 002D     		cmp	r5, #0
 10122 0094 EFD0     		beq	.L766
8375:Core/Src/bno055.c ****                                                               BNO055_OPERATION_MODE_REG,
 10123              		.loc 1 8375 21 is_stmt 1 view .LVU2643
8375:Core/Src/bno055.c ****                                                               BNO055_OPERATION_MODE_REG,
 10124              		.loc 1 8375 40 is_stmt 0 view .LVU2644
 10125 0096 214B     		ldr	r3, .L773
 10126 0098 1868     		ldr	r0, [r3]
 10127 009a 0469     		ldr	r4, [r0, #16]
 10128              	.LVL1056:
8375:Core/Src/bno055.c ****                                                               BNO055_OPERATION_MODE_REG,
 10129              		.loc 1 8375 32 view .LVU2645
 10130 009c 0123     		movs	r3, #1
 10131 009e 0DF10702 		add	r2, sp, #7
 10132 00a2 3D21     		movs	r1, #61
 10133 00a4 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 10134 00a6 A047     		blx	r4
 10135              	.LVL1057:
8379:Core/Src/bno055.c ****                     {
 10136              		.loc 1 8379 21 is_stmt 1 view .LVU2646
8379:Core/Src/bno055.c ****                     {
 10137              		.loc 1 8379 24 is_stmt 0 view .LVU2647
 10138 00a8 0446     		mov	r4, r0
 10139 00aa 0028     		cmp	r0, #0
 10140 00ac E3D1     		bne	.L766
8381:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10141              		.loc 1 8381 25 is_stmt 1 view .LVU2648
8381:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10142              		.loc 1 8381 36 is_stmt 0 view .LVU2649
 10143 00ae 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 10144              	.LVL1058:
8381:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10145              		.loc 1 8381 36 view .LVU2650
 10146 00b2 20F00F00 		bic	r0, r0, #15
 10147 00b6 43B2     		sxtb	r3, r0
 10148 00b8 05F00F00 		and	r0, r5, #15
 10149 00bc 1843     		orrs	r0, r0, r3
8381:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10150              		.loc 1 8381 34 view .LVU2651
 10151 00be 8DF80700 		strb	r0, [sp, #7]
8382:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
 10152              		.loc 1 8382 25 is_stmt 1 view .LVU2652
8382:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
 10153              		.loc 1 8382 45 is_stmt 0 view .LVU2653
 10154 00c2 164D     		ldr	r5, .L773
 10155 00c4 2868     		ldr	r0, [r5]
 10156 00c6 C668     		ldr	r6, [r0, #12]
8382:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
 10157              		.loc 1 8382 37 view .LVU2654
 10158 00c8 0123     		movs	r3, #1
 10159 00ca 0DF10702 		add	r2, sp, #7
 10160 00ce 3D21     		movs	r1, #61
ARM GAS  /tmp/ccWoU29M.s 			page 335


 10161 00d0 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 10162 00d2 B047     		blx	r6
 10163              	.LVL1059:
8382:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
 10164              		.loc 1 8382 34 view .LVU2655
 10165 00d4 54FA80F4 		uxtab	r4, r4, r0
 10166 00d8 64B2     		sxtb	r4, r4
 10167              	.LVL1060:
8390:Core/Src/bno055.c ****                     }
 10168              		.loc 1 8390 25 is_stmt 1 view .LVU2656
8390:Core/Src/bno055.c ****                     }
 10169              		.loc 1 8390 33 is_stmt 0 view .LVU2657
 10170 00da 2B68     		ldr	r3, [r5]
 10171 00dc 5B69     		ldr	r3, [r3, #20]
8390:Core/Src/bno055.c ****                     }
 10172              		.loc 1 8390 25 view .LVU2658
 10173 00de 4FF41670 		mov	r0, #600
 10174 00e2 9847     		blx	r3
 10175              	.LVL1061:
 10176 00e4 C7E7     		b	.L766
 10177              	.LVL1062:
 10178              	.L772:
8363:Core/Src/bno055.c ****                     com_rslt +=
 10179              		.loc 1 8363 21 is_stmt 1 view .LVU2659
8363:Core/Src/bno055.c ****                     com_rslt +=
 10180              		.loc 1 8363 32 is_stmt 0 view .LVU2660
 10181 00e6 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 10182 00ea 03F0F003 		and	r3, r3, #240
8363:Core/Src/bno055.c ****                     com_rslt +=
 10183              		.loc 1 8363 30 view .LVU2661
 10184 00ee 8DF80730 		strb	r3, [sp, #7]
8364:Core/Src/bno055.c ****                         bno055_write_register(BNO055_OPERATION_MODE_REG, &data_u8r, BNO055_GEN_READ
 10185              		.loc 1 8364 21 is_stmt 1 view .LVU2662
8365:Core/Src/bno055.c **** 
 10186              		.loc 1 8365 25 is_stmt 0 view .LVU2663
 10187 00f2 0122     		movs	r2, #1
 10188 00f4 0DF10701 		add	r1, sp, #7
 10189 00f8 3D20     		movs	r0, #61
 10190              	.LVL1063:
8365:Core/Src/bno055.c **** 
 10191              		.loc 1 8365 25 view .LVU2664
 10192 00fa FFF7FEFF 		bl	bno055_write_register
 10193              	.LVL1064:
8364:Core/Src/bno055.c ****                         bno055_write_register(BNO055_OPERATION_MODE_REG, &data_u8r, BNO055_GEN_READ
 10194              		.loc 1 8364 30 view .LVU2665
 10195 00fe 54FA80F4 		uxtab	r4, r4, r0
 10196 0102 64B2     		sxtb	r4, r4
 10197              	.LVL1065:
8369:Core/Src/bno055.c ****                 }
 10198              		.loc 1 8369 21 is_stmt 1 view .LVU2666
8369:Core/Src/bno055.c ****                 }
 10199              		.loc 1 8369 29 is_stmt 0 view .LVU2667
 10200 0104 054B     		ldr	r3, .L773
 10201 0106 1B68     		ldr	r3, [r3]
 10202 0108 5B69     		ldr	r3, [r3, #20]
8369:Core/Src/bno055.c ****                 }
 10203              		.loc 1 8369 21 view .LVU2668
ARM GAS  /tmp/ccWoU29M.s 			page 336


 10204 010a 1420     		movs	r0, #20
 10205 010c 9847     		blx	r3
 10206              	.LVL1066:
 10207 010e C0E7     		b	.L768
 10208              	.LVL1067:
 10209              	.L769:
8320:Core/Src/bno055.c ****     }
 10210              		.loc 1 8320 16 view .LVU2669
 10211 0110 6FF07E04 		mvn	r4, #126
 10212 0114 AFE7     		b	.L766
 10213              	.LVL1068:
 10214              	.L770:
8397:Core/Src/bno055.c ****         }
 10215              		.loc 1 8397 22 view .LVU2670
 10216 0116 4FF0FF34 		mov	r4, #-1
 10217 011a ACE7     		b	.L766
 10218              	.L774:
 10219              		.align	2
 10220              	.L773:
 10221 011c 00000000 		.word	.LANCHOR0
 10222              		.cfi_endproc
 10223              	.LFE146:
 10225              		.section	.text.bno055_set_accel_unit,"ax",%progbits
 10226              		.align	1
 10227              		.global	bno055_set_accel_unit
 10228              		.syntax unified
 10229              		.thumb
 10230              		.thumb_func
 10231              		.fpu fpv4-sp-d16
 10233              	bno055_set_accel_unit:
 10234              	.LVL1069:
 10235              	.LFB134:
7463:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 10236              		.loc 1 7463 1 is_stmt 1 view -0
 10237              		.cfi_startproc
 10238              		@ args = 0, pretend = 0, frame = 8
 10239              		@ frame_needed = 0, uses_anonymous_args = 0
7463:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 10240              		.loc 1 7463 1 is_stmt 0 view .LVU2672
 10241 0000 30B5     		push	{r4, r5, lr}
 10242              	.LCFI349:
 10243              		.cfi_def_cfa_offset 12
 10244              		.cfi_offset 4, -12
 10245              		.cfi_offset 5, -8
 10246              		.cfi_offset 14, -4
 10247 0002 83B0     		sub	sp, sp, #12
 10248              	.LCFI350:
 10249              		.cfi_def_cfa_offset 24
7464:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 10250              		.loc 1 7464 5 is_stmt 1 view .LVU2673
 10251              	.LVL1070:
7465:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 10252              		.loc 1 7465 5 view .LVU2674
7465:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 10253              		.loc 1 7465 8 is_stmt 0 view .LVU2675
 10254 0004 0023     		movs	r3, #0
 10255 0006 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/ccWoU29M.s 			page 337


7466:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 10256              		.loc 1 7466 5 is_stmt 1 view .LVU2676
7466:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 10257              		.loc 1 7466 8 is_stmt 0 view .LVU2677
 10258 000a 8DF80630 		strb	r3, [sp, #6]
7467:Core/Src/bno055.c **** 
 10259              		.loc 1 7467 5 is_stmt 1 view .LVU2678
 10260              	.LVL1071:
7470:Core/Src/bno055.c ****     {
 10261              		.loc 1 7470 5 view .LVU2679
7470:Core/Src/bno055.c ****     {
 10262              		.loc 1 7470 18 is_stmt 0 view .LVU2680
 10263 000e 254B     		ldr	r3, .L785
 10264 0010 1B68     		ldr	r3, [r3]
7470:Core/Src/bno055.c ****     {
 10265              		.loc 1 7470 8 view .LVU2681
 10266 0012 002B     		cmp	r3, #0
 10267 0014 43D0     		beq	.L779
 10268 0016 0546     		mov	r5, r0
7479:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 10269              		.loc 1 7479 9 is_stmt 1 view .LVU2682
7479:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 10270              		.loc 1 7479 19 is_stmt 0 view .LVU2683
 10271 0018 0DF10600 		add	r0, sp, #6
 10272              	.LVL1072:
7479:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 10273              		.loc 1 7479 19 view .LVU2684
 10274 001c FFF7FEFF 		bl	bno055_get_operation_mode
 10275              	.LVL1073:
7480:Core/Src/bno055.c ****         {
 10276              		.loc 1 7480 9 is_stmt 1 view .LVU2685
7480:Core/Src/bno055.c ****         {
 10277              		.loc 1 7480 12 is_stmt 0 view .LVU2686
 10278 0020 0446     		mov	r4, r0
 10279 0022 58BB     		cbnz	r0, .L780
7482:Core/Src/bno055.c ****             {
 10280              		.loc 1 7482 13 is_stmt 1 view .LVU2687
7482:Core/Src/bno055.c ****             {
 10281              		.loc 1 7482 32 is_stmt 0 view .LVU2688
 10282 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
7482:Core/Src/bno055.c ****             {
 10283              		.loc 1 7482 16 view .LVU2689
 10284 0028 13BB     		cbnz	r3, .L783
 10285              	.LVL1074:
 10286              	.L778:
7486:Core/Src/bno055.c ****             {
 10287              		.loc 1 7486 13 is_stmt 1 view .LVU2690
7486:Core/Src/bno055.c ****             {
 10288              		.loc 1 7486 16 is_stmt 0 view .LVU2691
 10289 002a 7CBB     		cbnz	r4, .L781
7489:Core/Src/bno055.c ****                                                           BNO055_ACCEL_UNIT_REG,
 10290              		.loc 1 7489 17 is_stmt 1 view .LVU2692
7489:Core/Src/bno055.c ****                                                           BNO055_ACCEL_UNIT_REG,
 10291              		.loc 1 7489 36 is_stmt 0 view .LVU2693
 10292 002c 1D4B     		ldr	r3, .L785
 10293 002e 1868     		ldr	r0, [r3]
 10294 0030 0469     		ldr	r4, [r0, #16]
ARM GAS  /tmp/ccWoU29M.s 			page 338


 10295              	.LVL1075:
7489:Core/Src/bno055.c ****                                                           BNO055_ACCEL_UNIT_REG,
 10296              		.loc 1 7489 28 view .LVU2694
 10297 0032 0123     		movs	r3, #1
 10298 0034 0DF10702 		add	r2, sp, #7
 10299 0038 3B21     		movs	r1, #59
 10300 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 10301 003c A047     		blx	r4
 10302              	.LVL1076:
7493:Core/Src/bno055.c ****                 {
 10303              		.loc 1 7493 17 is_stmt 1 view .LVU2695
7493:Core/Src/bno055.c ****                 {
 10304              		.loc 1 7493 20 is_stmt 0 view .LVU2696
 10305 003e 0446     		mov	r4, r0
 10306 0040 F0B9     		cbnz	r0, .L777
7495:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10307              		.loc 1 7495 21 is_stmt 1 view .LVU2697
7495:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10308              		.loc 1 7495 32 is_stmt 0 view .LVU2698
 10309 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 10310              	.LVL1077:
7495:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10311              		.loc 1 7495 32 view .LVU2699
 10312 0046 20F00100 		bic	r0, r0, #1
 10313 004a 43B2     		sxtb	r3, r0
 10314 004c 05F00100 		and	r0, r5, #1
 10315 0050 1843     		orrs	r0, r0, r3
7495:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10316              		.loc 1 7495 30 view .LVU2700
 10317 0052 8DF80700 		strb	r0, [sp, #7]
7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 10318              		.loc 1 7496 21 is_stmt 1 view .LVU2701
7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 10319              		.loc 1 7496 41 is_stmt 0 view .LVU2702
 10320 0056 134B     		ldr	r3, .L785
 10321 0058 1868     		ldr	r0, [r3]
 10322 005a C568     		ldr	r5, [r0, #12]
7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 10323              		.loc 1 7496 33 view .LVU2703
 10324 005c 0123     		movs	r3, #1
 10325 005e 0DF10702 		add	r2, sp, #7
 10326 0062 3B21     		movs	r1, #59
 10327 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 10328 0066 A847     		blx	r5
 10329              	.LVL1078:
7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 10330              		.loc 1 7496 30 view .LVU2704
 10331 0068 54FA80F4 		uxtab	r4, r4, r0
 10332 006c 64B2     		sxtb	r4, r4
 10333              	.LVL1079:
7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 10334              		.loc 1 7496 30 view .LVU2705
 10335 006e 07E0     		b	.L777
 10336              	.LVL1080:
 10337              	.L783:
7484:Core/Src/bno055.c ****             }
 10338              		.loc 1 7484 17 is_stmt 1 view .LVU2706
ARM GAS  /tmp/ccWoU29M.s 			page 339


7484:Core/Src/bno055.c ****             }
 10339              		.loc 1 7484 28 is_stmt 0 view .LVU2707
 10340 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 10341              	.LVL1081:
7484:Core/Src/bno055.c ****             }
 10342              		.loc 1 7484 25 view .LVU2708
 10343 0074 54FA80F4 		uxtab	r4, r4, r0
 10344 0078 64B2     		sxtb	r4, r4
 10345              	.LVL1082:
7484:Core/Src/bno055.c ****             }
 10346              		.loc 1 7484 25 view .LVU2709
 10347 007a D6E7     		b	.L778
 10348              	.LVL1083:
 10349              	.L780:
7509:Core/Src/bno055.c ****         }
 10350              		.loc 1 7509 22 view .LVU2710
 10351 007c 4FF0FF34 		mov	r4, #-1
 10352              	.LVL1084:
 10353              	.L777:
7512:Core/Src/bno055.c ****     {
 10354              		.loc 1 7512 5 is_stmt 1 view .LVU2711
7512:Core/Src/bno055.c ****     {
 10355              		.loc 1 7512 24 is_stmt 0 view .LVU2712
 10356 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
7512:Core/Src/bno055.c ****     {
 10357              		.loc 1 7512 8 view .LVU2713
 10358 0084 28B9     		cbnz	r0, .L784
 10359              	.LVL1085:
 10360              	.L776:
7520:Core/Src/bno055.c **** 
 10361              		.loc 1 7520 1 view .LVU2714
 10362 0086 2046     		mov	r0, r4
 10363 0088 03B0     		add	sp, sp, #12
 10364              	.LCFI351:
 10365              		.cfi_remember_state
 10366              		.cfi_def_cfa_offset 12
 10367              		@ sp needed
 10368 008a 30BD     		pop	{r4, r5, pc}
 10369              	.LVL1086:
 10370              	.L781:
 10371              	.LCFI352:
 10372              		.cfi_restore_state
7504:Core/Src/bno055.c ****             }
 10373              		.loc 1 7504 26 view .LVU2715
 10374 008c 4FF0FF34 		mov	r4, #-1
 10375              	.LVL1087:
7504:Core/Src/bno055.c ****             }
 10376              		.loc 1 7504 26 view .LVU2716
 10377 0090 F6E7     		b	.L777
 10378              	.LVL1088:
 10379              	.L784:
7516:Core/Src/bno055.c ****     }
 10380              		.loc 1 7516 9 is_stmt 1 view .LVU2717
7516:Core/Src/bno055.c ****     }
 10381              		.loc 1 7516 21 is_stmt 0 view .LVU2718
 10382 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 10383              	.LVL1089:
ARM GAS  /tmp/ccWoU29M.s 			page 340


7516:Core/Src/bno055.c ****     }
 10384              		.loc 1 7516 18 view .LVU2719
 10385 0096 54FA80F4 		uxtab	r4, r4, r0
 10386              	.LVL1090:
7516:Core/Src/bno055.c ****     }
 10387              		.loc 1 7516 18 view .LVU2720
 10388 009a 64B2     		sxtb	r4, r4
 10389              	.LVL1091:
7516:Core/Src/bno055.c ****     }
 10390              		.loc 1 7516 18 view .LVU2721
 10391 009c F3E7     		b	.L776
 10392              	.LVL1092:
 10393              	.L779:
7472:Core/Src/bno055.c ****     }
 10394              		.loc 1 7472 16 view .LVU2722
 10395 009e 6FF07E04 		mvn	r4, #126
 10396 00a2 F0E7     		b	.L776
 10397              	.L786:
 10398              		.align	2
 10399              	.L785:
 10400 00a4 00000000 		.word	.LANCHOR0
 10401              		.cfi_endproc
 10402              	.LFE134:
 10404              		.section	.text.bno055_convert_float_accel_x_msq,"ax",%progbits
 10405              		.align	1
 10406              		.global	bno055_convert_float_accel_x_msq
 10407              		.syntax unified
 10408              		.thumb
 10409              		.thumb_func
 10410              		.fpu fpv4-sp-d16
 10412              	bno055_convert_float_accel_x_msq:
 10413              	.LVL1093:
 10414              	.LFB41:
2865:Core/Src/bno055.c ****     /* Variable used to return value of
 10415              		.loc 1 2865 1 is_stmt 1 view -0
 10416              		.cfi_startproc
 10417              		@ args = 0, pretend = 0, frame = 8
 10418              		@ frame_needed = 0, uses_anonymous_args = 0
2865:Core/Src/bno055.c ****     /* Variable used to return value of
 10419              		.loc 1 2865 1 is_stmt 0 view .LVU2724
 10420 0000 30B5     		push	{r4, r5, lr}
 10421              	.LCFI353:
 10422              		.cfi_def_cfa_offset 12
 10423              		.cfi_offset 4, -12
 10424              		.cfi_offset 5, -8
 10425              		.cfi_offset 14, -4
 10426 0002 83B0     		sub	sp, sp, #12
 10427              	.LCFI354:
 10428              		.cfi_def_cfa_offset 24
 10429 0004 0546     		mov	r5, r0
2868:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
 10430              		.loc 1 2868 5 is_stmt 1 view .LVU2725
 10431              	.LVL1094:
2869:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10432              		.loc 1 2869 5 view .LVU2726
2869:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10433              		.loc 1 2869 9 is_stmt 0 view .LVU2727
ARM GAS  /tmp/ccWoU29M.s 			page 341


 10434 0006 0023     		movs	r3, #0
 10435 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
2870:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10436              		.loc 1 2870 5 is_stmt 1 view .LVU2728
 10437              	.LVL1095:
2871:Core/Src/bno055.c **** 
 10438              		.loc 1 2871 5 view .LVU2729
2871:Core/Src/bno055.c **** 
 10439              		.loc 1 2871 8 is_stmt 0 view .LVU2730
 10440 000c 8DF80530 		strb	r3, [sp, #5]
2875:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10441              		.loc 1 2875 5 is_stmt 1 view .LVU2731
2875:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10442              		.loc 1 2875 16 is_stmt 0 view .LVU2732
 10443 0010 0DF10500 		add	r0, sp, #5
 10444              	.LVL1096:
2875:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10445              		.loc 1 2875 16 view .LVU2733
 10446 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10447              	.LVL1097:
 10448 0018 0446     		mov	r4, r0
 10449              	.LVL1098:
2876:Core/Src/bno055.c ****     {
 10450              		.loc 1 2876 5 is_stmt 1 view .LVU2734
2876:Core/Src/bno055.c ****     {
 10451              		.loc 1 2876 23 is_stmt 0 view .LVU2735
 10452 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
2876:Core/Src/bno055.c ****     {
 10453              		.loc 1 2876 8 view .LVU2736
 10454 001e DBB9     		cbnz	r3, .L793
 10455              	.L788:
2880:Core/Src/bno055.c ****     {
 10456              		.loc 1 2880 5 is_stmt 1 view .LVU2737
2880:Core/Src/bno055.c ****     {
 10457              		.loc 1 2880 8 is_stmt 0 view .LVU2738
 10458 0020 0CBB     		cbnz	r4, .L790
2883:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10459              		.loc 1 2883 9 is_stmt 1 view .LVU2739
2883:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10460              		.loc 1 2883 21 is_stmt 0 view .LVU2740
 10461 0022 0DF10600 		add	r0, sp, #6
 10462 0026 FFF7FEFF 		bl	bno055_read_accel_x
 10463              	.LVL1099:
2883:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10464              		.loc 1 2883 18 view .LVU2741
 10465 002a 54FA80F4 		uxtab	r4, r4, r0
 10466              	.LVL1100:
2883:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10467              		.loc 1 2883 18 view .LVU2742
 10468 002e 64B2     		sxtb	r4, r4
 10469              	.LVL1101:
2884:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10470              		.loc 1 2884 9 is_stmt 1 view .LVU2743
2884:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10471              		.loc 1 2884 17 is_stmt 0 view .LVU2744
 10472 0030 104B     		ldr	r3, .L794
 10473 0032 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccWoU29M.s 			page 342


 10474 0034 5B69     		ldr	r3, [r3, #20]
2884:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10475              		.loc 1 2884 9 view .LVU2745
 10476 0036 0120     		movs	r0, #1
 10477 0038 9847     		blx	r3
 10478              	.LVL1102:
2885:Core/Src/bno055.c ****         {
 10479              		.loc 1 2885 9 is_stmt 1 view .LVU2746
2885:Core/Src/bno055.c ****         {
 10480              		.loc 1 2885 12 is_stmt 0 view .LVU2747
 10481 003a BCB9     		cbnz	r4, .L791
2888:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10482              		.loc 1 2888 13 is_stmt 1 view .LVU2748
2888:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10483              		.loc 1 2888 46 is_stmt 0 view .LVU2749
 10484 003c BDF90600 		ldrsh	r0, [sp, #6]
 10485 0040 FFF7FEFF 		bl	__aeabi_i2d
 10486              	.LVL1103:
 10487 0044 0022     		movs	r2, #0
 10488 0046 0C4B     		ldr	r3, .L794+4
 10489 0048 FFF7FEFF 		bl	__aeabi_ddiv
 10490              	.LVL1104:
2888:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10491              		.loc 1 2888 20 view .LVU2750
 10492 004c FFF7FEFF 		bl	__aeabi_d2f
 10493              	.LVL1105:
2889:Core/Src/bno055.c ****         }
 10494              		.loc 1 2889 13 is_stmt 1 view .LVU2751
2889:Core/Src/bno055.c ****         }
 10495              		.loc 1 2889 24 is_stmt 0 view .LVU2752
 10496 0050 2860     		str	r0, [r5]	@ float
 10497              	.LVL1106:
 10498              	.L789:
2901:Core/Src/bno055.c **** }
 10499              		.loc 1 2901 5 is_stmt 1 view .LVU2753
2902:Core/Src/bno055.c **** 
 10500              		.loc 1 2902 1 is_stmt 0 view .LVU2754
 10501 0052 2046     		mov	r0, r4
 10502 0054 03B0     		add	sp, sp, #12
 10503              	.LCFI355:
 10504              		.cfi_remember_state
 10505              		.cfi_def_cfa_offset 12
 10506              		@ sp needed
 10507 0056 30BD     		pop	{r4, r5, pc}
 10508              	.LVL1107:
 10509              	.L793:
 10510              	.LCFI356:
 10511              		.cfi_restore_state
2878:Core/Src/bno055.c ****     }
 10512              		.loc 1 2878 9 is_stmt 1 view .LVU2755
2878:Core/Src/bno055.c ****     }
 10513              		.loc 1 2878 21 is_stmt 0 view .LVU2756
 10514 0058 0020     		movs	r0, #0
 10515 005a FFF7FEFF 		bl	bno055_set_accel_unit
 10516              	.LVL1108:
2878:Core/Src/bno055.c ****     }
 10517              		.loc 1 2878 18 view .LVU2757
ARM GAS  /tmp/ccWoU29M.s 			page 343


 10518 005e 54FA80F4 		uxtab	r4, r4, r0
 10519              	.LVL1109:
2878:Core/Src/bno055.c ****     }
 10520              		.loc 1 2878 18 view .LVU2758
 10521 0062 64B2     		sxtb	r4, r4
 10522              	.LVL1110:
2878:Core/Src/bno055.c ****     }
 10523              		.loc 1 2878 18 view .LVU2759
 10524 0064 DCE7     		b	.L788
 10525              	.L790:
2898:Core/Src/bno055.c ****     }
 10526              		.loc 1 2898 18 view .LVU2760
 10527 0066 4FF0FF34 		mov	r4, #-1
 10528              	.LVL1111:
2898:Core/Src/bno055.c ****     }
 10529              		.loc 1 2898 18 view .LVU2761
 10530 006a F2E7     		b	.L789
 10531              	.LVL1112:
 10532              	.L791:
2893:Core/Src/bno055.c ****         }
 10533              		.loc 1 2893 22 view .LVU2762
 10534 006c 4FF0FF34 		mov	r4, #-1
 10535              	.LVL1113:
2893:Core/Src/bno055.c ****         }
 10536              		.loc 1 2893 22 view .LVU2763
 10537 0070 EFE7     		b	.L789
 10538              	.L795:
 10539 0072 00BF     		.align	2
 10540              	.L794:
 10541 0074 00000000 		.word	.LANCHOR0
 10542 0078 00005940 		.word	1079574528
 10543              		.cfi_endproc
 10544              	.LFE41:
 10546              		.section	.text.bno055_convert_float_accel_x_mg,"ax",%progbits
 10547              		.align	1
 10548              		.global	bno055_convert_float_accel_x_mg
 10549              		.syntax unified
 10550              		.thumb
 10551              		.thumb_func
 10552              		.fpu fpv4-sp-d16
 10554              	bno055_convert_float_accel_x_mg:
 10555              	.LVL1114:
 10556              	.LFB42:
2920:Core/Src/bno055.c ****     /* Variable used to return value of
 10557              		.loc 1 2920 1 is_stmt 1 view -0
 10558              		.cfi_startproc
 10559              		@ args = 0, pretend = 0, frame = 8
 10560              		@ frame_needed = 0, uses_anonymous_args = 0
2920:Core/Src/bno055.c ****     /* Variable used to return value of
 10561              		.loc 1 2920 1 is_stmt 0 view .LVU2765
 10562 0000 30B5     		push	{r4, r5, lr}
 10563              	.LCFI357:
 10564              		.cfi_def_cfa_offset 12
 10565              		.cfi_offset 4, -12
 10566              		.cfi_offset 5, -8
 10567              		.cfi_offset 14, -4
 10568 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccWoU29M.s 			page 344


 10569              	.LCFI358:
 10570              		.cfi_def_cfa_offset 24
 10571 0004 0546     		mov	r5, r0
2923:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
 10572              		.loc 1 2923 5 is_stmt 1 view .LVU2766
 10573              	.LVL1115:
2924:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10574              		.loc 1 2924 5 view .LVU2767
2924:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10575              		.loc 1 2924 9 is_stmt 0 view .LVU2768
 10576 0006 0023     		movs	r3, #0
 10577 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
2925:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10578              		.loc 1 2925 5 is_stmt 1 view .LVU2769
 10579              	.LVL1116:
2926:Core/Src/bno055.c **** 
 10580              		.loc 1 2926 5 view .LVU2770
2926:Core/Src/bno055.c **** 
 10581              		.loc 1 2926 8 is_stmt 0 view .LVU2771
 10582 000c 8DF80530 		strb	r3, [sp, #5]
2930:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10583              		.loc 1 2930 5 is_stmt 1 view .LVU2772
2930:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10584              		.loc 1 2930 16 is_stmt 0 view .LVU2773
 10585 0010 0DF10500 		add	r0, sp, #5
 10586              	.LVL1117:
2930:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10587              		.loc 1 2930 16 view .LVU2774
 10588 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10589              	.LVL1118:
 10590 0018 0446     		mov	r4, r0
 10591              	.LVL1119:
2931:Core/Src/bno055.c ****     {
 10592              		.loc 1 2931 5 is_stmt 1 view .LVU2775
2931:Core/Src/bno055.c ****     {
 10593              		.loc 1 2931 23 is_stmt 0 view .LVU2776
 10594 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
2931:Core/Src/bno055.c ****     {
 10595              		.loc 1 2931 8 view .LVU2777
 10596 001e 012B     		cmp	r3, #1
 10597 0020 12D1     		bne	.L802
 10598              	.L797:
2935:Core/Src/bno055.c ****     {
 10599              		.loc 1 2935 5 is_stmt 1 view .LVU2778
2935:Core/Src/bno055.c ****     {
 10600              		.loc 1 2935 8 is_stmt 0 view .LVU2779
 10601 0022 C4B9     		cbnz	r4, .L799
2938:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10602              		.loc 1 2938 9 is_stmt 1 view .LVU2780
2938:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10603              		.loc 1 2938 21 is_stmt 0 view .LVU2781
 10604 0024 0DF10600 		add	r0, sp, #6
 10605 0028 FFF7FEFF 		bl	bno055_read_accel_x
 10606              	.LVL1120:
2938:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10607              		.loc 1 2938 18 view .LVU2782
 10608 002c 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/ccWoU29M.s 			page 345


 10609              	.LVL1121:
2938:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10610              		.loc 1 2938 18 view .LVU2783
 10611 0030 64B2     		sxtb	r4, r4
 10612              	.LVL1122:
2939:Core/Src/bno055.c ****         {
 10613              		.loc 1 2939 9 is_stmt 1 view .LVU2784
2939:Core/Src/bno055.c ****         {
 10614              		.loc 1 2939 12 is_stmt 0 view .LVU2785
 10615 0032 9CB9     		cbnz	r4, .L800
2942:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10616              		.loc 1 2942 13 is_stmt 1 view .LVU2786
2942:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10617              		.loc 1 2942 46 is_stmt 0 view .LVU2787
 10618 0034 BDF90600 		ldrsh	r0, [sp, #6]
 10619 0038 FFF7FEFF 		bl	__aeabi_i2d
 10620              	.LVL1123:
2942:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10621              		.loc 1 2942 20 view .LVU2788
 10622 003c FFF7FEFF 		bl	__aeabi_d2f
 10623              	.LVL1124:
2943:Core/Src/bno055.c ****         }
 10624              		.loc 1 2943 13 is_stmt 1 view .LVU2789
2943:Core/Src/bno055.c ****         }
 10625              		.loc 1 2943 24 is_stmt 0 view .LVU2790
 10626 0040 2860     		str	r0, [r5]	@ float
 10627              	.LVL1125:
 10628              	.L798:
2955:Core/Src/bno055.c **** }
 10629              		.loc 1 2955 5 is_stmt 1 view .LVU2791
2956:Core/Src/bno055.c **** 
 10630              		.loc 1 2956 1 is_stmt 0 view .LVU2792
 10631 0042 2046     		mov	r0, r4
 10632 0044 03B0     		add	sp, sp, #12
 10633              	.LCFI359:
 10634              		.cfi_remember_state
 10635              		.cfi_def_cfa_offset 12
 10636              		@ sp needed
 10637 0046 30BD     		pop	{r4, r5, pc}
 10638              	.LVL1126:
 10639              	.L802:
 10640              	.LCFI360:
 10641              		.cfi_restore_state
2933:Core/Src/bno055.c ****     }
 10642              		.loc 1 2933 9 is_stmt 1 view .LVU2793
2933:Core/Src/bno055.c ****     }
 10643              		.loc 1 2933 21 is_stmt 0 view .LVU2794
 10644 0048 0120     		movs	r0, #1
 10645 004a FFF7FEFF 		bl	bno055_set_accel_unit
 10646              	.LVL1127:
2933:Core/Src/bno055.c ****     }
 10647              		.loc 1 2933 18 view .LVU2795
 10648 004e 54FA80F4 		uxtab	r4, r4, r0
 10649              	.LVL1128:
2933:Core/Src/bno055.c ****     }
 10650              		.loc 1 2933 18 view .LVU2796
 10651 0052 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccWoU29M.s 			page 346


 10652              	.LVL1129:
2933:Core/Src/bno055.c ****     }
 10653              		.loc 1 2933 18 view .LVU2797
 10654 0054 E5E7     		b	.L797
 10655              	.L799:
2952:Core/Src/bno055.c ****     }
 10656              		.loc 1 2952 18 view .LVU2798
 10657 0056 4FF0FF34 		mov	r4, #-1
 10658              	.LVL1130:
2952:Core/Src/bno055.c ****     }
 10659              		.loc 1 2952 18 view .LVU2799
 10660 005a F2E7     		b	.L798
 10661              	.LVL1131:
 10662              	.L800:
2947:Core/Src/bno055.c ****         }
 10663              		.loc 1 2947 22 view .LVU2800
 10664 005c 4FF0FF34 		mov	r4, #-1
 10665              	.LVL1132:
2947:Core/Src/bno055.c ****         }
 10666              		.loc 1 2947 22 view .LVU2801
 10667 0060 EFE7     		b	.L798
 10668              		.cfi_endproc
 10669              	.LFE42:
 10671              		.section	.text.bno055_convert_float_accel_y_msq,"ax",%progbits
 10672              		.align	1
 10673              		.global	bno055_convert_float_accel_y_msq
 10674              		.syntax unified
 10675              		.thumb
 10676              		.thumb_func
 10677              		.fpu fpv4-sp-d16
 10679              	bno055_convert_float_accel_y_msq:
 10680              	.LVL1133:
 10681              	.LFB43:
2973:Core/Src/bno055.c ****     /* Variable used to return value of
 10682              		.loc 1 2973 1 is_stmt 1 view -0
 10683              		.cfi_startproc
 10684              		@ args = 0, pretend = 0, frame = 8
 10685              		@ frame_needed = 0, uses_anonymous_args = 0
2973:Core/Src/bno055.c ****     /* Variable used to return value of
 10686              		.loc 1 2973 1 is_stmt 0 view .LVU2803
 10687 0000 30B5     		push	{r4, r5, lr}
 10688              	.LCFI361:
 10689              		.cfi_def_cfa_offset 12
 10690              		.cfi_offset 4, -12
 10691              		.cfi_offset 5, -8
 10692              		.cfi_offset 14, -4
 10693 0002 83B0     		sub	sp, sp, #12
 10694              	.LCFI362:
 10695              		.cfi_def_cfa_offset 24
 10696 0004 0546     		mov	r5, r0
2976:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
 10697              		.loc 1 2976 5 is_stmt 1 view .LVU2804
 10698              	.LVL1134:
2977:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10699              		.loc 1 2977 5 view .LVU2805
2977:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10700              		.loc 1 2977 9 is_stmt 0 view .LVU2806
ARM GAS  /tmp/ccWoU29M.s 			page 347


 10701 0006 0023     		movs	r3, #0
 10702 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
2978:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10703              		.loc 1 2978 5 is_stmt 1 view .LVU2807
 10704              	.LVL1135:
2979:Core/Src/bno055.c **** 
 10705              		.loc 1 2979 5 view .LVU2808
2979:Core/Src/bno055.c **** 
 10706              		.loc 1 2979 8 is_stmt 0 view .LVU2809
 10707 000c 8DF80530 		strb	r3, [sp, #5]
2983:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10708              		.loc 1 2983 5 is_stmt 1 view .LVU2810
2983:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10709              		.loc 1 2983 16 is_stmt 0 view .LVU2811
 10710 0010 0DF10500 		add	r0, sp, #5
 10711              	.LVL1136:
2983:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10712              		.loc 1 2983 16 view .LVU2812
 10713 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10714              	.LVL1137:
 10715 0018 0446     		mov	r4, r0
 10716              	.LVL1138:
2984:Core/Src/bno055.c ****     {
 10717              		.loc 1 2984 5 is_stmt 1 view .LVU2813
2984:Core/Src/bno055.c ****     {
 10718              		.loc 1 2984 23 is_stmt 0 view .LVU2814
 10719 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
2984:Core/Src/bno055.c ****     {
 10720              		.loc 1 2984 8 view .LVU2815
 10721 001e DBB9     		cbnz	r3, .L809
 10722              	.L804:
2988:Core/Src/bno055.c ****     {
 10723              		.loc 1 2988 5 is_stmt 1 view .LVU2816
2988:Core/Src/bno055.c ****     {
 10724              		.loc 1 2988 8 is_stmt 0 view .LVU2817
 10725 0020 0CBB     		cbnz	r4, .L806
2990:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10726              		.loc 1 2990 9 is_stmt 1 view .LVU2818
2990:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10727              		.loc 1 2990 21 is_stmt 0 view .LVU2819
 10728 0022 0DF10600 		add	r0, sp, #6
 10729 0026 FFF7FEFF 		bl	bno055_read_accel_y
 10730              	.LVL1139:
2990:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10731              		.loc 1 2990 18 view .LVU2820
 10732 002a 54FA80F4 		uxtab	r4, r4, r0
 10733              	.LVL1140:
2990:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10734              		.loc 1 2990 18 view .LVU2821
 10735 002e 64B2     		sxtb	r4, r4
 10736              	.LVL1141:
2991:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10737              		.loc 1 2991 9 is_stmt 1 view .LVU2822
2991:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10738              		.loc 1 2991 17 is_stmt 0 view .LVU2823
 10739 0030 104B     		ldr	r3, .L810
 10740 0032 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccWoU29M.s 			page 348


 10741 0034 5B69     		ldr	r3, [r3, #20]
2991:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10742              		.loc 1 2991 9 view .LVU2824
 10743 0036 0120     		movs	r0, #1
 10744 0038 9847     		blx	r3
 10745              	.LVL1142:
2992:Core/Src/bno055.c ****         {
 10746              		.loc 1 2992 9 is_stmt 1 view .LVU2825
2992:Core/Src/bno055.c ****         {
 10747              		.loc 1 2992 12 is_stmt 0 view .LVU2826
 10748 003a BCB9     		cbnz	r4, .L807
2995:Core/Src/bno055.c ****             *accel_y_f = data_f;
 10749              		.loc 1 2995 13 is_stmt 1 view .LVU2827
2995:Core/Src/bno055.c ****             *accel_y_f = data_f;
 10750              		.loc 1 2995 46 is_stmt 0 view .LVU2828
 10751 003c BDF90600 		ldrsh	r0, [sp, #6]
 10752 0040 FFF7FEFF 		bl	__aeabi_i2d
 10753              	.LVL1143:
 10754 0044 0022     		movs	r2, #0
 10755 0046 0C4B     		ldr	r3, .L810+4
 10756 0048 FFF7FEFF 		bl	__aeabi_ddiv
 10757              	.LVL1144:
2995:Core/Src/bno055.c ****             *accel_y_f = data_f;
 10758              		.loc 1 2995 20 view .LVU2829
 10759 004c FFF7FEFF 		bl	__aeabi_d2f
 10760              	.LVL1145:
2996:Core/Src/bno055.c ****         }
 10761              		.loc 1 2996 13 is_stmt 1 view .LVU2830
2996:Core/Src/bno055.c ****         }
 10762              		.loc 1 2996 24 is_stmt 0 view .LVU2831
 10763 0050 2860     		str	r0, [r5]	@ float
 10764              	.LVL1146:
 10765              	.L805:
3008:Core/Src/bno055.c **** }
 10766              		.loc 1 3008 5 is_stmt 1 view .LVU2832
3009:Core/Src/bno055.c **** 
 10767              		.loc 1 3009 1 is_stmt 0 view .LVU2833
 10768 0052 2046     		mov	r0, r4
 10769 0054 03B0     		add	sp, sp, #12
 10770              	.LCFI363:
 10771              		.cfi_remember_state
 10772              		.cfi_def_cfa_offset 12
 10773              		@ sp needed
 10774 0056 30BD     		pop	{r4, r5, pc}
 10775              	.LVL1147:
 10776              	.L809:
 10777              	.LCFI364:
 10778              		.cfi_restore_state
2986:Core/Src/bno055.c ****     }
 10779              		.loc 1 2986 9 is_stmt 1 view .LVU2834
2986:Core/Src/bno055.c ****     }
 10780              		.loc 1 2986 21 is_stmt 0 view .LVU2835
 10781 0058 0020     		movs	r0, #0
 10782 005a FFF7FEFF 		bl	bno055_set_accel_unit
 10783              	.LVL1148:
2986:Core/Src/bno055.c ****     }
 10784              		.loc 1 2986 18 view .LVU2836
ARM GAS  /tmp/ccWoU29M.s 			page 349


 10785 005e 54FA80F4 		uxtab	r4, r4, r0
 10786              	.LVL1149:
2986:Core/Src/bno055.c ****     }
 10787              		.loc 1 2986 18 view .LVU2837
 10788 0062 64B2     		sxtb	r4, r4
 10789              	.LVL1150:
2986:Core/Src/bno055.c ****     }
 10790              		.loc 1 2986 18 view .LVU2838
 10791 0064 DCE7     		b	.L804
 10792              	.L806:
3005:Core/Src/bno055.c ****     }
 10793              		.loc 1 3005 18 view .LVU2839
 10794 0066 4FF0FF34 		mov	r4, #-1
 10795              	.LVL1151:
3005:Core/Src/bno055.c ****     }
 10796              		.loc 1 3005 18 view .LVU2840
 10797 006a F2E7     		b	.L805
 10798              	.LVL1152:
 10799              	.L807:
3000:Core/Src/bno055.c ****         }
 10800              		.loc 1 3000 22 view .LVU2841
 10801 006c 4FF0FF34 		mov	r4, #-1
 10802              	.LVL1153:
3000:Core/Src/bno055.c ****         }
 10803              		.loc 1 3000 22 view .LVU2842
 10804 0070 EFE7     		b	.L805
 10805              	.L811:
 10806 0072 00BF     		.align	2
 10807              	.L810:
 10808 0074 00000000 		.word	.LANCHOR0
 10809 0078 00005940 		.word	1079574528
 10810              		.cfi_endproc
 10811              	.LFE43:
 10813              		.section	.text.bno055_convert_float_accel_y_mg,"ax",%progbits
 10814              		.align	1
 10815              		.global	bno055_convert_float_accel_y_mg
 10816              		.syntax unified
 10817              		.thumb
 10818              		.thumb_func
 10819              		.fpu fpv4-sp-d16
 10821              	bno055_convert_float_accel_y_mg:
 10822              	.LVL1154:
 10823              	.LFB44:
3025:Core/Src/bno055.c ****     /* Variable used to return value of
 10824              		.loc 1 3025 1 is_stmt 1 view -0
 10825              		.cfi_startproc
 10826              		@ args = 0, pretend = 0, frame = 8
 10827              		@ frame_needed = 0, uses_anonymous_args = 0
3025:Core/Src/bno055.c ****     /* Variable used to return value of
 10828              		.loc 1 3025 1 is_stmt 0 view .LVU2844
 10829 0000 30B5     		push	{r4, r5, lr}
 10830              	.LCFI365:
 10831              		.cfi_def_cfa_offset 12
 10832              		.cfi_offset 4, -12
 10833              		.cfi_offset 5, -8
 10834              		.cfi_offset 14, -4
 10835 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccWoU29M.s 			page 350


 10836              	.LCFI366:
 10837              		.cfi_def_cfa_offset 24
 10838 0004 0546     		mov	r5, r0
3028:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
 10839              		.loc 1 3028 5 is_stmt 1 view .LVU2845
 10840              	.LVL1155:
3029:Core/Src/bno055.c ****     float data = BNO055_INIT_VALUE;
 10841              		.loc 1 3029 5 view .LVU2846
3029:Core/Src/bno055.c ****     float data = BNO055_INIT_VALUE;
 10842              		.loc 1 3029 9 is_stmt 0 view .LVU2847
 10843 0006 0023     		movs	r3, #0
 10844 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3030:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10845              		.loc 1 3030 5 is_stmt 1 view .LVU2848
 10846              	.LVL1156:
3031:Core/Src/bno055.c **** 
 10847              		.loc 1 3031 5 view .LVU2849
3031:Core/Src/bno055.c **** 
 10848              		.loc 1 3031 8 is_stmt 0 view .LVU2850
 10849 000c 8DF80530 		strb	r3, [sp, #5]
3035:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10850              		.loc 1 3035 5 is_stmt 1 view .LVU2851
3035:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10851              		.loc 1 3035 16 is_stmt 0 view .LVU2852
 10852 0010 0DF10500 		add	r0, sp, #5
 10853              	.LVL1157:
3035:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10854              		.loc 1 3035 16 view .LVU2853
 10855 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10856              	.LVL1158:
 10857 0018 0446     		mov	r4, r0
 10858              	.LVL1159:
3036:Core/Src/bno055.c ****     {
 10859              		.loc 1 3036 5 is_stmt 1 view .LVU2854
3036:Core/Src/bno055.c ****     {
 10860              		.loc 1 3036 23 is_stmt 0 view .LVU2855
 10861 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3036:Core/Src/bno055.c ****     {
 10862              		.loc 1 3036 8 view .LVU2856
 10863 001e 012B     		cmp	r3, #1
 10864 0020 12D1     		bne	.L818
 10865              	.L813:
3040:Core/Src/bno055.c ****     {
 10866              		.loc 1 3040 5 is_stmt 1 view .LVU2857
3040:Core/Src/bno055.c ****     {
 10867              		.loc 1 3040 8 is_stmt 0 view .LVU2858
 10868 0022 C4B9     		cbnz	r4, .L815
3043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10869              		.loc 1 3043 9 is_stmt 1 view .LVU2859
3043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10870              		.loc 1 3043 21 is_stmt 0 view .LVU2860
 10871 0024 0DF10600 		add	r0, sp, #6
 10872 0028 FFF7FEFF 		bl	bno055_read_accel_y
 10873              	.LVL1160:
3043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10874              		.loc 1 3043 18 view .LVU2861
 10875 002c 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/ccWoU29M.s 			page 351


 10876              	.LVL1161:
3043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10877              		.loc 1 3043 18 view .LVU2862
 10878 0030 64B2     		sxtb	r4, r4
 10879              	.LVL1162:
3044:Core/Src/bno055.c ****         {
 10880              		.loc 1 3044 9 is_stmt 1 view .LVU2863
3044:Core/Src/bno055.c ****         {
 10881              		.loc 1 3044 12 is_stmt 0 view .LVU2864
 10882 0032 9CB9     		cbnz	r4, .L816
3047:Core/Src/bno055.c ****             *accel_y_f = data;
 10883              		.loc 1 3047 13 is_stmt 1 view .LVU2865
3047:Core/Src/bno055.c ****             *accel_y_f = data;
 10884              		.loc 1 3047 44 is_stmt 0 view .LVU2866
 10885 0034 BDF90600 		ldrsh	r0, [sp, #6]
 10886 0038 FFF7FEFF 		bl	__aeabi_i2d
 10887              	.LVL1163:
3047:Core/Src/bno055.c ****             *accel_y_f = data;
 10888              		.loc 1 3047 18 view .LVU2867
 10889 003c FFF7FEFF 		bl	__aeabi_d2f
 10890              	.LVL1164:
3048:Core/Src/bno055.c ****         }
 10891              		.loc 1 3048 13 is_stmt 1 view .LVU2868
3048:Core/Src/bno055.c ****         }
 10892              		.loc 1 3048 24 is_stmt 0 view .LVU2869
 10893 0040 2860     		str	r0, [r5]	@ float
 10894              	.LVL1165:
 10895              	.L814:
3060:Core/Src/bno055.c **** }
 10896              		.loc 1 3060 5 is_stmt 1 view .LVU2870
3061:Core/Src/bno055.c **** 
 10897              		.loc 1 3061 1 is_stmt 0 view .LVU2871
 10898 0042 2046     		mov	r0, r4
 10899 0044 03B0     		add	sp, sp, #12
 10900              	.LCFI367:
 10901              		.cfi_remember_state
 10902              		.cfi_def_cfa_offset 12
 10903              		@ sp needed
 10904 0046 30BD     		pop	{r4, r5, pc}
 10905              	.LVL1166:
 10906              	.L818:
 10907              	.LCFI368:
 10908              		.cfi_restore_state
3038:Core/Src/bno055.c ****     }
 10909              		.loc 1 3038 9 is_stmt 1 view .LVU2872
3038:Core/Src/bno055.c ****     }
 10910              		.loc 1 3038 21 is_stmt 0 view .LVU2873
 10911 0048 0120     		movs	r0, #1
 10912 004a FFF7FEFF 		bl	bno055_set_accel_unit
 10913              	.LVL1167:
3038:Core/Src/bno055.c ****     }
 10914              		.loc 1 3038 18 view .LVU2874
 10915 004e 54FA80F4 		uxtab	r4, r4, r0
 10916              	.LVL1168:
3038:Core/Src/bno055.c ****     }
 10917              		.loc 1 3038 18 view .LVU2875
 10918 0052 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccWoU29M.s 			page 352


 10919              	.LVL1169:
3038:Core/Src/bno055.c ****     }
 10920              		.loc 1 3038 18 view .LVU2876
 10921 0054 E5E7     		b	.L813
 10922              	.L815:
3057:Core/Src/bno055.c ****     }
 10923              		.loc 1 3057 18 view .LVU2877
 10924 0056 4FF0FF34 		mov	r4, #-1
 10925              	.LVL1170:
3057:Core/Src/bno055.c ****     }
 10926              		.loc 1 3057 18 view .LVU2878
 10927 005a F2E7     		b	.L814
 10928              	.LVL1171:
 10929              	.L816:
3052:Core/Src/bno055.c ****         }
 10930              		.loc 1 3052 22 view .LVU2879
 10931 005c 4FF0FF34 		mov	r4, #-1
 10932              	.LVL1172:
3052:Core/Src/bno055.c ****         }
 10933              		.loc 1 3052 22 view .LVU2880
 10934 0060 EFE7     		b	.L814
 10935              		.cfi_endproc
 10936              	.LFE44:
 10938              		.section	.text.bno055_convert_float_accel_z_msq,"ax",%progbits
 10939              		.align	1
 10940              		.global	bno055_convert_float_accel_z_msq
 10941              		.syntax unified
 10942              		.thumb
 10943              		.thumb_func
 10944              		.fpu fpv4-sp-d16
 10946              	bno055_convert_float_accel_z_msq:
 10947              	.LVL1173:
 10948              	.LFB45:
3078:Core/Src/bno055.c ****     /* Variable used to return value of
 10949              		.loc 1 3078 1 is_stmt 1 view -0
 10950              		.cfi_startproc
 10951              		@ args = 0, pretend = 0, frame = 8
 10952              		@ frame_needed = 0, uses_anonymous_args = 0
3078:Core/Src/bno055.c ****     /* Variable used to return value of
 10953              		.loc 1 3078 1 is_stmt 0 view .LVU2882
 10954 0000 30B5     		push	{r4, r5, lr}
 10955              	.LCFI369:
 10956              		.cfi_def_cfa_offset 12
 10957              		.cfi_offset 4, -12
 10958              		.cfi_offset 5, -8
 10959              		.cfi_offset 14, -4
 10960 0002 83B0     		sub	sp, sp, #12
 10961              	.LCFI370:
 10962              		.cfi_def_cfa_offset 24
 10963 0004 0546     		mov	r5, r0
3081:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
 10964              		.loc 1 3081 5 is_stmt 1 view .LVU2883
 10965              	.LVL1174:
3082:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10966              		.loc 1 3082 5 view .LVU2884
3082:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10967              		.loc 1 3082 9 is_stmt 0 view .LVU2885
ARM GAS  /tmp/ccWoU29M.s 			page 353


 10968 0006 0023     		movs	r3, #0
 10969 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3083:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10970              		.loc 1 3083 5 is_stmt 1 view .LVU2886
 10971              	.LVL1175:
3084:Core/Src/bno055.c **** 
 10972              		.loc 1 3084 5 view .LVU2887
3084:Core/Src/bno055.c **** 
 10973              		.loc 1 3084 8 is_stmt 0 view .LVU2888
 10974 000c 8DF80530 		strb	r3, [sp, #5]
3088:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10975              		.loc 1 3088 5 is_stmt 1 view .LVU2889
3088:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10976              		.loc 1 3088 16 is_stmt 0 view .LVU2890
 10977 0010 0DF10500 		add	r0, sp, #5
 10978              	.LVL1176:
3088:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10979              		.loc 1 3088 16 view .LVU2891
 10980 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10981              	.LVL1177:
 10982 0018 0446     		mov	r4, r0
 10983              	.LVL1178:
3089:Core/Src/bno055.c ****     {
 10984              		.loc 1 3089 5 is_stmt 1 view .LVU2892
3089:Core/Src/bno055.c ****     {
 10985              		.loc 1 3089 23 is_stmt 0 view .LVU2893
 10986 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3089:Core/Src/bno055.c ****     {
 10987              		.loc 1 3089 8 view .LVU2894
 10988 001e DBB9     		cbnz	r3, .L825
 10989              	.L820:
3093:Core/Src/bno055.c ****     {
 10990              		.loc 1 3093 5 is_stmt 1 view .LVU2895
3093:Core/Src/bno055.c ****     {
 10991              		.loc 1 3093 8 is_stmt 0 view .LVU2896
 10992 0020 0CBB     		cbnz	r4, .L822
3096:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10993              		.loc 1 3096 9 is_stmt 1 view .LVU2897
3096:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10994              		.loc 1 3096 21 is_stmt 0 view .LVU2898
 10995 0022 0DF10600 		add	r0, sp, #6
 10996 0026 FFF7FEFF 		bl	bno055_read_accel_z
 10997              	.LVL1179:
3096:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10998              		.loc 1 3096 18 view .LVU2899
 10999 002a 54FA80F4 		uxtab	r4, r4, r0
 11000              	.LVL1180:
3096:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 11001              		.loc 1 3096 18 view .LVU2900
 11002 002e 64B2     		sxtb	r4, r4
 11003              	.LVL1181:
3097:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11004              		.loc 1 3097 9 is_stmt 1 view .LVU2901
3097:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11005              		.loc 1 3097 17 is_stmt 0 view .LVU2902
 11006 0030 104B     		ldr	r3, .L826
 11007 0032 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccWoU29M.s 			page 354


 11008 0034 5B69     		ldr	r3, [r3, #20]
3097:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11009              		.loc 1 3097 9 view .LVU2903
 11010 0036 0120     		movs	r0, #1
 11011 0038 9847     		blx	r3
 11012              	.LVL1182:
3098:Core/Src/bno055.c ****         {
 11013              		.loc 1 3098 9 is_stmt 1 view .LVU2904
3098:Core/Src/bno055.c ****         {
 11014              		.loc 1 3098 12 is_stmt 0 view .LVU2905
 11015 003a BCB9     		cbnz	r4, .L823
3101:Core/Src/bno055.c ****             *accel_z_f = data_f;
 11016              		.loc 1 3101 13 is_stmt 1 view .LVU2906
3101:Core/Src/bno055.c ****             *accel_z_f = data_f;
 11017              		.loc 1 3101 46 is_stmt 0 view .LVU2907
 11018 003c BDF90600 		ldrsh	r0, [sp, #6]
 11019 0040 FFF7FEFF 		bl	__aeabi_i2d
 11020              	.LVL1183:
 11021 0044 0022     		movs	r2, #0
 11022 0046 0C4B     		ldr	r3, .L826+4
 11023 0048 FFF7FEFF 		bl	__aeabi_ddiv
 11024              	.LVL1184:
3101:Core/Src/bno055.c ****             *accel_z_f = data_f;
 11025              		.loc 1 3101 20 view .LVU2908
 11026 004c FFF7FEFF 		bl	__aeabi_d2f
 11027              	.LVL1185:
3102:Core/Src/bno055.c ****         }
 11028              		.loc 1 3102 13 is_stmt 1 view .LVU2909
3102:Core/Src/bno055.c ****         }
 11029              		.loc 1 3102 24 is_stmt 0 view .LVU2910
 11030 0050 2860     		str	r0, [r5]	@ float
 11031              	.LVL1186:
 11032              	.L821:
3114:Core/Src/bno055.c **** }
 11033              		.loc 1 3114 5 is_stmt 1 view .LVU2911
3115:Core/Src/bno055.c **** 
 11034              		.loc 1 3115 1 is_stmt 0 view .LVU2912
 11035 0052 2046     		mov	r0, r4
 11036 0054 03B0     		add	sp, sp, #12
 11037              	.LCFI371:
 11038              		.cfi_remember_state
 11039              		.cfi_def_cfa_offset 12
 11040              		@ sp needed
 11041 0056 30BD     		pop	{r4, r5, pc}
 11042              	.LVL1187:
 11043              	.L825:
 11044              	.LCFI372:
 11045              		.cfi_restore_state
3091:Core/Src/bno055.c ****     }
 11046              		.loc 1 3091 9 is_stmt 1 view .LVU2913
3091:Core/Src/bno055.c ****     }
 11047              		.loc 1 3091 21 is_stmt 0 view .LVU2914
 11048 0058 0020     		movs	r0, #0
 11049 005a FFF7FEFF 		bl	bno055_set_accel_unit
 11050              	.LVL1188:
3091:Core/Src/bno055.c ****     }
 11051              		.loc 1 3091 18 view .LVU2915
ARM GAS  /tmp/ccWoU29M.s 			page 355


 11052 005e 54FA80F4 		uxtab	r4, r4, r0
 11053              	.LVL1189:
3091:Core/Src/bno055.c ****     }
 11054              		.loc 1 3091 18 view .LVU2916
 11055 0062 64B2     		sxtb	r4, r4
 11056              	.LVL1190:
3091:Core/Src/bno055.c ****     }
 11057              		.loc 1 3091 18 view .LVU2917
 11058 0064 DCE7     		b	.L820
 11059              	.L822:
3111:Core/Src/bno055.c ****     }
 11060              		.loc 1 3111 18 view .LVU2918
 11061 0066 4FF0FF34 		mov	r4, #-1
 11062              	.LVL1191:
3111:Core/Src/bno055.c ****     }
 11063              		.loc 1 3111 18 view .LVU2919
 11064 006a F2E7     		b	.L821
 11065              	.LVL1192:
 11066              	.L823:
3106:Core/Src/bno055.c ****         }
 11067              		.loc 1 3106 22 view .LVU2920
 11068 006c 4FF0FF34 		mov	r4, #-1
 11069              	.LVL1193:
3106:Core/Src/bno055.c ****         }
 11070              		.loc 1 3106 22 view .LVU2921
 11071 0070 EFE7     		b	.L821
 11072              	.L827:
 11073 0072 00BF     		.align	2
 11074              	.L826:
 11075 0074 00000000 		.word	.LANCHOR0
 11076 0078 00005940 		.word	1079574528
 11077              		.cfi_endproc
 11078              	.LFE45:
 11080              		.section	.text.bno055_convert_float_accel_z_mg,"ax",%progbits
 11081              		.align	1
 11082              		.global	bno055_convert_float_accel_z_mg
 11083              		.syntax unified
 11084              		.thumb
 11085              		.thumb_func
 11086              		.fpu fpv4-sp-d16
 11088              	bno055_convert_float_accel_z_mg:
 11089              	.LVL1194:
 11090              	.LFB46:
3132:Core/Src/bno055.c ****     /* Variable used to return value of
 11091              		.loc 1 3132 1 is_stmt 1 view -0
 11092              		.cfi_startproc
 11093              		@ args = 0, pretend = 0, frame = 8
 11094              		@ frame_needed = 0, uses_anonymous_args = 0
3132:Core/Src/bno055.c ****     /* Variable used to return value of
 11095              		.loc 1 3132 1 is_stmt 0 view .LVU2923
 11096 0000 30B5     		push	{r4, r5, lr}
 11097              	.LCFI373:
 11098              		.cfi_def_cfa_offset 12
 11099              		.cfi_offset 4, -12
 11100              		.cfi_offset 5, -8
 11101              		.cfi_offset 14, -4
 11102 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccWoU29M.s 			page 356


 11103              	.LCFI374:
 11104              		.cfi_def_cfa_offset 24
 11105 0004 0546     		mov	r5, r0
3135:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
 11106              		.loc 1 3135 5 is_stmt 1 view .LVU2924
 11107              	.LVL1195:
3136:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 11108              		.loc 1 3136 5 view .LVU2925
3136:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 11109              		.loc 1 3136 9 is_stmt 0 view .LVU2926
 11110 0006 0023     		movs	r3, #0
 11111 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3137:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11112              		.loc 1 3137 5 is_stmt 1 view .LVU2927
 11113              	.LVL1196:
3138:Core/Src/bno055.c **** 
 11114              		.loc 1 3138 5 view .LVU2928
3138:Core/Src/bno055.c **** 
 11115              		.loc 1 3138 8 is_stmt 0 view .LVU2929
 11116 000c 8DF80530 		strb	r3, [sp, #5]
3142:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11117              		.loc 1 3142 5 is_stmt 1 view .LVU2930
3142:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11118              		.loc 1 3142 16 is_stmt 0 view .LVU2931
 11119 0010 0DF10500 		add	r0, sp, #5
 11120              	.LVL1197:
3142:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11121              		.loc 1 3142 16 view .LVU2932
 11122 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11123              	.LVL1198:
 11124 0018 0446     		mov	r4, r0
 11125              	.LVL1199:
3143:Core/Src/bno055.c ****     {
 11126              		.loc 1 3143 5 is_stmt 1 view .LVU2933
3143:Core/Src/bno055.c ****     {
 11127              		.loc 1 3143 23 is_stmt 0 view .LVU2934
 11128 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3143:Core/Src/bno055.c ****     {
 11129              		.loc 1 3143 8 view .LVU2935
 11130 001e 012B     		cmp	r3, #1
 11131 0020 12D1     		bne	.L834
 11132              	.L829:
3147:Core/Src/bno055.c ****     {
 11133              		.loc 1 3147 5 is_stmt 1 view .LVU2936
3147:Core/Src/bno055.c ****     {
 11134              		.loc 1 3147 8 is_stmt 0 view .LVU2937
 11135 0022 C4B9     		cbnz	r4, .L831
3150:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11136              		.loc 1 3150 9 is_stmt 1 view .LVU2938
3150:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11137              		.loc 1 3150 21 is_stmt 0 view .LVU2939
 11138 0024 0DF10600 		add	r0, sp, #6
 11139 0028 FFF7FEFF 		bl	bno055_read_accel_z
 11140              	.LVL1200:
3150:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11141              		.loc 1 3150 18 view .LVU2940
 11142 002c 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/ccWoU29M.s 			page 357


 11143              	.LVL1201:
3150:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11144              		.loc 1 3150 18 view .LVU2941
 11145 0030 64B2     		sxtb	r4, r4
 11146              	.LVL1202:
3151:Core/Src/bno055.c ****         {
 11147              		.loc 1 3151 9 is_stmt 1 view .LVU2942
3151:Core/Src/bno055.c ****         {
 11148              		.loc 1 3151 12 is_stmt 0 view .LVU2943
 11149 0032 9CB9     		cbnz	r4, .L832
3154:Core/Src/bno055.c ****             *accel_z_f = data_f;
 11150              		.loc 1 3154 13 is_stmt 1 view .LVU2944
3154:Core/Src/bno055.c ****             *accel_z_f = data_f;
 11151              		.loc 1 3154 46 is_stmt 0 view .LVU2945
 11152 0034 BDF90600 		ldrsh	r0, [sp, #6]
 11153 0038 FFF7FEFF 		bl	__aeabi_i2d
 11154              	.LVL1203:
3154:Core/Src/bno055.c ****             *accel_z_f = data_f;
 11155              		.loc 1 3154 20 view .LVU2946
 11156 003c FFF7FEFF 		bl	__aeabi_d2f
 11157              	.LVL1204:
3155:Core/Src/bno055.c ****         }
 11158              		.loc 1 3155 13 is_stmt 1 view .LVU2947
3155:Core/Src/bno055.c ****         }
 11159              		.loc 1 3155 24 is_stmt 0 view .LVU2948
 11160 0040 2860     		str	r0, [r5]	@ float
 11161              	.LVL1205:
 11162              	.L830:
3167:Core/Src/bno055.c **** }
 11163              		.loc 1 3167 5 is_stmt 1 view .LVU2949
3168:Core/Src/bno055.c **** 
 11164              		.loc 1 3168 1 is_stmt 0 view .LVU2950
 11165 0042 2046     		mov	r0, r4
 11166 0044 03B0     		add	sp, sp, #12
 11167              	.LCFI375:
 11168              		.cfi_remember_state
 11169              		.cfi_def_cfa_offset 12
 11170              		@ sp needed
 11171 0046 30BD     		pop	{r4, r5, pc}
 11172              	.LVL1206:
 11173              	.L834:
 11174              	.LCFI376:
 11175              		.cfi_restore_state
3145:Core/Src/bno055.c ****     }
 11176              		.loc 1 3145 9 is_stmt 1 view .LVU2951
3145:Core/Src/bno055.c ****     }
 11177              		.loc 1 3145 21 is_stmt 0 view .LVU2952
 11178 0048 0120     		movs	r0, #1
 11179 004a FFF7FEFF 		bl	bno055_set_accel_unit
 11180              	.LVL1207:
3145:Core/Src/bno055.c ****     }
 11181              		.loc 1 3145 18 view .LVU2953
 11182 004e 54FA80F4 		uxtab	r4, r4, r0
 11183              	.LVL1208:
3145:Core/Src/bno055.c ****     }
 11184              		.loc 1 3145 18 view .LVU2954
 11185 0052 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccWoU29M.s 			page 358


 11186              	.LVL1209:
3145:Core/Src/bno055.c ****     }
 11187              		.loc 1 3145 18 view .LVU2955
 11188 0054 E5E7     		b	.L829
 11189              	.L831:
3164:Core/Src/bno055.c ****     }
 11190              		.loc 1 3164 18 view .LVU2956
 11191 0056 4FF0FF34 		mov	r4, #-1
 11192              	.LVL1210:
3164:Core/Src/bno055.c ****     }
 11193              		.loc 1 3164 18 view .LVU2957
 11194 005a F2E7     		b	.L830
 11195              	.LVL1211:
 11196              	.L832:
3159:Core/Src/bno055.c ****         }
 11197              		.loc 1 3159 22 view .LVU2958
 11198 005c 4FF0FF34 		mov	r4, #-1
 11199              	.LVL1212:
3159:Core/Src/bno055.c ****         }
 11200              		.loc 1 3159 22 view .LVU2959
 11201 0060 EFE7     		b	.L830
 11202              		.cfi_endproc
 11203              	.LFE46:
 11205              		.section	.text.bno055_convert_float_accel_xyz_msq,"ax",%progbits
 11206              		.align	1
 11207              		.global	bno055_convert_float_accel_xyz_msq
 11208              		.syntax unified
 11209              		.thumb
 11210              		.thumb_func
 11211              		.fpu fpv4-sp-d16
 11213              	bno055_convert_float_accel_xyz_msq:
 11214              	.LVL1213:
 11215              	.LFB47:
3189:Core/Src/bno055.c ****     /* Variable used to return value of
 11216              		.loc 1 3189 1 is_stmt 1 view -0
 11217              		.cfi_startproc
 11218              		@ args = 0, pretend = 0, frame = 16
 11219              		@ frame_needed = 0, uses_anonymous_args = 0
3189:Core/Src/bno055.c ****     /* Variable used to return value of
 11220              		.loc 1 3189 1 is_stmt 0 view .LVU2961
 11221 0000 30B5     		push	{r4, r5, lr}
 11222              	.LCFI377:
 11223              		.cfi_def_cfa_offset 12
 11224              		.cfi_offset 4, -12
 11225              		.cfi_offset 5, -8
 11226              		.cfi_offset 14, -4
 11227 0002 85B0     		sub	sp, sp, #20
 11228              	.LCFI378:
 11229              		.cfi_def_cfa_offset 32
 11230 0004 0546     		mov	r5, r0
3192:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
 11231              		.loc 1 3192 5 is_stmt 1 view .LVU2962
 11232              	.LVL1214:
3193:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11233              		.loc 1 3193 5 view .LVU2963
3193:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11234              		.loc 1 3193 27 is_stmt 0 view .LVU2964
ARM GAS  /tmp/ccWoU29M.s 			page 359


 11235 0006 0023     		movs	r3, #0
 11236 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 11237 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 11238 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
3194:Core/Src/bno055.c **** 
 11239              		.loc 1 3194 5 is_stmt 1 view .LVU2965
3194:Core/Src/bno055.c **** 
 11240              		.loc 1 3194 8 is_stmt 0 view .LVU2966
 11241 0014 8DF80730 		strb	r3, [sp, #7]
3198:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11242              		.loc 1 3198 5 is_stmt 1 view .LVU2967
3198:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11243              		.loc 1 3198 16 is_stmt 0 view .LVU2968
 11244 0018 0DF10700 		add	r0, sp, #7
 11245              	.LVL1215:
3198:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11246              		.loc 1 3198 16 view .LVU2969
 11247 001c FFF7FEFF 		bl	bno055_get_accel_unit
 11248              	.LVL1216:
 11249 0020 0446     		mov	r4, r0
 11250              	.LVL1217:
3199:Core/Src/bno055.c ****     {
 11251              		.loc 1 3199 5 is_stmt 1 view .LVU2970
3199:Core/Src/bno055.c ****     {
 11252              		.loc 1 3199 23 is_stmt 0 view .LVU2971
 11253 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
3199:Core/Src/bno055.c ****     {
 11254              		.loc 1 3199 8 view .LVU2972
 11255 0026 5BBB     		cbnz	r3, .L841
 11256              	.L836:
3203:Core/Src/bno055.c ****     {
 11257              		.loc 1 3203 5 is_stmt 1 view .LVU2973
3203:Core/Src/bno055.c ****     {
 11258              		.loc 1 3203 8 is_stmt 0 view .LVU2974
 11259 0028 8CBB     		cbnz	r4, .L838
3206:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11260              		.loc 1 3206 9 is_stmt 1 view .LVU2975
3206:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11261              		.loc 1 3206 21 is_stmt 0 view .LVU2976
 11262 002a 02A8     		add	r0, sp, #8
 11263 002c FFF7FEFF 		bl	bno055_read_accel_xyz
 11264              	.LVL1218:
3206:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11265              		.loc 1 3206 18 view .LVU2977
 11266 0030 54FA80F4 		uxtab	r4, r4, r0
 11267              	.LVL1219:
3206:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11268              		.loc 1 3206 18 view .LVU2978
 11269 0034 64B2     		sxtb	r4, r4
 11270              	.LVL1220:
3207:Core/Src/bno055.c ****         {
 11271              		.loc 1 3207 9 is_stmt 1 view .LVU2979
3207:Core/Src/bno055.c ****         {
 11272              		.loc 1 3207 12 is_stmt 0 view .LVU2980
 11273 0036 6CBB     		cbnz	r4, .L839
3210:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 11274              		.loc 1 3210 13 is_stmt 1 view .LVU2981
ARM GAS  /tmp/ccWoU29M.s 			page 360


3210:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 11275              		.loc 1 3210 52 is_stmt 0 view .LVU2982
 11276 0038 BDF90800 		ldrsh	r0, [sp, #8]
 11277 003c FFF7FEFF 		bl	__aeabi_i2d
 11278              	.LVL1221:
 11279 0040 0022     		movs	r2, #0
 11280 0042 164B     		ldr	r3, .L842
 11281 0044 FFF7FEFF 		bl	__aeabi_ddiv
 11282              	.LVL1222:
3210:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 11283              		.loc 1 3210 28 view .LVU2983
 11284 0048 FFF7FEFF 		bl	__aeabi_d2f
 11285              	.LVL1223:
3210:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 11286              		.loc 1 3210 26 view .LVU2984
 11287 004c 2860     		str	r0, [r5]	@ float
3211:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 11288              		.loc 1 3211 13 is_stmt 1 view .LVU2985
3211:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 11289              		.loc 1 3211 52 is_stmt 0 view .LVU2986
 11290 004e BDF90A00 		ldrsh	r0, [sp, #10]
 11291 0052 FFF7FEFF 		bl	__aeabi_i2d
 11292              	.LVL1224:
 11293 0056 0022     		movs	r2, #0
 11294 0058 104B     		ldr	r3, .L842
 11295 005a FFF7FEFF 		bl	__aeabi_ddiv
 11296              	.LVL1225:
3211:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 11297              		.loc 1 3211 28 view .LVU2987
 11298 005e FFF7FEFF 		bl	__aeabi_d2f
 11299              	.LVL1226:
3211:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 11300              		.loc 1 3211 26 view .LVU2988
 11301 0062 6860     		str	r0, [r5, #4]	@ float
3212:Core/Src/bno055.c ****         }
 11302              		.loc 1 3212 13 is_stmt 1 view .LVU2989
3212:Core/Src/bno055.c ****         }
 11303              		.loc 1 3212 52 is_stmt 0 view .LVU2990
 11304 0064 BDF90C00 		ldrsh	r0, [sp, #12]
 11305 0068 FFF7FEFF 		bl	__aeabi_i2d
 11306              	.LVL1227:
 11307 006c 0022     		movs	r2, #0
 11308 006e 0B4B     		ldr	r3, .L842
 11309 0070 FFF7FEFF 		bl	__aeabi_ddiv
 11310              	.LVL1228:
3212:Core/Src/bno055.c ****         }
 11311              		.loc 1 3212 28 view .LVU2991
 11312 0074 FFF7FEFF 		bl	__aeabi_d2f
 11313              	.LVL1229:
3212:Core/Src/bno055.c ****         }
 11314              		.loc 1 3212 26 view .LVU2992
 11315 0078 A860     		str	r0, [r5, #8]	@ float
 11316              	.LVL1230:
 11317              	.L837:
3224:Core/Src/bno055.c **** }
 11318              		.loc 1 3224 5 is_stmt 1 view .LVU2993
3225:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 361


 11319              		.loc 1 3225 1 is_stmt 0 view .LVU2994
 11320 007a 2046     		mov	r0, r4
 11321 007c 05B0     		add	sp, sp, #20
 11322              	.LCFI379:
 11323              		.cfi_remember_state
 11324              		.cfi_def_cfa_offset 12
 11325              		@ sp needed
 11326 007e 30BD     		pop	{r4, r5, pc}
 11327              	.LVL1231:
 11328              	.L841:
 11329              	.LCFI380:
 11330              		.cfi_restore_state
3201:Core/Src/bno055.c ****     }
 11331              		.loc 1 3201 9 is_stmt 1 view .LVU2995
3201:Core/Src/bno055.c ****     }
 11332              		.loc 1 3201 21 is_stmt 0 view .LVU2996
 11333 0080 0020     		movs	r0, #0
 11334 0082 FFF7FEFF 		bl	bno055_set_accel_unit
 11335              	.LVL1232:
3201:Core/Src/bno055.c ****     }
 11336              		.loc 1 3201 18 view .LVU2997
 11337 0086 54FA80F4 		uxtab	r4, r4, r0
 11338              	.LVL1233:
3201:Core/Src/bno055.c ****     }
 11339              		.loc 1 3201 18 view .LVU2998
 11340 008a 64B2     		sxtb	r4, r4
 11341              	.LVL1234:
3201:Core/Src/bno055.c ****     }
 11342              		.loc 1 3201 18 view .LVU2999
 11343 008c CCE7     		b	.L836
 11344              	.L838:
3221:Core/Src/bno055.c ****     }
 11345              		.loc 1 3221 18 view .LVU3000
 11346 008e 4FF0FF34 		mov	r4, #-1
 11347              	.LVL1235:
3221:Core/Src/bno055.c ****     }
 11348              		.loc 1 3221 18 view .LVU3001
 11349 0092 F2E7     		b	.L837
 11350              	.LVL1236:
 11351              	.L839:
3216:Core/Src/bno055.c ****         }
 11352              		.loc 1 3216 22 view .LVU3002
 11353 0094 4FF0FF34 		mov	r4, #-1
 11354              	.LVL1237:
3216:Core/Src/bno055.c ****         }
 11355              		.loc 1 3216 22 view .LVU3003
 11356 0098 EFE7     		b	.L837
 11357              	.L843:
 11358 009a 00BF     		.align	2
 11359              	.L842:
 11360 009c 00005940 		.word	1079574528
 11361              		.cfi_endproc
 11362              	.LFE47:
 11364              		.section	.text.bno055_convert_float_accel_xyz_mg,"ax",%progbits
 11365              		.align	1
 11366              		.global	bno055_convert_float_accel_xyz_mg
 11367              		.syntax unified
ARM GAS  /tmp/ccWoU29M.s 			page 362


 11368              		.thumb
 11369              		.thumb_func
 11370              		.fpu fpv4-sp-d16
 11372              	bno055_convert_float_accel_xyz_mg:
 11373              	.LVL1238:
 11374              	.LFB48:
3247:Core/Src/bno055.c ****     /* Variable used to return value of
 11375              		.loc 1 3247 1 is_stmt 1 view -0
 11376              		.cfi_startproc
 11377              		@ args = 0, pretend = 0, frame = 16
 11378              		@ frame_needed = 0, uses_anonymous_args = 0
3247:Core/Src/bno055.c ****     /* Variable used to return value of
 11379              		.loc 1 3247 1 is_stmt 0 view .LVU3005
 11380 0000 30B5     		push	{r4, r5, lr}
 11381              	.LCFI381:
 11382              		.cfi_def_cfa_offset 12
 11383              		.cfi_offset 4, -12
 11384              		.cfi_offset 5, -8
 11385              		.cfi_offset 14, -4
 11386 0002 85B0     		sub	sp, sp, #20
 11387              	.LCFI382:
 11388              		.cfi_def_cfa_offset 32
 11389 0004 0546     		mov	r5, r0
3250:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
 11390              		.loc 1 3250 5 is_stmt 1 view .LVU3006
 11391              	.LVL1239:
3251:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11392              		.loc 1 3251 5 view .LVU3007
3251:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11393              		.loc 1 3251 27 is_stmt 0 view .LVU3008
 11394 0006 0023     		movs	r3, #0
 11395 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 11396 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 11397 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
3252:Core/Src/bno055.c **** 
 11398              		.loc 1 3252 5 is_stmt 1 view .LVU3009
3252:Core/Src/bno055.c **** 
 11399              		.loc 1 3252 8 is_stmt 0 view .LVU3010
 11400 0014 8DF80730 		strb	r3, [sp, #7]
3256:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11401              		.loc 1 3256 5 is_stmt 1 view .LVU3011
3256:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11402              		.loc 1 3256 16 is_stmt 0 view .LVU3012
 11403 0018 0DF10700 		add	r0, sp, #7
 11404              	.LVL1240:
3256:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11405              		.loc 1 3256 16 view .LVU3013
 11406 001c FFF7FEFF 		bl	bno055_get_accel_unit
 11407              	.LVL1241:
 11408 0020 0446     		mov	r4, r0
 11409              	.LVL1242:
3257:Core/Src/bno055.c ****     {
 11410              		.loc 1 3257 5 is_stmt 1 view .LVU3014
3257:Core/Src/bno055.c ****     {
 11411              		.loc 1 3257 23 is_stmt 0 view .LVU3015
 11412 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
3257:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccWoU29M.s 			page 363


 11413              		.loc 1 3257 8 view .LVU3016
 11414 0026 012B     		cmp	r3, #1
 11415 0028 1FD1     		bne	.L850
 11416              	.L845:
3261:Core/Src/bno055.c ****     {
 11417              		.loc 1 3261 5 is_stmt 1 view .LVU3017
3261:Core/Src/bno055.c ****     {
 11418              		.loc 1 3261 8 is_stmt 0 view .LVU3018
 11419 002a 2CBB     		cbnz	r4, .L847
3264:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11420              		.loc 1 3264 9 is_stmt 1 view .LVU3019
3264:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11421              		.loc 1 3264 21 is_stmt 0 view .LVU3020
 11422 002c 02A8     		add	r0, sp, #8
 11423 002e FFF7FEFF 		bl	bno055_read_accel_xyz
 11424              	.LVL1243:
3264:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11425              		.loc 1 3264 18 view .LVU3021
 11426 0032 54FA80F4 		uxtab	r4, r4, r0
 11427              	.LVL1244:
3264:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11428              		.loc 1 3264 18 view .LVU3022
 11429 0036 64B2     		sxtb	r4, r4
 11430              	.LVL1245:
3265:Core/Src/bno055.c ****         {
 11431              		.loc 1 3265 9 is_stmt 1 view .LVU3023
3265:Core/Src/bno055.c ****         {
 11432              		.loc 1 3265 12 is_stmt 0 view .LVU3024
 11433 0038 0CBB     		cbnz	r4, .L848
3268:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 11434              		.loc 1 3268 13 is_stmt 1 view .LVU3025
3268:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 11435              		.loc 1 3268 52 is_stmt 0 view .LVU3026
 11436 003a BDF90800 		ldrsh	r0, [sp, #8]
 11437 003e FFF7FEFF 		bl	__aeabi_i2d
 11438              	.LVL1246:
3268:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 11439              		.loc 1 3268 28 view .LVU3027
 11440 0042 FFF7FEFF 		bl	__aeabi_d2f
 11441              	.LVL1247:
3268:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 11442              		.loc 1 3268 26 view .LVU3028
 11443 0046 2860     		str	r0, [r5]	@ float
3269:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 11444              		.loc 1 3269 13 is_stmt 1 view .LVU3029
3269:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 11445              		.loc 1 3269 52 is_stmt 0 view .LVU3030
 11446 0048 BDF90A00 		ldrsh	r0, [sp, #10]
 11447 004c FFF7FEFF 		bl	__aeabi_i2d
 11448              	.LVL1248:
3269:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 11449              		.loc 1 3269 28 view .LVU3031
 11450 0050 FFF7FEFF 		bl	__aeabi_d2f
 11451              	.LVL1249:
3269:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 11452              		.loc 1 3269 26 view .LVU3032
 11453 0054 6860     		str	r0, [r5, #4]	@ float
ARM GAS  /tmp/ccWoU29M.s 			page 364


3270:Core/Src/bno055.c ****         }
 11454              		.loc 1 3270 13 is_stmt 1 view .LVU3033
3270:Core/Src/bno055.c ****         }
 11455              		.loc 1 3270 52 is_stmt 0 view .LVU3034
 11456 0056 BDF90C00 		ldrsh	r0, [sp, #12]
 11457 005a FFF7FEFF 		bl	__aeabi_i2d
 11458              	.LVL1250:
3270:Core/Src/bno055.c ****         }
 11459              		.loc 1 3270 28 view .LVU3035
 11460 005e FFF7FEFF 		bl	__aeabi_d2f
 11461              	.LVL1251:
3270:Core/Src/bno055.c ****         }
 11462              		.loc 1 3270 26 view .LVU3036
 11463 0062 A860     		str	r0, [r5, #8]	@ float
 11464              	.LVL1252:
 11465              	.L846:
3282:Core/Src/bno055.c **** }
 11466              		.loc 1 3282 5 is_stmt 1 view .LVU3037
3283:Core/Src/bno055.c **** 
 11467              		.loc 1 3283 1 is_stmt 0 view .LVU3038
 11468 0064 2046     		mov	r0, r4
 11469 0066 05B0     		add	sp, sp, #20
 11470              	.LCFI383:
 11471              		.cfi_remember_state
 11472              		.cfi_def_cfa_offset 12
 11473              		@ sp needed
 11474 0068 30BD     		pop	{r4, r5, pc}
 11475              	.LVL1253:
 11476              	.L850:
 11477              	.LCFI384:
 11478              		.cfi_restore_state
3259:Core/Src/bno055.c ****     }
 11479              		.loc 1 3259 9 is_stmt 1 view .LVU3039
3259:Core/Src/bno055.c ****     }
 11480              		.loc 1 3259 21 is_stmt 0 view .LVU3040
 11481 006a 0120     		movs	r0, #1
 11482 006c FFF7FEFF 		bl	bno055_set_accel_unit
 11483              	.LVL1254:
3259:Core/Src/bno055.c ****     }
 11484              		.loc 1 3259 18 view .LVU3041
 11485 0070 54FA80F4 		uxtab	r4, r4, r0
 11486              	.LVL1255:
3259:Core/Src/bno055.c ****     }
 11487              		.loc 1 3259 18 view .LVU3042
 11488 0074 64B2     		sxtb	r4, r4
 11489              	.LVL1256:
3259:Core/Src/bno055.c ****     }
 11490              		.loc 1 3259 18 view .LVU3043
 11491 0076 D8E7     		b	.L845
 11492              	.L847:
3279:Core/Src/bno055.c ****     }
 11493              		.loc 1 3279 18 view .LVU3044
 11494 0078 4FF0FF34 		mov	r4, #-1
 11495              	.LVL1257:
3279:Core/Src/bno055.c ****     }
 11496              		.loc 1 3279 18 view .LVU3045
 11497 007c F2E7     		b	.L846
ARM GAS  /tmp/ccWoU29M.s 			page 365


 11498              	.LVL1258:
 11499              	.L848:
3274:Core/Src/bno055.c ****         }
 11500              		.loc 1 3274 22 view .LVU3046
 11501 007e 4FF0FF34 		mov	r4, #-1
 11502              	.LVL1259:
3274:Core/Src/bno055.c ****         }
 11503              		.loc 1 3274 22 view .LVU3047
 11504 0082 EFE7     		b	.L846
 11505              		.cfi_endproc
 11506              	.LFE48:
 11508              		.section	.text.bno055_convert_double_accel_x_msq,"ax",%progbits
 11509              		.align	1
 11510              		.global	bno055_convert_double_accel_x_msq
 11511              		.syntax unified
 11512              		.thumb
 11513              		.thumb_func
 11514              		.fpu fpv4-sp-d16
 11516              	bno055_convert_double_accel_x_msq:
 11517              	.LVL1260:
 11518              	.LFB79:
4680:Core/Src/bno055.c ****     /* Variable used to return value of
 11519              		.loc 1 4680 1 is_stmt 1 view -0
 11520              		.cfi_startproc
 11521              		@ args = 0, pretend = 0, frame = 8
 11522              		@ frame_needed = 0, uses_anonymous_args = 0
4680:Core/Src/bno055.c ****     /* Variable used to return value of
 11523              		.loc 1 4680 1 is_stmt 0 view .LVU3049
 11524 0000 30B5     		push	{r4, r5, lr}
 11525              	.LCFI385:
 11526              		.cfi_def_cfa_offset 12
 11527              		.cfi_offset 4, -12
 11528              		.cfi_offset 5, -8
 11529              		.cfi_offset 14, -4
 11530 0002 83B0     		sub	sp, sp, #12
 11531              	.LCFI386:
 11532              		.cfi_def_cfa_offset 24
 11533 0004 0546     		mov	r5, r0
4683:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
 11534              		.loc 1 4683 5 is_stmt 1 view .LVU3050
 11535              	.LVL1261:
4684:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11536              		.loc 1 4684 5 view .LVU3051
4684:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11537              		.loc 1 4684 9 is_stmt 0 view .LVU3052
 11538 0006 0023     		movs	r3, #0
 11539 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4685:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11540              		.loc 1 4685 5 is_stmt 1 view .LVU3053
 11541              	.LVL1262:
4686:Core/Src/bno055.c **** 
 11542              		.loc 1 4686 5 view .LVU3054
4686:Core/Src/bno055.c **** 
 11543              		.loc 1 4686 8 is_stmt 0 view .LVU3055
 11544 000c 8DF80530 		strb	r3, [sp, #5]
4690:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11545              		.loc 1 4690 5 is_stmt 1 view .LVU3056
ARM GAS  /tmp/ccWoU29M.s 			page 366


4690:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11546              		.loc 1 4690 16 is_stmt 0 view .LVU3057
 11547 0010 0DF10500 		add	r0, sp, #5
 11548              	.LVL1263:
4690:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11549              		.loc 1 4690 16 view .LVU3058
 11550 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11551              	.LVL1264:
 11552 0018 0446     		mov	r4, r0
 11553              	.LVL1265:
4691:Core/Src/bno055.c ****     {
 11554              		.loc 1 4691 5 is_stmt 1 view .LVU3059
4691:Core/Src/bno055.c ****     {
 11555              		.loc 1 4691 23 is_stmt 0 view .LVU3060
 11556 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4691:Core/Src/bno055.c ****     {
 11557              		.loc 1 4691 8 view .LVU3061
 11558 001e ABB9     		cbnz	r3, .L857
 11559              	.L852:
4695:Core/Src/bno055.c ****     {
 11560              		.loc 1 4695 5 is_stmt 1 view .LVU3062
4695:Core/Src/bno055.c ****     {
 11561              		.loc 1 4695 8 is_stmt 0 view .LVU3063
 11562 0020 DCB9     		cbnz	r4, .L854
4698:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11563              		.loc 1 4698 9 is_stmt 1 view .LVU3064
4698:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11564              		.loc 1 4698 21 is_stmt 0 view .LVU3065
 11565 0022 0DF10600 		add	r0, sp, #6
 11566 0026 FFF7FEFF 		bl	bno055_read_accel_x
 11567              	.LVL1266:
4698:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11568              		.loc 1 4698 18 view .LVU3066
 11569 002a 54FA80F4 		uxtab	r4, r4, r0
 11570              	.LVL1267:
4698:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11571              		.loc 1 4698 18 view .LVU3067
 11572 002e 64B2     		sxtb	r4, r4
 11573              	.LVL1268:
4699:Core/Src/bno055.c ****         {
 11574              		.loc 1 4699 9 is_stmt 1 view .LVU3068
4699:Core/Src/bno055.c ****         {
 11575              		.loc 1 4699 12 is_stmt 0 view .LVU3069
 11576 0030 B4B9     		cbnz	r4, .L855
4702:Core/Src/bno055.c ****             *accel_x_d = data_f;
 11577              		.loc 1 4702 13 is_stmt 1 view .LVU3070
4702:Core/Src/bno055.c ****             *accel_x_d = data_f;
 11578              		.loc 1 4702 22 is_stmt 0 view .LVU3071
 11579 0032 BDF90600 		ldrsh	r0, [sp, #6]
 11580 0036 FFF7FEFF 		bl	__aeabi_i2d
 11581              	.LVL1269:
4702:Core/Src/bno055.c ****             *accel_x_d = data_f;
 11582              		.loc 1 4702 20 view .LVU3072
 11583 003a 0022     		movs	r2, #0
 11584 003c 0A4B     		ldr	r3, .L858
 11585 003e FFF7FEFF 		bl	__aeabi_ddiv
 11586              	.LVL1270:
ARM GAS  /tmp/ccWoU29M.s 			page 367


4703:Core/Src/bno055.c ****         }
 11587              		.loc 1 4703 13 is_stmt 1 view .LVU3073
4703:Core/Src/bno055.c ****         }
 11588              		.loc 1 4703 24 is_stmt 0 view .LVU3074
 11589 0042 C5E90001 		strd	r0, [r5]
 11590              	.LVL1271:
 11591              	.L853:
4715:Core/Src/bno055.c **** }
 11592              		.loc 1 4715 5 is_stmt 1 view .LVU3075
4716:Core/Src/bno055.c **** 
 11593              		.loc 1 4716 1 is_stmt 0 view .LVU3076
 11594 0046 2046     		mov	r0, r4
 11595 0048 03B0     		add	sp, sp, #12
 11596              	.LCFI387:
 11597              		.cfi_remember_state
 11598              		.cfi_def_cfa_offset 12
 11599              		@ sp needed
 11600 004a 30BD     		pop	{r4, r5, pc}
 11601              	.LVL1272:
 11602              	.L857:
 11603              	.LCFI388:
 11604              		.cfi_restore_state
4693:Core/Src/bno055.c ****     }
 11605              		.loc 1 4693 9 is_stmt 1 view .LVU3077
4693:Core/Src/bno055.c ****     }
 11606              		.loc 1 4693 21 is_stmt 0 view .LVU3078
 11607 004c 0020     		movs	r0, #0
 11608 004e FFF7FEFF 		bl	bno055_set_accel_unit
 11609              	.LVL1273:
4693:Core/Src/bno055.c ****     }
 11610              		.loc 1 4693 18 view .LVU3079
 11611 0052 54FA80F4 		uxtab	r4, r4, r0
 11612              	.LVL1274:
4693:Core/Src/bno055.c ****     }
 11613              		.loc 1 4693 18 view .LVU3080
 11614 0056 64B2     		sxtb	r4, r4
 11615              	.LVL1275:
4693:Core/Src/bno055.c ****     }
 11616              		.loc 1 4693 18 view .LVU3081
 11617 0058 E2E7     		b	.L852
 11618              	.L854:
4712:Core/Src/bno055.c ****     }
 11619              		.loc 1 4712 18 view .LVU3082
 11620 005a 4FF0FF34 		mov	r4, #-1
 11621              	.LVL1276:
4712:Core/Src/bno055.c ****     }
 11622              		.loc 1 4712 18 view .LVU3083
 11623 005e F2E7     		b	.L853
 11624              	.LVL1277:
 11625              	.L855:
4707:Core/Src/bno055.c ****         }
 11626              		.loc 1 4707 22 view .LVU3084
 11627 0060 4FF0FF34 		mov	r4, #-1
 11628              	.LVL1278:
4707:Core/Src/bno055.c ****         }
 11629              		.loc 1 4707 22 view .LVU3085
 11630 0064 EFE7     		b	.L853
ARM GAS  /tmp/ccWoU29M.s 			page 368


 11631              	.L859:
 11632 0066 00BF     		.align	2
 11633              	.L858:
 11634 0068 00005940 		.word	1079574528
 11635              		.cfi_endproc
 11636              	.LFE79:
 11638              		.section	.text.bno055_convert_double_accel_x_mg,"ax",%progbits
 11639              		.align	1
 11640              		.global	bno055_convert_double_accel_x_mg
 11641              		.syntax unified
 11642              		.thumb
 11643              		.thumb_func
 11644              		.fpu fpv4-sp-d16
 11646              	bno055_convert_double_accel_x_mg:
 11647              	.LVL1279:
 11648              	.LFB80:
4734:Core/Src/bno055.c ****     /* Variable used to return value of
 11649              		.loc 1 4734 1 is_stmt 1 view -0
 11650              		.cfi_startproc
 11651              		@ args = 0, pretend = 0, frame = 8
 11652              		@ frame_needed = 0, uses_anonymous_args = 0
4734:Core/Src/bno055.c ****     /* Variable used to return value of
 11653              		.loc 1 4734 1 is_stmt 0 view .LVU3087
 11654 0000 30B5     		push	{r4, r5, lr}
 11655              	.LCFI389:
 11656              		.cfi_def_cfa_offset 12
 11657              		.cfi_offset 4, -12
 11658              		.cfi_offset 5, -8
 11659              		.cfi_offset 14, -4
 11660 0002 83B0     		sub	sp, sp, #12
 11661              	.LCFI390:
 11662              		.cfi_def_cfa_offset 24
 11663 0004 0546     		mov	r5, r0
4737:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
 11664              		.loc 1 4737 5 is_stmt 1 view .LVU3088
 11665              	.LVL1280:
4738:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11666              		.loc 1 4738 5 view .LVU3089
4738:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11667              		.loc 1 4738 9 is_stmt 0 view .LVU3090
 11668 0006 0023     		movs	r3, #0
 11669 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4739:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11670              		.loc 1 4739 5 is_stmt 1 view .LVU3091
 11671              	.LVL1281:
4740:Core/Src/bno055.c **** 
 11672              		.loc 1 4740 5 view .LVU3092
4740:Core/Src/bno055.c **** 
 11673              		.loc 1 4740 8 is_stmt 0 view .LVU3093
 11674 000c 8DF80530 		strb	r3, [sp, #5]
4744:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11675              		.loc 1 4744 5 is_stmt 1 view .LVU3094
4744:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11676              		.loc 1 4744 16 is_stmt 0 view .LVU3095
 11677 0010 0DF10500 		add	r0, sp, #5
 11678              	.LVL1282:
4744:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
ARM GAS  /tmp/ccWoU29M.s 			page 369


 11679              		.loc 1 4744 16 view .LVU3096
 11680 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11681              	.LVL1283:
 11682 0018 0446     		mov	r4, r0
 11683              	.LVL1284:
4745:Core/Src/bno055.c ****     {
 11684              		.loc 1 4745 5 is_stmt 1 view .LVU3097
4745:Core/Src/bno055.c ****     {
 11685              		.loc 1 4745 23 is_stmt 0 view .LVU3098
 11686 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4745:Core/Src/bno055.c ****     {
 11687              		.loc 1 4745 8 view .LVU3099
 11688 001e 012B     		cmp	r3, #1
 11689 0020 11D1     		bne	.L866
 11690              	.L861:
4749:Core/Src/bno055.c ****     {
 11691              		.loc 1 4749 5 is_stmt 1 view .LVU3100
4749:Core/Src/bno055.c ****     {
 11692              		.loc 1 4749 8 is_stmt 0 view .LVU3101
 11693 0022 BCB9     		cbnz	r4, .L863
4752:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11694              		.loc 1 4752 9 is_stmt 1 view .LVU3102
4752:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11695              		.loc 1 4752 21 is_stmt 0 view .LVU3103
 11696 0024 0DF10600 		add	r0, sp, #6
 11697 0028 FFF7FEFF 		bl	bno055_read_accel_x
 11698              	.LVL1285:
4752:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11699              		.loc 1 4752 18 view .LVU3104
 11700 002c 54FA80F4 		uxtab	r4, r4, r0
 11701              	.LVL1286:
4752:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11702              		.loc 1 4752 18 view .LVU3105
 11703 0030 64B2     		sxtb	r4, r4
 11704              	.LVL1287:
4753:Core/Src/bno055.c ****         {
 11705              		.loc 1 4753 9 is_stmt 1 view .LVU3106
4753:Core/Src/bno055.c ****         {
 11706              		.loc 1 4753 12 is_stmt 0 view .LVU3107
 11707 0032 94B9     		cbnz	r4, .L864
4756:Core/Src/bno055.c ****             *accel_x_d = data_f;
 11708              		.loc 1 4756 13 is_stmt 1 view .LVU3108
4756:Core/Src/bno055.c ****             *accel_x_d = data_f;
 11709              		.loc 1 4756 20 is_stmt 0 view .LVU3109
 11710 0034 BDF90600 		ldrsh	r0, [sp, #6]
 11711 0038 FFF7FEFF 		bl	__aeabi_i2d
 11712              	.LVL1288:
4757:Core/Src/bno055.c ****         }
 11713              		.loc 1 4757 13 is_stmt 1 view .LVU3110
4757:Core/Src/bno055.c ****         }
 11714              		.loc 1 4757 24 is_stmt 0 view .LVU3111
 11715 003c C5E90001 		strd	r0, [r5]
 11716              	.LVL1289:
 11717              	.L862:
4769:Core/Src/bno055.c **** }
 11718              		.loc 1 4769 5 is_stmt 1 view .LVU3112
4770:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 370


 11719              		.loc 1 4770 1 is_stmt 0 view .LVU3113
 11720 0040 2046     		mov	r0, r4
 11721 0042 03B0     		add	sp, sp, #12
 11722              	.LCFI391:
 11723              		.cfi_remember_state
 11724              		.cfi_def_cfa_offset 12
 11725              		@ sp needed
 11726 0044 30BD     		pop	{r4, r5, pc}
 11727              	.LVL1290:
 11728              	.L866:
 11729              	.LCFI392:
 11730              		.cfi_restore_state
4747:Core/Src/bno055.c ****     }
 11731              		.loc 1 4747 9 is_stmt 1 view .LVU3114
4747:Core/Src/bno055.c ****     }
 11732              		.loc 1 4747 21 is_stmt 0 view .LVU3115
 11733 0046 0120     		movs	r0, #1
 11734 0048 FFF7FEFF 		bl	bno055_set_accel_unit
 11735              	.LVL1291:
4747:Core/Src/bno055.c ****     }
 11736              		.loc 1 4747 18 view .LVU3116
 11737 004c 54FA80F4 		uxtab	r4, r4, r0
 11738              	.LVL1292:
4747:Core/Src/bno055.c ****     }
 11739              		.loc 1 4747 18 view .LVU3117
 11740 0050 64B2     		sxtb	r4, r4
 11741              	.LVL1293:
4747:Core/Src/bno055.c ****     }
 11742              		.loc 1 4747 18 view .LVU3118
 11743 0052 E6E7     		b	.L861
 11744              	.L863:
4766:Core/Src/bno055.c ****     }
 11745              		.loc 1 4766 18 view .LVU3119
 11746 0054 4FF0FF34 		mov	r4, #-1
 11747              	.LVL1294:
4766:Core/Src/bno055.c ****     }
 11748              		.loc 1 4766 18 view .LVU3120
 11749 0058 F2E7     		b	.L862
 11750              	.LVL1295:
 11751              	.L864:
4761:Core/Src/bno055.c ****         }
 11752              		.loc 1 4761 22 view .LVU3121
 11753 005a 4FF0FF34 		mov	r4, #-1
 11754              	.LVL1296:
4761:Core/Src/bno055.c ****         }
 11755              		.loc 1 4761 22 view .LVU3122
 11756 005e EFE7     		b	.L862
 11757              		.cfi_endproc
 11758              	.LFE80:
 11760              		.section	.text.bno055_convert_double_accel_y_msq,"ax",%progbits
 11761              		.align	1
 11762              		.global	bno055_convert_double_accel_y_msq
 11763              		.syntax unified
 11764              		.thumb
 11765              		.thumb_func
 11766              		.fpu fpv4-sp-d16
 11768              	bno055_convert_double_accel_y_msq:
ARM GAS  /tmp/ccWoU29M.s 			page 371


 11769              	.LVL1297:
 11770              	.LFB81:
4788:Core/Src/bno055.c ****     /* Variable used to return value of
 11771              		.loc 1 4788 1 is_stmt 1 view -0
 11772              		.cfi_startproc
 11773              		@ args = 0, pretend = 0, frame = 8
 11774              		@ frame_needed = 0, uses_anonymous_args = 0
4788:Core/Src/bno055.c ****     /* Variable used to return value of
 11775              		.loc 1 4788 1 is_stmt 0 view .LVU3124
 11776 0000 30B5     		push	{r4, r5, lr}
 11777              	.LCFI393:
 11778              		.cfi_def_cfa_offset 12
 11779              		.cfi_offset 4, -12
 11780              		.cfi_offset 5, -8
 11781              		.cfi_offset 14, -4
 11782 0002 83B0     		sub	sp, sp, #12
 11783              	.LCFI394:
 11784              		.cfi_def_cfa_offset 24
 11785 0004 0546     		mov	r5, r0
4791:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
 11786              		.loc 1 4791 5 is_stmt 1 view .LVU3125
 11787              	.LVL1298:
4792:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11788              		.loc 1 4792 5 view .LVU3126
4792:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11789              		.loc 1 4792 9 is_stmt 0 view .LVU3127
 11790 0006 0023     		movs	r3, #0
 11791 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4793:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11792              		.loc 1 4793 5 is_stmt 1 view .LVU3128
 11793              	.LVL1299:
4794:Core/Src/bno055.c **** 
 11794              		.loc 1 4794 5 view .LVU3129
4794:Core/Src/bno055.c **** 
 11795              		.loc 1 4794 8 is_stmt 0 view .LVU3130
 11796 000c 8DF80530 		strb	r3, [sp, #5]
4798:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11797              		.loc 1 4798 5 is_stmt 1 view .LVU3131
4798:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11798              		.loc 1 4798 16 is_stmt 0 view .LVU3132
 11799 0010 0DF10500 		add	r0, sp, #5
 11800              	.LVL1300:
4798:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11801              		.loc 1 4798 16 view .LVU3133
 11802 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11803              	.LVL1301:
 11804 0018 0446     		mov	r4, r0
 11805              	.LVL1302:
4799:Core/Src/bno055.c ****     {
 11806              		.loc 1 4799 5 is_stmt 1 view .LVU3134
4799:Core/Src/bno055.c ****     {
 11807              		.loc 1 4799 23 is_stmt 0 view .LVU3135
 11808 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4799:Core/Src/bno055.c ****     {
 11809              		.loc 1 4799 8 view .LVU3136
 11810 001e ABB9     		cbnz	r3, .L873
 11811              	.L868:
ARM GAS  /tmp/ccWoU29M.s 			page 372


4803:Core/Src/bno055.c ****     {
 11812              		.loc 1 4803 5 is_stmt 1 view .LVU3137
4803:Core/Src/bno055.c ****     {
 11813              		.loc 1 4803 8 is_stmt 0 view .LVU3138
 11814 0020 DCB9     		cbnz	r4, .L870
4806:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11815              		.loc 1 4806 9 is_stmt 1 view .LVU3139
4806:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11816              		.loc 1 4806 21 is_stmt 0 view .LVU3140
 11817 0022 0DF10600 		add	r0, sp, #6
 11818 0026 FFF7FEFF 		bl	bno055_read_accel_y
 11819              	.LVL1303:
4806:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11820              		.loc 1 4806 18 view .LVU3141
 11821 002a 54FA80F4 		uxtab	r4, r4, r0
 11822              	.LVL1304:
4806:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11823              		.loc 1 4806 18 view .LVU3142
 11824 002e 64B2     		sxtb	r4, r4
 11825              	.LVL1305:
4807:Core/Src/bno055.c ****         {
 11826              		.loc 1 4807 9 is_stmt 1 view .LVU3143
4807:Core/Src/bno055.c ****         {
 11827              		.loc 1 4807 12 is_stmt 0 view .LVU3144
 11828 0030 B4B9     		cbnz	r4, .L871
4810:Core/Src/bno055.c ****             *accel_y_d = data_f;
 11829              		.loc 1 4810 13 is_stmt 1 view .LVU3145
4810:Core/Src/bno055.c ****             *accel_y_d = data_f;
 11830              		.loc 1 4810 22 is_stmt 0 view .LVU3146
 11831 0032 BDF90600 		ldrsh	r0, [sp, #6]
 11832 0036 FFF7FEFF 		bl	__aeabi_i2d
 11833              	.LVL1306:
4810:Core/Src/bno055.c ****             *accel_y_d = data_f;
 11834              		.loc 1 4810 20 view .LVU3147
 11835 003a 0022     		movs	r2, #0
 11836 003c 0A4B     		ldr	r3, .L874
 11837 003e FFF7FEFF 		bl	__aeabi_ddiv
 11838              	.LVL1307:
4811:Core/Src/bno055.c ****         }
 11839              		.loc 1 4811 13 is_stmt 1 view .LVU3148
4811:Core/Src/bno055.c ****         }
 11840              		.loc 1 4811 24 is_stmt 0 view .LVU3149
 11841 0042 C5E90001 		strd	r0, [r5]
 11842              	.LVL1308:
 11843              	.L869:
4823:Core/Src/bno055.c **** }
 11844              		.loc 1 4823 5 is_stmt 1 view .LVU3150
4824:Core/Src/bno055.c **** 
 11845              		.loc 1 4824 1 is_stmt 0 view .LVU3151
 11846 0046 2046     		mov	r0, r4
 11847 0048 03B0     		add	sp, sp, #12
 11848              	.LCFI395:
 11849              		.cfi_remember_state
 11850              		.cfi_def_cfa_offset 12
 11851              		@ sp needed
 11852 004a 30BD     		pop	{r4, r5, pc}
 11853              	.LVL1309:
ARM GAS  /tmp/ccWoU29M.s 			page 373


 11854              	.L873:
 11855              	.LCFI396:
 11856              		.cfi_restore_state
4801:Core/Src/bno055.c ****     }
 11857              		.loc 1 4801 9 is_stmt 1 view .LVU3152
4801:Core/Src/bno055.c ****     }
 11858              		.loc 1 4801 21 is_stmt 0 view .LVU3153
 11859 004c 0020     		movs	r0, #0
 11860 004e FFF7FEFF 		bl	bno055_set_accel_unit
 11861              	.LVL1310:
4801:Core/Src/bno055.c ****     }
 11862              		.loc 1 4801 18 view .LVU3154
 11863 0052 54FA80F4 		uxtab	r4, r4, r0
 11864              	.LVL1311:
4801:Core/Src/bno055.c ****     }
 11865              		.loc 1 4801 18 view .LVU3155
 11866 0056 64B2     		sxtb	r4, r4
 11867              	.LVL1312:
4801:Core/Src/bno055.c ****     }
 11868              		.loc 1 4801 18 view .LVU3156
 11869 0058 E2E7     		b	.L868
 11870              	.L870:
4820:Core/Src/bno055.c ****     }
 11871              		.loc 1 4820 18 view .LVU3157
 11872 005a 4FF0FF34 		mov	r4, #-1
 11873              	.LVL1313:
4820:Core/Src/bno055.c ****     }
 11874              		.loc 1 4820 18 view .LVU3158
 11875 005e F2E7     		b	.L869
 11876              	.LVL1314:
 11877              	.L871:
4815:Core/Src/bno055.c ****         }
 11878              		.loc 1 4815 22 view .LVU3159
 11879 0060 4FF0FF34 		mov	r4, #-1
 11880              	.LVL1315:
4815:Core/Src/bno055.c ****         }
 11881              		.loc 1 4815 22 view .LVU3160
 11882 0064 EFE7     		b	.L869
 11883              	.L875:
 11884 0066 00BF     		.align	2
 11885              	.L874:
 11886 0068 00005940 		.word	1079574528
 11887              		.cfi_endproc
 11888              	.LFE81:
 11890              		.section	.text.bno055_convert_double_accel_y_mg,"ax",%progbits
 11891              		.align	1
 11892              		.global	bno055_convert_double_accel_y_mg
 11893              		.syntax unified
 11894              		.thumb
 11895              		.thumb_func
 11896              		.fpu fpv4-sp-d16
 11898              	bno055_convert_double_accel_y_mg:
 11899              	.LVL1316:
 11900              	.LFB82:
4841:Core/Src/bno055.c ****     /* Variable used to return value of
 11901              		.loc 1 4841 1 is_stmt 1 view -0
 11902              		.cfi_startproc
ARM GAS  /tmp/ccWoU29M.s 			page 374


 11903              		@ args = 0, pretend = 0, frame = 8
 11904              		@ frame_needed = 0, uses_anonymous_args = 0
4841:Core/Src/bno055.c ****     /* Variable used to return value of
 11905              		.loc 1 4841 1 is_stmt 0 view .LVU3162
 11906 0000 30B5     		push	{r4, r5, lr}
 11907              	.LCFI397:
 11908              		.cfi_def_cfa_offset 12
 11909              		.cfi_offset 4, -12
 11910              		.cfi_offset 5, -8
 11911              		.cfi_offset 14, -4
 11912 0002 83B0     		sub	sp, sp, #12
 11913              	.LCFI398:
 11914              		.cfi_def_cfa_offset 24
 11915 0004 0546     		mov	r5, r0
4844:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
 11916              		.loc 1 4844 5 is_stmt 1 view .LVU3163
 11917              	.LVL1317:
4845:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 11918              		.loc 1 4845 5 view .LVU3164
4845:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 11919              		.loc 1 4845 9 is_stmt 0 view .LVU3165
 11920 0006 0023     		movs	r3, #0
 11921 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4846:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11922              		.loc 1 4846 5 is_stmt 1 view .LVU3166
 11923              	.LVL1318:
4847:Core/Src/bno055.c **** 
 11924              		.loc 1 4847 5 view .LVU3167
4847:Core/Src/bno055.c **** 
 11925              		.loc 1 4847 8 is_stmt 0 view .LVU3168
 11926 000c 8DF80530 		strb	r3, [sp, #5]
4851:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11927              		.loc 1 4851 5 is_stmt 1 view .LVU3169
4851:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11928              		.loc 1 4851 16 is_stmt 0 view .LVU3170
 11929 0010 0DF10500 		add	r0, sp, #5
 11930              	.LVL1319:
4851:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11931              		.loc 1 4851 16 view .LVU3171
 11932 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11933              	.LVL1320:
 11934 0018 0446     		mov	r4, r0
 11935              	.LVL1321:
4852:Core/Src/bno055.c ****     {
 11936              		.loc 1 4852 5 is_stmt 1 view .LVU3172
4852:Core/Src/bno055.c ****     {
 11937              		.loc 1 4852 23 is_stmt 0 view .LVU3173
 11938 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4852:Core/Src/bno055.c ****     {
 11939              		.loc 1 4852 8 view .LVU3174
 11940 001e 012B     		cmp	r3, #1
 11941 0020 11D1     		bne	.L882
 11942              	.L877:
4856:Core/Src/bno055.c ****     {
 11943              		.loc 1 4856 5 is_stmt 1 view .LVU3175
4856:Core/Src/bno055.c ****     {
 11944              		.loc 1 4856 8 is_stmt 0 view .LVU3176
ARM GAS  /tmp/ccWoU29M.s 			page 375


 11945 0022 BCB9     		cbnz	r4, .L879
4859:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11946              		.loc 1 4859 9 is_stmt 1 view .LVU3177
4859:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11947              		.loc 1 4859 21 is_stmt 0 view .LVU3178
 11948 0024 0DF10600 		add	r0, sp, #6
 11949 0028 FFF7FEFF 		bl	bno055_read_accel_y
 11950              	.LVL1322:
4859:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11951              		.loc 1 4859 18 view .LVU3179
 11952 002c 54FA80F4 		uxtab	r4, r4, r0
 11953              	.LVL1323:
4859:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11954              		.loc 1 4859 18 view .LVU3180
 11955 0030 64B2     		sxtb	r4, r4
 11956              	.LVL1324:
4860:Core/Src/bno055.c ****         {
 11957              		.loc 1 4860 9 is_stmt 1 view .LVU3181
4860:Core/Src/bno055.c ****         {
 11958              		.loc 1 4860 12 is_stmt 0 view .LVU3182
 11959 0032 94B9     		cbnz	r4, .L880
4863:Core/Src/bno055.c ****             *accel_y_d = data_d;
 11960              		.loc 1 4863 13 is_stmt 1 view .LVU3183
4863:Core/Src/bno055.c ****             *accel_y_d = data_d;
 11961              		.loc 1 4863 20 is_stmt 0 view .LVU3184
 11962 0034 BDF90600 		ldrsh	r0, [sp, #6]
 11963 0038 FFF7FEFF 		bl	__aeabi_i2d
 11964              	.LVL1325:
4864:Core/Src/bno055.c ****         }
 11965              		.loc 1 4864 13 is_stmt 1 view .LVU3185
4864:Core/Src/bno055.c ****         }
 11966              		.loc 1 4864 24 is_stmt 0 view .LVU3186
 11967 003c C5E90001 		strd	r0, [r5]
 11968              	.LVL1326:
 11969              	.L878:
4876:Core/Src/bno055.c **** }
 11970              		.loc 1 4876 5 is_stmt 1 view .LVU3187
4877:Core/Src/bno055.c **** 
 11971              		.loc 1 4877 1 is_stmt 0 view .LVU3188
 11972 0040 2046     		mov	r0, r4
 11973 0042 03B0     		add	sp, sp, #12
 11974              	.LCFI399:
 11975              		.cfi_remember_state
 11976              		.cfi_def_cfa_offset 12
 11977              		@ sp needed
 11978 0044 30BD     		pop	{r4, r5, pc}
 11979              	.LVL1327:
 11980              	.L882:
 11981              	.LCFI400:
 11982              		.cfi_restore_state
4854:Core/Src/bno055.c ****     }
 11983              		.loc 1 4854 9 is_stmt 1 view .LVU3189
4854:Core/Src/bno055.c ****     }
 11984              		.loc 1 4854 21 is_stmt 0 view .LVU3190
 11985 0046 0120     		movs	r0, #1
 11986 0048 FFF7FEFF 		bl	bno055_set_accel_unit
 11987              	.LVL1328:
ARM GAS  /tmp/ccWoU29M.s 			page 376


4854:Core/Src/bno055.c ****     }
 11988              		.loc 1 4854 18 view .LVU3191
 11989 004c 54FA80F4 		uxtab	r4, r4, r0
 11990              	.LVL1329:
4854:Core/Src/bno055.c ****     }
 11991              		.loc 1 4854 18 view .LVU3192
 11992 0050 64B2     		sxtb	r4, r4
 11993              	.LVL1330:
4854:Core/Src/bno055.c ****     }
 11994              		.loc 1 4854 18 view .LVU3193
 11995 0052 E6E7     		b	.L877
 11996              	.L879:
4873:Core/Src/bno055.c ****     }
 11997              		.loc 1 4873 18 view .LVU3194
 11998 0054 4FF0FF34 		mov	r4, #-1
 11999              	.LVL1331:
4873:Core/Src/bno055.c ****     }
 12000              		.loc 1 4873 18 view .LVU3195
 12001 0058 F2E7     		b	.L878
 12002              	.LVL1332:
 12003              	.L880:
4868:Core/Src/bno055.c ****         }
 12004              		.loc 1 4868 22 view .LVU3196
 12005 005a 4FF0FF34 		mov	r4, #-1
 12006              	.LVL1333:
4868:Core/Src/bno055.c ****         }
 12007              		.loc 1 4868 22 view .LVU3197
 12008 005e EFE7     		b	.L878
 12009              		.cfi_endproc
 12010              	.LFE82:
 12012              		.section	.text.bno055_convert_double_accel_z_msq,"ax",%progbits
 12013              		.align	1
 12014              		.global	bno055_convert_double_accel_z_msq
 12015              		.syntax unified
 12016              		.thumb
 12017              		.thumb_func
 12018              		.fpu fpv4-sp-d16
 12020              	bno055_convert_double_accel_z_msq:
 12021              	.LVL1334:
 12022              	.LFB83:
4892:Core/Src/bno055.c ****     /* Variable used to return value of
 12023              		.loc 1 4892 1 is_stmt 1 view -0
 12024              		.cfi_startproc
 12025              		@ args = 0, pretend = 0, frame = 8
 12026              		@ frame_needed = 0, uses_anonymous_args = 0
4892:Core/Src/bno055.c ****     /* Variable used to return value of
 12027              		.loc 1 4892 1 is_stmt 0 view .LVU3199
 12028 0000 30B5     		push	{r4, r5, lr}
 12029              	.LCFI401:
 12030              		.cfi_def_cfa_offset 12
 12031              		.cfi_offset 4, -12
 12032              		.cfi_offset 5, -8
 12033              		.cfi_offset 14, -4
 12034 0002 83B0     		sub	sp, sp, #12
 12035              	.LCFI402:
 12036              		.cfi_def_cfa_offset 24
 12037 0004 0546     		mov	r5, r0
ARM GAS  /tmp/ccWoU29M.s 			page 377


4895:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
 12038              		.loc 1 4895 5 is_stmt 1 view .LVU3200
 12039              	.LVL1335:
4896:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 12040              		.loc 1 4896 5 view .LVU3201
4896:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 12041              		.loc 1 4896 9 is_stmt 0 view .LVU3202
 12042 0006 0023     		movs	r3, #0
 12043 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4897:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 12044              		.loc 1 4897 5 is_stmt 1 view .LVU3203
 12045              	.LVL1336:
4898:Core/Src/bno055.c **** 
 12046              		.loc 1 4898 5 view .LVU3204
4898:Core/Src/bno055.c **** 
 12047              		.loc 1 4898 8 is_stmt 0 view .LVU3205
 12048 000c 8DF80530 		strb	r3, [sp, #5]
4902:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 12049              		.loc 1 4902 5 is_stmt 1 view .LVU3206
4902:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 12050              		.loc 1 4902 16 is_stmt 0 view .LVU3207
 12051 0010 0DF10500 		add	r0, sp, #5
 12052              	.LVL1337:
4902:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 12053              		.loc 1 4902 16 view .LVU3208
 12054 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 12055              	.LVL1338:
 12056 0018 0446     		mov	r4, r0
 12057              	.LVL1339:
4903:Core/Src/bno055.c ****     {
 12058              		.loc 1 4903 5 is_stmt 1 view .LVU3209
4903:Core/Src/bno055.c ****     {
 12059              		.loc 1 4903 23 is_stmt 0 view .LVU3210
 12060 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4903:Core/Src/bno055.c ****     {
 12061              		.loc 1 4903 8 view .LVU3211
 12062 001e ABB9     		cbnz	r3, .L889
 12063              	.L884:
4907:Core/Src/bno055.c ****     {
 12064              		.loc 1 4907 5 is_stmt 1 view .LVU3212
4907:Core/Src/bno055.c ****     {
 12065              		.loc 1 4907 8 is_stmt 0 view .LVU3213
 12066 0020 DCB9     		cbnz	r4, .L886
4910:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12067              		.loc 1 4910 9 is_stmt 1 view .LVU3214
4910:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12068              		.loc 1 4910 21 is_stmt 0 view .LVU3215
 12069 0022 0DF10600 		add	r0, sp, #6
 12070 0026 FFF7FEFF 		bl	bno055_read_accel_z
 12071              	.LVL1340:
4910:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12072              		.loc 1 4910 18 view .LVU3216
 12073 002a 54FA80F4 		uxtab	r4, r4, r0
 12074              	.LVL1341:
4910:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12075              		.loc 1 4910 18 view .LVU3217
 12076 002e 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccWoU29M.s 			page 378


 12077              	.LVL1342:
4911:Core/Src/bno055.c ****         {
 12078              		.loc 1 4911 9 is_stmt 1 view .LVU3218
4911:Core/Src/bno055.c ****         {
 12079              		.loc 1 4911 12 is_stmt 0 view .LVU3219
 12080 0030 B4B9     		cbnz	r4, .L887
4914:Core/Src/bno055.c ****             *accel_z_d = data_d;
 12081              		.loc 1 4914 13 is_stmt 1 view .LVU3220
4914:Core/Src/bno055.c ****             *accel_z_d = data_d;
 12082              		.loc 1 4914 22 is_stmt 0 view .LVU3221
 12083 0032 BDF90600 		ldrsh	r0, [sp, #6]
 12084 0036 FFF7FEFF 		bl	__aeabi_i2d
 12085              	.LVL1343:
4914:Core/Src/bno055.c ****             *accel_z_d = data_d;
 12086              		.loc 1 4914 20 view .LVU3222
 12087 003a 0022     		movs	r2, #0
 12088 003c 0A4B     		ldr	r3, .L890
 12089 003e FFF7FEFF 		bl	__aeabi_ddiv
 12090              	.LVL1344:
4915:Core/Src/bno055.c ****         }
 12091              		.loc 1 4915 13 is_stmt 1 view .LVU3223
4915:Core/Src/bno055.c ****         }
 12092              		.loc 1 4915 24 is_stmt 0 view .LVU3224
 12093 0042 C5E90001 		strd	r0, [r5]
 12094              	.LVL1345:
 12095              	.L885:
4927:Core/Src/bno055.c **** }
 12096              		.loc 1 4927 5 is_stmt 1 view .LVU3225
4928:Core/Src/bno055.c **** 
 12097              		.loc 1 4928 1 is_stmt 0 view .LVU3226
 12098 0046 2046     		mov	r0, r4
 12099 0048 03B0     		add	sp, sp, #12
 12100              	.LCFI403:
 12101              		.cfi_remember_state
 12102              		.cfi_def_cfa_offset 12
 12103              		@ sp needed
 12104 004a 30BD     		pop	{r4, r5, pc}
 12105              	.LVL1346:
 12106              	.L889:
 12107              	.LCFI404:
 12108              		.cfi_restore_state
4905:Core/Src/bno055.c ****     }
 12109              		.loc 1 4905 9 is_stmt 1 view .LVU3227
4905:Core/Src/bno055.c ****     }
 12110              		.loc 1 4905 21 is_stmt 0 view .LVU3228
 12111 004c 0020     		movs	r0, #0
 12112 004e FFF7FEFF 		bl	bno055_set_accel_unit
 12113              	.LVL1347:
4905:Core/Src/bno055.c ****     }
 12114              		.loc 1 4905 18 view .LVU3229
 12115 0052 54FA80F4 		uxtab	r4, r4, r0
 12116              	.LVL1348:
4905:Core/Src/bno055.c ****     }
 12117              		.loc 1 4905 18 view .LVU3230
 12118 0056 64B2     		sxtb	r4, r4
 12119              	.LVL1349:
4905:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 379


 12120              		.loc 1 4905 18 view .LVU3231
 12121 0058 E2E7     		b	.L884
 12122              	.L886:
4924:Core/Src/bno055.c ****     }
 12123              		.loc 1 4924 18 view .LVU3232
 12124 005a 4FF0FF34 		mov	r4, #-1
 12125              	.LVL1350:
4924:Core/Src/bno055.c ****     }
 12126              		.loc 1 4924 18 view .LVU3233
 12127 005e F2E7     		b	.L885
 12128              	.LVL1351:
 12129              	.L887:
4919:Core/Src/bno055.c ****         }
 12130              		.loc 1 4919 22 view .LVU3234
 12131 0060 4FF0FF34 		mov	r4, #-1
 12132              	.LVL1352:
4919:Core/Src/bno055.c ****         }
 12133              		.loc 1 4919 22 view .LVU3235
 12134 0064 EFE7     		b	.L885
 12135              	.L891:
 12136 0066 00BF     		.align	2
 12137              	.L890:
 12138 0068 00005940 		.word	1079574528
 12139              		.cfi_endproc
 12140              	.LFE83:
 12142              		.section	.text.bno055_convert_double_accel_z_mg,"ax",%progbits
 12143              		.align	1
 12144              		.global	bno055_convert_double_accel_z_mg
 12145              		.syntax unified
 12146              		.thumb
 12147              		.thumb_func
 12148              		.fpu fpv4-sp-d16
 12150              	bno055_convert_double_accel_z_mg:
 12151              	.LVL1353:
 12152              	.LFB84:
4944:Core/Src/bno055.c ****     /* Variable used to return value of
 12153              		.loc 1 4944 1 is_stmt 1 view -0
 12154              		.cfi_startproc
 12155              		@ args = 0, pretend = 0, frame = 8
 12156              		@ frame_needed = 0, uses_anonymous_args = 0
4944:Core/Src/bno055.c ****     /* Variable used to return value of
 12157              		.loc 1 4944 1 is_stmt 0 view .LVU3237
 12158 0000 30B5     		push	{r4, r5, lr}
 12159              	.LCFI405:
 12160              		.cfi_def_cfa_offset 12
 12161              		.cfi_offset 4, -12
 12162              		.cfi_offset 5, -8
 12163              		.cfi_offset 14, -4
 12164 0002 83B0     		sub	sp, sp, #12
 12165              	.LCFI406:
 12166              		.cfi_def_cfa_offset 24
 12167 0004 0546     		mov	r5, r0
4947:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
 12168              		.loc 1 4947 5 is_stmt 1 view .LVU3238
 12169              	.LVL1354:
4948:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 12170              		.loc 1 4948 5 view .LVU3239
ARM GAS  /tmp/ccWoU29M.s 			page 380


4948:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 12171              		.loc 1 4948 9 is_stmt 0 view .LVU3240
 12172 0006 0023     		movs	r3, #0
 12173 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4949:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 12174              		.loc 1 4949 5 is_stmt 1 view .LVU3241
 12175              	.LVL1355:
4950:Core/Src/bno055.c **** 
 12176              		.loc 1 4950 5 view .LVU3242
4950:Core/Src/bno055.c **** 
 12177              		.loc 1 4950 8 is_stmt 0 view .LVU3243
 12178 000c 8DF80530 		strb	r3, [sp, #5]
4954:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 12179              		.loc 1 4954 5 is_stmt 1 view .LVU3244
4954:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 12180              		.loc 1 4954 16 is_stmt 0 view .LVU3245
 12181 0010 0DF10500 		add	r0, sp, #5
 12182              	.LVL1356:
4954:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 12183              		.loc 1 4954 16 view .LVU3246
 12184 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 12185              	.LVL1357:
 12186 0018 0446     		mov	r4, r0
 12187              	.LVL1358:
4955:Core/Src/bno055.c ****     {
 12188              		.loc 1 4955 5 is_stmt 1 view .LVU3247
4955:Core/Src/bno055.c ****     {
 12189              		.loc 1 4955 23 is_stmt 0 view .LVU3248
 12190 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4955:Core/Src/bno055.c ****     {
 12191              		.loc 1 4955 8 view .LVU3249
 12192 001e 012B     		cmp	r3, #1
 12193 0020 11D1     		bne	.L898
 12194              	.L893:
4959:Core/Src/bno055.c ****     {
 12195              		.loc 1 4959 5 is_stmt 1 view .LVU3250
4959:Core/Src/bno055.c ****     {
 12196              		.loc 1 4959 8 is_stmt 0 view .LVU3251
 12197 0022 BCB9     		cbnz	r4, .L895
4962:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12198              		.loc 1 4962 9 is_stmt 1 view .LVU3252
4962:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12199              		.loc 1 4962 21 is_stmt 0 view .LVU3253
 12200 0024 0DF10600 		add	r0, sp, #6
 12201 0028 FFF7FEFF 		bl	bno055_read_accel_z
 12202              	.LVL1359:
4962:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12203              		.loc 1 4962 18 view .LVU3254
 12204 002c 54FA80F4 		uxtab	r4, r4, r0
 12205              	.LVL1360:
4962:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12206              		.loc 1 4962 18 view .LVU3255
 12207 0030 64B2     		sxtb	r4, r4
 12208              	.LVL1361:
4963:Core/Src/bno055.c ****         {
 12209              		.loc 1 4963 9 is_stmt 1 view .LVU3256
4963:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 381


 12210              		.loc 1 4963 12 is_stmt 0 view .LVU3257
 12211 0032 94B9     		cbnz	r4, .L896
4966:Core/Src/bno055.c ****             *accel_z_d = data_d;
 12212              		.loc 1 4966 13 is_stmt 1 view .LVU3258
4966:Core/Src/bno055.c ****             *accel_z_d = data_d;
 12213              		.loc 1 4966 20 is_stmt 0 view .LVU3259
 12214 0034 BDF90600 		ldrsh	r0, [sp, #6]
 12215 0038 FFF7FEFF 		bl	__aeabi_i2d
 12216              	.LVL1362:
4967:Core/Src/bno055.c ****         }
 12217              		.loc 1 4967 13 is_stmt 1 view .LVU3260
4967:Core/Src/bno055.c ****         }
 12218              		.loc 1 4967 24 is_stmt 0 view .LVU3261
 12219 003c C5E90001 		strd	r0, [r5]
 12220              	.LVL1363:
 12221              	.L894:
4979:Core/Src/bno055.c **** }
 12222              		.loc 1 4979 5 is_stmt 1 view .LVU3262
4980:Core/Src/bno055.c **** 
 12223              		.loc 1 4980 1 is_stmt 0 view .LVU3263
 12224 0040 2046     		mov	r0, r4
 12225 0042 03B0     		add	sp, sp, #12
 12226              	.LCFI407:
 12227              		.cfi_remember_state
 12228              		.cfi_def_cfa_offset 12
 12229              		@ sp needed
 12230 0044 30BD     		pop	{r4, r5, pc}
 12231              	.LVL1364:
 12232              	.L898:
 12233              	.LCFI408:
 12234              		.cfi_restore_state
4957:Core/Src/bno055.c ****     }
 12235              		.loc 1 4957 9 is_stmt 1 view .LVU3264
4957:Core/Src/bno055.c ****     }
 12236              		.loc 1 4957 21 is_stmt 0 view .LVU3265
 12237 0046 0120     		movs	r0, #1
 12238 0048 FFF7FEFF 		bl	bno055_set_accel_unit
 12239              	.LVL1365:
4957:Core/Src/bno055.c ****     }
 12240              		.loc 1 4957 18 view .LVU3266
 12241 004c 54FA80F4 		uxtab	r4, r4, r0
 12242              	.LVL1366:
4957:Core/Src/bno055.c ****     }
 12243              		.loc 1 4957 18 view .LVU3267
 12244 0050 64B2     		sxtb	r4, r4
 12245              	.LVL1367:
4957:Core/Src/bno055.c ****     }
 12246              		.loc 1 4957 18 view .LVU3268
 12247 0052 E6E7     		b	.L893
 12248              	.L895:
4976:Core/Src/bno055.c ****     }
 12249              		.loc 1 4976 18 view .LVU3269
 12250 0054 4FF0FF34 		mov	r4, #-1
 12251              	.LVL1368:
4976:Core/Src/bno055.c ****     }
 12252              		.loc 1 4976 18 view .LVU3270
 12253 0058 F2E7     		b	.L894
ARM GAS  /tmp/ccWoU29M.s 			page 382


 12254              	.LVL1369:
 12255              	.L896:
4971:Core/Src/bno055.c ****         }
 12256              		.loc 1 4971 22 view .LVU3271
 12257 005a 4FF0FF34 		mov	r4, #-1
 12258              	.LVL1370:
4971:Core/Src/bno055.c ****         }
 12259              		.loc 1 4971 22 view .LVU3272
 12260 005e EFE7     		b	.L894
 12261              		.cfi_endproc
 12262              	.LFE84:
 12264              		.section	.text.bno055_convert_double_accel_xyz_msq,"ax",%progbits
 12265              		.align	1
 12266              		.global	bno055_convert_double_accel_xyz_msq
 12267              		.syntax unified
 12268              		.thumb
 12269              		.thumb_func
 12270              		.fpu fpv4-sp-d16
 12272              	bno055_convert_double_accel_xyz_msq:
 12273              	.LVL1371:
 12274              	.LFB85:
5002:Core/Src/bno055.c ****     /* Variable used to return value of
 12275              		.loc 1 5002 1 is_stmt 1 view -0
 12276              		.cfi_startproc
 12277              		@ args = 0, pretend = 0, frame = 16
 12278              		@ frame_needed = 0, uses_anonymous_args = 0
5002:Core/Src/bno055.c ****     /* Variable used to return value of
 12279              		.loc 1 5002 1 is_stmt 0 view .LVU3274
 12280 0000 30B5     		push	{r4, r5, lr}
 12281              	.LCFI409:
 12282              		.cfi_def_cfa_offset 12
 12283              		.cfi_offset 4, -12
 12284              		.cfi_offset 5, -8
 12285              		.cfi_offset 14, -4
 12286 0002 85B0     		sub	sp, sp, #20
 12287              	.LCFI410:
 12288              		.cfi_def_cfa_offset 32
 12289 0004 0546     		mov	r5, r0
5005:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
 12290              		.loc 1 5005 5 is_stmt 1 view .LVU3275
 12291              	.LVL1372:
5006:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 12292              		.loc 1 5006 5 view .LVU3276
5006:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 12293              		.loc 1 5006 27 is_stmt 0 view .LVU3277
 12294 0006 0023     		movs	r3, #0
 12295 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 12296 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 12297 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
5007:Core/Src/bno055.c **** 
 12298              		.loc 1 5007 5 is_stmt 1 view .LVU3278
5007:Core/Src/bno055.c **** 
 12299              		.loc 1 5007 8 is_stmt 0 view .LVU3279
 12300 0014 8DF80730 		strb	r3, [sp, #7]
5011:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 12301              		.loc 1 5011 5 is_stmt 1 view .LVU3280
5011:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
ARM GAS  /tmp/ccWoU29M.s 			page 383


 12302              		.loc 1 5011 16 is_stmt 0 view .LVU3281
 12303 0018 0DF10700 		add	r0, sp, #7
 12304              	.LVL1373:
5011:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 12305              		.loc 1 5011 16 view .LVU3282
 12306 001c FFF7FEFF 		bl	bno055_get_accel_unit
 12307              	.LVL1374:
 12308 0020 0446     		mov	r4, r0
 12309              	.LVL1375:
5012:Core/Src/bno055.c ****     {
 12310              		.loc 1 5012 5 is_stmt 1 view .LVU3283
5012:Core/Src/bno055.c ****     {
 12311              		.loc 1 5012 23 is_stmt 0 view .LVU3284
 12312 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
5012:Core/Src/bno055.c ****     {
 12313              		.loc 1 5012 8 view .LVU3285
 12314 0026 43BB     		cbnz	r3, .L905
 12315              	.L900:
5016:Core/Src/bno055.c ****     {
 12316              		.loc 1 5016 5 is_stmt 1 view .LVU3286
5016:Core/Src/bno055.c ****     {
 12317              		.loc 1 5016 8 is_stmt 0 view .LVU3287
 12318 0028 74BB     		cbnz	r4, .L902
5019:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12319              		.loc 1 5019 9 is_stmt 1 view .LVU3288
5019:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12320              		.loc 1 5019 21 is_stmt 0 view .LVU3289
 12321 002a 02A8     		add	r0, sp, #8
 12322 002c FFF7FEFF 		bl	bno055_read_accel_xyz
 12323              	.LVL1376:
5019:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12324              		.loc 1 5019 18 view .LVU3290
 12325 0030 54FA80F4 		uxtab	r4, r4, r0
 12326              	.LVL1377:
5019:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12327              		.loc 1 5019 18 view .LVU3291
 12328 0034 64B2     		sxtb	r4, r4
 12329              	.LVL1378:
5020:Core/Src/bno055.c ****         {
 12330              		.loc 1 5020 9 is_stmt 1 view .LVU3292
5020:Core/Src/bno055.c ****         {
 12331              		.loc 1 5020 12 is_stmt 0 view .LVU3293
 12332 0036 54BB     		cbnz	r4, .L903
5023:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 12333              		.loc 1 5023 13 is_stmt 1 view .LVU3294
5023:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 12334              		.loc 1 5023 28 is_stmt 0 view .LVU3295
 12335 0038 BDF90800 		ldrsh	r0, [sp, #8]
 12336 003c FFF7FEFF 		bl	__aeabi_i2d
 12337              	.LVL1379:
 12338 0040 0022     		movs	r2, #0
 12339 0042 144B     		ldr	r3, .L906
 12340 0044 FFF7FEFF 		bl	__aeabi_ddiv
 12341              	.LVL1380:
5023:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 12342              		.loc 1 5023 26 view .LVU3296
 12343 0048 C5E90001 		strd	r0, [r5]
ARM GAS  /tmp/ccWoU29M.s 			page 384


5024:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 12344              		.loc 1 5024 13 is_stmt 1 view .LVU3297
5024:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 12345              		.loc 1 5024 28 is_stmt 0 view .LVU3298
 12346 004c BDF90A00 		ldrsh	r0, [sp, #10]
 12347 0050 FFF7FEFF 		bl	__aeabi_i2d
 12348              	.LVL1381:
 12349 0054 0022     		movs	r2, #0
 12350 0056 0F4B     		ldr	r3, .L906
 12351 0058 FFF7FEFF 		bl	__aeabi_ddiv
 12352              	.LVL1382:
5024:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 12353              		.loc 1 5024 26 view .LVU3299
 12354 005c C5E90201 		strd	r0, [r5, #8]
5025:Core/Src/bno055.c ****         }
 12355              		.loc 1 5025 13 is_stmt 1 view .LVU3300
5025:Core/Src/bno055.c ****         }
 12356              		.loc 1 5025 28 is_stmt 0 view .LVU3301
 12357 0060 BDF90C00 		ldrsh	r0, [sp, #12]
 12358 0064 FFF7FEFF 		bl	__aeabi_i2d
 12359              	.LVL1383:
 12360 0068 0022     		movs	r2, #0
 12361 006a 0A4B     		ldr	r3, .L906
 12362 006c FFF7FEFF 		bl	__aeabi_ddiv
 12363              	.LVL1384:
5025:Core/Src/bno055.c ****         }
 12364              		.loc 1 5025 26 view .LVU3302
 12365 0070 C5E90401 		strd	r0, [r5, #16]
 12366              	.LVL1385:
 12367              	.L901:
5037:Core/Src/bno055.c **** }
 12368              		.loc 1 5037 5 is_stmt 1 view .LVU3303
5038:Core/Src/bno055.c **** 
 12369              		.loc 1 5038 1 is_stmt 0 view .LVU3304
 12370 0074 2046     		mov	r0, r4
 12371 0076 05B0     		add	sp, sp, #20
 12372              	.LCFI411:
 12373              		.cfi_remember_state
 12374              		.cfi_def_cfa_offset 12
 12375              		@ sp needed
 12376 0078 30BD     		pop	{r4, r5, pc}
 12377              	.LVL1386:
 12378              	.L905:
 12379              	.LCFI412:
 12380              		.cfi_restore_state
5014:Core/Src/bno055.c ****     }
 12381              		.loc 1 5014 9 is_stmt 1 view .LVU3305
5014:Core/Src/bno055.c ****     }
 12382              		.loc 1 5014 21 is_stmt 0 view .LVU3306
 12383 007a 0020     		movs	r0, #0
 12384 007c FFF7FEFF 		bl	bno055_set_accel_unit
 12385              	.LVL1387:
5014:Core/Src/bno055.c ****     }
 12386              		.loc 1 5014 18 view .LVU3307
 12387 0080 54FA80F4 		uxtab	r4, r4, r0
 12388              	.LVL1388:
5014:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 385


 12389              		.loc 1 5014 18 view .LVU3308
 12390 0084 64B2     		sxtb	r4, r4
 12391              	.LVL1389:
5014:Core/Src/bno055.c ****     }
 12392              		.loc 1 5014 18 view .LVU3309
 12393 0086 CFE7     		b	.L900
 12394              	.L902:
5034:Core/Src/bno055.c ****     }
 12395              		.loc 1 5034 18 view .LVU3310
 12396 0088 4FF0FF34 		mov	r4, #-1
 12397              	.LVL1390:
5034:Core/Src/bno055.c ****     }
 12398              		.loc 1 5034 18 view .LVU3311
 12399 008c F2E7     		b	.L901
 12400              	.LVL1391:
 12401              	.L903:
5029:Core/Src/bno055.c ****         }
 12402              		.loc 1 5029 22 view .LVU3312
 12403 008e 4FF0FF34 		mov	r4, #-1
 12404              	.LVL1392:
5029:Core/Src/bno055.c ****         }
 12405              		.loc 1 5029 22 view .LVU3313
 12406 0092 EFE7     		b	.L901
 12407              	.L907:
 12408              		.align	2
 12409              	.L906:
 12410 0094 00005940 		.word	1079574528
 12411              		.cfi_endproc
 12412              	.LFE85:
 12414              		.section	.text.bno055_convert_double_accel_xyz_mg,"ax",%progbits
 12415              		.align	1
 12416              		.global	bno055_convert_double_accel_xyz_mg
 12417              		.syntax unified
 12418              		.thumb
 12419              		.thumb_func
 12420              		.fpu fpv4-sp-d16
 12422              	bno055_convert_double_accel_xyz_mg:
 12423              	.LVL1393:
 12424              	.LFB86:
5059:Core/Src/bno055.c ****     /* Variable used to return value of
 12425              		.loc 1 5059 1 is_stmt 1 view -0
 12426              		.cfi_startproc
 12427              		@ args = 0, pretend = 0, frame = 16
 12428              		@ frame_needed = 0, uses_anonymous_args = 0
5059:Core/Src/bno055.c ****     /* Variable used to return value of
 12429              		.loc 1 5059 1 is_stmt 0 view .LVU3315
 12430 0000 30B5     		push	{r4, r5, lr}
 12431              	.LCFI413:
 12432              		.cfi_def_cfa_offset 12
 12433              		.cfi_offset 4, -12
 12434              		.cfi_offset 5, -8
 12435              		.cfi_offset 14, -4
 12436 0002 85B0     		sub	sp, sp, #20
 12437              	.LCFI414:
 12438              		.cfi_def_cfa_offset 32
 12439 0004 0546     		mov	r5, r0
5062:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
ARM GAS  /tmp/ccWoU29M.s 			page 386


 12440              		.loc 1 5062 5 is_stmt 1 view .LVU3316
 12441              	.LVL1394:
5063:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 12442              		.loc 1 5063 5 view .LVU3317
5063:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 12443              		.loc 1 5063 27 is_stmt 0 view .LVU3318
 12444 0006 0023     		movs	r3, #0
 12445 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 12446 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 12447 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
5064:Core/Src/bno055.c **** 
 12448              		.loc 1 5064 5 is_stmt 1 view .LVU3319
5064:Core/Src/bno055.c **** 
 12449              		.loc 1 5064 8 is_stmt 0 view .LVU3320
 12450 0014 8DF80730 		strb	r3, [sp, #7]
5068:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 12451              		.loc 1 5068 5 is_stmt 1 view .LVU3321
5068:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 12452              		.loc 1 5068 16 is_stmt 0 view .LVU3322
 12453 0018 0DF10700 		add	r0, sp, #7
 12454              	.LVL1395:
5068:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 12455              		.loc 1 5068 16 view .LVU3323
 12456 001c FFF7FEFF 		bl	bno055_get_accel_unit
 12457              	.LVL1396:
 12458 0020 0446     		mov	r4, r0
 12459              	.LVL1397:
5069:Core/Src/bno055.c ****     {
 12460              		.loc 1 5069 5 is_stmt 1 view .LVU3324
5069:Core/Src/bno055.c ****     {
 12461              		.loc 1 5069 23 is_stmt 0 view .LVU3325
 12462 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
5069:Core/Src/bno055.c ****     {
 12463              		.loc 1 5069 8 view .LVU3326
 12464 0026 012B     		cmp	r3, #1
 12465 0028 1CD1     		bne	.L914
 12466              	.L909:
5073:Core/Src/bno055.c ****     {
 12467              		.loc 1 5073 5 is_stmt 1 view .LVU3327
5073:Core/Src/bno055.c ****     {
 12468              		.loc 1 5073 8 is_stmt 0 view .LVU3328
 12469 002a 14BB     		cbnz	r4, .L911
5076:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12470              		.loc 1 5076 9 is_stmt 1 view .LVU3329
5076:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12471              		.loc 1 5076 21 is_stmt 0 view .LVU3330
 12472 002c 02A8     		add	r0, sp, #8
 12473 002e FFF7FEFF 		bl	bno055_read_accel_xyz
 12474              	.LVL1398:
5076:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12475              		.loc 1 5076 18 view .LVU3331
 12476 0032 54FA80F4 		uxtab	r4, r4, r0
 12477              	.LVL1399:
5076:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12478              		.loc 1 5076 18 view .LVU3332
 12479 0036 64B2     		sxtb	r4, r4
 12480              	.LVL1400:
ARM GAS  /tmp/ccWoU29M.s 			page 387


5077:Core/Src/bno055.c ****         {
 12481              		.loc 1 5077 9 is_stmt 1 view .LVU3333
5077:Core/Src/bno055.c ****         {
 12482              		.loc 1 5077 12 is_stmt 0 view .LVU3334
 12483 0038 F4B9     		cbnz	r4, .L912
5080:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 12484              		.loc 1 5080 13 is_stmt 1 view .LVU3335
5080:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 12485              		.loc 1 5080 28 is_stmt 0 view .LVU3336
 12486 003a BDF90800 		ldrsh	r0, [sp, #8]
 12487 003e FFF7FEFF 		bl	__aeabi_i2d
 12488              	.LVL1401:
5080:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 12489              		.loc 1 5080 26 view .LVU3337
 12490 0042 C5E90001 		strd	r0, [r5]
5081:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 12491              		.loc 1 5081 13 is_stmt 1 view .LVU3338
5081:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 12492              		.loc 1 5081 28 is_stmt 0 view .LVU3339
 12493 0046 BDF90A00 		ldrsh	r0, [sp, #10]
 12494 004a FFF7FEFF 		bl	__aeabi_i2d
 12495              	.LVL1402:
5081:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 12496              		.loc 1 5081 26 view .LVU3340
 12497 004e C5E90201 		strd	r0, [r5, #8]
5082:Core/Src/bno055.c ****         }
 12498              		.loc 1 5082 13 is_stmt 1 view .LVU3341
5082:Core/Src/bno055.c ****         }
 12499              		.loc 1 5082 28 is_stmt 0 view .LVU3342
 12500 0052 BDF90C00 		ldrsh	r0, [sp, #12]
 12501 0056 FFF7FEFF 		bl	__aeabi_i2d
 12502              	.LVL1403:
5082:Core/Src/bno055.c ****         }
 12503              		.loc 1 5082 26 view .LVU3343
 12504 005a C5E90401 		strd	r0, [r5, #16]
 12505              	.LVL1404:
 12506              	.L910:
5094:Core/Src/bno055.c **** }
 12507              		.loc 1 5094 5 is_stmt 1 view .LVU3344
5095:Core/Src/bno055.c **** 
 12508              		.loc 1 5095 1 is_stmt 0 view .LVU3345
 12509 005e 2046     		mov	r0, r4
 12510 0060 05B0     		add	sp, sp, #20
 12511              	.LCFI415:
 12512              		.cfi_remember_state
 12513              		.cfi_def_cfa_offset 12
 12514              		@ sp needed
 12515 0062 30BD     		pop	{r4, r5, pc}
 12516              	.LVL1405:
 12517              	.L914:
 12518              	.LCFI416:
 12519              		.cfi_restore_state
5071:Core/Src/bno055.c ****     }
 12520              		.loc 1 5071 9 is_stmt 1 view .LVU3346
5071:Core/Src/bno055.c ****     }
 12521              		.loc 1 5071 21 is_stmt 0 view .LVU3347
 12522 0064 0120     		movs	r0, #1
ARM GAS  /tmp/ccWoU29M.s 			page 388


 12523 0066 FFF7FEFF 		bl	bno055_set_accel_unit
 12524              	.LVL1406:
5071:Core/Src/bno055.c ****     }
 12525              		.loc 1 5071 18 view .LVU3348
 12526 006a 54FA80F4 		uxtab	r4, r4, r0
 12527              	.LVL1407:
5071:Core/Src/bno055.c ****     }
 12528              		.loc 1 5071 18 view .LVU3349
 12529 006e 64B2     		sxtb	r4, r4
 12530              	.LVL1408:
5071:Core/Src/bno055.c ****     }
 12531              		.loc 1 5071 18 view .LVU3350
 12532 0070 DBE7     		b	.L909
 12533              	.L911:
5091:Core/Src/bno055.c ****     }
 12534              		.loc 1 5091 18 view .LVU3351
 12535 0072 4FF0FF34 		mov	r4, #-1
 12536              	.LVL1409:
5091:Core/Src/bno055.c ****     }
 12537              		.loc 1 5091 18 view .LVU3352
 12538 0076 F2E7     		b	.L910
 12539              	.LVL1410:
 12540              	.L912:
5086:Core/Src/bno055.c ****         }
 12541              		.loc 1 5086 22 view .LVU3353
 12542 0078 4FF0FF34 		mov	r4, #-1
 12543              	.LVL1411:
5086:Core/Src/bno055.c ****         }
 12544              		.loc 1 5086 22 view .LVU3354
 12545 007c EFE7     		b	.L910
 12546              		.cfi_endproc
 12547              	.LFE86:
 12549              		.section	.text.bno055_set_gyro_unit,"ax",%progbits
 12550              		.align	1
 12551              		.global	bno055_set_gyro_unit
 12552              		.syntax unified
 12553              		.thumb
 12554              		.thumb_func
 12555              		.fpu fpv4-sp-d16
 12557              	bno055_set_gyro_unit:
 12558              	.LVL1412:
 12559              	.LFB136:
7597:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 12560              		.loc 1 7597 1 is_stmt 1 view -0
 12561              		.cfi_startproc
 12562              		@ args = 0, pretend = 0, frame = 8
 12563              		@ frame_needed = 0, uses_anonymous_args = 0
7597:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 12564              		.loc 1 7597 1 is_stmt 0 view .LVU3356
 12565 0000 30B5     		push	{r4, r5, lr}
 12566              	.LCFI417:
 12567              		.cfi_def_cfa_offset 12
 12568              		.cfi_offset 4, -12
 12569              		.cfi_offset 5, -8
 12570              		.cfi_offset 14, -4
 12571 0002 83B0     		sub	sp, sp, #12
 12572              	.LCFI418:
ARM GAS  /tmp/ccWoU29M.s 			page 389


 12573              		.cfi_def_cfa_offset 24
7598:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 12574              		.loc 1 7598 5 is_stmt 1 view .LVU3357
 12575              	.LVL1413:
7599:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 12576              		.loc 1 7599 5 view .LVU3358
7599:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 12577              		.loc 1 7599 8 is_stmt 0 view .LVU3359
 12578 0004 0023     		movs	r3, #0
 12579 0006 8DF80730 		strb	r3, [sp, #7]
7600:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 12580              		.loc 1 7600 5 is_stmt 1 view .LVU3360
7600:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 12581              		.loc 1 7600 8 is_stmt 0 view .LVU3361
 12582 000a 8DF80630 		strb	r3, [sp, #6]
7601:Core/Src/bno055.c **** 
 12583              		.loc 1 7601 5 is_stmt 1 view .LVU3362
 12584              	.LVL1414:
7604:Core/Src/bno055.c ****     {
 12585              		.loc 1 7604 5 view .LVU3363
7604:Core/Src/bno055.c ****     {
 12586              		.loc 1 7604 18 is_stmt 0 view .LVU3364
 12587 000e 264B     		ldr	r3, .L925
 12588 0010 1B68     		ldr	r3, [r3]
7604:Core/Src/bno055.c ****     {
 12589              		.loc 1 7604 8 view .LVU3365
 12590 0012 002B     		cmp	r3, #0
 12591 0014 44D0     		beq	.L919
 12592 0016 0546     		mov	r5, r0
7613:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 12593              		.loc 1 7613 9 is_stmt 1 view .LVU3366
7613:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 12594              		.loc 1 7613 19 is_stmt 0 view .LVU3367
 12595 0018 0DF10600 		add	r0, sp, #6
 12596              	.LVL1415:
7613:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 12597              		.loc 1 7613 19 view .LVU3368
 12598 001c FFF7FEFF 		bl	bno055_get_operation_mode
 12599              	.LVL1416:
7614:Core/Src/bno055.c ****         {
 12600              		.loc 1 7614 9 is_stmt 1 view .LVU3369
7614:Core/Src/bno055.c ****         {
 12601              		.loc 1 7614 12 is_stmt 0 view .LVU3370
 12602 0020 0446     		mov	r4, r0
 12603 0022 60BB     		cbnz	r0, .L920
7616:Core/Src/bno055.c ****             {
 12604              		.loc 1 7616 13 is_stmt 1 view .LVU3371
7616:Core/Src/bno055.c ****             {
 12605              		.loc 1 7616 32 is_stmt 0 view .LVU3372
 12606 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
7616:Core/Src/bno055.c ****             {
 12607              		.loc 1 7616 16 view .LVU3373
 12608 0028 1BBB     		cbnz	r3, .L923
 12609              	.LVL1417:
 12610              	.L918:
7620:Core/Src/bno055.c ****             {
 12611              		.loc 1 7620 13 is_stmt 1 view .LVU3374
ARM GAS  /tmp/ccWoU29M.s 			page 390


7620:Core/Src/bno055.c ****             {
 12612              		.loc 1 7620 16 is_stmt 0 view .LVU3375
 12613 002a 84BB     		cbnz	r4, .L921
7623:Core/Src/bno055.c ****                                                           BNO055_GYRO_UNIT_REG,
 12614              		.loc 1 7623 17 is_stmt 1 view .LVU3376
7623:Core/Src/bno055.c ****                                                           BNO055_GYRO_UNIT_REG,
 12615              		.loc 1 7623 36 is_stmt 0 view .LVU3377
 12616 002c 1E4B     		ldr	r3, .L925
 12617 002e 1868     		ldr	r0, [r3]
 12618 0030 0469     		ldr	r4, [r0, #16]
 12619              	.LVL1418:
7623:Core/Src/bno055.c ****                                                           BNO055_GYRO_UNIT_REG,
 12620              		.loc 1 7623 28 view .LVU3378
 12621 0032 0123     		movs	r3, #1
 12622 0034 0DF10702 		add	r2, sp, #7
 12623 0038 3B21     		movs	r1, #59
 12624 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 12625 003c A047     		blx	r4
 12626              	.LVL1419:
7627:Core/Src/bno055.c ****                 {
 12627              		.loc 1 7627 17 is_stmt 1 view .LVU3379
7627:Core/Src/bno055.c ****                 {
 12628              		.loc 1 7627 20 is_stmt 0 view .LVU3380
 12629 003e 0446     		mov	r4, r0
 12630 0040 F8B9     		cbnz	r0, .L917
7629:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 12631              		.loc 1 7629 21 is_stmt 1 view .LVU3381
7629:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 12632              		.loc 1 7629 32 is_stmt 0 view .LVU3382
 12633 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 12634              	.LVL1420:
7629:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 12635              		.loc 1 7629 32 view .LVU3383
 12636 0046 20F00200 		bic	r0, r0, #2
 12637 004a 43B2     		sxtb	r3, r0
 12638 004c 6800     		lsls	r0, r5, #1
 12639 004e 00F00200 		and	r0, r0, #2
 12640 0052 1843     		orrs	r0, r0, r3
7629:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 12641              		.loc 1 7629 30 view .LVU3384
 12642 0054 8DF80700 		strb	r0, [sp, #7]
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
 12643              		.loc 1 7630 21 is_stmt 1 view .LVU3385
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
 12644              		.loc 1 7630 41 is_stmt 0 view .LVU3386
 12645 0058 134B     		ldr	r3, .L925
 12646 005a 1868     		ldr	r0, [r3]
 12647 005c C568     		ldr	r5, [r0, #12]
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
 12648              		.loc 1 7630 33 view .LVU3387
 12649 005e 0123     		movs	r3, #1
 12650 0060 0DF10702 		add	r2, sp, #7
 12651 0064 3B21     		movs	r1, #59
 12652 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 12653 0068 A847     		blx	r5
 12654              	.LVL1421:
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
ARM GAS  /tmp/ccWoU29M.s 			page 391


 12655              		.loc 1 7630 30 view .LVU3388
 12656 006a 54FA80F4 		uxtab	r4, r4, r0
 12657 006e 64B2     		sxtb	r4, r4
 12658              	.LVL1422:
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
 12659              		.loc 1 7630 30 view .LVU3389
 12660 0070 07E0     		b	.L917
 12661              	.LVL1423:
 12662              	.L923:
7618:Core/Src/bno055.c ****             }
 12663              		.loc 1 7618 17 is_stmt 1 view .LVU3390
7618:Core/Src/bno055.c ****             }
 12664              		.loc 1 7618 28 is_stmt 0 view .LVU3391
 12665 0072 FFF7FEFF 		bl	bno055_set_operation_mode
 12666              	.LVL1424:
7618:Core/Src/bno055.c ****             }
 12667              		.loc 1 7618 25 view .LVU3392
 12668 0076 54FA80F4 		uxtab	r4, r4, r0
 12669 007a 64B2     		sxtb	r4, r4
 12670              	.LVL1425:
7618:Core/Src/bno055.c ****             }
 12671              		.loc 1 7618 25 view .LVU3393
 12672 007c D5E7     		b	.L918
 12673              	.LVL1426:
 12674              	.L920:
7643:Core/Src/bno055.c ****         }
 12675              		.loc 1 7643 22 view .LVU3394
 12676 007e 4FF0FF34 		mov	r4, #-1
 12677              	.LVL1427:
 12678              	.L917:
7646:Core/Src/bno055.c ****     {
 12679              		.loc 1 7646 5 is_stmt 1 view .LVU3395
7646:Core/Src/bno055.c ****     {
 12680              		.loc 1 7646 24 is_stmt 0 view .LVU3396
 12681 0082 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
7646:Core/Src/bno055.c ****     {
 12682              		.loc 1 7646 8 view .LVU3397
 12683 0086 28B9     		cbnz	r0, .L924
 12684              	.LVL1428:
 12685              	.L916:
7654:Core/Src/bno055.c **** 
 12686              		.loc 1 7654 1 view .LVU3398
 12687 0088 2046     		mov	r0, r4
 12688 008a 03B0     		add	sp, sp, #12
 12689              	.LCFI419:
 12690              		.cfi_remember_state
 12691              		.cfi_def_cfa_offset 12
 12692              		@ sp needed
 12693 008c 30BD     		pop	{r4, r5, pc}
 12694              	.LVL1429:
 12695              	.L921:
 12696              	.LCFI420:
 12697              		.cfi_restore_state
7638:Core/Src/bno055.c ****             }
 12698              		.loc 1 7638 26 view .LVU3399
 12699 008e 4FF0FF34 		mov	r4, #-1
 12700              	.LVL1430:
ARM GAS  /tmp/ccWoU29M.s 			page 392


7638:Core/Src/bno055.c ****             }
 12701              		.loc 1 7638 26 view .LVU3400
 12702 0092 F6E7     		b	.L917
 12703              	.LVL1431:
 12704              	.L924:
7650:Core/Src/bno055.c ****     }
 12705              		.loc 1 7650 9 is_stmt 1 view .LVU3401
7650:Core/Src/bno055.c ****     }
 12706              		.loc 1 7650 21 is_stmt 0 view .LVU3402
 12707 0094 FFF7FEFF 		bl	bno055_set_operation_mode
 12708              	.LVL1432:
7650:Core/Src/bno055.c ****     }
 12709              		.loc 1 7650 18 view .LVU3403
 12710 0098 54FA80F4 		uxtab	r4, r4, r0
 12711              	.LVL1433:
7650:Core/Src/bno055.c ****     }
 12712              		.loc 1 7650 18 view .LVU3404
 12713 009c 64B2     		sxtb	r4, r4
 12714              	.LVL1434:
7650:Core/Src/bno055.c ****     }
 12715              		.loc 1 7650 18 view .LVU3405
 12716 009e F3E7     		b	.L916
 12717              	.LVL1435:
 12718              	.L919:
7606:Core/Src/bno055.c ****     }
 12719              		.loc 1 7606 16 view .LVU3406
 12720 00a0 6FF07E04 		mvn	r4, #126
 12721 00a4 F0E7     		b	.L916
 12722              	.L926:
 12723 00a6 00BF     		.align	2
 12724              	.L925:
 12725 00a8 00000000 		.word	.LANCHOR0
 12726              		.cfi_endproc
 12727              	.LFE136:
 12729              		.section	.text.bno055_convert_float_gyro_x_dps,"ax",%progbits
 12730              		.align	1
 12731              		.global	bno055_convert_float_gyro_x_dps
 12732              		.syntax unified
 12733              		.thumb
 12734              		.thumb_func
 12735              		.fpu fpv4-sp-d16
 12737              	bno055_convert_float_gyro_x_dps:
 12738              	.LVL1436:
 12739              	.LFB53:
3452:Core/Src/bno055.c ****     /* Variable used to return value of
 12740              		.loc 1 3452 1 is_stmt 1 view -0
 12741              		.cfi_startproc
 12742              		@ args = 0, pretend = 0, frame = 8
 12743              		@ frame_needed = 0, uses_anonymous_args = 0
3452:Core/Src/bno055.c ****     /* Variable used to return value of
 12744              		.loc 1 3452 1 is_stmt 0 view .LVU3408
 12745 0000 30B5     		push	{r4, r5, lr}
 12746              	.LCFI421:
 12747              		.cfi_def_cfa_offset 12
 12748              		.cfi_offset 4, -12
 12749              		.cfi_offset 5, -8
 12750              		.cfi_offset 14, -4
ARM GAS  /tmp/ccWoU29M.s 			page 393


 12751 0002 83B0     		sub	sp, sp, #12
 12752              	.LCFI422:
 12753              		.cfi_def_cfa_offset 24
 12754 0004 0546     		mov	r5, r0
3455:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
 12755              		.loc 1 3455 5 is_stmt 1 view .LVU3409
 12756              	.LVL1437:
3456:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12757              		.loc 1 3456 5 view .LVU3410
3456:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12758              		.loc 1 3456 9 is_stmt 0 view .LVU3411
 12759 0006 0023     		movs	r3, #0
 12760 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3457:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 12761              		.loc 1 3457 5 is_stmt 1 view .LVU3412
 12762              	.LVL1438:
3458:Core/Src/bno055.c **** 
 12763              		.loc 1 3458 5 view .LVU3413
3458:Core/Src/bno055.c **** 
 12764              		.loc 1 3458 8 is_stmt 0 view .LVU3414
 12765 000c 8DF80530 		strb	r3, [sp, #5]
3462:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12766              		.loc 1 3462 5 is_stmt 1 view .LVU3415
3462:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12767              		.loc 1 3462 16 is_stmt 0 view .LVU3416
 12768 0010 0DF10500 		add	r0, sp, #5
 12769              	.LVL1439:
3462:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12770              		.loc 1 3462 16 view .LVU3417
 12771 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 12772              	.LVL1440:
 12773 0018 0446     		mov	r4, r0
 12774              	.LVL1441:
3463:Core/Src/bno055.c ****     {
 12775              		.loc 1 3463 5 is_stmt 1 view .LVU3418
3463:Core/Src/bno055.c ****     {
 12776              		.loc 1 3463 22 is_stmt 0 view .LVU3419
 12777 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3463:Core/Src/bno055.c ****     {
 12778              		.loc 1 3463 8 view .LVU3420
 12779 001e B3B9     		cbnz	r3, .L933
 12780              	.L928:
3467:Core/Src/bno055.c ****     {
 12781              		.loc 1 3467 5 is_stmt 1 view .LVU3421
3467:Core/Src/bno055.c ****     {
 12782              		.loc 1 3467 8 is_stmt 0 view .LVU3422
 12783 0020 E4B9     		cbnz	r4, .L930
3470:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12784              		.loc 1 3470 9 is_stmt 1 view .LVU3423
3470:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12785              		.loc 1 3470 21 is_stmt 0 view .LVU3424
 12786 0022 0DF10600 		add	r0, sp, #6
 12787 0026 FFF7FEFF 		bl	bno055_read_gyro_x
 12788              	.LVL1442:
3470:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12789              		.loc 1 3470 18 view .LVU3425
 12790 002a 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/ccWoU29M.s 			page 394


 12791              	.LVL1443:
3470:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12792              		.loc 1 3470 18 view .LVU3426
 12793 002e 64B2     		sxtb	r4, r4
 12794              	.LVL1444:
3471:Core/Src/bno055.c ****         {
 12795              		.loc 1 3471 9 is_stmt 1 view .LVU3427
3471:Core/Src/bno055.c ****         {
 12796              		.loc 1 3471 12 is_stmt 0 view .LVU3428
 12797 0030 BCB9     		cbnz	r4, .L931
3474:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12798              		.loc 1 3474 13 is_stmt 1 view .LVU3429
3474:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12799              		.loc 1 3474 45 is_stmt 0 view .LVU3430
 12800 0032 BDF90600 		ldrsh	r0, [sp, #6]
 12801 0036 FFF7FEFF 		bl	__aeabi_i2d
 12802              	.LVL1445:
 12803 003a 0022     		movs	r2, #0
 12804 003c 0A4B     		ldr	r3, .L934
 12805 003e FFF7FEFF 		bl	__aeabi_dmul
 12806              	.LVL1446:
3474:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12807              		.loc 1 3474 20 view .LVU3431
 12808 0042 FFF7FEFF 		bl	__aeabi_d2f
 12809              	.LVL1447:
3475:Core/Src/bno055.c ****         }
 12810              		.loc 1 3475 13 is_stmt 1 view .LVU3432
3475:Core/Src/bno055.c ****         }
 12811              		.loc 1 3475 23 is_stmt 0 view .LVU3433
 12812 0046 2860     		str	r0, [r5]	@ float
 12813              	.LVL1448:
 12814              	.L929:
3487:Core/Src/bno055.c **** }
 12815              		.loc 1 3487 5 is_stmt 1 view .LVU3434
3488:Core/Src/bno055.c **** 
 12816              		.loc 1 3488 1 is_stmt 0 view .LVU3435
 12817 0048 2046     		mov	r0, r4
 12818 004a 03B0     		add	sp, sp, #12
 12819              	.LCFI423:
 12820              		.cfi_remember_state
 12821              		.cfi_def_cfa_offset 12
 12822              		@ sp needed
 12823 004c 30BD     		pop	{r4, r5, pc}
 12824              	.LVL1449:
 12825              	.L933:
 12826              	.LCFI424:
 12827              		.cfi_restore_state
3465:Core/Src/bno055.c ****     }
 12828              		.loc 1 3465 9 is_stmt 1 view .LVU3436
3465:Core/Src/bno055.c ****     }
 12829              		.loc 1 3465 21 is_stmt 0 view .LVU3437
 12830 004e 0020     		movs	r0, #0
 12831 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 12832              	.LVL1450:
3465:Core/Src/bno055.c ****     }
 12833              		.loc 1 3465 18 view .LVU3438
 12834 0054 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/ccWoU29M.s 			page 395


 12835              	.LVL1451:
3465:Core/Src/bno055.c ****     }
 12836              		.loc 1 3465 18 view .LVU3439
 12837 0058 64B2     		sxtb	r4, r4
 12838              	.LVL1452:
3465:Core/Src/bno055.c ****     }
 12839              		.loc 1 3465 18 view .LVU3440
 12840 005a E1E7     		b	.L928
 12841              	.L930:
3484:Core/Src/bno055.c ****     }
 12842              		.loc 1 3484 18 view .LVU3441
 12843 005c 4FF0FF34 		mov	r4, #-1
 12844              	.LVL1453:
3484:Core/Src/bno055.c ****     }
 12845              		.loc 1 3484 18 view .LVU3442
 12846 0060 F2E7     		b	.L929
 12847              	.LVL1454:
 12848              	.L931:
3479:Core/Src/bno055.c ****         }
 12849              		.loc 1 3479 22 view .LVU3443
 12850 0062 4FF0FF34 		mov	r4, #-1
 12851              	.LVL1455:
3479:Core/Src/bno055.c ****         }
 12852              		.loc 1 3479 22 view .LVU3444
 12853 0066 EFE7     		b	.L929
 12854              	.L935:
 12855              		.align	2
 12856              	.L934:
 12857 0068 0000B03F 		.word	1068498944
 12858              		.cfi_endproc
 12859              	.LFE53:
 12861              		.section	.text.bno055_convert_float_gyro_x_rps,"ax",%progbits
 12862              		.align	1
 12863              		.global	bno055_convert_float_gyro_x_rps
 12864              		.syntax unified
 12865              		.thumb
 12866              		.thumb_func
 12867              		.fpu fpv4-sp-d16
 12869              	bno055_convert_float_gyro_x_rps:
 12870              	.LVL1456:
 12871              	.LFB54:
3504:Core/Src/bno055.c ****     /* Variable used to return value of
 12872              		.loc 1 3504 1 is_stmt 1 view -0
 12873              		.cfi_startproc
 12874              		@ args = 0, pretend = 0, frame = 8
 12875              		@ frame_needed = 0, uses_anonymous_args = 0
3504:Core/Src/bno055.c ****     /* Variable used to return value of
 12876              		.loc 1 3504 1 is_stmt 0 view .LVU3446
 12877 0000 30B5     		push	{r4, r5, lr}
 12878              	.LCFI425:
 12879              		.cfi_def_cfa_offset 12
 12880              		.cfi_offset 4, -12
 12881              		.cfi_offset 5, -8
 12882              		.cfi_offset 14, -4
 12883 0002 83B0     		sub	sp, sp, #12
 12884              	.LCFI426:
 12885              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccWoU29M.s 			page 396


 12886 0004 0546     		mov	r5, r0
3507:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
 12887              		.loc 1 3507 5 is_stmt 1 view .LVU3447
 12888              	.LVL1457:
3508:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12889              		.loc 1 3508 5 view .LVU3448
3508:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12890              		.loc 1 3508 9 is_stmt 0 view .LVU3449
 12891 0006 0023     		movs	r3, #0
 12892 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3509:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 12893              		.loc 1 3509 5 is_stmt 1 view .LVU3450
 12894              	.LVL1458:
3510:Core/Src/bno055.c **** 
 12895              		.loc 1 3510 5 view .LVU3451
3510:Core/Src/bno055.c **** 
 12896              		.loc 1 3510 8 is_stmt 0 view .LVU3452
 12897 000c 8DF80530 		strb	r3, [sp, #5]
3514:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 12898              		.loc 1 3514 5 is_stmt 1 view .LVU3453
3514:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 12899              		.loc 1 3514 16 is_stmt 0 view .LVU3454
 12900 0010 0DF10500 		add	r0, sp, #5
 12901              	.LVL1459:
3514:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 12902              		.loc 1 3514 16 view .LVU3455
 12903 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 12904              	.LVL1460:
 12905 0018 0446     		mov	r4, r0
 12906              	.LVL1461:
3515:Core/Src/bno055.c ****     {
 12907              		.loc 1 3515 5 is_stmt 1 view .LVU3456
3515:Core/Src/bno055.c ****     {
 12908              		.loc 1 3515 22 is_stmt 0 view .LVU3457
 12909 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3515:Core/Src/bno055.c ****     {
 12910              		.loc 1 3515 8 view .LVU3458
 12911 001e 012B     		cmp	r3, #1
 12912 0020 16D1     		bne	.L942
 12913              	.L937:
3519:Core/Src/bno055.c ****     {
 12914              		.loc 1 3519 5 is_stmt 1 view .LVU3459
3519:Core/Src/bno055.c ****     {
 12915              		.loc 1 3519 8 is_stmt 0 view .LVU3460
 12916 0022 E4B9     		cbnz	r4, .L939
3522:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12917              		.loc 1 3522 9 is_stmt 1 view .LVU3461
3522:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12918              		.loc 1 3522 21 is_stmt 0 view .LVU3462
 12919 0024 0DF10600 		add	r0, sp, #6
 12920 0028 FFF7FEFF 		bl	bno055_read_gyro_x
 12921              	.LVL1462:
3522:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12922              		.loc 1 3522 18 view .LVU3463
 12923 002c 54FA80F4 		uxtab	r4, r4, r0
 12924              	.LVL1463:
3522:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/ccWoU29M.s 			page 397


 12925              		.loc 1 3522 18 view .LVU3464
 12926 0030 64B2     		sxtb	r4, r4
 12927              	.LVL1464:
3523:Core/Src/bno055.c ****         {
 12928              		.loc 1 3523 9 is_stmt 1 view .LVU3465
3523:Core/Src/bno055.c ****         {
 12929              		.loc 1 3523 12 is_stmt 0 view .LVU3466
 12930 0032 BCB9     		cbnz	r4, .L940
3526:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12931              		.loc 1 3526 13 is_stmt 1 view .LVU3467
3526:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12932              		.loc 1 3526 45 is_stmt 0 view .LVU3468
 12933 0034 BDF90600 		ldrsh	r0, [sp, #6]
 12934 0038 FFF7FEFF 		bl	__aeabi_i2d
 12935              	.LVL1465:
 12936 003c 0022     		movs	r2, #0
 12937 003e 0B4B     		ldr	r3, .L943
 12938 0040 FFF7FEFF 		bl	__aeabi_ddiv
 12939              	.LVL1466:
3526:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12940              		.loc 1 3526 20 view .LVU3469
 12941 0044 FFF7FEFF 		bl	__aeabi_d2f
 12942              	.LVL1467:
3527:Core/Src/bno055.c ****         }
 12943              		.loc 1 3527 13 is_stmt 1 view .LVU3470
3527:Core/Src/bno055.c ****         }
 12944              		.loc 1 3527 23 is_stmt 0 view .LVU3471
 12945 0048 2860     		str	r0, [r5]	@ float
 12946              	.LVL1468:
 12947              	.L938:
3539:Core/Src/bno055.c **** }
 12948              		.loc 1 3539 5 is_stmt 1 view .LVU3472
3540:Core/Src/bno055.c **** 
 12949              		.loc 1 3540 1 is_stmt 0 view .LVU3473
 12950 004a 2046     		mov	r0, r4
 12951 004c 03B0     		add	sp, sp, #12
 12952              	.LCFI427:
 12953              		.cfi_remember_state
 12954              		.cfi_def_cfa_offset 12
 12955              		@ sp needed
 12956 004e 30BD     		pop	{r4, r5, pc}
 12957              	.LVL1469:
 12958              	.L942:
 12959              	.LCFI428:
 12960              		.cfi_restore_state
3517:Core/Src/bno055.c ****     }
 12961              		.loc 1 3517 9 is_stmt 1 view .LVU3474
3517:Core/Src/bno055.c ****     }
 12962              		.loc 1 3517 21 is_stmt 0 view .LVU3475
 12963 0050 0120     		movs	r0, #1
 12964 0052 FFF7FEFF 		bl	bno055_set_gyro_unit
 12965              	.LVL1470:
3517:Core/Src/bno055.c ****     }
 12966              		.loc 1 3517 18 view .LVU3476
 12967 0056 54FA80F4 		uxtab	r4, r4, r0
 12968              	.LVL1471:
3517:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 398


 12969              		.loc 1 3517 18 view .LVU3477
 12970 005a 64B2     		sxtb	r4, r4
 12971              	.LVL1472:
3517:Core/Src/bno055.c ****     }
 12972              		.loc 1 3517 18 view .LVU3478
 12973 005c E1E7     		b	.L937
 12974              	.L939:
3536:Core/Src/bno055.c ****     }
 12975              		.loc 1 3536 18 view .LVU3479
 12976 005e 4FF0FF34 		mov	r4, #-1
 12977              	.LVL1473:
3536:Core/Src/bno055.c ****     }
 12978              		.loc 1 3536 18 view .LVU3480
 12979 0062 F2E7     		b	.L938
 12980              	.LVL1474:
 12981              	.L940:
3531:Core/Src/bno055.c ****         }
 12982              		.loc 1 3531 22 view .LVU3481
 12983 0064 4FF0FF34 		mov	r4, #-1
 12984              	.LVL1475:
3531:Core/Src/bno055.c ****         }
 12985              		.loc 1 3531 22 view .LVU3482
 12986 0068 EFE7     		b	.L938
 12987              	.L944:
 12988 006a 00BF     		.align	2
 12989              	.L943:
 12990 006c 00208C40 		.word	1082925056
 12991              		.cfi_endproc
 12992              	.LFE54:
 12994              		.section	.text.bno055_convert_float_gyro_y_dps,"ax",%progbits
 12995              		.align	1
 12996              		.global	bno055_convert_float_gyro_y_dps
 12997              		.syntax unified
 12998              		.thumb
 12999              		.thumb_func
 13000              		.fpu fpv4-sp-d16
 13002              	bno055_convert_float_gyro_y_dps:
 13003              	.LVL1476:
 13004              	.LFB55:
3556:Core/Src/bno055.c ****     /* Variable used to return value of
 13005              		.loc 1 3556 1 is_stmt 1 view -0
 13006              		.cfi_startproc
 13007              		@ args = 0, pretend = 0, frame = 8
 13008              		@ frame_needed = 0, uses_anonymous_args = 0
3556:Core/Src/bno055.c ****     /* Variable used to return value of
 13009              		.loc 1 3556 1 is_stmt 0 view .LVU3484
 13010 0000 30B5     		push	{r4, r5, lr}
 13011              	.LCFI429:
 13012              		.cfi_def_cfa_offset 12
 13013              		.cfi_offset 4, -12
 13014              		.cfi_offset 5, -8
 13015              		.cfi_offset 14, -4
 13016 0002 83B0     		sub	sp, sp, #12
 13017              	.LCFI430:
 13018              		.cfi_def_cfa_offset 24
 13019 0004 0546     		mov	r5, r0
3559:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccWoU29M.s 			page 399


 13020              		.loc 1 3559 5 is_stmt 1 view .LVU3485
 13021              	.LVL1477:
3560:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 13022              		.loc 1 3560 5 view .LVU3486
3560:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 13023              		.loc 1 3560 9 is_stmt 0 view .LVU3487
 13024 0006 0023     		movs	r3, #0
 13025 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3561:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13026              		.loc 1 3561 5 is_stmt 1 view .LVU3488
 13027              	.LVL1478:
3562:Core/Src/bno055.c **** 
 13028              		.loc 1 3562 5 view .LVU3489
3562:Core/Src/bno055.c **** 
 13029              		.loc 1 3562 8 is_stmt 0 view .LVU3490
 13030 000c 8DF80530 		strb	r3, [sp, #5]
3566:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13031              		.loc 1 3566 5 is_stmt 1 view .LVU3491
3566:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13032              		.loc 1 3566 16 is_stmt 0 view .LVU3492
 13033 0010 0DF10500 		add	r0, sp, #5
 13034              	.LVL1479:
3566:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13035              		.loc 1 3566 16 view .LVU3493
 13036 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13037              	.LVL1480:
 13038 0018 0446     		mov	r4, r0
 13039              	.LVL1481:
3567:Core/Src/bno055.c ****     {
 13040              		.loc 1 3567 5 is_stmt 1 view .LVU3494
3567:Core/Src/bno055.c ****     {
 13041              		.loc 1 3567 22 is_stmt 0 view .LVU3495
 13042 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3567:Core/Src/bno055.c ****     {
 13043              		.loc 1 3567 8 view .LVU3496
 13044 001e B3B9     		cbnz	r3, .L951
 13045              	.L946:
3571:Core/Src/bno055.c ****     {
 13046              		.loc 1 3571 5 is_stmt 1 view .LVU3497
3571:Core/Src/bno055.c ****     {
 13047              		.loc 1 3571 8 is_stmt 0 view .LVU3498
 13048 0020 E4B9     		cbnz	r4, .L948
3574:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13049              		.loc 1 3574 9 is_stmt 1 view .LVU3499
3574:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13050              		.loc 1 3574 21 is_stmt 0 view .LVU3500
 13051 0022 0DF10600 		add	r0, sp, #6
 13052 0026 FFF7FEFF 		bl	bno055_read_gyro_y
 13053              	.LVL1482:
3574:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13054              		.loc 1 3574 18 view .LVU3501
 13055 002a 54FA80F4 		uxtab	r4, r4, r0
 13056              	.LVL1483:
3574:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13057              		.loc 1 3574 18 view .LVU3502
 13058 002e 64B2     		sxtb	r4, r4
 13059              	.LVL1484:
ARM GAS  /tmp/ccWoU29M.s 			page 400


3575:Core/Src/bno055.c ****         {
 13060              		.loc 1 3575 9 is_stmt 1 view .LVU3503
3575:Core/Src/bno055.c ****         {
 13061              		.loc 1 3575 12 is_stmt 0 view .LVU3504
 13062 0030 BCB9     		cbnz	r4, .L949
3578:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 13063              		.loc 1 3578 13 is_stmt 1 view .LVU3505
3578:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 13064              		.loc 1 3578 45 is_stmt 0 view .LVU3506
 13065 0032 BDF90600 		ldrsh	r0, [sp, #6]
 13066 0036 FFF7FEFF 		bl	__aeabi_i2d
 13067              	.LVL1485:
 13068 003a 0022     		movs	r2, #0
 13069 003c 0A4B     		ldr	r3, .L952
 13070 003e FFF7FEFF 		bl	__aeabi_dmul
 13071              	.LVL1486:
3578:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 13072              		.loc 1 3578 20 view .LVU3507
 13073 0042 FFF7FEFF 		bl	__aeabi_d2f
 13074              	.LVL1487:
3579:Core/Src/bno055.c ****         }
 13075              		.loc 1 3579 13 is_stmt 1 view .LVU3508
3579:Core/Src/bno055.c ****         }
 13076              		.loc 1 3579 23 is_stmt 0 view .LVU3509
 13077 0046 2860     		str	r0, [r5]	@ float
 13078              	.LVL1488:
 13079              	.L947:
3591:Core/Src/bno055.c **** }
 13080              		.loc 1 3591 5 is_stmt 1 view .LVU3510
3592:Core/Src/bno055.c **** 
 13081              		.loc 1 3592 1 is_stmt 0 view .LVU3511
 13082 0048 2046     		mov	r0, r4
 13083 004a 03B0     		add	sp, sp, #12
 13084              	.LCFI431:
 13085              		.cfi_remember_state
 13086              		.cfi_def_cfa_offset 12
 13087              		@ sp needed
 13088 004c 30BD     		pop	{r4, r5, pc}
 13089              	.LVL1489:
 13090              	.L951:
 13091              	.LCFI432:
 13092              		.cfi_restore_state
3569:Core/Src/bno055.c ****     }
 13093              		.loc 1 3569 9 is_stmt 1 view .LVU3512
3569:Core/Src/bno055.c ****     }
 13094              		.loc 1 3569 21 is_stmt 0 view .LVU3513
 13095 004e 0020     		movs	r0, #0
 13096 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 13097              	.LVL1490:
3569:Core/Src/bno055.c ****     }
 13098              		.loc 1 3569 18 view .LVU3514
 13099 0054 54FA80F4 		uxtab	r4, r4, r0
 13100              	.LVL1491:
3569:Core/Src/bno055.c ****     }
 13101              		.loc 1 3569 18 view .LVU3515
 13102 0058 64B2     		sxtb	r4, r4
 13103              	.LVL1492:
ARM GAS  /tmp/ccWoU29M.s 			page 401


3569:Core/Src/bno055.c ****     }
 13104              		.loc 1 3569 18 view .LVU3516
 13105 005a E1E7     		b	.L946
 13106              	.L948:
3588:Core/Src/bno055.c ****     }
 13107              		.loc 1 3588 18 view .LVU3517
 13108 005c 4FF0FF34 		mov	r4, #-1
 13109              	.LVL1493:
3588:Core/Src/bno055.c ****     }
 13110              		.loc 1 3588 18 view .LVU3518
 13111 0060 F2E7     		b	.L947
 13112              	.LVL1494:
 13113              	.L949:
3583:Core/Src/bno055.c ****         }
 13114              		.loc 1 3583 22 view .LVU3519
 13115 0062 4FF0FF34 		mov	r4, #-1
 13116              	.LVL1495:
3583:Core/Src/bno055.c ****         }
 13117              		.loc 1 3583 22 view .LVU3520
 13118 0066 EFE7     		b	.L947
 13119              	.L953:
 13120              		.align	2
 13121              	.L952:
 13122 0068 0000B03F 		.word	1068498944
 13123              		.cfi_endproc
 13124              	.LFE55:
 13126              		.section	.text.bno055_convert_float_gyro_y_rps,"ax",%progbits
 13127              		.align	1
 13128              		.global	bno055_convert_float_gyro_y_rps
 13129              		.syntax unified
 13130              		.thumb
 13131              		.thumb_func
 13132              		.fpu fpv4-sp-d16
 13134              	bno055_convert_float_gyro_y_rps:
 13135              	.LVL1496:
 13136              	.LFB56:
3609:Core/Src/bno055.c ****     /* Variable used to return value of
 13137              		.loc 1 3609 1 is_stmt 1 view -0
 13138              		.cfi_startproc
 13139              		@ args = 0, pretend = 0, frame = 8
 13140              		@ frame_needed = 0, uses_anonymous_args = 0
3609:Core/Src/bno055.c ****     /* Variable used to return value of
 13141              		.loc 1 3609 1 is_stmt 0 view .LVU3522
 13142 0000 30B5     		push	{r4, r5, lr}
 13143              	.LCFI433:
 13144              		.cfi_def_cfa_offset 12
 13145              		.cfi_offset 4, -12
 13146              		.cfi_offset 5, -8
 13147              		.cfi_offset 14, -4
 13148 0002 83B0     		sub	sp, sp, #12
 13149              	.LCFI434:
 13150              		.cfi_def_cfa_offset 24
 13151 0004 0546     		mov	r5, r0
3612:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
 13152              		.loc 1 3612 5 is_stmt 1 view .LVU3523
 13153              	.LVL1497:
3613:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccWoU29M.s 			page 402


 13154              		.loc 1 3613 5 view .LVU3524
3613:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 13155              		.loc 1 3613 9 is_stmt 0 view .LVU3525
 13156 0006 0023     		movs	r3, #0
 13157 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3614:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13158              		.loc 1 3614 5 is_stmt 1 view .LVU3526
 13159              	.LVL1498:
3615:Core/Src/bno055.c **** 
 13160              		.loc 1 3615 5 view .LVU3527
3615:Core/Src/bno055.c **** 
 13161              		.loc 1 3615 8 is_stmt 0 view .LVU3528
 13162 000c 8DF80530 		strb	r3, [sp, #5]
3619:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13163              		.loc 1 3619 5 is_stmt 1 view .LVU3529
3619:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13164              		.loc 1 3619 16 is_stmt 0 view .LVU3530
 13165 0010 0DF10500 		add	r0, sp, #5
 13166              	.LVL1499:
3619:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13167              		.loc 1 3619 16 view .LVU3531
 13168 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13169              	.LVL1500:
 13170 0018 0446     		mov	r4, r0
 13171              	.LVL1501:
3620:Core/Src/bno055.c ****     {
 13172              		.loc 1 3620 5 is_stmt 1 view .LVU3532
3620:Core/Src/bno055.c ****     {
 13173              		.loc 1 3620 22 is_stmt 0 view .LVU3533
 13174 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3620:Core/Src/bno055.c ****     {
 13175              		.loc 1 3620 8 view .LVU3534
 13176 001e 012B     		cmp	r3, #1
 13177 0020 16D1     		bne	.L960
 13178              	.L955:
3624:Core/Src/bno055.c ****     {
 13179              		.loc 1 3624 5 is_stmt 1 view .LVU3535
3624:Core/Src/bno055.c ****     {
 13180              		.loc 1 3624 8 is_stmt 0 view .LVU3536
 13181 0022 E4B9     		cbnz	r4, .L957
3627:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13182              		.loc 1 3627 9 is_stmt 1 view .LVU3537
3627:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13183              		.loc 1 3627 21 is_stmt 0 view .LVU3538
 13184 0024 0DF10600 		add	r0, sp, #6
 13185 0028 FFF7FEFF 		bl	bno055_read_gyro_y
 13186              	.LVL1502:
3627:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13187              		.loc 1 3627 18 view .LVU3539
 13188 002c 54FA80F4 		uxtab	r4, r4, r0
 13189              	.LVL1503:
3627:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13190              		.loc 1 3627 18 view .LVU3540
 13191 0030 64B2     		sxtb	r4, r4
 13192              	.LVL1504:
3628:Core/Src/bno055.c ****         {
 13193              		.loc 1 3628 9 is_stmt 1 view .LVU3541
ARM GAS  /tmp/ccWoU29M.s 			page 403


3628:Core/Src/bno055.c ****         {
 13194              		.loc 1 3628 12 is_stmt 0 view .LVU3542
 13195 0032 BCB9     		cbnz	r4, .L958
3631:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 13196              		.loc 1 3631 13 is_stmt 1 view .LVU3543
3631:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 13197              		.loc 1 3631 45 is_stmt 0 view .LVU3544
 13198 0034 BDF90600 		ldrsh	r0, [sp, #6]
 13199 0038 FFF7FEFF 		bl	__aeabi_i2d
 13200              	.LVL1505:
 13201 003c 0022     		movs	r2, #0
 13202 003e 0B4B     		ldr	r3, .L961
 13203 0040 FFF7FEFF 		bl	__aeabi_ddiv
 13204              	.LVL1506:
3631:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 13205              		.loc 1 3631 20 view .LVU3545
 13206 0044 FFF7FEFF 		bl	__aeabi_d2f
 13207              	.LVL1507:
3632:Core/Src/bno055.c ****         }
 13208              		.loc 1 3632 13 is_stmt 1 view .LVU3546
3632:Core/Src/bno055.c ****         }
 13209              		.loc 1 3632 23 is_stmt 0 view .LVU3547
 13210 0048 2860     		str	r0, [r5]	@ float
 13211              	.LVL1508:
 13212              	.L956:
3644:Core/Src/bno055.c **** }
 13213              		.loc 1 3644 5 is_stmt 1 view .LVU3548
3645:Core/Src/bno055.c **** 
 13214              		.loc 1 3645 1 is_stmt 0 view .LVU3549
 13215 004a 2046     		mov	r0, r4
 13216 004c 03B0     		add	sp, sp, #12
 13217              	.LCFI435:
 13218              		.cfi_remember_state
 13219              		.cfi_def_cfa_offset 12
 13220              		@ sp needed
 13221 004e 30BD     		pop	{r4, r5, pc}
 13222              	.LVL1509:
 13223              	.L960:
 13224              	.LCFI436:
 13225              		.cfi_restore_state
3622:Core/Src/bno055.c ****     }
 13226              		.loc 1 3622 9 is_stmt 1 view .LVU3550
3622:Core/Src/bno055.c ****     }
 13227              		.loc 1 3622 21 is_stmt 0 view .LVU3551
 13228 0050 0120     		movs	r0, #1
 13229 0052 FFF7FEFF 		bl	bno055_set_gyro_unit
 13230              	.LVL1510:
3622:Core/Src/bno055.c ****     }
 13231              		.loc 1 3622 18 view .LVU3552
 13232 0056 54FA80F4 		uxtab	r4, r4, r0
 13233              	.LVL1511:
3622:Core/Src/bno055.c ****     }
 13234              		.loc 1 3622 18 view .LVU3553
 13235 005a 64B2     		sxtb	r4, r4
 13236              	.LVL1512:
3622:Core/Src/bno055.c ****     }
 13237              		.loc 1 3622 18 view .LVU3554
ARM GAS  /tmp/ccWoU29M.s 			page 404


 13238 005c E1E7     		b	.L955
 13239              	.L957:
3641:Core/Src/bno055.c ****     }
 13240              		.loc 1 3641 18 view .LVU3555
 13241 005e 4FF0FF34 		mov	r4, #-1
 13242              	.LVL1513:
3641:Core/Src/bno055.c ****     }
 13243              		.loc 1 3641 18 view .LVU3556
 13244 0062 F2E7     		b	.L956
 13245              	.LVL1514:
 13246              	.L958:
3636:Core/Src/bno055.c ****         }
 13247              		.loc 1 3636 22 view .LVU3557
 13248 0064 4FF0FF34 		mov	r4, #-1
 13249              	.LVL1515:
3636:Core/Src/bno055.c ****         }
 13250              		.loc 1 3636 22 view .LVU3558
 13251 0068 EFE7     		b	.L956
 13252              	.L962:
 13253 006a 00BF     		.align	2
 13254              	.L961:
 13255 006c 00208C40 		.word	1082925056
 13256              		.cfi_endproc
 13257              	.LFE56:
 13259              		.section	.text.bno055_convert_float_gyro_z_dps,"ax",%progbits
 13260              		.align	1
 13261              		.global	bno055_convert_float_gyro_z_dps
 13262              		.syntax unified
 13263              		.thumb
 13264              		.thumb_func
 13265              		.fpu fpv4-sp-d16
 13267              	bno055_convert_float_gyro_z_dps:
 13268              	.LVL1516:
 13269              	.LFB57:
3661:Core/Src/bno055.c ****     /* Variable used to return value of
 13270              		.loc 1 3661 1 is_stmt 1 view -0
 13271              		.cfi_startproc
 13272              		@ args = 0, pretend = 0, frame = 8
 13273              		@ frame_needed = 0, uses_anonymous_args = 0
3661:Core/Src/bno055.c ****     /* Variable used to return value of
 13274              		.loc 1 3661 1 is_stmt 0 view .LVU3560
 13275 0000 30B5     		push	{r4, r5, lr}
 13276              	.LCFI437:
 13277              		.cfi_def_cfa_offset 12
 13278              		.cfi_offset 4, -12
 13279              		.cfi_offset 5, -8
 13280              		.cfi_offset 14, -4
 13281 0002 83B0     		sub	sp, sp, #12
 13282              	.LCFI438:
 13283              		.cfi_def_cfa_offset 24
 13284 0004 0546     		mov	r5, r0
3664:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
 13285              		.loc 1 3664 5 is_stmt 1 view .LVU3561
 13286              	.LVL1517:
3665:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 13287              		.loc 1 3665 5 view .LVU3562
3665:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccWoU29M.s 			page 405


 13288              		.loc 1 3665 9 is_stmt 0 view .LVU3563
 13289 0006 0023     		movs	r3, #0
 13290 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3666:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13291              		.loc 1 3666 5 is_stmt 1 view .LVU3564
 13292              	.LVL1518:
3667:Core/Src/bno055.c **** 
 13293              		.loc 1 3667 5 view .LVU3565
3667:Core/Src/bno055.c **** 
 13294              		.loc 1 3667 8 is_stmt 0 view .LVU3566
 13295 000c 8DF80530 		strb	r3, [sp, #5]
3671:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13296              		.loc 1 3671 5 is_stmt 1 view .LVU3567
3671:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13297              		.loc 1 3671 16 is_stmt 0 view .LVU3568
 13298 0010 0DF10500 		add	r0, sp, #5
 13299              	.LVL1519:
3671:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13300              		.loc 1 3671 16 view .LVU3569
 13301 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13302              	.LVL1520:
 13303 0018 0446     		mov	r4, r0
 13304              	.LVL1521:
3672:Core/Src/bno055.c ****     {
 13305              		.loc 1 3672 5 is_stmt 1 view .LVU3570
3672:Core/Src/bno055.c ****     {
 13306              		.loc 1 3672 22 is_stmt 0 view .LVU3571
 13307 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3672:Core/Src/bno055.c ****     {
 13308              		.loc 1 3672 8 view .LVU3572
 13309 001e B3B9     		cbnz	r3, .L969
 13310              	.L964:
3676:Core/Src/bno055.c ****     {
 13311              		.loc 1 3676 5 is_stmt 1 view .LVU3573
3676:Core/Src/bno055.c ****     {
 13312              		.loc 1 3676 8 is_stmt 0 view .LVU3574
 13313 0020 E4B9     		cbnz	r4, .L966
3679:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13314              		.loc 1 3679 9 is_stmt 1 view .LVU3575
3679:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13315              		.loc 1 3679 21 is_stmt 0 view .LVU3576
 13316 0022 0DF10600 		add	r0, sp, #6
 13317 0026 FFF7FEFF 		bl	bno055_read_gyro_z
 13318              	.LVL1522:
3679:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13319              		.loc 1 3679 18 view .LVU3577
 13320 002a 54FA80F4 		uxtab	r4, r4, r0
 13321              	.LVL1523:
3679:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13322              		.loc 1 3679 18 view .LVU3578
 13323 002e 64B2     		sxtb	r4, r4
 13324              	.LVL1524:
3680:Core/Src/bno055.c ****         {
 13325              		.loc 1 3680 9 is_stmt 1 view .LVU3579
3680:Core/Src/bno055.c ****         {
 13326              		.loc 1 3680 12 is_stmt 0 view .LVU3580
 13327 0030 BCB9     		cbnz	r4, .L967
ARM GAS  /tmp/ccWoU29M.s 			page 406


3683:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 13328              		.loc 1 3683 13 is_stmt 1 view .LVU3581
3683:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 13329              		.loc 1 3683 45 is_stmt 0 view .LVU3582
 13330 0032 BDF90600 		ldrsh	r0, [sp, #6]
 13331 0036 FFF7FEFF 		bl	__aeabi_i2d
 13332              	.LVL1525:
 13333 003a 0022     		movs	r2, #0
 13334 003c 0A4B     		ldr	r3, .L970
 13335 003e FFF7FEFF 		bl	__aeabi_dmul
 13336              	.LVL1526:
3683:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 13337              		.loc 1 3683 20 view .LVU3583
 13338 0042 FFF7FEFF 		bl	__aeabi_d2f
 13339              	.LVL1527:
3684:Core/Src/bno055.c ****         }
 13340              		.loc 1 3684 13 is_stmt 1 view .LVU3584
3684:Core/Src/bno055.c ****         }
 13341              		.loc 1 3684 23 is_stmt 0 view .LVU3585
 13342 0046 2860     		str	r0, [r5]	@ float
 13343              	.LVL1528:
 13344              	.L965:
3696:Core/Src/bno055.c **** }
 13345              		.loc 1 3696 5 is_stmt 1 view .LVU3586
3697:Core/Src/bno055.c **** 
 13346              		.loc 1 3697 1 is_stmt 0 view .LVU3587
 13347 0048 2046     		mov	r0, r4
 13348 004a 03B0     		add	sp, sp, #12
 13349              	.LCFI439:
 13350              		.cfi_remember_state
 13351              		.cfi_def_cfa_offset 12
 13352              		@ sp needed
 13353 004c 30BD     		pop	{r4, r5, pc}
 13354              	.LVL1529:
 13355              	.L969:
 13356              	.LCFI440:
 13357              		.cfi_restore_state
3674:Core/Src/bno055.c ****     }
 13358              		.loc 1 3674 9 is_stmt 1 view .LVU3588
3674:Core/Src/bno055.c ****     }
 13359              		.loc 1 3674 21 is_stmt 0 view .LVU3589
 13360 004e 0020     		movs	r0, #0
 13361 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 13362              	.LVL1530:
3674:Core/Src/bno055.c ****     }
 13363              		.loc 1 3674 18 view .LVU3590
 13364 0054 54FA80F4 		uxtab	r4, r4, r0
 13365              	.LVL1531:
3674:Core/Src/bno055.c ****     }
 13366              		.loc 1 3674 18 view .LVU3591
 13367 0058 64B2     		sxtb	r4, r4
 13368              	.LVL1532:
3674:Core/Src/bno055.c ****     }
 13369              		.loc 1 3674 18 view .LVU3592
 13370 005a E1E7     		b	.L964
 13371              	.L966:
3693:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 407


 13372              		.loc 1 3693 18 view .LVU3593
 13373 005c 4FF0FF34 		mov	r4, #-1
 13374              	.LVL1533:
3693:Core/Src/bno055.c ****     }
 13375              		.loc 1 3693 18 view .LVU3594
 13376 0060 F2E7     		b	.L965
 13377              	.LVL1534:
 13378              	.L967:
3688:Core/Src/bno055.c ****         }
 13379              		.loc 1 3688 22 view .LVU3595
 13380 0062 4FF0FF34 		mov	r4, #-1
 13381              	.LVL1535:
3688:Core/Src/bno055.c ****         }
 13382              		.loc 1 3688 22 view .LVU3596
 13383 0066 EFE7     		b	.L965
 13384              	.L971:
 13385              		.align	2
 13386              	.L970:
 13387 0068 0000B03F 		.word	1068498944
 13388              		.cfi_endproc
 13389              	.LFE57:
 13391              		.section	.text.bno055_convert_float_gyro_z_rps,"ax",%progbits
 13392              		.align	1
 13393              		.global	bno055_convert_float_gyro_z_rps
 13394              		.syntax unified
 13395              		.thumb
 13396              		.thumb_func
 13397              		.fpu fpv4-sp-d16
 13399              	bno055_convert_float_gyro_z_rps:
 13400              	.LVL1536:
 13401              	.LFB58:
3713:Core/Src/bno055.c ****     /* Variable used to return value of
 13402              		.loc 1 3713 1 is_stmt 1 view -0
 13403              		.cfi_startproc
 13404              		@ args = 0, pretend = 0, frame = 8
 13405              		@ frame_needed = 0, uses_anonymous_args = 0
3713:Core/Src/bno055.c ****     /* Variable used to return value of
 13406              		.loc 1 3713 1 is_stmt 0 view .LVU3598
 13407 0000 30B5     		push	{r4, r5, lr}
 13408              	.LCFI441:
 13409              		.cfi_def_cfa_offset 12
 13410              		.cfi_offset 4, -12
 13411              		.cfi_offset 5, -8
 13412              		.cfi_offset 14, -4
 13413 0002 83B0     		sub	sp, sp, #12
 13414              	.LCFI442:
 13415              		.cfi_def_cfa_offset 24
 13416 0004 0546     		mov	r5, r0
3716:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
 13417              		.loc 1 3716 5 is_stmt 1 view .LVU3599
 13418              	.LVL1537:
3717:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 13419              		.loc 1 3717 5 view .LVU3600
3717:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 13420              		.loc 1 3717 9 is_stmt 0 view .LVU3601
 13421 0006 0023     		movs	r3, #0
 13422 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
ARM GAS  /tmp/ccWoU29M.s 			page 408


3718:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13423              		.loc 1 3718 5 is_stmt 1 view .LVU3602
 13424              	.LVL1538:
3719:Core/Src/bno055.c **** 
 13425              		.loc 1 3719 5 view .LVU3603
3719:Core/Src/bno055.c **** 
 13426              		.loc 1 3719 8 is_stmt 0 view .LVU3604
 13427 000c 8DF80530 		strb	r3, [sp, #5]
3723:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13428              		.loc 1 3723 5 is_stmt 1 view .LVU3605
3723:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13429              		.loc 1 3723 16 is_stmt 0 view .LVU3606
 13430 0010 0DF10500 		add	r0, sp, #5
 13431              	.LVL1539:
3723:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13432              		.loc 1 3723 16 view .LVU3607
 13433 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13434              	.LVL1540:
 13435 0018 0446     		mov	r4, r0
 13436              	.LVL1541:
3724:Core/Src/bno055.c ****     {
 13437              		.loc 1 3724 5 is_stmt 1 view .LVU3608
3724:Core/Src/bno055.c ****     {
 13438              		.loc 1 3724 22 is_stmt 0 view .LVU3609
 13439 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3724:Core/Src/bno055.c ****     {
 13440              		.loc 1 3724 8 view .LVU3610
 13441 001e 012B     		cmp	r3, #1
 13442 0020 16D1     		bne	.L978
 13443              	.L973:
3728:Core/Src/bno055.c ****     {
 13444              		.loc 1 3728 5 is_stmt 1 view .LVU3611
3728:Core/Src/bno055.c ****     {
 13445              		.loc 1 3728 8 is_stmt 0 view .LVU3612
 13446 0022 E4B9     		cbnz	r4, .L975
3731:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13447              		.loc 1 3731 9 is_stmt 1 view .LVU3613
3731:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13448              		.loc 1 3731 21 is_stmt 0 view .LVU3614
 13449 0024 0DF10600 		add	r0, sp, #6
 13450 0028 FFF7FEFF 		bl	bno055_read_gyro_z
 13451              	.LVL1542:
3731:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13452              		.loc 1 3731 18 view .LVU3615
 13453 002c 54FA80F4 		uxtab	r4, r4, r0
 13454              	.LVL1543:
3731:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13455              		.loc 1 3731 18 view .LVU3616
 13456 0030 64B2     		sxtb	r4, r4
 13457              	.LVL1544:
3732:Core/Src/bno055.c ****         {
 13458              		.loc 1 3732 9 is_stmt 1 view .LVU3617
3732:Core/Src/bno055.c ****         {
 13459              		.loc 1 3732 12 is_stmt 0 view .LVU3618
 13460 0032 BCB9     		cbnz	r4, .L976
3735:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 13461              		.loc 1 3735 13 is_stmt 1 view .LVU3619
ARM GAS  /tmp/ccWoU29M.s 			page 409


3735:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 13462              		.loc 1 3735 45 is_stmt 0 view .LVU3620
 13463 0034 BDF90600 		ldrsh	r0, [sp, #6]
 13464 0038 FFF7FEFF 		bl	__aeabi_i2d
 13465              	.LVL1545:
 13466 003c 0022     		movs	r2, #0
 13467 003e 0B4B     		ldr	r3, .L979
 13468 0040 FFF7FEFF 		bl	__aeabi_ddiv
 13469              	.LVL1546:
3735:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 13470              		.loc 1 3735 20 view .LVU3621
 13471 0044 FFF7FEFF 		bl	__aeabi_d2f
 13472              	.LVL1547:
3736:Core/Src/bno055.c ****         }
 13473              		.loc 1 3736 13 is_stmt 1 view .LVU3622
3736:Core/Src/bno055.c ****         }
 13474              		.loc 1 3736 23 is_stmt 0 view .LVU3623
 13475 0048 2860     		str	r0, [r5]	@ float
 13476              	.LVL1548:
 13477              	.L974:
3748:Core/Src/bno055.c **** }
 13478              		.loc 1 3748 5 is_stmt 1 view .LVU3624
3749:Core/Src/bno055.c **** 
 13479              		.loc 1 3749 1 is_stmt 0 view .LVU3625
 13480 004a 2046     		mov	r0, r4
 13481 004c 03B0     		add	sp, sp, #12
 13482              	.LCFI443:
 13483              		.cfi_remember_state
 13484              		.cfi_def_cfa_offset 12
 13485              		@ sp needed
 13486 004e 30BD     		pop	{r4, r5, pc}
 13487              	.LVL1549:
 13488              	.L978:
 13489              	.LCFI444:
 13490              		.cfi_restore_state
3726:Core/Src/bno055.c ****     }
 13491              		.loc 1 3726 9 is_stmt 1 view .LVU3626
3726:Core/Src/bno055.c ****     }
 13492              		.loc 1 3726 21 is_stmt 0 view .LVU3627
 13493 0050 0120     		movs	r0, #1
 13494 0052 FFF7FEFF 		bl	bno055_set_gyro_unit
 13495              	.LVL1550:
3726:Core/Src/bno055.c ****     }
 13496              		.loc 1 3726 18 view .LVU3628
 13497 0056 54FA80F4 		uxtab	r4, r4, r0
 13498              	.LVL1551:
3726:Core/Src/bno055.c ****     }
 13499              		.loc 1 3726 18 view .LVU3629
 13500 005a 64B2     		sxtb	r4, r4
 13501              	.LVL1552:
3726:Core/Src/bno055.c ****     }
 13502              		.loc 1 3726 18 view .LVU3630
 13503 005c E1E7     		b	.L973
 13504              	.L975:
3745:Core/Src/bno055.c ****     }
 13505              		.loc 1 3745 18 view .LVU3631
 13506 005e 4FF0FF34 		mov	r4, #-1
ARM GAS  /tmp/ccWoU29M.s 			page 410


 13507              	.LVL1553:
3745:Core/Src/bno055.c ****     }
 13508              		.loc 1 3745 18 view .LVU3632
 13509 0062 F2E7     		b	.L974
 13510              	.LVL1554:
 13511              	.L976:
3740:Core/Src/bno055.c ****         }
 13512              		.loc 1 3740 22 view .LVU3633
 13513 0064 4FF0FF34 		mov	r4, #-1
 13514              	.LVL1555:
3740:Core/Src/bno055.c ****         }
 13515              		.loc 1 3740 22 view .LVU3634
 13516 0068 EFE7     		b	.L974
 13517              	.L980:
 13518 006a 00BF     		.align	2
 13519              	.L979:
 13520 006c 00208C40 		.word	1082925056
 13521              		.cfi_endproc
 13522              	.LFE58:
 13524              		.section	.text.bno055_convert_float_gyro_xyz_dps,"ax",%progbits
 13525              		.align	1
 13526              		.global	bno055_convert_float_gyro_xyz_dps
 13527              		.syntax unified
 13528              		.thumb
 13529              		.thumb_func
 13530              		.fpu fpv4-sp-d16
 13532              	bno055_convert_float_gyro_xyz_dps:
 13533              	.LVL1556:
 13534              	.LFB59:
3771:Core/Src/bno055.c ****     /* Variable used to return value of
 13535              		.loc 1 3771 1 is_stmt 1 view -0
 13536              		.cfi_startproc
 13537              		@ args = 0, pretend = 0, frame = 16
 13538              		@ frame_needed = 0, uses_anonymous_args = 0
3771:Core/Src/bno055.c ****     /* Variable used to return value of
 13539              		.loc 1 3771 1 is_stmt 0 view .LVU3636
 13540 0000 30B5     		push	{r4, r5, lr}
 13541              	.LCFI445:
 13542              		.cfi_def_cfa_offset 12
 13543              		.cfi_offset 4, -12
 13544              		.cfi_offset 5, -8
 13545              		.cfi_offset 14, -4
 13546 0002 85B0     		sub	sp, sp, #20
 13547              	.LCFI446:
 13548              		.cfi_def_cfa_offset 32
 13549 0004 0546     		mov	r5, r0
3774:Core/Src/bno055.c ****     struct bno055_gyro_t gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 13550              		.loc 1 3774 5 is_stmt 1 view .LVU3637
 13551              	.LVL1557:
3775:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13552              		.loc 1 3775 5 view .LVU3638
3775:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13553              		.loc 1 3775 26 is_stmt 0 view .LVU3639
 13554 0006 0023     		movs	r3, #0
 13555 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 13556 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 13557 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
ARM GAS  /tmp/ccWoU29M.s 			page 411


3776:Core/Src/bno055.c **** 
 13558              		.loc 1 3776 5 is_stmt 1 view .LVU3640
3776:Core/Src/bno055.c **** 
 13559              		.loc 1 3776 8 is_stmt 0 view .LVU3641
 13560 0014 8DF80730 		strb	r3, [sp, #7]
3780:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13561              		.loc 1 3780 5 is_stmt 1 view .LVU3642
3780:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13562              		.loc 1 3780 16 is_stmt 0 view .LVU3643
 13563 0018 0DF10700 		add	r0, sp, #7
 13564              	.LVL1558:
3780:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13565              		.loc 1 3780 16 view .LVU3644
 13566 001c FFF7FEFF 		bl	bno055_get_gyro_unit
 13567              	.LVL1559:
 13568 0020 0446     		mov	r4, r0
 13569              	.LVL1560:
3781:Core/Src/bno055.c ****     {
 13570              		.loc 1 3781 5 is_stmt 1 view .LVU3645
3781:Core/Src/bno055.c ****     {
 13571              		.loc 1 3781 22 is_stmt 0 view .LVU3646
 13572 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
3781:Core/Src/bno055.c ****     {
 13573              		.loc 1 3781 8 view .LVU3647
 13574 0026 5BBB     		cbnz	r3, .L987
 13575              	.L982:
3785:Core/Src/bno055.c ****     {
 13576              		.loc 1 3785 5 is_stmt 1 view .LVU3648
3785:Core/Src/bno055.c ****     {
 13577              		.loc 1 3785 8 is_stmt 0 view .LVU3649
 13578 0028 8CBB     		cbnz	r4, .L984
3788:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13579              		.loc 1 3788 9 is_stmt 1 view .LVU3650
3788:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13580              		.loc 1 3788 21 is_stmt 0 view .LVU3651
 13581 002a 02A8     		add	r0, sp, #8
 13582 002c FFF7FEFF 		bl	bno055_read_gyro_xyz
 13583              	.LVL1561:
3788:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13584              		.loc 1 3788 18 view .LVU3652
 13585 0030 54FA80F4 		uxtab	r4, r4, r0
 13586              	.LVL1562:
3788:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13587              		.loc 1 3788 18 view .LVU3653
 13588 0034 64B2     		sxtb	r4, r4
 13589              	.LVL1563:
3789:Core/Src/bno055.c ****         {
 13590              		.loc 1 3789 9 is_stmt 1 view .LVU3654
3789:Core/Src/bno055.c ****         {
 13591              		.loc 1 3789 12 is_stmt 0 view .LVU3655
 13592 0036 6CBB     		cbnz	r4, .L985
3792:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 13593              		.loc 1 3792 13 is_stmt 1 view .LVU3656
3792:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 13594              		.loc 1 3792 51 is_stmt 0 view .LVU3657
 13595 0038 BDF90800 		ldrsh	r0, [sp, #8]
 13596 003c FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/ccWoU29M.s 			page 412


 13597              	.LVL1564:
 13598 0040 0022     		movs	r2, #0
 13599 0042 164B     		ldr	r3, .L988
 13600 0044 FFF7FEFF 		bl	__aeabi_dmul
 13601              	.LVL1565:
3792:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 13602              		.loc 1 3792 32 view .LVU3658
 13603 0048 FFF7FEFF 		bl	__aeabi_d2f
 13604              	.LVL1566:
3792:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 13605              		.loc 1 3792 30 view .LVU3659
 13606 004c 2860     		str	r0, [r5]	@ float
3793:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 13607              		.loc 1 3793 13 is_stmt 1 view .LVU3660
3793:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 13608              		.loc 1 3793 51 is_stmt 0 view .LVU3661
 13609 004e BDF90A00 		ldrsh	r0, [sp, #10]
 13610 0052 FFF7FEFF 		bl	__aeabi_i2d
 13611              	.LVL1567:
 13612 0056 0022     		movs	r2, #0
 13613 0058 104B     		ldr	r3, .L988
 13614 005a FFF7FEFF 		bl	__aeabi_dmul
 13615              	.LVL1568:
3793:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 13616              		.loc 1 3793 32 view .LVU3662
 13617 005e FFF7FEFF 		bl	__aeabi_d2f
 13618              	.LVL1569:
3793:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 13619              		.loc 1 3793 30 view .LVU3663
 13620 0062 6860     		str	r0, [r5, #4]	@ float
3794:Core/Src/bno055.c ****         }
 13621              		.loc 1 3794 13 is_stmt 1 view .LVU3664
3794:Core/Src/bno055.c ****         }
 13622              		.loc 1 3794 51 is_stmt 0 view .LVU3665
 13623 0064 BDF90C00 		ldrsh	r0, [sp, #12]
 13624 0068 FFF7FEFF 		bl	__aeabi_i2d
 13625              	.LVL1570:
 13626 006c 0022     		movs	r2, #0
 13627 006e 0B4B     		ldr	r3, .L988
 13628 0070 FFF7FEFF 		bl	__aeabi_dmul
 13629              	.LVL1571:
3794:Core/Src/bno055.c ****         }
 13630              		.loc 1 3794 32 view .LVU3666
 13631 0074 FFF7FEFF 		bl	__aeabi_d2f
 13632              	.LVL1572:
3794:Core/Src/bno055.c ****         }
 13633              		.loc 1 3794 30 view .LVU3667
 13634 0078 A860     		str	r0, [r5, #8]	@ float
 13635              	.LVL1573:
 13636              	.L983:
3806:Core/Src/bno055.c **** }
 13637              		.loc 1 3806 5 is_stmt 1 view .LVU3668
3807:Core/Src/bno055.c **** 
 13638              		.loc 1 3807 1 is_stmt 0 view .LVU3669
 13639 007a 2046     		mov	r0, r4
 13640 007c 05B0     		add	sp, sp, #20
 13641              	.LCFI447:
ARM GAS  /tmp/ccWoU29M.s 			page 413


 13642              		.cfi_remember_state
 13643              		.cfi_def_cfa_offset 12
 13644              		@ sp needed
 13645 007e 30BD     		pop	{r4, r5, pc}
 13646              	.LVL1574:
 13647              	.L987:
 13648              	.LCFI448:
 13649              		.cfi_restore_state
3783:Core/Src/bno055.c ****     }
 13650              		.loc 1 3783 9 is_stmt 1 view .LVU3670
3783:Core/Src/bno055.c ****     }
 13651              		.loc 1 3783 21 is_stmt 0 view .LVU3671
 13652 0080 0020     		movs	r0, #0
 13653 0082 FFF7FEFF 		bl	bno055_set_gyro_unit
 13654              	.LVL1575:
3783:Core/Src/bno055.c ****     }
 13655              		.loc 1 3783 18 view .LVU3672
 13656 0086 54FA80F4 		uxtab	r4, r4, r0
 13657              	.LVL1576:
3783:Core/Src/bno055.c ****     }
 13658              		.loc 1 3783 18 view .LVU3673
 13659 008a 64B2     		sxtb	r4, r4
 13660              	.LVL1577:
3783:Core/Src/bno055.c ****     }
 13661              		.loc 1 3783 18 view .LVU3674
 13662 008c CCE7     		b	.L982
 13663              	.L984:
3803:Core/Src/bno055.c ****     }
 13664              		.loc 1 3803 18 view .LVU3675
 13665 008e 4FF0FF34 		mov	r4, #-1
 13666              	.LVL1578:
3803:Core/Src/bno055.c ****     }
 13667              		.loc 1 3803 18 view .LVU3676
 13668 0092 F2E7     		b	.L983
 13669              	.LVL1579:
 13670              	.L985:
3798:Core/Src/bno055.c ****         }
 13671              		.loc 1 3798 22 view .LVU3677
 13672 0094 4FF0FF34 		mov	r4, #-1
 13673              	.LVL1580:
3798:Core/Src/bno055.c ****         }
 13674              		.loc 1 3798 22 view .LVU3678
 13675 0098 EFE7     		b	.L983
 13676              	.L989:
 13677 009a 00BF     		.align	2
 13678              	.L988:
 13679 009c 0000B03F 		.word	1068498944
 13680              		.cfi_endproc
 13681              	.LFE59:
 13683              		.section	.text.bno055_convert_float_gyro_xyz_rps,"ax",%progbits
 13684              		.align	1
 13685              		.global	bno055_convert_float_gyro_xyz_rps
 13686              		.syntax unified
 13687              		.thumb
 13688              		.thumb_func
 13689              		.fpu fpv4-sp-d16
 13691              	bno055_convert_float_gyro_xyz_rps:
ARM GAS  /tmp/ccWoU29M.s 			page 414


 13692              	.LVL1581:
 13693              	.LFB60:
3829:Core/Src/bno055.c ****     /* Variable used to return value of
 13694              		.loc 1 3829 1 is_stmt 1 view -0
 13695              		.cfi_startproc
 13696              		@ args = 0, pretend = 0, frame = 16
 13697              		@ frame_needed = 0, uses_anonymous_args = 0
3829:Core/Src/bno055.c ****     /* Variable used to return value of
 13698              		.loc 1 3829 1 is_stmt 0 view .LVU3680
 13699 0000 30B5     		push	{r4, r5, lr}
 13700              	.LCFI449:
 13701              		.cfi_def_cfa_offset 12
 13702              		.cfi_offset 4, -12
 13703              		.cfi_offset 5, -8
 13704              		.cfi_offset 14, -4
 13705 0002 85B0     		sub	sp, sp, #20
 13706              	.LCFI450:
 13707              		.cfi_def_cfa_offset 32
 13708 0004 0546     		mov	r5, r0
3832:Core/Src/bno055.c ****     struct bno055_gyro_t gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 13709              		.loc 1 3832 5 is_stmt 1 view .LVU3681
 13710              	.LVL1582:
3833:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13711              		.loc 1 3833 5 view .LVU3682
3833:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13712              		.loc 1 3833 26 is_stmt 0 view .LVU3683
 13713 0006 0023     		movs	r3, #0
 13714 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 13715 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 13716 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
3834:Core/Src/bno055.c **** 
 13717              		.loc 1 3834 5 is_stmt 1 view .LVU3684
3834:Core/Src/bno055.c **** 
 13718              		.loc 1 3834 8 is_stmt 0 view .LVU3685
 13719 0014 8DF80730 		strb	r3, [sp, #7]
3838:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13720              		.loc 1 3838 5 is_stmt 1 view .LVU3686
3838:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13721              		.loc 1 3838 16 is_stmt 0 view .LVU3687
 13722 0018 0DF10700 		add	r0, sp, #7
 13723              	.LVL1583:
3838:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13724              		.loc 1 3838 16 view .LVU3688
 13725 001c FFF7FEFF 		bl	bno055_get_gyro_unit
 13726              	.LVL1584:
 13727 0020 0446     		mov	r4, r0
 13728              	.LVL1585:
3839:Core/Src/bno055.c ****     {
 13729              		.loc 1 3839 5 is_stmt 1 view .LVU3689
3839:Core/Src/bno055.c ****     {
 13730              		.loc 1 3839 22 is_stmt 0 view .LVU3690
 13731 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
3839:Core/Src/bno055.c ****     {
 13732              		.loc 1 3839 8 view .LVU3691
 13733 0026 012B     		cmp	r3, #1
 13734 0028 2BD1     		bne	.L996
 13735              	.L991:
ARM GAS  /tmp/ccWoU29M.s 			page 415


3843:Core/Src/bno055.c ****     {
 13736              		.loc 1 3843 5 is_stmt 1 view .LVU3692
3843:Core/Src/bno055.c ****     {
 13737              		.loc 1 3843 8 is_stmt 0 view .LVU3693
 13738 002a 8CBB     		cbnz	r4, .L993
3846:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13739              		.loc 1 3846 9 is_stmt 1 view .LVU3694
3846:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13740              		.loc 1 3846 21 is_stmt 0 view .LVU3695
 13741 002c 02A8     		add	r0, sp, #8
 13742 002e FFF7FEFF 		bl	bno055_read_gyro_xyz
 13743              	.LVL1586:
3846:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13744              		.loc 1 3846 18 view .LVU3696
 13745 0032 54FA80F4 		uxtab	r4, r4, r0
 13746              	.LVL1587:
3846:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13747              		.loc 1 3846 18 view .LVU3697
 13748 0036 64B2     		sxtb	r4, r4
 13749              	.LVL1588:
3847:Core/Src/bno055.c ****         {
 13750              		.loc 1 3847 9 is_stmt 1 view .LVU3698
3847:Core/Src/bno055.c ****         {
 13751              		.loc 1 3847 12 is_stmt 0 view .LVU3699
 13752 0038 6CBB     		cbnz	r4, .L994
3850:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 13753              		.loc 1 3850 13 is_stmt 1 view .LVU3700
3850:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 13754              		.loc 1 3850 51 is_stmt 0 view .LVU3701
 13755 003a BDF90800 		ldrsh	r0, [sp, #8]
 13756 003e FFF7FEFF 		bl	__aeabi_i2d
 13757              	.LVL1589:
 13758 0042 0022     		movs	r2, #0
 13759 0044 154B     		ldr	r3, .L997
 13760 0046 FFF7FEFF 		bl	__aeabi_ddiv
 13761              	.LVL1590:
3850:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 13762              		.loc 1 3850 32 view .LVU3702
 13763 004a FFF7FEFF 		bl	__aeabi_d2f
 13764              	.LVL1591:
3850:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 13765              		.loc 1 3850 30 view .LVU3703
 13766 004e 2860     		str	r0, [r5]	@ float
3851:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 13767              		.loc 1 3851 13 is_stmt 1 view .LVU3704
3851:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 13768              		.loc 1 3851 51 is_stmt 0 view .LVU3705
 13769 0050 BDF90A00 		ldrsh	r0, [sp, #10]
 13770 0054 FFF7FEFF 		bl	__aeabi_i2d
 13771              	.LVL1592:
 13772 0058 0022     		movs	r2, #0
 13773 005a 104B     		ldr	r3, .L997
 13774 005c FFF7FEFF 		bl	__aeabi_ddiv
 13775              	.LVL1593:
3851:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 13776              		.loc 1 3851 32 view .LVU3706
 13777 0060 FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  /tmp/ccWoU29M.s 			page 416


 13778              	.LVL1594:
3851:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 13779              		.loc 1 3851 30 view .LVU3707
 13780 0064 6860     		str	r0, [r5, #4]	@ float
3852:Core/Src/bno055.c ****         }
 13781              		.loc 1 3852 13 is_stmt 1 view .LVU3708
3852:Core/Src/bno055.c ****         }
 13782              		.loc 1 3852 51 is_stmt 0 view .LVU3709
 13783 0066 BDF90C00 		ldrsh	r0, [sp, #12]
 13784 006a FFF7FEFF 		bl	__aeabi_i2d
 13785              	.LVL1595:
 13786 006e 0022     		movs	r2, #0
 13787 0070 0A4B     		ldr	r3, .L997
 13788 0072 FFF7FEFF 		bl	__aeabi_ddiv
 13789              	.LVL1596:
3852:Core/Src/bno055.c ****         }
 13790              		.loc 1 3852 32 view .LVU3710
 13791 0076 FFF7FEFF 		bl	__aeabi_d2f
 13792              	.LVL1597:
3852:Core/Src/bno055.c ****         }
 13793              		.loc 1 3852 30 view .LVU3711
 13794 007a A860     		str	r0, [r5, #8]	@ float
 13795              	.LVL1598:
 13796              	.L992:
3864:Core/Src/bno055.c **** }
 13797              		.loc 1 3864 5 is_stmt 1 view .LVU3712
3865:Core/Src/bno055.c **** 
 13798              		.loc 1 3865 1 is_stmt 0 view .LVU3713
 13799 007c 2046     		mov	r0, r4
 13800 007e 05B0     		add	sp, sp, #20
 13801              	.LCFI451:
 13802              		.cfi_remember_state
 13803              		.cfi_def_cfa_offset 12
 13804              		@ sp needed
 13805 0080 30BD     		pop	{r4, r5, pc}
 13806              	.LVL1599:
 13807              	.L996:
 13808              	.LCFI452:
 13809              		.cfi_restore_state
3841:Core/Src/bno055.c ****     }
 13810              		.loc 1 3841 9 is_stmt 1 view .LVU3714
3841:Core/Src/bno055.c ****     }
 13811              		.loc 1 3841 21 is_stmt 0 view .LVU3715
 13812 0082 0120     		movs	r0, #1
 13813 0084 FFF7FEFF 		bl	bno055_set_gyro_unit
 13814              	.LVL1600:
3841:Core/Src/bno055.c ****     }
 13815              		.loc 1 3841 18 view .LVU3716
 13816 0088 54FA80F4 		uxtab	r4, r4, r0
 13817              	.LVL1601:
3841:Core/Src/bno055.c ****     }
 13818              		.loc 1 3841 18 view .LVU3717
 13819 008c 64B2     		sxtb	r4, r4
 13820              	.LVL1602:
3841:Core/Src/bno055.c ****     }
 13821              		.loc 1 3841 18 view .LVU3718
 13822 008e CCE7     		b	.L991
ARM GAS  /tmp/ccWoU29M.s 			page 417


 13823              	.L993:
3861:Core/Src/bno055.c ****     }
 13824              		.loc 1 3861 18 view .LVU3719
 13825 0090 4FF0FF34 		mov	r4, #-1
 13826              	.LVL1603:
3861:Core/Src/bno055.c ****     }
 13827              		.loc 1 3861 18 view .LVU3720
 13828 0094 F2E7     		b	.L992
 13829              	.LVL1604:
 13830              	.L994:
3856:Core/Src/bno055.c ****         }
 13831              		.loc 1 3856 22 view .LVU3721
 13832 0096 4FF0FF34 		mov	r4, #-1
 13833              	.LVL1605:
3856:Core/Src/bno055.c ****         }
 13834              		.loc 1 3856 22 view .LVU3722
 13835 009a EFE7     		b	.L992
 13836              	.L998:
 13837              		.align	2
 13838              	.L997:
 13839 009c 00208C40 		.word	1082925056
 13840              		.cfi_endproc
 13841              	.LFE60:
 13843              		.section	.text.bno055_convert_double_gyro_x_dps,"ax",%progbits
 13844              		.align	1
 13845              		.global	bno055_convert_double_gyro_x_dps
 13846              		.syntax unified
 13847              		.thumb
 13848              		.thumb_func
 13849              		.fpu fpv4-sp-d16
 13851              	bno055_convert_double_gyro_x_dps:
 13852              	.LVL1606:
 13853              	.LFB91:
5269:Core/Src/bno055.c ****     /* Variable used to return value of
 13854              		.loc 1 5269 1 is_stmt 1 view -0
 13855              		.cfi_startproc
 13856              		@ args = 0, pretend = 0, frame = 8
 13857              		@ frame_needed = 0, uses_anonymous_args = 0
5269:Core/Src/bno055.c ****     /* Variable used to return value of
 13858              		.loc 1 5269 1 is_stmt 0 view .LVU3724
 13859 0000 30B5     		push	{r4, r5, lr}
 13860              	.LCFI453:
 13861              		.cfi_def_cfa_offset 12
 13862              		.cfi_offset 4, -12
 13863              		.cfi_offset 5, -8
 13864              		.cfi_offset 14, -4
 13865 0002 83B0     		sub	sp, sp, #12
 13866              	.LCFI454:
 13867              		.cfi_def_cfa_offset 24
 13868 0004 0546     		mov	r5, r0
5272:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
 13869              		.loc 1 5272 5 is_stmt 1 view .LVU3725
 13870              	.LVL1607:
5273:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13871              		.loc 1 5273 5 view .LVU3726
5273:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13872              		.loc 1 5273 9 is_stmt 0 view .LVU3727
ARM GAS  /tmp/ccWoU29M.s 			page 418


 13873 0006 0023     		movs	r3, #0
 13874 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5274:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13875              		.loc 1 5274 5 is_stmt 1 view .LVU3728
 13876              	.LVL1608:
5275:Core/Src/bno055.c **** 
 13877              		.loc 1 5275 5 view .LVU3729
5275:Core/Src/bno055.c **** 
 13878              		.loc 1 5275 8 is_stmt 0 view .LVU3730
 13879 000c 8DF80530 		strb	r3, [sp, #5]
5279:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13880              		.loc 1 5279 5 is_stmt 1 view .LVU3731
5279:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13881              		.loc 1 5279 16 is_stmt 0 view .LVU3732
 13882 0010 0DF10500 		add	r0, sp, #5
 13883              	.LVL1609:
5279:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13884              		.loc 1 5279 16 view .LVU3733
 13885 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13886              	.LVL1610:
 13887 0018 0446     		mov	r4, r0
 13888              	.LVL1611:
5280:Core/Src/bno055.c ****     {
 13889              		.loc 1 5280 5 is_stmt 1 view .LVU3734
5280:Core/Src/bno055.c ****     {
 13890              		.loc 1 5280 22 is_stmt 0 view .LVU3735
 13891 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5280:Core/Src/bno055.c ****     {
 13892              		.loc 1 5280 8 view .LVU3736
 13893 001e ABB9     		cbnz	r3, .L1005
 13894              	.L1000:
5284:Core/Src/bno055.c ****     {
 13895              		.loc 1 5284 5 is_stmt 1 view .LVU3737
5284:Core/Src/bno055.c ****     {
 13896              		.loc 1 5284 8 is_stmt 0 view .LVU3738
 13897 0020 DCB9     		cbnz	r4, .L1002
5287:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13898              		.loc 1 5287 9 is_stmt 1 view .LVU3739
5287:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13899              		.loc 1 5287 21 is_stmt 0 view .LVU3740
 13900 0022 0DF10600 		add	r0, sp, #6
 13901 0026 FFF7FEFF 		bl	bno055_read_gyro_x
 13902              	.LVL1612:
5287:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13903              		.loc 1 5287 18 view .LVU3741
 13904 002a 54FA80F4 		uxtab	r4, r4, r0
 13905              	.LVL1613:
5287:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13906              		.loc 1 5287 18 view .LVU3742
 13907 002e 64B2     		sxtb	r4, r4
 13908              	.LVL1614:
5288:Core/Src/bno055.c ****         {
 13909              		.loc 1 5288 9 is_stmt 1 view .LVU3743
5288:Core/Src/bno055.c ****         {
 13910              		.loc 1 5288 12 is_stmt 0 view .LVU3744
 13911 0030 B4B9     		cbnz	r4, .L1003
5291:Core/Src/bno055.c ****             *gyro_x_d = data_d;
ARM GAS  /tmp/ccWoU29M.s 			page 419


 13912              		.loc 1 5291 13 is_stmt 1 view .LVU3745
5291:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13913              		.loc 1 5291 22 is_stmt 0 view .LVU3746
 13914 0032 BDF90600 		ldrsh	r0, [sp, #6]
 13915 0036 FFF7FEFF 		bl	__aeabi_i2d
 13916              	.LVL1615:
5291:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13917              		.loc 1 5291 20 view .LVU3747
 13918 003a 0022     		movs	r2, #0
 13919 003c 0A4B     		ldr	r3, .L1006
 13920 003e FFF7FEFF 		bl	__aeabi_dmul
 13921              	.LVL1616:
5292:Core/Src/bno055.c ****         }
 13922              		.loc 1 5292 13 is_stmt 1 view .LVU3748
5292:Core/Src/bno055.c ****         }
 13923              		.loc 1 5292 23 is_stmt 0 view .LVU3749
 13924 0042 C5E90001 		strd	r0, [r5]
 13925              	.LVL1617:
 13926              	.L1001:
5304:Core/Src/bno055.c **** }
 13927              		.loc 1 5304 5 is_stmt 1 view .LVU3750
5305:Core/Src/bno055.c **** 
 13928              		.loc 1 5305 1 is_stmt 0 view .LVU3751
 13929 0046 2046     		mov	r0, r4
 13930 0048 03B0     		add	sp, sp, #12
 13931              	.LCFI455:
 13932              		.cfi_remember_state
 13933              		.cfi_def_cfa_offset 12
 13934              		@ sp needed
 13935 004a 30BD     		pop	{r4, r5, pc}
 13936              	.LVL1618:
 13937              	.L1005:
 13938              	.LCFI456:
 13939              		.cfi_restore_state
5282:Core/Src/bno055.c ****     }
 13940              		.loc 1 5282 9 is_stmt 1 view .LVU3752
5282:Core/Src/bno055.c ****     }
 13941              		.loc 1 5282 21 is_stmt 0 view .LVU3753
 13942 004c 0020     		movs	r0, #0
 13943 004e FFF7FEFF 		bl	bno055_set_gyro_unit
 13944              	.LVL1619:
5282:Core/Src/bno055.c ****     }
 13945              		.loc 1 5282 18 view .LVU3754
 13946 0052 54FA80F4 		uxtab	r4, r4, r0
 13947              	.LVL1620:
5282:Core/Src/bno055.c ****     }
 13948              		.loc 1 5282 18 view .LVU3755
 13949 0056 64B2     		sxtb	r4, r4
 13950              	.LVL1621:
5282:Core/Src/bno055.c ****     }
 13951              		.loc 1 5282 18 view .LVU3756
 13952 0058 E2E7     		b	.L1000
 13953              	.L1002:
5301:Core/Src/bno055.c ****     }
 13954              		.loc 1 5301 18 view .LVU3757
 13955 005a 4FF0FF34 		mov	r4, #-1
 13956              	.LVL1622:
ARM GAS  /tmp/ccWoU29M.s 			page 420


5301:Core/Src/bno055.c ****     }
 13957              		.loc 1 5301 18 view .LVU3758
 13958 005e F2E7     		b	.L1001
 13959              	.LVL1623:
 13960              	.L1003:
5296:Core/Src/bno055.c ****         }
 13961              		.loc 1 5296 22 view .LVU3759
 13962 0060 4FF0FF34 		mov	r4, #-1
 13963              	.LVL1624:
5296:Core/Src/bno055.c ****         }
 13964              		.loc 1 5296 22 view .LVU3760
 13965 0064 EFE7     		b	.L1001
 13966              	.L1007:
 13967 0066 00BF     		.align	2
 13968              	.L1006:
 13969 0068 0000B03F 		.word	1068498944
 13970              		.cfi_endproc
 13971              	.LFE91:
 13973              		.section	.text.bno055_convert_double_gyro_x_rps,"ax",%progbits
 13974              		.align	1
 13975              		.global	bno055_convert_double_gyro_x_rps
 13976              		.syntax unified
 13977              		.thumb
 13978              		.thumb_func
 13979              		.fpu fpv4-sp-d16
 13981              	bno055_convert_double_gyro_x_rps:
 13982              	.LVL1625:
 13983              	.LFB92:
5322:Core/Src/bno055.c ****     /* Variable used to return value of
 13984              		.loc 1 5322 1 is_stmt 1 view -0
 13985              		.cfi_startproc
 13986              		@ args = 0, pretend = 0, frame = 8
 13987              		@ frame_needed = 0, uses_anonymous_args = 0
5322:Core/Src/bno055.c ****     /* Variable used to return value of
 13988              		.loc 1 5322 1 is_stmt 0 view .LVU3762
 13989 0000 30B5     		push	{r4, r5, lr}
 13990              	.LCFI457:
 13991              		.cfi_def_cfa_offset 12
 13992              		.cfi_offset 4, -12
 13993              		.cfi_offset 5, -8
 13994              		.cfi_offset 14, -4
 13995 0002 83B0     		sub	sp, sp, #12
 13996              	.LCFI458:
 13997              		.cfi_def_cfa_offset 24
 13998 0004 0546     		mov	r5, r0
5325:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
 13999              		.loc 1 5325 5 is_stmt 1 view .LVU3763
 14000              	.LVL1626:
5326:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14001              		.loc 1 5326 5 view .LVU3764
5326:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14002              		.loc 1 5326 9 is_stmt 0 view .LVU3765
 14003 0006 0023     		movs	r3, #0
 14004 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5327:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14005              		.loc 1 5327 5 is_stmt 1 view .LVU3766
 14006              	.LVL1627:
ARM GAS  /tmp/ccWoU29M.s 			page 421


5328:Core/Src/bno055.c **** 
 14007              		.loc 1 5328 5 view .LVU3767
5328:Core/Src/bno055.c **** 
 14008              		.loc 1 5328 8 is_stmt 0 view .LVU3768
 14009 000c 8DF80530 		strb	r3, [sp, #5]
5332:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14010              		.loc 1 5332 5 is_stmt 1 view .LVU3769
5332:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14011              		.loc 1 5332 16 is_stmt 0 view .LVU3770
 14012 0010 0DF10500 		add	r0, sp, #5
 14013              	.LVL1628:
5332:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14014              		.loc 1 5332 16 view .LVU3771
 14015 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 14016              	.LVL1629:
 14017 0018 0446     		mov	r4, r0
 14018              	.LVL1630:
5333:Core/Src/bno055.c ****     {
 14019              		.loc 1 5333 5 is_stmt 1 view .LVU3772
5333:Core/Src/bno055.c ****     {
 14020              		.loc 1 5333 22 is_stmt 0 view .LVU3773
 14021 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5333:Core/Src/bno055.c ****     {
 14022              		.loc 1 5333 8 view .LVU3774
 14023 001e 012B     		cmp	r3, #1
 14024 0020 15D1     		bne	.L1014
 14025              	.L1009:
5337:Core/Src/bno055.c ****     {
 14026              		.loc 1 5337 5 is_stmt 1 view .LVU3775
5337:Core/Src/bno055.c ****     {
 14027              		.loc 1 5337 8 is_stmt 0 view .LVU3776
 14028 0022 DCB9     		cbnz	r4, .L1011
5340:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14029              		.loc 1 5340 9 is_stmt 1 view .LVU3777
5340:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14030              		.loc 1 5340 21 is_stmt 0 view .LVU3778
 14031 0024 0DF10600 		add	r0, sp, #6
 14032 0028 FFF7FEFF 		bl	bno055_read_gyro_x
 14033              	.LVL1631:
5340:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14034              		.loc 1 5340 18 view .LVU3779
 14035 002c 54FA80F4 		uxtab	r4, r4, r0
 14036              	.LVL1632:
5340:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14037              		.loc 1 5340 18 view .LVU3780
 14038 0030 64B2     		sxtb	r4, r4
 14039              	.LVL1633:
5341:Core/Src/bno055.c ****         {
 14040              		.loc 1 5341 9 is_stmt 1 view .LVU3781
5341:Core/Src/bno055.c ****         {
 14041              		.loc 1 5341 12 is_stmt 0 view .LVU3782
 14042 0032 B4B9     		cbnz	r4, .L1012
5344:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 14043              		.loc 1 5344 13 is_stmt 1 view .LVU3783
5344:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 14044              		.loc 1 5344 22 is_stmt 0 view .LVU3784
 14045 0034 BDF90600 		ldrsh	r0, [sp, #6]
ARM GAS  /tmp/ccWoU29M.s 			page 422


 14046 0038 FFF7FEFF 		bl	__aeabi_i2d
 14047              	.LVL1634:
5344:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 14048              		.loc 1 5344 20 view .LVU3785
 14049 003c 0022     		movs	r2, #0
 14050 003e 0A4B     		ldr	r3, .L1015
 14051 0040 FFF7FEFF 		bl	__aeabi_ddiv
 14052              	.LVL1635:
5345:Core/Src/bno055.c ****         }
 14053              		.loc 1 5345 13 is_stmt 1 view .LVU3786
5345:Core/Src/bno055.c ****         }
 14054              		.loc 1 5345 23 is_stmt 0 view .LVU3787
 14055 0044 C5E90001 		strd	r0, [r5]
 14056              	.LVL1636:
 14057              	.L1010:
5357:Core/Src/bno055.c **** }
 14058              		.loc 1 5357 5 is_stmt 1 view .LVU3788
5358:Core/Src/bno055.c **** 
 14059              		.loc 1 5358 1 is_stmt 0 view .LVU3789
 14060 0048 2046     		mov	r0, r4
 14061 004a 03B0     		add	sp, sp, #12
 14062              	.LCFI459:
 14063              		.cfi_remember_state
 14064              		.cfi_def_cfa_offset 12
 14065              		@ sp needed
 14066 004c 30BD     		pop	{r4, r5, pc}
 14067              	.LVL1637:
 14068              	.L1014:
 14069              	.LCFI460:
 14070              		.cfi_restore_state
5335:Core/Src/bno055.c ****     }
 14071              		.loc 1 5335 9 is_stmt 1 view .LVU3790
5335:Core/Src/bno055.c ****     }
 14072              		.loc 1 5335 21 is_stmt 0 view .LVU3791
 14073 004e 0120     		movs	r0, #1
 14074 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 14075              	.LVL1638:
5335:Core/Src/bno055.c ****     }
 14076              		.loc 1 5335 18 view .LVU3792
 14077 0054 54FA80F4 		uxtab	r4, r4, r0
 14078              	.LVL1639:
5335:Core/Src/bno055.c ****     }
 14079              		.loc 1 5335 18 view .LVU3793
 14080 0058 64B2     		sxtb	r4, r4
 14081              	.LVL1640:
5335:Core/Src/bno055.c ****     }
 14082              		.loc 1 5335 18 view .LVU3794
 14083 005a E2E7     		b	.L1009
 14084              	.L1011:
5354:Core/Src/bno055.c ****     }
 14085              		.loc 1 5354 18 view .LVU3795
 14086 005c 4FF0FF34 		mov	r4, #-1
 14087              	.LVL1641:
5354:Core/Src/bno055.c ****     }
 14088              		.loc 1 5354 18 view .LVU3796
 14089 0060 F2E7     		b	.L1010
 14090              	.LVL1642:
ARM GAS  /tmp/ccWoU29M.s 			page 423


 14091              	.L1012:
5349:Core/Src/bno055.c ****         }
 14092              		.loc 1 5349 22 view .LVU3797
 14093 0062 4FF0FF34 		mov	r4, #-1
 14094              	.LVL1643:
5349:Core/Src/bno055.c ****         }
 14095              		.loc 1 5349 22 view .LVU3798
 14096 0066 EFE7     		b	.L1010
 14097              	.L1016:
 14098              		.align	2
 14099              	.L1015:
 14100 0068 00208C40 		.word	1082925056
 14101              		.cfi_endproc
 14102              	.LFE92:
 14104              		.section	.text.bno055_convert_double_gyro_y_dps,"ax",%progbits
 14105              		.align	1
 14106              		.global	bno055_convert_double_gyro_y_dps
 14107              		.syntax unified
 14108              		.thumb
 14109              		.thumb_func
 14110              		.fpu fpv4-sp-d16
 14112              	bno055_convert_double_gyro_y_dps:
 14113              	.LVL1644:
 14114              	.LFB93:
5375:Core/Src/bno055.c ****     /* Variable used to return value of
 14115              		.loc 1 5375 1 is_stmt 1 view -0
 14116              		.cfi_startproc
 14117              		@ args = 0, pretend = 0, frame = 8
 14118              		@ frame_needed = 0, uses_anonymous_args = 0
5375:Core/Src/bno055.c ****     /* Variable used to return value of
 14119              		.loc 1 5375 1 is_stmt 0 view .LVU3800
 14120 0000 30B5     		push	{r4, r5, lr}
 14121              	.LCFI461:
 14122              		.cfi_def_cfa_offset 12
 14123              		.cfi_offset 4, -12
 14124              		.cfi_offset 5, -8
 14125              		.cfi_offset 14, -4
 14126 0002 83B0     		sub	sp, sp, #12
 14127              	.LCFI462:
 14128              		.cfi_def_cfa_offset 24
 14129 0004 0546     		mov	r5, r0
5378:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
 14130              		.loc 1 5378 5 is_stmt 1 view .LVU3801
 14131              	.LVL1645:
5379:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14132              		.loc 1 5379 5 view .LVU3802
5379:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14133              		.loc 1 5379 9 is_stmt 0 view .LVU3803
 14134 0006 0023     		movs	r3, #0
 14135 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5380:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14136              		.loc 1 5380 5 is_stmt 1 view .LVU3804
 14137              	.LVL1646:
5381:Core/Src/bno055.c **** 
 14138              		.loc 1 5381 5 view .LVU3805
5381:Core/Src/bno055.c **** 
 14139              		.loc 1 5381 8 is_stmt 0 view .LVU3806
ARM GAS  /tmp/ccWoU29M.s 			page 424


 14140 000c 8DF80530 		strb	r3, [sp, #5]
5385:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14141              		.loc 1 5385 5 is_stmt 1 view .LVU3807
5385:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14142              		.loc 1 5385 16 is_stmt 0 view .LVU3808
 14143 0010 0DF10500 		add	r0, sp, #5
 14144              	.LVL1647:
5385:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14145              		.loc 1 5385 16 view .LVU3809
 14146 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 14147              	.LVL1648:
 14148 0018 0446     		mov	r4, r0
 14149              	.LVL1649:
5386:Core/Src/bno055.c ****     {
 14150              		.loc 1 5386 5 is_stmt 1 view .LVU3810
5386:Core/Src/bno055.c ****     {
 14151              		.loc 1 5386 22 is_stmt 0 view .LVU3811
 14152 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5386:Core/Src/bno055.c ****     {
 14153              		.loc 1 5386 8 view .LVU3812
 14154 001e ABB9     		cbnz	r3, .L1023
 14155              	.L1018:
5390:Core/Src/bno055.c ****     {
 14156              		.loc 1 5390 5 is_stmt 1 view .LVU3813
5390:Core/Src/bno055.c ****     {
 14157              		.loc 1 5390 8 is_stmt 0 view .LVU3814
 14158 0020 DCB9     		cbnz	r4, .L1020
5393:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14159              		.loc 1 5393 9 is_stmt 1 view .LVU3815
5393:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14160              		.loc 1 5393 21 is_stmt 0 view .LVU3816
 14161 0022 0DF10600 		add	r0, sp, #6
 14162 0026 FFF7FEFF 		bl	bno055_read_gyro_y
 14163              	.LVL1650:
5393:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14164              		.loc 1 5393 18 view .LVU3817
 14165 002a 54FA80F4 		uxtab	r4, r4, r0
 14166              	.LVL1651:
5393:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14167              		.loc 1 5393 18 view .LVU3818
 14168 002e 64B2     		sxtb	r4, r4
 14169              	.LVL1652:
5394:Core/Src/bno055.c ****         {
 14170              		.loc 1 5394 9 is_stmt 1 view .LVU3819
5394:Core/Src/bno055.c ****         {
 14171              		.loc 1 5394 12 is_stmt 0 view .LVU3820
 14172 0030 B4B9     		cbnz	r4, .L1021
5397:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 14173              		.loc 1 5397 13 is_stmt 1 view .LVU3821
5397:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 14174              		.loc 1 5397 22 is_stmt 0 view .LVU3822
 14175 0032 BDF90600 		ldrsh	r0, [sp, #6]
 14176 0036 FFF7FEFF 		bl	__aeabi_i2d
 14177              	.LVL1653:
5397:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 14178              		.loc 1 5397 20 view .LVU3823
 14179 003a 0022     		movs	r2, #0
ARM GAS  /tmp/ccWoU29M.s 			page 425


 14180 003c 0A4B     		ldr	r3, .L1024
 14181 003e FFF7FEFF 		bl	__aeabi_dmul
 14182              	.LVL1654:
5398:Core/Src/bno055.c ****         }
 14183              		.loc 1 5398 13 is_stmt 1 view .LVU3824
5398:Core/Src/bno055.c ****         }
 14184              		.loc 1 5398 23 is_stmt 0 view .LVU3825
 14185 0042 C5E90001 		strd	r0, [r5]
 14186              	.LVL1655:
 14187              	.L1019:
5410:Core/Src/bno055.c **** }
 14188              		.loc 1 5410 5 is_stmt 1 view .LVU3826
5411:Core/Src/bno055.c **** 
 14189              		.loc 1 5411 1 is_stmt 0 view .LVU3827
 14190 0046 2046     		mov	r0, r4
 14191 0048 03B0     		add	sp, sp, #12
 14192              	.LCFI463:
 14193              		.cfi_remember_state
 14194              		.cfi_def_cfa_offset 12
 14195              		@ sp needed
 14196 004a 30BD     		pop	{r4, r5, pc}
 14197              	.LVL1656:
 14198              	.L1023:
 14199              	.LCFI464:
 14200              		.cfi_restore_state
5388:Core/Src/bno055.c ****     }
 14201              		.loc 1 5388 9 is_stmt 1 view .LVU3828
5388:Core/Src/bno055.c ****     }
 14202              		.loc 1 5388 21 is_stmt 0 view .LVU3829
 14203 004c 0020     		movs	r0, #0
 14204 004e FFF7FEFF 		bl	bno055_set_gyro_unit
 14205              	.LVL1657:
5388:Core/Src/bno055.c ****     }
 14206              		.loc 1 5388 18 view .LVU3830
 14207 0052 54FA80F4 		uxtab	r4, r4, r0
 14208              	.LVL1658:
5388:Core/Src/bno055.c ****     }
 14209              		.loc 1 5388 18 view .LVU3831
 14210 0056 64B2     		sxtb	r4, r4
 14211              	.LVL1659:
5388:Core/Src/bno055.c ****     }
 14212              		.loc 1 5388 18 view .LVU3832
 14213 0058 E2E7     		b	.L1018
 14214              	.L1020:
5407:Core/Src/bno055.c ****     }
 14215              		.loc 1 5407 18 view .LVU3833
 14216 005a 4FF0FF34 		mov	r4, #-1
 14217              	.LVL1660:
5407:Core/Src/bno055.c ****     }
 14218              		.loc 1 5407 18 view .LVU3834
 14219 005e F2E7     		b	.L1019
 14220              	.LVL1661:
 14221              	.L1021:
5402:Core/Src/bno055.c ****         }
 14222              		.loc 1 5402 22 view .LVU3835
 14223 0060 4FF0FF34 		mov	r4, #-1
 14224              	.LVL1662:
ARM GAS  /tmp/ccWoU29M.s 			page 426


5402:Core/Src/bno055.c ****         }
 14225              		.loc 1 5402 22 view .LVU3836
 14226 0064 EFE7     		b	.L1019
 14227              	.L1025:
 14228 0066 00BF     		.align	2
 14229              	.L1024:
 14230 0068 0000B03F 		.word	1068498944
 14231              		.cfi_endproc
 14232              	.LFE93:
 14234              		.section	.text.bno055_convert_double_gyro_y_rps,"ax",%progbits
 14235              		.align	1
 14236              		.global	bno055_convert_double_gyro_y_rps
 14237              		.syntax unified
 14238              		.thumb
 14239              		.thumb_func
 14240              		.fpu fpv4-sp-d16
 14242              	bno055_convert_double_gyro_y_rps:
 14243              	.LVL1663:
 14244              	.LFB94:
5428:Core/Src/bno055.c ****     /* Variable used to return value of
 14245              		.loc 1 5428 1 is_stmt 1 view -0
 14246              		.cfi_startproc
 14247              		@ args = 0, pretend = 0, frame = 8
 14248              		@ frame_needed = 0, uses_anonymous_args = 0
5428:Core/Src/bno055.c ****     /* Variable used to return value of
 14249              		.loc 1 5428 1 is_stmt 0 view .LVU3838
 14250 0000 30B5     		push	{r4, r5, lr}
 14251              	.LCFI465:
 14252              		.cfi_def_cfa_offset 12
 14253              		.cfi_offset 4, -12
 14254              		.cfi_offset 5, -8
 14255              		.cfi_offset 14, -4
 14256 0002 83B0     		sub	sp, sp, #12
 14257              	.LCFI466:
 14258              		.cfi_def_cfa_offset 24
 14259 0004 0546     		mov	r5, r0
5431:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
 14260              		.loc 1 5431 5 is_stmt 1 view .LVU3839
 14261              	.LVL1664:
5432:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14262              		.loc 1 5432 5 view .LVU3840
5432:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14263              		.loc 1 5432 9 is_stmt 0 view .LVU3841
 14264 0006 0023     		movs	r3, #0
 14265 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5433:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14266              		.loc 1 5433 5 is_stmt 1 view .LVU3842
 14267              	.LVL1665:
5434:Core/Src/bno055.c **** 
 14268              		.loc 1 5434 5 view .LVU3843
5434:Core/Src/bno055.c **** 
 14269              		.loc 1 5434 8 is_stmt 0 view .LVU3844
 14270 000c 8DF80530 		strb	r3, [sp, #5]
5438:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14271              		.loc 1 5438 5 is_stmt 1 view .LVU3845
5438:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14272              		.loc 1 5438 16 is_stmt 0 view .LVU3846
ARM GAS  /tmp/ccWoU29M.s 			page 427


 14273 0010 0DF10500 		add	r0, sp, #5
 14274              	.LVL1666:
5438:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14275              		.loc 1 5438 16 view .LVU3847
 14276 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 14277              	.LVL1667:
 14278 0018 0446     		mov	r4, r0
 14279              	.LVL1668:
5439:Core/Src/bno055.c ****     {
 14280              		.loc 1 5439 5 is_stmt 1 view .LVU3848
5439:Core/Src/bno055.c ****     {
 14281              		.loc 1 5439 22 is_stmt 0 view .LVU3849
 14282 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5439:Core/Src/bno055.c ****     {
 14283              		.loc 1 5439 8 view .LVU3850
 14284 001e 012B     		cmp	r3, #1
 14285 0020 15D1     		bne	.L1032
 14286              	.L1027:
5443:Core/Src/bno055.c ****     {
 14287              		.loc 1 5443 5 is_stmt 1 view .LVU3851
5443:Core/Src/bno055.c ****     {
 14288              		.loc 1 5443 8 is_stmt 0 view .LVU3852
 14289 0022 DCB9     		cbnz	r4, .L1029
5446:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14290              		.loc 1 5446 9 is_stmt 1 view .LVU3853
5446:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14291              		.loc 1 5446 21 is_stmt 0 view .LVU3854
 14292 0024 0DF10600 		add	r0, sp, #6
 14293 0028 FFF7FEFF 		bl	bno055_read_gyro_y
 14294              	.LVL1669:
5446:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14295              		.loc 1 5446 18 view .LVU3855
 14296 002c 54FA80F4 		uxtab	r4, r4, r0
 14297              	.LVL1670:
5446:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14298              		.loc 1 5446 18 view .LVU3856
 14299 0030 64B2     		sxtb	r4, r4
 14300              	.LVL1671:
5447:Core/Src/bno055.c ****         {
 14301              		.loc 1 5447 9 is_stmt 1 view .LVU3857
5447:Core/Src/bno055.c ****         {
 14302              		.loc 1 5447 12 is_stmt 0 view .LVU3858
 14303 0032 B4B9     		cbnz	r4, .L1030
5450:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 14304              		.loc 1 5450 13 is_stmt 1 view .LVU3859
5450:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 14305              		.loc 1 5450 22 is_stmt 0 view .LVU3860
 14306 0034 BDF90600 		ldrsh	r0, [sp, #6]
 14307 0038 FFF7FEFF 		bl	__aeabi_i2d
 14308              	.LVL1672:
5450:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 14309              		.loc 1 5450 20 view .LVU3861
 14310 003c 0022     		movs	r2, #0
 14311 003e 0A4B     		ldr	r3, .L1033
 14312 0040 FFF7FEFF 		bl	__aeabi_ddiv
 14313              	.LVL1673:
5451:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 428


 14314              		.loc 1 5451 13 is_stmt 1 view .LVU3862
5451:Core/Src/bno055.c ****         }
 14315              		.loc 1 5451 23 is_stmt 0 view .LVU3863
 14316 0044 C5E90001 		strd	r0, [r5]
 14317              	.LVL1674:
 14318              	.L1028:
5463:Core/Src/bno055.c **** }
 14319              		.loc 1 5463 5 is_stmt 1 view .LVU3864
5464:Core/Src/bno055.c **** 
 14320              		.loc 1 5464 1 is_stmt 0 view .LVU3865
 14321 0048 2046     		mov	r0, r4
 14322 004a 03B0     		add	sp, sp, #12
 14323              	.LCFI467:
 14324              		.cfi_remember_state
 14325              		.cfi_def_cfa_offset 12
 14326              		@ sp needed
 14327 004c 30BD     		pop	{r4, r5, pc}
 14328              	.LVL1675:
 14329              	.L1032:
 14330              	.LCFI468:
 14331              		.cfi_restore_state
5441:Core/Src/bno055.c ****     }
 14332              		.loc 1 5441 9 is_stmt 1 view .LVU3866
5441:Core/Src/bno055.c ****     }
 14333              		.loc 1 5441 21 is_stmt 0 view .LVU3867
 14334 004e 0120     		movs	r0, #1
 14335 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 14336              	.LVL1676:
5441:Core/Src/bno055.c ****     }
 14337              		.loc 1 5441 18 view .LVU3868
 14338 0054 54FA80F4 		uxtab	r4, r4, r0
 14339              	.LVL1677:
5441:Core/Src/bno055.c ****     }
 14340              		.loc 1 5441 18 view .LVU3869
 14341 0058 64B2     		sxtb	r4, r4
 14342              	.LVL1678:
5441:Core/Src/bno055.c ****     }
 14343              		.loc 1 5441 18 view .LVU3870
 14344 005a E2E7     		b	.L1027
 14345              	.L1029:
5460:Core/Src/bno055.c ****     }
 14346              		.loc 1 5460 18 view .LVU3871
 14347 005c 4FF0FF34 		mov	r4, #-1
 14348              	.LVL1679:
5460:Core/Src/bno055.c ****     }
 14349              		.loc 1 5460 18 view .LVU3872
 14350 0060 F2E7     		b	.L1028
 14351              	.LVL1680:
 14352              	.L1030:
5455:Core/Src/bno055.c ****         }
 14353              		.loc 1 5455 22 view .LVU3873
 14354 0062 4FF0FF34 		mov	r4, #-1
 14355              	.LVL1681:
5455:Core/Src/bno055.c ****         }
 14356              		.loc 1 5455 22 view .LVU3874
 14357 0066 EFE7     		b	.L1028
 14358              	.L1034:
ARM GAS  /tmp/ccWoU29M.s 			page 429


 14359              		.align	2
 14360              	.L1033:
 14361 0068 00208C40 		.word	1082925056
 14362              		.cfi_endproc
 14363              	.LFE94:
 14365              		.section	.text.bno055_convert_double_gyro_z_dps,"ax",%progbits
 14366              		.align	1
 14367              		.global	bno055_convert_double_gyro_z_dps
 14368              		.syntax unified
 14369              		.thumb
 14370              		.thumb_func
 14371              		.fpu fpv4-sp-d16
 14373              	bno055_convert_double_gyro_z_dps:
 14374              	.LVL1682:
 14375              	.LFB95:
5481:Core/Src/bno055.c ****     /* Variable used to return value of
 14376              		.loc 1 5481 1 is_stmt 1 view -0
 14377              		.cfi_startproc
 14378              		@ args = 0, pretend = 0, frame = 8
 14379              		@ frame_needed = 0, uses_anonymous_args = 0
5481:Core/Src/bno055.c ****     /* Variable used to return value of
 14380              		.loc 1 5481 1 is_stmt 0 view .LVU3876
 14381 0000 30B5     		push	{r4, r5, lr}
 14382              	.LCFI469:
 14383              		.cfi_def_cfa_offset 12
 14384              		.cfi_offset 4, -12
 14385              		.cfi_offset 5, -8
 14386              		.cfi_offset 14, -4
 14387 0002 83B0     		sub	sp, sp, #12
 14388              	.LCFI470:
 14389              		.cfi_def_cfa_offset 24
 14390 0004 0546     		mov	r5, r0
5484:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
 14391              		.loc 1 5484 5 is_stmt 1 view .LVU3877
 14392              	.LVL1683:
5485:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14393              		.loc 1 5485 5 view .LVU3878
5485:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14394              		.loc 1 5485 9 is_stmt 0 view .LVU3879
 14395 0006 0023     		movs	r3, #0
 14396 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5486:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14397              		.loc 1 5486 5 is_stmt 1 view .LVU3880
 14398              	.LVL1684:
5487:Core/Src/bno055.c **** 
 14399              		.loc 1 5487 5 view .LVU3881
5487:Core/Src/bno055.c **** 
 14400              		.loc 1 5487 8 is_stmt 0 view .LVU3882
 14401 000c 8DF80530 		strb	r3, [sp, #5]
5491:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14402              		.loc 1 5491 5 is_stmt 1 view .LVU3883
5491:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14403              		.loc 1 5491 16 is_stmt 0 view .LVU3884
 14404 0010 0DF10500 		add	r0, sp, #5
 14405              	.LVL1685:
5491:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14406              		.loc 1 5491 16 view .LVU3885
ARM GAS  /tmp/ccWoU29M.s 			page 430


 14407 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 14408              	.LVL1686:
 14409 0018 0446     		mov	r4, r0
 14410              	.LVL1687:
5492:Core/Src/bno055.c ****     {
 14411              		.loc 1 5492 5 is_stmt 1 view .LVU3886
5492:Core/Src/bno055.c ****     {
 14412              		.loc 1 5492 22 is_stmt 0 view .LVU3887
 14413 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5492:Core/Src/bno055.c ****     {
 14414              		.loc 1 5492 8 view .LVU3888
 14415 001e ABB9     		cbnz	r3, .L1041
 14416              	.L1036:
5496:Core/Src/bno055.c ****     {
 14417              		.loc 1 5496 5 is_stmt 1 view .LVU3889
5496:Core/Src/bno055.c ****     {
 14418              		.loc 1 5496 8 is_stmt 0 view .LVU3890
 14419 0020 DCB9     		cbnz	r4, .L1038
5499:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14420              		.loc 1 5499 9 is_stmt 1 view .LVU3891
5499:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14421              		.loc 1 5499 21 is_stmt 0 view .LVU3892
 14422 0022 0DF10600 		add	r0, sp, #6
 14423 0026 FFF7FEFF 		bl	bno055_read_gyro_z
 14424              	.LVL1688:
5499:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14425              		.loc 1 5499 18 view .LVU3893
 14426 002a 54FA80F4 		uxtab	r4, r4, r0
 14427              	.LVL1689:
5499:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14428              		.loc 1 5499 18 view .LVU3894
 14429 002e 64B2     		sxtb	r4, r4
 14430              	.LVL1690:
5500:Core/Src/bno055.c ****         {
 14431              		.loc 1 5500 9 is_stmt 1 view .LVU3895
5500:Core/Src/bno055.c ****         {
 14432              		.loc 1 5500 12 is_stmt 0 view .LVU3896
 14433 0030 B4B9     		cbnz	r4, .L1039
5503:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 14434              		.loc 1 5503 13 is_stmt 1 view .LVU3897
5503:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 14435              		.loc 1 5503 22 is_stmt 0 view .LVU3898
 14436 0032 BDF90600 		ldrsh	r0, [sp, #6]
 14437 0036 FFF7FEFF 		bl	__aeabi_i2d
 14438              	.LVL1691:
5503:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 14439              		.loc 1 5503 20 view .LVU3899
 14440 003a 0022     		movs	r2, #0
 14441 003c 0A4B     		ldr	r3, .L1042
 14442 003e FFF7FEFF 		bl	__aeabi_dmul
 14443              	.LVL1692:
5504:Core/Src/bno055.c ****         }
 14444              		.loc 1 5504 13 is_stmt 1 view .LVU3900
5504:Core/Src/bno055.c ****         }
 14445              		.loc 1 5504 23 is_stmt 0 view .LVU3901
 14446 0042 C5E90001 		strd	r0, [r5]
 14447              	.LVL1693:
ARM GAS  /tmp/ccWoU29M.s 			page 431


 14448              	.L1037:
5516:Core/Src/bno055.c **** }
 14449              		.loc 1 5516 5 is_stmt 1 view .LVU3902
5517:Core/Src/bno055.c **** 
 14450              		.loc 1 5517 1 is_stmt 0 view .LVU3903
 14451 0046 2046     		mov	r0, r4
 14452 0048 03B0     		add	sp, sp, #12
 14453              	.LCFI471:
 14454              		.cfi_remember_state
 14455              		.cfi_def_cfa_offset 12
 14456              		@ sp needed
 14457 004a 30BD     		pop	{r4, r5, pc}
 14458              	.LVL1694:
 14459              	.L1041:
 14460              	.LCFI472:
 14461              		.cfi_restore_state
5494:Core/Src/bno055.c ****     }
 14462              		.loc 1 5494 9 is_stmt 1 view .LVU3904
5494:Core/Src/bno055.c ****     }
 14463              		.loc 1 5494 21 is_stmt 0 view .LVU3905
 14464 004c 0020     		movs	r0, #0
 14465 004e FFF7FEFF 		bl	bno055_set_gyro_unit
 14466              	.LVL1695:
5494:Core/Src/bno055.c ****     }
 14467              		.loc 1 5494 18 view .LVU3906
 14468 0052 54FA80F4 		uxtab	r4, r4, r0
 14469              	.LVL1696:
5494:Core/Src/bno055.c ****     }
 14470              		.loc 1 5494 18 view .LVU3907
 14471 0056 64B2     		sxtb	r4, r4
 14472              	.LVL1697:
5494:Core/Src/bno055.c ****     }
 14473              		.loc 1 5494 18 view .LVU3908
 14474 0058 E2E7     		b	.L1036
 14475              	.L1038:
5513:Core/Src/bno055.c ****     }
 14476              		.loc 1 5513 18 view .LVU3909
 14477 005a 4FF0FF34 		mov	r4, #-1
 14478              	.LVL1698:
5513:Core/Src/bno055.c ****     }
 14479              		.loc 1 5513 18 view .LVU3910
 14480 005e F2E7     		b	.L1037
 14481              	.LVL1699:
 14482              	.L1039:
5508:Core/Src/bno055.c ****         }
 14483              		.loc 1 5508 22 view .LVU3911
 14484 0060 4FF0FF34 		mov	r4, #-1
 14485              	.LVL1700:
5508:Core/Src/bno055.c ****         }
 14486              		.loc 1 5508 22 view .LVU3912
 14487 0064 EFE7     		b	.L1037
 14488              	.L1043:
 14489 0066 00BF     		.align	2
 14490              	.L1042:
 14491 0068 0000B03F 		.word	1068498944
 14492              		.cfi_endproc
 14493              	.LFE95:
ARM GAS  /tmp/ccWoU29M.s 			page 432


 14495              		.section	.text.bno055_convert_double_gyro_z_rps,"ax",%progbits
 14496              		.align	1
 14497              		.global	bno055_convert_double_gyro_z_rps
 14498              		.syntax unified
 14499              		.thumb
 14500              		.thumb_func
 14501              		.fpu fpv4-sp-d16
 14503              	bno055_convert_double_gyro_z_rps:
 14504              	.LVL1701:
 14505              	.LFB96:
5534:Core/Src/bno055.c ****     /* Variable used to return value of
 14506              		.loc 1 5534 1 is_stmt 1 view -0
 14507              		.cfi_startproc
 14508              		@ args = 0, pretend = 0, frame = 8
 14509              		@ frame_needed = 0, uses_anonymous_args = 0
5534:Core/Src/bno055.c ****     /* Variable used to return value of
 14510              		.loc 1 5534 1 is_stmt 0 view .LVU3914
 14511 0000 30B5     		push	{r4, r5, lr}
 14512              	.LCFI473:
 14513              		.cfi_def_cfa_offset 12
 14514              		.cfi_offset 4, -12
 14515              		.cfi_offset 5, -8
 14516              		.cfi_offset 14, -4
 14517 0002 83B0     		sub	sp, sp, #12
 14518              	.LCFI474:
 14519              		.cfi_def_cfa_offset 24
 14520 0004 0546     		mov	r5, r0
5537:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
 14521              		.loc 1 5537 5 is_stmt 1 view .LVU3915
 14522              	.LVL1702:
5538:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14523              		.loc 1 5538 5 view .LVU3916
5538:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14524              		.loc 1 5538 9 is_stmt 0 view .LVU3917
 14525 0006 0023     		movs	r3, #0
 14526 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5539:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14527              		.loc 1 5539 5 is_stmt 1 view .LVU3918
 14528              	.LVL1703:
5540:Core/Src/bno055.c **** 
 14529              		.loc 1 5540 5 view .LVU3919
5540:Core/Src/bno055.c **** 
 14530              		.loc 1 5540 8 is_stmt 0 view .LVU3920
 14531 000c 8DF80530 		strb	r3, [sp, #5]
5544:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14532              		.loc 1 5544 5 is_stmt 1 view .LVU3921
5544:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14533              		.loc 1 5544 16 is_stmt 0 view .LVU3922
 14534 0010 0DF10500 		add	r0, sp, #5
 14535              	.LVL1704:
5544:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14536              		.loc 1 5544 16 view .LVU3923
 14537 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 14538              	.LVL1705:
 14539 0018 0446     		mov	r4, r0
 14540              	.LVL1706:
5545:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccWoU29M.s 			page 433


 14541              		.loc 1 5545 5 is_stmt 1 view .LVU3924
5545:Core/Src/bno055.c ****     {
 14542              		.loc 1 5545 22 is_stmt 0 view .LVU3925
 14543 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5545:Core/Src/bno055.c ****     {
 14544              		.loc 1 5545 8 view .LVU3926
 14545 001e 012B     		cmp	r3, #1
 14546 0020 15D1     		bne	.L1050
 14547              	.L1045:
5549:Core/Src/bno055.c ****     {
 14548              		.loc 1 5549 5 is_stmt 1 view .LVU3927
5549:Core/Src/bno055.c ****     {
 14549              		.loc 1 5549 8 is_stmt 0 view .LVU3928
 14550 0022 DCB9     		cbnz	r4, .L1047
5552:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14551              		.loc 1 5552 9 is_stmt 1 view .LVU3929
5552:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14552              		.loc 1 5552 21 is_stmt 0 view .LVU3930
 14553 0024 0DF10600 		add	r0, sp, #6
 14554 0028 FFF7FEFF 		bl	bno055_read_gyro_z
 14555              	.LVL1707:
5552:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14556              		.loc 1 5552 18 view .LVU3931
 14557 002c 54FA80F4 		uxtab	r4, r4, r0
 14558              	.LVL1708:
5552:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14559              		.loc 1 5552 18 view .LVU3932
 14560 0030 64B2     		sxtb	r4, r4
 14561              	.LVL1709:
5553:Core/Src/bno055.c ****         {
 14562              		.loc 1 5553 9 is_stmt 1 view .LVU3933
5553:Core/Src/bno055.c ****         {
 14563              		.loc 1 5553 12 is_stmt 0 view .LVU3934
 14564 0032 B4B9     		cbnz	r4, .L1048
5556:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 14565              		.loc 1 5556 13 is_stmt 1 view .LVU3935
5556:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 14566              		.loc 1 5556 22 is_stmt 0 view .LVU3936
 14567 0034 BDF90600 		ldrsh	r0, [sp, #6]
 14568 0038 FFF7FEFF 		bl	__aeabi_i2d
 14569              	.LVL1710:
5556:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 14570              		.loc 1 5556 20 view .LVU3937
 14571 003c 0022     		movs	r2, #0
 14572 003e 0A4B     		ldr	r3, .L1051
 14573 0040 FFF7FEFF 		bl	__aeabi_ddiv
 14574              	.LVL1711:
5557:Core/Src/bno055.c ****         }
 14575              		.loc 1 5557 13 is_stmt 1 view .LVU3938
5557:Core/Src/bno055.c ****         }
 14576              		.loc 1 5557 23 is_stmt 0 view .LVU3939
 14577 0044 C5E90001 		strd	r0, [r5]
 14578              	.LVL1712:
 14579              	.L1046:
5569:Core/Src/bno055.c **** }
 14580              		.loc 1 5569 5 is_stmt 1 view .LVU3940
5570:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 434


 14581              		.loc 1 5570 1 is_stmt 0 view .LVU3941
 14582 0048 2046     		mov	r0, r4
 14583 004a 03B0     		add	sp, sp, #12
 14584              	.LCFI475:
 14585              		.cfi_remember_state
 14586              		.cfi_def_cfa_offset 12
 14587              		@ sp needed
 14588 004c 30BD     		pop	{r4, r5, pc}
 14589              	.LVL1713:
 14590              	.L1050:
 14591              	.LCFI476:
 14592              		.cfi_restore_state
5547:Core/Src/bno055.c ****     }
 14593              		.loc 1 5547 9 is_stmt 1 view .LVU3942
5547:Core/Src/bno055.c ****     }
 14594              		.loc 1 5547 21 is_stmt 0 view .LVU3943
 14595 004e 0120     		movs	r0, #1
 14596 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 14597              	.LVL1714:
5547:Core/Src/bno055.c ****     }
 14598              		.loc 1 5547 18 view .LVU3944
 14599 0054 54FA80F4 		uxtab	r4, r4, r0
 14600              	.LVL1715:
5547:Core/Src/bno055.c ****     }
 14601              		.loc 1 5547 18 view .LVU3945
 14602 0058 64B2     		sxtb	r4, r4
 14603              	.LVL1716:
5547:Core/Src/bno055.c ****     }
 14604              		.loc 1 5547 18 view .LVU3946
 14605 005a E2E7     		b	.L1045
 14606              	.L1047:
5566:Core/Src/bno055.c ****     }
 14607              		.loc 1 5566 18 view .LVU3947
 14608 005c 4FF0FF34 		mov	r4, #-1
 14609              	.LVL1717:
5566:Core/Src/bno055.c ****     }
 14610              		.loc 1 5566 18 view .LVU3948
 14611 0060 F2E7     		b	.L1046
 14612              	.LVL1718:
 14613              	.L1048:
5561:Core/Src/bno055.c ****         }
 14614              		.loc 1 5561 22 view .LVU3949
 14615 0062 4FF0FF34 		mov	r4, #-1
 14616              	.LVL1719:
5561:Core/Src/bno055.c ****         }
 14617              		.loc 1 5561 22 view .LVU3950
 14618 0066 EFE7     		b	.L1046
 14619              	.L1052:
 14620              		.align	2
 14621              	.L1051:
 14622 0068 00208C40 		.word	1082925056
 14623              		.cfi_endproc
 14624              	.LFE96:
 14626              		.section	.text.bno055_convert_double_gyro_xyz_dps,"ax",%progbits
 14627              		.align	1
 14628              		.global	bno055_convert_double_gyro_xyz_dps
 14629              		.syntax unified
ARM GAS  /tmp/ccWoU29M.s 			page 435


 14630              		.thumb
 14631              		.thumb_func
 14632              		.fpu fpv4-sp-d16
 14634              	bno055_convert_double_gyro_xyz_dps:
 14635              	.LVL1720:
 14636              	.LFB97:
5591:Core/Src/bno055.c ****     /* Variable used to return value of
 14637              		.loc 1 5591 1 is_stmt 1 view -0
 14638              		.cfi_startproc
 14639              		@ args = 0, pretend = 0, frame = 16
 14640              		@ frame_needed = 0, uses_anonymous_args = 0
5591:Core/Src/bno055.c ****     /* Variable used to return value of
 14641              		.loc 1 5591 1 is_stmt 0 view .LVU3952
 14642 0000 30B5     		push	{r4, r5, lr}
 14643              	.LCFI477:
 14644              		.cfi_def_cfa_offset 12
 14645              		.cfi_offset 4, -12
 14646              		.cfi_offset 5, -8
 14647              		.cfi_offset 14, -4
 14648 0002 85B0     		sub	sp, sp, #20
 14649              	.LCFI478:
 14650              		.cfi_def_cfa_offset 32
 14651 0004 0546     		mov	r5, r0
5594:Core/Src/bno055.c ****     struct bno055_gyro_t reg_gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE }
 14652              		.loc 1 5594 5 is_stmt 1 view .LVU3953
 14653              	.LVL1721:
5595:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14654              		.loc 1 5595 5 view .LVU3954
5595:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14655              		.loc 1 5595 26 is_stmt 0 view .LVU3955
 14656 0006 0023     		movs	r3, #0
 14657 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 14658 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 14659 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
5596:Core/Src/bno055.c **** 
 14660              		.loc 1 5596 5 is_stmt 1 view .LVU3956
5596:Core/Src/bno055.c **** 
 14661              		.loc 1 5596 8 is_stmt 0 view .LVU3957
 14662 0014 8DF80730 		strb	r3, [sp, #7]
5600:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14663              		.loc 1 5600 5 is_stmt 1 view .LVU3958
5600:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14664              		.loc 1 5600 16 is_stmt 0 view .LVU3959
 14665 0018 0DF10700 		add	r0, sp, #7
 14666              	.LVL1722:
5600:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14667              		.loc 1 5600 16 view .LVU3960
 14668 001c FFF7FEFF 		bl	bno055_get_gyro_unit
 14669              	.LVL1723:
 14670 0020 0446     		mov	r4, r0
 14671              	.LVL1724:
5601:Core/Src/bno055.c ****     {
 14672              		.loc 1 5601 5 is_stmt 1 view .LVU3961
5601:Core/Src/bno055.c ****     {
 14673              		.loc 1 5601 22 is_stmt 0 view .LVU3962
 14674 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
5601:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccWoU29M.s 			page 436


 14675              		.loc 1 5601 8 view .LVU3963
 14676 0026 43BB     		cbnz	r3, .L1059
 14677              	.L1054:
5605:Core/Src/bno055.c ****     {
 14678              		.loc 1 5605 5 is_stmt 1 view .LVU3964
5605:Core/Src/bno055.c ****     {
 14679              		.loc 1 5605 8 is_stmt 0 view .LVU3965
 14680 0028 74BB     		cbnz	r4, .L1056
5608:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14681              		.loc 1 5608 9 is_stmt 1 view .LVU3966
5608:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14682              		.loc 1 5608 21 is_stmt 0 view .LVU3967
 14683 002a 02A8     		add	r0, sp, #8
 14684 002c FFF7FEFF 		bl	bno055_read_gyro_xyz
 14685              	.LVL1725:
5608:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14686              		.loc 1 5608 18 view .LVU3968
 14687 0030 54FA80F4 		uxtab	r4, r4, r0
 14688              	.LVL1726:
5608:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14689              		.loc 1 5608 18 view .LVU3969
 14690 0034 64B2     		sxtb	r4, r4
 14691              	.LVL1727:
5609:Core/Src/bno055.c ****         {
 14692              		.loc 1 5609 9 is_stmt 1 view .LVU3970
5609:Core/Src/bno055.c ****         {
 14693              		.loc 1 5609 12 is_stmt 0 view .LVU3971
 14694 0036 54BB     		cbnz	r4, .L1057
5612:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 14695              		.loc 1 5612 13 is_stmt 1 view .LVU3972
5612:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 14696              		.loc 1 5612 27 is_stmt 0 view .LVU3973
 14697 0038 BDF90800 		ldrsh	r0, [sp, #8]
 14698 003c FFF7FEFF 		bl	__aeabi_i2d
 14699              	.LVL1728:
 14700 0040 0022     		movs	r2, #0
 14701 0042 144B     		ldr	r3, .L1060
 14702 0044 FFF7FEFF 		bl	__aeabi_dmul
 14703              	.LVL1729:
5612:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 14704              		.loc 1 5612 25 view .LVU3974
 14705 0048 C5E90001 		strd	r0, [r5]
5613:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 14706              		.loc 1 5613 13 is_stmt 1 view .LVU3975
5613:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 14707              		.loc 1 5613 27 is_stmt 0 view .LVU3976
 14708 004c BDF90A00 		ldrsh	r0, [sp, #10]
 14709 0050 FFF7FEFF 		bl	__aeabi_i2d
 14710              	.LVL1730:
 14711 0054 0022     		movs	r2, #0
 14712 0056 0F4B     		ldr	r3, .L1060
 14713 0058 FFF7FEFF 		bl	__aeabi_dmul
 14714              	.LVL1731:
5613:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 14715              		.loc 1 5613 25 view .LVU3977
 14716 005c C5E90201 		strd	r0, [r5, #8]
5614:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 437


 14717              		.loc 1 5614 13 is_stmt 1 view .LVU3978
5614:Core/Src/bno055.c ****         }
 14718              		.loc 1 5614 27 is_stmt 0 view .LVU3979
 14719 0060 BDF90C00 		ldrsh	r0, [sp, #12]
 14720 0064 FFF7FEFF 		bl	__aeabi_i2d
 14721              	.LVL1732:
 14722 0068 0022     		movs	r2, #0
 14723 006a 0A4B     		ldr	r3, .L1060
 14724 006c FFF7FEFF 		bl	__aeabi_dmul
 14725              	.LVL1733:
5614:Core/Src/bno055.c ****         }
 14726              		.loc 1 5614 25 view .LVU3980
 14727 0070 C5E90401 		strd	r0, [r5, #16]
 14728              	.LVL1734:
 14729              	.L1055:
5626:Core/Src/bno055.c **** }
 14730              		.loc 1 5626 5 is_stmt 1 view .LVU3981
5627:Core/Src/bno055.c **** 
 14731              		.loc 1 5627 1 is_stmt 0 view .LVU3982
 14732 0074 2046     		mov	r0, r4
 14733 0076 05B0     		add	sp, sp, #20
 14734              	.LCFI479:
 14735              		.cfi_remember_state
 14736              		.cfi_def_cfa_offset 12
 14737              		@ sp needed
 14738 0078 30BD     		pop	{r4, r5, pc}
 14739              	.LVL1735:
 14740              	.L1059:
 14741              	.LCFI480:
 14742              		.cfi_restore_state
5603:Core/Src/bno055.c ****     }
 14743              		.loc 1 5603 9 is_stmt 1 view .LVU3983
5603:Core/Src/bno055.c ****     }
 14744              		.loc 1 5603 21 is_stmt 0 view .LVU3984
 14745 007a 0020     		movs	r0, #0
 14746 007c FFF7FEFF 		bl	bno055_set_gyro_unit
 14747              	.LVL1736:
5603:Core/Src/bno055.c ****     }
 14748              		.loc 1 5603 18 view .LVU3985
 14749 0080 54FA80F4 		uxtab	r4, r4, r0
 14750              	.LVL1737:
5603:Core/Src/bno055.c ****     }
 14751              		.loc 1 5603 18 view .LVU3986
 14752 0084 64B2     		sxtb	r4, r4
 14753              	.LVL1738:
5603:Core/Src/bno055.c ****     }
 14754              		.loc 1 5603 18 view .LVU3987
 14755 0086 CFE7     		b	.L1054
 14756              	.L1056:
5623:Core/Src/bno055.c ****     }
 14757              		.loc 1 5623 18 view .LVU3988
 14758 0088 4FF0FF34 		mov	r4, #-1
 14759              	.LVL1739:
5623:Core/Src/bno055.c ****     }
 14760              		.loc 1 5623 18 view .LVU3989
 14761 008c F2E7     		b	.L1055
 14762              	.LVL1740:
ARM GAS  /tmp/ccWoU29M.s 			page 438


 14763              	.L1057:
5618:Core/Src/bno055.c ****         }
 14764              		.loc 1 5618 22 view .LVU3990
 14765 008e 4FF0FF34 		mov	r4, #-1
 14766              	.LVL1741:
5618:Core/Src/bno055.c ****         }
 14767              		.loc 1 5618 22 view .LVU3991
 14768 0092 EFE7     		b	.L1055
 14769              	.L1061:
 14770              		.align	2
 14771              	.L1060:
 14772 0094 0000B03F 		.word	1068498944
 14773              		.cfi_endproc
 14774              	.LFE97:
 14776              		.section	.text.bno055_convert_double_gyro_xyz_rps,"ax",%progbits
 14777              		.align	1
 14778              		.global	bno055_convert_double_gyro_xyz_rps
 14779              		.syntax unified
 14780              		.thumb
 14781              		.thumb_func
 14782              		.fpu fpv4-sp-d16
 14784              	bno055_convert_double_gyro_xyz_rps:
 14785              	.LVL1742:
 14786              	.LFB98:
5648:Core/Src/bno055.c ****     /* Variable used to return value of
 14787              		.loc 1 5648 1 is_stmt 1 view -0
 14788              		.cfi_startproc
 14789              		@ args = 0, pretend = 0, frame = 16
 14790              		@ frame_needed = 0, uses_anonymous_args = 0
5648:Core/Src/bno055.c ****     /* Variable used to return value of
 14791              		.loc 1 5648 1 is_stmt 0 view .LVU3993
 14792 0000 30B5     		push	{r4, r5, lr}
 14793              	.LCFI481:
 14794              		.cfi_def_cfa_offset 12
 14795              		.cfi_offset 4, -12
 14796              		.cfi_offset 5, -8
 14797              		.cfi_offset 14, -4
 14798 0002 85B0     		sub	sp, sp, #20
 14799              	.LCFI482:
 14800              		.cfi_def_cfa_offset 32
 14801 0004 0546     		mov	r5, r0
5651:Core/Src/bno055.c ****     struct bno055_gyro_t reg_gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE }
 14802              		.loc 1 5651 5 is_stmt 1 view .LVU3994
 14803              	.LVL1743:
5652:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14804              		.loc 1 5652 5 view .LVU3995
5652:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14805              		.loc 1 5652 26 is_stmt 0 view .LVU3996
 14806 0006 0023     		movs	r3, #0
 14807 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 14808 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 14809 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
5653:Core/Src/bno055.c **** 
 14810              		.loc 1 5653 5 is_stmt 1 view .LVU3997
5653:Core/Src/bno055.c **** 
 14811              		.loc 1 5653 8 is_stmt 0 view .LVU3998
 14812 0014 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/ccWoU29M.s 			page 439


5657:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14813              		.loc 1 5657 5 is_stmt 1 view .LVU3999
5657:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14814              		.loc 1 5657 16 is_stmt 0 view .LVU4000
 14815 0018 0DF10700 		add	r0, sp, #7
 14816              	.LVL1744:
5657:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14817              		.loc 1 5657 16 view .LVU4001
 14818 001c FFF7FEFF 		bl	bno055_get_gyro_unit
 14819              	.LVL1745:
 14820 0020 0446     		mov	r4, r0
 14821              	.LVL1746:
5658:Core/Src/bno055.c ****     {
 14822              		.loc 1 5658 5 is_stmt 1 view .LVU4002
5658:Core/Src/bno055.c ****     {
 14823              		.loc 1 5658 22 is_stmt 0 view .LVU4003
 14824 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
5658:Core/Src/bno055.c ****     {
 14825              		.loc 1 5658 8 view .LVU4004
 14826 0026 012B     		cmp	r3, #1
 14827 0028 28D1     		bne	.L1068
 14828              	.L1063:
5662:Core/Src/bno055.c ****     {
 14829              		.loc 1 5662 5 is_stmt 1 view .LVU4005
5662:Core/Src/bno055.c ****     {
 14830              		.loc 1 5662 8 is_stmt 0 view .LVU4006
 14831 002a 74BB     		cbnz	r4, .L1065
5665:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14832              		.loc 1 5665 9 is_stmt 1 view .LVU4007
5665:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14833              		.loc 1 5665 21 is_stmt 0 view .LVU4008
 14834 002c 02A8     		add	r0, sp, #8
 14835 002e FFF7FEFF 		bl	bno055_read_gyro_xyz
 14836              	.LVL1747:
5665:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14837              		.loc 1 5665 18 view .LVU4009
 14838 0032 54FA80F4 		uxtab	r4, r4, r0
 14839              	.LVL1748:
5665:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14840              		.loc 1 5665 18 view .LVU4010
 14841 0036 64B2     		sxtb	r4, r4
 14842              	.LVL1749:
5666:Core/Src/bno055.c ****         {
 14843              		.loc 1 5666 9 is_stmt 1 view .LVU4011
5666:Core/Src/bno055.c ****         {
 14844              		.loc 1 5666 12 is_stmt 0 view .LVU4012
 14845 0038 54BB     		cbnz	r4, .L1066
5669:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 14846              		.loc 1 5669 13 is_stmt 1 view .LVU4013
5669:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 14847              		.loc 1 5669 27 is_stmt 0 view .LVU4014
 14848 003a BDF90800 		ldrsh	r0, [sp, #8]
 14849 003e FFF7FEFF 		bl	__aeabi_i2d
 14850              	.LVL1750:
 14851 0042 0022     		movs	r2, #0
 14852 0044 144B     		ldr	r3, .L1069
 14853 0046 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  /tmp/ccWoU29M.s 			page 440


 14854              	.LVL1751:
5669:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 14855              		.loc 1 5669 25 view .LVU4015
 14856 004a C5E90001 		strd	r0, [r5]
5670:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 14857              		.loc 1 5670 13 is_stmt 1 view .LVU4016
5670:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 14858              		.loc 1 5670 27 is_stmt 0 view .LVU4017
 14859 004e BDF90A00 		ldrsh	r0, [sp, #10]
 14860 0052 FFF7FEFF 		bl	__aeabi_i2d
 14861              	.LVL1752:
 14862 0056 0022     		movs	r2, #0
 14863 0058 0F4B     		ldr	r3, .L1069
 14864 005a FFF7FEFF 		bl	__aeabi_ddiv
 14865              	.LVL1753:
5670:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 14866              		.loc 1 5670 25 view .LVU4018
 14867 005e C5E90201 		strd	r0, [r5, #8]
5671:Core/Src/bno055.c ****         }
 14868              		.loc 1 5671 13 is_stmt 1 view .LVU4019
5671:Core/Src/bno055.c ****         }
 14869              		.loc 1 5671 27 is_stmt 0 view .LVU4020
 14870 0062 BDF90C00 		ldrsh	r0, [sp, #12]
 14871 0066 FFF7FEFF 		bl	__aeabi_i2d
 14872              	.LVL1754:
 14873 006a 0022     		movs	r2, #0
 14874 006c 0A4B     		ldr	r3, .L1069
 14875 006e FFF7FEFF 		bl	__aeabi_ddiv
 14876              	.LVL1755:
5671:Core/Src/bno055.c ****         }
 14877              		.loc 1 5671 25 view .LVU4021
 14878 0072 C5E90401 		strd	r0, [r5, #16]
 14879              	.LVL1756:
 14880              	.L1064:
5683:Core/Src/bno055.c **** }
 14881              		.loc 1 5683 5 is_stmt 1 view .LVU4022
5684:Core/Src/bno055.c **** 
 14882              		.loc 1 5684 1 is_stmt 0 view .LVU4023
 14883 0076 2046     		mov	r0, r4
 14884 0078 05B0     		add	sp, sp, #20
 14885              	.LCFI483:
 14886              		.cfi_remember_state
 14887              		.cfi_def_cfa_offset 12
 14888              		@ sp needed
 14889 007a 30BD     		pop	{r4, r5, pc}
 14890              	.LVL1757:
 14891              	.L1068:
 14892              	.LCFI484:
 14893              		.cfi_restore_state
5660:Core/Src/bno055.c ****     }
 14894              		.loc 1 5660 9 is_stmt 1 view .LVU4024
5660:Core/Src/bno055.c ****     }
 14895              		.loc 1 5660 21 is_stmt 0 view .LVU4025
 14896 007c 0120     		movs	r0, #1
 14897 007e FFF7FEFF 		bl	bno055_set_gyro_unit
 14898              	.LVL1758:
5660:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 441


 14899              		.loc 1 5660 18 view .LVU4026
 14900 0082 54FA80F4 		uxtab	r4, r4, r0
 14901              	.LVL1759:
5660:Core/Src/bno055.c ****     }
 14902              		.loc 1 5660 18 view .LVU4027
 14903 0086 64B2     		sxtb	r4, r4
 14904              	.LVL1760:
5660:Core/Src/bno055.c ****     }
 14905              		.loc 1 5660 18 view .LVU4028
 14906 0088 CFE7     		b	.L1063
 14907              	.L1065:
5680:Core/Src/bno055.c ****     }
 14908              		.loc 1 5680 18 view .LVU4029
 14909 008a 4FF0FF34 		mov	r4, #-1
 14910              	.LVL1761:
5680:Core/Src/bno055.c ****     }
 14911              		.loc 1 5680 18 view .LVU4030
 14912 008e F2E7     		b	.L1064
 14913              	.LVL1762:
 14914              	.L1066:
5675:Core/Src/bno055.c ****         }
 14915              		.loc 1 5675 22 view .LVU4031
 14916 0090 4FF0FF34 		mov	r4, #-1
 14917              	.LVL1763:
5675:Core/Src/bno055.c ****         }
 14918              		.loc 1 5675 22 view .LVU4032
 14919 0094 EFE7     		b	.L1064
 14920              	.L1070:
 14921 0096 00BF     		.align	2
 14922              	.L1069:
 14923 0098 00208C40 		.word	1082925056
 14924              		.cfi_endproc
 14925              	.LFE98:
 14927              		.section	.text.bno055_set_euler_unit,"ax",%progbits
 14928              		.align	1
 14929              		.global	bno055_set_euler_unit
 14930              		.syntax unified
 14931              		.thumb
 14932              		.thumb_func
 14933              		.fpu fpv4-sp-d16
 14935              	bno055_set_euler_unit:
 14936              	.LVL1764:
 14937              	.LFB138:
7731:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 14938              		.loc 1 7731 1 is_stmt 1 view -0
 14939              		.cfi_startproc
 14940              		@ args = 0, pretend = 0, frame = 8
 14941              		@ frame_needed = 0, uses_anonymous_args = 0
7731:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 14942              		.loc 1 7731 1 is_stmt 0 view .LVU4034
 14943 0000 30B5     		push	{r4, r5, lr}
 14944              	.LCFI485:
 14945              		.cfi_def_cfa_offset 12
 14946              		.cfi_offset 4, -12
 14947              		.cfi_offset 5, -8
 14948              		.cfi_offset 14, -4
 14949 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccWoU29M.s 			page 442


 14950              	.LCFI486:
 14951              		.cfi_def_cfa_offset 24
7732:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 14952              		.loc 1 7732 5 is_stmt 1 view .LVU4035
 14953              	.LVL1765:
7733:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 14954              		.loc 1 7733 5 view .LVU4036
7733:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 14955              		.loc 1 7733 8 is_stmt 0 view .LVU4037
 14956 0004 0023     		movs	r3, #0
 14957 0006 8DF80730 		strb	r3, [sp, #7]
7734:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 14958              		.loc 1 7734 5 is_stmt 1 view .LVU4038
7734:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 14959              		.loc 1 7734 8 is_stmt 0 view .LVU4039
 14960 000a 8DF80630 		strb	r3, [sp, #6]
7735:Core/Src/bno055.c **** 
 14961              		.loc 1 7735 5 is_stmt 1 view .LVU4040
 14962              	.LVL1766:
7738:Core/Src/bno055.c ****     {
 14963              		.loc 1 7738 5 view .LVU4041
7738:Core/Src/bno055.c ****     {
 14964              		.loc 1 7738 18 is_stmt 0 view .LVU4042
 14965 000e 264B     		ldr	r3, .L1081
 14966 0010 1B68     		ldr	r3, [r3]
7738:Core/Src/bno055.c ****     {
 14967              		.loc 1 7738 8 view .LVU4043
 14968 0012 002B     		cmp	r3, #0
 14969 0014 44D0     		beq	.L1075
 14970 0016 0546     		mov	r5, r0
7747:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 14971              		.loc 1 7747 9 is_stmt 1 view .LVU4044
7747:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 14972              		.loc 1 7747 19 is_stmt 0 view .LVU4045
 14973 0018 0DF10600 		add	r0, sp, #6
 14974              	.LVL1767:
7747:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 14975              		.loc 1 7747 19 view .LVU4046
 14976 001c FFF7FEFF 		bl	bno055_get_operation_mode
 14977              	.LVL1768:
7748:Core/Src/bno055.c ****         {
 14978              		.loc 1 7748 9 is_stmt 1 view .LVU4047
7748:Core/Src/bno055.c ****         {
 14979              		.loc 1 7748 12 is_stmt 0 view .LVU4048
 14980 0020 0446     		mov	r4, r0
 14981 0022 60BB     		cbnz	r0, .L1076
7750:Core/Src/bno055.c ****             {
 14982              		.loc 1 7750 13 is_stmt 1 view .LVU4049
7750:Core/Src/bno055.c ****             {
 14983              		.loc 1 7750 32 is_stmt 0 view .LVU4050
 14984 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
7750:Core/Src/bno055.c ****             {
 14985              		.loc 1 7750 16 view .LVU4051
 14986 0028 1BBB     		cbnz	r3, .L1079
 14987              	.LVL1769:
 14988              	.L1074:
7754:Core/Src/bno055.c ****             {
ARM GAS  /tmp/ccWoU29M.s 			page 443


 14989              		.loc 1 7754 13 is_stmt 1 view .LVU4052
7754:Core/Src/bno055.c ****             {
 14990              		.loc 1 7754 16 is_stmt 0 view .LVU4053
 14991 002a 84BB     		cbnz	r4, .L1077
7757:Core/Src/bno055.c ****                                                           BNO055_EULER_UNIT_REG,
 14992              		.loc 1 7757 17 is_stmt 1 view .LVU4054
7757:Core/Src/bno055.c ****                                                           BNO055_EULER_UNIT_REG,
 14993              		.loc 1 7757 36 is_stmt 0 view .LVU4055
 14994 002c 1E4B     		ldr	r3, .L1081
 14995 002e 1868     		ldr	r0, [r3]
 14996 0030 0469     		ldr	r4, [r0, #16]
 14997              	.LVL1770:
7757:Core/Src/bno055.c ****                                                           BNO055_EULER_UNIT_REG,
 14998              		.loc 1 7757 28 view .LVU4056
 14999 0032 0123     		movs	r3, #1
 15000 0034 0DF10702 		add	r2, sp, #7
 15001 0038 3B21     		movs	r1, #59
 15002 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 15003 003c A047     		blx	r4
 15004              	.LVL1771:
7761:Core/Src/bno055.c ****                 {
 15005              		.loc 1 7761 17 is_stmt 1 view .LVU4057
7761:Core/Src/bno055.c ****                 {
 15006              		.loc 1 7761 20 is_stmt 0 view .LVU4058
 15007 003e 0446     		mov	r4, r0
 15008 0040 F8B9     		cbnz	r0, .L1073
7763:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 15009              		.loc 1 7763 21 is_stmt 1 view .LVU4059
7763:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 15010              		.loc 1 7763 32 is_stmt 0 view .LVU4060
 15011 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 15012              	.LVL1772:
7763:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 15013              		.loc 1 7763 32 view .LVU4061
 15014 0046 20F00400 		bic	r0, r0, #4
 15015 004a 43B2     		sxtb	r3, r0
 15016 004c A800     		lsls	r0, r5, #2
 15017 004e 00F00400 		and	r0, r0, #4
 15018 0052 1843     		orrs	r0, r0, r3
7763:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 15019              		.loc 1 7763 30 view .LVU4062
 15020 0054 8DF80700 		strb	r0, [sp, #7]
7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 15021              		.loc 1 7764 21 is_stmt 1 view .LVU4063
7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 15022              		.loc 1 7764 41 is_stmt 0 view .LVU4064
 15023 0058 134B     		ldr	r3, .L1081
 15024 005a 1868     		ldr	r0, [r3]
 15025 005c C568     		ldr	r5, [r0, #12]
7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 15026              		.loc 1 7764 33 view .LVU4065
 15027 005e 0123     		movs	r3, #1
 15028 0060 0DF10702 		add	r2, sp, #7
 15029 0064 3B21     		movs	r1, #59
 15030 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 15031 0068 A847     		blx	r5
 15032              	.LVL1773:
ARM GAS  /tmp/ccWoU29M.s 			page 444


7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 15033              		.loc 1 7764 30 view .LVU4066
 15034 006a 54FA80F4 		uxtab	r4, r4, r0
 15035 006e 64B2     		sxtb	r4, r4
 15036              	.LVL1774:
7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 15037              		.loc 1 7764 30 view .LVU4067
 15038 0070 07E0     		b	.L1073
 15039              	.LVL1775:
 15040              	.L1079:
7752:Core/Src/bno055.c ****             }
 15041              		.loc 1 7752 17 is_stmt 1 view .LVU4068
7752:Core/Src/bno055.c ****             }
 15042              		.loc 1 7752 28 is_stmt 0 view .LVU4069
 15043 0072 FFF7FEFF 		bl	bno055_set_operation_mode
 15044              	.LVL1776:
7752:Core/Src/bno055.c ****             }
 15045              		.loc 1 7752 25 view .LVU4070
 15046 0076 54FA80F4 		uxtab	r4, r4, r0
 15047 007a 64B2     		sxtb	r4, r4
 15048              	.LVL1777:
7752:Core/Src/bno055.c ****             }
 15049              		.loc 1 7752 25 view .LVU4071
 15050 007c D5E7     		b	.L1074
 15051              	.LVL1778:
 15052              	.L1076:
7777:Core/Src/bno055.c ****         }
 15053              		.loc 1 7777 22 view .LVU4072
 15054 007e 4FF0FF34 		mov	r4, #-1
 15055              	.LVL1779:
 15056              	.L1073:
7780:Core/Src/bno055.c ****     {
 15057              		.loc 1 7780 5 is_stmt 1 view .LVU4073
7780:Core/Src/bno055.c ****     {
 15058              		.loc 1 7780 24 is_stmt 0 view .LVU4074
 15059 0082 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
7780:Core/Src/bno055.c ****     {
 15060              		.loc 1 7780 8 view .LVU4075
 15061 0086 28B9     		cbnz	r0, .L1080
 15062              	.LVL1780:
 15063              	.L1072:
7788:Core/Src/bno055.c **** 
 15064              		.loc 1 7788 1 view .LVU4076
 15065 0088 2046     		mov	r0, r4
 15066 008a 03B0     		add	sp, sp, #12
 15067              	.LCFI487:
 15068              		.cfi_remember_state
 15069              		.cfi_def_cfa_offset 12
 15070              		@ sp needed
 15071 008c 30BD     		pop	{r4, r5, pc}
 15072              	.LVL1781:
 15073              	.L1077:
 15074              	.LCFI488:
 15075              		.cfi_restore_state
7772:Core/Src/bno055.c ****             }
 15076              		.loc 1 7772 26 view .LVU4077
 15077 008e 4FF0FF34 		mov	r4, #-1
ARM GAS  /tmp/ccWoU29M.s 			page 445


 15078              	.LVL1782:
7772:Core/Src/bno055.c ****             }
 15079              		.loc 1 7772 26 view .LVU4078
 15080 0092 F6E7     		b	.L1073
 15081              	.LVL1783:
 15082              	.L1080:
7784:Core/Src/bno055.c ****     }
 15083              		.loc 1 7784 9 is_stmt 1 view .LVU4079
7784:Core/Src/bno055.c ****     }
 15084              		.loc 1 7784 21 is_stmt 0 view .LVU4080
 15085 0094 FFF7FEFF 		bl	bno055_set_operation_mode
 15086              	.LVL1784:
7784:Core/Src/bno055.c ****     }
 15087              		.loc 1 7784 18 view .LVU4081
 15088 0098 54FA80F4 		uxtab	r4, r4, r0
 15089              	.LVL1785:
7784:Core/Src/bno055.c ****     }
 15090              		.loc 1 7784 18 view .LVU4082
 15091 009c 64B2     		sxtb	r4, r4
 15092              	.LVL1786:
7784:Core/Src/bno055.c ****     }
 15093              		.loc 1 7784 18 view .LVU4083
 15094 009e F3E7     		b	.L1072
 15095              	.LVL1787:
 15096              	.L1075:
7740:Core/Src/bno055.c ****     }
 15097              		.loc 1 7740 16 view .LVU4084
 15098 00a0 6FF07E04 		mvn	r4, #126
 15099 00a4 F0E7     		b	.L1072
 15100              	.L1082:
 15101 00a6 00BF     		.align	2
 15102              	.L1081:
 15103 00a8 00000000 		.word	.LANCHOR0
 15104              		.cfi_endproc
 15105              	.LFE138:
 15107              		.section	.text.bno055_convert_float_euler_h_deg,"ax",%progbits
 15108              		.align	1
 15109              		.global	bno055_convert_float_euler_h_deg
 15110              		.syntax unified
 15111              		.thumb
 15112              		.thumb_func
 15113              		.fpu fpv4-sp-d16
 15115              	bno055_convert_float_euler_h_deg:
 15116              	.LVL1788:
 15117              	.LFB61:
3880:Core/Src/bno055.c ****     /* Variable used to return value of
 15118              		.loc 1 3880 1 is_stmt 1 view -0
 15119              		.cfi_startproc
 15120              		@ args = 0, pretend = 0, frame = 8
 15121              		@ frame_needed = 0, uses_anonymous_args = 0
3880:Core/Src/bno055.c ****     /* Variable used to return value of
 15122              		.loc 1 3880 1 is_stmt 0 view .LVU4086
 15123 0000 30B5     		push	{r4, r5, lr}
 15124              	.LCFI489:
 15125              		.cfi_def_cfa_offset 12
 15126              		.cfi_offset 4, -12
 15127              		.cfi_offset 5, -8
ARM GAS  /tmp/ccWoU29M.s 			page 446


 15128              		.cfi_offset 14, -4
 15129 0002 83B0     		sub	sp, sp, #12
 15130              	.LCFI490:
 15131              		.cfi_def_cfa_offset 24
 15132 0004 0546     		mov	r5, r0
3883:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
 15133              		.loc 1 3883 5 is_stmt 1 view .LVU4087
 15134              	.LVL1789:
3884:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15135              		.loc 1 3884 5 view .LVU4088
3884:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15136              		.loc 1 3884 9 is_stmt 0 view .LVU4089
 15137 0006 0023     		movs	r3, #0
 15138 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3885:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15139              		.loc 1 3885 5 is_stmt 1 view .LVU4090
 15140              	.LVL1790:
3886:Core/Src/bno055.c **** 
 15141              		.loc 1 3886 5 view .LVU4091
3886:Core/Src/bno055.c **** 
 15142              		.loc 1 3886 8 is_stmt 0 view .LVU4092
 15143 000c 8DF80530 		strb	r3, [sp, #5]
3890:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15144              		.loc 1 3890 5 is_stmt 1 view .LVU4093
3890:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15145              		.loc 1 3890 16 is_stmt 0 view .LVU4094
 15146 0010 0DF10500 		add	r0, sp, #5
 15147              	.LVL1791:
3890:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15148              		.loc 1 3890 16 view .LVU4095
 15149 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15150              	.LVL1792:
 15151 0018 0446     		mov	r4, r0
 15152              	.LVL1793:
3891:Core/Src/bno055.c ****     {
 15153              		.loc 1 3891 5 is_stmt 1 view .LVU4096
3891:Core/Src/bno055.c ****     {
 15154              		.loc 1 3891 23 is_stmt 0 view .LVU4097
 15155 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3891:Core/Src/bno055.c ****     {
 15156              		.loc 1 3891 8 view .LVU4098
 15157 001e B3B9     		cbnz	r3, .L1089
 15158              	.L1084:
3895:Core/Src/bno055.c ****     {
 15159              		.loc 1 3895 5 is_stmt 1 view .LVU4099
3895:Core/Src/bno055.c ****     {
 15160              		.loc 1 3895 8 is_stmt 0 view .LVU4100
 15161 0020 E4B9     		cbnz	r4, .L1086
3898:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15162              		.loc 1 3898 9 is_stmt 1 view .LVU4101
3898:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15163              		.loc 1 3898 21 is_stmt 0 view .LVU4102
 15164 0022 0DF10600 		add	r0, sp, #6
 15165 0026 FFF7FEFF 		bl	bno055_read_euler_h
 15166              	.LVL1794:
3898:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15167              		.loc 1 3898 18 view .LVU4103
ARM GAS  /tmp/ccWoU29M.s 			page 447


 15168 002a 54FA80F4 		uxtab	r4, r4, r0
 15169              	.LVL1795:
3898:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15170              		.loc 1 3898 18 view .LVU4104
 15171 002e 64B2     		sxtb	r4, r4
 15172              	.LVL1796:
3899:Core/Src/bno055.c ****         {
 15173              		.loc 1 3899 9 is_stmt 1 view .LVU4105
3899:Core/Src/bno055.c ****         {
 15174              		.loc 1 3899 12 is_stmt 0 view .LVU4106
 15175 0030 BCB9     		cbnz	r4, .L1087
3902:Core/Src/bno055.c ****             *euler_h_f = data_f;
 15176              		.loc 1 3902 13 is_stmt 1 view .LVU4107
3902:Core/Src/bno055.c ****             *euler_h_f = data_f;
 15177              		.loc 1 3902 46 is_stmt 0 view .LVU4108
 15178 0032 BDF90600 		ldrsh	r0, [sp, #6]
 15179 0036 FFF7FEFF 		bl	__aeabi_i2d
 15180              	.LVL1797:
 15181 003a 0022     		movs	r2, #0
 15182 003c 0A4B     		ldr	r3, .L1090
 15183 003e FFF7FEFF 		bl	__aeabi_dmul
 15184              	.LVL1798:
3902:Core/Src/bno055.c ****             *euler_h_f = data_f;
 15185              		.loc 1 3902 20 view .LVU4109
 15186 0042 FFF7FEFF 		bl	__aeabi_d2f
 15187              	.LVL1799:
3903:Core/Src/bno055.c ****         }
 15188              		.loc 1 3903 13 is_stmt 1 view .LVU4110
3903:Core/Src/bno055.c ****         }
 15189              		.loc 1 3903 24 is_stmt 0 view .LVU4111
 15190 0046 2860     		str	r0, [r5]	@ float
 15191              	.LVL1800:
 15192              	.L1085:
3915:Core/Src/bno055.c **** }
 15193              		.loc 1 3915 5 is_stmt 1 view .LVU4112
3916:Core/Src/bno055.c **** 
 15194              		.loc 1 3916 1 is_stmt 0 view .LVU4113
 15195 0048 2046     		mov	r0, r4
 15196 004a 03B0     		add	sp, sp, #12
 15197              	.LCFI491:
 15198              		.cfi_remember_state
 15199              		.cfi_def_cfa_offset 12
 15200              		@ sp needed
 15201 004c 30BD     		pop	{r4, r5, pc}
 15202              	.LVL1801:
 15203              	.L1089:
 15204              	.LCFI492:
 15205              		.cfi_restore_state
3893:Core/Src/bno055.c ****     }
 15206              		.loc 1 3893 9 is_stmt 1 view .LVU4114
3893:Core/Src/bno055.c ****     }
 15207              		.loc 1 3893 21 is_stmt 0 view .LVU4115
 15208 004e 0020     		movs	r0, #0
 15209 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 15210              	.LVL1802:
3893:Core/Src/bno055.c ****     }
 15211              		.loc 1 3893 18 view .LVU4116
ARM GAS  /tmp/ccWoU29M.s 			page 448


 15212 0054 54FA80F4 		uxtab	r4, r4, r0
 15213              	.LVL1803:
3893:Core/Src/bno055.c ****     }
 15214              		.loc 1 3893 18 view .LVU4117
 15215 0058 64B2     		sxtb	r4, r4
 15216              	.LVL1804:
3893:Core/Src/bno055.c ****     }
 15217              		.loc 1 3893 18 view .LVU4118
 15218 005a E1E7     		b	.L1084
 15219              	.L1086:
3912:Core/Src/bno055.c ****     }
 15220              		.loc 1 3912 18 view .LVU4119
 15221 005c 4FF0FF34 		mov	r4, #-1
 15222              	.LVL1805:
3912:Core/Src/bno055.c ****     }
 15223              		.loc 1 3912 18 view .LVU4120
 15224 0060 F2E7     		b	.L1085
 15225              	.LVL1806:
 15226              	.L1087:
3907:Core/Src/bno055.c ****         }
 15227              		.loc 1 3907 22 view .LVU4121
 15228 0062 4FF0FF34 		mov	r4, #-1
 15229              	.LVL1807:
3907:Core/Src/bno055.c ****         }
 15230              		.loc 1 3907 22 view .LVU4122
 15231 0066 EFE7     		b	.L1085
 15232              	.L1091:
 15233              		.align	2
 15234              	.L1090:
 15235 0068 0000B03F 		.word	1068498944
 15236              		.cfi_endproc
 15237              	.LFE61:
 15239              		.section	.text.bno055_convert_float_euler_h_rad,"ax",%progbits
 15240              		.align	1
 15241              		.global	bno055_convert_float_euler_h_rad
 15242              		.syntax unified
 15243              		.thumb
 15244              		.thumb_func
 15245              		.fpu fpv4-sp-d16
 15247              	bno055_convert_float_euler_h_rad:
 15248              	.LVL1808:
 15249              	.LFB62:
3931:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15250              		.loc 1 3931 1 is_stmt 1 view -0
 15251              		.cfi_startproc
 15252              		@ args = 0, pretend = 0, frame = 8
 15253              		@ frame_needed = 0, uses_anonymous_args = 0
3931:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15254              		.loc 1 3931 1 is_stmt 0 view .LVU4124
 15255 0000 30B5     		push	{r4, r5, lr}
 15256              	.LCFI493:
 15257              		.cfi_def_cfa_offset 12
 15258              		.cfi_offset 4, -12
 15259              		.cfi_offset 5, -8
 15260              		.cfi_offset 14, -4
 15261 0002 83B0     		sub	sp, sp, #12
 15262              	.LCFI494:
ARM GAS  /tmp/ccWoU29M.s 			page 449


 15263              		.cfi_def_cfa_offset 24
 15264 0004 0546     		mov	r5, r0
3932:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
 15265              		.loc 1 3932 5 is_stmt 1 view .LVU4125
 15266              	.LVL1809:
3933:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15267              		.loc 1 3933 5 view .LVU4126
3933:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15268              		.loc 1 3933 9 is_stmt 0 view .LVU4127
 15269 0006 0023     		movs	r3, #0
 15270 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3934:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15271              		.loc 1 3934 5 is_stmt 1 view .LVU4128
 15272              	.LVL1810:
3935:Core/Src/bno055.c **** 
 15273              		.loc 1 3935 5 view .LVU4129
3935:Core/Src/bno055.c **** 
 15274              		.loc 1 3935 8 is_stmt 0 view .LVU4130
 15275 000c 8DF80530 		strb	r3, [sp, #5]
3937:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15276              		.loc 1 3937 5 is_stmt 1 view .LVU4131
3937:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15277              		.loc 1 3937 16 is_stmt 0 view .LVU4132
 15278 0010 0DF10500 		add	r0, sp, #5
 15279              	.LVL1811:
3937:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15280              		.loc 1 3937 16 view .LVU4133
 15281 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15282              	.LVL1812:
 15283 0018 0446     		mov	r4, r0
 15284              	.LVL1813:
3938:Core/Src/bno055.c ****     {
 15285              		.loc 1 3938 5 is_stmt 1 view .LVU4134
3938:Core/Src/bno055.c ****     {
 15286              		.loc 1 3938 23 is_stmt 0 view .LVU4135
 15287 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3938:Core/Src/bno055.c ****     {
 15288              		.loc 1 3938 8 view .LVU4136
 15289 001e 012B     		cmp	r3, #1
 15290 0020 16D1     		bne	.L1098
 15291              	.L1093:
3944:Core/Src/bno055.c ****     {
 15292              		.loc 1 3944 5 is_stmt 1 view .LVU4137
3944:Core/Src/bno055.c ****     {
 15293              		.loc 1 3944 8 is_stmt 0 view .LVU4138
 15294 0022 E4B9     		cbnz	r4, .L1095
3947:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15295              		.loc 1 3947 9 is_stmt 1 view .LVU4139
3947:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15296              		.loc 1 3947 21 is_stmt 0 view .LVU4140
 15297 0024 0DF10600 		add	r0, sp, #6
 15298 0028 FFF7FEFF 		bl	bno055_read_euler_h
 15299              	.LVL1814:
3947:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15300              		.loc 1 3947 18 view .LVU4141
 15301 002c 54FA80F4 		uxtab	r4, r4, r0
 15302              	.LVL1815:
ARM GAS  /tmp/ccWoU29M.s 			page 450


3947:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15303              		.loc 1 3947 18 view .LVU4142
 15304 0030 64B2     		sxtb	r4, r4
 15305              	.LVL1816:
3948:Core/Src/bno055.c ****         {
 15306              		.loc 1 3948 9 is_stmt 1 view .LVU4143
3948:Core/Src/bno055.c ****         {
 15307              		.loc 1 3948 12 is_stmt 0 view .LVU4144
 15308 0032 BCB9     		cbnz	r4, .L1096
3951:Core/Src/bno055.c ****             *euler_h_f = data_f;
 15309              		.loc 1 3951 13 is_stmt 1 view .LVU4145
3951:Core/Src/bno055.c ****             *euler_h_f = data_f;
 15310              		.loc 1 3951 46 is_stmt 0 view .LVU4146
 15311 0034 BDF90600 		ldrsh	r0, [sp, #6]
 15312 0038 FFF7FEFF 		bl	__aeabi_i2d
 15313              	.LVL1817:
 15314 003c 0022     		movs	r2, #0
 15315 003e 0B4B     		ldr	r3, .L1099
 15316 0040 FFF7FEFF 		bl	__aeabi_ddiv
 15317              	.LVL1818:
3951:Core/Src/bno055.c ****             *euler_h_f = data_f;
 15318              		.loc 1 3951 20 view .LVU4147
 15319 0044 FFF7FEFF 		bl	__aeabi_d2f
 15320              	.LVL1819:
3952:Core/Src/bno055.c ****         }
 15321              		.loc 1 3952 13 is_stmt 1 view .LVU4148
3952:Core/Src/bno055.c ****         }
 15322              		.loc 1 3952 24 is_stmt 0 view .LVU4149
 15323 0048 2860     		str	r0, [r5]	@ float
 15324              	.LVL1820:
 15325              	.L1094:
3964:Core/Src/bno055.c **** }
 15326              		.loc 1 3964 5 is_stmt 1 view .LVU4150
3965:Core/Src/bno055.c **** 
 15327              		.loc 1 3965 1 is_stmt 0 view .LVU4151
 15328 004a 2046     		mov	r0, r4
 15329 004c 03B0     		add	sp, sp, #12
 15330              	.LCFI495:
 15331              		.cfi_remember_state
 15332              		.cfi_def_cfa_offset 12
 15333              		@ sp needed
 15334 004e 30BD     		pop	{r4, r5, pc}
 15335              	.LVL1821:
 15336              	.L1098:
 15337              	.LCFI496:
 15338              		.cfi_restore_state
3942:Core/Src/bno055.c ****     }
 15339              		.loc 1 3942 9 is_stmt 1 view .LVU4152
3942:Core/Src/bno055.c ****     }
 15340              		.loc 1 3942 21 is_stmt 0 view .LVU4153
 15341 0050 0120     		movs	r0, #1
 15342 0052 FFF7FEFF 		bl	bno055_set_euler_unit
 15343              	.LVL1822:
3942:Core/Src/bno055.c ****     }
 15344              		.loc 1 3942 18 view .LVU4154
 15345 0056 54FA80F4 		uxtab	r4, r4, r0
 15346              	.LVL1823:
ARM GAS  /tmp/ccWoU29M.s 			page 451


3942:Core/Src/bno055.c ****     }
 15347              		.loc 1 3942 18 view .LVU4155
 15348 005a 64B2     		sxtb	r4, r4
 15349              	.LVL1824:
3942:Core/Src/bno055.c ****     }
 15350              		.loc 1 3942 18 view .LVU4156
 15351 005c E1E7     		b	.L1093
 15352              	.L1095:
3961:Core/Src/bno055.c ****     }
 15353              		.loc 1 3961 18 view .LVU4157
 15354 005e 4FF0FF34 		mov	r4, #-1
 15355              	.LVL1825:
3961:Core/Src/bno055.c ****     }
 15356              		.loc 1 3961 18 view .LVU4158
 15357 0062 F2E7     		b	.L1094
 15358              	.LVL1826:
 15359              	.L1096:
3956:Core/Src/bno055.c ****         }
 15360              		.loc 1 3956 22 view .LVU4159
 15361 0064 4FF0FF34 		mov	r4, #-1
 15362              	.LVL1827:
3956:Core/Src/bno055.c ****         }
 15363              		.loc 1 3956 22 view .LVU4160
 15364 0068 EFE7     		b	.L1094
 15365              	.L1100:
 15366 006a 00BF     		.align	2
 15367              	.L1099:
 15368 006c 00208C40 		.word	1082925056
 15369              		.cfi_endproc
 15370              	.LFE62:
 15372              		.section	.text.bno055_convert_float_euler_r_deg,"ax",%progbits
 15373              		.align	1
 15374              		.global	bno055_convert_float_euler_r_deg
 15375              		.syntax unified
 15376              		.thumb
 15377              		.thumb_func
 15378              		.fpu fpv4-sp-d16
 15380              	bno055_convert_float_euler_r_deg:
 15381              	.LVL1828:
 15382              	.LFB63:
3979:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15383              		.loc 1 3979 1 is_stmt 1 view -0
 15384              		.cfi_startproc
 15385              		@ args = 0, pretend = 0, frame = 8
 15386              		@ frame_needed = 0, uses_anonymous_args = 0
3979:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15387              		.loc 1 3979 1 is_stmt 0 view .LVU4162
 15388 0000 30B5     		push	{r4, r5, lr}
 15389              	.LCFI497:
 15390              		.cfi_def_cfa_offset 12
 15391              		.cfi_offset 4, -12
 15392              		.cfi_offset 5, -8
 15393              		.cfi_offset 14, -4
 15394 0002 83B0     		sub	sp, sp, #12
 15395              	.LCFI498:
 15396              		.cfi_def_cfa_offset 24
 15397 0004 0546     		mov	r5, r0
ARM GAS  /tmp/ccWoU29M.s 			page 452


3980:Core/Src/bno055.c ****     s16 reg_euler_r = BNO055_INIT_VALUE;
 15398              		.loc 1 3980 5 is_stmt 1 view .LVU4163
 15399              	.LVL1829:
3981:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15400              		.loc 1 3981 5 view .LVU4164
3981:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15401              		.loc 1 3981 9 is_stmt 0 view .LVU4165
 15402 0006 0023     		movs	r3, #0
 15403 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3982:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15404              		.loc 1 3982 5 is_stmt 1 view .LVU4166
 15405              	.LVL1830:
3983:Core/Src/bno055.c **** 
 15406              		.loc 1 3983 5 view .LVU4167
3983:Core/Src/bno055.c **** 
 15407              		.loc 1 3983 8 is_stmt 0 view .LVU4168
 15408 000c 8DF80530 		strb	r3, [sp, #5]
3987:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15409              		.loc 1 3987 5 is_stmt 1 view .LVU4169
3987:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15410              		.loc 1 3987 16 is_stmt 0 view .LVU4170
 15411 0010 0DF10500 		add	r0, sp, #5
 15412              	.LVL1831:
3987:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15413              		.loc 1 3987 16 view .LVU4171
 15414 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15415              	.LVL1832:
 15416 0018 0446     		mov	r4, r0
 15417              	.LVL1833:
3988:Core/Src/bno055.c ****     {
 15418              		.loc 1 3988 5 is_stmt 1 view .LVU4172
3988:Core/Src/bno055.c ****     {
 15419              		.loc 1 3988 23 is_stmt 0 view .LVU4173
 15420 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3988:Core/Src/bno055.c ****     {
 15421              		.loc 1 3988 8 view .LVU4174
 15422 001e B3B9     		cbnz	r3, .L1107
 15423              	.L1102:
3992:Core/Src/bno055.c ****     {
 15424              		.loc 1 3992 5 is_stmt 1 view .LVU4175
3992:Core/Src/bno055.c ****     {
 15425              		.loc 1 3992 8 is_stmt 0 view .LVU4176
 15426 0020 E4B9     		cbnz	r4, .L1104
3995:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15427              		.loc 1 3995 9 is_stmt 1 view .LVU4177
3995:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15428              		.loc 1 3995 21 is_stmt 0 view .LVU4178
 15429 0022 0DF10600 		add	r0, sp, #6
 15430 0026 FFF7FEFF 		bl	bno055_read_euler_r
 15431              	.LVL1834:
3995:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15432              		.loc 1 3995 18 view .LVU4179
 15433 002a 54FA80F4 		uxtab	r4, r4, r0
 15434              	.LVL1835:
3995:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15435              		.loc 1 3995 18 view .LVU4180
 15436 002e 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccWoU29M.s 			page 453


 15437              	.LVL1836:
3996:Core/Src/bno055.c ****         {
 15438              		.loc 1 3996 9 is_stmt 1 view .LVU4181
3996:Core/Src/bno055.c ****         {
 15439              		.loc 1 3996 12 is_stmt 0 view .LVU4182
 15440 0030 BCB9     		cbnz	r4, .L1105
3999:Core/Src/bno055.c ****             *euler_r_f = data_f;
 15441              		.loc 1 3999 13 is_stmt 1 view .LVU4183
3999:Core/Src/bno055.c ****             *euler_r_f = data_f;
 15442              		.loc 1 3999 42 is_stmt 0 view .LVU4184
 15443 0032 BDF90600 		ldrsh	r0, [sp, #6]
 15444 0036 FFF7FEFF 		bl	__aeabi_i2d
 15445              	.LVL1837:
 15446 003a 0022     		movs	r2, #0
 15447 003c 0A4B     		ldr	r3, .L1108
 15448 003e FFF7FEFF 		bl	__aeabi_dmul
 15449              	.LVL1838:
3999:Core/Src/bno055.c ****             *euler_r_f = data_f;
 15450              		.loc 1 3999 20 view .LVU4185
 15451 0042 FFF7FEFF 		bl	__aeabi_d2f
 15452              	.LVL1839:
4000:Core/Src/bno055.c ****         }
 15453              		.loc 1 4000 13 is_stmt 1 view .LVU4186
4000:Core/Src/bno055.c ****         }
 15454              		.loc 1 4000 24 is_stmt 0 view .LVU4187
 15455 0046 2860     		str	r0, [r5]	@ float
 15456              	.LVL1840:
 15457              	.L1103:
4012:Core/Src/bno055.c **** }
 15458              		.loc 1 4012 5 is_stmt 1 view .LVU4188
4013:Core/Src/bno055.c **** 
 15459              		.loc 1 4013 1 is_stmt 0 view .LVU4189
 15460 0048 2046     		mov	r0, r4
 15461 004a 03B0     		add	sp, sp, #12
 15462              	.LCFI499:
 15463              		.cfi_remember_state
 15464              		.cfi_def_cfa_offset 12
 15465              		@ sp needed
 15466 004c 30BD     		pop	{r4, r5, pc}
 15467              	.LVL1841:
 15468              	.L1107:
 15469              	.LCFI500:
 15470              		.cfi_restore_state
3990:Core/Src/bno055.c ****     }
 15471              		.loc 1 3990 9 is_stmt 1 view .LVU4190
3990:Core/Src/bno055.c ****     }
 15472              		.loc 1 3990 21 is_stmt 0 view .LVU4191
 15473 004e 0020     		movs	r0, #0
 15474 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 15475              	.LVL1842:
3990:Core/Src/bno055.c ****     }
 15476              		.loc 1 3990 18 view .LVU4192
 15477 0054 54FA80F4 		uxtab	r4, r4, r0
 15478              	.LVL1843:
3990:Core/Src/bno055.c ****     }
 15479              		.loc 1 3990 18 view .LVU4193
 15480 0058 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccWoU29M.s 			page 454


 15481              	.LVL1844:
3990:Core/Src/bno055.c ****     }
 15482              		.loc 1 3990 18 view .LVU4194
 15483 005a E1E7     		b	.L1102
 15484              	.L1104:
4009:Core/Src/bno055.c ****     }
 15485              		.loc 1 4009 18 view .LVU4195
 15486 005c 4FF0FF34 		mov	r4, #-1
 15487              	.LVL1845:
4009:Core/Src/bno055.c ****     }
 15488              		.loc 1 4009 18 view .LVU4196
 15489 0060 F2E7     		b	.L1103
 15490              	.LVL1846:
 15491              	.L1105:
4004:Core/Src/bno055.c ****         }
 15492              		.loc 1 4004 22 view .LVU4197
 15493 0062 4FF0FF34 		mov	r4, #-1
 15494              	.LVL1847:
4004:Core/Src/bno055.c ****         }
 15495              		.loc 1 4004 22 view .LVU4198
 15496 0066 EFE7     		b	.L1103
 15497              	.L1109:
 15498              		.align	2
 15499              	.L1108:
 15500 0068 0000B03F 		.word	1068498944
 15501              		.cfi_endproc
 15502              	.LFE63:
 15504              		.section	.text.bno055_convert_float_euler_r_rad,"ax",%progbits
 15505              		.align	1
 15506              		.global	bno055_convert_float_euler_r_rad
 15507              		.syntax unified
 15508              		.thumb
 15509              		.thumb_func
 15510              		.fpu fpv4-sp-d16
 15512              	bno055_convert_float_euler_r_rad:
 15513              	.LVL1848:
 15514              	.LFB64:
4027:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15515              		.loc 1 4027 1 is_stmt 1 view -0
 15516              		.cfi_startproc
 15517              		@ args = 0, pretend = 0, frame = 8
 15518              		@ frame_needed = 0, uses_anonymous_args = 0
4027:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15519              		.loc 1 4027 1 is_stmt 0 view .LVU4200
 15520 0000 30B5     		push	{r4, r5, lr}
 15521              	.LCFI501:
 15522              		.cfi_def_cfa_offset 12
 15523              		.cfi_offset 4, -12
 15524              		.cfi_offset 5, -8
 15525              		.cfi_offset 14, -4
 15526 0002 83B0     		sub	sp, sp, #12
 15527              	.LCFI502:
 15528              		.cfi_def_cfa_offset 24
 15529 0004 0546     		mov	r5, r0
4028:Core/Src/bno055.c ****     s16 reg_euler_r_f = BNO055_INIT_VALUE;
 15530              		.loc 1 4028 5 is_stmt 1 view .LVU4201
 15531              	.LVL1849:
ARM GAS  /tmp/ccWoU29M.s 			page 455


4029:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15532              		.loc 1 4029 5 view .LVU4202
4029:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15533              		.loc 1 4029 9 is_stmt 0 view .LVU4203
 15534 0006 0023     		movs	r3, #0
 15535 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4030:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15536              		.loc 1 4030 5 is_stmt 1 view .LVU4204
 15537              	.LVL1850:
4031:Core/Src/bno055.c **** 
 15538              		.loc 1 4031 5 view .LVU4205
4031:Core/Src/bno055.c **** 
 15539              		.loc 1 4031 8 is_stmt 0 view .LVU4206
 15540 000c 8DF80530 		strb	r3, [sp, #5]
4035:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15541              		.loc 1 4035 5 is_stmt 1 view .LVU4207
4035:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15542              		.loc 1 4035 16 is_stmt 0 view .LVU4208
 15543 0010 0DF10500 		add	r0, sp, #5
 15544              	.LVL1851:
4035:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15545              		.loc 1 4035 16 view .LVU4209
 15546 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15547              	.LVL1852:
 15548 0018 0446     		mov	r4, r0
 15549              	.LVL1853:
4036:Core/Src/bno055.c ****     {
 15550              		.loc 1 4036 5 is_stmt 1 view .LVU4210
4036:Core/Src/bno055.c ****     {
 15551              		.loc 1 4036 23 is_stmt 0 view .LVU4211
 15552 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4036:Core/Src/bno055.c ****     {
 15553              		.loc 1 4036 8 view .LVU4212
 15554 001e 012B     		cmp	r3, #1
 15555 0020 16D1     		bne	.L1116
 15556              	.L1111:
4040:Core/Src/bno055.c ****     {
 15557              		.loc 1 4040 5 is_stmt 1 view .LVU4213
4040:Core/Src/bno055.c ****     {
 15558              		.loc 1 4040 8 is_stmt 0 view .LVU4214
 15559 0022 E4B9     		cbnz	r4, .L1113
4043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15560              		.loc 1 4043 9 is_stmt 1 view .LVU4215
4043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15561              		.loc 1 4043 21 is_stmt 0 view .LVU4216
 15562 0024 0DF10600 		add	r0, sp, #6
 15563 0028 FFF7FEFF 		bl	bno055_read_euler_r
 15564              	.LVL1854:
4043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15565              		.loc 1 4043 18 view .LVU4217
 15566 002c 54FA80F4 		uxtab	r4, r4, r0
 15567              	.LVL1855:
4043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15568              		.loc 1 4043 18 view .LVU4218
 15569 0030 64B2     		sxtb	r4, r4
 15570              	.LVL1856:
4044:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 456


 15571              		.loc 1 4044 9 is_stmt 1 view .LVU4219
4044:Core/Src/bno055.c ****         {
 15572              		.loc 1 4044 12 is_stmt 0 view .LVU4220
 15573 0032 BCB9     		cbnz	r4, .L1114
4047:Core/Src/bno055.c ****             *euler_r_f = data_f;
 15574              		.loc 1 4047 13 is_stmt 1 view .LVU4221
4047:Core/Src/bno055.c ****             *euler_r_f = data_f;
 15575              		.loc 1 4047 44 is_stmt 0 view .LVU4222
 15576 0034 BDF90600 		ldrsh	r0, [sp, #6]
 15577 0038 FFF7FEFF 		bl	__aeabi_i2d
 15578              	.LVL1857:
 15579 003c 0022     		movs	r2, #0
 15580 003e 0B4B     		ldr	r3, .L1117
 15581 0040 FFF7FEFF 		bl	__aeabi_ddiv
 15582              	.LVL1858:
4047:Core/Src/bno055.c ****             *euler_r_f = data_f;
 15583              		.loc 1 4047 20 view .LVU4223
 15584 0044 FFF7FEFF 		bl	__aeabi_d2f
 15585              	.LVL1859:
4048:Core/Src/bno055.c ****         }
 15586              		.loc 1 4048 13 is_stmt 1 view .LVU4224
4048:Core/Src/bno055.c ****         }
 15587              		.loc 1 4048 24 is_stmt 0 view .LVU4225
 15588 0048 2860     		str	r0, [r5]	@ float
 15589              	.LVL1860:
 15590              	.L1112:
4060:Core/Src/bno055.c **** }
 15591              		.loc 1 4060 5 is_stmt 1 view .LVU4226
4061:Core/Src/bno055.c **** 
 15592              		.loc 1 4061 1 is_stmt 0 view .LVU4227
 15593 004a 2046     		mov	r0, r4
 15594 004c 03B0     		add	sp, sp, #12
 15595              	.LCFI503:
 15596              		.cfi_remember_state
 15597              		.cfi_def_cfa_offset 12
 15598              		@ sp needed
 15599 004e 30BD     		pop	{r4, r5, pc}
 15600              	.LVL1861:
 15601              	.L1116:
 15602              	.LCFI504:
 15603              		.cfi_restore_state
4038:Core/Src/bno055.c ****     }
 15604              		.loc 1 4038 9 is_stmt 1 view .LVU4228
4038:Core/Src/bno055.c ****     }
 15605              		.loc 1 4038 21 is_stmt 0 view .LVU4229
 15606 0050 0120     		movs	r0, #1
 15607 0052 FFF7FEFF 		bl	bno055_set_euler_unit
 15608              	.LVL1862:
4038:Core/Src/bno055.c ****     }
 15609              		.loc 1 4038 18 view .LVU4230
 15610 0056 54FA80F4 		uxtab	r4, r4, r0
 15611              	.LVL1863:
4038:Core/Src/bno055.c ****     }
 15612              		.loc 1 4038 18 view .LVU4231
 15613 005a 64B2     		sxtb	r4, r4
 15614              	.LVL1864:
4038:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 457


 15615              		.loc 1 4038 18 view .LVU4232
 15616 005c E1E7     		b	.L1111
 15617              	.L1113:
4057:Core/Src/bno055.c ****     }
 15618              		.loc 1 4057 18 view .LVU4233
 15619 005e 4FF0FF34 		mov	r4, #-1
 15620              	.LVL1865:
4057:Core/Src/bno055.c ****     }
 15621              		.loc 1 4057 18 view .LVU4234
 15622 0062 F2E7     		b	.L1112
 15623              	.LVL1866:
 15624              	.L1114:
4052:Core/Src/bno055.c ****         }
 15625              		.loc 1 4052 22 view .LVU4235
 15626 0064 4FF0FF34 		mov	r4, #-1
 15627              	.LVL1867:
4052:Core/Src/bno055.c ****         }
 15628              		.loc 1 4052 22 view .LVU4236
 15629 0068 EFE7     		b	.L1112
 15630              	.L1118:
 15631 006a 00BF     		.align	2
 15632              	.L1117:
 15633 006c 00208C40 		.word	1082925056
 15634              		.cfi_endproc
 15635              	.LFE64:
 15637              		.section	.text.bno055_convert_float_euler_p_deg,"ax",%progbits
 15638              		.align	1
 15639              		.global	bno055_convert_float_euler_p_deg
 15640              		.syntax unified
 15641              		.thumb
 15642              		.thumb_func
 15643              		.fpu fpv4-sp-d16
 15645              	bno055_convert_float_euler_p_deg:
 15646              	.LVL1868:
 15647              	.LFB65:
4075:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15648              		.loc 1 4075 1 is_stmt 1 view -0
 15649              		.cfi_startproc
 15650              		@ args = 0, pretend = 0, frame = 8
 15651              		@ frame_needed = 0, uses_anonymous_args = 0
4075:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15652              		.loc 1 4075 1 is_stmt 0 view .LVU4238
 15653 0000 30B5     		push	{r4, r5, lr}
 15654              	.LCFI505:
 15655              		.cfi_def_cfa_offset 12
 15656              		.cfi_offset 4, -12
 15657              		.cfi_offset 5, -8
 15658              		.cfi_offset 14, -4
 15659 0002 83B0     		sub	sp, sp, #12
 15660              	.LCFI506:
 15661              		.cfi_def_cfa_offset 24
 15662 0004 0546     		mov	r5, r0
4076:Core/Src/bno055.c ****     s16 reg_euler_p_f = BNO055_INIT_VALUE;
 15663              		.loc 1 4076 5 is_stmt 1 view .LVU4239
 15664              	.LVL1869:
4077:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15665              		.loc 1 4077 5 view .LVU4240
ARM GAS  /tmp/ccWoU29M.s 			page 458


4077:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15666              		.loc 1 4077 9 is_stmt 0 view .LVU4241
 15667 0006 0023     		movs	r3, #0
 15668 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4078:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15669              		.loc 1 4078 5 is_stmt 1 view .LVU4242
 15670              	.LVL1870:
4079:Core/Src/bno055.c **** 
 15671              		.loc 1 4079 5 view .LVU4243
4079:Core/Src/bno055.c **** 
 15672              		.loc 1 4079 8 is_stmt 0 view .LVU4244
 15673 000c 8DF80530 		strb	r3, [sp, #5]
4083:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15674              		.loc 1 4083 5 is_stmt 1 view .LVU4245
4083:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15675              		.loc 1 4083 16 is_stmt 0 view .LVU4246
 15676 0010 0DF10500 		add	r0, sp, #5
 15677              	.LVL1871:
4083:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15678              		.loc 1 4083 16 view .LVU4247
 15679 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15680              	.LVL1872:
 15681 0018 0446     		mov	r4, r0
 15682              	.LVL1873:
4084:Core/Src/bno055.c ****     {
 15683              		.loc 1 4084 5 is_stmt 1 view .LVU4248
4084:Core/Src/bno055.c ****     {
 15684              		.loc 1 4084 23 is_stmt 0 view .LVU4249
 15685 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4084:Core/Src/bno055.c ****     {
 15686              		.loc 1 4084 8 view .LVU4250
 15687 001e B3B9     		cbnz	r3, .L1125
 15688              	.L1120:
4088:Core/Src/bno055.c ****     {
 15689              		.loc 1 4088 5 is_stmt 1 view .LVU4251
4088:Core/Src/bno055.c ****     {
 15690              		.loc 1 4088 8 is_stmt 0 view .LVU4252
 15691 0020 E4B9     		cbnz	r4, .L1122
4091:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15692              		.loc 1 4091 9 is_stmt 1 view .LVU4253
4091:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15693              		.loc 1 4091 21 is_stmt 0 view .LVU4254
 15694 0022 0DF10600 		add	r0, sp, #6
 15695 0026 FFF7FEFF 		bl	bno055_read_euler_p
 15696              	.LVL1874:
4091:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15697              		.loc 1 4091 18 view .LVU4255
 15698 002a 54FA80F4 		uxtab	r4, r4, r0
 15699              	.LVL1875:
4091:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15700              		.loc 1 4091 18 view .LVU4256
 15701 002e 64B2     		sxtb	r4, r4
 15702              	.LVL1876:
4092:Core/Src/bno055.c ****         {
 15703              		.loc 1 4092 9 is_stmt 1 view .LVU4257
4092:Core/Src/bno055.c ****         {
 15704              		.loc 1 4092 12 is_stmt 0 view .LVU4258
ARM GAS  /tmp/ccWoU29M.s 			page 459


 15705 0030 BCB9     		cbnz	r4, .L1123
4095:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15706              		.loc 1 4095 13 is_stmt 1 view .LVU4259
4095:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15707              		.loc 1 4095 44 is_stmt 0 view .LVU4260
 15708 0032 BDF90600 		ldrsh	r0, [sp, #6]
 15709 0036 FFF7FEFF 		bl	__aeabi_i2d
 15710              	.LVL1877:
 15711 003a 0022     		movs	r2, #0
 15712 003c 0A4B     		ldr	r3, .L1126
 15713 003e FFF7FEFF 		bl	__aeabi_dmul
 15714              	.LVL1878:
4095:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15715              		.loc 1 4095 20 view .LVU4261
 15716 0042 FFF7FEFF 		bl	__aeabi_d2f
 15717              	.LVL1879:
4096:Core/Src/bno055.c ****         }
 15718              		.loc 1 4096 13 is_stmt 1 view .LVU4262
4096:Core/Src/bno055.c ****         }
 15719              		.loc 1 4096 24 is_stmt 0 view .LVU4263
 15720 0046 2860     		str	r0, [r5]	@ float
 15721              	.LVL1880:
 15722              	.L1121:
4108:Core/Src/bno055.c **** }
 15723              		.loc 1 4108 5 is_stmt 1 view .LVU4264
4109:Core/Src/bno055.c **** 
 15724              		.loc 1 4109 1 is_stmt 0 view .LVU4265
 15725 0048 2046     		mov	r0, r4
 15726 004a 03B0     		add	sp, sp, #12
 15727              	.LCFI507:
 15728              		.cfi_remember_state
 15729              		.cfi_def_cfa_offset 12
 15730              		@ sp needed
 15731 004c 30BD     		pop	{r4, r5, pc}
 15732              	.LVL1881:
 15733              	.L1125:
 15734              	.LCFI508:
 15735              		.cfi_restore_state
4086:Core/Src/bno055.c ****     }
 15736              		.loc 1 4086 9 is_stmt 1 view .LVU4266
4086:Core/Src/bno055.c ****     }
 15737              		.loc 1 4086 21 is_stmt 0 view .LVU4267
 15738 004e 0020     		movs	r0, #0
 15739 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 15740              	.LVL1882:
4086:Core/Src/bno055.c ****     }
 15741              		.loc 1 4086 18 view .LVU4268
 15742 0054 54FA80F4 		uxtab	r4, r4, r0
 15743              	.LVL1883:
4086:Core/Src/bno055.c ****     }
 15744              		.loc 1 4086 18 view .LVU4269
 15745 0058 64B2     		sxtb	r4, r4
 15746              	.LVL1884:
4086:Core/Src/bno055.c ****     }
 15747              		.loc 1 4086 18 view .LVU4270
 15748 005a E1E7     		b	.L1120
 15749              	.L1122:
ARM GAS  /tmp/ccWoU29M.s 			page 460


4105:Core/Src/bno055.c ****     }
 15750              		.loc 1 4105 18 view .LVU4271
 15751 005c 4FF0FF34 		mov	r4, #-1
 15752              	.LVL1885:
4105:Core/Src/bno055.c ****     }
 15753              		.loc 1 4105 18 view .LVU4272
 15754 0060 F2E7     		b	.L1121
 15755              	.LVL1886:
 15756              	.L1123:
4100:Core/Src/bno055.c ****         }
 15757              		.loc 1 4100 22 view .LVU4273
 15758 0062 4FF0FF34 		mov	r4, #-1
 15759              	.LVL1887:
4100:Core/Src/bno055.c ****         }
 15760              		.loc 1 4100 22 view .LVU4274
 15761 0066 EFE7     		b	.L1121
 15762              	.L1127:
 15763              		.align	2
 15764              	.L1126:
 15765 0068 0000B03F 		.word	1068498944
 15766              		.cfi_endproc
 15767              	.LFE65:
 15769              		.section	.text.bno055_convert_float_euler_p_rad,"ax",%progbits
 15770              		.align	1
 15771              		.global	bno055_convert_float_euler_p_rad
 15772              		.syntax unified
 15773              		.thumb
 15774              		.thumb_func
 15775              		.fpu fpv4-sp-d16
 15777              	bno055_convert_float_euler_p_rad:
 15778              	.LVL1888:
 15779              	.LFB66:
4124:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15780              		.loc 1 4124 1 is_stmt 1 view -0
 15781              		.cfi_startproc
 15782              		@ args = 0, pretend = 0, frame = 8
 15783              		@ frame_needed = 0, uses_anonymous_args = 0
4124:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15784              		.loc 1 4124 1 is_stmt 0 view .LVU4276
 15785 0000 30B5     		push	{r4, r5, lr}
 15786              	.LCFI509:
 15787              		.cfi_def_cfa_offset 12
 15788              		.cfi_offset 4, -12
 15789              		.cfi_offset 5, -8
 15790              		.cfi_offset 14, -4
 15791 0002 83B0     		sub	sp, sp, #12
 15792              	.LCFI510:
 15793              		.cfi_def_cfa_offset 24
 15794 0004 0546     		mov	r5, r0
4125:Core/Src/bno055.c ****     s16 reg_euler_p_f = BNO055_INIT_VALUE;
 15795              		.loc 1 4125 5 is_stmt 1 view .LVU4277
 15796              	.LVL1889:
4126:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15797              		.loc 1 4126 5 view .LVU4278
4126:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15798              		.loc 1 4126 9 is_stmt 0 view .LVU4279
 15799 0006 0023     		movs	r3, #0
ARM GAS  /tmp/ccWoU29M.s 			page 461


 15800 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4127:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15801              		.loc 1 4127 5 is_stmt 1 view .LVU4280
 15802              	.LVL1890:
4128:Core/Src/bno055.c **** 
 15803              		.loc 1 4128 5 view .LVU4281
4128:Core/Src/bno055.c **** 
 15804              		.loc 1 4128 8 is_stmt 0 view .LVU4282
 15805 000c 8DF80530 		strb	r3, [sp, #5]
4132:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15806              		.loc 1 4132 5 is_stmt 1 view .LVU4283
4132:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15807              		.loc 1 4132 16 is_stmt 0 view .LVU4284
 15808 0010 0DF10500 		add	r0, sp, #5
 15809              	.LVL1891:
4132:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15810              		.loc 1 4132 16 view .LVU4285
 15811 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15812              	.LVL1892:
 15813 0018 0446     		mov	r4, r0
 15814              	.LVL1893:
4133:Core/Src/bno055.c ****     {
 15815              		.loc 1 4133 5 is_stmt 1 view .LVU4286
4133:Core/Src/bno055.c ****     {
 15816              		.loc 1 4133 23 is_stmt 0 view .LVU4287
 15817 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4133:Core/Src/bno055.c ****     {
 15818              		.loc 1 4133 8 view .LVU4288
 15819 001e 012B     		cmp	r3, #1
 15820 0020 16D1     		bne	.L1134
 15821              	.L1129:
4137:Core/Src/bno055.c ****     {
 15822              		.loc 1 4137 5 is_stmt 1 view .LVU4289
4137:Core/Src/bno055.c ****     {
 15823              		.loc 1 4137 8 is_stmt 0 view .LVU4290
 15824 0022 E4B9     		cbnz	r4, .L1131
4140:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15825              		.loc 1 4140 9 is_stmt 1 view .LVU4291
4140:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15826              		.loc 1 4140 21 is_stmt 0 view .LVU4292
 15827 0024 0DF10600 		add	r0, sp, #6
 15828 0028 FFF7FEFF 		bl	bno055_read_euler_p
 15829              	.LVL1894:
4140:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15830              		.loc 1 4140 18 view .LVU4293
 15831 002c 54FA80F4 		uxtab	r4, r4, r0
 15832              	.LVL1895:
4140:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15833              		.loc 1 4140 18 view .LVU4294
 15834 0030 64B2     		sxtb	r4, r4
 15835              	.LVL1896:
4141:Core/Src/bno055.c ****         {
 15836              		.loc 1 4141 9 is_stmt 1 view .LVU4295
4141:Core/Src/bno055.c ****         {
 15837              		.loc 1 4141 12 is_stmt 0 view .LVU4296
 15838 0032 BCB9     		cbnz	r4, .L1132
4144:Core/Src/bno055.c ****             *euler_p_f = data_f;
ARM GAS  /tmp/ccWoU29M.s 			page 462


 15839              		.loc 1 4144 13 is_stmt 1 view .LVU4297
4144:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15840              		.loc 1 4144 44 is_stmt 0 view .LVU4298
 15841 0034 BDF90600 		ldrsh	r0, [sp, #6]
 15842 0038 FFF7FEFF 		bl	__aeabi_i2d
 15843              	.LVL1897:
 15844 003c 0022     		movs	r2, #0
 15845 003e 0B4B     		ldr	r3, .L1135
 15846 0040 FFF7FEFF 		bl	__aeabi_ddiv
 15847              	.LVL1898:
4144:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15848              		.loc 1 4144 20 view .LVU4299
 15849 0044 FFF7FEFF 		bl	__aeabi_d2f
 15850              	.LVL1899:
4145:Core/Src/bno055.c ****         }
 15851              		.loc 1 4145 13 is_stmt 1 view .LVU4300
4145:Core/Src/bno055.c ****         }
 15852              		.loc 1 4145 24 is_stmt 0 view .LVU4301
 15853 0048 2860     		str	r0, [r5]	@ float
 15854              	.LVL1900:
 15855              	.L1130:
4157:Core/Src/bno055.c **** }
 15856              		.loc 1 4157 5 is_stmt 1 view .LVU4302
4158:Core/Src/bno055.c **** 
 15857              		.loc 1 4158 1 is_stmt 0 view .LVU4303
 15858 004a 2046     		mov	r0, r4
 15859 004c 03B0     		add	sp, sp, #12
 15860              	.LCFI511:
 15861              		.cfi_remember_state
 15862              		.cfi_def_cfa_offset 12
 15863              		@ sp needed
 15864 004e 30BD     		pop	{r4, r5, pc}
 15865              	.LVL1901:
 15866              	.L1134:
 15867              	.LCFI512:
 15868              		.cfi_restore_state
4135:Core/Src/bno055.c ****     }
 15869              		.loc 1 4135 9 is_stmt 1 view .LVU4304
4135:Core/Src/bno055.c ****     }
 15870              		.loc 1 4135 21 is_stmt 0 view .LVU4305
 15871 0050 0120     		movs	r0, #1
 15872 0052 FFF7FEFF 		bl	bno055_set_euler_unit
 15873              	.LVL1902:
4135:Core/Src/bno055.c ****     }
 15874              		.loc 1 4135 18 view .LVU4306
 15875 0056 54FA80F4 		uxtab	r4, r4, r0
 15876              	.LVL1903:
4135:Core/Src/bno055.c ****     }
 15877              		.loc 1 4135 18 view .LVU4307
 15878 005a 64B2     		sxtb	r4, r4
 15879              	.LVL1904:
4135:Core/Src/bno055.c ****     }
 15880              		.loc 1 4135 18 view .LVU4308
 15881 005c E1E7     		b	.L1129
 15882              	.L1131:
4154:Core/Src/bno055.c ****     }
 15883              		.loc 1 4154 18 view .LVU4309
ARM GAS  /tmp/ccWoU29M.s 			page 463


 15884 005e 4FF0FF34 		mov	r4, #-1
 15885              	.LVL1905:
4154:Core/Src/bno055.c ****     }
 15886              		.loc 1 4154 18 view .LVU4310
 15887 0062 F2E7     		b	.L1130
 15888              	.LVL1906:
 15889              	.L1132:
4149:Core/Src/bno055.c ****         }
 15890              		.loc 1 4149 22 view .LVU4311
 15891 0064 4FF0FF34 		mov	r4, #-1
 15892              	.LVL1907:
4149:Core/Src/bno055.c ****         }
 15893              		.loc 1 4149 22 view .LVU4312
 15894 0068 EFE7     		b	.L1130
 15895              	.L1136:
 15896 006a 00BF     		.align	2
 15897              	.L1135:
 15898 006c 00208C40 		.word	1082925056
 15899              		.cfi_endproc
 15900              	.LFE66:
 15902              		.section	.text.bno055_convert_float_euler_hpr_deg,"ax",%progbits
 15903              		.align	1
 15904              		.global	bno055_convert_float_euler_hpr_deg
 15905              		.syntax unified
 15906              		.thumb
 15907              		.thumb_func
 15908              		.fpu fpv4-sp-d16
 15910              	bno055_convert_float_euler_hpr_deg:
 15911              	.LVL1908:
 15912              	.LFB67:
4179:Core/Src/bno055.c ****     /* Variable used to return value of
 15913              		.loc 1 4179 1 is_stmt 1 view -0
 15914              		.cfi_startproc
 15915              		@ args = 0, pretend = 0, frame = 16
 15916              		@ frame_needed = 0, uses_anonymous_args = 0
4179:Core/Src/bno055.c ****     /* Variable used to return value of
 15917              		.loc 1 4179 1 is_stmt 0 view .LVU4314
 15918 0000 30B5     		push	{r4, r5, lr}
 15919              	.LCFI513:
 15920              		.cfi_def_cfa_offset 12
 15921              		.cfi_offset 4, -12
 15922              		.cfi_offset 5, -8
 15923              		.cfi_offset 14, -4
 15924 0002 85B0     		sub	sp, sp, #20
 15925              	.LCFI514:
 15926              		.cfi_def_cfa_offset 32
 15927 0004 0546     		mov	r5, r0
4182:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 15928              		.loc 1 4182 5 is_stmt 1 view .LVU4315
 15929              	.LVL1909:
4183:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15930              		.loc 1 4183 5 view .LVU4316
4183:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15931              		.loc 1 4183 27 is_stmt 0 view .LVU4317
 15932 0006 0023     		movs	r3, #0
 15933 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 15934 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
ARM GAS  /tmp/ccWoU29M.s 			page 464


 15935 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
4184:Core/Src/bno055.c **** 
 15936              		.loc 1 4184 5 is_stmt 1 view .LVU4318
4184:Core/Src/bno055.c **** 
 15937              		.loc 1 4184 8 is_stmt 0 view .LVU4319
 15938 0014 8DF80730 		strb	r3, [sp, #7]
4188:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15939              		.loc 1 4188 5 is_stmt 1 view .LVU4320
4188:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15940              		.loc 1 4188 16 is_stmt 0 view .LVU4321
 15941 0018 0DF10700 		add	r0, sp, #7
 15942              	.LVL1910:
4188:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15943              		.loc 1 4188 16 view .LVU4322
 15944 001c FFF7FEFF 		bl	bno055_get_euler_unit
 15945              	.LVL1911:
 15946 0020 0446     		mov	r4, r0
 15947              	.LVL1912:
4189:Core/Src/bno055.c ****     {
 15948              		.loc 1 4189 5 is_stmt 1 view .LVU4323
4189:Core/Src/bno055.c ****     {
 15949              		.loc 1 4189 23 is_stmt 0 view .LVU4324
 15950 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
4189:Core/Src/bno055.c ****     {
 15951              		.loc 1 4189 8 view .LVU4325
 15952 0026 5BBB     		cbnz	r3, .L1143
 15953              	.L1138:
4193:Core/Src/bno055.c ****     {
 15954              		.loc 1 4193 5 is_stmt 1 view .LVU4326
4193:Core/Src/bno055.c ****     {
 15955              		.loc 1 4193 8 is_stmt 0 view .LVU4327
 15956 0028 8CBB     		cbnz	r4, .L1140
4196:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15957              		.loc 1 4196 9 is_stmt 1 view .LVU4328
4196:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15958              		.loc 1 4196 21 is_stmt 0 view .LVU4329
 15959 002a 02A8     		add	r0, sp, #8
 15960 002c FFF7FEFF 		bl	bno055_read_euler_hrp
 15961              	.LVL1913:
4196:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15962              		.loc 1 4196 18 view .LVU4330
 15963 0030 54FA80F4 		uxtab	r4, r4, r0
 15964              	.LVL1914:
4196:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15965              		.loc 1 4196 18 view .LVU4331
 15966 0034 64B2     		sxtb	r4, r4
 15967              	.LVL1915:
4197:Core/Src/bno055.c ****         {
 15968              		.loc 1 4197 9 is_stmt 1 view .LVU4332
4197:Core/Src/bno055.c ****         {
 15969              		.loc 1 4197 12 is_stmt 0 view .LVU4333
 15970 0036 6CBB     		cbnz	r4, .L1141
4200:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
 15971              		.loc 1 4200 13 is_stmt 1 view .LVU4334
4200:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
 15972              		.loc 1 4200 48 is_stmt 0 view .LVU4335
 15973 0038 BDF90800 		ldrsh	r0, [sp, #8]
ARM GAS  /tmp/ccWoU29M.s 			page 465


 15974 003c FFF7FEFF 		bl	__aeabi_i2d
 15975              	.LVL1916:
 15976 0040 0022     		movs	r2, #0
 15977 0042 164B     		ldr	r3, .L1144
 15978 0044 FFF7FEFF 		bl	__aeabi_dmul
 15979              	.LVL1917:
4200:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
 15980              		.loc 1 4200 28 view .LVU4336
 15981 0048 FFF7FEFF 		bl	__aeabi_d2f
 15982              	.LVL1918:
4200:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
 15983              		.loc 1 4200 26 view .LVU4337
 15984 004c 2860     		str	r0, [r5]	@ float
4201:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
 15985              		.loc 1 4201 13 is_stmt 1 view .LVU4338
4201:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
 15986              		.loc 1 4201 48 is_stmt 0 view .LVU4339
 15987 004e BDF90C00 		ldrsh	r0, [sp, #12]
 15988 0052 FFF7FEFF 		bl	__aeabi_i2d
 15989              	.LVL1919:
 15990 0056 0022     		movs	r2, #0
 15991 0058 104B     		ldr	r3, .L1144
 15992 005a FFF7FEFF 		bl	__aeabi_dmul
 15993              	.LVL1920:
4201:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
 15994              		.loc 1 4201 28 view .LVU4340
 15995 005e FFF7FEFF 		bl	__aeabi_d2f
 15996              	.LVL1921:
4201:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
 15997              		.loc 1 4201 26 view .LVU4341
 15998 0062 A860     		str	r0, [r5, #8]	@ float
4202:Core/Src/bno055.c ****         }
 15999              		.loc 1 4202 13 is_stmt 1 view .LVU4342
4202:Core/Src/bno055.c ****         }
 16000              		.loc 1 4202 48 is_stmt 0 view .LVU4343
 16001 0064 BDF90A00 		ldrsh	r0, [sp, #10]
 16002 0068 FFF7FEFF 		bl	__aeabi_i2d
 16003              	.LVL1922:
 16004 006c 0022     		movs	r2, #0
 16005 006e 0B4B     		ldr	r3, .L1144
 16006 0070 FFF7FEFF 		bl	__aeabi_dmul
 16007              	.LVL1923:
4202:Core/Src/bno055.c ****         }
 16008              		.loc 1 4202 28 view .LVU4344
 16009 0074 FFF7FEFF 		bl	__aeabi_d2f
 16010              	.LVL1924:
4202:Core/Src/bno055.c ****         }
 16011              		.loc 1 4202 26 view .LVU4345
 16012 0078 6860     		str	r0, [r5, #4]	@ float
 16013              	.LVL1925:
 16014              	.L1139:
4214:Core/Src/bno055.c **** }
 16015              		.loc 1 4214 5 is_stmt 1 view .LVU4346
4215:Core/Src/bno055.c **** 
 16016              		.loc 1 4215 1 is_stmt 0 view .LVU4347
 16017 007a 2046     		mov	r0, r4
 16018 007c 05B0     		add	sp, sp, #20
ARM GAS  /tmp/ccWoU29M.s 			page 466


 16019              	.LCFI515:
 16020              		.cfi_remember_state
 16021              		.cfi_def_cfa_offset 12
 16022              		@ sp needed
 16023 007e 30BD     		pop	{r4, r5, pc}
 16024              	.LVL1926:
 16025              	.L1143:
 16026              	.LCFI516:
 16027              		.cfi_restore_state
4191:Core/Src/bno055.c ****     }
 16028              		.loc 1 4191 9 is_stmt 1 view .LVU4348
4191:Core/Src/bno055.c ****     }
 16029              		.loc 1 4191 21 is_stmt 0 view .LVU4349
 16030 0080 0020     		movs	r0, #0
 16031 0082 FFF7FEFF 		bl	bno055_set_euler_unit
 16032              	.LVL1927:
4191:Core/Src/bno055.c ****     }
 16033              		.loc 1 4191 18 view .LVU4350
 16034 0086 54FA80F4 		uxtab	r4, r4, r0
 16035              	.LVL1928:
4191:Core/Src/bno055.c ****     }
 16036              		.loc 1 4191 18 view .LVU4351
 16037 008a 64B2     		sxtb	r4, r4
 16038              	.LVL1929:
4191:Core/Src/bno055.c ****     }
 16039              		.loc 1 4191 18 view .LVU4352
 16040 008c CCE7     		b	.L1138
 16041              	.L1140:
4211:Core/Src/bno055.c ****     }
 16042              		.loc 1 4211 18 view .LVU4353
 16043 008e 4FF0FF34 		mov	r4, #-1
 16044              	.LVL1930:
4211:Core/Src/bno055.c ****     }
 16045              		.loc 1 4211 18 view .LVU4354
 16046 0092 F2E7     		b	.L1139
 16047              	.LVL1931:
 16048              	.L1141:
4206:Core/Src/bno055.c ****         }
 16049              		.loc 1 4206 22 view .LVU4355
 16050 0094 4FF0FF34 		mov	r4, #-1
 16051              	.LVL1932:
4206:Core/Src/bno055.c ****         }
 16052              		.loc 1 4206 22 view .LVU4356
 16053 0098 EFE7     		b	.L1139
 16054              	.L1145:
 16055 009a 00BF     		.align	2
 16056              	.L1144:
 16057 009c 0000B03F 		.word	1068498944
 16058              		.cfi_endproc
 16059              	.LFE67:
 16061              		.section	.text.bno055_convert_float_euler_hpr_rad,"ax",%progbits
 16062              		.align	1
 16063              		.global	bno055_convert_float_euler_hpr_rad
 16064              		.syntax unified
 16065              		.thumb
 16066              		.thumb_func
 16067              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccWoU29M.s 			page 467


 16069              	bno055_convert_float_euler_hpr_rad:
 16070              	.LVL1933:
 16071              	.LFB68:
4236:Core/Src/bno055.c ****     /* Variable used to return value of
 16072              		.loc 1 4236 1 is_stmt 1 view -0
 16073              		.cfi_startproc
 16074              		@ args = 0, pretend = 0, frame = 16
 16075              		@ frame_needed = 0, uses_anonymous_args = 0
4236:Core/Src/bno055.c ****     /* Variable used to return value of
 16076              		.loc 1 4236 1 is_stmt 0 view .LVU4358
 16077 0000 30B5     		push	{r4, r5, lr}
 16078              	.LCFI517:
 16079              		.cfi_def_cfa_offset 12
 16080              		.cfi_offset 4, -12
 16081              		.cfi_offset 5, -8
 16082              		.cfi_offset 14, -4
 16083 0002 85B0     		sub	sp, sp, #20
 16084              	.LCFI518:
 16085              		.cfi_def_cfa_offset 32
 16086 0004 0546     		mov	r5, r0
4239:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 16087              		.loc 1 4239 5 is_stmt 1 view .LVU4359
 16088              	.LVL1934:
4240:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16089              		.loc 1 4240 5 view .LVU4360
4240:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16090              		.loc 1 4240 27 is_stmt 0 view .LVU4361
 16091 0006 0023     		movs	r3, #0
 16092 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 16093 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 16094 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
4241:Core/Src/bno055.c **** 
 16095              		.loc 1 4241 5 is_stmt 1 view .LVU4362
4241:Core/Src/bno055.c **** 
 16096              		.loc 1 4241 8 is_stmt 0 view .LVU4363
 16097 0014 8DF80730 		strb	r3, [sp, #7]
4245:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16098              		.loc 1 4245 5 is_stmt 1 view .LVU4364
4245:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16099              		.loc 1 4245 16 is_stmt 0 view .LVU4365
 16100 0018 0DF10700 		add	r0, sp, #7
 16101              	.LVL1935:
4245:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16102              		.loc 1 4245 16 view .LVU4366
 16103 001c FFF7FEFF 		bl	bno055_get_euler_unit
 16104              	.LVL1936:
 16105 0020 0446     		mov	r4, r0
 16106              	.LVL1937:
4246:Core/Src/bno055.c ****     {
 16107              		.loc 1 4246 5 is_stmt 1 view .LVU4367
4246:Core/Src/bno055.c ****     {
 16108              		.loc 1 4246 23 is_stmt 0 view .LVU4368
 16109 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
4246:Core/Src/bno055.c ****     {
 16110              		.loc 1 4246 8 view .LVU4369
 16111 0026 012B     		cmp	r3, #1
 16112 0028 2BD1     		bne	.L1152
ARM GAS  /tmp/ccWoU29M.s 			page 468


 16113              	.L1147:
4250:Core/Src/bno055.c ****     {
 16114              		.loc 1 4250 5 is_stmt 1 view .LVU4370
4250:Core/Src/bno055.c ****     {
 16115              		.loc 1 4250 8 is_stmt 0 view .LVU4371
 16116 002a 8CBB     		cbnz	r4, .L1149
4253:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16117              		.loc 1 4253 9 is_stmt 1 view .LVU4372
4253:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16118              		.loc 1 4253 21 is_stmt 0 view .LVU4373
 16119 002c 02A8     		add	r0, sp, #8
 16120 002e FFF7FEFF 		bl	bno055_read_euler_hrp
 16121              	.LVL1938:
4253:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16122              		.loc 1 4253 18 view .LVU4374
 16123 0032 54FA80F4 		uxtab	r4, r4, r0
 16124              	.LVL1939:
4253:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16125              		.loc 1 4253 18 view .LVU4375
 16126 0036 64B2     		sxtb	r4, r4
 16127              	.LVL1940:
4254:Core/Src/bno055.c ****         {
 16128              		.loc 1 4254 9 is_stmt 1 view .LVU4376
4254:Core/Src/bno055.c ****         {
 16129              		.loc 1 4254 12 is_stmt 0 view .LVU4377
 16130 0038 6CBB     		cbnz	r4, .L1150
4257:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
 16131              		.loc 1 4257 13 is_stmt 1 view .LVU4378
4257:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
 16132              		.loc 1 4257 48 is_stmt 0 view .LVU4379
 16133 003a BDF90800 		ldrsh	r0, [sp, #8]
 16134 003e FFF7FEFF 		bl	__aeabi_i2d
 16135              	.LVL1941:
 16136 0042 0022     		movs	r2, #0
 16137 0044 154B     		ldr	r3, .L1153
 16138 0046 FFF7FEFF 		bl	__aeabi_ddiv
 16139              	.LVL1942:
4257:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
 16140              		.loc 1 4257 28 view .LVU4380
 16141 004a FFF7FEFF 		bl	__aeabi_d2f
 16142              	.LVL1943:
4257:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
 16143              		.loc 1 4257 26 view .LVU4381
 16144 004e 2860     		str	r0, [r5]	@ float
4258:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
 16145              		.loc 1 4258 13 is_stmt 1 view .LVU4382
4258:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
 16146              		.loc 1 4258 48 is_stmt 0 view .LVU4383
 16147 0050 BDF90C00 		ldrsh	r0, [sp, #12]
 16148 0054 FFF7FEFF 		bl	__aeabi_i2d
 16149              	.LVL1944:
 16150 0058 0022     		movs	r2, #0
 16151 005a 104B     		ldr	r3, .L1153
 16152 005c FFF7FEFF 		bl	__aeabi_ddiv
 16153              	.LVL1945:
4258:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
 16154              		.loc 1 4258 28 view .LVU4384
ARM GAS  /tmp/ccWoU29M.s 			page 469


 16155 0060 FFF7FEFF 		bl	__aeabi_d2f
 16156              	.LVL1946:
4258:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
 16157              		.loc 1 4258 26 view .LVU4385
 16158 0064 A860     		str	r0, [r5, #8]	@ float
4259:Core/Src/bno055.c ****         }
 16159              		.loc 1 4259 13 is_stmt 1 view .LVU4386
4259:Core/Src/bno055.c ****         }
 16160              		.loc 1 4259 48 is_stmt 0 view .LVU4387
 16161 0066 BDF90A00 		ldrsh	r0, [sp, #10]
 16162 006a FFF7FEFF 		bl	__aeabi_i2d
 16163              	.LVL1947:
 16164 006e 0022     		movs	r2, #0
 16165 0070 0A4B     		ldr	r3, .L1153
 16166 0072 FFF7FEFF 		bl	__aeabi_ddiv
 16167              	.LVL1948:
4259:Core/Src/bno055.c ****         }
 16168              		.loc 1 4259 28 view .LVU4388
 16169 0076 FFF7FEFF 		bl	__aeabi_d2f
 16170              	.LVL1949:
4259:Core/Src/bno055.c ****         }
 16171              		.loc 1 4259 26 view .LVU4389
 16172 007a 6860     		str	r0, [r5, #4]	@ float
 16173              	.LVL1950:
 16174              	.L1148:
4271:Core/Src/bno055.c **** }
 16175              		.loc 1 4271 5 is_stmt 1 view .LVU4390
4272:Core/Src/bno055.c **** 
 16176              		.loc 1 4272 1 is_stmt 0 view .LVU4391
 16177 007c 2046     		mov	r0, r4
 16178 007e 05B0     		add	sp, sp, #20
 16179              	.LCFI519:
 16180              		.cfi_remember_state
 16181              		.cfi_def_cfa_offset 12
 16182              		@ sp needed
 16183 0080 30BD     		pop	{r4, r5, pc}
 16184              	.LVL1951:
 16185              	.L1152:
 16186              	.LCFI520:
 16187              		.cfi_restore_state
4248:Core/Src/bno055.c ****     }
 16188              		.loc 1 4248 9 is_stmt 1 view .LVU4392
4248:Core/Src/bno055.c ****     }
 16189              		.loc 1 4248 21 is_stmt 0 view .LVU4393
 16190 0082 0120     		movs	r0, #1
 16191 0084 FFF7FEFF 		bl	bno055_set_euler_unit
 16192              	.LVL1952:
4248:Core/Src/bno055.c ****     }
 16193              		.loc 1 4248 18 view .LVU4394
 16194 0088 54FA80F4 		uxtab	r4, r4, r0
 16195              	.LVL1953:
4248:Core/Src/bno055.c ****     }
 16196              		.loc 1 4248 18 view .LVU4395
 16197 008c 64B2     		sxtb	r4, r4
 16198              	.LVL1954:
4248:Core/Src/bno055.c ****     }
 16199              		.loc 1 4248 18 view .LVU4396
ARM GAS  /tmp/ccWoU29M.s 			page 470


 16200 008e CCE7     		b	.L1147
 16201              	.L1149:
4268:Core/Src/bno055.c ****     }
 16202              		.loc 1 4268 18 view .LVU4397
 16203 0090 4FF0FF34 		mov	r4, #-1
 16204              	.LVL1955:
4268:Core/Src/bno055.c ****     }
 16205              		.loc 1 4268 18 view .LVU4398
 16206 0094 F2E7     		b	.L1148
 16207              	.LVL1956:
 16208              	.L1150:
4263:Core/Src/bno055.c ****         }
 16209              		.loc 1 4263 22 view .LVU4399
 16210 0096 4FF0FF34 		mov	r4, #-1
 16211              	.LVL1957:
4263:Core/Src/bno055.c ****         }
 16212              		.loc 1 4263 22 view .LVU4400
 16213 009a EFE7     		b	.L1148
 16214              	.L1154:
 16215              		.align	2
 16216              	.L1153:
 16217 009c 00208C40 		.word	1082925056
 16218              		.cfi_endproc
 16219              	.LFE68:
 16221              		.section	.text.bno055_convert_double_euler_h_deg,"ax",%progbits
 16222              		.align	1
 16223              		.global	bno055_convert_double_euler_h_deg
 16224              		.syntax unified
 16225              		.thumb
 16226              		.thumb_func
 16227              		.fpu fpv4-sp-d16
 16229              	bno055_convert_double_euler_h_deg:
 16230              	.LVL1958:
 16231              	.LFB99:
5699:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16232              		.loc 1 5699 1 is_stmt 1 view -0
 16233              		.cfi_startproc
 16234              		@ args = 0, pretend = 0, frame = 8
 16235              		@ frame_needed = 0, uses_anonymous_args = 0
5699:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16236              		.loc 1 5699 1 is_stmt 0 view .LVU4402
 16237 0000 30B5     		push	{r4, r5, lr}
 16238              	.LCFI521:
 16239              		.cfi_def_cfa_offset 12
 16240              		.cfi_offset 4, -12
 16241              		.cfi_offset 5, -8
 16242              		.cfi_offset 14, -4
 16243 0002 83B0     		sub	sp, sp, #12
 16244              	.LCFI522:
 16245              		.cfi_def_cfa_offset 24
 16246 0004 0546     		mov	r5, r0
5700:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
 16247              		.loc 1 5700 5 is_stmt 1 view .LVU4403
 16248              	.LVL1959:
5701:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16249              		.loc 1 5701 5 view .LVU4404
5701:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccWoU29M.s 			page 471


 16250              		.loc 1 5701 9 is_stmt 0 view .LVU4405
 16251 0006 0023     		movs	r3, #0
 16252 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5702:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16253              		.loc 1 5702 5 is_stmt 1 view .LVU4406
 16254              	.LVL1960:
5703:Core/Src/bno055.c **** 
 16255              		.loc 1 5703 5 view .LVU4407
5703:Core/Src/bno055.c **** 
 16256              		.loc 1 5703 8 is_stmt 0 view .LVU4408
 16257 000c 8DF80530 		strb	r3, [sp, #5]
5707:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16258              		.loc 1 5707 5 is_stmt 1 view .LVU4409
5707:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16259              		.loc 1 5707 16 is_stmt 0 view .LVU4410
 16260 0010 0DF10500 		add	r0, sp, #5
 16261              	.LVL1961:
5707:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16262              		.loc 1 5707 16 view .LVU4411
 16263 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16264              	.LVL1962:
 16265 0018 0446     		mov	r4, r0
 16266              	.LVL1963:
5708:Core/Src/bno055.c ****     {
 16267              		.loc 1 5708 5 is_stmt 1 view .LVU4412
5708:Core/Src/bno055.c ****     {
 16268              		.loc 1 5708 23 is_stmt 0 view .LVU4413
 16269 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5708:Core/Src/bno055.c ****     {
 16270              		.loc 1 5708 8 view .LVU4414
 16271 001e ABB9     		cbnz	r3, .L1161
 16272              	.L1156:
5712:Core/Src/bno055.c ****     {
 16273              		.loc 1 5712 5 is_stmt 1 view .LVU4415
5712:Core/Src/bno055.c ****     {
 16274              		.loc 1 5712 8 is_stmt 0 view .LVU4416
 16275 0020 DCB9     		cbnz	r4, .L1158
5715:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16276              		.loc 1 5715 9 is_stmt 1 view .LVU4417
5715:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16277              		.loc 1 5715 21 is_stmt 0 view .LVU4418
 16278 0022 0DF10600 		add	r0, sp, #6
 16279 0026 FFF7FEFF 		bl	bno055_read_euler_h
 16280              	.LVL1964:
5715:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16281              		.loc 1 5715 18 view .LVU4419
 16282 002a 54FA80F4 		uxtab	r4, r4, r0
 16283              	.LVL1965:
5715:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16284              		.loc 1 5715 18 view .LVU4420
 16285 002e 64B2     		sxtb	r4, r4
 16286              	.LVL1966:
5716:Core/Src/bno055.c ****         {
 16287              		.loc 1 5716 9 is_stmt 1 view .LVU4421
5716:Core/Src/bno055.c ****         {
 16288              		.loc 1 5716 12 is_stmt 0 view .LVU4422
 16289 0030 B4B9     		cbnz	r4, .L1159
ARM GAS  /tmp/ccWoU29M.s 			page 472


5719:Core/Src/bno055.c ****             *euler_h_d = data_d;
 16290              		.loc 1 5719 13 is_stmt 1 view .LVU4423
5719:Core/Src/bno055.c ****             *euler_h_d = data_d;
 16291              		.loc 1 5719 22 is_stmt 0 view .LVU4424
 16292 0032 BDF90600 		ldrsh	r0, [sp, #6]
 16293 0036 FFF7FEFF 		bl	__aeabi_i2d
 16294              	.LVL1967:
5719:Core/Src/bno055.c ****             *euler_h_d = data_d;
 16295              		.loc 1 5719 20 view .LVU4425
 16296 003a 0022     		movs	r2, #0
 16297 003c 0A4B     		ldr	r3, .L1162
 16298 003e FFF7FEFF 		bl	__aeabi_dmul
 16299              	.LVL1968:
5720:Core/Src/bno055.c ****         }
 16300              		.loc 1 5720 13 is_stmt 1 view .LVU4426
5720:Core/Src/bno055.c ****         }
 16301              		.loc 1 5720 24 is_stmt 0 view .LVU4427
 16302 0042 C5E90001 		strd	r0, [r5]
 16303              	.LVL1969:
 16304              	.L1157:
5732:Core/Src/bno055.c **** }
 16305              		.loc 1 5732 5 is_stmt 1 view .LVU4428
5733:Core/Src/bno055.c **** 
 16306              		.loc 1 5733 1 is_stmt 0 view .LVU4429
 16307 0046 2046     		mov	r0, r4
 16308 0048 03B0     		add	sp, sp, #12
 16309              	.LCFI523:
 16310              		.cfi_remember_state
 16311              		.cfi_def_cfa_offset 12
 16312              		@ sp needed
 16313 004a 30BD     		pop	{r4, r5, pc}
 16314              	.LVL1970:
 16315              	.L1161:
 16316              	.LCFI524:
 16317              		.cfi_restore_state
5710:Core/Src/bno055.c ****     }
 16318              		.loc 1 5710 9 is_stmt 1 view .LVU4430
5710:Core/Src/bno055.c ****     }
 16319              		.loc 1 5710 21 is_stmt 0 view .LVU4431
 16320 004c 0020     		movs	r0, #0
 16321 004e FFF7FEFF 		bl	bno055_set_euler_unit
 16322              	.LVL1971:
5710:Core/Src/bno055.c ****     }
 16323              		.loc 1 5710 18 view .LVU4432
 16324 0052 54FA80F4 		uxtab	r4, r4, r0
 16325              	.LVL1972:
5710:Core/Src/bno055.c ****     }
 16326              		.loc 1 5710 18 view .LVU4433
 16327 0056 64B2     		sxtb	r4, r4
 16328              	.LVL1973:
5710:Core/Src/bno055.c ****     }
 16329              		.loc 1 5710 18 view .LVU4434
 16330 0058 E2E7     		b	.L1156
 16331              	.L1158:
5729:Core/Src/bno055.c ****     }
 16332              		.loc 1 5729 18 view .LVU4435
 16333 005a 4FF0FF34 		mov	r4, #-1
ARM GAS  /tmp/ccWoU29M.s 			page 473


 16334              	.LVL1974:
5729:Core/Src/bno055.c ****     }
 16335              		.loc 1 5729 18 view .LVU4436
 16336 005e F2E7     		b	.L1157
 16337              	.LVL1975:
 16338              	.L1159:
5724:Core/Src/bno055.c ****         }
 16339              		.loc 1 5724 22 view .LVU4437
 16340 0060 4FF0FF34 		mov	r4, #-1
 16341              	.LVL1976:
5724:Core/Src/bno055.c ****         }
 16342              		.loc 1 5724 22 view .LVU4438
 16343 0064 EFE7     		b	.L1157
 16344              	.L1163:
 16345 0066 00BF     		.align	2
 16346              	.L1162:
 16347 0068 0000B03F 		.word	1068498944
 16348              		.cfi_endproc
 16349              	.LFE99:
 16351              		.section	.text.bno055_convert_double_euler_h_rad,"ax",%progbits
 16352              		.align	1
 16353              		.global	bno055_convert_double_euler_h_rad
 16354              		.syntax unified
 16355              		.thumb
 16356              		.thumb_func
 16357              		.fpu fpv4-sp-d16
 16359              	bno055_convert_double_euler_h_rad:
 16360              	.LVL1977:
 16361              	.LFB100:
5748:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16362              		.loc 1 5748 1 is_stmt 1 view -0
 16363              		.cfi_startproc
 16364              		@ args = 0, pretend = 0, frame = 8
 16365              		@ frame_needed = 0, uses_anonymous_args = 0
5748:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16366              		.loc 1 5748 1 is_stmt 0 view .LVU4440
 16367 0000 30B5     		push	{r4, r5, lr}
 16368              	.LCFI525:
 16369              		.cfi_def_cfa_offset 12
 16370              		.cfi_offset 4, -12
 16371              		.cfi_offset 5, -8
 16372              		.cfi_offset 14, -4
 16373 0002 83B0     		sub	sp, sp, #12
 16374              	.LCFI526:
 16375              		.cfi_def_cfa_offset 24
 16376 0004 0546     		mov	r5, r0
5749:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
 16377              		.loc 1 5749 5 is_stmt 1 view .LVU4441
 16378              	.LVL1978:
5750:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16379              		.loc 1 5750 5 view .LVU4442
5750:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16380              		.loc 1 5750 9 is_stmt 0 view .LVU4443
 16381 0006 0023     		movs	r3, #0
 16382 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5751:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16383              		.loc 1 5751 5 is_stmt 1 view .LVU4444
ARM GAS  /tmp/ccWoU29M.s 			page 474


 16384              	.LVL1979:
5752:Core/Src/bno055.c **** 
 16385              		.loc 1 5752 5 view .LVU4445
5752:Core/Src/bno055.c **** 
 16386              		.loc 1 5752 8 is_stmt 0 view .LVU4446
 16387 000c 8DF80530 		strb	r3, [sp, #5]
5756:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16388              		.loc 1 5756 5 is_stmt 1 view .LVU4447
5756:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16389              		.loc 1 5756 16 is_stmt 0 view .LVU4448
 16390 0010 0DF10500 		add	r0, sp, #5
 16391              	.LVL1980:
5756:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16392              		.loc 1 5756 16 view .LVU4449
 16393 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16394              	.LVL1981:
 16395 0018 0446     		mov	r4, r0
 16396              	.LVL1982:
5757:Core/Src/bno055.c ****     {
 16397              		.loc 1 5757 5 is_stmt 1 view .LVU4450
5757:Core/Src/bno055.c ****     {
 16398              		.loc 1 5757 23 is_stmt 0 view .LVU4451
 16399 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5757:Core/Src/bno055.c ****     {
 16400              		.loc 1 5757 8 view .LVU4452
 16401 001e 012B     		cmp	r3, #1
 16402 0020 15D1     		bne	.L1170
 16403              	.L1165:
5761:Core/Src/bno055.c ****     {
 16404              		.loc 1 5761 5 is_stmt 1 view .LVU4453
5761:Core/Src/bno055.c ****     {
 16405              		.loc 1 5761 8 is_stmt 0 view .LVU4454
 16406 0022 DCB9     		cbnz	r4, .L1167
5764:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16407              		.loc 1 5764 9 is_stmt 1 view .LVU4455
5764:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16408              		.loc 1 5764 21 is_stmt 0 view .LVU4456
 16409 0024 0DF10600 		add	r0, sp, #6
 16410 0028 FFF7FEFF 		bl	bno055_read_euler_h
 16411              	.LVL1983:
5764:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16412              		.loc 1 5764 18 view .LVU4457
 16413 002c 54FA80F4 		uxtab	r4, r4, r0
 16414              	.LVL1984:
5764:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16415              		.loc 1 5764 18 view .LVU4458
 16416 0030 64B2     		sxtb	r4, r4
 16417              	.LVL1985:
5765:Core/Src/bno055.c ****         {
 16418              		.loc 1 5765 9 is_stmt 1 view .LVU4459
5765:Core/Src/bno055.c ****         {
 16419              		.loc 1 5765 12 is_stmt 0 view .LVU4460
 16420 0032 B4B9     		cbnz	r4, .L1168
5768:Core/Src/bno055.c ****             *euler_h_d = data_d;
 16421              		.loc 1 5768 13 is_stmt 1 view .LVU4461
5768:Core/Src/bno055.c ****             *euler_h_d = data_d;
 16422              		.loc 1 5768 22 is_stmt 0 view .LVU4462
ARM GAS  /tmp/ccWoU29M.s 			page 475


 16423 0034 BDF90600 		ldrsh	r0, [sp, #6]
 16424 0038 FFF7FEFF 		bl	__aeabi_i2d
 16425              	.LVL1986:
5768:Core/Src/bno055.c ****             *euler_h_d = data_d;
 16426              		.loc 1 5768 20 view .LVU4463
 16427 003c 0022     		movs	r2, #0
 16428 003e 0A4B     		ldr	r3, .L1171
 16429 0040 FFF7FEFF 		bl	__aeabi_ddiv
 16430              	.LVL1987:
5769:Core/Src/bno055.c ****         }
 16431              		.loc 1 5769 13 is_stmt 1 view .LVU4464
5769:Core/Src/bno055.c ****         }
 16432              		.loc 1 5769 24 is_stmt 0 view .LVU4465
 16433 0044 C5E90001 		strd	r0, [r5]
 16434              	.LVL1988:
 16435              	.L1166:
5781:Core/Src/bno055.c **** }
 16436              		.loc 1 5781 5 is_stmt 1 view .LVU4466
5782:Core/Src/bno055.c **** 
 16437              		.loc 1 5782 1 is_stmt 0 view .LVU4467
 16438 0048 2046     		mov	r0, r4
 16439 004a 03B0     		add	sp, sp, #12
 16440              	.LCFI527:
 16441              		.cfi_remember_state
 16442              		.cfi_def_cfa_offset 12
 16443              		@ sp needed
 16444 004c 30BD     		pop	{r4, r5, pc}
 16445              	.LVL1989:
 16446              	.L1170:
 16447              	.LCFI528:
 16448              		.cfi_restore_state
5759:Core/Src/bno055.c ****     }
 16449              		.loc 1 5759 9 is_stmt 1 view .LVU4468
5759:Core/Src/bno055.c ****     }
 16450              		.loc 1 5759 21 is_stmt 0 view .LVU4469
 16451 004e 0120     		movs	r0, #1
 16452 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 16453              	.LVL1990:
5759:Core/Src/bno055.c ****     }
 16454              		.loc 1 5759 18 view .LVU4470
 16455 0054 54FA80F4 		uxtab	r4, r4, r0
 16456              	.LVL1991:
5759:Core/Src/bno055.c ****     }
 16457              		.loc 1 5759 18 view .LVU4471
 16458 0058 64B2     		sxtb	r4, r4
 16459              	.LVL1992:
5759:Core/Src/bno055.c ****     }
 16460              		.loc 1 5759 18 view .LVU4472
 16461 005a E2E7     		b	.L1165
 16462              	.L1167:
5778:Core/Src/bno055.c ****     }
 16463              		.loc 1 5778 18 view .LVU4473
 16464 005c 4FF0FF34 		mov	r4, #-1
 16465              	.LVL1993:
5778:Core/Src/bno055.c ****     }
 16466              		.loc 1 5778 18 view .LVU4474
 16467 0060 F2E7     		b	.L1166
ARM GAS  /tmp/ccWoU29M.s 			page 476


 16468              	.LVL1994:
 16469              	.L1168:
5773:Core/Src/bno055.c ****         }
 16470              		.loc 1 5773 22 view .LVU4475
 16471 0062 4FF0FF34 		mov	r4, #-1
 16472              	.LVL1995:
5773:Core/Src/bno055.c ****         }
 16473              		.loc 1 5773 22 view .LVU4476
 16474 0066 EFE7     		b	.L1166
 16475              	.L1172:
 16476              		.align	2
 16477              	.L1171:
 16478 0068 00208C40 		.word	1082925056
 16479              		.cfi_endproc
 16480              	.LFE100:
 16482              		.section	.text.bno055_convert_double_euler_r_deg,"ax",%progbits
 16483              		.align	1
 16484              		.global	bno055_convert_double_euler_r_deg
 16485              		.syntax unified
 16486              		.thumb
 16487              		.thumb_func
 16488              		.fpu fpv4-sp-d16
 16490              	bno055_convert_double_euler_r_deg:
 16491              	.LVL1996:
 16492              	.LFB101:
5797:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16493              		.loc 1 5797 1 is_stmt 1 view -0
 16494              		.cfi_startproc
 16495              		@ args = 0, pretend = 0, frame = 8
 16496              		@ frame_needed = 0, uses_anonymous_args = 0
5797:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16497              		.loc 1 5797 1 is_stmt 0 view .LVU4478
 16498 0000 30B5     		push	{r4, r5, lr}
 16499              	.LCFI529:
 16500              		.cfi_def_cfa_offset 12
 16501              		.cfi_offset 4, -12
 16502              		.cfi_offset 5, -8
 16503              		.cfi_offset 14, -4
 16504 0002 83B0     		sub	sp, sp, #12
 16505              	.LCFI530:
 16506              		.cfi_def_cfa_offset 24
 16507 0004 0546     		mov	r5, r0
5798:Core/Src/bno055.c ****     s16 reg_euler_r_s16 = BNO055_INIT_VALUE;
 16508              		.loc 1 5798 5 is_stmt 1 view .LVU4479
 16509              	.LVL1997:
5799:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16510              		.loc 1 5799 5 view .LVU4480
5799:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16511              		.loc 1 5799 9 is_stmt 0 view .LVU4481
 16512 0006 0023     		movs	r3, #0
 16513 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5800:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16514              		.loc 1 5800 5 is_stmt 1 view .LVU4482
 16515              	.LVL1998:
5801:Core/Src/bno055.c **** 
 16516              		.loc 1 5801 5 view .LVU4483
5801:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 477


 16517              		.loc 1 5801 8 is_stmt 0 view .LVU4484
 16518 000c 8DF80530 		strb	r3, [sp, #5]
5805:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16519              		.loc 1 5805 5 is_stmt 1 view .LVU4485
5805:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16520              		.loc 1 5805 16 is_stmt 0 view .LVU4486
 16521 0010 0DF10500 		add	r0, sp, #5
 16522              	.LVL1999:
5805:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16523              		.loc 1 5805 16 view .LVU4487
 16524 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16525              	.LVL2000:
 16526 0018 0446     		mov	r4, r0
 16527              	.LVL2001:
5806:Core/Src/bno055.c ****     {
 16528              		.loc 1 5806 5 is_stmt 1 view .LVU4488
5806:Core/Src/bno055.c ****     {
 16529              		.loc 1 5806 23 is_stmt 0 view .LVU4489
 16530 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5806:Core/Src/bno055.c ****     {
 16531              		.loc 1 5806 8 view .LVU4490
 16532 001e ABB9     		cbnz	r3, .L1179
 16533              	.L1174:
5810:Core/Src/bno055.c ****     {
 16534              		.loc 1 5810 5 is_stmt 1 view .LVU4491
5810:Core/Src/bno055.c ****     {
 16535              		.loc 1 5810 8 is_stmt 0 view .LVU4492
 16536 0020 DCB9     		cbnz	r4, .L1176
5813:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16537              		.loc 1 5813 9 is_stmt 1 view .LVU4493
5813:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16538              		.loc 1 5813 21 is_stmt 0 view .LVU4494
 16539 0022 0DF10600 		add	r0, sp, #6
 16540 0026 FFF7FEFF 		bl	bno055_read_euler_r
 16541              	.LVL2002:
5813:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16542              		.loc 1 5813 18 view .LVU4495
 16543 002a 54FA80F4 		uxtab	r4, r4, r0
 16544              	.LVL2003:
5813:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16545              		.loc 1 5813 18 view .LVU4496
 16546 002e 64B2     		sxtb	r4, r4
 16547              	.LVL2004:
5814:Core/Src/bno055.c ****         {
 16548              		.loc 1 5814 9 is_stmt 1 view .LVU4497
5814:Core/Src/bno055.c ****         {
 16549              		.loc 1 5814 12 is_stmt 0 view .LVU4498
 16550 0030 B4B9     		cbnz	r4, .L1177
5817:Core/Src/bno055.c ****             *euler_r_d = data_d;
 16551              		.loc 1 5817 13 is_stmt 1 view .LVU4499
5817:Core/Src/bno055.c ****             *euler_r_d = data_d;
 16552              		.loc 1 5817 22 is_stmt 0 view .LVU4500
 16553 0032 BDF90600 		ldrsh	r0, [sp, #6]
 16554 0036 FFF7FEFF 		bl	__aeabi_i2d
 16555              	.LVL2005:
5817:Core/Src/bno055.c ****             *euler_r_d = data_d;
 16556              		.loc 1 5817 20 view .LVU4501
ARM GAS  /tmp/ccWoU29M.s 			page 478


 16557 003a 0022     		movs	r2, #0
 16558 003c 0A4B     		ldr	r3, .L1180
 16559 003e FFF7FEFF 		bl	__aeabi_dmul
 16560              	.LVL2006:
5818:Core/Src/bno055.c ****         }
 16561              		.loc 1 5818 13 is_stmt 1 view .LVU4502
5818:Core/Src/bno055.c ****         }
 16562              		.loc 1 5818 24 is_stmt 0 view .LVU4503
 16563 0042 C5E90001 		strd	r0, [r5]
 16564              	.LVL2007:
 16565              	.L1175:
5830:Core/Src/bno055.c **** }
 16566              		.loc 1 5830 5 is_stmt 1 view .LVU4504
5831:Core/Src/bno055.c **** 
 16567              		.loc 1 5831 1 is_stmt 0 view .LVU4505
 16568 0046 2046     		mov	r0, r4
 16569 0048 03B0     		add	sp, sp, #12
 16570              	.LCFI531:
 16571              		.cfi_remember_state
 16572              		.cfi_def_cfa_offset 12
 16573              		@ sp needed
 16574 004a 30BD     		pop	{r4, r5, pc}
 16575              	.LVL2008:
 16576              	.L1179:
 16577              	.LCFI532:
 16578              		.cfi_restore_state
5808:Core/Src/bno055.c ****     }
 16579              		.loc 1 5808 9 is_stmt 1 view .LVU4506
5808:Core/Src/bno055.c ****     }
 16580              		.loc 1 5808 21 is_stmt 0 view .LVU4507
 16581 004c 0020     		movs	r0, #0
 16582 004e FFF7FEFF 		bl	bno055_set_euler_unit
 16583              	.LVL2009:
5808:Core/Src/bno055.c ****     }
 16584              		.loc 1 5808 18 view .LVU4508
 16585 0052 54FA80F4 		uxtab	r4, r4, r0
 16586              	.LVL2010:
5808:Core/Src/bno055.c ****     }
 16587              		.loc 1 5808 18 view .LVU4509
 16588 0056 64B2     		sxtb	r4, r4
 16589              	.LVL2011:
5808:Core/Src/bno055.c ****     }
 16590              		.loc 1 5808 18 view .LVU4510
 16591 0058 E2E7     		b	.L1174
 16592              	.L1176:
5827:Core/Src/bno055.c ****     }
 16593              		.loc 1 5827 18 view .LVU4511
 16594 005a 4FF0FF34 		mov	r4, #-1
 16595              	.LVL2012:
5827:Core/Src/bno055.c ****     }
 16596              		.loc 1 5827 18 view .LVU4512
 16597 005e F2E7     		b	.L1175
 16598              	.LVL2013:
 16599              	.L1177:
5822:Core/Src/bno055.c ****         }
 16600              		.loc 1 5822 22 view .LVU4513
 16601 0060 4FF0FF34 		mov	r4, #-1
ARM GAS  /tmp/ccWoU29M.s 			page 479


 16602              	.LVL2014:
5822:Core/Src/bno055.c ****         }
 16603              		.loc 1 5822 22 view .LVU4514
 16604 0064 EFE7     		b	.L1175
 16605              	.L1181:
 16606 0066 00BF     		.align	2
 16607              	.L1180:
 16608 0068 0000B03F 		.word	1068498944
 16609              		.cfi_endproc
 16610              	.LFE101:
 16612              		.section	.text.bno055_convert_double_euler_r_rad,"ax",%progbits
 16613              		.align	1
 16614              		.global	bno055_convert_double_euler_r_rad
 16615              		.syntax unified
 16616              		.thumb
 16617              		.thumb_func
 16618              		.fpu fpv4-sp-d16
 16620              	bno055_convert_double_euler_r_rad:
 16621              	.LVL2015:
 16622              	.LFB102:
5846:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16623              		.loc 1 5846 1 is_stmt 1 view -0
 16624              		.cfi_startproc
 16625              		@ args = 0, pretend = 0, frame = 8
 16626              		@ frame_needed = 0, uses_anonymous_args = 0
5846:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16627              		.loc 1 5846 1 is_stmt 0 view .LVU4516
 16628 0000 30B5     		push	{r4, r5, lr}
 16629              	.LCFI533:
 16630              		.cfi_def_cfa_offset 12
 16631              		.cfi_offset 4, -12
 16632              		.cfi_offset 5, -8
 16633              		.cfi_offset 14, -4
 16634 0002 83B0     		sub	sp, sp, #12
 16635              	.LCFI534:
 16636              		.cfi_def_cfa_offset 24
 16637 0004 0546     		mov	r5, r0
5847:Core/Src/bno055.c ****     s16 reg_euler_r_s16 = BNO055_INIT_VALUE;
 16638              		.loc 1 5847 5 is_stmt 1 view .LVU4517
 16639              	.LVL2016:
5848:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16640              		.loc 1 5848 5 view .LVU4518
5848:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16641              		.loc 1 5848 9 is_stmt 0 view .LVU4519
 16642 0006 0023     		movs	r3, #0
 16643 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5849:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16644              		.loc 1 5849 5 is_stmt 1 view .LVU4520
 16645              	.LVL2017:
5850:Core/Src/bno055.c **** 
 16646              		.loc 1 5850 5 view .LVU4521
5850:Core/Src/bno055.c **** 
 16647              		.loc 1 5850 8 is_stmt 0 view .LVU4522
 16648 000c 8DF80530 		strb	r3, [sp, #5]
5854:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16649              		.loc 1 5854 5 is_stmt 1 view .LVU4523
5854:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
ARM GAS  /tmp/ccWoU29M.s 			page 480


 16650              		.loc 1 5854 16 is_stmt 0 view .LVU4524
 16651 0010 0DF10500 		add	r0, sp, #5
 16652              	.LVL2018:
5854:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16653              		.loc 1 5854 16 view .LVU4525
 16654 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16655              	.LVL2019:
 16656 0018 0446     		mov	r4, r0
 16657              	.LVL2020:
5855:Core/Src/bno055.c ****     {
 16658              		.loc 1 5855 5 is_stmt 1 view .LVU4526
5855:Core/Src/bno055.c ****     {
 16659              		.loc 1 5855 23 is_stmt 0 view .LVU4527
 16660 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5855:Core/Src/bno055.c ****     {
 16661              		.loc 1 5855 8 view .LVU4528
 16662 001e 012B     		cmp	r3, #1
 16663 0020 15D1     		bne	.L1188
 16664              	.L1183:
5859:Core/Src/bno055.c ****     {
 16665              		.loc 1 5859 5 is_stmt 1 view .LVU4529
5859:Core/Src/bno055.c ****     {
 16666              		.loc 1 5859 8 is_stmt 0 view .LVU4530
 16667 0022 DCB9     		cbnz	r4, .L1185
5862:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16668              		.loc 1 5862 9 is_stmt 1 view .LVU4531
5862:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16669              		.loc 1 5862 21 is_stmt 0 view .LVU4532
 16670 0024 0DF10600 		add	r0, sp, #6
 16671 0028 FFF7FEFF 		bl	bno055_read_euler_r
 16672              	.LVL2021:
5862:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16673              		.loc 1 5862 18 view .LVU4533
 16674 002c 54FA80F4 		uxtab	r4, r4, r0
 16675              	.LVL2022:
5862:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16676              		.loc 1 5862 18 view .LVU4534
 16677 0030 64B2     		sxtb	r4, r4
 16678              	.LVL2023:
5863:Core/Src/bno055.c ****         {
 16679              		.loc 1 5863 9 is_stmt 1 view .LVU4535
5863:Core/Src/bno055.c ****         {
 16680              		.loc 1 5863 12 is_stmt 0 view .LVU4536
 16681 0032 B4B9     		cbnz	r4, .L1186
5866:Core/Src/bno055.c ****             *euler_r_d = data_d;
 16682              		.loc 1 5866 13 is_stmt 1 view .LVU4537
5866:Core/Src/bno055.c ****             *euler_r_d = data_d;
 16683              		.loc 1 5866 22 is_stmt 0 view .LVU4538
 16684 0034 BDF90600 		ldrsh	r0, [sp, #6]
 16685 0038 FFF7FEFF 		bl	__aeabi_i2d
 16686              	.LVL2024:
5866:Core/Src/bno055.c ****             *euler_r_d = data_d;
 16687              		.loc 1 5866 20 view .LVU4539
 16688 003c 0022     		movs	r2, #0
 16689 003e 0A4B     		ldr	r3, .L1189
 16690 0040 FFF7FEFF 		bl	__aeabi_ddiv
 16691              	.LVL2025:
ARM GAS  /tmp/ccWoU29M.s 			page 481


5867:Core/Src/bno055.c ****         }
 16692              		.loc 1 5867 13 is_stmt 1 view .LVU4540
5867:Core/Src/bno055.c ****         }
 16693              		.loc 1 5867 24 is_stmt 0 view .LVU4541
 16694 0044 C5E90001 		strd	r0, [r5]
 16695              	.LVL2026:
 16696              	.L1184:
5879:Core/Src/bno055.c **** }
 16697              		.loc 1 5879 5 is_stmt 1 view .LVU4542
5880:Core/Src/bno055.c **** 
 16698              		.loc 1 5880 1 is_stmt 0 view .LVU4543
 16699 0048 2046     		mov	r0, r4
 16700 004a 03B0     		add	sp, sp, #12
 16701              	.LCFI535:
 16702              		.cfi_remember_state
 16703              		.cfi_def_cfa_offset 12
 16704              		@ sp needed
 16705 004c 30BD     		pop	{r4, r5, pc}
 16706              	.LVL2027:
 16707              	.L1188:
 16708              	.LCFI536:
 16709              		.cfi_restore_state
5857:Core/Src/bno055.c ****     }
 16710              		.loc 1 5857 9 is_stmt 1 view .LVU4544
5857:Core/Src/bno055.c ****     }
 16711              		.loc 1 5857 21 is_stmt 0 view .LVU4545
 16712 004e 0120     		movs	r0, #1
 16713 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 16714              	.LVL2028:
5857:Core/Src/bno055.c ****     }
 16715              		.loc 1 5857 18 view .LVU4546
 16716 0054 54FA80F4 		uxtab	r4, r4, r0
 16717              	.LVL2029:
5857:Core/Src/bno055.c ****     }
 16718              		.loc 1 5857 18 view .LVU4547
 16719 0058 64B2     		sxtb	r4, r4
 16720              	.LVL2030:
5857:Core/Src/bno055.c ****     }
 16721              		.loc 1 5857 18 view .LVU4548
 16722 005a E2E7     		b	.L1183
 16723              	.L1185:
5876:Core/Src/bno055.c ****     }
 16724              		.loc 1 5876 18 view .LVU4549
 16725 005c 4FF0FF34 		mov	r4, #-1
 16726              	.LVL2031:
5876:Core/Src/bno055.c ****     }
 16727              		.loc 1 5876 18 view .LVU4550
 16728 0060 F2E7     		b	.L1184
 16729              	.LVL2032:
 16730              	.L1186:
5871:Core/Src/bno055.c ****         }
 16731              		.loc 1 5871 22 view .LVU4551
 16732 0062 4FF0FF34 		mov	r4, #-1
 16733              	.LVL2033:
5871:Core/Src/bno055.c ****         }
 16734              		.loc 1 5871 22 view .LVU4552
 16735 0066 EFE7     		b	.L1184
ARM GAS  /tmp/ccWoU29M.s 			page 482


 16736              	.L1190:
 16737              		.align	2
 16738              	.L1189:
 16739 0068 00208C40 		.word	1082925056
 16740              		.cfi_endproc
 16741              	.LFE102:
 16743              		.section	.text.bno055_convert_double_euler_p_deg,"ax",%progbits
 16744              		.align	1
 16745              		.global	bno055_convert_double_euler_p_deg
 16746              		.syntax unified
 16747              		.thumb
 16748              		.thumb_func
 16749              		.fpu fpv4-sp-d16
 16751              	bno055_convert_double_euler_p_deg:
 16752              	.LVL2034:
 16753              	.LFB103:
5895:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16754              		.loc 1 5895 1 is_stmt 1 view -0
 16755              		.cfi_startproc
 16756              		@ args = 0, pretend = 0, frame = 8
 16757              		@ frame_needed = 0, uses_anonymous_args = 0
5895:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16758              		.loc 1 5895 1 is_stmt 0 view .LVU4554
 16759 0000 30B5     		push	{r4, r5, lr}
 16760              	.LCFI537:
 16761              		.cfi_def_cfa_offset 12
 16762              		.cfi_offset 4, -12
 16763              		.cfi_offset 5, -8
 16764              		.cfi_offset 14, -4
 16765 0002 83B0     		sub	sp, sp, #12
 16766              	.LCFI538:
 16767              		.cfi_def_cfa_offset 24
 16768 0004 0546     		mov	r5, r0
5896:Core/Src/bno055.c ****     s16 reg_euler_p_s16 = BNO055_INIT_VALUE;
 16769              		.loc 1 5896 5 is_stmt 1 view .LVU4555
 16770              	.LVL2035:
5897:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16771              		.loc 1 5897 5 view .LVU4556
5897:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16772              		.loc 1 5897 9 is_stmt 0 view .LVU4557
 16773 0006 0023     		movs	r3, #0
 16774 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5898:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16775              		.loc 1 5898 5 is_stmt 1 view .LVU4558
 16776              	.LVL2036:
5899:Core/Src/bno055.c **** 
 16777              		.loc 1 5899 5 view .LVU4559
5899:Core/Src/bno055.c **** 
 16778              		.loc 1 5899 8 is_stmt 0 view .LVU4560
 16779 000c 8DF80530 		strb	r3, [sp, #5]
5903:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16780              		.loc 1 5903 5 is_stmt 1 view .LVU4561
5903:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16781              		.loc 1 5903 16 is_stmt 0 view .LVU4562
 16782 0010 0DF10500 		add	r0, sp, #5
 16783              	.LVL2037:
5903:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
ARM GAS  /tmp/ccWoU29M.s 			page 483


 16784              		.loc 1 5903 16 view .LVU4563
 16785 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16786              	.LVL2038:
 16787 0018 0446     		mov	r4, r0
 16788              	.LVL2039:
5904:Core/Src/bno055.c ****     {
 16789              		.loc 1 5904 5 is_stmt 1 view .LVU4564
5904:Core/Src/bno055.c ****     {
 16790              		.loc 1 5904 23 is_stmt 0 view .LVU4565
 16791 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5904:Core/Src/bno055.c ****     {
 16792              		.loc 1 5904 8 view .LVU4566
 16793 001e ABB9     		cbnz	r3, .L1197
 16794              	.L1192:
5908:Core/Src/bno055.c ****     {
 16795              		.loc 1 5908 5 is_stmt 1 view .LVU4567
5908:Core/Src/bno055.c ****     {
 16796              		.loc 1 5908 8 is_stmt 0 view .LVU4568
 16797 0020 DCB9     		cbnz	r4, .L1194
5911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16798              		.loc 1 5911 9 is_stmt 1 view .LVU4569
5911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16799              		.loc 1 5911 21 is_stmt 0 view .LVU4570
 16800 0022 0DF10600 		add	r0, sp, #6
 16801 0026 FFF7FEFF 		bl	bno055_read_euler_p
 16802              	.LVL2040:
5911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16803              		.loc 1 5911 18 view .LVU4571
 16804 002a 54FA80F4 		uxtab	r4, r4, r0
 16805              	.LVL2041:
5911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16806              		.loc 1 5911 18 view .LVU4572
 16807 002e 64B2     		sxtb	r4, r4
 16808              	.LVL2042:
5912:Core/Src/bno055.c ****         {
 16809              		.loc 1 5912 9 is_stmt 1 view .LVU4573
5912:Core/Src/bno055.c ****         {
 16810              		.loc 1 5912 12 is_stmt 0 view .LVU4574
 16811 0030 B4B9     		cbnz	r4, .L1195
5915:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16812              		.loc 1 5915 13 is_stmt 1 view .LVU4575
5915:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16813              		.loc 1 5915 22 is_stmt 0 view .LVU4576
 16814 0032 BDF90600 		ldrsh	r0, [sp, #6]
 16815 0036 FFF7FEFF 		bl	__aeabi_i2d
 16816              	.LVL2043:
5915:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16817              		.loc 1 5915 20 view .LVU4577
 16818 003a 0022     		movs	r2, #0
 16819 003c 0A4B     		ldr	r3, .L1198
 16820 003e FFF7FEFF 		bl	__aeabi_dmul
 16821              	.LVL2044:
5916:Core/Src/bno055.c ****         }
 16822              		.loc 1 5916 13 is_stmt 1 view .LVU4578
5916:Core/Src/bno055.c ****         }
 16823              		.loc 1 5916 24 is_stmt 0 view .LVU4579
 16824 0042 C5E90001 		strd	r0, [r5]
ARM GAS  /tmp/ccWoU29M.s 			page 484


 16825              	.LVL2045:
 16826              	.L1193:
5928:Core/Src/bno055.c **** }
 16827              		.loc 1 5928 5 is_stmt 1 view .LVU4580
5929:Core/Src/bno055.c **** 
 16828              		.loc 1 5929 1 is_stmt 0 view .LVU4581
 16829 0046 2046     		mov	r0, r4
 16830 0048 03B0     		add	sp, sp, #12
 16831              	.LCFI539:
 16832              		.cfi_remember_state
 16833              		.cfi_def_cfa_offset 12
 16834              		@ sp needed
 16835 004a 30BD     		pop	{r4, r5, pc}
 16836              	.LVL2046:
 16837              	.L1197:
 16838              	.LCFI540:
 16839              		.cfi_restore_state
5906:Core/Src/bno055.c ****     }
 16840              		.loc 1 5906 9 is_stmt 1 view .LVU4582
5906:Core/Src/bno055.c ****     }
 16841              		.loc 1 5906 21 is_stmt 0 view .LVU4583
 16842 004c 0020     		movs	r0, #0
 16843 004e FFF7FEFF 		bl	bno055_set_euler_unit
 16844              	.LVL2047:
5906:Core/Src/bno055.c ****     }
 16845              		.loc 1 5906 18 view .LVU4584
 16846 0052 54FA80F4 		uxtab	r4, r4, r0
 16847              	.LVL2048:
5906:Core/Src/bno055.c ****     }
 16848              		.loc 1 5906 18 view .LVU4585
 16849 0056 64B2     		sxtb	r4, r4
 16850              	.LVL2049:
5906:Core/Src/bno055.c ****     }
 16851              		.loc 1 5906 18 view .LVU4586
 16852 0058 E2E7     		b	.L1192
 16853              	.L1194:
5925:Core/Src/bno055.c ****     }
 16854              		.loc 1 5925 18 view .LVU4587
 16855 005a 4FF0FF34 		mov	r4, #-1
 16856              	.LVL2050:
5925:Core/Src/bno055.c ****     }
 16857              		.loc 1 5925 18 view .LVU4588
 16858 005e F2E7     		b	.L1193
 16859              	.LVL2051:
 16860              	.L1195:
5920:Core/Src/bno055.c ****         }
 16861              		.loc 1 5920 22 view .LVU4589
 16862 0060 4FF0FF34 		mov	r4, #-1
 16863              	.LVL2052:
5920:Core/Src/bno055.c ****         }
 16864              		.loc 1 5920 22 view .LVU4590
 16865 0064 EFE7     		b	.L1193
 16866              	.L1199:
 16867 0066 00BF     		.align	2
 16868              	.L1198:
 16869 0068 0000B03F 		.word	1068498944
 16870              		.cfi_endproc
ARM GAS  /tmp/ccWoU29M.s 			page 485


 16871              	.LFE103:
 16873              		.section	.text.bno055_convert_double_euler_p_rad,"ax",%progbits
 16874              		.align	1
 16875              		.global	bno055_convert_double_euler_p_rad
 16876              		.syntax unified
 16877              		.thumb
 16878              		.thumb_func
 16879              		.fpu fpv4-sp-d16
 16881              	bno055_convert_double_euler_p_rad:
 16882              	.LVL2053:
 16883              	.LFB104:
5944:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16884              		.loc 1 5944 1 is_stmt 1 view -0
 16885              		.cfi_startproc
 16886              		@ args = 0, pretend = 0, frame = 8
 16887              		@ frame_needed = 0, uses_anonymous_args = 0
5944:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16888              		.loc 1 5944 1 is_stmt 0 view .LVU4592
 16889 0000 30B5     		push	{r4, r5, lr}
 16890              	.LCFI541:
 16891              		.cfi_def_cfa_offset 12
 16892              		.cfi_offset 4, -12
 16893              		.cfi_offset 5, -8
 16894              		.cfi_offset 14, -4
 16895 0002 83B0     		sub	sp, sp, #12
 16896              	.LCFI542:
 16897              		.cfi_def_cfa_offset 24
 16898 0004 0546     		mov	r5, r0
5945:Core/Src/bno055.c ****     s16 reg_euler_p_s16 = BNO055_INIT_VALUE;
 16899              		.loc 1 5945 5 is_stmt 1 view .LVU4593
 16900              	.LVL2054:
5946:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16901              		.loc 1 5946 5 view .LVU4594
5946:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16902              		.loc 1 5946 9 is_stmt 0 view .LVU4595
 16903 0006 0023     		movs	r3, #0
 16904 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5947:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16905              		.loc 1 5947 5 is_stmt 1 view .LVU4596
 16906              	.LVL2055:
5948:Core/Src/bno055.c **** 
 16907              		.loc 1 5948 5 view .LVU4597
5948:Core/Src/bno055.c **** 
 16908              		.loc 1 5948 8 is_stmt 0 view .LVU4598
 16909 000c 8DF80530 		strb	r3, [sp, #5]
5952:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16910              		.loc 1 5952 5 is_stmt 1 view .LVU4599
5952:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16911              		.loc 1 5952 16 is_stmt 0 view .LVU4600
 16912 0010 0DF10500 		add	r0, sp, #5
 16913              	.LVL2056:
5952:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16914              		.loc 1 5952 16 view .LVU4601
 16915 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16916              	.LVL2057:
 16917 0018 0446     		mov	r4, r0
 16918              	.LVL2058:
ARM GAS  /tmp/ccWoU29M.s 			page 486


5953:Core/Src/bno055.c ****     {
 16919              		.loc 1 5953 5 is_stmt 1 view .LVU4602
5953:Core/Src/bno055.c ****     {
 16920              		.loc 1 5953 23 is_stmt 0 view .LVU4603
 16921 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5953:Core/Src/bno055.c ****     {
 16922              		.loc 1 5953 8 view .LVU4604
 16923 001e 012B     		cmp	r3, #1
 16924 0020 15D1     		bne	.L1206
 16925              	.L1201:
5957:Core/Src/bno055.c ****     {
 16926              		.loc 1 5957 5 is_stmt 1 view .LVU4605
5957:Core/Src/bno055.c ****     {
 16927              		.loc 1 5957 8 is_stmt 0 view .LVU4606
 16928 0022 DCB9     		cbnz	r4, .L1203
5960:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16929              		.loc 1 5960 9 is_stmt 1 view .LVU4607
5960:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16930              		.loc 1 5960 21 is_stmt 0 view .LVU4608
 16931 0024 0DF10600 		add	r0, sp, #6
 16932 0028 FFF7FEFF 		bl	bno055_read_euler_p
 16933              	.LVL2059:
5960:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16934              		.loc 1 5960 18 view .LVU4609
 16935 002c 54FA80F4 		uxtab	r4, r4, r0
 16936              	.LVL2060:
5960:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16937              		.loc 1 5960 18 view .LVU4610
 16938 0030 64B2     		sxtb	r4, r4
 16939              	.LVL2061:
5961:Core/Src/bno055.c ****         {
 16940              		.loc 1 5961 9 is_stmt 1 view .LVU4611
5961:Core/Src/bno055.c ****         {
 16941              		.loc 1 5961 12 is_stmt 0 view .LVU4612
 16942 0032 B4B9     		cbnz	r4, .L1204
5964:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16943              		.loc 1 5964 13 is_stmt 1 view .LVU4613
5964:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16944              		.loc 1 5964 22 is_stmt 0 view .LVU4614
 16945 0034 BDF90600 		ldrsh	r0, [sp, #6]
 16946 0038 FFF7FEFF 		bl	__aeabi_i2d
 16947              	.LVL2062:
5964:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16948              		.loc 1 5964 20 view .LVU4615
 16949 003c 0022     		movs	r2, #0
 16950 003e 0A4B     		ldr	r3, .L1207
 16951 0040 FFF7FEFF 		bl	__aeabi_ddiv
 16952              	.LVL2063:
5965:Core/Src/bno055.c ****         }
 16953              		.loc 1 5965 13 is_stmt 1 view .LVU4616
5965:Core/Src/bno055.c ****         }
 16954              		.loc 1 5965 24 is_stmt 0 view .LVU4617
 16955 0044 C5E90001 		strd	r0, [r5]
 16956              	.LVL2064:
 16957              	.L1202:
5977:Core/Src/bno055.c **** }
 16958              		.loc 1 5977 5 is_stmt 1 view .LVU4618
ARM GAS  /tmp/ccWoU29M.s 			page 487


5978:Core/Src/bno055.c **** 
 16959              		.loc 1 5978 1 is_stmt 0 view .LVU4619
 16960 0048 2046     		mov	r0, r4
 16961 004a 03B0     		add	sp, sp, #12
 16962              	.LCFI543:
 16963              		.cfi_remember_state
 16964              		.cfi_def_cfa_offset 12
 16965              		@ sp needed
 16966 004c 30BD     		pop	{r4, r5, pc}
 16967              	.LVL2065:
 16968              	.L1206:
 16969              	.LCFI544:
 16970              		.cfi_restore_state
5955:Core/Src/bno055.c ****     }
 16971              		.loc 1 5955 9 is_stmt 1 view .LVU4620
5955:Core/Src/bno055.c ****     }
 16972              		.loc 1 5955 21 is_stmt 0 view .LVU4621
 16973 004e 0120     		movs	r0, #1
 16974 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 16975              	.LVL2066:
5955:Core/Src/bno055.c ****     }
 16976              		.loc 1 5955 18 view .LVU4622
 16977 0054 54FA80F4 		uxtab	r4, r4, r0
 16978              	.LVL2067:
5955:Core/Src/bno055.c ****     }
 16979              		.loc 1 5955 18 view .LVU4623
 16980 0058 64B2     		sxtb	r4, r4
 16981              	.LVL2068:
5955:Core/Src/bno055.c ****     }
 16982              		.loc 1 5955 18 view .LVU4624
 16983 005a E2E7     		b	.L1201
 16984              	.L1203:
5974:Core/Src/bno055.c ****     }
 16985              		.loc 1 5974 18 view .LVU4625
 16986 005c 4FF0FF34 		mov	r4, #-1
 16987              	.LVL2069:
5974:Core/Src/bno055.c ****     }
 16988              		.loc 1 5974 18 view .LVU4626
 16989 0060 F2E7     		b	.L1202
 16990              	.LVL2070:
 16991              	.L1204:
5969:Core/Src/bno055.c ****         }
 16992              		.loc 1 5969 22 view .LVU4627
 16993 0062 4FF0FF34 		mov	r4, #-1
 16994              	.LVL2071:
5969:Core/Src/bno055.c ****         }
 16995              		.loc 1 5969 22 view .LVU4628
 16996 0066 EFE7     		b	.L1202
 16997              	.L1208:
 16998              		.align	2
 16999              	.L1207:
 17000 0068 00208C40 		.word	1082925056
 17001              		.cfi_endproc
 17002              	.LFE104:
 17004              		.section	.text.bno055_convert_double_euler_hpr_deg,"ax",%progbits
 17005              		.align	1
 17006              		.global	bno055_convert_double_euler_hpr_deg
ARM GAS  /tmp/ccWoU29M.s 			page 488


 17007              		.syntax unified
 17008              		.thumb
 17009              		.thumb_func
 17010              		.fpu fpv4-sp-d16
 17012              	bno055_convert_double_euler_hpr_deg:
 17013              	.LVL2072:
 17014              	.LFB105:
5999:Core/Src/bno055.c ****     /* Variable used to return value of
 17015              		.loc 1 5999 1 is_stmt 1 view -0
 17016              		.cfi_startproc
 17017              		@ args = 0, pretend = 0, frame = 16
 17018              		@ frame_needed = 0, uses_anonymous_args = 0
5999:Core/Src/bno055.c ****     /* Variable used to return value of
 17019              		.loc 1 5999 1 is_stmt 0 view .LVU4630
 17020 0000 30B5     		push	{r4, r5, lr}
 17021              	.LCFI545:
 17022              		.cfi_def_cfa_offset 12
 17023              		.cfi_offset 4, -12
 17024              		.cfi_offset 5, -8
 17025              		.cfi_offset 14, -4
 17026 0002 85B0     		sub	sp, sp, #20
 17027              	.LCFI546:
 17028              		.cfi_def_cfa_offset 32
 17029 0004 0546     		mov	r5, r0
6002:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 17030              		.loc 1 6002 5 is_stmt 1 view .LVU4631
 17031              	.LVL2073:
6003:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 17032              		.loc 1 6003 5 view .LVU4632
6003:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 17033              		.loc 1 6003 27 is_stmt 0 view .LVU4633
 17034 0006 0023     		movs	r3, #0
 17035 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 17036 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 17037 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
6004:Core/Src/bno055.c **** 
 17038              		.loc 1 6004 5 is_stmt 1 view .LVU4634
6004:Core/Src/bno055.c **** 
 17039              		.loc 1 6004 8 is_stmt 0 view .LVU4635
 17040 0014 8DF80730 		strb	r3, [sp, #7]
6008:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 17041              		.loc 1 6008 5 is_stmt 1 view .LVU4636
6008:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 17042              		.loc 1 6008 16 is_stmt 0 view .LVU4637
 17043 0018 0DF10700 		add	r0, sp, #7
 17044              	.LVL2074:
6008:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 17045              		.loc 1 6008 16 view .LVU4638
 17046 001c FFF7FEFF 		bl	bno055_get_euler_unit
 17047              	.LVL2075:
 17048 0020 0446     		mov	r4, r0
 17049              	.LVL2076:
6009:Core/Src/bno055.c ****     {
 17050              		.loc 1 6009 5 is_stmt 1 view .LVU4639
6009:Core/Src/bno055.c ****     {
 17051              		.loc 1 6009 23 is_stmt 0 view .LVU4640
 17052 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 489


6009:Core/Src/bno055.c ****     {
 17053              		.loc 1 6009 8 view .LVU4641
 17054 0026 43BB     		cbnz	r3, .L1215
 17055              	.L1210:
6013:Core/Src/bno055.c ****     {
 17056              		.loc 1 6013 5 is_stmt 1 view .LVU4642
6013:Core/Src/bno055.c ****     {
 17057              		.loc 1 6013 8 is_stmt 0 view .LVU4643
 17058 0028 74BB     		cbnz	r4, .L1212
6016:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17059              		.loc 1 6016 9 is_stmt 1 view .LVU4644
6016:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17060              		.loc 1 6016 21 is_stmt 0 view .LVU4645
 17061 002a 02A8     		add	r0, sp, #8
 17062 002c FFF7FEFF 		bl	bno055_read_euler_hrp
 17063              	.LVL2077:
6016:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17064              		.loc 1 6016 18 view .LVU4646
 17065 0030 54FA80F4 		uxtab	r4, r4, r0
 17066              	.LVL2078:
6016:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17067              		.loc 1 6016 18 view .LVU4647
 17068 0034 64B2     		sxtb	r4, r4
 17069              	.LVL2079:
6017:Core/Src/bno055.c ****         {
 17070              		.loc 1 6017 9 is_stmt 1 view .LVU4648
6017:Core/Src/bno055.c ****         {
 17071              		.loc 1 6017 12 is_stmt 0 view .LVU4649
 17072 0036 54BB     		cbnz	r4, .L1213
6020:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_DEG);
 17073              		.loc 1 6020 13 is_stmt 1 view .LVU4650
6020:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_DEG);
 17074              		.loc 1 6020 28 is_stmt 0 view .LVU4651
 17075 0038 BDF90800 		ldrsh	r0, [sp, #8]
 17076 003c FFF7FEFF 		bl	__aeabi_i2d
 17077              	.LVL2080:
 17078 0040 0022     		movs	r2, #0
 17079 0042 144B     		ldr	r3, .L1216
 17080 0044 FFF7FEFF 		bl	__aeabi_dmul
 17081              	.LVL2081:
6020:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_DEG);
 17082              		.loc 1 6020 26 view .LVU4652
 17083 0048 C5E90001 		strd	r0, [r5]
6021:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_DEG);
 17084              		.loc 1 6021 13 is_stmt 1 view .LVU4653
6021:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_DEG);
 17085              		.loc 1 6021 28 is_stmt 0 view .LVU4654
 17086 004c BDF90C00 		ldrsh	r0, [sp, #12]
 17087 0050 FFF7FEFF 		bl	__aeabi_i2d
 17088              	.LVL2082:
 17089 0054 0022     		movs	r2, #0
 17090 0056 0F4B     		ldr	r3, .L1216
 17091 0058 FFF7FEFF 		bl	__aeabi_dmul
 17092              	.LVL2083:
6021:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_DEG);
 17093              		.loc 1 6021 26 view .LVU4655
 17094 005c C5E90401 		strd	r0, [r5, #16]
ARM GAS  /tmp/ccWoU29M.s 			page 490


6022:Core/Src/bno055.c ****         }
 17095              		.loc 1 6022 13 is_stmt 1 view .LVU4656
6022:Core/Src/bno055.c ****         }
 17096              		.loc 1 6022 28 is_stmt 0 view .LVU4657
 17097 0060 BDF90A00 		ldrsh	r0, [sp, #10]
 17098 0064 FFF7FEFF 		bl	__aeabi_i2d
 17099              	.LVL2084:
 17100 0068 0022     		movs	r2, #0
 17101 006a 0A4B     		ldr	r3, .L1216
 17102 006c FFF7FEFF 		bl	__aeabi_dmul
 17103              	.LVL2085:
6022:Core/Src/bno055.c ****         }
 17104              		.loc 1 6022 26 view .LVU4658
 17105 0070 C5E90201 		strd	r0, [r5, #8]
 17106              	.LVL2086:
 17107              	.L1211:
6034:Core/Src/bno055.c **** }
 17108              		.loc 1 6034 5 is_stmt 1 view .LVU4659
6035:Core/Src/bno055.c **** 
 17109              		.loc 1 6035 1 is_stmt 0 view .LVU4660
 17110 0074 2046     		mov	r0, r4
 17111 0076 05B0     		add	sp, sp, #20
 17112              	.LCFI547:
 17113              		.cfi_remember_state
 17114              		.cfi_def_cfa_offset 12
 17115              		@ sp needed
 17116 0078 30BD     		pop	{r4, r5, pc}
 17117              	.LVL2087:
 17118              	.L1215:
 17119              	.LCFI548:
 17120              		.cfi_restore_state
6011:Core/Src/bno055.c ****     }
 17121              		.loc 1 6011 9 is_stmt 1 view .LVU4661
6011:Core/Src/bno055.c ****     }
 17122              		.loc 1 6011 21 is_stmt 0 view .LVU4662
 17123 007a 0020     		movs	r0, #0
 17124 007c FFF7FEFF 		bl	bno055_set_euler_unit
 17125              	.LVL2088:
6011:Core/Src/bno055.c ****     }
 17126              		.loc 1 6011 18 view .LVU4663
 17127 0080 54FA80F4 		uxtab	r4, r4, r0
 17128              	.LVL2089:
6011:Core/Src/bno055.c ****     }
 17129              		.loc 1 6011 18 view .LVU4664
 17130 0084 64B2     		sxtb	r4, r4
 17131              	.LVL2090:
6011:Core/Src/bno055.c ****     }
 17132              		.loc 1 6011 18 view .LVU4665
 17133 0086 CFE7     		b	.L1210
 17134              	.L1212:
6031:Core/Src/bno055.c ****     }
 17135              		.loc 1 6031 18 view .LVU4666
 17136 0088 4FF0FF34 		mov	r4, #-1
 17137              	.LVL2091:
6031:Core/Src/bno055.c ****     }
 17138              		.loc 1 6031 18 view .LVU4667
 17139 008c F2E7     		b	.L1211
ARM GAS  /tmp/ccWoU29M.s 			page 491


 17140              	.LVL2092:
 17141              	.L1213:
6026:Core/Src/bno055.c ****         }
 17142              		.loc 1 6026 22 view .LVU4668
 17143 008e 4FF0FF34 		mov	r4, #-1
 17144              	.LVL2093:
6026:Core/Src/bno055.c ****         }
 17145              		.loc 1 6026 22 view .LVU4669
 17146 0092 EFE7     		b	.L1211
 17147              	.L1217:
 17148              		.align	2
 17149              	.L1216:
 17150 0094 0000B03F 		.word	1068498944
 17151              		.cfi_endproc
 17152              	.LFE105:
 17154              		.section	.text.bno055_convert_double_euler_hpr_rad,"ax",%progbits
 17155              		.align	1
 17156              		.global	bno055_convert_double_euler_hpr_rad
 17157              		.syntax unified
 17158              		.thumb
 17159              		.thumb_func
 17160              		.fpu fpv4-sp-d16
 17162              	bno055_convert_double_euler_hpr_rad:
 17163              	.LVL2094:
 17164              	.LFB106:
6056:Core/Src/bno055.c ****     /* Variable used to return value of
 17165              		.loc 1 6056 1 is_stmt 1 view -0
 17166              		.cfi_startproc
 17167              		@ args = 0, pretend = 0, frame = 16
 17168              		@ frame_needed = 0, uses_anonymous_args = 0
6056:Core/Src/bno055.c ****     /* Variable used to return value of
 17169              		.loc 1 6056 1 is_stmt 0 view .LVU4671
 17170 0000 30B5     		push	{r4, r5, lr}
 17171              	.LCFI549:
 17172              		.cfi_def_cfa_offset 12
 17173              		.cfi_offset 4, -12
 17174              		.cfi_offset 5, -8
 17175              		.cfi_offset 14, -4
 17176 0002 85B0     		sub	sp, sp, #20
 17177              	.LCFI550:
 17178              		.cfi_def_cfa_offset 32
 17179 0004 0446     		mov	r4, r0
6059:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 17180              		.loc 1 6059 5 is_stmt 1 view .LVU4672
 17181              	.LVL2095:
6060:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 17182              		.loc 1 6060 5 view .LVU4673
6060:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 17183              		.loc 1 6060 27 is_stmt 0 view .LVU4674
 17184 0006 0023     		movs	r3, #0
 17185 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 17186 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 17187 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
6061:Core/Src/bno055.c **** 
 17188              		.loc 1 6061 5 is_stmt 1 view .LVU4675
6061:Core/Src/bno055.c **** 
 17189              		.loc 1 6061 8 is_stmt 0 view .LVU4676
ARM GAS  /tmp/ccWoU29M.s 			page 492


 17190 0014 8DF80730 		strb	r3, [sp, #7]
6065:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 17191              		.loc 1 6065 5 is_stmt 1 view .LVU4677
6065:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 17192              		.loc 1 6065 16 is_stmt 0 view .LVU4678
 17193 0018 0DF10700 		add	r0, sp, #7
 17194              	.LVL2096:
6065:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 17195              		.loc 1 6065 16 view .LVU4679
 17196 001c FFF7FEFF 		bl	bno055_get_euler_unit
 17197              	.LVL2097:
6066:Core/Src/bno055.c ****     {
 17198              		.loc 1 6066 5 is_stmt 1 view .LVU4680
6066:Core/Src/bno055.c ****     {
 17199              		.loc 1 6066 23 is_stmt 0 view .LVU4681
 17200 0020 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
6066:Core/Src/bno055.c ****     {
 17201              		.loc 1 6066 8 view .LVU4682
 17202 0024 012B     		cmp	r3, #1
 17203 0026 26D1     		bne	.L1224
 17204              	.L1219:
6070:Core/Src/bno055.c ****     {
 17205              		.loc 1 6070 5 is_stmt 1 view .LVU4683
6070:Core/Src/bno055.c ****     {
 17206              		.loc 1 6070 8 is_stmt 0 view .LVU4684
 17207 0028 48BB     		cbnz	r0, .L1221
6073:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17208              		.loc 1 6073 9 is_stmt 1 view .LVU4685
6073:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17209              		.loc 1 6073 20 is_stmt 0 view .LVU4686
 17210 002a 02A8     		add	r0, sp, #8
 17211              	.LVL2098:
6073:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17212              		.loc 1 6073 20 view .LVU4687
 17213 002c FFF7FEFF 		bl	bno055_read_euler_hrp
 17214              	.LVL2099:
6074:Core/Src/bno055.c ****         {
 17215              		.loc 1 6074 9 is_stmt 1 view .LVU4688
6074:Core/Src/bno055.c ****         {
 17216              		.loc 1 6074 12 is_stmt 0 view .LVU4689
 17217 0030 0546     		mov	r5, r0
 17218 0032 38BB     		cbnz	r0, .L1222
6077:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
 17219              		.loc 1 6077 13 is_stmt 1 view .LVU4690
6077:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
 17220              		.loc 1 6077 28 is_stmt 0 view .LVU4691
 17221 0034 BDF90800 		ldrsh	r0, [sp, #8]
 17222              	.LVL2100:
6077:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
 17223              		.loc 1 6077 28 view .LVU4692
 17224 0038 FFF7FEFF 		bl	__aeabi_i2d
 17225              	.LVL2101:
 17226 003c 0022     		movs	r2, #0
 17227 003e 134B     		ldr	r3, .L1225
 17228 0040 FFF7FEFF 		bl	__aeabi_ddiv
 17229              	.LVL2102:
6077:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
ARM GAS  /tmp/ccWoU29M.s 			page 493


 17230              		.loc 1 6077 26 view .LVU4693
 17231 0044 C4E90001 		strd	r0, [r4]
6078:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_RAD);
 17232              		.loc 1 6078 13 is_stmt 1 view .LVU4694
6078:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_RAD);
 17233              		.loc 1 6078 28 is_stmt 0 view .LVU4695
 17234 0048 BDF90C00 		ldrsh	r0, [sp, #12]
 17235 004c FFF7FEFF 		bl	__aeabi_i2d
 17236              	.LVL2103:
 17237 0050 0022     		movs	r2, #0
 17238 0052 0E4B     		ldr	r3, .L1225
 17239 0054 FFF7FEFF 		bl	__aeabi_ddiv
 17240              	.LVL2104:
6078:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_RAD);
 17241              		.loc 1 6078 26 view .LVU4696
 17242 0058 C4E90401 		strd	r0, [r4, #16]
6079:Core/Src/bno055.c ****         }
 17243              		.loc 1 6079 13 is_stmt 1 view .LVU4697
6079:Core/Src/bno055.c ****         }
 17244              		.loc 1 6079 28 is_stmt 0 view .LVU4698
 17245 005c BDF90A00 		ldrsh	r0, [sp, #10]
 17246 0060 FFF7FEFF 		bl	__aeabi_i2d
 17247              	.LVL2105:
 17248 0064 0022     		movs	r2, #0
 17249 0066 094B     		ldr	r3, .L1225
 17250 0068 FFF7FEFF 		bl	__aeabi_ddiv
 17251              	.LVL2106:
6079:Core/Src/bno055.c ****         }
 17252              		.loc 1 6079 26 view .LVU4699
 17253 006c C4E90201 		strd	r0, [r4, #8]
 17254              	.L1220:
 17255              	.LVL2107:
6091:Core/Src/bno055.c **** }
 17256              		.loc 1 6091 5 is_stmt 1 view .LVU4700
6092:Core/Src/bno055.c **** 
 17257              		.loc 1 6092 1 is_stmt 0 view .LVU4701
 17258 0070 2846     		mov	r0, r5
 17259 0072 05B0     		add	sp, sp, #20
 17260              	.LCFI551:
 17261              		.cfi_remember_state
 17262              		.cfi_def_cfa_offset 12
 17263              		@ sp needed
 17264 0074 30BD     		pop	{r4, r5, pc}
 17265              	.LVL2108:
 17266              	.L1224:
 17267              	.LCFI552:
 17268              		.cfi_restore_state
6068:Core/Src/bno055.c ****     }
 17269              		.loc 1 6068 9 is_stmt 1 view .LVU4702
6068:Core/Src/bno055.c ****     }
 17270              		.loc 1 6068 20 is_stmt 0 view .LVU4703
 17271 0076 0120     		movs	r0, #1
 17272              	.LVL2109:
6068:Core/Src/bno055.c ****     }
 17273              		.loc 1 6068 20 view .LVU4704
 17274 0078 FFF7FEFF 		bl	bno055_set_euler_unit
 17275              	.LVL2110:
ARM GAS  /tmp/ccWoU29M.s 			page 494


6068:Core/Src/bno055.c ****     }
 17276              		.loc 1 6068 20 view .LVU4705
 17277 007c D4E7     		b	.L1219
 17278              	.L1221:
6088:Core/Src/bno055.c ****     }
 17279              		.loc 1 6088 18 view .LVU4706
 17280 007e 4FF0FF35 		mov	r5, #-1
 17281 0082 F5E7     		b	.L1220
 17282              	.L1222:
6083:Core/Src/bno055.c ****         }
 17283              		.loc 1 6083 22 view .LVU4707
 17284 0084 4FF0FF35 		mov	r5, #-1
 17285 0088 F2E7     		b	.L1220
 17286              	.L1226:
 17287 008a 00BF     		.align	2
 17288              	.L1225:
 17289 008c 00208C40 		.word	1082925056
 17290              		.cfi_endproc
 17291              	.LFE106:
 17293              		.section	.text.bno055_set_tilt_unit,"ax",%progbits
 17294              		.align	1
 17295              		.global	bno055_set_tilt_unit
 17296              		.syntax unified
 17297              		.thumb
 17298              		.thumb_func
 17299              		.fpu fpv4-sp-d16
 17301              	bno055_set_tilt_unit:
 17302              	.LVL2111:
 17303              	.LFB140:
7868:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17304              		.loc 1 7868 1 is_stmt 1 view -0
 17305              		.cfi_startproc
 17306              		@ args = 0, pretend = 0, frame = 8
 17307              		@ frame_needed = 0, uses_anonymous_args = 0
7868:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17308              		.loc 1 7868 1 is_stmt 0 view .LVU4709
 17309 0000 30B5     		push	{r4, r5, lr}
 17310              	.LCFI553:
 17311              		.cfi_def_cfa_offset 12
 17312              		.cfi_offset 4, -12
 17313              		.cfi_offset 5, -8
 17314              		.cfi_offset 14, -4
 17315 0002 83B0     		sub	sp, sp, #12
 17316              	.LCFI554:
 17317              		.cfi_def_cfa_offset 24
7869:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 17318              		.loc 1 7869 5 is_stmt 1 view .LVU4710
 17319              	.LVL2112:
7870:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 17320              		.loc 1 7870 5 view .LVU4711
7870:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 17321              		.loc 1 7870 8 is_stmt 0 view .LVU4712
 17322 0004 0023     		movs	r3, #0
 17323 0006 8DF80730 		strb	r3, [sp, #7]
7871:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 17324              		.loc 1 7871 5 is_stmt 1 view .LVU4713
7871:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 495


 17325              		.loc 1 7871 8 is_stmt 0 view .LVU4714
 17326 000a 8DF80630 		strb	r3, [sp, #6]
7872:Core/Src/bno055.c **** 
 17327              		.loc 1 7872 5 is_stmt 1 view .LVU4715
 17328              	.LVL2113:
7875:Core/Src/bno055.c ****     {
 17329              		.loc 1 7875 5 view .LVU4716
7875:Core/Src/bno055.c ****     {
 17330              		.loc 1 7875 18 is_stmt 0 view .LVU4717
 17331 000e 264B     		ldr	r3, .L1237
 17332 0010 1B68     		ldr	r3, [r3]
7875:Core/Src/bno055.c ****     {
 17333              		.loc 1 7875 8 view .LVU4718
 17334 0012 002B     		cmp	r3, #0
 17335 0014 44D0     		beq	.L1231
 17336 0016 0546     		mov	r5, r0
7884:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17337              		.loc 1 7884 9 is_stmt 1 view .LVU4719
7884:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17338              		.loc 1 7884 19 is_stmt 0 view .LVU4720
 17339 0018 0DF10600 		add	r0, sp, #6
 17340              	.LVL2114:
7884:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17341              		.loc 1 7884 19 view .LVU4721
 17342 001c FFF7FEFF 		bl	bno055_get_operation_mode
 17343              	.LVL2115:
7885:Core/Src/bno055.c ****         {
 17344              		.loc 1 7885 9 is_stmt 1 view .LVU4722
7885:Core/Src/bno055.c ****         {
 17345              		.loc 1 7885 12 is_stmt 0 view .LVU4723
 17346 0020 0446     		mov	r4, r0
 17347 0022 60BB     		cbnz	r0, .L1232
7887:Core/Src/bno055.c ****             {
 17348              		.loc 1 7887 13 is_stmt 1 view .LVU4724
7887:Core/Src/bno055.c ****             {
 17349              		.loc 1 7887 32 is_stmt 0 view .LVU4725
 17350 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
7887:Core/Src/bno055.c ****             {
 17351              		.loc 1 7887 16 view .LVU4726
 17352 0028 1BBB     		cbnz	r3, .L1235
 17353              	.LVL2116:
 17354              	.L1230:
7891:Core/Src/bno055.c ****             {
 17355              		.loc 1 7891 13 is_stmt 1 view .LVU4727
7891:Core/Src/bno055.c ****             {
 17356              		.loc 1 7891 16 is_stmt 0 view .LVU4728
 17357 002a 84BB     		cbnz	r4, .L1233
7893:Core/Src/bno055.c ****                                                           BNO055_TILT_UNIT_REG,
 17358              		.loc 1 7893 17 is_stmt 1 view .LVU4729
7893:Core/Src/bno055.c ****                                                           BNO055_TILT_UNIT_REG,
 17359              		.loc 1 7893 36 is_stmt 0 view .LVU4730
 17360 002c 1E4B     		ldr	r3, .L1237
 17361 002e 1868     		ldr	r0, [r3]
 17362 0030 0469     		ldr	r4, [r0, #16]
 17363              	.LVL2117:
7893:Core/Src/bno055.c ****                                                           BNO055_TILT_UNIT_REG,
 17364              		.loc 1 7893 28 view .LVU4731
ARM GAS  /tmp/ccWoU29M.s 			page 496


 17365 0032 0123     		movs	r3, #1
 17366 0034 0DF10702 		add	r2, sp, #7
 17367 0038 3B21     		movs	r1, #59
 17368 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 17369 003c A047     		blx	r4
 17370              	.LVL2118:
7897:Core/Src/bno055.c ****                 {
 17371              		.loc 1 7897 17 is_stmt 1 view .LVU4732
7897:Core/Src/bno055.c ****                 {
 17372              		.loc 1 7897 20 is_stmt 0 view .LVU4733
 17373 003e 0446     		mov	r4, r0
 17374 0040 F8B9     		cbnz	r0, .L1229
7899:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17375              		.loc 1 7899 21 is_stmt 1 view .LVU4734
7899:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17376              		.loc 1 7899 32 is_stmt 0 view .LVU4735
 17377 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 17378              	.LVL2119:
7899:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17379              		.loc 1 7899 32 view .LVU4736
 17380 0046 20F00800 		bic	r0, r0, #8
 17381 004a 43B2     		sxtb	r3, r0
 17382 004c E800     		lsls	r0, r5, #3
 17383 004e 00F00800 		and	r0, r0, #8
 17384 0052 1843     		orrs	r0, r0, r3
7899:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17385              		.loc 1 7899 30 view .LVU4737
 17386 0054 8DF80700 		strb	r0, [sp, #7]
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
 17387              		.loc 1 7900 21 is_stmt 1 view .LVU4738
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
 17388              		.loc 1 7900 41 is_stmt 0 view .LVU4739
 17389 0058 134B     		ldr	r3, .L1237
 17390 005a 1868     		ldr	r0, [r3]
 17391 005c C568     		ldr	r5, [r0, #12]
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
 17392              		.loc 1 7900 33 view .LVU4740
 17393 005e 0123     		movs	r3, #1
 17394 0060 0DF10702 		add	r2, sp, #7
 17395 0064 3B21     		movs	r1, #59
 17396 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 17397 0068 A847     		blx	r5
 17398              	.LVL2120:
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
 17399              		.loc 1 7900 30 view .LVU4741
 17400 006a 54FA80F4 		uxtab	r4, r4, r0
 17401 006e 64B2     		sxtb	r4, r4
 17402              	.LVL2121:
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
 17403              		.loc 1 7900 30 view .LVU4742
 17404 0070 07E0     		b	.L1229
 17405              	.LVL2122:
 17406              	.L1235:
7889:Core/Src/bno055.c ****             }
 17407              		.loc 1 7889 17 is_stmt 1 view .LVU4743
7889:Core/Src/bno055.c ****             }
 17408              		.loc 1 7889 28 is_stmt 0 view .LVU4744
ARM GAS  /tmp/ccWoU29M.s 			page 497


 17409 0072 FFF7FEFF 		bl	bno055_set_operation_mode
 17410              	.LVL2123:
7889:Core/Src/bno055.c ****             }
 17411              		.loc 1 7889 25 view .LVU4745
 17412 0076 54FA80F4 		uxtab	r4, r4, r0
 17413 007a 64B2     		sxtb	r4, r4
 17414              	.LVL2124:
7889:Core/Src/bno055.c ****             }
 17415              		.loc 1 7889 25 view .LVU4746
 17416 007c D5E7     		b	.L1230
 17417              	.LVL2125:
 17418              	.L1232:
7913:Core/Src/bno055.c ****         }
 17419              		.loc 1 7913 22 view .LVU4747
 17420 007e 4FF0FF34 		mov	r4, #-1
 17421              	.LVL2126:
 17422              	.L1229:
7916:Core/Src/bno055.c ****     {
 17423              		.loc 1 7916 5 is_stmt 1 view .LVU4748
7916:Core/Src/bno055.c ****     {
 17424              		.loc 1 7916 24 is_stmt 0 view .LVU4749
 17425 0082 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
7916:Core/Src/bno055.c ****     {
 17426              		.loc 1 7916 8 view .LVU4750
 17427 0086 28B9     		cbnz	r0, .L1236
 17428              	.LVL2127:
 17429              	.L1228:
7924:Core/Src/bno055.c **** 
 17430              		.loc 1 7924 1 view .LVU4751
 17431 0088 2046     		mov	r0, r4
 17432 008a 03B0     		add	sp, sp, #12
 17433              	.LCFI555:
 17434              		.cfi_remember_state
 17435              		.cfi_def_cfa_offset 12
 17436              		@ sp needed
 17437 008c 30BD     		pop	{r4, r5, pc}
 17438              	.LVL2128:
 17439              	.L1233:
 17440              	.LCFI556:
 17441              		.cfi_restore_state
7908:Core/Src/bno055.c ****             }
 17442              		.loc 1 7908 26 view .LVU4752
 17443 008e 4FF0FF34 		mov	r4, #-1
 17444              	.LVL2129:
7908:Core/Src/bno055.c ****             }
 17445              		.loc 1 7908 26 view .LVU4753
 17446 0092 F6E7     		b	.L1229
 17447              	.LVL2130:
 17448              	.L1236:
7920:Core/Src/bno055.c ****     }
 17449              		.loc 1 7920 9 is_stmt 1 view .LVU4754
7920:Core/Src/bno055.c ****     }
 17450              		.loc 1 7920 21 is_stmt 0 view .LVU4755
 17451 0094 FFF7FEFF 		bl	bno055_set_operation_mode
 17452              	.LVL2131:
7920:Core/Src/bno055.c ****     }
 17453              		.loc 1 7920 18 view .LVU4756
ARM GAS  /tmp/ccWoU29M.s 			page 498


 17454 0098 54FA80F4 		uxtab	r4, r4, r0
 17455              	.LVL2132:
7920:Core/Src/bno055.c ****     }
 17456              		.loc 1 7920 18 view .LVU4757
 17457 009c 64B2     		sxtb	r4, r4
 17458              	.LVL2133:
7920:Core/Src/bno055.c ****     }
 17459              		.loc 1 7920 18 view .LVU4758
 17460 009e F3E7     		b	.L1228
 17461              	.LVL2134:
 17462              	.L1231:
7877:Core/Src/bno055.c ****     }
 17463              		.loc 1 7877 16 view .LVU4759
 17464 00a0 6FF07E04 		mvn	r4, #126
 17465 00a4 F0E7     		b	.L1228
 17466              	.L1238:
 17467 00a6 00BF     		.align	2
 17468              	.L1237:
 17469 00a8 00000000 		.word	.LANCHOR0
 17470              		.cfi_endproc
 17471              	.LFE140:
 17473              		.section	.text.bno055_set_temp_unit,"ax",%progbits
 17474              		.align	1
 17475              		.global	bno055_set_temp_unit
 17476              		.syntax unified
 17477              		.thumb
 17478              		.thumb_func
 17479              		.fpu fpv4-sp-d16
 17481              	bno055_set_temp_unit:
 17482              	.LVL2135:
 17483              	.LFB142:
8000:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17484              		.loc 1 8000 1 is_stmt 1 view -0
 17485              		.cfi_startproc
 17486              		@ args = 0, pretend = 0, frame = 8
 17487              		@ frame_needed = 0, uses_anonymous_args = 0
8000:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17488              		.loc 1 8000 1 is_stmt 0 view .LVU4761
 17489 0000 30B5     		push	{r4, r5, lr}
 17490              	.LCFI557:
 17491              		.cfi_def_cfa_offset 12
 17492              		.cfi_offset 4, -12
 17493              		.cfi_offset 5, -8
 17494              		.cfi_offset 14, -4
 17495 0002 83B0     		sub	sp, sp, #12
 17496              	.LCFI558:
 17497              		.cfi_def_cfa_offset 24
8001:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 17498              		.loc 1 8001 5 is_stmt 1 view .LVU4762
 17499              	.LVL2136:
8002:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 17500              		.loc 1 8002 5 view .LVU4763
8002:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 17501              		.loc 1 8002 8 is_stmt 0 view .LVU4764
 17502 0004 0023     		movs	r3, #0
 17503 0006 8DF80730 		strb	r3, [sp, #7]
8003:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 499


 17504              		.loc 1 8003 5 is_stmt 1 view .LVU4765
8003:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 17505              		.loc 1 8003 8 is_stmt 0 view .LVU4766
 17506 000a 8DF80630 		strb	r3, [sp, #6]
8004:Core/Src/bno055.c **** 
 17507              		.loc 1 8004 5 is_stmt 1 view .LVU4767
 17508              	.LVL2137:
8007:Core/Src/bno055.c ****     {
 17509              		.loc 1 8007 5 view .LVU4768
8007:Core/Src/bno055.c ****     {
 17510              		.loc 1 8007 18 is_stmt 0 view .LVU4769
 17511 000e 264B     		ldr	r3, .L1249
 17512 0010 1B68     		ldr	r3, [r3]
8007:Core/Src/bno055.c ****     {
 17513              		.loc 1 8007 8 view .LVU4770
 17514 0012 002B     		cmp	r3, #0
 17515 0014 44D0     		beq	.L1243
 17516 0016 0546     		mov	r5, r0
8016:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17517              		.loc 1 8016 9 is_stmt 1 view .LVU4771
8016:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17518              		.loc 1 8016 19 is_stmt 0 view .LVU4772
 17519 0018 0DF10600 		add	r0, sp, #6
 17520              	.LVL2138:
8016:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17521              		.loc 1 8016 19 view .LVU4773
 17522 001c FFF7FEFF 		bl	bno055_get_operation_mode
 17523              	.LVL2139:
8017:Core/Src/bno055.c ****         {
 17524              		.loc 1 8017 9 is_stmt 1 view .LVU4774
8017:Core/Src/bno055.c ****         {
 17525              		.loc 1 8017 12 is_stmt 0 view .LVU4775
 17526 0020 0446     		mov	r4, r0
 17527 0022 60BB     		cbnz	r0, .L1244
8019:Core/Src/bno055.c ****             {
 17528              		.loc 1 8019 13 is_stmt 1 view .LVU4776
8019:Core/Src/bno055.c ****             {
 17529              		.loc 1 8019 32 is_stmt 0 view .LVU4777
 17530 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
8019:Core/Src/bno055.c ****             {
 17531              		.loc 1 8019 16 view .LVU4778
 17532 0028 1BBB     		cbnz	r3, .L1247
 17533              	.LVL2140:
 17534              	.L1242:
8023:Core/Src/bno055.c ****             {
 17535              		.loc 1 8023 13 is_stmt 1 view .LVU4779
8023:Core/Src/bno055.c ****             {
 17536              		.loc 1 8023 16 is_stmt 0 view .LVU4780
 17537 002a 84BB     		cbnz	r4, .L1245
8026:Core/Src/bno055.c ****                                                           BNO055_TEMP_UNIT_REG,
 17538              		.loc 1 8026 17 is_stmt 1 view .LVU4781
8026:Core/Src/bno055.c ****                                                           BNO055_TEMP_UNIT_REG,
 17539              		.loc 1 8026 36 is_stmt 0 view .LVU4782
 17540 002c 1E4B     		ldr	r3, .L1249
 17541 002e 1868     		ldr	r0, [r3]
 17542 0030 0469     		ldr	r4, [r0, #16]
 17543              	.LVL2141:
ARM GAS  /tmp/ccWoU29M.s 			page 500


8026:Core/Src/bno055.c ****                                                           BNO055_TEMP_UNIT_REG,
 17544              		.loc 1 8026 28 view .LVU4783
 17545 0032 0123     		movs	r3, #1
 17546 0034 0DF10702 		add	r2, sp, #7
 17547 0038 3B21     		movs	r1, #59
 17548 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 17549 003c A047     		blx	r4
 17550              	.LVL2142:
8030:Core/Src/bno055.c ****                 {
 17551              		.loc 1 8030 17 is_stmt 1 view .LVU4784
8030:Core/Src/bno055.c ****                 {
 17552              		.loc 1 8030 20 is_stmt 0 view .LVU4785
 17553 003e 0446     		mov	r4, r0
 17554 0040 F8B9     		cbnz	r0, .L1241
8032:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17555              		.loc 1 8032 21 is_stmt 1 view .LVU4786
8032:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17556              		.loc 1 8032 32 is_stmt 0 view .LVU4787
 17557 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 17558              	.LVL2143:
8032:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17559              		.loc 1 8032 32 view .LVU4788
 17560 0046 20F01000 		bic	r0, r0, #16
 17561 004a 43B2     		sxtb	r3, r0
 17562 004c 2801     		lsls	r0, r5, #4
 17563 004e 00F01000 		and	r0, r0, #16
 17564 0052 1843     		orrs	r0, r0, r3
8032:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17565              		.loc 1 8032 30 view .LVU4789
 17566 0054 8DF80700 		strb	r0, [sp, #7]
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
 17567              		.loc 1 8033 21 is_stmt 1 view .LVU4790
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
 17568              		.loc 1 8033 41 is_stmt 0 view .LVU4791
 17569 0058 134B     		ldr	r3, .L1249
 17570 005a 1868     		ldr	r0, [r3]
 17571 005c C568     		ldr	r5, [r0, #12]
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
 17572              		.loc 1 8033 33 view .LVU4792
 17573 005e 0123     		movs	r3, #1
 17574 0060 0DF10702 		add	r2, sp, #7
 17575 0064 3B21     		movs	r1, #59
 17576 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 17577 0068 A847     		blx	r5
 17578              	.LVL2144:
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
 17579              		.loc 1 8033 30 view .LVU4793
 17580 006a 54FA80F4 		uxtab	r4, r4, r0
 17581 006e 64B2     		sxtb	r4, r4
 17582              	.LVL2145:
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
 17583              		.loc 1 8033 30 view .LVU4794
 17584 0070 07E0     		b	.L1241
 17585              	.LVL2146:
 17586              	.L1247:
8021:Core/Src/bno055.c ****             }
 17587              		.loc 1 8021 17 is_stmt 1 view .LVU4795
ARM GAS  /tmp/ccWoU29M.s 			page 501


8021:Core/Src/bno055.c ****             }
 17588              		.loc 1 8021 28 is_stmt 0 view .LVU4796
 17589 0072 FFF7FEFF 		bl	bno055_set_operation_mode
 17590              	.LVL2147:
8021:Core/Src/bno055.c ****             }
 17591              		.loc 1 8021 25 view .LVU4797
 17592 0076 54FA80F4 		uxtab	r4, r4, r0
 17593 007a 64B2     		sxtb	r4, r4
 17594              	.LVL2148:
8021:Core/Src/bno055.c ****             }
 17595              		.loc 1 8021 25 view .LVU4798
 17596 007c D5E7     		b	.L1242
 17597              	.LVL2149:
 17598              	.L1244:
8046:Core/Src/bno055.c ****         }
 17599              		.loc 1 8046 22 view .LVU4799
 17600 007e 4FF0FF34 		mov	r4, #-1
 17601              	.LVL2150:
 17602              	.L1241:
8049:Core/Src/bno055.c ****     {
 17603              		.loc 1 8049 5 is_stmt 1 view .LVU4800
8049:Core/Src/bno055.c ****     {
 17604              		.loc 1 8049 24 is_stmt 0 view .LVU4801
 17605 0082 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
8049:Core/Src/bno055.c ****     {
 17606              		.loc 1 8049 8 view .LVU4802
 17607 0086 28B9     		cbnz	r0, .L1248
 17608              	.LVL2151:
 17609              	.L1240:
8057:Core/Src/bno055.c **** 
 17610              		.loc 1 8057 1 view .LVU4803
 17611 0088 2046     		mov	r0, r4
 17612 008a 03B0     		add	sp, sp, #12
 17613              	.LCFI559:
 17614              		.cfi_remember_state
 17615              		.cfi_def_cfa_offset 12
 17616              		@ sp needed
 17617 008c 30BD     		pop	{r4, r5, pc}
 17618              	.LVL2152:
 17619              	.L1245:
 17620              	.LCFI560:
 17621              		.cfi_restore_state
8041:Core/Src/bno055.c ****             }
 17622              		.loc 1 8041 26 view .LVU4804
 17623 008e 4FF0FF34 		mov	r4, #-1
 17624              	.LVL2153:
8041:Core/Src/bno055.c ****             }
 17625              		.loc 1 8041 26 view .LVU4805
 17626 0092 F6E7     		b	.L1241
 17627              	.LVL2154:
 17628              	.L1248:
8053:Core/Src/bno055.c ****     }
 17629              		.loc 1 8053 9 is_stmt 1 view .LVU4806
8053:Core/Src/bno055.c ****     }
 17630              		.loc 1 8053 21 is_stmt 0 view .LVU4807
 17631 0094 FFF7FEFF 		bl	bno055_set_operation_mode
 17632              	.LVL2155:
ARM GAS  /tmp/ccWoU29M.s 			page 502


8053:Core/Src/bno055.c ****     }
 17633              		.loc 1 8053 18 view .LVU4808
 17634 0098 54FA80F4 		uxtab	r4, r4, r0
 17635              	.LVL2156:
8053:Core/Src/bno055.c ****     }
 17636              		.loc 1 8053 18 view .LVU4809
 17637 009c 64B2     		sxtb	r4, r4
 17638              	.LVL2157:
8053:Core/Src/bno055.c ****     }
 17639              		.loc 1 8053 18 view .LVU4810
 17640 009e F3E7     		b	.L1240
 17641              	.LVL2158:
 17642              	.L1243:
8009:Core/Src/bno055.c ****     }
 17643              		.loc 1 8009 16 view .LVU4811
 17644 00a0 6FF07E04 		mvn	r4, #126
 17645 00a4 F0E7     		b	.L1240
 17646              	.L1250:
 17647 00a6 00BF     		.align	2
 17648              	.L1249:
 17649 00a8 00000000 		.word	.LANCHOR0
 17650              		.cfi_endproc
 17651              	.LFE142:
 17653              		.global	__aeabi_dadd
 17654              		.section	.text.bno055_convert_float_temp_fahrenheit,"ax",%progbits
 17655              		.align	1
 17656              		.global	bno055_convert_float_temp_fahrenheit
 17657              		.syntax unified
 17658              		.thumb
 17659              		.thumb_func
 17660              		.fpu fpv4-sp-d16
 17662              	bno055_convert_float_temp_fahrenheit:
 17663              	.LVL2159:
 17664              	.LFB77:
4573:Core/Src/bno055.c ****     /* Variable used to return value of
 17665              		.loc 1 4573 1 is_stmt 1 view -0
 17666              		.cfi_startproc
 17667              		@ args = 0, pretend = 0, frame = 8
 17668              		@ frame_needed = 0, uses_anonymous_args = 0
4573:Core/Src/bno055.c ****     /* Variable used to return value of
 17669              		.loc 1 4573 1 is_stmt 0 view .LVU4813
 17670 0000 30B5     		push	{r4, r5, lr}
 17671              	.LCFI561:
 17672              		.cfi_def_cfa_offset 12
 17673              		.cfi_offset 4, -12
 17674              		.cfi_offset 5, -8
 17675              		.cfi_offset 14, -4
 17676 0002 83B0     		sub	sp, sp, #12
 17677              	.LCFI562:
 17678              		.cfi_def_cfa_offset 24
 17679 0004 0546     		mov	r5, r0
4576:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
 17680              		.loc 1 4576 5 is_stmt 1 view .LVU4814
 17681              	.LVL2160:
4577:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 17682              		.loc 1 4577 5 view .LVU4815
4577:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccWoU29M.s 			page 503


 17683              		.loc 1 4577 8 is_stmt 0 view .LVU4816
 17684 0006 0023     		movs	r3, #0
 17685 0008 8DF80730 		strb	r3, [sp, #7]
4578:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
 17686              		.loc 1 4578 5 is_stmt 1 view .LVU4817
 17687              	.LVL2161:
4579:Core/Src/bno055.c **** 
 17688              		.loc 1 4579 5 view .LVU4818
4579:Core/Src/bno055.c **** 
 17689              		.loc 1 4579 8 is_stmt 0 view .LVU4819
 17690 000c 8DF80630 		strb	r3, [sp, #6]
4583:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17691              		.loc 1 4583 5 is_stmt 1 view .LVU4820
4583:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17692              		.loc 1 4583 16 is_stmt 0 view .LVU4821
 17693 0010 0DF10600 		add	r0, sp, #6
 17694              	.LVL2162:
4583:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17695              		.loc 1 4583 16 view .LVU4822
 17696 0014 FFF7FEFF 		bl	bno055_get_temp_unit
 17697              	.LVL2163:
 17698 0018 0446     		mov	r4, r0
 17699              	.LVL2164:
4584:Core/Src/bno055.c ****     {
 17700              		.loc 1 4584 5 is_stmt 1 view .LVU4823
4584:Core/Src/bno055.c ****     {
 17701              		.loc 1 4584 22 is_stmt 0 view .LVU4824
 17702 001a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
4584:Core/Src/bno055.c ****     {
 17703              		.loc 1 4584 8 view .LVU4825
 17704 001e 012B     		cmp	r3, #1
 17705 0020 16D1     		bne	.L1257
 17706              	.L1252:
4588:Core/Src/bno055.c ****     {
 17707              		.loc 1 4588 5 is_stmt 1 view .LVU4826
4588:Core/Src/bno055.c ****     {
 17708              		.loc 1 4588 8 is_stmt 0 view .LVU4827
 17709 0022 E4B9     		cbnz	r4, .L1254
4591:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17710              		.loc 1 4591 9 is_stmt 1 view .LVU4828
4591:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17711              		.loc 1 4591 21 is_stmt 0 view .LVU4829
 17712 0024 0DF10700 		add	r0, sp, #7
 17713 0028 FFF7FEFF 		bl	bno055_read_temp_data
 17714              	.LVL2165:
4591:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17715              		.loc 1 4591 18 view .LVU4830
 17716 002c 54FA80F4 		uxtab	r4, r4, r0
 17717              	.LVL2166:
4591:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17718              		.loc 1 4591 18 view .LVU4831
 17719 0030 64B2     		sxtb	r4, r4
 17720              	.LVL2167:
4592:Core/Src/bno055.c ****         {
 17721              		.loc 1 4592 9 is_stmt 1 view .LVU4832
4592:Core/Src/bno055.c ****         {
 17722              		.loc 1 4592 12 is_stmt 0 view .LVU4833
ARM GAS  /tmp/ccWoU29M.s 			page 504


 17723 0032 BCB9     		cbnz	r4, .L1255
4595:Core/Src/bno055.c ****             *temp_f = data_f;
 17724              		.loc 1 4595 13 is_stmt 1 view .LVU4834
4595:Core/Src/bno055.c ****             *temp_f = data_f;
 17725              		.loc 1 4595 42 is_stmt 0 view .LVU4835
 17726 0034 9DF90700 		ldrsb	r0, [sp, #7]
 17727 0038 FFF7FEFF 		bl	__aeabi_i2d
 17728              	.LVL2168:
 17729 003c 0246     		mov	r2, r0
 17730 003e 0B46     		mov	r3, r1
 17731 0040 FFF7FEFF 		bl	__aeabi_dadd
 17732              	.LVL2169:
4595:Core/Src/bno055.c ****             *temp_f = data_f;
 17733              		.loc 1 4595 20 view .LVU4836
 17734 0044 FFF7FEFF 		bl	__aeabi_d2f
 17735              	.LVL2170:
4596:Core/Src/bno055.c ****         }
 17736              		.loc 1 4596 13 is_stmt 1 view .LVU4837
4596:Core/Src/bno055.c ****         }
 17737              		.loc 1 4596 21 is_stmt 0 view .LVU4838
 17738 0048 2860     		str	r0, [r5]	@ float
 17739              	.LVL2171:
 17740              	.L1253:
4608:Core/Src/bno055.c **** }
 17741              		.loc 1 4608 5 is_stmt 1 view .LVU4839
4609:Core/Src/bno055.c **** 
 17742              		.loc 1 4609 1 is_stmt 0 view .LVU4840
 17743 004a 2046     		mov	r0, r4
 17744 004c 03B0     		add	sp, sp, #12
 17745              	.LCFI563:
 17746              		.cfi_remember_state
 17747              		.cfi_def_cfa_offset 12
 17748              		@ sp needed
 17749 004e 30BD     		pop	{r4, r5, pc}
 17750              	.LVL2172:
 17751              	.L1257:
 17752              	.LCFI564:
 17753              		.cfi_restore_state
4586:Core/Src/bno055.c ****     }
 17754              		.loc 1 4586 9 is_stmt 1 view .LVU4841
4586:Core/Src/bno055.c ****     }
 17755              		.loc 1 4586 21 is_stmt 0 view .LVU4842
 17756 0050 0120     		movs	r0, #1
 17757 0052 FFF7FEFF 		bl	bno055_set_temp_unit
 17758              	.LVL2173:
4586:Core/Src/bno055.c ****     }
 17759              		.loc 1 4586 18 view .LVU4843
 17760 0056 54FA80F4 		uxtab	r4, r4, r0
 17761              	.LVL2174:
4586:Core/Src/bno055.c ****     }
 17762              		.loc 1 4586 18 view .LVU4844
 17763 005a 64B2     		sxtb	r4, r4
 17764              	.LVL2175:
4586:Core/Src/bno055.c ****     }
 17765              		.loc 1 4586 18 view .LVU4845
 17766 005c E1E7     		b	.L1252
 17767              	.L1254:
ARM GAS  /tmp/ccWoU29M.s 			page 505


4605:Core/Src/bno055.c ****     }
 17768              		.loc 1 4605 18 view .LVU4846
 17769 005e 4FF0FF34 		mov	r4, #-1
 17770              	.LVL2176:
4605:Core/Src/bno055.c ****     }
 17771              		.loc 1 4605 18 view .LVU4847
 17772 0062 F2E7     		b	.L1253
 17773              	.LVL2177:
 17774              	.L1255:
4600:Core/Src/bno055.c ****         }
 17775              		.loc 1 4600 22 view .LVU4848
 17776 0064 4FF0FF34 		mov	r4, #-1
 17777              	.LVL2178:
4600:Core/Src/bno055.c ****         }
 17778              		.loc 1 4600 22 view .LVU4849
 17779 0068 EFE7     		b	.L1253
 17780              		.cfi_endproc
 17781              	.LFE77:
 17783              		.section	.text.bno055_convert_float_temp_celsius,"ax",%progbits
 17784              		.align	1
 17785              		.global	bno055_convert_float_temp_celsius
 17786              		.syntax unified
 17787              		.thumb
 17788              		.thumb_func
 17789              		.fpu fpv4-sp-d16
 17791              	bno055_convert_float_temp_celsius:
 17792              	.LVL2179:
 17793              	.LFB78:
4625:Core/Src/bno055.c ****     /* Variable used to return value of
 17794              		.loc 1 4625 1 is_stmt 1 view -0
 17795              		.cfi_startproc
 17796              		@ args = 0, pretend = 0, frame = 8
 17797              		@ frame_needed = 0, uses_anonymous_args = 0
4625:Core/Src/bno055.c ****     /* Variable used to return value of
 17798              		.loc 1 4625 1 is_stmt 0 view .LVU4851
 17799 0000 30B5     		push	{r4, r5, lr}
 17800              	.LCFI565:
 17801              		.cfi_def_cfa_offset 12
 17802              		.cfi_offset 4, -12
 17803              		.cfi_offset 5, -8
 17804              		.cfi_offset 14, -4
 17805 0002 83B0     		sub	sp, sp, #12
 17806              	.LCFI566:
 17807              		.cfi_def_cfa_offset 24
 17808 0004 0546     		mov	r5, r0
4628:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
 17809              		.loc 1 4628 5 is_stmt 1 view .LVU4852
 17810              	.LVL2180:
4629:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 17811              		.loc 1 4629 5 view .LVU4853
4629:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 17812              		.loc 1 4629 8 is_stmt 0 view .LVU4854
 17813 0006 0023     		movs	r3, #0
 17814 0008 8DF80730 		strb	r3, [sp, #7]
4630:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
 17815              		.loc 1 4630 5 is_stmt 1 view .LVU4855
 17816              	.LVL2181:
ARM GAS  /tmp/ccWoU29M.s 			page 506


4631:Core/Src/bno055.c **** 
 17817              		.loc 1 4631 5 view .LVU4856
4631:Core/Src/bno055.c **** 
 17818              		.loc 1 4631 8 is_stmt 0 view .LVU4857
 17819 000c 8DF80630 		strb	r3, [sp, #6]
4635:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17820              		.loc 1 4635 5 is_stmt 1 view .LVU4858
4635:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17821              		.loc 1 4635 16 is_stmt 0 view .LVU4859
 17822 0010 0DF10600 		add	r0, sp, #6
 17823              	.LVL2182:
4635:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17824              		.loc 1 4635 16 view .LVU4860
 17825 0014 FFF7FEFF 		bl	bno055_get_temp_unit
 17826              	.LVL2183:
 17827 0018 0446     		mov	r4, r0
 17828              	.LVL2184:
4636:Core/Src/bno055.c ****     {
 17829              		.loc 1 4636 5 is_stmt 1 view .LVU4861
4636:Core/Src/bno055.c ****     {
 17830              		.loc 1 4636 22 is_stmt 0 view .LVU4862
 17831 001a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
4636:Core/Src/bno055.c ****     {
 17832              		.loc 1 4636 8 view .LVU4863
 17833 001e 93B9     		cbnz	r3, .L1264
 17834              	.L1259:
4640:Core/Src/bno055.c ****     {
 17835              		.loc 1 4640 5 is_stmt 1 view .LVU4864
4640:Core/Src/bno055.c ****     {
 17836              		.loc 1 4640 8 is_stmt 0 view .LVU4865
 17837 0020 C4B9     		cbnz	r4, .L1261
4643:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17838              		.loc 1 4643 9 is_stmt 1 view .LVU4866
4643:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17839              		.loc 1 4643 21 is_stmt 0 view .LVU4867
 17840 0022 0DF10700 		add	r0, sp, #7
 17841 0026 FFF7FEFF 		bl	bno055_read_temp_data
 17842              	.LVL2185:
4643:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17843              		.loc 1 4643 18 view .LVU4868
 17844 002a 54FA80F4 		uxtab	r4, r4, r0
 17845              	.LVL2186:
4643:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17846              		.loc 1 4643 18 view .LVU4869
 17847 002e 64B2     		sxtb	r4, r4
 17848              	.LVL2187:
4644:Core/Src/bno055.c ****         {
 17849              		.loc 1 4644 9 is_stmt 1 view .LVU4870
4644:Core/Src/bno055.c ****         {
 17850              		.loc 1 4644 12 is_stmt 0 view .LVU4871
 17851 0030 9CB9     		cbnz	r4, .L1262
4647:Core/Src/bno055.c ****             *temp_f = data_f;
 17852              		.loc 1 4647 13 is_stmt 1 view .LVU4872
4647:Core/Src/bno055.c ****             *temp_f = data_f;
 17853              		.loc 1 4647 42 is_stmt 0 view .LVU4873
 17854 0032 9DF90700 		ldrsb	r0, [sp, #7]
 17855 0036 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/ccWoU29M.s 			page 507


 17856              	.LVL2188:
4647:Core/Src/bno055.c ****             *temp_f = data_f;
 17857              		.loc 1 4647 20 view .LVU4874
 17858 003a FFF7FEFF 		bl	__aeabi_d2f
 17859              	.LVL2189:
4648:Core/Src/bno055.c ****         }
 17860              		.loc 1 4648 13 is_stmt 1 view .LVU4875
4648:Core/Src/bno055.c ****         }
 17861              		.loc 1 4648 21 is_stmt 0 view .LVU4876
 17862 003e 2860     		str	r0, [r5]	@ float
 17863              	.LVL2190:
 17864              	.L1260:
4660:Core/Src/bno055.c **** }
 17865              		.loc 1 4660 5 is_stmt 1 view .LVU4877
4661:Core/Src/bno055.c **** #endif
 17866              		.loc 1 4661 1 is_stmt 0 view .LVU4878
 17867 0040 2046     		mov	r0, r4
 17868 0042 03B0     		add	sp, sp, #12
 17869              	.LCFI567:
 17870              		.cfi_remember_state
 17871              		.cfi_def_cfa_offset 12
 17872              		@ sp needed
 17873 0044 30BD     		pop	{r4, r5, pc}
 17874              	.LVL2191:
 17875              	.L1264:
 17876              	.LCFI568:
 17877              		.cfi_restore_state
4638:Core/Src/bno055.c ****     }
 17878              		.loc 1 4638 9 is_stmt 1 view .LVU4879
4638:Core/Src/bno055.c ****     }
 17879              		.loc 1 4638 21 is_stmt 0 view .LVU4880
 17880 0046 0020     		movs	r0, #0
 17881 0048 FFF7FEFF 		bl	bno055_set_temp_unit
 17882              	.LVL2192:
4638:Core/Src/bno055.c ****     }
 17883              		.loc 1 4638 18 view .LVU4881
 17884 004c 54FA80F4 		uxtab	r4, r4, r0
 17885              	.LVL2193:
4638:Core/Src/bno055.c ****     }
 17886              		.loc 1 4638 18 view .LVU4882
 17887 0050 64B2     		sxtb	r4, r4
 17888              	.LVL2194:
4638:Core/Src/bno055.c ****     }
 17889              		.loc 1 4638 18 view .LVU4883
 17890 0052 E5E7     		b	.L1259
 17891              	.L1261:
4657:Core/Src/bno055.c ****     }
 17892              		.loc 1 4657 18 view .LVU4884
 17893 0054 4FF0FF34 		mov	r4, #-1
 17894              	.LVL2195:
4657:Core/Src/bno055.c ****     }
 17895              		.loc 1 4657 18 view .LVU4885
 17896 0058 F2E7     		b	.L1260
 17897              	.LVL2196:
 17898              	.L1262:
4652:Core/Src/bno055.c ****         }
 17899              		.loc 1 4652 22 view .LVU4886
ARM GAS  /tmp/ccWoU29M.s 			page 508


 17900 005a 4FF0FF34 		mov	r4, #-1
 17901              	.LVL2197:
4652:Core/Src/bno055.c ****         }
 17902              		.loc 1 4652 22 view .LVU4887
 17903 005e EFE7     		b	.L1260
 17904              		.cfi_endproc
 17905              	.LFE78:
 17907              		.section	.text.bno055_convert_double_temp_fahrenheit,"ax",%progbits
 17908              		.align	1
 17909              		.global	bno055_convert_double_temp_fahrenheit
 17910              		.syntax unified
 17911              		.thumb
 17912              		.thumb_func
 17913              		.fpu fpv4-sp-d16
 17915              	bno055_convert_double_temp_fahrenheit:
 17916              	.LVL2198:
 17917              	.LFB115:
6399:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17918              		.loc 1 6399 1 is_stmt 1 view -0
 17919              		.cfi_startproc
 17920              		@ args = 0, pretend = 0, frame = 8
 17921              		@ frame_needed = 0, uses_anonymous_args = 0
6399:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17922              		.loc 1 6399 1 is_stmt 0 view .LVU4889
 17923 0000 30B5     		push	{r4, r5, lr}
 17924              	.LCFI569:
 17925              		.cfi_def_cfa_offset 12
 17926              		.cfi_offset 4, -12
 17927              		.cfi_offset 5, -8
 17928              		.cfi_offset 14, -4
 17929 0002 83B0     		sub	sp, sp, #12
 17930              	.LCFI570:
 17931              		.cfi_def_cfa_offset 24
 17932 0004 0546     		mov	r5, r0
6400:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
 17933              		.loc 1 6400 5 is_stmt 1 view .LVU4890
 17934              	.LVL2199:
6401:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 17935              		.loc 1 6401 5 view .LVU4891
6401:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 17936              		.loc 1 6401 8 is_stmt 0 view .LVU4892
 17937 0006 0023     		movs	r3, #0
 17938 0008 8DF80730 		strb	r3, [sp, #7]
6402:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
 17939              		.loc 1 6402 5 is_stmt 1 view .LVU4893
 17940              	.LVL2200:
6403:Core/Src/bno055.c **** 
 17941              		.loc 1 6403 5 view .LVU4894
6403:Core/Src/bno055.c **** 
 17942              		.loc 1 6403 8 is_stmt 0 view .LVU4895
 17943 000c 8DF80630 		strb	r3, [sp, #6]
6407:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17944              		.loc 1 6407 5 is_stmt 1 view .LVU4896
6407:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17945              		.loc 1 6407 16 is_stmt 0 view .LVU4897
 17946 0010 0DF10600 		add	r0, sp, #6
 17947              	.LVL2201:
ARM GAS  /tmp/ccWoU29M.s 			page 509


6407:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17948              		.loc 1 6407 16 view .LVU4898
 17949 0014 FFF7FEFF 		bl	bno055_get_temp_unit
 17950              	.LVL2202:
 17951 0018 0446     		mov	r4, r0
 17952              	.LVL2203:
6408:Core/Src/bno055.c ****     {
 17953              		.loc 1 6408 5 is_stmt 1 view .LVU4899
6408:Core/Src/bno055.c ****     {
 17954              		.loc 1 6408 22 is_stmt 0 view .LVU4900
 17955 001a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
6408:Core/Src/bno055.c ****     {
 17956              		.loc 1 6408 8 view .LVU4901
 17957 001e 012B     		cmp	r3, #1
 17958 0020 05D1     		bne	.L1271
 17959              	.L1266:
6412:Core/Src/bno055.c ****     {
 17960              		.loc 1 6412 5 is_stmt 1 view .LVU4902
6412:Core/Src/bno055.c ****     {
 17961              		.loc 1 6412 8 is_stmt 0 view .LVU4903
 17962 0022 5CB1     		cbz	r4, .L1272
6429:Core/Src/bno055.c ****     }
 17963              		.loc 1 6429 9 is_stmt 1 view .LVU4904
6429:Core/Src/bno055.c ****     }
 17964              		.loc 1 6429 18 is_stmt 0 view .LVU4905
 17965 0024 013C     		subs	r4, r4, #1
 17966              	.LVL2204:
6429:Core/Src/bno055.c ****     }
 17967              		.loc 1 6429 18 view .LVU4906
 17968 0026 64B2     		sxtb	r4, r4
 17969              	.LVL2205:
 17970              	.L1269:
6432:Core/Src/bno055.c **** }
 17971              		.loc 1 6432 5 is_stmt 1 view .LVU4907
6433:Core/Src/bno055.c **** 
 17972              		.loc 1 6433 1 is_stmt 0 view .LVU4908
 17973 0028 2046     		mov	r0, r4
 17974 002a 03B0     		add	sp, sp, #12
 17975              	.LCFI571:
 17976              		.cfi_remember_state
 17977              		.cfi_def_cfa_offset 12
 17978              		@ sp needed
 17979 002c 30BD     		pop	{r4, r5, pc}
 17980              	.LVL2206:
 17981              	.L1271:
 17982              	.LCFI572:
 17983              		.cfi_restore_state
6410:Core/Src/bno055.c ****     }
 17984              		.loc 1 6410 9 is_stmt 1 view .LVU4909
6410:Core/Src/bno055.c ****     }
 17985              		.loc 1 6410 21 is_stmt 0 view .LVU4910
 17986 002e 0120     		movs	r0, #1
 17987 0030 FFF7FEFF 		bl	bno055_set_temp_unit
 17988              	.LVL2207:
6410:Core/Src/bno055.c ****     }
 17989              		.loc 1 6410 18 view .LVU4911
 17990 0034 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/ccWoU29M.s 			page 510


 17991              	.LVL2208:
6410:Core/Src/bno055.c ****     }
 17992              		.loc 1 6410 18 view .LVU4912
 17993 0038 64B2     		sxtb	r4, r4
 17994              	.LVL2209:
6410:Core/Src/bno055.c ****     }
 17995              		.loc 1 6410 18 view .LVU4913
 17996 003a F2E7     		b	.L1266
 17997              	.L1272:
6415:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17998              		.loc 1 6415 9 is_stmt 1 view .LVU4914
6415:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17999              		.loc 1 6415 21 is_stmt 0 view .LVU4915
 18000 003c 0DF10700 		add	r0, sp, #7
 18001 0040 FFF7FEFF 		bl	bno055_read_temp_data
 18002              	.LVL2210:
6415:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 18003              		.loc 1 6415 18 view .LVU4916
 18004 0044 54FA80F4 		uxtab	r4, r4, r0
 18005              	.LVL2211:
6415:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 18006              		.loc 1 6415 18 view .LVU4917
 18007 0048 E3B2     		uxtb	r3, r4
 18008 004a 64B2     		sxtb	r4, r4
 18009              	.LVL2212:
6416:Core/Src/bno055.c ****         {
 18010              		.loc 1 6416 9 is_stmt 1 view .LVU4918
6416:Core/Src/bno055.c ****         {
 18011              		.loc 1 6416 12 is_stmt 0 view .LVU4919
 18012 004c 54B9     		cbnz	r4, .L1268
6419:Core/Src/bno055.c ****             *temp_d = data_d;
 18013              		.loc 1 6419 13 is_stmt 1 view .LVU4920
6419:Core/Src/bno055.c ****             *temp_d = data_d;
 18014              		.loc 1 6419 22 is_stmt 0 view .LVU4921
 18015 004e 9DF90700 		ldrsb	r0, [sp, #7]
 18016 0052 FFF7FEFF 		bl	__aeabi_i2d
 18017              	.LVL2213:
 18018 0056 0246     		mov	r2, r0
 18019 0058 0B46     		mov	r3, r1
6419:Core/Src/bno055.c ****             *temp_d = data_d;
 18020              		.loc 1 6419 20 view .LVU4922
 18021 005a FFF7FEFF 		bl	__aeabi_dadd
 18022              	.LVL2214:
6420:Core/Src/bno055.c ****         }
 18023              		.loc 1 6420 13 is_stmt 1 view .LVU4923
6420:Core/Src/bno055.c ****         }
 18024              		.loc 1 6420 21 is_stmt 0 view .LVU4924
 18025 005e C5E90001 		strd	r0, [r5]
 18026 0062 E1E7     		b	.L1269
 18027              	.LVL2215:
 18028              	.L1268:
6424:Core/Src/bno055.c ****         }
 18029              		.loc 1 6424 13 is_stmt 1 view .LVU4925
6424:Core/Src/bno055.c ****         }
 18030              		.loc 1 6424 22 is_stmt 0 view .LVU4926
 18031 0064 5C1E     		subs	r4, r3, #1
 18032              	.LVL2216:
ARM GAS  /tmp/ccWoU29M.s 			page 511


6424:Core/Src/bno055.c ****         }
 18033              		.loc 1 6424 22 view .LVU4927
 18034 0066 64B2     		sxtb	r4, r4
 18035              	.LVL2217:
6424:Core/Src/bno055.c ****         }
 18036              		.loc 1 6424 22 view .LVU4928
 18037 0068 DEE7     		b	.L1269
 18038              		.cfi_endproc
 18039              	.LFE115:
 18041              		.section	.text.bno055_convert_double_temp_celsius,"ax",%progbits
 18042              		.align	1
 18043              		.global	bno055_convert_double_temp_celsius
 18044              		.syntax unified
 18045              		.thumb
 18046              		.thumb_func
 18047              		.fpu fpv4-sp-d16
 18049              	bno055_convert_double_temp_celsius:
 18050              	.LVL2218:
 18051              	.LFB116:
6448:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18052              		.loc 1 6448 1 is_stmt 1 view -0
 18053              		.cfi_startproc
 18054              		@ args = 0, pretend = 0, frame = 8
 18055              		@ frame_needed = 0, uses_anonymous_args = 0
6448:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18056              		.loc 1 6448 1 is_stmt 0 view .LVU4930
 18057 0000 30B5     		push	{r4, r5, lr}
 18058              	.LCFI573:
 18059              		.cfi_def_cfa_offset 12
 18060              		.cfi_offset 4, -12
 18061              		.cfi_offset 5, -8
 18062              		.cfi_offset 14, -4
 18063 0002 83B0     		sub	sp, sp, #12
 18064              	.LCFI574:
 18065              		.cfi_def_cfa_offset 24
 18066 0004 0546     		mov	r5, r0
6449:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
 18067              		.loc 1 6449 5 is_stmt 1 view .LVU4931
 18068              	.LVL2219:
6450:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 18069              		.loc 1 6450 5 view .LVU4932
6450:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 18070              		.loc 1 6450 8 is_stmt 0 view .LVU4933
 18071 0006 0023     		movs	r3, #0
 18072 0008 8DF80730 		strb	r3, [sp, #7]
6451:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
 18073              		.loc 1 6451 5 is_stmt 1 view .LVU4934
 18074              	.LVL2220:
6452:Core/Src/bno055.c **** 
 18075              		.loc 1 6452 5 view .LVU4935
6452:Core/Src/bno055.c **** 
 18076              		.loc 1 6452 8 is_stmt 0 view .LVU4936
 18077 000c 8DF80630 		strb	r3, [sp, #6]
6456:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 18078              		.loc 1 6456 5 is_stmt 1 view .LVU4937
6456:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 18079              		.loc 1 6456 16 is_stmt 0 view .LVU4938
ARM GAS  /tmp/ccWoU29M.s 			page 512


 18080 0010 0DF10600 		add	r0, sp, #6
 18081              	.LVL2221:
6456:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 18082              		.loc 1 6456 16 view .LVU4939
 18083 0014 FFF7FEFF 		bl	bno055_get_temp_unit
 18084              	.LVL2222:
 18085 0018 0446     		mov	r4, r0
 18086              	.LVL2223:
6457:Core/Src/bno055.c ****     {
 18087              		.loc 1 6457 5 is_stmt 1 view .LVU4940
6457:Core/Src/bno055.c ****     {
 18088              		.loc 1 6457 22 is_stmt 0 view .LVU4941
 18089 001a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
6457:Core/Src/bno055.c ****     {
 18090              		.loc 1 6457 8 view .LVU4942
 18091 001e 2BB9     		cbnz	r3, .L1279
 18092              	.L1274:
6461:Core/Src/bno055.c ****     {
 18093              		.loc 1 6461 5 is_stmt 1 view .LVU4943
6461:Core/Src/bno055.c ****     {
 18094              		.loc 1 6461 8 is_stmt 0 view .LVU4944
 18095 0020 5CB1     		cbz	r4, .L1280
6478:Core/Src/bno055.c ****     }
 18096              		.loc 1 6478 9 is_stmt 1 view .LVU4945
6478:Core/Src/bno055.c ****     }
 18097              		.loc 1 6478 18 is_stmt 0 view .LVU4946
 18098 0022 013C     		subs	r4, r4, #1
 18099              	.LVL2224:
6478:Core/Src/bno055.c ****     }
 18100              		.loc 1 6478 18 view .LVU4947
 18101 0024 64B2     		sxtb	r4, r4
 18102              	.LVL2225:
 18103              	.L1277:
6481:Core/Src/bno055.c **** }
 18104              		.loc 1 6481 5 is_stmt 1 view .LVU4948
6482:Core/Src/bno055.c **** #endif
 18105              		.loc 1 6482 1 is_stmt 0 view .LVU4949
 18106 0026 2046     		mov	r0, r4
 18107 0028 03B0     		add	sp, sp, #12
 18108              	.LCFI575:
 18109              		.cfi_remember_state
 18110              		.cfi_def_cfa_offset 12
 18111              		@ sp needed
 18112 002a 30BD     		pop	{r4, r5, pc}
 18113              	.LVL2226:
 18114              	.L1279:
 18115              	.LCFI576:
 18116              		.cfi_restore_state
6459:Core/Src/bno055.c ****     }
 18117              		.loc 1 6459 9 is_stmt 1 view .LVU4950
6459:Core/Src/bno055.c ****     }
 18118              		.loc 1 6459 21 is_stmt 0 view .LVU4951
 18119 002c 0020     		movs	r0, #0
 18120 002e FFF7FEFF 		bl	bno055_set_temp_unit
 18121              	.LVL2227:
6459:Core/Src/bno055.c ****     }
 18122              		.loc 1 6459 18 view .LVU4952
ARM GAS  /tmp/ccWoU29M.s 			page 513


 18123 0032 54FA80F4 		uxtab	r4, r4, r0
 18124              	.LVL2228:
6459:Core/Src/bno055.c ****     }
 18125              		.loc 1 6459 18 view .LVU4953
 18126 0036 64B2     		sxtb	r4, r4
 18127              	.LVL2229:
6459:Core/Src/bno055.c ****     }
 18128              		.loc 1 6459 18 view .LVU4954
 18129 0038 F2E7     		b	.L1274
 18130              	.L1280:
6464:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 18131              		.loc 1 6464 9 is_stmt 1 view .LVU4955
6464:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 18132              		.loc 1 6464 21 is_stmt 0 view .LVU4956
 18133 003a 0DF10700 		add	r0, sp, #7
 18134 003e FFF7FEFF 		bl	bno055_read_temp_data
 18135              	.LVL2230:
6464:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 18136              		.loc 1 6464 18 view .LVU4957
 18137 0042 54FA80F4 		uxtab	r4, r4, r0
 18138              	.LVL2231:
6464:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 18139              		.loc 1 6464 18 view .LVU4958
 18140 0046 E3B2     		uxtb	r3, r4
 18141 0048 64B2     		sxtb	r4, r4
 18142              	.LVL2232:
6465:Core/Src/bno055.c ****         {
 18143              		.loc 1 6465 9 is_stmt 1 view .LVU4959
6465:Core/Src/bno055.c ****         {
 18144              		.loc 1 6465 12 is_stmt 0 view .LVU4960
 18145 004a 34B9     		cbnz	r4, .L1276
6468:Core/Src/bno055.c ****             *temp_d = data_d;
 18146              		.loc 1 6468 13 is_stmt 1 view .LVU4961
6468:Core/Src/bno055.c ****             *temp_d = data_d;
 18147              		.loc 1 6468 20 is_stmt 0 view .LVU4962
 18148 004c 9DF90700 		ldrsb	r0, [sp, #7]
 18149 0050 FFF7FEFF 		bl	__aeabi_i2d
 18150              	.LVL2233:
6469:Core/Src/bno055.c ****         }
 18151              		.loc 1 6469 13 is_stmt 1 view .LVU4963
6469:Core/Src/bno055.c ****         }
 18152              		.loc 1 6469 21 is_stmt 0 view .LVU4964
 18153 0054 C5E90001 		strd	r0, [r5]
 18154 0058 E5E7     		b	.L1277
 18155              	.LVL2234:
 18156              	.L1276:
6473:Core/Src/bno055.c ****         }
 18157              		.loc 1 6473 13 is_stmt 1 view .LVU4965
6473:Core/Src/bno055.c ****         }
 18158              		.loc 1 6473 22 is_stmt 0 view .LVU4966
 18159 005a 5C1E     		subs	r4, r3, #1
 18160              	.LVL2235:
6473:Core/Src/bno055.c ****         }
 18161              		.loc 1 6473 22 view .LVU4967
 18162 005c 64B2     		sxtb	r4, r4
 18163              	.LVL2236:
6473:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 514


 18164              		.loc 1 6473 22 view .LVU4968
 18165 005e E2E7     		b	.L1277
 18166              		.cfi_endproc
 18167              	.LFE116:
 18169              		.section	.text.bno055_set_data_output_format,"ax",%progbits
 18170              		.align	1
 18171              		.global	bno055_set_data_output_format
 18172              		.syntax unified
 18173              		.thumb
 18174              		.thumb_func
 18175              		.fpu fpv4-sp-d16
 18177              	bno055_set_data_output_format:
 18178              	.LVL2237:
 18179              	.LFB144:
8133:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18180              		.loc 1 8133 1 is_stmt 1 view -0
 18181              		.cfi_startproc
 18182              		@ args = 0, pretend = 0, frame = 8
 18183              		@ frame_needed = 0, uses_anonymous_args = 0
8133:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18184              		.loc 1 8133 1 is_stmt 0 view .LVU4970
 18185 0000 30B5     		push	{r4, r5, lr}
 18186              	.LCFI577:
 18187              		.cfi_def_cfa_offset 12
 18188              		.cfi_offset 4, -12
 18189              		.cfi_offset 5, -8
 18190              		.cfi_offset 14, -4
 18191 0002 83B0     		sub	sp, sp, #12
 18192              	.LCFI578:
 18193              		.cfi_def_cfa_offset 24
8134:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18194              		.loc 1 8134 5 is_stmt 1 view .LVU4971
 18195              	.LVL2238:
8135:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 18196              		.loc 1 8135 5 view .LVU4972
8135:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 18197              		.loc 1 8135 8 is_stmt 0 view .LVU4973
 18198 0004 0023     		movs	r3, #0
 18199 0006 8DF80730 		strb	r3, [sp, #7]
8136:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18200              		.loc 1 8136 5 is_stmt 1 view .LVU4974
8136:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18201              		.loc 1 8136 8 is_stmt 0 view .LVU4975
 18202 000a 8DF80630 		strb	r3, [sp, #6]
8137:Core/Src/bno055.c **** 
 18203              		.loc 1 8137 5 is_stmt 1 view .LVU4976
 18204              	.LVL2239:
8140:Core/Src/bno055.c ****     {
 18205              		.loc 1 8140 5 view .LVU4977
8140:Core/Src/bno055.c ****     {
 18206              		.loc 1 8140 18 is_stmt 0 view .LVU4978
 18207 000e 244B     		ldr	r3, .L1291
 18208 0010 1B68     		ldr	r3, [r3]
8140:Core/Src/bno055.c ****     {
 18209              		.loc 1 8140 8 view .LVU4979
 18210 0012 002B     		cmp	r3, #0
 18211 0014 41D0     		beq	.L1285
ARM GAS  /tmp/ccWoU29M.s 			page 515


 18212 0016 0546     		mov	r5, r0
8149:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 18213              		.loc 1 8149 9 is_stmt 1 view .LVU4980
8149:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 18214              		.loc 1 8149 19 is_stmt 0 view .LVU4981
 18215 0018 0DF10600 		add	r0, sp, #6
 18216              	.LVL2240:
8149:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 18217              		.loc 1 8149 19 view .LVU4982
 18218 001c FFF7FEFF 		bl	bno055_get_operation_mode
 18219              	.LVL2241:
8150:Core/Src/bno055.c ****         {
 18220              		.loc 1 8150 9 is_stmt 1 view .LVU4983
8150:Core/Src/bno055.c ****         {
 18221              		.loc 1 8150 12 is_stmt 0 view .LVU4984
 18222 0020 0446     		mov	r4, r0
 18223 0022 48BB     		cbnz	r0, .L1286
8152:Core/Src/bno055.c ****             {
 18224              		.loc 1 8152 13 is_stmt 1 view .LVU4985
8152:Core/Src/bno055.c ****             {
 18225              		.loc 1 8152 32 is_stmt 0 view .LVU4986
 18226 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
8152:Core/Src/bno055.c ****             {
 18227              		.loc 1 8152 16 view .LVU4987
 18228 0028 03BB     		cbnz	r3, .L1289
 18229              	.LVL2242:
 18230              	.L1284:
8156:Core/Src/bno055.c ****             {
 18231              		.loc 1 8156 13 is_stmt 1 view .LVU4988
8156:Core/Src/bno055.c ****             {
 18232              		.loc 1 8156 16 is_stmt 0 view .LVU4989
 18233 002a 6CBB     		cbnz	r4, .L1287
8159:Core/Src/bno055.c ****                                                           BNO055_DATA_OUTPUT_FORMAT_REG,
 18234              		.loc 1 8159 17 is_stmt 1 view .LVU4990
8159:Core/Src/bno055.c ****                                                           BNO055_DATA_OUTPUT_FORMAT_REG,
 18235              		.loc 1 8159 36 is_stmt 0 view .LVU4991
 18236 002c 1C4B     		ldr	r3, .L1291
 18237 002e 1868     		ldr	r0, [r3]
 18238 0030 0469     		ldr	r4, [r0, #16]
 18239              	.LVL2243:
8159:Core/Src/bno055.c ****                                                           BNO055_DATA_OUTPUT_FORMAT_REG,
 18240              		.loc 1 8159 28 view .LVU4992
 18241 0032 0123     		movs	r3, #1
 18242 0034 0DF10702 		add	r2, sp, #7
 18243 0038 3B21     		movs	r1, #59
 18244 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18245 003c A047     		blx	r4
 18246              	.LVL2244:
8163:Core/Src/bno055.c ****                 {
 18247              		.loc 1 8163 17 is_stmt 1 view .LVU4993
8163:Core/Src/bno055.c ****                 {
 18248              		.loc 1 8163 20 is_stmt 0 view .LVU4994
 18249 003e 0446     		mov	r4, r0
 18250 0040 E0B9     		cbnz	r0, .L1283
8165:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18251              		.loc 1 8165 21 is_stmt 1 view .LVU4995
8165:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccWoU29M.s 			page 516


 18252              		.loc 1 8165 32 is_stmt 0 view .LVU4996
 18253 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 18254              	.LVL2245:
8165:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18255              		.loc 1 8165 32 view .LVU4997
 18256 0046 00F07F00 		and	r0, r0, #127
 18257 004a 40EAC510 		orr	r0, r0, r5, lsl #7
8165:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18258              		.loc 1 8165 30 view .LVU4998
 18259 004e 8DF80700 		strb	r0, [sp, #7]
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 18260              		.loc 1 8166 21 is_stmt 1 view .LVU4999
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 18261              		.loc 1 8166 41 is_stmt 0 view .LVU5000
 18262 0052 134B     		ldr	r3, .L1291
 18263 0054 1868     		ldr	r0, [r3]
 18264 0056 C568     		ldr	r5, [r0, #12]
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 18265              		.loc 1 8166 33 view .LVU5001
 18266 0058 0123     		movs	r3, #1
 18267 005a 0DF10702 		add	r2, sp, #7
 18268 005e 3B21     		movs	r1, #59
 18269 0060 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18270 0062 A847     		blx	r5
 18271              	.LVL2246:
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 18272              		.loc 1 8166 30 view .LVU5002
 18273 0064 54FA80F4 		uxtab	r4, r4, r0
 18274 0068 64B2     		sxtb	r4, r4
 18275              	.LVL2247:
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 18276              		.loc 1 8166 30 view .LVU5003
 18277 006a 07E0     		b	.L1283
 18278              	.LVL2248:
 18279              	.L1289:
8154:Core/Src/bno055.c ****             }
 18280              		.loc 1 8154 17 is_stmt 1 view .LVU5004
8154:Core/Src/bno055.c ****             }
 18281              		.loc 1 8154 28 is_stmt 0 view .LVU5005
 18282 006c FFF7FEFF 		bl	bno055_set_operation_mode
 18283              	.LVL2249:
8154:Core/Src/bno055.c ****             }
 18284              		.loc 1 8154 25 view .LVU5006
 18285 0070 54FA80F4 		uxtab	r4, r4, r0
 18286 0074 64B2     		sxtb	r4, r4
 18287              	.LVL2250:
8154:Core/Src/bno055.c ****             }
 18288              		.loc 1 8154 25 view .LVU5007
 18289 0076 D8E7     		b	.L1284
 18290              	.LVL2251:
 18291              	.L1286:
8179:Core/Src/bno055.c ****         }
 18292              		.loc 1 8179 22 view .LVU5008
 18293 0078 4FF0FF34 		mov	r4, #-1
 18294              	.LVL2252:
 18295              	.L1283:
8182:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccWoU29M.s 			page 517


 18296              		.loc 1 8182 5 is_stmt 1 view .LVU5009
8182:Core/Src/bno055.c ****     {
 18297              		.loc 1 8182 24 is_stmt 0 view .LVU5010
 18298 007c 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
8182:Core/Src/bno055.c ****     {
 18299              		.loc 1 8182 8 view .LVU5011
 18300 0080 28B9     		cbnz	r0, .L1290
 18301              	.LVL2253:
 18302              	.L1282:
8190:Core/Src/bno055.c **** 
 18303              		.loc 1 8190 1 view .LVU5012
 18304 0082 2046     		mov	r0, r4
 18305 0084 03B0     		add	sp, sp, #12
 18306              	.LCFI579:
 18307              		.cfi_remember_state
 18308              		.cfi_def_cfa_offset 12
 18309              		@ sp needed
 18310 0086 30BD     		pop	{r4, r5, pc}
 18311              	.LVL2254:
 18312              	.L1287:
 18313              	.LCFI580:
 18314              		.cfi_restore_state
8174:Core/Src/bno055.c ****             }
 18315              		.loc 1 8174 26 view .LVU5013
 18316 0088 4FF0FF34 		mov	r4, #-1
 18317              	.LVL2255:
8174:Core/Src/bno055.c ****             }
 18318              		.loc 1 8174 26 view .LVU5014
 18319 008c F6E7     		b	.L1283
 18320              	.LVL2256:
 18321              	.L1290:
8186:Core/Src/bno055.c ****     }
 18322              		.loc 1 8186 9 is_stmt 1 view .LVU5015
8186:Core/Src/bno055.c ****     }
 18323              		.loc 1 8186 21 is_stmt 0 view .LVU5016
 18324 008e FFF7FEFF 		bl	bno055_set_operation_mode
 18325              	.LVL2257:
8186:Core/Src/bno055.c ****     }
 18326              		.loc 1 8186 18 view .LVU5017
 18327 0092 54FA80F4 		uxtab	r4, r4, r0
 18328              	.LVL2258:
8186:Core/Src/bno055.c ****     }
 18329              		.loc 1 8186 18 view .LVU5018
 18330 0096 64B2     		sxtb	r4, r4
 18331              	.LVL2259:
8186:Core/Src/bno055.c ****     }
 18332              		.loc 1 8186 18 view .LVU5019
 18333 0098 F3E7     		b	.L1282
 18334              	.LVL2260:
 18335              	.L1285:
8142:Core/Src/bno055.c ****     }
 18336              		.loc 1 8142 16 view .LVU5020
 18337 009a 6FF07E04 		mvn	r4, #126
 18338 009e F0E7     		b	.L1282
 18339              	.L1292:
 18340              		.align	2
 18341              	.L1291:
ARM GAS  /tmp/ccWoU29M.s 			page 518


 18342 00a0 00000000 		.word	.LANCHOR0
 18343              		.cfi_endproc
 18344              	.LFE144:
 18346              		.section	.text.bno055_get_power_mode,"ax",%progbits
 18347              		.align	1
 18348              		.global	bno055_get_power_mode
 18349              		.syntax unified
 18350              		.thumb
 18351              		.thumb_func
 18352              		.fpu fpv4-sp-d16
 18354              	bno055_get_power_mode:
 18355              	.LVL2261:
 18356              	.LFB147:
8403:Core/Src/bno055.c **** 
8404:Core/Src/bno055.c **** /*! @brief This API used to read the power mode
8405:Core/Src/bno055.c ****  *  from register from 0x3E bit 0 to 1
8406:Core/Src/bno055.c ****  *
8407:Core/Src/bno055.c ****  *  @param power_mode_u8 : The value of power mode
8408:Core/Src/bno055.c ****  *
8409:Core/Src/bno055.c ****  * power_mode_u8|      result           | comments
8410:Core/Src/bno055.c ****  * ---------|---------------------------|-------------------------------------
8411:Core/Src/bno055.c ****  *  0x00    |BNO055_POWER_MODE_NORMAL   | In the NORMAL mode the register
8412:Core/Src/bno055.c ****  *    -     |       -                   | map and the internal peripherals
8413:Core/Src/bno055.c ****  *    -     |       -                   | of the MCU are always
8414:Core/Src/bno055.c ****  *    -     |       -                   | operative in this mode
8415:Core/Src/bno055.c ****  *  0x01    |BNO055_POWER_MODE_LOWPOWER | This is first level of power
8416:Core/Src/bno055.c ****  *          |       -                   | saving mode
8417:Core/Src/bno055.c ****  *  0x02    |BNO055_POWER_MODE_SUSPEND  | In suspend mode the system is
8418:Core/Src/bno055.c ****  *   -      |      -                    | paused and all the sensors and
8419:Core/Src/bno055.c ****  *   -      |      -                    | the micro controller are
8420:Core/Src/bno055.c ****  *   -      |      -                    | put into sleep mode.
8421:Core/Src/bno055.c ****  *
8422:Core/Src/bno055.c ****  *  @return results of bus communication function
8423:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8424:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8425:Core/Src/bno055.c ****  *
8426:Core/Src/bno055.c ****  *  @note For detailed about LOWPOWER mode
8427:Core/Src/bno055.c ****  *  refer data sheet 3.4.2
8428:Core/Src/bno055.c ****  *
8429:Core/Src/bno055.c ****  */
8430:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_power_mode(u8 *power_mode_u8)
8431:Core/Src/bno055.c **** {
 18357              		.loc 1 8431 1 is_stmt 1 view -0
 18358              		.cfi_startproc
 18359              		@ args = 0, pretend = 0, frame = 8
 18360              		@ frame_needed = 0, uses_anonymous_args = 0
 18361              		.loc 1 8431 1 is_stmt 0 view .LVU5022
 18362 0000 30B5     		push	{r4, r5, lr}
 18363              	.LCFI581:
 18364              		.cfi_def_cfa_offset 12
 18365              		.cfi_offset 4, -12
 18366              		.cfi_offset 5, -8
 18367              		.cfi_offset 14, -4
 18368 0002 83B0     		sub	sp, sp, #12
 18369              	.LCFI582:
 18370              		.cfi_def_cfa_offset 24
8432:Core/Src/bno055.c ****     /* Variable used to return value of
ARM GAS  /tmp/ccWoU29M.s 			page 519


8433:Core/Src/bno055.c ****      * communication routine*/
8434:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18371              		.loc 1 8434 5 is_stmt 1 view .LVU5023
 18372              	.LVL2262:
8435:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18373              		.loc 1 8435 5 view .LVU5024
 18374              		.loc 1 8435 8 is_stmt 0 view .LVU5025
 18375 0004 0023     		movs	r3, #0
 18376 0006 8DF80730 		strb	r3, [sp, #7]
8436:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18377              		.loc 1 8436 5 is_stmt 1 view .LVU5026
 18378              	.LVL2263:
8437:Core/Src/bno055.c **** 
8438:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8439:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18379              		.loc 1 8439 5 view .LVU5027
 18380              		.loc 1 8439 18 is_stmt 0 view .LVU5028
 18381 000a 134B     		ldr	r3, .L1301
 18382 000c 1B68     		ldr	r3, [r3]
 18383              		.loc 1 8439 8 view .LVU5029
 18384 000e E3B1     		cbz	r3, .L1297
 18385 0010 0446     		mov	r4, r0
8440:Core/Src/bno055.c ****     {
8441:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8442:Core/Src/bno055.c ****     }
8443:Core/Src/bno055.c ****     else
8444:Core/Src/bno055.c ****     {
8445:Core/Src/bno055.c ****         /*condition check for page, power mode is
8446:Core/Src/bno055.c ****          * available in the page zero*/
8447:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18386              		.loc 1 8447 9 is_stmt 1 view .LVU5030
 18387              		.loc 1 8447 21 is_stmt 0 view .LVU5031
 18388 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18389              		.loc 1 8447 12 view .LVU5032
 18390 0014 9BB9     		cbnz	r3, .L1300
 18391              	.LVL2264:
 18392              	.L1295:
8448:Core/Src/bno055.c ****         {
8449:Core/Src/bno055.c ****             /* Write the page zero*/
8450:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8451:Core/Src/bno055.c ****         }
8452:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18393              		.loc 1 8452 53 discriminator 1 view .LVU5033
 18394 0016 104B     		ldr	r3, .L1301
 18395 0018 1B68     		ldr	r3, [r3]
 18396 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18397              		.loc 1 8452 41 discriminator 1 view .LVU5034
 18398 001c C3B9     		cbnz	r3, .L1298
 18399              	.L1296:
8453:Core/Src/bno055.c ****         {
8454:Core/Src/bno055.c ****             /* Read the value of power mode */
8455:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18400              		.loc 1 8455 13 is_stmt 1 view .LVU5035
 18401              		.loc 1 8455 32 is_stmt 0 view .LVU5036
 18402 001e 0E4B     		ldr	r3, .L1301
 18403 0020 1868     		ldr	r0, [r3]
 18404 0022 0569     		ldr	r5, [r0, #16]
ARM GAS  /tmp/ccWoU29M.s 			page 520


 18405              		.loc 1 8455 24 view .LVU5037
 18406 0024 0123     		movs	r3, #1
 18407 0026 0DF10702 		add	r2, sp, #7
 18408 002a 3E21     		movs	r1, #62
 18409 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18410 002e A847     		blx	r5
 18411              	.LVL2265:
8456:Core/Src/bno055.c ****                                                       BNO055_POWER_MODE_REG,
8457:Core/Src/bno055.c ****                                                       &data_u8r,
8458:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8459:Core/Src/bno055.c ****             *power_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_POWER_MODE);
 18412              		.loc 1 8459 13 is_stmt 1 view .LVU5038
 18413              		.loc 1 8459 30 is_stmt 0 view .LVU5039
 18414 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18415 0034 03F00303 		and	r3, r3, #3
 18416              		.loc 1 8459 28 view .LVU5040
 18417 0038 2370     		strb	r3, [r4]
 18418              	.LVL2266:
 18419              	.L1294:
8460:Core/Src/bno055.c ****         }
8461:Core/Src/bno055.c ****         else
8462:Core/Src/bno055.c ****         {
8463:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8464:Core/Src/bno055.c ****         }
8465:Core/Src/bno055.c ****     }
8466:Core/Src/bno055.c **** 
8467:Core/Src/bno055.c ****     return com_rslt;
8468:Core/Src/bno055.c **** }
 18420              		.loc 1 8468 1 view .LVU5041
 18421 003a 03B0     		add	sp, sp, #12
 18422              	.LCFI583:
 18423              		.cfi_remember_state
 18424              		.cfi_def_cfa_offset 12
 18425              		@ sp needed
 18426 003c 30BD     		pop	{r4, r5, pc}
 18427              	.LVL2267:
 18428              	.L1300:
 18429              	.LCFI584:
 18430              		.cfi_restore_state
8450:Core/Src/bno055.c ****         }
 18431              		.loc 1 8450 13 is_stmt 1 view .LVU5042
8450:Core/Src/bno055.c ****         }
 18432              		.loc 1 8450 23 is_stmt 0 view .LVU5043
 18433 003e 0020     		movs	r0, #0
 18434              	.LVL2268:
8450:Core/Src/bno055.c ****         }
 18435              		.loc 1 8450 23 view .LVU5044
 18436 0040 FFF7FEFF 		bl	bno055_write_page_id
 18437              	.LVL2269:
8452:Core/Src/bno055.c ****         {
 18438              		.loc 1 8452 9 is_stmt 1 view .LVU5045
8452:Core/Src/bno055.c ****         {
 18439              		.loc 1 8452 12 is_stmt 0 view .LVU5046
 18440 0044 0028     		cmp	r0, #0
 18441 0046 EAD0     		beq	.L1296
 18442 0048 E5E7     		b	.L1295
 18443              	.LVL2270:
ARM GAS  /tmp/ccWoU29M.s 			page 521


 18444              	.L1297:
8441:Core/Src/bno055.c ****     }
 18445              		.loc 1 8441 16 view .LVU5047
 18446 004a 6FF07E00 		mvn	r0, #126
 18447              	.LVL2271:
8441:Core/Src/bno055.c ****     }
 18448              		.loc 1 8441 16 view .LVU5048
 18449 004e F4E7     		b	.L1294
 18450              	.LVL2272:
 18451              	.L1298:
8463:Core/Src/bno055.c ****         }
 18452              		.loc 1 8463 22 view .LVU5049
 18453 0050 4FF0FF30 		mov	r0, #-1
 18454 0054 F1E7     		b	.L1294
 18455              	.L1302:
 18456 0056 00BF     		.align	2
 18457              	.L1301:
 18458 0058 00000000 		.word	.LANCHOR0
 18459              		.cfi_endproc
 18460              	.LFE147:
 18462              		.section	.text.bno055_set_power_mode,"ax",%progbits
 18463              		.align	1
 18464              		.global	bno055_set_power_mode
 18465              		.syntax unified
 18466              		.thumb
 18467              		.thumb_func
 18468              		.fpu fpv4-sp-d16
 18470              	bno055_set_power_mode:
 18471              	.LVL2273:
 18472              	.LFB148:
8469:Core/Src/bno055.c **** 
8470:Core/Src/bno055.c **** /*! @brief This API used to write the power mode
8471:Core/Src/bno055.c ****  *  from register from 0x3E bit 0 to 1
8472:Core/Src/bno055.c ****  *
8473:Core/Src/bno055.c ****  *  @param power_mode_u8 : The value of power mode
8474:Core/Src/bno055.c ****  *
8475:Core/Src/bno055.c ****  *
8476:Core/Src/bno055.c ****  * power_mode_u8|      result          | comments
8477:Core/Src/bno055.c ****  * -------|----------------------------|---------------------------------
8478:Core/Src/bno055.c ****  *  0x00  | BNO055_POWER_MODE_NORMAL   | In the NORMAL mode the register
8479:Core/Src/bno055.c ****  *    -   |       -                    | map and the internal peripherals
8480:Core/Src/bno055.c ****  *    -   |       -                    | of the MCU are always
8481:Core/Src/bno055.c ****  *    -   |       -                    | operative in this mode
8482:Core/Src/bno055.c ****  *  0x01  | BNO055_POWER_MODE_LOWPOWER | This is first level of power
8483:Core/Src/bno055.c ****  *        |     -                      | saving mode
8484:Core/Src/bno055.c ****  *  0x02  | BNO055_POWER_MODE_SUSPEND  | In suspend mode the system is
8485:Core/Src/bno055.c ****  *   -    |      -                     | paused and all the sensors and
8486:Core/Src/bno055.c ****  *   -    |      -                     | the micro controller are
8487:Core/Src/bno055.c ****  *   -    |      -                     | put into sleep mode.
8488:Core/Src/bno055.c ****  *
8489:Core/Src/bno055.c ****  *  @return results of bus communication function
8490:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8491:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8492:Core/Src/bno055.c ****  *
8493:Core/Src/bno055.c ****  *  @note For detailed about LOWPOWER mode
8494:Core/Src/bno055.c ****  *  refer data sheet 3.4.2
8495:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 522


8496:Core/Src/bno055.c ****  */
8497:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_power_mode(u8 power_mode_u8)
8498:Core/Src/bno055.c **** {
 18473              		.loc 1 8498 1 is_stmt 1 view -0
 18474              		.cfi_startproc
 18475              		@ args = 0, pretend = 0, frame = 8
 18476              		@ frame_needed = 0, uses_anonymous_args = 0
 18477              		.loc 1 8498 1 is_stmt 0 view .LVU5051
 18478 0000 30B5     		push	{r4, r5, lr}
 18479              	.LCFI585:
 18480              		.cfi_def_cfa_offset 12
 18481              		.cfi_offset 4, -12
 18482              		.cfi_offset 5, -8
 18483              		.cfi_offset 14, -4
 18484 0002 83B0     		sub	sp, sp, #12
 18485              	.LCFI586:
 18486              		.cfi_def_cfa_offset 24
8499:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18487              		.loc 1 8499 5 is_stmt 1 view .LVU5052
 18488              	.LVL2274:
8500:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18489              		.loc 1 8500 5 view .LVU5053
 18490              		.loc 1 8500 8 is_stmt 0 view .LVU5054
 18491 0004 0023     		movs	r3, #0
 18492 0006 8DF80730 		strb	r3, [sp, #7]
8501:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 18493              		.loc 1 8501 5 is_stmt 1 view .LVU5055
 18494              		.loc 1 8501 8 is_stmt 0 view .LVU5056
 18495 000a 8DF80630 		strb	r3, [sp, #6]
8502:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18496              		.loc 1 8502 5 is_stmt 1 view .LVU5057
 18497              	.LVL2275:
8503:Core/Src/bno055.c **** 
8504:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8505:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18498              		.loc 1 8505 5 view .LVU5058
 18499              		.loc 1 8505 18 is_stmt 0 view .LVU5059
 18500 000e 254B     		ldr	r3, .L1313
 18501 0010 1B68     		ldr	r3, [r3]
 18502              		.loc 1 8505 8 view .LVU5060
 18503 0012 002B     		cmp	r3, #0
 18504 0014 43D0     		beq	.L1307
 18505 0016 0546     		mov	r5, r0
8506:Core/Src/bno055.c ****     {
8507:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8508:Core/Src/bno055.c ****     }
8509:Core/Src/bno055.c ****     else
8510:Core/Src/bno055.c ****     {
8511:Core/Src/bno055.c ****         /* The write operation effective only if the operation
8512:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
8513:Core/Src/bno055.c ****          * current operation mode and set the config mode */
8514:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 18506              		.loc 1 8514 9 is_stmt 1 view .LVU5061
 18507              		.loc 1 8514 19 is_stmt 0 view .LVU5062
 18508 0018 0DF10600 		add	r0, sp, #6
 18509              	.LVL2276:
 18510              		.loc 1 8514 19 view .LVU5063
ARM GAS  /tmp/ccWoU29M.s 			page 523


 18511 001c FFF7FEFF 		bl	bno055_get_operation_mode
 18512              	.LVL2277:
8515:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 18513              		.loc 1 8515 9 is_stmt 1 view .LVU5064
 18514              		.loc 1 8515 12 is_stmt 0 view .LVU5065
 18515 0020 0446     		mov	r4, r0
 18516 0022 58BB     		cbnz	r0, .L1308
8516:Core/Src/bno055.c ****         {
8517:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 18517              		.loc 1 8517 13 is_stmt 1 view .LVU5066
 18518              		.loc 1 8517 32 is_stmt 0 view .LVU5067
 18519 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 18520              		.loc 1 8517 16 view .LVU5068
 18521 0028 13BB     		cbnz	r3, .L1311
 18522              	.LVL2278:
 18523              	.L1306:
8518:Core/Src/bno055.c ****             {
8519:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
8520:Core/Src/bno055.c ****             }
8521:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 18524              		.loc 1 8521 13 is_stmt 1 view .LVU5069
 18525              		.loc 1 8521 16 is_stmt 0 view .LVU5070
 18526 002a 7CBB     		cbnz	r4, .L1309
8522:Core/Src/bno055.c ****             {
8523:Core/Src/bno055.c ****                 /* Write the value of power mode */
8524:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18527              		.loc 1 8524 17 is_stmt 1 view .LVU5071
 18528              		.loc 1 8524 36 is_stmt 0 view .LVU5072
 18529 002c 1D4B     		ldr	r3, .L1313
 18530 002e 1868     		ldr	r0, [r3]
 18531 0030 0469     		ldr	r4, [r0, #16]
 18532              	.LVL2279:
 18533              		.loc 1 8524 28 view .LVU5073
 18534 0032 0123     		movs	r3, #1
 18535 0034 0DF10702 		add	r2, sp, #7
 18536 0038 3E21     		movs	r1, #62
 18537 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18538 003c A047     		blx	r4
 18539              	.LVL2280:
8525:Core/Src/bno055.c ****                                                           BNO055_POWER_MODE_REG,
8526:Core/Src/bno055.c ****                                                           &data_u8r,
8527:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8528:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 18540              		.loc 1 8528 17 is_stmt 1 view .LVU5074
 18541              		.loc 1 8528 20 is_stmt 0 view .LVU5075
 18542 003e 0446     		mov	r4, r0
 18543 0040 F0B9     		cbnz	r0, .L1305
8529:Core/Src/bno055.c ****                 {
8530:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_POWER_MODE, power_mode_u8);
 18544              		.loc 1 8530 21 is_stmt 1 view .LVU5076
 18545              		.loc 1 8530 32 is_stmt 0 view .LVU5077
 18546 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 18547              	.LVL2281:
 18548              		.loc 1 8530 32 view .LVU5078
 18549 0046 20F00300 		bic	r0, r0, #3
 18550 004a 43B2     		sxtb	r3, r0
 18551 004c 05F00300 		and	r0, r5, #3
ARM GAS  /tmp/ccWoU29M.s 			page 524


 18552 0050 1843     		orrs	r0, r0, r3
 18553              		.loc 1 8530 30 view .LVU5079
 18554 0052 8DF80700 		strb	r0, [sp, #7]
8531:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18555              		.loc 1 8531 21 is_stmt 1 view .LVU5080
 18556              		.loc 1 8531 41 is_stmt 0 view .LVU5081
 18557 0056 134B     		ldr	r3, .L1313
 18558 0058 1868     		ldr	r0, [r3]
 18559 005a C568     		ldr	r5, [r0, #12]
 18560              		.loc 1 8531 33 view .LVU5082
 18561 005c 0123     		movs	r3, #1
 18562 005e 0DF10702 		add	r2, sp, #7
 18563 0062 3E21     		movs	r1, #62
 18564 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18565 0066 A847     		blx	r5
 18566              	.LVL2282:
 18567              		.loc 1 8531 30 view .LVU5083
 18568 0068 54FA80F4 		uxtab	r4, r4, r0
 18569 006c 64B2     		sxtb	r4, r4
 18570              	.LVL2283:
 18571              		.loc 1 8531 30 view .LVU5084
 18572 006e 07E0     		b	.L1305
 18573              	.LVL2284:
 18574              	.L1311:
8519:Core/Src/bno055.c ****             }
 18575              		.loc 1 8519 17 is_stmt 1 view .LVU5085
8519:Core/Src/bno055.c ****             }
 18576              		.loc 1 8519 28 is_stmt 0 view .LVU5086
 18577 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 18578              	.LVL2285:
8519:Core/Src/bno055.c ****             }
 18579              		.loc 1 8519 25 view .LVU5087
 18580 0074 54FA80F4 		uxtab	r4, r4, r0
 18581 0078 64B2     		sxtb	r4, r4
 18582              	.LVL2286:
8519:Core/Src/bno055.c ****             }
 18583              		.loc 1 8519 25 view .LVU5088
 18584 007a D6E7     		b	.L1306
 18585              	.LVL2287:
 18586              	.L1308:
8532:Core/Src/bno055.c ****                                                                 BNO055_POWER_MODE_REG,
8533:Core/Src/bno055.c ****                                                                 &data_u8r,
8534:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
8535:Core/Src/bno055.c ****                 }
8536:Core/Src/bno055.c ****             }
8537:Core/Src/bno055.c ****             else
8538:Core/Src/bno055.c ****             {
8539:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
8540:Core/Src/bno055.c ****             }
8541:Core/Src/bno055.c ****         }
8542:Core/Src/bno055.c ****         else
8543:Core/Src/bno055.c ****         {
8544:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 18587              		.loc 1 8544 22 view .LVU5089
 18588 007c 4FF0FF34 		mov	r4, #-1
 18589              	.LVL2288:
 18590              	.L1305:
ARM GAS  /tmp/ccWoU29M.s 			page 525


8545:Core/Src/bno055.c ****         }
8546:Core/Src/bno055.c ****     }
8547:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 18591              		.loc 1 8547 5 is_stmt 1 view .LVU5090
 18592              		.loc 1 8547 24 is_stmt 0 view .LVU5091
 18593 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 18594              		.loc 1 8547 8 view .LVU5092
 18595 0084 28B9     		cbnz	r0, .L1312
 18596              	.LVL2289:
 18597              	.L1304:
8548:Core/Src/bno055.c ****     {
8549:Core/Src/bno055.c ****         /* set the operation mode
8550:Core/Src/bno055.c ****          * of previous operation mode*/
8551:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
8552:Core/Src/bno055.c ****     }
8553:Core/Src/bno055.c **** 
8554:Core/Src/bno055.c ****     return com_rslt;
8555:Core/Src/bno055.c **** }
 18598              		.loc 1 8555 1 view .LVU5093
 18599 0086 2046     		mov	r0, r4
 18600 0088 03B0     		add	sp, sp, #12
 18601              	.LCFI587:
 18602              		.cfi_remember_state
 18603              		.cfi_def_cfa_offset 12
 18604              		@ sp needed
 18605 008a 30BD     		pop	{r4, r5, pc}
 18606              	.LVL2290:
 18607              	.L1309:
 18608              	.LCFI588:
 18609              		.cfi_restore_state
8539:Core/Src/bno055.c ****             }
 18610              		.loc 1 8539 26 view .LVU5094
 18611 008c 4FF0FF34 		mov	r4, #-1
 18612              	.LVL2291:
8539:Core/Src/bno055.c ****             }
 18613              		.loc 1 8539 26 view .LVU5095
 18614 0090 F6E7     		b	.L1305
 18615              	.LVL2292:
 18616              	.L1312:
8551:Core/Src/bno055.c ****     }
 18617              		.loc 1 8551 9 is_stmt 1 view .LVU5096
8551:Core/Src/bno055.c ****     }
 18618              		.loc 1 8551 21 is_stmt 0 view .LVU5097
 18619 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 18620              	.LVL2293:
8551:Core/Src/bno055.c ****     }
 18621              		.loc 1 8551 18 view .LVU5098
 18622 0096 54FA80F4 		uxtab	r4, r4, r0
 18623              	.LVL2294:
8551:Core/Src/bno055.c ****     }
 18624              		.loc 1 8551 18 view .LVU5099
 18625 009a 64B2     		sxtb	r4, r4
 18626              	.LVL2295:
8551:Core/Src/bno055.c ****     }
 18627              		.loc 1 8551 18 view .LVU5100
 18628 009c F3E7     		b	.L1304
 18629              	.LVL2296:
ARM GAS  /tmp/ccWoU29M.s 			page 526


 18630              	.L1307:
8507:Core/Src/bno055.c ****     }
 18631              		.loc 1 8507 16 view .LVU5101
 18632 009e 6FF07E04 		mvn	r4, #126
 18633 00a2 F0E7     		b	.L1304
 18634              	.L1314:
 18635              		.align	2
 18636              	.L1313:
 18637 00a4 00000000 		.word	.LANCHOR0
 18638              		.cfi_endproc
 18639              	.LFE148:
 18641              		.section	.text.bno055_get_intr_rst,"ax",%progbits
 18642              		.align	1
 18643              		.global	bno055_get_intr_rst
 18644              		.syntax unified
 18645              		.thumb
 18646              		.thumb_func
 18647              		.fpu fpv4-sp-d16
 18649              	bno055_get_intr_rst:
 18650              	.LVL2297:
 18651              	.LFB149:
8556:Core/Src/bno055.c **** 
8557:Core/Src/bno055.c **** /*!
8558:Core/Src/bno055.c ****  *  @brief This API used to read the reset interrupt
8559:Core/Src/bno055.c ****  *  from register from 0x3F bit 6
8560:Core/Src/bno055.c ****  *  It resets all the interrupt bit and interrupt output
8561:Core/Src/bno055.c ****  *
8562:Core/Src/bno055.c ****  *  @param intr_rst_u8 : The value of reset interrupt
8563:Core/Src/bno055.c ****  *
8564:Core/Src/bno055.c ****  *    intr_rst_u8 | result
8565:Core/Src/bno055.c ****  *   ------------ |----------
8566:Core/Src/bno055.c ****  *     0x01       | BNO055_BIT_ENABLE
8567:Core/Src/bno055.c ****  *     0x00       | BNO055_BIT_DISABLE
8568:Core/Src/bno055.c ****  *
8569:Core/Src/bno055.c ****  *  @return results of bus communication function
8570:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8571:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8572:Core/Src/bno055.c ****  *
8573:Core/Src/bno055.c ****  */
8574:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_rst(u8 *intr_rst_u8)
8575:Core/Src/bno055.c **** {
 18652              		.loc 1 8575 1 is_stmt 1 view -0
 18653              		.cfi_startproc
 18654              		@ args = 0, pretend = 0, frame = 8
 18655              		@ frame_needed = 0, uses_anonymous_args = 0
 18656              		.loc 1 8575 1 is_stmt 0 view .LVU5103
 18657 0000 30B5     		push	{r4, r5, lr}
 18658              	.LCFI589:
 18659              		.cfi_def_cfa_offset 12
 18660              		.cfi_offset 4, -12
 18661              		.cfi_offset 5, -8
 18662              		.cfi_offset 14, -4
 18663 0002 83B0     		sub	sp, sp, #12
 18664              	.LCFI590:
 18665              		.cfi_def_cfa_offset 24
8576:Core/Src/bno055.c ****     /* Variable used to return value of
8577:Core/Src/bno055.c ****      * communication routine*/
ARM GAS  /tmp/ccWoU29M.s 			page 527


8578:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18666              		.loc 1 8578 5 is_stmt 1 view .LVU5104
 18667              	.LVL2298:
8579:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18668              		.loc 1 8579 5 view .LVU5105
 18669              		.loc 1 8579 8 is_stmt 0 view .LVU5106
 18670 0004 0023     		movs	r3, #0
 18671 0006 8DF80730 		strb	r3, [sp, #7]
8580:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18672              		.loc 1 8580 5 is_stmt 1 view .LVU5107
 18673              	.LVL2299:
8581:Core/Src/bno055.c **** 
8582:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8583:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18674              		.loc 1 8583 5 view .LVU5108
 18675              		.loc 1 8583 18 is_stmt 0 view .LVU5109
 18676 000a 134B     		ldr	r3, .L1323
 18677 000c 1B68     		ldr	r3, [r3]
 18678              		.loc 1 8583 8 view .LVU5110
 18679 000e E3B1     		cbz	r3, .L1319
 18680 0010 0446     		mov	r4, r0
8584:Core/Src/bno055.c ****     {
8585:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8586:Core/Src/bno055.c ****     }
8587:Core/Src/bno055.c ****     else
8588:Core/Src/bno055.c ****     {
8589:Core/Src/bno055.c ****         /*condition check for page,  reset interrupt is
8590:Core/Src/bno055.c ****          * available in the page zero*/
8591:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18681              		.loc 1 8591 9 is_stmt 1 view .LVU5111
 18682              		.loc 1 8591 21 is_stmt 0 view .LVU5112
 18683 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18684              		.loc 1 8591 12 view .LVU5113
 18685 0014 9BB9     		cbnz	r3, .L1322
 18686              	.LVL2300:
 18687              	.L1317:
8592:Core/Src/bno055.c ****         {
8593:Core/Src/bno055.c ****             /* Write the page zero*/
8594:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8595:Core/Src/bno055.c ****         }
8596:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18688              		.loc 1 8596 53 discriminator 1 view .LVU5114
 18689 0016 104B     		ldr	r3, .L1323
 18690 0018 1B68     		ldr	r3, [r3]
 18691 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18692              		.loc 1 8596 41 discriminator 1 view .LVU5115
 18693 001c C3B9     		cbnz	r3, .L1320
 18694              	.L1318:
8597:Core/Src/bno055.c ****         {
8598:Core/Src/bno055.c ****             /* Read the value of reset interrupt*/
8599:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18695              		.loc 1 8599 13 is_stmt 1 view .LVU5116
 18696              		.loc 1 8599 32 is_stmt 0 view .LVU5117
 18697 001e 0E4B     		ldr	r3, .L1323
 18698 0020 1868     		ldr	r0, [r3]
 18699 0022 0569     		ldr	r5, [r0, #16]
 18700              		.loc 1 8599 24 view .LVU5118
ARM GAS  /tmp/ccWoU29M.s 			page 528


 18701 0024 0123     		movs	r3, #1
 18702 0026 0DF10702 		add	r2, sp, #7
 18703 002a 3F21     		movs	r1, #63
 18704 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18705 002e A847     		blx	r5
 18706              	.LVL2301:
8600:Core/Src/bno055.c ****                                                       BNO055_INTR_RST_REG,
8601:Core/Src/bno055.c ****                                                       &data_u8r,
8602:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8603:Core/Src/bno055.c ****             *intr_rst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_RST);
 18707              		.loc 1 8603 13 is_stmt 1 view .LVU5119
 18708              		.loc 1 8603 28 is_stmt 0 view .LVU5120
 18709 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18710 0034 C3F38013 		ubfx	r3, r3, #6, #1
 18711              		.loc 1 8603 26 view .LVU5121
 18712 0038 2370     		strb	r3, [r4]
 18713              	.LVL2302:
 18714              	.L1316:
8604:Core/Src/bno055.c ****         }
8605:Core/Src/bno055.c ****         else
8606:Core/Src/bno055.c ****         {
8607:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8608:Core/Src/bno055.c ****         }
8609:Core/Src/bno055.c ****     }
8610:Core/Src/bno055.c **** 
8611:Core/Src/bno055.c ****     return com_rslt;
8612:Core/Src/bno055.c **** }
 18715              		.loc 1 8612 1 view .LVU5122
 18716 003a 03B0     		add	sp, sp, #12
 18717              	.LCFI591:
 18718              		.cfi_remember_state
 18719              		.cfi_def_cfa_offset 12
 18720              		@ sp needed
 18721 003c 30BD     		pop	{r4, r5, pc}
 18722              	.LVL2303:
 18723              	.L1322:
 18724              	.LCFI592:
 18725              		.cfi_restore_state
8594:Core/Src/bno055.c ****         }
 18726              		.loc 1 8594 13 is_stmt 1 view .LVU5123
8594:Core/Src/bno055.c ****         }
 18727              		.loc 1 8594 23 is_stmt 0 view .LVU5124
 18728 003e 0020     		movs	r0, #0
 18729              	.LVL2304:
8594:Core/Src/bno055.c ****         }
 18730              		.loc 1 8594 23 view .LVU5125
 18731 0040 FFF7FEFF 		bl	bno055_write_page_id
 18732              	.LVL2305:
8596:Core/Src/bno055.c ****         {
 18733              		.loc 1 8596 9 is_stmt 1 view .LVU5126
8596:Core/Src/bno055.c ****         {
 18734              		.loc 1 8596 12 is_stmt 0 view .LVU5127
 18735 0044 0028     		cmp	r0, #0
 18736 0046 EAD0     		beq	.L1318
 18737 0048 E5E7     		b	.L1317
 18738              	.LVL2306:
 18739              	.L1319:
ARM GAS  /tmp/ccWoU29M.s 			page 529


8585:Core/Src/bno055.c ****     }
 18740              		.loc 1 8585 16 view .LVU5128
 18741 004a 6FF07E00 		mvn	r0, #126
 18742              	.LVL2307:
8585:Core/Src/bno055.c ****     }
 18743              		.loc 1 8585 16 view .LVU5129
 18744 004e F4E7     		b	.L1316
 18745              	.LVL2308:
 18746              	.L1320:
8607:Core/Src/bno055.c ****         }
 18747              		.loc 1 8607 22 view .LVU5130
 18748 0050 4FF0FF30 		mov	r0, #-1
 18749 0054 F1E7     		b	.L1316
 18750              	.L1324:
 18751 0056 00BF     		.align	2
 18752              	.L1323:
 18753 0058 00000000 		.word	.LANCHOR0
 18754              		.cfi_endproc
 18755              	.LFE149:
 18757              		.section	.text.bno055_set_intr_rst,"ax",%progbits
 18758              		.align	1
 18759              		.global	bno055_set_intr_rst
 18760              		.syntax unified
 18761              		.thumb
 18762              		.thumb_func
 18763              		.fpu fpv4-sp-d16
 18765              	bno055_set_intr_rst:
 18766              	.LVL2309:
 18767              	.LFB150:
8613:Core/Src/bno055.c **** 
8614:Core/Src/bno055.c **** /*!
8615:Core/Src/bno055.c ****  *  @brief This API used to write the reset interrupt
8616:Core/Src/bno055.c ****  *  from register from 0x3F bit 6
8617:Core/Src/bno055.c ****  *  It resets all the interrupt bit and interrupt output
8618:Core/Src/bno055.c ****  *
8619:Core/Src/bno055.c ****  *  @param intr_rst_u8 : The value of reset interrupt
8620:Core/Src/bno055.c ****  *
8621:Core/Src/bno055.c ****  *    intr_rst_u8 | result
8622:Core/Src/bno055.c ****  *   -------------- |----------
8623:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8624:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8625:Core/Src/bno055.c ****  *
8626:Core/Src/bno055.c ****  *  @return results of bus communication function
8627:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8628:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8629:Core/Src/bno055.c ****  *
8630:Core/Src/bno055.c ****  */
8631:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_rst(u8 intr_rst_u8)
8632:Core/Src/bno055.c **** {
 18768              		.loc 1 8632 1 is_stmt 1 view -0
 18769              		.cfi_startproc
 18770              		@ args = 0, pretend = 0, frame = 8
 18771              		@ frame_needed = 0, uses_anonymous_args = 0
 18772              		.loc 1 8632 1 is_stmt 0 view .LVU5132
 18773 0000 30B5     		push	{r4, r5, lr}
 18774              	.LCFI593:
 18775              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccWoU29M.s 			page 530


 18776              		.cfi_offset 4, -12
 18777              		.cfi_offset 5, -8
 18778              		.cfi_offset 14, -4
 18779 0002 83B0     		sub	sp, sp, #12
 18780              	.LCFI594:
 18781              		.cfi_def_cfa_offset 24
8633:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18782              		.loc 1 8633 5 is_stmt 1 view .LVU5133
 18783              	.LVL2310:
8634:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18784              		.loc 1 8634 5 view .LVU5134
 18785              		.loc 1 8634 8 is_stmt 0 view .LVU5135
 18786 0004 0023     		movs	r3, #0
 18787 0006 8DF80730 		strb	r3, [sp, #7]
8635:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18788              		.loc 1 8635 5 is_stmt 1 view .LVU5136
 18789              	.LVL2311:
8636:Core/Src/bno055.c **** 
8637:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8638:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18790              		.loc 1 8638 5 view .LVU5137
 18791              		.loc 1 8638 18 is_stmt 0 view .LVU5138
 18792 000a 1E4B     		ldr	r3, .L1333
 18793 000c 1B68     		ldr	r3, [r3]
 18794              		.loc 1 8638 8 view .LVU5139
 18795 000e 002B     		cmp	r3, #0
 18796 0010 31D0     		beq	.L1329
 18797 0012 0446     		mov	r4, r0
8639:Core/Src/bno055.c ****     {
8640:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8641:Core/Src/bno055.c ****     }
8642:Core/Src/bno055.c ****     else
8643:Core/Src/bno055.c ****     {
8644:Core/Src/bno055.c ****         /*condition check for page, reset interrupt
8645:Core/Src/bno055.c ****          * available in the page zero*/
8646:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18798              		.loc 1 8646 9 is_stmt 1 view .LVU5140
 18799              		.loc 1 8646 21 is_stmt 0 view .LVU5141
 18800 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18801              		.loc 1 8646 12 view .LVU5142
 18802 0016 43BB     		cbnz	r3, .L1332
 18803              	.LVL2312:
 18804              	.L1327:
8647:Core/Src/bno055.c ****         {
8648:Core/Src/bno055.c ****             /* Write the page zero*/
8649:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8650:Core/Src/bno055.c ****         }
8651:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18805              		.loc 1 8651 53 discriminator 1 view .LVU5143
 18806 0018 1A4B     		ldr	r3, .L1333
 18807 001a 1B68     		ldr	r3, [r3]
 18808 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18809              		.loc 1 8651 41 discriminator 1 view .LVU5144
 18810 001e 6BBB     		cbnz	r3, .L1330
 18811              	.L1328:
8652:Core/Src/bno055.c ****         {
8653:Core/Src/bno055.c ****             /* Write the value of reset interrupt */
ARM GAS  /tmp/ccWoU29M.s 			page 531


8654:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18812              		.loc 1 8654 13 is_stmt 1 view .LVU5145
 18813              		.loc 1 8654 32 is_stmt 0 view .LVU5146
 18814 0020 184B     		ldr	r3, .L1333
 18815 0022 1868     		ldr	r0, [r3]
 18816 0024 0569     		ldr	r5, [r0, #16]
 18817              		.loc 1 8654 24 view .LVU5147
 18818 0026 0123     		movs	r3, #1
 18819 0028 0DF10702 		add	r2, sp, #7
 18820 002c 3F21     		movs	r1, #63
 18821 002e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18822 0030 A847     		blx	r5
 18823              	.LVL2313:
8655:Core/Src/bno055.c ****                                                       BNO055_INTR_RST_REG,
8656:Core/Src/bno055.c ****                                                       &data_u8r,
8657:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8658:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 18824              		.loc 1 8658 13 is_stmt 1 view .LVU5148
 18825              		.loc 1 8658 16 is_stmt 0 view .LVU5149
 18826 0032 0546     		mov	r5, r0
 18827 0034 B0B9     		cbnz	r0, .L1326
8659:Core/Src/bno055.c ****             {
8660:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_INTR_RST, intr_rst_u8);
 18828              		.loc 1 8660 17 is_stmt 1 view .LVU5150
 18829              		.loc 1 8660 28 is_stmt 0 view .LVU5151
 18830 0036 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18831 003a 23F04003 		bic	r3, r3, #64
 18832 003e 5BB2     		sxtb	r3, r3
 18833 0040 A401     		lsls	r4, r4, #6
 18834 0042 04F04004 		and	r4, r4, #64
 18835 0046 1C43     		orrs	r4, r4, r3
 18836              		.loc 1 8660 26 view .LVU5152
 18837 0048 8DF80740 		strb	r4, [sp, #7]
8661:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18838              		.loc 1 8661 17 is_stmt 1 view .LVU5153
 18839              		.loc 1 8661 37 is_stmt 0 view .LVU5154
 18840 004c 0D4B     		ldr	r3, .L1333
 18841 004e 1868     		ldr	r0, [r3]
 18842              	.LVL2314:
 18843              		.loc 1 8661 37 view .LVU5155
 18844 0050 C468     		ldr	r4, [r0, #12]
 18845              		.loc 1 8661 29 view .LVU5156
 18846 0052 0123     		movs	r3, #1
 18847 0054 0DF10702 		add	r2, sp, #7
 18848 0058 3F21     		movs	r1, #63
 18849 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18850 005c A047     		blx	r4
 18851              	.LVL2315:
 18852              		.loc 1 8661 26 view .LVU5157
 18853 005e 55FA80F5 		uxtab	r5, r5, r0
 18854 0062 6DB2     		sxtb	r5, r5
 18855              	.LVL2316:
 18856              	.L1326:
8662:Core/Src/bno055.c ****                                                             BNO055_INTR_RST_REG,
8663:Core/Src/bno055.c ****                                                             &data_u8r,
8664:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
8665:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccWoU29M.s 			page 532


8666:Core/Src/bno055.c ****         }
8667:Core/Src/bno055.c ****         else
8668:Core/Src/bno055.c ****         {
8669:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8670:Core/Src/bno055.c ****         }
8671:Core/Src/bno055.c ****     }
8672:Core/Src/bno055.c **** 
8673:Core/Src/bno055.c ****     return com_rslt;
8674:Core/Src/bno055.c **** }
 18857              		.loc 1 8674 1 view .LVU5158
 18858 0064 2846     		mov	r0, r5
 18859 0066 03B0     		add	sp, sp, #12
 18860              	.LCFI595:
 18861              		.cfi_remember_state
 18862              		.cfi_def_cfa_offset 12
 18863              		@ sp needed
 18864 0068 30BD     		pop	{r4, r5, pc}
 18865              	.LVL2317:
 18866              	.L1332:
 18867              	.LCFI596:
 18868              		.cfi_restore_state
8649:Core/Src/bno055.c ****         }
 18869              		.loc 1 8649 13 is_stmt 1 view .LVU5159
8649:Core/Src/bno055.c ****         }
 18870              		.loc 1 8649 23 is_stmt 0 view .LVU5160
 18871 006a 0020     		movs	r0, #0
 18872              	.LVL2318:
8649:Core/Src/bno055.c ****         }
 18873              		.loc 1 8649 23 view .LVU5161
 18874 006c FFF7FEFF 		bl	bno055_write_page_id
 18875              	.LVL2319:
8651:Core/Src/bno055.c ****         {
 18876              		.loc 1 8651 9 is_stmt 1 view .LVU5162
8651:Core/Src/bno055.c ****         {
 18877              		.loc 1 8651 12 is_stmt 0 view .LVU5163
 18878 0070 0028     		cmp	r0, #0
 18879 0072 D5D0     		beq	.L1328
 18880 0074 D0E7     		b	.L1327
 18881              	.LVL2320:
 18882              	.L1329:
8640:Core/Src/bno055.c ****     }
 18883              		.loc 1 8640 16 view .LVU5164
 18884 0076 6FF07E05 		mvn	r5, #126
 18885 007a F3E7     		b	.L1326
 18886              	.LVL2321:
 18887              	.L1330:
8669:Core/Src/bno055.c ****         }
 18888              		.loc 1 8669 22 view .LVU5165
 18889 007c 4FF0FF35 		mov	r5, #-1
 18890 0080 F0E7     		b	.L1326
 18891              	.L1334:
 18892 0082 00BF     		.align	2
 18893              	.L1333:
 18894 0084 00000000 		.word	.LANCHOR0
 18895              		.cfi_endproc
 18896              	.LFE150:
 18898              		.section	.text.bno055_get_clk_src,"ax",%progbits
ARM GAS  /tmp/ccWoU29M.s 			page 533


 18899              		.align	1
 18900              		.global	bno055_get_clk_src
 18901              		.syntax unified
 18902              		.thumb
 18903              		.thumb_func
 18904              		.fpu fpv4-sp-d16
 18906              	bno055_get_clk_src:
 18907              	.LVL2322:
 18908              	.LFB151:
8675:Core/Src/bno055.c **** 
8676:Core/Src/bno055.c **** /*!
8677:Core/Src/bno055.c ****  *  @brief This API used to read the clk source
8678:Core/Src/bno055.c ****  *  from register from 0x3F bit 7
8679:Core/Src/bno055.c ****  *
8680:Core/Src/bno055.c ****  *  @param clk_src_u8 : The value of clk source
8681:Core/Src/bno055.c ****  *
8682:Core/Src/bno055.c ****  *   clk_src_u8   | result
8683:Core/Src/bno055.c ****  *   -------------- |----------
8684:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8685:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8686:Core/Src/bno055.c ****  *
8687:Core/Src/bno055.c ****  *  @return results of bus communication function
8688:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8689:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8690:Core/Src/bno055.c ****  *
8691:Core/Src/bno055.c ****  */
8692:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_clk_src(u8 *clk_src_u8)
8693:Core/Src/bno055.c **** {
 18909              		.loc 1 8693 1 is_stmt 1 view -0
 18910              		.cfi_startproc
 18911              		@ args = 0, pretend = 0, frame = 8
 18912              		@ frame_needed = 0, uses_anonymous_args = 0
 18913              		.loc 1 8693 1 is_stmt 0 view .LVU5167
 18914 0000 30B5     		push	{r4, r5, lr}
 18915              	.LCFI597:
 18916              		.cfi_def_cfa_offset 12
 18917              		.cfi_offset 4, -12
 18918              		.cfi_offset 5, -8
 18919              		.cfi_offset 14, -4
 18920 0002 83B0     		sub	sp, sp, #12
 18921              	.LCFI598:
 18922              		.cfi_def_cfa_offset 24
8694:Core/Src/bno055.c ****     /* Variable used to return value of
8695:Core/Src/bno055.c ****      * communication routine*/
8696:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18923              		.loc 1 8696 5 is_stmt 1 view .LVU5168
 18924              	.LVL2323:
8697:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18925              		.loc 1 8697 5 view .LVU5169
 18926              		.loc 1 8697 8 is_stmt 0 view .LVU5170
 18927 0004 0023     		movs	r3, #0
 18928 0006 8DF80730 		strb	r3, [sp, #7]
8698:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18929              		.loc 1 8698 5 is_stmt 1 view .LVU5171
 18930              	.LVL2324:
8699:Core/Src/bno055.c **** 
8700:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
ARM GAS  /tmp/ccWoU29M.s 			page 534


8701:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18931              		.loc 1 8701 5 view .LVU5172
 18932              		.loc 1 8701 18 is_stmt 0 view .LVU5173
 18933 000a 124B     		ldr	r3, .L1343
 18934 000c 1B68     		ldr	r3, [r3]
 18935              		.loc 1 8701 8 view .LVU5174
 18936 000e DBB1     		cbz	r3, .L1339
 18937 0010 0446     		mov	r4, r0
8702:Core/Src/bno055.c ****     {
8703:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8704:Core/Src/bno055.c ****     }
8705:Core/Src/bno055.c ****     else
8706:Core/Src/bno055.c ****     {
8707:Core/Src/bno055.c ****         /*condition check for page, clk source is
8708:Core/Src/bno055.c ****          * available in the page zero*/
8709:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18938              		.loc 1 8709 9 is_stmt 1 view .LVU5175
 18939              		.loc 1 8709 21 is_stmt 0 view .LVU5176
 18940 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18941              		.loc 1 8709 12 view .LVU5177
 18942 0014 93B9     		cbnz	r3, .L1342
 18943              	.LVL2325:
 18944              	.L1337:
8710:Core/Src/bno055.c ****         {
8711:Core/Src/bno055.c ****             /* Write the page zero*/
8712:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8713:Core/Src/bno055.c ****         }
8714:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18945              		.loc 1 8714 53 discriminator 1 view .LVU5178
 18946 0016 0F4B     		ldr	r3, .L1343
 18947 0018 1B68     		ldr	r3, [r3]
 18948 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18949              		.loc 1 8714 41 discriminator 1 view .LVU5179
 18950 001c BBB9     		cbnz	r3, .L1340
 18951              	.L1338:
8715:Core/Src/bno055.c ****         {
8716:Core/Src/bno055.c ****             /* Read the value of clk source */
8717:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18952              		.loc 1 8717 13 is_stmt 1 view .LVU5180
 18953              		.loc 1 8717 32 is_stmt 0 view .LVU5181
 18954 001e 0D4B     		ldr	r3, .L1343
 18955 0020 1868     		ldr	r0, [r3]
 18956 0022 0569     		ldr	r5, [r0, #16]
 18957              		.loc 1 8717 24 view .LVU5182
 18958 0024 0123     		movs	r3, #1
 18959 0026 0DF10702 		add	r2, sp, #7
 18960 002a 3F21     		movs	r1, #63
 18961 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18962 002e A847     		blx	r5
 18963              	.LVL2326:
8718:Core/Src/bno055.c ****                                                       BNO055_CLK_SRC_REG,
8719:Core/Src/bno055.c ****                                                       &data_u8r,
8720:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8721:Core/Src/bno055.c ****             *clk_src_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_CLK_SRC);
 18964              		.loc 1 8721 13 is_stmt 1 view .LVU5183
 18965              		.loc 1 8721 27 is_stmt 0 view .LVU5184
 18966 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 535


 18967 0034 DB09     		lsrs	r3, r3, #7
 18968              		.loc 1 8721 25 view .LVU5185
 18969 0036 2370     		strb	r3, [r4]
 18970              	.LVL2327:
 18971              	.L1336:
8722:Core/Src/bno055.c ****         }
8723:Core/Src/bno055.c ****         else
8724:Core/Src/bno055.c ****         {
8725:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8726:Core/Src/bno055.c ****         }
8727:Core/Src/bno055.c ****     }
8728:Core/Src/bno055.c **** 
8729:Core/Src/bno055.c ****     return com_rslt;
8730:Core/Src/bno055.c **** }
 18972              		.loc 1 8730 1 view .LVU5186
 18973 0038 03B0     		add	sp, sp, #12
 18974              	.LCFI599:
 18975              		.cfi_remember_state
 18976              		.cfi_def_cfa_offset 12
 18977              		@ sp needed
 18978 003a 30BD     		pop	{r4, r5, pc}
 18979              	.LVL2328:
 18980              	.L1342:
 18981              	.LCFI600:
 18982              		.cfi_restore_state
8712:Core/Src/bno055.c ****         }
 18983              		.loc 1 8712 13 is_stmt 1 view .LVU5187
8712:Core/Src/bno055.c ****         }
 18984              		.loc 1 8712 23 is_stmt 0 view .LVU5188
 18985 003c 0020     		movs	r0, #0
 18986              	.LVL2329:
8712:Core/Src/bno055.c ****         }
 18987              		.loc 1 8712 23 view .LVU5189
 18988 003e FFF7FEFF 		bl	bno055_write_page_id
 18989              	.LVL2330:
8714:Core/Src/bno055.c ****         {
 18990              		.loc 1 8714 9 is_stmt 1 view .LVU5190
8714:Core/Src/bno055.c ****         {
 18991              		.loc 1 8714 12 is_stmt 0 view .LVU5191
 18992 0042 0028     		cmp	r0, #0
 18993 0044 EBD0     		beq	.L1338
 18994 0046 E6E7     		b	.L1337
 18995              	.LVL2331:
 18996              	.L1339:
8703:Core/Src/bno055.c ****     }
 18997              		.loc 1 8703 16 view .LVU5192
 18998 0048 6FF07E00 		mvn	r0, #126
 18999              	.LVL2332:
8703:Core/Src/bno055.c ****     }
 19000              		.loc 1 8703 16 view .LVU5193
 19001 004c F4E7     		b	.L1336
 19002              	.LVL2333:
 19003              	.L1340:
8725:Core/Src/bno055.c ****         }
 19004              		.loc 1 8725 22 view .LVU5194
 19005 004e 4FF0FF30 		mov	r0, #-1
 19006 0052 F1E7     		b	.L1336
ARM GAS  /tmp/ccWoU29M.s 			page 536


 19007              	.L1344:
 19008              		.align	2
 19009              	.L1343:
 19010 0054 00000000 		.word	.LANCHOR0
 19011              		.cfi_endproc
 19012              	.LFE151:
 19014              		.section	.text.bno055_set_clk_src,"ax",%progbits
 19015              		.align	1
 19016              		.global	bno055_set_clk_src
 19017              		.syntax unified
 19018              		.thumb
 19019              		.thumb_func
 19020              		.fpu fpv4-sp-d16
 19022              	bno055_set_clk_src:
 19023              	.LVL2334:
 19024              	.LFB152:
8731:Core/Src/bno055.c **** 
8732:Core/Src/bno055.c **** /*!
8733:Core/Src/bno055.c ****  *  @brief This API used to write the clk source
8734:Core/Src/bno055.c ****  *  from register from 0x3F bit 7
8735:Core/Src/bno055.c ****  *
8736:Core/Src/bno055.c ****  *  @param clk_src_u8 : The value of clk source
8737:Core/Src/bno055.c ****  *
8738:Core/Src/bno055.c ****  *   clk_src_u8   | result
8739:Core/Src/bno055.c ****  *   -------------- |----------
8740:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8741:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8742:Core/Src/bno055.c ****  *
8743:Core/Src/bno055.c ****  *  @return results of bus communication function
8744:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8745:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8746:Core/Src/bno055.c ****  *
8747:Core/Src/bno055.c ****  */
8748:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_clk_src(u8 clk_src_u8)
8749:Core/Src/bno055.c **** {
 19025              		.loc 1 8749 1 is_stmt 1 view -0
 19026              		.cfi_startproc
 19027              		@ args = 0, pretend = 0, frame = 8
 19028              		@ frame_needed = 0, uses_anonymous_args = 0
 19029              		.loc 1 8749 1 is_stmt 0 view .LVU5196
 19030 0000 30B5     		push	{r4, r5, lr}
 19031              	.LCFI601:
 19032              		.cfi_def_cfa_offset 12
 19033              		.cfi_offset 4, -12
 19034              		.cfi_offset 5, -8
 19035              		.cfi_offset 14, -4
 19036 0002 83B0     		sub	sp, sp, #12
 19037              	.LCFI602:
 19038              		.cfi_def_cfa_offset 24
8750:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19039              		.loc 1 8750 5 is_stmt 1 view .LVU5197
 19040              	.LVL2335:
8751:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19041              		.loc 1 8751 5 view .LVU5198
 19042              		.loc 1 8751 8 is_stmt 0 view .LVU5199
 19043 0004 0023     		movs	r3, #0
 19044 0006 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/ccWoU29M.s 			page 537


8752:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19045              		.loc 1 8752 5 is_stmt 1 view .LVU5200
 19046              	.LVL2336:
8753:Core/Src/bno055.c **** 
8754:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8755:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19047              		.loc 1 8755 5 view .LVU5201
 19048              		.loc 1 8755 18 is_stmt 0 view .LVU5202
 19049 000a 1C4B     		ldr	r3, .L1353
 19050 000c 1B68     		ldr	r3, [r3]
 19051              		.loc 1 8755 8 view .LVU5203
 19052 000e 002B     		cmp	r3, #0
 19053 0010 2ED0     		beq	.L1349
 19054 0012 0446     		mov	r4, r0
8756:Core/Src/bno055.c ****     {
8757:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8758:Core/Src/bno055.c ****     }
8759:Core/Src/bno055.c ****     else
8760:Core/Src/bno055.c ****     {
8761:Core/Src/bno055.c ****         /*condition check for page, clk source is
8762:Core/Src/bno055.c ****          * available in the page zero*/
8763:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 19055              		.loc 1 8763 9 is_stmt 1 view .LVU5204
 19056              		.loc 1 8763 21 is_stmt 0 view .LVU5205
 19057 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19058              		.loc 1 8763 12 view .LVU5206
 19059 0016 2BBB     		cbnz	r3, .L1352
 19060              	.LVL2337:
 19061              	.L1347:
8764:Core/Src/bno055.c ****         {
8765:Core/Src/bno055.c ****             /* Write the page zero*/
8766:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8767:Core/Src/bno055.c ****         }
8768:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 19062              		.loc 1 8768 53 discriminator 1 view .LVU5207
 19063 0018 184B     		ldr	r3, .L1353
 19064 001a 1B68     		ldr	r3, [r3]
 19065 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19066              		.loc 1 8768 41 discriminator 1 view .LVU5208
 19067 001e 53BB     		cbnz	r3, .L1350
 19068              	.L1348:
8769:Core/Src/bno055.c ****         {
8770:Core/Src/bno055.c ****             /* Write the value of clk source */
8771:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19069              		.loc 1 8771 13 is_stmt 1 view .LVU5209
 19070              		.loc 1 8771 32 is_stmt 0 view .LVU5210
 19071 0020 164B     		ldr	r3, .L1353
 19072 0022 1868     		ldr	r0, [r3]
 19073 0024 0569     		ldr	r5, [r0, #16]
 19074              		.loc 1 8771 24 view .LVU5211
 19075 0026 0123     		movs	r3, #1
 19076 0028 0DF10702 		add	r2, sp, #7
 19077 002c 3F21     		movs	r1, #63
 19078 002e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19079 0030 A847     		blx	r5
 19080              	.LVL2338:
8772:Core/Src/bno055.c ****                                                       BNO055_CLK_SRC_REG,
ARM GAS  /tmp/ccWoU29M.s 			page 538


8773:Core/Src/bno055.c ****                                                       &data_u8r,
8774:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8775:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 19081              		.loc 1 8775 13 is_stmt 1 view .LVU5212
 19082              		.loc 1 8775 16 is_stmt 0 view .LVU5213
 19083 0032 0546     		mov	r5, r0
 19084 0034 98B9     		cbnz	r0, .L1346
8776:Core/Src/bno055.c ****             {
8777:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_CLK_SRC, clk_src_u8);
 19085              		.loc 1 8777 17 is_stmt 1 view .LVU5214
 19086              		.loc 1 8777 28 is_stmt 0 view .LVU5215
 19087 0036 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 19088              	.LVL2339:
 19089              		.loc 1 8777 28 view .LVU5216
 19090 003a 00F07F00 		and	r0, r0, #127
 19091 003e 40EAC414 		orr	r4, r0, r4, lsl #7
 19092              		.loc 1 8777 26 view .LVU5217
 19093 0042 8DF80740 		strb	r4, [sp, #7]
8778:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 19094              		.loc 1 8778 17 is_stmt 1 view .LVU5218
 19095              		.loc 1 8778 37 is_stmt 0 view .LVU5219
 19096 0046 0D4B     		ldr	r3, .L1353
 19097 0048 1868     		ldr	r0, [r3]
 19098 004a C468     		ldr	r4, [r0, #12]
 19099              		.loc 1 8778 29 view .LVU5220
 19100 004c 0123     		movs	r3, #1
 19101 004e 0DF10702 		add	r2, sp, #7
 19102 0052 3F21     		movs	r1, #63
 19103 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19104 0056 A047     		blx	r4
 19105              	.LVL2340:
 19106              		.loc 1 8778 26 view .LVU5221
 19107 0058 55FA80F5 		uxtab	r5, r5, r0
 19108 005c 6DB2     		sxtb	r5, r5
 19109              	.LVL2341:
 19110              	.L1346:
8779:Core/Src/bno055.c ****                                                             BNO055_CLK_SRC_REG,
8780:Core/Src/bno055.c ****                                                             &data_u8r,
8781:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
8782:Core/Src/bno055.c ****             }
8783:Core/Src/bno055.c ****         }
8784:Core/Src/bno055.c ****         else
8785:Core/Src/bno055.c ****         {
8786:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8787:Core/Src/bno055.c ****         }
8788:Core/Src/bno055.c ****     }
8789:Core/Src/bno055.c **** 
8790:Core/Src/bno055.c ****     return com_rslt;
8791:Core/Src/bno055.c **** }
 19111              		.loc 1 8791 1 view .LVU5222
 19112 005e 2846     		mov	r0, r5
 19113 0060 03B0     		add	sp, sp, #12
 19114              	.LCFI603:
 19115              		.cfi_remember_state
 19116              		.cfi_def_cfa_offset 12
 19117              		@ sp needed
 19118 0062 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccWoU29M.s 			page 539


 19119              	.LVL2342:
 19120              	.L1352:
 19121              	.LCFI604:
 19122              		.cfi_restore_state
8766:Core/Src/bno055.c ****         }
 19123              		.loc 1 8766 13 is_stmt 1 view .LVU5223
8766:Core/Src/bno055.c ****         }
 19124              		.loc 1 8766 23 is_stmt 0 view .LVU5224
 19125 0064 0020     		movs	r0, #0
 19126              	.LVL2343:
8766:Core/Src/bno055.c ****         }
 19127              		.loc 1 8766 23 view .LVU5225
 19128 0066 FFF7FEFF 		bl	bno055_write_page_id
 19129              	.LVL2344:
8768:Core/Src/bno055.c ****         {
 19130              		.loc 1 8768 9 is_stmt 1 view .LVU5226
8768:Core/Src/bno055.c ****         {
 19131              		.loc 1 8768 12 is_stmt 0 view .LVU5227
 19132 006a 0028     		cmp	r0, #0
 19133 006c D8D0     		beq	.L1348
 19134 006e D3E7     		b	.L1347
 19135              	.LVL2345:
 19136              	.L1349:
8757:Core/Src/bno055.c ****     }
 19137              		.loc 1 8757 16 view .LVU5228
 19138 0070 6FF07E05 		mvn	r5, #126
 19139 0074 F3E7     		b	.L1346
 19140              	.LVL2346:
 19141              	.L1350:
8786:Core/Src/bno055.c ****         }
 19142              		.loc 1 8786 22 view .LVU5229
 19143 0076 4FF0FF35 		mov	r5, #-1
 19144 007a F0E7     		b	.L1346
 19145              	.L1354:
 19146              		.align	2
 19147              	.L1353:
 19148 007c 00000000 		.word	.LANCHOR0
 19149              		.cfi_endproc
 19150              	.LFE152:
 19152              		.section	.text.bno055_get_sys_rst,"ax",%progbits
 19153              		.align	1
 19154              		.global	bno055_get_sys_rst
 19155              		.syntax unified
 19156              		.thumb
 19157              		.thumb_func
 19158              		.fpu fpv4-sp-d16
 19160              	bno055_get_sys_rst:
 19161              	.LVL2347:
 19162              	.LFB153:
8792:Core/Src/bno055.c **** 
8793:Core/Src/bno055.c **** /*!
8794:Core/Src/bno055.c ****  *  @brief This API used to read the reset system
8795:Core/Src/bno055.c ****  *  from register from 0x3F bit 5
8796:Core/Src/bno055.c ****  *
8797:Core/Src/bno055.c ****  *  @param sys_rst_u8 : The value of reset system
8798:Core/Src/bno055.c ****  *
8799:Core/Src/bno055.c ****  *   sys_rst_u8   | result
ARM GAS  /tmp/ccWoU29M.s 			page 540


8800:Core/Src/bno055.c ****  *   -------------- |----------
8801:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8802:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8803:Core/Src/bno055.c ****  *
8804:Core/Src/bno055.c ****  *  @return results of bus communication function
8805:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8806:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8807:Core/Src/bno055.c ****  *
8808:Core/Src/bno055.c ****  *  @note It resets the whole system
8809:Core/Src/bno055.c ****  */
8810:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_sys_rst(u8 *sys_rst_u8)
8811:Core/Src/bno055.c **** {
 19163              		.loc 1 8811 1 is_stmt 1 view -0
 19164              		.cfi_startproc
 19165              		@ args = 0, pretend = 0, frame = 8
 19166              		@ frame_needed = 0, uses_anonymous_args = 0
 19167              		.loc 1 8811 1 is_stmt 0 view .LVU5231
 19168 0000 30B5     		push	{r4, r5, lr}
 19169              	.LCFI605:
 19170              		.cfi_def_cfa_offset 12
 19171              		.cfi_offset 4, -12
 19172              		.cfi_offset 5, -8
 19173              		.cfi_offset 14, -4
 19174 0002 83B0     		sub	sp, sp, #12
 19175              	.LCFI606:
 19176              		.cfi_def_cfa_offset 24
8812:Core/Src/bno055.c ****     /* Variable used to return value of
8813:Core/Src/bno055.c ****      * communication routine*/
8814:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19177              		.loc 1 8814 5 is_stmt 1 view .LVU5232
 19178              	.LVL2348:
8815:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19179              		.loc 1 8815 5 view .LVU5233
 19180              		.loc 1 8815 8 is_stmt 0 view .LVU5234
 19181 0004 0023     		movs	r3, #0
 19182 0006 8DF80730 		strb	r3, [sp, #7]
8816:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19183              		.loc 1 8816 5 is_stmt 1 view .LVU5235
 19184              	.LVL2349:
8817:Core/Src/bno055.c **** 
8818:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8819:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19185              		.loc 1 8819 5 view .LVU5236
 19186              		.loc 1 8819 18 is_stmt 0 view .LVU5237
 19187 000a 134B     		ldr	r3, .L1363
 19188 000c 1B68     		ldr	r3, [r3]
 19189              		.loc 1 8819 8 view .LVU5238
 19190 000e E3B1     		cbz	r3, .L1359
 19191 0010 0446     		mov	r4, r0
8820:Core/Src/bno055.c ****     {
8821:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8822:Core/Src/bno055.c ****     }
8823:Core/Src/bno055.c ****     else
8824:Core/Src/bno055.c ****     {
8825:Core/Src/bno055.c ****         /*condition check for page, reset system is
8826:Core/Src/bno055.c ****          * available in the page zero*/
8827:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
ARM GAS  /tmp/ccWoU29M.s 			page 541


 19192              		.loc 1 8827 9 is_stmt 1 view .LVU5239
 19193              		.loc 1 8827 21 is_stmt 0 view .LVU5240
 19194 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19195              		.loc 1 8827 12 view .LVU5241
 19196 0014 9BB9     		cbnz	r3, .L1362
 19197              	.LVL2350:
 19198              	.L1357:
8828:Core/Src/bno055.c ****         {
8829:Core/Src/bno055.c ****             /* Write the page zero*/
8830:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8831:Core/Src/bno055.c ****         }
8832:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 19199              		.loc 1 8832 53 discriminator 1 view .LVU5242
 19200 0016 104B     		ldr	r3, .L1363
 19201 0018 1B68     		ldr	r3, [r3]
 19202 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19203              		.loc 1 8832 41 discriminator 1 view .LVU5243
 19204 001c C3B9     		cbnz	r3, .L1360
 19205              	.L1358:
8833:Core/Src/bno055.c ****         {
8834:Core/Src/bno055.c ****             /* Read the value of reset system */
8835:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19206              		.loc 1 8835 13 is_stmt 1 view .LVU5244
 19207              		.loc 1 8835 32 is_stmt 0 view .LVU5245
 19208 001e 0E4B     		ldr	r3, .L1363
 19209 0020 1868     		ldr	r0, [r3]
 19210 0022 0569     		ldr	r5, [r0, #16]
 19211              		.loc 1 8835 24 view .LVU5246
 19212 0024 0123     		movs	r3, #1
 19213 0026 0DF10702 		add	r2, sp, #7
 19214 002a 3F21     		movs	r1, #63
 19215 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19216 002e A847     		blx	r5
 19217              	.LVL2351:
8836:Core/Src/bno055.c ****                                                       BNO055_SYS_RST_REG,
8837:Core/Src/bno055.c ****                                                       &data_u8r,
8838:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8839:Core/Src/bno055.c ****             *sys_rst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_RST);
 19218              		.loc 1 8839 13 is_stmt 1 view .LVU5247
 19219              		.loc 1 8839 27 is_stmt 0 view .LVU5248
 19220 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19221 0034 C3F34013 		ubfx	r3, r3, #5, #1
 19222              		.loc 1 8839 25 view .LVU5249
 19223 0038 2370     		strb	r3, [r4]
 19224              	.LVL2352:
 19225              	.L1356:
8840:Core/Src/bno055.c ****         }
8841:Core/Src/bno055.c ****         else
8842:Core/Src/bno055.c ****         {
8843:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8844:Core/Src/bno055.c ****         }
8845:Core/Src/bno055.c ****     }
8846:Core/Src/bno055.c **** 
8847:Core/Src/bno055.c ****     return com_rslt;
8848:Core/Src/bno055.c **** }
 19226              		.loc 1 8848 1 view .LVU5250
 19227 003a 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccWoU29M.s 			page 542


 19228              	.LCFI607:
 19229              		.cfi_remember_state
 19230              		.cfi_def_cfa_offset 12
 19231              		@ sp needed
 19232 003c 30BD     		pop	{r4, r5, pc}
 19233              	.LVL2353:
 19234              	.L1362:
 19235              	.LCFI608:
 19236              		.cfi_restore_state
8830:Core/Src/bno055.c ****         }
 19237              		.loc 1 8830 13 is_stmt 1 view .LVU5251
8830:Core/Src/bno055.c ****         }
 19238              		.loc 1 8830 23 is_stmt 0 view .LVU5252
 19239 003e 0020     		movs	r0, #0
 19240              	.LVL2354:
8830:Core/Src/bno055.c ****         }
 19241              		.loc 1 8830 23 view .LVU5253
 19242 0040 FFF7FEFF 		bl	bno055_write_page_id
 19243              	.LVL2355:
8832:Core/Src/bno055.c ****         {
 19244              		.loc 1 8832 9 is_stmt 1 view .LVU5254
8832:Core/Src/bno055.c ****         {
 19245              		.loc 1 8832 12 is_stmt 0 view .LVU5255
 19246 0044 0028     		cmp	r0, #0
 19247 0046 EAD0     		beq	.L1358
 19248 0048 E5E7     		b	.L1357
 19249              	.LVL2356:
 19250              	.L1359:
8821:Core/Src/bno055.c ****     }
 19251              		.loc 1 8821 16 view .LVU5256
 19252 004a 6FF07E00 		mvn	r0, #126
 19253              	.LVL2357:
8821:Core/Src/bno055.c ****     }
 19254              		.loc 1 8821 16 view .LVU5257
 19255 004e F4E7     		b	.L1356
 19256              	.LVL2358:
 19257              	.L1360:
8843:Core/Src/bno055.c ****         }
 19258              		.loc 1 8843 22 view .LVU5258
 19259 0050 4FF0FF30 		mov	r0, #-1
 19260 0054 F1E7     		b	.L1356
 19261              	.L1364:
 19262 0056 00BF     		.align	2
 19263              	.L1363:
 19264 0058 00000000 		.word	.LANCHOR0
 19265              		.cfi_endproc
 19266              	.LFE153:
 19268              		.section	.text.bno055_set_sys_rst,"ax",%progbits
 19269              		.align	1
 19270              		.global	bno055_set_sys_rst
 19271              		.syntax unified
 19272              		.thumb
 19273              		.thumb_func
 19274              		.fpu fpv4-sp-d16
 19276              	bno055_set_sys_rst:
 19277              	.LVL2359:
 19278              	.LFB154:
ARM GAS  /tmp/ccWoU29M.s 			page 543


8849:Core/Src/bno055.c **** 
8850:Core/Src/bno055.c **** /*!
8851:Core/Src/bno055.c ****  *  @brief This API used to write the reset system
8852:Core/Src/bno055.c ****  *  from register from 0x3F bit 5
8853:Core/Src/bno055.c ****  *
8854:Core/Src/bno055.c ****  *  @param sys_rst_u8 : The value of reset system
8855:Core/Src/bno055.c ****  *
8856:Core/Src/bno055.c ****  *   sys_rst_u8   | result
8857:Core/Src/bno055.c ****  *   -------------- |----------
8858:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8859:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8860:Core/Src/bno055.c ****  *
8861:Core/Src/bno055.c ****  *  @return results of bus communication function
8862:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8863:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8864:Core/Src/bno055.c ****  *
8865:Core/Src/bno055.c ****  *  @note It resets the whole system
8866:Core/Src/bno055.c ****  */
8867:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_sys_rst(u8 sys_rst_u8)
8868:Core/Src/bno055.c **** {
 19279              		.loc 1 8868 1 is_stmt 1 view -0
 19280              		.cfi_startproc
 19281              		@ args = 0, pretend = 0, frame = 8
 19282              		@ frame_needed = 0, uses_anonymous_args = 0
 19283              		.loc 1 8868 1 is_stmt 0 view .LVU5260
 19284 0000 30B5     		push	{r4, r5, lr}
 19285              	.LCFI609:
 19286              		.cfi_def_cfa_offset 12
 19287              		.cfi_offset 4, -12
 19288              		.cfi_offset 5, -8
 19289              		.cfi_offset 14, -4
 19290 0002 83B0     		sub	sp, sp, #12
 19291              	.LCFI610:
 19292              		.cfi_def_cfa_offset 24
8869:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19293              		.loc 1 8869 5 is_stmt 1 view .LVU5261
 19294              	.LVL2360:
8870:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19295              		.loc 1 8870 5 view .LVU5262
 19296              		.loc 1 8870 8 is_stmt 0 view .LVU5263
 19297 0004 0023     		movs	r3, #0
 19298 0006 8DF80730 		strb	r3, [sp, #7]
8871:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19299              		.loc 1 8871 5 is_stmt 1 view .LVU5264
 19300              	.LVL2361:
8872:Core/Src/bno055.c **** 
8873:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8874:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19301              		.loc 1 8874 5 view .LVU5265
 19302              		.loc 1 8874 18 is_stmt 0 view .LVU5266
 19303 000a 1B4B     		ldr	r3, .L1373
 19304 000c 1B68     		ldr	r3, [r3]
 19305              		.loc 1 8874 8 view .LVU5267
 19306 000e 63B3     		cbz	r3, .L1369
 19307 0010 0446     		mov	r4, r0
8875:Core/Src/bno055.c ****     {
8876:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
ARM GAS  /tmp/ccWoU29M.s 			page 544


8877:Core/Src/bno055.c ****     }
8878:Core/Src/bno055.c ****     else
8879:Core/Src/bno055.c ****     {
8880:Core/Src/bno055.c ****         /*condition check for page, reset system is
8881:Core/Src/bno055.c ****          * available in the page zero*/
8882:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 19308              		.loc 1 8882 9 is_stmt 1 view .LVU5268
 19309              		.loc 1 8882 21 is_stmt 0 view .LVU5269
 19310 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19311              		.loc 1 8882 12 view .LVU5270
 19312 0014 1BBB     		cbnz	r3, .L1372
 19313              	.LVL2362:
 19314              	.L1367:
8883:Core/Src/bno055.c ****         {
8884:Core/Src/bno055.c ****             /* Write the page zero*/
8885:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8886:Core/Src/bno055.c ****         }
8887:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 19315              		.loc 1 8887 53 discriminator 1 view .LVU5271
 19316 0016 184B     		ldr	r3, .L1373
 19317 0018 1B68     		ldr	r3, [r3]
 19318 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19319              		.loc 1 8887 41 discriminator 1 view .LVU5272
 19320 001c 43BB     		cbnz	r3, .L1370
 19321              	.L1368:
8888:Core/Src/bno055.c ****         {
8889:Core/Src/bno055.c ****             /* Write the value of reset system */
8890:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19322              		.loc 1 8890 13 is_stmt 1 view .LVU5273
 19323              		.loc 1 8890 32 is_stmt 0 view .LVU5274
 19324 001e 164B     		ldr	r3, .L1373
 19325 0020 1868     		ldr	r0, [r3]
 19326 0022 0569     		ldr	r5, [r0, #16]
 19327              		.loc 1 8890 24 view .LVU5275
 19328 0024 0123     		movs	r3, #1
 19329 0026 0DF10702 		add	r2, sp, #7
 19330 002a 3F21     		movs	r1, #63
 19331 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19332 002e A847     		blx	r5
 19333              	.LVL2363:
8891:Core/Src/bno055.c ****                                                       BNO055_SYS_RST_REG,
8892:Core/Src/bno055.c ****                                                       &data_u8r,
8893:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8894:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 19334              		.loc 1 8894 13 is_stmt 1 view .LVU5276
 19335              		.loc 1 8894 16 is_stmt 0 view .LVU5277
 19336 0030 98B9     		cbnz	r0, .L1366
8895:Core/Src/bno055.c ****             {
8896:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_SYS_RST, sys_rst_u8);
 19337              		.loc 1 8896 17 is_stmt 1 view .LVU5278
 19338              		.loc 1 8896 28 is_stmt 0 view .LVU5279
 19339 0032 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19340 0036 23F02003 		bic	r3, r3, #32
 19341 003a 5BB2     		sxtb	r3, r3
 19342 003c 6401     		lsls	r4, r4, #5
 19343 003e 04F02004 		and	r4, r4, #32
 19344 0042 1C43     		orrs	r4, r4, r3
ARM GAS  /tmp/ccWoU29M.s 			page 545


 19345              		.loc 1 8896 26 view .LVU5280
 19346 0044 8DF80740 		strb	r4, [sp, #7]
8897:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 19347              		.loc 1 8897 17 is_stmt 1 view .LVU5281
 19348              		.loc 1 8897 36 is_stmt 0 view .LVU5282
 19349 0048 0B4B     		ldr	r3, .L1373
 19350 004a 1868     		ldr	r0, [r3]
 19351              	.LVL2364:
 19352              		.loc 1 8897 36 view .LVU5283
 19353 004c C468     		ldr	r4, [r0, #12]
 19354              		.loc 1 8897 28 view .LVU5284
 19355 004e 0123     		movs	r3, #1
 19356 0050 0DF10702 		add	r2, sp, #7
 19357 0054 3F21     		movs	r1, #63
 19358 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19359 0058 A047     		blx	r4
 19360              	.LVL2365:
 19361              	.L1366:
8898:Core/Src/bno055.c ****                                                            BNO055_SYS_RST_REG,
8899:Core/Src/bno055.c ****                                                            &data_u8r,
8900:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
8901:Core/Src/bno055.c ****             }
8902:Core/Src/bno055.c ****         }
8903:Core/Src/bno055.c ****         else
8904:Core/Src/bno055.c ****         {
8905:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8906:Core/Src/bno055.c ****         }
8907:Core/Src/bno055.c ****     }
8908:Core/Src/bno055.c **** 
8909:Core/Src/bno055.c ****     return com_rslt;
8910:Core/Src/bno055.c **** }
 19362              		.loc 1 8910 1 view .LVU5285
 19363 005a 03B0     		add	sp, sp, #12
 19364              	.LCFI611:
 19365              		.cfi_remember_state
 19366              		.cfi_def_cfa_offset 12
 19367              		@ sp needed
 19368 005c 30BD     		pop	{r4, r5, pc}
 19369              	.LVL2366:
 19370              	.L1372:
 19371              	.LCFI612:
 19372              		.cfi_restore_state
8885:Core/Src/bno055.c ****         }
 19373              		.loc 1 8885 13 is_stmt 1 view .LVU5286
8885:Core/Src/bno055.c ****         }
 19374              		.loc 1 8885 23 is_stmt 0 view .LVU5287
 19375 005e 0020     		movs	r0, #0
 19376              	.LVL2367:
8885:Core/Src/bno055.c ****         }
 19377              		.loc 1 8885 23 view .LVU5288
 19378 0060 FFF7FEFF 		bl	bno055_write_page_id
 19379              	.LVL2368:
8887:Core/Src/bno055.c ****         {
 19380              		.loc 1 8887 9 is_stmt 1 view .LVU5289
8887:Core/Src/bno055.c ****         {
 19381              		.loc 1 8887 12 is_stmt 0 view .LVU5290
 19382 0064 0028     		cmp	r0, #0
ARM GAS  /tmp/ccWoU29M.s 			page 546


 19383 0066 DAD0     		beq	.L1368
 19384 0068 D5E7     		b	.L1367
 19385              	.LVL2369:
 19386              	.L1369:
8876:Core/Src/bno055.c ****     }
 19387              		.loc 1 8876 16 view .LVU5291
 19388 006a 6FF07E00 		mvn	r0, #126
 19389              	.LVL2370:
8876:Core/Src/bno055.c ****     }
 19390              		.loc 1 8876 16 view .LVU5292
 19391 006e F4E7     		b	.L1366
 19392              	.LVL2371:
 19393              	.L1370:
8905:Core/Src/bno055.c ****         }
 19394              		.loc 1 8905 22 view .LVU5293
 19395 0070 4FF0FF30 		mov	r0, #-1
 19396 0074 F1E7     		b	.L1366
 19397              	.L1374:
 19398 0076 00BF     		.align	2
 19399              	.L1373:
 19400 0078 00000000 		.word	.LANCHOR0
 19401              		.cfi_endproc
 19402              	.LFE154:
 19404              		.section	.text.bno055_get_selftest,"ax",%progbits
 19405              		.align	1
 19406              		.global	bno055_get_selftest
 19407              		.syntax unified
 19408              		.thumb
 19409              		.thumb_func
 19410              		.fpu fpv4-sp-d16
 19412              	bno055_get_selftest:
 19413              	.LVL2372:
 19414              	.LFB155:
8911:Core/Src/bno055.c **** 
8912:Core/Src/bno055.c **** /*!
8913:Core/Src/bno055.c ****  *  @brief This API used to read the self test
8914:Core/Src/bno055.c ****  *  from register from 0x3F bit 0
8915:Core/Src/bno055.c ****  *
8916:Core/Src/bno055.c ****  *  @param selftest_u8 : The value of self test
8917:Core/Src/bno055.c ****  *
8918:Core/Src/bno055.c ****  *   selftest_u8  | result
8919:Core/Src/bno055.c ****  *   -------------- |----------
8920:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8921:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8922:Core/Src/bno055.c ****  *
8923:Core/Src/bno055.c ****  *  @return results of bus communication function
8924:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8925:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8926:Core/Src/bno055.c ****  *
8927:Core/Src/bno055.c ****  *  @note It triggers the self test
8928:Core/Src/bno055.c ****  */
8929:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest(u8 *selftest_u8)
8930:Core/Src/bno055.c **** {
 19415              		.loc 1 8930 1 is_stmt 1 view -0
 19416              		.cfi_startproc
 19417              		@ args = 0, pretend = 0, frame = 8
 19418              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccWoU29M.s 			page 547


 19419              		.loc 1 8930 1 is_stmt 0 view .LVU5295
 19420 0000 30B5     		push	{r4, r5, lr}
 19421              	.LCFI613:
 19422              		.cfi_def_cfa_offset 12
 19423              		.cfi_offset 4, -12
 19424              		.cfi_offset 5, -8
 19425              		.cfi_offset 14, -4
 19426 0002 83B0     		sub	sp, sp, #12
 19427              	.LCFI614:
 19428              		.cfi_def_cfa_offset 24
8931:Core/Src/bno055.c ****     /* Variable used to return value of
8932:Core/Src/bno055.c ****      * communication routine*/
8933:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19429              		.loc 1 8933 5 is_stmt 1 view .LVU5296
 19430              	.LVL2373:
8934:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19431              		.loc 1 8934 5 view .LVU5297
 19432              		.loc 1 8934 8 is_stmt 0 view .LVU5298
 19433 0004 0023     		movs	r3, #0
 19434 0006 8DF80730 		strb	r3, [sp, #7]
8935:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19435              		.loc 1 8935 5 is_stmt 1 view .LVU5299
 19436              	.LVL2374:
8936:Core/Src/bno055.c **** 
8937:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8938:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19437              		.loc 1 8938 5 view .LVU5300
 19438              		.loc 1 8938 18 is_stmt 0 view .LVU5301
 19439 000a 134B     		ldr	r3, .L1383
 19440 000c 1B68     		ldr	r3, [r3]
 19441              		.loc 1 8938 8 view .LVU5302
 19442 000e E3B1     		cbz	r3, .L1379
 19443 0010 0446     		mov	r4, r0
8939:Core/Src/bno055.c ****     {
8940:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8941:Core/Src/bno055.c ****     }
8942:Core/Src/bno055.c ****     else
8943:Core/Src/bno055.c ****     {
8944:Core/Src/bno055.c ****         /*condition check for page, self test is
8945:Core/Src/bno055.c ****          * available in the page zero*/
8946:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 19444              		.loc 1 8946 9 is_stmt 1 view .LVU5303
 19445              		.loc 1 8946 21 is_stmt 0 view .LVU5304
 19446 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19447              		.loc 1 8946 12 view .LVU5305
 19448 0014 9BB9     		cbnz	r3, .L1382
 19449              	.LVL2375:
 19450              	.L1377:
8947:Core/Src/bno055.c ****         {
8948:Core/Src/bno055.c ****             /* Write the page zero*/
8949:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8950:Core/Src/bno055.c ****         }
8951:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 19451              		.loc 1 8951 53 discriminator 1 view .LVU5306
 19452 0016 104B     		ldr	r3, .L1383
 19453 0018 1B68     		ldr	r3, [r3]
 19454 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 548


 19455              		.loc 1 8951 41 discriminator 1 view .LVU5307
 19456 001c C3B9     		cbnz	r3, .L1380
 19457              	.L1378:
8952:Core/Src/bno055.c ****         {
8953:Core/Src/bno055.c ****             /* Read the value of self test */
8954:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19458              		.loc 1 8954 13 is_stmt 1 view .LVU5308
 19459              		.loc 1 8954 32 is_stmt 0 view .LVU5309
 19460 001e 0E4B     		ldr	r3, .L1383
 19461 0020 1868     		ldr	r0, [r3]
 19462 0022 0569     		ldr	r5, [r0, #16]
 19463              		.loc 1 8954 24 view .LVU5310
 19464 0024 0123     		movs	r3, #1
 19465 0026 0DF10702 		add	r2, sp, #7
 19466 002a 3F21     		movs	r1, #63
 19467 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19468 002e A847     		blx	r5
 19469              	.LVL2376:
8955:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_REG,
8956:Core/Src/bno055.c ****                                                       &data_u8r,
8957:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8958:Core/Src/bno055.c ****             *selftest_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST);
 19470              		.loc 1 8958 13 is_stmt 1 view .LVU5311
 19471              		.loc 1 8958 28 is_stmt 0 view .LVU5312
 19472 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19473 0034 03F00103 		and	r3, r3, #1
 19474              		.loc 1 8958 26 view .LVU5313
 19475 0038 2370     		strb	r3, [r4]
 19476              	.LVL2377:
 19477              	.L1376:
8959:Core/Src/bno055.c ****         }
8960:Core/Src/bno055.c ****         else
8961:Core/Src/bno055.c ****         {
8962:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8963:Core/Src/bno055.c ****         }
8964:Core/Src/bno055.c ****     }
8965:Core/Src/bno055.c **** 
8966:Core/Src/bno055.c ****     return com_rslt;
8967:Core/Src/bno055.c **** }
 19478              		.loc 1 8967 1 view .LVU5314
 19479 003a 03B0     		add	sp, sp, #12
 19480              	.LCFI615:
 19481              		.cfi_remember_state
 19482              		.cfi_def_cfa_offset 12
 19483              		@ sp needed
 19484 003c 30BD     		pop	{r4, r5, pc}
 19485              	.LVL2378:
 19486              	.L1382:
 19487              	.LCFI616:
 19488              		.cfi_restore_state
8949:Core/Src/bno055.c ****         }
 19489              		.loc 1 8949 13 is_stmt 1 view .LVU5315
8949:Core/Src/bno055.c ****         }
 19490              		.loc 1 8949 23 is_stmt 0 view .LVU5316
 19491 003e 0020     		movs	r0, #0
 19492              	.LVL2379:
8949:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 549


 19493              		.loc 1 8949 23 view .LVU5317
 19494 0040 FFF7FEFF 		bl	bno055_write_page_id
 19495              	.LVL2380:
8951:Core/Src/bno055.c ****         {
 19496              		.loc 1 8951 9 is_stmt 1 view .LVU5318
8951:Core/Src/bno055.c ****         {
 19497              		.loc 1 8951 12 is_stmt 0 view .LVU5319
 19498 0044 0028     		cmp	r0, #0
 19499 0046 EAD0     		beq	.L1378
 19500 0048 E5E7     		b	.L1377
 19501              	.LVL2381:
 19502              	.L1379:
8940:Core/Src/bno055.c ****     }
 19503              		.loc 1 8940 16 view .LVU5320
 19504 004a 6FF07E00 		mvn	r0, #126
 19505              	.LVL2382:
8940:Core/Src/bno055.c ****     }
 19506              		.loc 1 8940 16 view .LVU5321
 19507 004e F4E7     		b	.L1376
 19508              	.LVL2383:
 19509              	.L1380:
8962:Core/Src/bno055.c ****         }
 19510              		.loc 1 8962 22 view .LVU5322
 19511 0050 4FF0FF30 		mov	r0, #-1
 19512 0054 F1E7     		b	.L1376
 19513              	.L1384:
 19514 0056 00BF     		.align	2
 19515              	.L1383:
 19516 0058 00000000 		.word	.LANCHOR0
 19517              		.cfi_endproc
 19518              	.LFE155:
 19520              		.section	.text.bno055_set_selftest,"ax",%progbits
 19521              		.align	1
 19522              		.global	bno055_set_selftest
 19523              		.syntax unified
 19524              		.thumb
 19525              		.thumb_func
 19526              		.fpu fpv4-sp-d16
 19528              	bno055_set_selftest:
 19529              	.LVL2384:
 19530              	.LFB156:
8968:Core/Src/bno055.c **** 
8969:Core/Src/bno055.c **** /*!
8970:Core/Src/bno055.c ****  *  @brief This API used to write the self test
8971:Core/Src/bno055.c ****  *  from register from 0x3F bit 0
8972:Core/Src/bno055.c ****  *
8973:Core/Src/bno055.c ****  *  @param selftest_u8 : The value of self test
8974:Core/Src/bno055.c ****  *
8975:Core/Src/bno055.c ****  *   selftest_u8  | result
8976:Core/Src/bno055.c ****  *   -------------- |----------
8977:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8978:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8979:Core/Src/bno055.c ****  *
8980:Core/Src/bno055.c ****  *  @return results of bus communication function
8981:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8982:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8983:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 550


8984:Core/Src/bno055.c ****  *  @note It triggers the self test
8985:Core/Src/bno055.c ****  *
8986:Core/Src/bno055.c ****  *
8987:Core/Src/bno055.c ****  */
8988:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_selftest(u8 selftest_u8)
8989:Core/Src/bno055.c **** {
 19531              		.loc 1 8989 1 is_stmt 1 view -0
 19532              		.cfi_startproc
 19533              		@ args = 0, pretend = 0, frame = 8
 19534              		@ frame_needed = 0, uses_anonymous_args = 0
 19535              		.loc 1 8989 1 is_stmt 0 view .LVU5324
 19536 0000 30B5     		push	{r4, r5, lr}
 19537              	.LCFI617:
 19538              		.cfi_def_cfa_offset 12
 19539              		.cfi_offset 4, -12
 19540              		.cfi_offset 5, -8
 19541              		.cfi_offset 14, -4
 19542 0002 83B0     		sub	sp, sp, #12
 19543              	.LCFI618:
 19544              		.cfi_def_cfa_offset 24
8990:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19545              		.loc 1 8990 5 is_stmt 1 view .LVU5325
 19546              	.LVL2385:
8991:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19547              		.loc 1 8991 5 view .LVU5326
 19548              		.loc 1 8991 8 is_stmt 0 view .LVU5327
 19549 0004 0023     		movs	r3, #0
 19550 0006 8DF80730 		strb	r3, [sp, #7]
8992:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 19551              		.loc 1 8992 5 is_stmt 1 view .LVU5328
 19552              		.loc 1 8992 8 is_stmt 0 view .LVU5329
 19553 000a 8DF80630 		strb	r3, [sp, #6]
8993:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19554              		.loc 1 8993 5 is_stmt 1 view .LVU5330
 19555              	.LVL2386:
8994:Core/Src/bno055.c **** 
8995:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8996:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19556              		.loc 1 8996 5 view .LVU5331
 19557              		.loc 1 8996 18 is_stmt 0 view .LVU5332
 19558 000e 254B     		ldr	r3, .L1395
 19559 0010 1B68     		ldr	r3, [r3]
 19560              		.loc 1 8996 8 view .LVU5333
 19561 0012 002B     		cmp	r3, #0
 19562 0014 43D0     		beq	.L1389
 19563 0016 0546     		mov	r5, r0
8997:Core/Src/bno055.c ****     {
8998:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8999:Core/Src/bno055.c ****     }
9000:Core/Src/bno055.c ****     else
9001:Core/Src/bno055.c ****     {
9002:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9003:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9004:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9005:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 19564              		.loc 1 9005 9 is_stmt 1 view .LVU5334
 19565              		.loc 1 9005 19 is_stmt 0 view .LVU5335
ARM GAS  /tmp/ccWoU29M.s 			page 551


 19566 0018 0DF10600 		add	r0, sp, #6
 19567              	.LVL2387:
 19568              		.loc 1 9005 19 view .LVU5336
 19569 001c FFF7FEFF 		bl	bno055_get_operation_mode
 19570              	.LVL2388:
9006:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 19571              		.loc 1 9006 9 is_stmt 1 view .LVU5337
 19572              		.loc 1 9006 12 is_stmt 0 view .LVU5338
 19573 0020 0446     		mov	r4, r0
 19574 0022 58BB     		cbnz	r0, .L1390
9007:Core/Src/bno055.c ****         {
9008:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19575              		.loc 1 9008 13 is_stmt 1 view .LVU5339
 19576              		.loc 1 9008 32 is_stmt 0 view .LVU5340
 19577 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 19578              		.loc 1 9008 16 view .LVU5341
 19579 0028 13BB     		cbnz	r3, .L1393
 19580              	.LVL2389:
 19581              	.L1388:
9009:Core/Src/bno055.c ****             {
9010:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9011:Core/Src/bno055.c ****             }
9012:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 19582              		.loc 1 9012 13 is_stmt 1 view .LVU5342
 19583              		.loc 1 9012 16 is_stmt 0 view .LVU5343
 19584 002a 7CBB     		cbnz	r4, .L1391
9013:Core/Src/bno055.c ****             {
9014:Core/Src/bno055.c ****                 /* Write the value of self test */
9015:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19585              		.loc 1 9015 17 is_stmt 1 view .LVU5344
 19586              		.loc 1 9015 36 is_stmt 0 view .LVU5345
 19587 002c 1D4B     		ldr	r3, .L1395
 19588 002e 1868     		ldr	r0, [r3]
 19589 0030 0469     		ldr	r4, [r0, #16]
 19590              	.LVL2390:
 19591              		.loc 1 9015 28 view .LVU5346
 19592 0032 0123     		movs	r3, #1
 19593 0034 0DF10702 		add	r2, sp, #7
 19594 0038 3F21     		movs	r1, #63
 19595 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19596 003c A047     		blx	r4
 19597              	.LVL2391:
9016:Core/Src/bno055.c ****                                                           BNO055_SELFTEST_REG,
9017:Core/Src/bno055.c ****                                                           &data_u8r,
9018:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9019:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 19598              		.loc 1 9019 17 is_stmt 1 view .LVU5347
 19599              		.loc 1 9019 20 is_stmt 0 view .LVU5348
 19600 003e 0446     		mov	r4, r0
 19601 0040 F0B9     		cbnz	r0, .L1387
9020:Core/Src/bno055.c ****                 {
9021:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_SELFTEST, selftest_u8);
 19602              		.loc 1 9021 21 is_stmt 1 view .LVU5349
 19603              		.loc 1 9021 32 is_stmt 0 view .LVU5350
 19604 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 19605              	.LVL2392:
 19606              		.loc 1 9021 32 view .LVU5351
ARM GAS  /tmp/ccWoU29M.s 			page 552


 19607 0046 20F00100 		bic	r0, r0, #1
 19608 004a 43B2     		sxtb	r3, r0
 19609 004c 05F00100 		and	r0, r5, #1
 19610 0050 1843     		orrs	r0, r0, r3
 19611              		.loc 1 9021 30 view .LVU5352
 19612 0052 8DF80700 		strb	r0, [sp, #7]
9022:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 19613              		.loc 1 9022 21 is_stmt 1 view .LVU5353
 19614              		.loc 1 9022 41 is_stmt 0 view .LVU5354
 19615 0056 134B     		ldr	r3, .L1395
 19616 0058 1868     		ldr	r0, [r3]
 19617 005a C568     		ldr	r5, [r0, #12]
 19618              		.loc 1 9022 33 view .LVU5355
 19619 005c 0123     		movs	r3, #1
 19620 005e 0DF10702 		add	r2, sp, #7
 19621 0062 3F21     		movs	r1, #63
 19622 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19623 0066 A847     		blx	r5
 19624              	.LVL2393:
 19625              		.loc 1 9022 30 view .LVU5356
 19626 0068 54FA80F4 		uxtab	r4, r4, r0
 19627 006c 64B2     		sxtb	r4, r4
 19628              	.LVL2394:
 19629              		.loc 1 9022 30 view .LVU5357
 19630 006e 07E0     		b	.L1387
 19631              	.LVL2395:
 19632              	.L1393:
9010:Core/Src/bno055.c ****             }
 19633              		.loc 1 9010 17 is_stmt 1 view .LVU5358
9010:Core/Src/bno055.c ****             }
 19634              		.loc 1 9010 28 is_stmt 0 view .LVU5359
 19635 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 19636              	.LVL2396:
9010:Core/Src/bno055.c ****             }
 19637              		.loc 1 9010 25 view .LVU5360
 19638 0074 54FA80F4 		uxtab	r4, r4, r0
 19639 0078 64B2     		sxtb	r4, r4
 19640              	.LVL2397:
9010:Core/Src/bno055.c ****             }
 19641              		.loc 1 9010 25 view .LVU5361
 19642 007a D6E7     		b	.L1388
 19643              	.LVL2398:
 19644              	.L1390:
9023:Core/Src/bno055.c ****                                                                 BNO055_SELFTEST_REG,
9024:Core/Src/bno055.c ****                                                                 &data_u8r,
9025:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9026:Core/Src/bno055.c ****                 }
9027:Core/Src/bno055.c ****             }
9028:Core/Src/bno055.c ****             else
9029:Core/Src/bno055.c ****             {
9030:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9031:Core/Src/bno055.c ****             }
9032:Core/Src/bno055.c ****         }
9033:Core/Src/bno055.c ****         else
9034:Core/Src/bno055.c ****         {
9035:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 19645              		.loc 1 9035 22 view .LVU5362
ARM GAS  /tmp/ccWoU29M.s 			page 553


 19646 007c 4FF0FF34 		mov	r4, #-1
 19647              	.LVL2399:
 19648              	.L1387:
9036:Core/Src/bno055.c ****         }
9037:Core/Src/bno055.c ****     }
9038:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19649              		.loc 1 9038 5 is_stmt 1 view .LVU5363
 19650              		.loc 1 9038 24 is_stmt 0 view .LVU5364
 19651 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 19652              		.loc 1 9038 8 view .LVU5365
 19653 0084 28B9     		cbnz	r0, .L1394
 19654              	.LVL2400:
 19655              	.L1386:
9039:Core/Src/bno055.c ****     {
9040:Core/Src/bno055.c ****         /* set the operation mode
9041:Core/Src/bno055.c ****          * of previous operation mode*/
9042:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9043:Core/Src/bno055.c ****     }
9044:Core/Src/bno055.c **** 
9045:Core/Src/bno055.c ****     return com_rslt;
9046:Core/Src/bno055.c **** }
 19656              		.loc 1 9046 1 view .LVU5366
 19657 0086 2046     		mov	r0, r4
 19658 0088 03B0     		add	sp, sp, #12
 19659              	.LCFI619:
 19660              		.cfi_remember_state
 19661              		.cfi_def_cfa_offset 12
 19662              		@ sp needed
 19663 008a 30BD     		pop	{r4, r5, pc}
 19664              	.LVL2401:
 19665              	.L1391:
 19666              	.LCFI620:
 19667              		.cfi_restore_state
9030:Core/Src/bno055.c ****             }
 19668              		.loc 1 9030 26 view .LVU5367
 19669 008c 4FF0FF34 		mov	r4, #-1
 19670              	.LVL2402:
9030:Core/Src/bno055.c ****             }
 19671              		.loc 1 9030 26 view .LVU5368
 19672 0090 F6E7     		b	.L1387
 19673              	.LVL2403:
 19674              	.L1394:
9042:Core/Src/bno055.c ****     }
 19675              		.loc 1 9042 9 is_stmt 1 view .LVU5369
9042:Core/Src/bno055.c ****     }
 19676              		.loc 1 9042 21 is_stmt 0 view .LVU5370
 19677 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 19678              	.LVL2404:
9042:Core/Src/bno055.c ****     }
 19679              		.loc 1 9042 18 view .LVU5371
 19680 0096 54FA80F4 		uxtab	r4, r4, r0
 19681              	.LVL2405:
9042:Core/Src/bno055.c ****     }
 19682              		.loc 1 9042 18 view .LVU5372
 19683 009a 64B2     		sxtb	r4, r4
 19684              	.LVL2406:
9042:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 554


 19685              		.loc 1 9042 18 view .LVU5373
 19686 009c F3E7     		b	.L1386
 19687              	.LVL2407:
 19688              	.L1389:
8998:Core/Src/bno055.c ****     }
 19689              		.loc 1 8998 16 view .LVU5374
 19690 009e 6FF07E04 		mvn	r4, #126
 19691 00a2 F0E7     		b	.L1386
 19692              	.L1396:
 19693              		.align	2
 19694              	.L1395:
 19695 00a4 00000000 		.word	.LANCHOR0
 19696              		.cfi_endproc
 19697              	.LFE156:
 19699              		.section	.text.bno055_get_temp_source,"ax",%progbits
 19700              		.align	1
 19701              		.global	bno055_get_temp_source
 19702              		.syntax unified
 19703              		.thumb
 19704              		.thumb_func
 19705              		.fpu fpv4-sp-d16
 19707              	bno055_get_temp_source:
 19708              	.LVL2408:
 19709              	.LFB157:
9047:Core/Src/bno055.c **** 
9048:Core/Src/bno055.c **** /*!
9049:Core/Src/bno055.c ****  *  @brief This API used to read the temperature source
9050:Core/Src/bno055.c ****  *  from register from 0x40 bit 0 and 1
9051:Core/Src/bno055.c ****  *
9052:Core/Src/bno055.c ****  *  @param temp_source_u8 : The value of selected temperature source
9053:Core/Src/bno055.c ****  *
9054:Core/Src/bno055.c ****  *     temp_source_u8 | result
9055:Core/Src/bno055.c ****  *    ----------------  |---------------
9056:Core/Src/bno055.c ****  *      0x00            | BNO055_ACCEL_TEMP_EN
9057:Core/Src/bno055.c ****  *      0X01            | BNO055_GYRO_TEMP_EN
9058:Core/Src/bno055.c ****  *      0X03            | BNO055_MCU_TEMP_EN
9059:Core/Src/bno055.c ****  *
9060:Core/Src/bno055.c ****  *  @return results of bus communication function
9061:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9062:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9063:Core/Src/bno055.c ****  *
9064:Core/Src/bno055.c ****  */
9065:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_temp_source(u8 *temp_source_u8)
9066:Core/Src/bno055.c **** {
 19710              		.loc 1 9066 1 is_stmt 1 view -0
 19711              		.cfi_startproc
 19712              		@ args = 0, pretend = 0, frame = 8
 19713              		@ frame_needed = 0, uses_anonymous_args = 0
 19714              		.loc 1 9066 1 is_stmt 0 view .LVU5376
 19715 0000 30B5     		push	{r4, r5, lr}
 19716              	.LCFI621:
 19717              		.cfi_def_cfa_offset 12
 19718              		.cfi_offset 4, -12
 19719              		.cfi_offset 5, -8
 19720              		.cfi_offset 14, -4
 19721 0002 83B0     		sub	sp, sp, #12
 19722              	.LCFI622:
ARM GAS  /tmp/ccWoU29M.s 			page 555


 19723              		.cfi_def_cfa_offset 24
9067:Core/Src/bno055.c ****     /* Variable used to return value of
9068:Core/Src/bno055.c ****      * communication routine*/
9069:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19724              		.loc 1 9069 5 is_stmt 1 view .LVU5377
 19725              	.LVL2409:
9070:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19726              		.loc 1 9070 5 view .LVU5378
 19727              		.loc 1 9070 8 is_stmt 0 view .LVU5379
 19728 0004 0023     		movs	r3, #0
 19729 0006 8DF80730 		strb	r3, [sp, #7]
9071:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19730              		.loc 1 9071 5 is_stmt 1 view .LVU5380
 19731              	.LVL2410:
9072:Core/Src/bno055.c **** 
9073:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9074:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19732              		.loc 1 9074 5 view .LVU5381
 19733              		.loc 1 9074 18 is_stmt 0 view .LVU5382
 19734 000a 134B     		ldr	r3, .L1405
 19735 000c 1B68     		ldr	r3, [r3]
 19736              		.loc 1 9074 8 view .LVU5383
 19737 000e E3B1     		cbz	r3, .L1401
 19738 0010 0446     		mov	r4, r0
9075:Core/Src/bno055.c ****     {
9076:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9077:Core/Src/bno055.c ****     }
9078:Core/Src/bno055.c ****     else
9079:Core/Src/bno055.c ****     {
9080:Core/Src/bno055.c ****         /*condition check for page, temperature source is
9081:Core/Src/bno055.c ****          * available in the page zero*/
9082:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 19739              		.loc 1 9082 9 is_stmt 1 view .LVU5384
 19740              		.loc 1 9082 21 is_stmt 0 view .LVU5385
 19741 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19742              		.loc 1 9082 12 view .LVU5386
 19743 0014 9BB9     		cbnz	r3, .L1404
 19744              	.LVL2411:
 19745              	.L1399:
9083:Core/Src/bno055.c ****         {
9084:Core/Src/bno055.c ****             /* Write the page zero*/
9085:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9086:Core/Src/bno055.c ****         }
9087:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 19746              		.loc 1 9087 53 discriminator 1 view .LVU5387
 19747 0016 104B     		ldr	r3, .L1405
 19748 0018 1B68     		ldr	r3, [r3]
 19749 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19750              		.loc 1 9087 41 discriminator 1 view .LVU5388
 19751 001c C3B9     		cbnz	r3, .L1402
 19752              	.L1400:
9088:Core/Src/bno055.c ****         {
9089:Core/Src/bno055.c ****             /* Read the value of temperature source */
9090:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19753              		.loc 1 9090 13 is_stmt 1 view .LVU5389
 19754              		.loc 1 9090 32 is_stmt 0 view .LVU5390
 19755 001e 0E4B     		ldr	r3, .L1405
ARM GAS  /tmp/ccWoU29M.s 			page 556


 19756 0020 1868     		ldr	r0, [r3]
 19757 0022 0569     		ldr	r5, [r0, #16]
 19758              		.loc 1 9090 24 view .LVU5391
 19759 0024 0123     		movs	r3, #1
 19760 0026 0DF10702 		add	r2, sp, #7
 19761 002a 4021     		movs	r1, #64
 19762 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19763 002e A847     		blx	r5
 19764              	.LVL2412:
9091:Core/Src/bno055.c ****                                                       BNO055_TEMP_SOURCE_REG,
9092:Core/Src/bno055.c ****                                                       &data_u8r,
9093:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
9094:Core/Src/bno055.c ****             *temp_source_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_TEMP_SOURCE);
 19765              		.loc 1 9094 13 is_stmt 1 view .LVU5392
 19766              		.loc 1 9094 31 is_stmt 0 view .LVU5393
 19767 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19768 0034 03F00303 		and	r3, r3, #3
 19769              		.loc 1 9094 29 view .LVU5394
 19770 0038 2370     		strb	r3, [r4]
 19771              	.LVL2413:
 19772              	.L1398:
9095:Core/Src/bno055.c ****         }
9096:Core/Src/bno055.c ****         else
9097:Core/Src/bno055.c ****         {
9098:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9099:Core/Src/bno055.c ****         }
9100:Core/Src/bno055.c ****     }
9101:Core/Src/bno055.c **** 
9102:Core/Src/bno055.c ****     return com_rslt;
9103:Core/Src/bno055.c **** }
 19773              		.loc 1 9103 1 view .LVU5395
 19774 003a 03B0     		add	sp, sp, #12
 19775              	.LCFI623:
 19776              		.cfi_remember_state
 19777              		.cfi_def_cfa_offset 12
 19778              		@ sp needed
 19779 003c 30BD     		pop	{r4, r5, pc}
 19780              	.LVL2414:
 19781              	.L1404:
 19782              	.LCFI624:
 19783              		.cfi_restore_state
9085:Core/Src/bno055.c ****         }
 19784              		.loc 1 9085 13 is_stmt 1 view .LVU5396
9085:Core/Src/bno055.c ****         }
 19785              		.loc 1 9085 23 is_stmt 0 view .LVU5397
 19786 003e 0020     		movs	r0, #0
 19787              	.LVL2415:
9085:Core/Src/bno055.c ****         }
 19788              		.loc 1 9085 23 view .LVU5398
 19789 0040 FFF7FEFF 		bl	bno055_write_page_id
 19790              	.LVL2416:
9087:Core/Src/bno055.c ****         {
 19791              		.loc 1 9087 9 is_stmt 1 view .LVU5399
9087:Core/Src/bno055.c ****         {
 19792              		.loc 1 9087 12 is_stmt 0 view .LVU5400
 19793 0044 0028     		cmp	r0, #0
 19794 0046 EAD0     		beq	.L1400
ARM GAS  /tmp/ccWoU29M.s 			page 557


 19795 0048 E5E7     		b	.L1399
 19796              	.LVL2417:
 19797              	.L1401:
9076:Core/Src/bno055.c ****     }
 19798              		.loc 1 9076 16 view .LVU5401
 19799 004a 6FF07E00 		mvn	r0, #126
 19800              	.LVL2418:
9076:Core/Src/bno055.c ****     }
 19801              		.loc 1 9076 16 view .LVU5402
 19802 004e F4E7     		b	.L1398
 19803              	.LVL2419:
 19804              	.L1402:
9098:Core/Src/bno055.c ****         }
 19805              		.loc 1 9098 22 view .LVU5403
 19806 0050 4FF0FF30 		mov	r0, #-1
 19807 0054 F1E7     		b	.L1398
 19808              	.L1406:
 19809 0056 00BF     		.align	2
 19810              	.L1405:
 19811 0058 00000000 		.word	.LANCHOR0
 19812              		.cfi_endproc
 19813              	.LFE157:
 19815              		.section	.text.bno055_set_temp_source,"ax",%progbits
 19816              		.align	1
 19817              		.global	bno055_set_temp_source
 19818              		.syntax unified
 19819              		.thumb
 19820              		.thumb_func
 19821              		.fpu fpv4-sp-d16
 19823              	bno055_set_temp_source:
 19824              	.LVL2420:
 19825              	.LFB158:
9104:Core/Src/bno055.c **** 
9105:Core/Src/bno055.c **** /*!
9106:Core/Src/bno055.c ****  *  @brief This API used to write the temperature source
9107:Core/Src/bno055.c ****  *  from register from 0x40 bit 0 and 1
9108:Core/Src/bno055.c ****  *
9109:Core/Src/bno055.c ****  *  @param temp_source_u8 : The value of selected temperature source
9110:Core/Src/bno055.c ****  *
9111:Core/Src/bno055.c ****  *     temp_source_u8 | result
9112:Core/Src/bno055.c ****  *    ----------------  |---------------
9113:Core/Src/bno055.c ****  *      0x00            | BNO055_ACCEL_TEMP_EN
9114:Core/Src/bno055.c ****  *      0X01            | BNO055_GYRO_TEMP_EN
9115:Core/Src/bno055.c ****  *      0X03            | BNO055_MCU_TEMP_EN
9116:Core/Src/bno055.c ****  *
9117:Core/Src/bno055.c ****  *  @return results of bus communication function
9118:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9119:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9120:Core/Src/bno055.c ****  *
9121:Core/Src/bno055.c ****  */
9122:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_temp_source(u8 temp_source_u8)
9123:Core/Src/bno055.c **** {
 19826              		.loc 1 9123 1 is_stmt 1 view -0
 19827              		.cfi_startproc
 19828              		@ args = 0, pretend = 0, frame = 8
 19829              		@ frame_needed = 0, uses_anonymous_args = 0
 19830              		.loc 1 9123 1 is_stmt 0 view .LVU5405
ARM GAS  /tmp/ccWoU29M.s 			page 558


 19831 0000 30B5     		push	{r4, r5, lr}
 19832              	.LCFI625:
 19833              		.cfi_def_cfa_offset 12
 19834              		.cfi_offset 4, -12
 19835              		.cfi_offset 5, -8
 19836              		.cfi_offset 14, -4
 19837 0002 83B0     		sub	sp, sp, #12
 19838              	.LCFI626:
 19839              		.cfi_def_cfa_offset 24
9124:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19840              		.loc 1 9124 5 is_stmt 1 view .LVU5406
 19841              	.LVL2421:
9125:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19842              		.loc 1 9125 5 view .LVU5407
 19843              		.loc 1 9125 8 is_stmt 0 view .LVU5408
 19844 0004 0023     		movs	r3, #0
 19845 0006 8DF80730 		strb	r3, [sp, #7]
9126:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 19846              		.loc 1 9126 5 is_stmt 1 view .LVU5409
 19847              		.loc 1 9126 8 is_stmt 0 view .LVU5410
 19848 000a 8DF80630 		strb	r3, [sp, #6]
9127:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19849              		.loc 1 9127 5 is_stmt 1 view .LVU5411
 19850              	.LVL2422:
9128:Core/Src/bno055.c **** 
9129:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9130:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19851              		.loc 1 9130 5 view .LVU5412
 19852              		.loc 1 9130 18 is_stmt 0 view .LVU5413
 19853 000e 254B     		ldr	r3, .L1417
 19854 0010 1B68     		ldr	r3, [r3]
 19855              		.loc 1 9130 8 view .LVU5414
 19856 0012 002B     		cmp	r3, #0
 19857 0014 43D0     		beq	.L1411
 19858 0016 0546     		mov	r5, r0
9131:Core/Src/bno055.c ****     {
9132:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9133:Core/Src/bno055.c ****     }
9134:Core/Src/bno055.c ****     else
9135:Core/Src/bno055.c ****     {
9136:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9137:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9138:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9139:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 19859              		.loc 1 9139 9 is_stmt 1 view .LVU5415
 19860              		.loc 1 9139 19 is_stmt 0 view .LVU5416
 19861 0018 0DF10600 		add	r0, sp, #6
 19862              	.LVL2423:
 19863              		.loc 1 9139 19 view .LVU5417
 19864 001c FFF7FEFF 		bl	bno055_get_operation_mode
 19865              	.LVL2424:
9140:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 19866              		.loc 1 9140 9 is_stmt 1 view .LVU5418
 19867              		.loc 1 9140 12 is_stmt 0 view .LVU5419
 19868 0020 0446     		mov	r4, r0
 19869 0022 58BB     		cbnz	r0, .L1412
9141:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 559


9142:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19870              		.loc 1 9142 13 is_stmt 1 view .LVU5420
 19871              		.loc 1 9142 32 is_stmt 0 view .LVU5421
 19872 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 19873              		.loc 1 9142 16 view .LVU5422
 19874 0028 13BB     		cbnz	r3, .L1415
 19875              	.LVL2425:
 19876              	.L1410:
9143:Core/Src/bno055.c ****             {
9144:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9145:Core/Src/bno055.c ****             }
9146:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 19877              		.loc 1 9146 13 is_stmt 1 view .LVU5423
 19878              		.loc 1 9146 16 is_stmt 0 view .LVU5424
 19879 002a 7CBB     		cbnz	r4, .L1413
9147:Core/Src/bno055.c ****             {
9148:Core/Src/bno055.c ****                 /* Write the value of temperature source*/
9149:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19880              		.loc 1 9149 17 is_stmt 1 view .LVU5425
 19881              		.loc 1 9149 36 is_stmt 0 view .LVU5426
 19882 002c 1D4B     		ldr	r3, .L1417
 19883 002e 1868     		ldr	r0, [r3]
 19884 0030 0469     		ldr	r4, [r0, #16]
 19885              	.LVL2426:
 19886              		.loc 1 9149 28 view .LVU5427
 19887 0032 0123     		movs	r3, #1
 19888 0034 0DF10702 		add	r2, sp, #7
 19889 0038 4021     		movs	r1, #64
 19890 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19891 003c A047     		blx	r4
 19892              	.LVL2427:
9150:Core/Src/bno055.c ****                                                           BNO055_TEMP_SOURCE_REG,
9151:Core/Src/bno055.c ****                                                           &data_u8r,
9152:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9153:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 19893              		.loc 1 9153 17 is_stmt 1 view .LVU5428
 19894              		.loc 1 9153 20 is_stmt 0 view .LVU5429
 19895 003e 0446     		mov	r4, r0
 19896 0040 F0B9     		cbnz	r0, .L1409
9154:Core/Src/bno055.c ****                 {
9155:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_TEMP_SOURCE, temp_source_u8);
 19897              		.loc 1 9155 21 is_stmt 1 view .LVU5430
 19898              		.loc 1 9155 32 is_stmt 0 view .LVU5431
 19899 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 19900              	.LVL2428:
 19901              		.loc 1 9155 32 view .LVU5432
 19902 0046 20F00300 		bic	r0, r0, #3
 19903 004a 43B2     		sxtb	r3, r0
 19904 004c 05F00300 		and	r0, r5, #3
 19905 0050 1843     		orrs	r0, r0, r3
 19906              		.loc 1 9155 30 view .LVU5433
 19907 0052 8DF80700 		strb	r0, [sp, #7]
9156:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 19908              		.loc 1 9156 21 is_stmt 1 view .LVU5434
 19909              		.loc 1 9156 41 is_stmt 0 view .LVU5435
 19910 0056 134B     		ldr	r3, .L1417
 19911 0058 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccWoU29M.s 			page 560


 19912 005a C568     		ldr	r5, [r0, #12]
 19913              		.loc 1 9156 33 view .LVU5436
 19914 005c 0123     		movs	r3, #1
 19915 005e 0DF10702 		add	r2, sp, #7
 19916 0062 4021     		movs	r1, #64
 19917 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19918 0066 A847     		blx	r5
 19919              	.LVL2429:
 19920              		.loc 1 9156 30 view .LVU5437
 19921 0068 54FA80F4 		uxtab	r4, r4, r0
 19922 006c 64B2     		sxtb	r4, r4
 19923              	.LVL2430:
 19924              		.loc 1 9156 30 view .LVU5438
 19925 006e 07E0     		b	.L1409
 19926              	.LVL2431:
 19927              	.L1415:
9144:Core/Src/bno055.c ****             }
 19928              		.loc 1 9144 17 is_stmt 1 view .LVU5439
9144:Core/Src/bno055.c ****             }
 19929              		.loc 1 9144 28 is_stmt 0 view .LVU5440
 19930 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 19931              	.LVL2432:
9144:Core/Src/bno055.c ****             }
 19932              		.loc 1 9144 25 view .LVU5441
 19933 0074 54FA80F4 		uxtab	r4, r4, r0
 19934 0078 64B2     		sxtb	r4, r4
 19935              	.LVL2433:
9144:Core/Src/bno055.c ****             }
 19936              		.loc 1 9144 25 view .LVU5442
 19937 007a D6E7     		b	.L1410
 19938              	.LVL2434:
 19939              	.L1412:
9157:Core/Src/bno055.c ****                                                                 BNO055_TEMP_SOURCE_REG,
9158:Core/Src/bno055.c ****                                                                 &data_u8r,
9159:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9160:Core/Src/bno055.c ****                 }
9161:Core/Src/bno055.c ****             }
9162:Core/Src/bno055.c ****             else
9163:Core/Src/bno055.c ****             {
9164:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9165:Core/Src/bno055.c ****             }
9166:Core/Src/bno055.c ****         }
9167:Core/Src/bno055.c ****         else
9168:Core/Src/bno055.c ****         {
9169:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 19940              		.loc 1 9169 22 view .LVU5443
 19941 007c 4FF0FF34 		mov	r4, #-1
 19942              	.LVL2435:
 19943              	.L1409:
9170:Core/Src/bno055.c ****         }
9171:Core/Src/bno055.c ****     }
9172:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19944              		.loc 1 9172 5 is_stmt 1 view .LVU5444
 19945              		.loc 1 9172 24 is_stmt 0 view .LVU5445
 19946 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 19947              		.loc 1 9172 8 view .LVU5446
 19948 0084 28B9     		cbnz	r0, .L1416
ARM GAS  /tmp/ccWoU29M.s 			page 561


 19949              	.LVL2436:
 19950              	.L1408:
9173:Core/Src/bno055.c ****     {
9174:Core/Src/bno055.c ****         /* set the operation mode
9175:Core/Src/bno055.c ****          * of previous operation mode*/
9176:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9177:Core/Src/bno055.c ****     }
9178:Core/Src/bno055.c **** 
9179:Core/Src/bno055.c ****     return com_rslt;
9180:Core/Src/bno055.c **** }
 19951              		.loc 1 9180 1 view .LVU5447
 19952 0086 2046     		mov	r0, r4
 19953 0088 03B0     		add	sp, sp, #12
 19954              	.LCFI627:
 19955              		.cfi_remember_state
 19956              		.cfi_def_cfa_offset 12
 19957              		@ sp needed
 19958 008a 30BD     		pop	{r4, r5, pc}
 19959              	.LVL2437:
 19960              	.L1413:
 19961              	.LCFI628:
 19962              		.cfi_restore_state
9164:Core/Src/bno055.c ****             }
 19963              		.loc 1 9164 26 view .LVU5448
 19964 008c 4FF0FF34 		mov	r4, #-1
 19965              	.LVL2438:
9164:Core/Src/bno055.c ****             }
 19966              		.loc 1 9164 26 view .LVU5449
 19967 0090 F6E7     		b	.L1409
 19968              	.LVL2439:
 19969              	.L1416:
9176:Core/Src/bno055.c ****     }
 19970              		.loc 1 9176 9 is_stmt 1 view .LVU5450
9176:Core/Src/bno055.c ****     }
 19971              		.loc 1 9176 21 is_stmt 0 view .LVU5451
 19972 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 19973              	.LVL2440:
9176:Core/Src/bno055.c ****     }
 19974              		.loc 1 9176 18 view .LVU5452
 19975 0096 54FA80F4 		uxtab	r4, r4, r0
 19976              	.LVL2441:
9176:Core/Src/bno055.c ****     }
 19977              		.loc 1 9176 18 view .LVU5453
 19978 009a 64B2     		sxtb	r4, r4
 19979              	.LVL2442:
9176:Core/Src/bno055.c ****     }
 19980              		.loc 1 9176 18 view .LVU5454
 19981 009c F3E7     		b	.L1408
 19982              	.LVL2443:
 19983              	.L1411:
9132:Core/Src/bno055.c ****     }
 19984              		.loc 1 9132 16 view .LVU5455
 19985 009e 6FF07E04 		mvn	r4, #126
 19986 00a2 F0E7     		b	.L1408
 19987              	.L1418:
 19988              		.align	2
 19989              	.L1417:
ARM GAS  /tmp/ccWoU29M.s 			page 562


 19990 00a4 00000000 		.word	.LANCHOR0
 19991              		.cfi_endproc
 19992              	.LFE158:
 19994              		.section	.text.bno055_get_axis_remap_value,"ax",%progbits
 19995              		.align	1
 19996              		.global	bno055_get_axis_remap_value
 19997              		.syntax unified
 19998              		.thumb
 19999              		.thumb_func
 20000              		.fpu fpv4-sp-d16
 20002              	bno055_get_axis_remap_value:
 20003              	.LVL2444:
 20004              	.LFB159:
9181:Core/Src/bno055.c **** 
9182:Core/Src/bno055.c **** /*!
9183:Core/Src/bno055.c ****  *  @brief This API used to read the axis remap value
9184:Core/Src/bno055.c ****  *  from register from 0x41 bit 0 and 5
9185:Core/Src/bno055.c ****  *
9186:Core/Src/bno055.c ****  *  @param remap_axis_u8 : The value of axis remapping
9187:Core/Src/bno055.c ****  *
9188:Core/Src/bno055.c ****  *    remap_axis_u8 |   result     | comments
9189:Core/Src/bno055.c ****  *   ------------|-------------------|------------
9190:Core/Src/bno055.c ****  *      0X21     | BNO055_REMAP_X_Y         | Z=Z;X=Y;Y=X
9191:Core/Src/bno055.c ****  *      0X18     | BNO055_REMAP_Y_Z         | X=X;Y=Z;Z=Y
9192:Core/Src/bno055.c ****  *      0X06     | BNO055_REMAP_Z_X         | Y=Y;X=Z;Z=X
9193:Core/Src/bno055.c ****  *      0X12     | BNO055_REMAP_X_Y_Z_TYPE0 | X=Z;Y=X;Z=Y
9194:Core/Src/bno055.c ****  *      0X09     | BNO055_REMAP_X_Y_Z_TYPE1 | X=Y;Y=Z;Z=X
9195:Core/Src/bno055.c ****  *      0X24     | BNO055_DEFAULT_AXIS      | X=X;Y=Y;Z=Z
9196:Core/Src/bno055.c ****  *
9197:Core/Src/bno055.c ****  *  @return results of bus communication function
9198:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9199:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9200:Core/Src/bno055.c ****  *
9201:Core/Src/bno055.c ****  *  @note : For axis sign remap refer the following APIs
9202:Core/Src/bno055.c ****  *  x-axis :
9203:Core/Src/bno055.c ****  *
9204:Core/Src/bno055.c ****  *  bno055_set_x_remap_sign()
9205:Core/Src/bno055.c ****  *
9206:Core/Src/bno055.c ****  *  y-axis :
9207:Core/Src/bno055.c ****  *
9208:Core/Src/bno055.c ****  *  bno055_set_y_remap_sign()
9209:Core/Src/bno055.c ****  *
9210:Core/Src/bno055.c ****  *  z-axis :
9211:Core/Src/bno055.c ****  *
9212:Core/Src/bno055.c ****  *  bno055_set_z_remap_sign()
9213:Core/Src/bno055.c ****  *
9214:Core/Src/bno055.c ****  */
9215:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_axis_remap_value(u8 *remap_axis_u8)
9216:Core/Src/bno055.c **** {
 20005              		.loc 1 9216 1 is_stmt 1 view -0
 20006              		.cfi_startproc
 20007              		@ args = 0, pretend = 0, frame = 8
 20008              		@ frame_needed = 0, uses_anonymous_args = 0
 20009              		.loc 1 9216 1 is_stmt 0 view .LVU5457
 20010 0000 30B5     		push	{r4, r5, lr}
 20011              	.LCFI629:
 20012              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccWoU29M.s 			page 563


 20013              		.cfi_offset 4, -12
 20014              		.cfi_offset 5, -8
 20015              		.cfi_offset 14, -4
 20016 0002 83B0     		sub	sp, sp, #12
 20017              	.LCFI630:
 20018              		.cfi_def_cfa_offset 24
9217:Core/Src/bno055.c ****     /* Variable used to return value of
9218:Core/Src/bno055.c ****      * communication routine*/
9219:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20019              		.loc 1 9219 5 is_stmt 1 view .LVU5458
 20020              	.LVL2445:
9220:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20021              		.loc 1 9220 5 view .LVU5459
 20022              		.loc 1 9220 8 is_stmt 0 view .LVU5460
 20023 0004 0023     		movs	r3, #0
 20024 0006 8DF80730 		strb	r3, [sp, #7]
9221:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20025              		.loc 1 9221 5 is_stmt 1 view .LVU5461
 20026              	.LVL2446:
9222:Core/Src/bno055.c **** 
9223:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9224:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20027              		.loc 1 9224 5 view .LVU5462
 20028              		.loc 1 9224 18 is_stmt 0 view .LVU5463
 20029 000a 134B     		ldr	r3, .L1427
 20030 000c 1B68     		ldr	r3, [r3]
 20031              		.loc 1 9224 8 view .LVU5464
 20032 000e E3B1     		cbz	r3, .L1423
 20033 0010 0446     		mov	r4, r0
9225:Core/Src/bno055.c ****     {
9226:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9227:Core/Src/bno055.c ****     }
9228:Core/Src/bno055.c ****     else
9229:Core/Src/bno055.c ****     {
9230:Core/Src/bno055.c ****         /*condition check for page, axis remap is
9231:Core/Src/bno055.c ****          * available in the page zero*/
9232:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 20034              		.loc 1 9232 9 is_stmt 1 view .LVU5465
 20035              		.loc 1 9232 21 is_stmt 0 view .LVU5466
 20036 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20037              		.loc 1 9232 12 view .LVU5467
 20038 0014 9BB9     		cbnz	r3, .L1426
 20039              	.LVL2447:
 20040              	.L1421:
9233:Core/Src/bno055.c ****         {
9234:Core/Src/bno055.c ****             /* Write the page zero*/
9235:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9236:Core/Src/bno055.c ****         }
9237:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 20041              		.loc 1 9237 53 discriminator 1 view .LVU5468
 20042 0016 104B     		ldr	r3, .L1427
 20043 0018 1B68     		ldr	r3, [r3]
 20044 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20045              		.loc 1 9237 41 discriminator 1 view .LVU5469
 20046 001c C3B9     		cbnz	r3, .L1424
 20047              	.L1422:
9238:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 564


9239:Core/Src/bno055.c ****             /* Read the value of axis remap*/
9240:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20048              		.loc 1 9240 13 is_stmt 1 view .LVU5470
 20049              		.loc 1 9240 32 is_stmt 0 view .LVU5471
 20050 001e 0E4B     		ldr	r3, .L1427
 20051 0020 1868     		ldr	r0, [r3]
 20052 0022 0569     		ldr	r5, [r0, #16]
 20053              		.loc 1 9240 24 view .LVU5472
 20054 0024 0123     		movs	r3, #1
 20055 0026 0DF10702 		add	r2, sp, #7
 20056 002a 4121     		movs	r1, #65
 20057 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20058 002e A847     		blx	r5
 20059              	.LVL2448:
9241:Core/Src/bno055.c ****                                                       BNO055_REMAP_AXIS_VALUE_REG,
9242:Core/Src/bno055.c ****                                                       &data_u8r,
9243:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
9244:Core/Src/bno055.c ****             *remap_axis_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_REMAP_AXIS_VALUE);
 20060              		.loc 1 9244 13 is_stmt 1 view .LVU5473
 20061              		.loc 1 9244 30 is_stmt 0 view .LVU5474
 20062 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 20063 0034 03F03F03 		and	r3, r3, #63
 20064              		.loc 1 9244 28 view .LVU5475
 20065 0038 2370     		strb	r3, [r4]
 20066              	.LVL2449:
 20067              	.L1420:
9245:Core/Src/bno055.c ****         }
9246:Core/Src/bno055.c ****         else
9247:Core/Src/bno055.c ****         {
9248:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9249:Core/Src/bno055.c ****         }
9250:Core/Src/bno055.c ****     }
9251:Core/Src/bno055.c **** 
9252:Core/Src/bno055.c ****     return com_rslt;
9253:Core/Src/bno055.c **** }
 20068              		.loc 1 9253 1 view .LVU5476
 20069 003a 03B0     		add	sp, sp, #12
 20070              	.LCFI631:
 20071              		.cfi_remember_state
 20072              		.cfi_def_cfa_offset 12
 20073              		@ sp needed
 20074 003c 30BD     		pop	{r4, r5, pc}
 20075              	.LVL2450:
 20076              	.L1426:
 20077              	.LCFI632:
 20078              		.cfi_restore_state
9235:Core/Src/bno055.c ****         }
 20079              		.loc 1 9235 13 is_stmt 1 view .LVU5477
9235:Core/Src/bno055.c ****         }
 20080              		.loc 1 9235 23 is_stmt 0 view .LVU5478
 20081 003e 0020     		movs	r0, #0
 20082              	.LVL2451:
9235:Core/Src/bno055.c ****         }
 20083              		.loc 1 9235 23 view .LVU5479
 20084 0040 FFF7FEFF 		bl	bno055_write_page_id
 20085              	.LVL2452:
9237:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 565


 20086              		.loc 1 9237 9 is_stmt 1 view .LVU5480
9237:Core/Src/bno055.c ****         {
 20087              		.loc 1 9237 12 is_stmt 0 view .LVU5481
 20088 0044 0028     		cmp	r0, #0
 20089 0046 EAD0     		beq	.L1422
 20090 0048 E5E7     		b	.L1421
 20091              	.LVL2453:
 20092              	.L1423:
9226:Core/Src/bno055.c ****     }
 20093              		.loc 1 9226 16 view .LVU5482
 20094 004a 6FF07E00 		mvn	r0, #126
 20095              	.LVL2454:
9226:Core/Src/bno055.c ****     }
 20096              		.loc 1 9226 16 view .LVU5483
 20097 004e F4E7     		b	.L1420
 20098              	.LVL2455:
 20099              	.L1424:
9248:Core/Src/bno055.c ****         }
 20100              		.loc 1 9248 22 view .LVU5484
 20101 0050 4FF0FF30 		mov	r0, #-1
 20102 0054 F1E7     		b	.L1420
 20103              	.L1428:
 20104 0056 00BF     		.align	2
 20105              	.L1427:
 20106 0058 00000000 		.word	.LANCHOR0
 20107              		.cfi_endproc
 20108              	.LFE159:
 20110              		.section	.text.bno055_set_axis_remap_value,"ax",%progbits
 20111              		.align	1
 20112              		.global	bno055_set_axis_remap_value
 20113              		.syntax unified
 20114              		.thumb
 20115              		.thumb_func
 20116              		.fpu fpv4-sp-d16
 20118              	bno055_set_axis_remap_value:
 20119              	.LVL2456:
 20120              	.LFB160:
9254:Core/Src/bno055.c **** 
9255:Core/Src/bno055.c **** /*!
9256:Core/Src/bno055.c ****  *  @brief This API used to write the axis remap value
9257:Core/Src/bno055.c ****  *  from register from 0x41 bit 0 and 5
9258:Core/Src/bno055.c ****  *
9259:Core/Src/bno055.c ****  *  @param remap_axis_u8 : The value of axis remapping
9260:Core/Src/bno055.c ****  *
9261:Core/Src/bno055.c ****  *    remap_axis_u8 |   result     | comments
9262:Core/Src/bno055.c ****  *   ------------|-------------------|------------
9263:Core/Src/bno055.c ****  *      0X21     | BNO055_REMAP_X_Y         | Z=Z;X=Y;Y=X
9264:Core/Src/bno055.c ****  *      0X18     | BNO055_REMAP_Y_Z         | X=X;Y=Z;Z=Y
9265:Core/Src/bno055.c ****  *      0X06     | BNO055_REMAP_Z_X         | Y=Y;X=Z;Z=X
9266:Core/Src/bno055.c ****  *      0X12     | BNO055_REMAP_X_Y_Z_TYPE0 | X=Z;Y=X;Z=Y
9267:Core/Src/bno055.c ****  *      0X09     | BNO055_REMAP_X_Y_Z_TYPE1 | X=Y;Y=Z;Z=X
9268:Core/Src/bno055.c ****  *      0X24     | BNO055_DEFAULT_AXIS      | X=X;Y=Y;Z=Z
9269:Core/Src/bno055.c ****  *
9270:Core/Src/bno055.c ****  *  @return results of bus communication function
9271:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9272:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9273:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 566


9274:Core/Src/bno055.c ****  *  @note : For axis sign remap refer the following APIs
9275:Core/Src/bno055.c ****  *  x-axis :
9276:Core/Src/bno055.c ****  *
9277:Core/Src/bno055.c ****  *  bno055_set_x_remap_sign()
9278:Core/Src/bno055.c ****  *
9279:Core/Src/bno055.c ****  *  y-axis :
9280:Core/Src/bno055.c ****  *
9281:Core/Src/bno055.c ****  *  bno055_set_y_remap_sign()
9282:Core/Src/bno055.c ****  *
9283:Core/Src/bno055.c ****  *  z-axis :
9284:Core/Src/bno055.c ****  *
9285:Core/Src/bno055.c ****  *  bno055_set_z_remap_sign()
9286:Core/Src/bno055.c ****  *
9287:Core/Src/bno055.c ****  */
9288:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_axis_remap_value(u8 remap_axis_u8)
9289:Core/Src/bno055.c **** {
 20121              		.loc 1 9289 1 is_stmt 1 view -0
 20122              		.cfi_startproc
 20123              		@ args = 0, pretend = 0, frame = 8
 20124              		@ frame_needed = 0, uses_anonymous_args = 0
 20125              		.loc 1 9289 1 is_stmt 0 view .LVU5486
 20126 0000 30B5     		push	{r4, r5, lr}
 20127              	.LCFI633:
 20128              		.cfi_def_cfa_offset 12
 20129              		.cfi_offset 4, -12
 20130              		.cfi_offset 5, -8
 20131              		.cfi_offset 14, -4
 20132 0002 83B0     		sub	sp, sp, #12
 20133              	.LCFI634:
 20134              		.cfi_def_cfa_offset 24
9290:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20135              		.loc 1 9290 5 is_stmt 1 view .LVU5487
 20136              	.LVL2457:
9291:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20137              		.loc 1 9291 5 view .LVU5488
 20138              		.loc 1 9291 8 is_stmt 0 view .LVU5489
 20139 0004 0023     		movs	r3, #0
 20140 0006 8DF80730 		strb	r3, [sp, #7]
9292:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 20141              		.loc 1 9292 5 is_stmt 1 view .LVU5490
 20142              		.loc 1 9292 8 is_stmt 0 view .LVU5491
 20143 000a 8DF80630 		strb	r3, [sp, #6]
9293:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20144              		.loc 1 9293 5 is_stmt 1 view .LVU5492
 20145              	.LVL2458:
9294:Core/Src/bno055.c **** 
9295:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9296:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20146              		.loc 1 9296 5 view .LVU5493
 20147              		.loc 1 9296 18 is_stmt 0 view .LVU5494
 20148 000e 424B     		ldr	r3, .L1442
 20149 0010 1B68     		ldr	r3, [r3]
 20150              		.loc 1 9296 8 view .LVU5495
 20151 0012 002B     		cmp	r3, #0
 20152 0014 7CD0     		beq	.L1436
 20153 0016 0446     		mov	r4, r0
9297:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccWoU29M.s 			page 567


9298:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9299:Core/Src/bno055.c ****     }
9300:Core/Src/bno055.c ****     else
9301:Core/Src/bno055.c ****     {
9302:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9303:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9304:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9305:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 20154              		.loc 1 9305 9 is_stmt 1 view .LVU5496
 20155              		.loc 1 9305 19 is_stmt 0 view .LVU5497
 20156 0018 0DF10600 		add	r0, sp, #6
 20157              	.LVL2459:
 20158              		.loc 1 9305 19 view .LVU5498
 20159 001c FFF7FEFF 		bl	bno055_get_operation_mode
 20160              	.LVL2460:
9306:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 20161              		.loc 1 9306 9 is_stmt 1 view .LVU5499
 20162              		.loc 1 9306 12 is_stmt 0 view .LVU5500
 20163 0020 0546     		mov	r5, r0
 20164 0022 0028     		cmp	r0, #0
 20165 0024 63D1     		bne	.L1437
9307:Core/Src/bno055.c ****         {
9308:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20166              		.loc 1 9308 13 is_stmt 1 view .LVU5501
 20167              		.loc 1 9308 32 is_stmt 0 view .LVU5502
 20168 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 20169              		.loc 1 9308 16 view .LVU5503
 20170 002a B3B9     		cbnz	r3, .L1440
 20171              	.LVL2461:
 20172              	.L1432:
9309:Core/Src/bno055.c ****             {
9310:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9311:Core/Src/bno055.c ****             }
9312:Core/Src/bno055.c **** 
9313:Core/Src/bno055.c ****             /* Write the value of axis remap */
9314:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 20173              		.loc 1 9314 13 is_stmt 1 view .LVU5504
 20174              		.loc 1 9314 16 is_stmt 0 view .LVU5505
 20175 002c 002D     		cmp	r5, #0
 20176 002e 66D1     		bne	.L1438
9315:Core/Src/bno055.c ****             {
9316:Core/Src/bno055.c ****                 switch (remap_axis_u8)
 20177              		.loc 1 9316 17 is_stmt 1 view .LVU5506
 20178 0030 A31F     		subs	r3, r4, #6
 20179 0032 1E2B     		cmp	r3, #30
 20180 0034 3AD8     		bhi	.L1433
 20181 0036 DFE803F0 		tbb	[pc, r3]
 20182              	.L1435:
 20183 003a 16       		.byte	(.L1434-.L1435)/2
 20184 003b 39       		.byte	(.L1433-.L1435)/2
 20185 003c 39       		.byte	(.L1433-.L1435)/2
 20186 003d 16       		.byte	(.L1434-.L1435)/2
 20187 003e 39       		.byte	(.L1433-.L1435)/2
 20188 003f 39       		.byte	(.L1433-.L1435)/2
 20189 0040 39       		.byte	(.L1433-.L1435)/2
 20190 0041 39       		.byte	(.L1433-.L1435)/2
 20191 0042 39       		.byte	(.L1433-.L1435)/2
ARM GAS  /tmp/ccWoU29M.s 			page 568


 20192 0043 39       		.byte	(.L1433-.L1435)/2
 20193 0044 39       		.byte	(.L1433-.L1435)/2
 20194 0045 39       		.byte	(.L1433-.L1435)/2
 20195 0046 16       		.byte	(.L1434-.L1435)/2
 20196 0047 39       		.byte	(.L1433-.L1435)/2
 20197 0048 39       		.byte	(.L1433-.L1435)/2
 20198 0049 39       		.byte	(.L1433-.L1435)/2
 20199 004a 39       		.byte	(.L1433-.L1435)/2
 20200 004b 39       		.byte	(.L1433-.L1435)/2
 20201 004c 16       		.byte	(.L1434-.L1435)/2
 20202 004d 39       		.byte	(.L1433-.L1435)/2
 20203 004e 39       		.byte	(.L1433-.L1435)/2
 20204 004f 39       		.byte	(.L1433-.L1435)/2
 20205 0050 39       		.byte	(.L1433-.L1435)/2
 20206 0051 39       		.byte	(.L1433-.L1435)/2
 20207 0052 39       		.byte	(.L1433-.L1435)/2
 20208 0053 39       		.byte	(.L1433-.L1435)/2
 20209 0054 39       		.byte	(.L1433-.L1435)/2
 20210 0055 16       		.byte	(.L1434-.L1435)/2
 20211 0056 39       		.byte	(.L1433-.L1435)/2
 20212 0057 39       		.byte	(.L1433-.L1435)/2
 20213 0058 16       		.byte	(.L1434-.L1435)/2
 20214              	.LVL2462:
 20215 0059 00       		.p2align 1
 20216              	.L1440:
9310:Core/Src/bno055.c ****             }
 20217              		.loc 1 9310 17 view .LVU5507
9310:Core/Src/bno055.c ****             }
 20218              		.loc 1 9310 28 is_stmt 0 view .LVU5508
 20219 005a FFF7FEFF 		bl	bno055_set_operation_mode
 20220              	.LVL2463:
9310:Core/Src/bno055.c ****             }
 20221              		.loc 1 9310 25 view .LVU5509
 20222 005e 55FA80F5 		uxtab	r5, r5, r0
 20223 0062 6DB2     		sxtb	r5, r5
 20224              	.LVL2464:
9310:Core/Src/bno055.c ****             }
 20225              		.loc 1 9310 25 view .LVU5510
 20226 0064 E2E7     		b	.L1432
 20227              	.L1434:
9317:Core/Src/bno055.c ****                 {
9318:Core/Src/bno055.c ****                     case BNO055_REMAP_X_Y:
9319:Core/Src/bno055.c ****                     case BNO055_REMAP_Y_Z:
9320:Core/Src/bno055.c ****                     case BNO055_REMAP_Z_X:
9321:Core/Src/bno055.c ****                     case BNO055_REMAP_X_Y_Z_TYPE0:
9322:Core/Src/bno055.c ****                     case BNO055_REMAP_X_Y_Z_TYPE1:
9323:Core/Src/bno055.c ****                     case BNO055_DEFAULT_AXIS:
9324:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20228              		.loc 1 9324 25 is_stmt 1 view .LVU5511
 20229              		.loc 1 9324 44 is_stmt 0 view .LVU5512
 20230 0066 2C4B     		ldr	r3, .L1442
 20231 0068 1868     		ldr	r0, [r3]
 20232 006a 0569     		ldr	r5, [r0, #16]
 20233              	.LVL2465:
 20234              		.loc 1 9324 36 view .LVU5513
 20235 006c 0123     		movs	r3, #1
 20236 006e 0DF10702 		add	r2, sp, #7
ARM GAS  /tmp/ccWoU29M.s 			page 569


 20237 0072 4121     		movs	r1, #65
 20238 0074 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20239 0076 A847     		blx	r5
 20240              	.LVL2466:
9325:Core/Src/bno055.c ****                                                                   BNO055_REMAP_AXIS_VALUE_REG,
9326:Core/Src/bno055.c ****                                                                   &data_u8r,
9327:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
9328:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
 20241              		.loc 1 9328 25 is_stmt 1 view .LVU5514
 20242              		.loc 1 9328 28 is_stmt 0 view .LVU5515
 20243 0078 0546     		mov	r5, r0
 20244 007a 0028     		cmp	r0, #0
 20245 007c 39D1     		bne	.L1431
9329:Core/Src/bno055.c ****                         {
9330:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_AXIS_VALUE, remap
 20246              		.loc 1 9330 29 is_stmt 1 view .LVU5516
 20247              		.loc 1 9330 40 is_stmt 0 view .LVU5517
 20248 007e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 20249 0082 23F03F03 		bic	r3, r3, #63
 20250 0086 5BB2     		sxtb	r3, r3
 20251 0088 04F03F04 		and	r4, r4, #63
 20252 008c 1C43     		orrs	r4, r4, r3
 20253              		.loc 1 9330 38 view .LVU5518
 20254 008e 8DF80740 		strb	r4, [sp, #7]
9331:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20255              		.loc 1 9331 29 is_stmt 1 view .LVU5519
 20256              		.loc 1 9331 49 is_stmt 0 view .LVU5520
 20257 0092 214B     		ldr	r3, .L1442
 20258 0094 1868     		ldr	r0, [r3]
 20259              	.LVL2467:
 20260              		.loc 1 9331 49 view .LVU5521
 20261 0096 C468     		ldr	r4, [r0, #12]
 20262              		.loc 1 9331 41 view .LVU5522
 20263 0098 0123     		movs	r3, #1
 20264 009a 0DF10702 		add	r2, sp, #7
 20265 009e 4121     		movs	r1, #65
 20266 00a0 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20267 00a2 A047     		blx	r4
 20268              	.LVL2468:
 20269              		.loc 1 9331 38 view .LVU5523
 20270 00a4 55FA80F5 		uxtab	r5, r5, r0
 20271 00a8 6DB2     		sxtb	r5, r5
 20272              	.LVL2469:
 20273              		.loc 1 9331 38 view .LVU5524
 20274 00aa 22E0     		b	.L1431
 20275              	.LVL2470:
 20276              	.L1433:
9332:Core/Src/bno055.c ****                                                                         BNO055_REMAP_AXIS_VALUE_REG
9333:Core/Src/bno055.c ****                                                                         &data_u8r,
9334:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
9335:Core/Src/bno055.c ****                         }
9336:Core/Src/bno055.c ****                         break;
9337:Core/Src/bno055.c ****                     default:
9338:Core/Src/bno055.c **** 
9339:Core/Src/bno055.c ****                         /* Write the default axis remap value */
9340:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20277              		.loc 1 9340 25 is_stmt 1 view .LVU5525
ARM GAS  /tmp/ccWoU29M.s 			page 570


 20278              		.loc 1 9340 44 is_stmt 0 view .LVU5526
 20279 00ac 1A4B     		ldr	r3, .L1442
 20280 00ae 1868     		ldr	r0, [r3]
 20281 00b0 0469     		ldr	r4, [r0, #16]
 20282              		.loc 1 9340 36 view .LVU5527
 20283 00b2 0123     		movs	r3, #1
 20284 00b4 0DF10702 		add	r2, sp, #7
 20285 00b8 4121     		movs	r1, #65
 20286 00ba 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20287 00bc A047     		blx	r4
 20288              	.LVL2471:
9341:Core/Src/bno055.c ****                                                                   BNO055_REMAP_AXIS_VALUE_REG,
9342:Core/Src/bno055.c ****                                                                   &data_u8r,
9343:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
9344:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
 20289              		.loc 1 9344 25 is_stmt 1 view .LVU5528
 20290              		.loc 1 9344 28 is_stmt 0 view .LVU5529
 20291 00be 0546     		mov	r5, r0
 20292              	.LVL2472:
 20293              		.loc 1 9344 28 view .LVU5530
 20294 00c0 B8B9     		cbnz	r0, .L1431
9345:Core/Src/bno055.c ****                         {
9346:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_AXIS_VALUE, BNO05
 20295              		.loc 1 9346 29 is_stmt 1 view .LVU5531
 20296              		.loc 1 9346 40 is_stmt 0 view .LVU5532
 20297 00c2 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 20298 00c6 23F03F03 		bic	r3, r3, #63
 20299 00ca 5BB2     		sxtb	r3, r3
 20300 00cc 43F02403 		orr	r3, r3, #36
 20301              		.loc 1 9346 38 view .LVU5533
 20302 00d0 8DF80730 		strb	r3, [sp, #7]
9347:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20303              		.loc 1 9347 29 is_stmt 1 view .LVU5534
 20304              		.loc 1 9347 49 is_stmt 0 view .LVU5535
 20305 00d4 104B     		ldr	r3, .L1442
 20306 00d6 1868     		ldr	r0, [r3]
 20307              	.LVL2473:
 20308              		.loc 1 9347 49 view .LVU5536
 20309 00d8 C468     		ldr	r4, [r0, #12]
 20310              		.loc 1 9347 41 view .LVU5537
 20311 00da 0123     		movs	r3, #1
 20312 00dc 0DF10702 		add	r2, sp, #7
 20313 00e0 4121     		movs	r1, #65
 20314 00e2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20315 00e4 A047     		blx	r4
 20316              	.LVL2474:
 20317              		.loc 1 9347 38 view .LVU5538
 20318 00e6 55FA80F5 		uxtab	r5, r5, r0
 20319 00ea 6DB2     		sxtb	r5, r5
 20320              	.LVL2475:
 20321              		.loc 1 9347 38 view .LVU5539
 20322 00ec 01E0     		b	.L1431
 20323              	.LVL2476:
 20324              	.L1437:
9348:Core/Src/bno055.c ****                                                                         BNO055_REMAP_AXIS_VALUE_REG
9349:Core/Src/bno055.c ****                                                                         &data_u8r,
9350:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
ARM GAS  /tmp/ccWoU29M.s 			page 571


9351:Core/Src/bno055.c ****                         }
9352:Core/Src/bno055.c ****                         break;
9353:Core/Src/bno055.c ****                 }
9354:Core/Src/bno055.c ****             }
9355:Core/Src/bno055.c ****             else
9356:Core/Src/bno055.c ****             {
9357:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9358:Core/Src/bno055.c ****             }
9359:Core/Src/bno055.c ****         }
9360:Core/Src/bno055.c ****         else
9361:Core/Src/bno055.c ****         {
9362:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 20325              		.loc 1 9362 22 view .LVU5540
 20326 00ee 4FF0FF35 		mov	r5, #-1
 20327              	.LVL2477:
 20328              	.L1431:
9363:Core/Src/bno055.c ****         }
9364:Core/Src/bno055.c ****     }
9365:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20329              		.loc 1 9365 5 is_stmt 1 view .LVU5541
 20330              		.loc 1 9365 24 is_stmt 0 view .LVU5542
 20331 00f2 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 20332              		.loc 1 9365 8 view .LVU5543
 20333 00f6 28B9     		cbnz	r0, .L1441
 20334              	.LVL2478:
 20335              	.L1430:
9366:Core/Src/bno055.c ****     {
9367:Core/Src/bno055.c ****         /* set the operation mode
9368:Core/Src/bno055.c ****          * of previous operation mode*/
9369:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9370:Core/Src/bno055.c ****     }
9371:Core/Src/bno055.c **** 
9372:Core/Src/bno055.c ****     return com_rslt;
9373:Core/Src/bno055.c **** }
 20336              		.loc 1 9373 1 view .LVU5544
 20337 00f8 2846     		mov	r0, r5
 20338 00fa 03B0     		add	sp, sp, #12
 20339              	.LCFI635:
 20340              		.cfi_remember_state
 20341              		.cfi_def_cfa_offset 12
 20342              		@ sp needed
 20343 00fc 30BD     		pop	{r4, r5, pc}
 20344              	.LVL2479:
 20345              	.L1438:
 20346              	.LCFI636:
 20347              		.cfi_restore_state
9357:Core/Src/bno055.c ****             }
 20348              		.loc 1 9357 26 view .LVU5545
 20349 00fe 4FF0FF35 		mov	r5, #-1
 20350              	.LVL2480:
9357:Core/Src/bno055.c ****             }
 20351              		.loc 1 9357 26 view .LVU5546
 20352 0102 F6E7     		b	.L1431
 20353              	.LVL2481:
 20354              	.L1441:
9369:Core/Src/bno055.c ****     }
 20355              		.loc 1 9369 9 is_stmt 1 view .LVU5547
ARM GAS  /tmp/ccWoU29M.s 			page 572


9369:Core/Src/bno055.c ****     }
 20356              		.loc 1 9369 21 is_stmt 0 view .LVU5548
 20357 0104 FFF7FEFF 		bl	bno055_set_operation_mode
 20358              	.LVL2482:
9369:Core/Src/bno055.c ****     }
 20359              		.loc 1 9369 18 view .LVU5549
 20360 0108 55FA80F5 		uxtab	r5, r5, r0
 20361              	.LVL2483:
9369:Core/Src/bno055.c ****     }
 20362              		.loc 1 9369 18 view .LVU5550
 20363 010c 6DB2     		sxtb	r5, r5
 20364              	.LVL2484:
9369:Core/Src/bno055.c ****     }
 20365              		.loc 1 9369 18 view .LVU5551
 20366 010e F3E7     		b	.L1430
 20367              	.LVL2485:
 20368              	.L1436:
9298:Core/Src/bno055.c ****     }
 20369              		.loc 1 9298 16 view .LVU5552
 20370 0110 6FF07E05 		mvn	r5, #126
 20371 0114 F0E7     		b	.L1430
 20372              	.L1443:
 20373 0116 00BF     		.align	2
 20374              	.L1442:
 20375 0118 00000000 		.word	.LANCHOR0
 20376              		.cfi_endproc
 20377              	.LFE160:
 20379              		.section	.text.bno055_get_remap_x_sign,"ax",%progbits
 20380              		.align	1
 20381              		.global	bno055_get_remap_x_sign
 20382              		.syntax unified
 20383              		.thumb
 20384              		.thumb_func
 20385              		.fpu fpv4-sp-d16
 20387              	bno055_get_remap_x_sign:
 20388              	.LVL2486:
 20389              	.LFB161:
9374:Core/Src/bno055.c **** 
9375:Core/Src/bno055.c **** /*!
9376:Core/Src/bno055.c ****  *  @brief This API used to read the x-axis remap
9377:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 2
9378:Core/Src/bno055.c ****  *
9379:Core/Src/bno055.c ****  *  @param remap_x_sign_u8 : The value of x-axis remap sign
9380:Core/Src/bno055.c ****  *
9381:Core/Src/bno055.c ****  *    remap_x_sign_u8  |    result
9382:Core/Src/bno055.c ****  *   ------------------- |--------------------
9383:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9384:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9385:Core/Src/bno055.c ****  *
9386:Core/Src/bno055.c ****  *  @return results of bus communication function
9387:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9388:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9389:Core/Src/bno055.c ****  *
9390:Core/Src/bno055.c ****  */
9391:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_remap_x_sign(u8 *remap_x_sign_u8)
9392:Core/Src/bno055.c **** {
 20390              		.loc 1 9392 1 is_stmt 1 view -0
ARM GAS  /tmp/ccWoU29M.s 			page 573


 20391              		.cfi_startproc
 20392              		@ args = 0, pretend = 0, frame = 8
 20393              		@ frame_needed = 0, uses_anonymous_args = 0
 20394              		.loc 1 9392 1 is_stmt 0 view .LVU5554
 20395 0000 30B5     		push	{r4, r5, lr}
 20396              	.LCFI637:
 20397              		.cfi_def_cfa_offset 12
 20398              		.cfi_offset 4, -12
 20399              		.cfi_offset 5, -8
 20400              		.cfi_offset 14, -4
 20401 0002 83B0     		sub	sp, sp, #12
 20402              	.LCFI638:
 20403              		.cfi_def_cfa_offset 24
9393:Core/Src/bno055.c ****     /* Variable used to return value of
9394:Core/Src/bno055.c ****      * communication routine*/
9395:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20404              		.loc 1 9395 5 is_stmt 1 view .LVU5555
 20405              	.LVL2487:
9396:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20406              		.loc 1 9396 5 view .LVU5556
 20407              		.loc 1 9396 8 is_stmt 0 view .LVU5557
 20408 0004 0023     		movs	r3, #0
 20409 0006 8DF80730 		strb	r3, [sp, #7]
9397:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20410              		.loc 1 9397 5 is_stmt 1 view .LVU5558
 20411              	.LVL2488:
9398:Core/Src/bno055.c **** 
9399:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9400:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20412              		.loc 1 9400 5 view .LVU5559
 20413              		.loc 1 9400 18 is_stmt 0 view .LVU5560
 20414 000a 134B     		ldr	r3, .L1452
 20415 000c 1B68     		ldr	r3, [r3]
 20416              		.loc 1 9400 8 view .LVU5561
 20417 000e E3B1     		cbz	r3, .L1448
 20418 0010 0446     		mov	r4, r0
9401:Core/Src/bno055.c ****     {
9402:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9403:Core/Src/bno055.c ****     }
9404:Core/Src/bno055.c ****     else
9405:Core/Src/bno055.c ****     {
9406:Core/Src/bno055.c ****         /*condition check for page, x-axis remap sign is
9407:Core/Src/bno055.c ****          * available in the page zero*/
9408:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 20419              		.loc 1 9408 9 is_stmt 1 view .LVU5562
 20420              		.loc 1 9408 21 is_stmt 0 view .LVU5563
 20421 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20422              		.loc 1 9408 12 view .LVU5564
 20423 0014 9BB9     		cbnz	r3, .L1451
 20424              	.LVL2489:
 20425              	.L1446:
9409:Core/Src/bno055.c ****         {
9410:Core/Src/bno055.c ****             /* Write the page zero*/
9411:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9412:Core/Src/bno055.c ****         }
9413:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 20426              		.loc 1 9413 53 discriminator 1 view .LVU5565
ARM GAS  /tmp/ccWoU29M.s 			page 574


 20427 0016 104B     		ldr	r3, .L1452
 20428 0018 1B68     		ldr	r3, [r3]
 20429 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20430              		.loc 1 9413 41 discriminator 1 view .LVU5566
 20431 001c C3B9     		cbnz	r3, .L1449
 20432              	.L1447:
9414:Core/Src/bno055.c ****         {
9415:Core/Src/bno055.c ****             /* Read the value of x-axis remap sign */
9416:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20433              		.loc 1 9416 13 is_stmt 1 view .LVU5567
 20434              		.loc 1 9416 32 is_stmt 0 view .LVU5568
 20435 001e 0E4B     		ldr	r3, .L1452
 20436 0020 1868     		ldr	r0, [r3]
 20437 0022 0569     		ldr	r5, [r0, #16]
 20438              		.loc 1 9416 24 view .LVU5569
 20439 0024 0123     		movs	r3, #1
 20440 0026 0DF10702 		add	r2, sp, #7
 20441 002a 4221     		movs	r1, #66
 20442 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20443 002e A847     		blx	r5
 20444              	.LVL2490:
9417:Core/Src/bno055.c ****                                                       BNO055_REMAP_X_SIGN_REG,
9418:Core/Src/bno055.c ****                                                       &data_u8r,
9419:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
9420:Core/Src/bno055.c ****             *remap_x_sign_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_REMAP_X_SIGN);
 20445              		.loc 1 9420 13 is_stmt 1 view .LVU5570
 20446              		.loc 1 9420 32 is_stmt 0 view .LVU5571
 20447 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 20448 0034 C3F38003 		ubfx	r3, r3, #2, #1
 20449              		.loc 1 9420 30 view .LVU5572
 20450 0038 2370     		strb	r3, [r4]
 20451              	.LVL2491:
 20452              	.L1445:
9421:Core/Src/bno055.c ****         }
9422:Core/Src/bno055.c ****         else
9423:Core/Src/bno055.c ****         {
9424:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9425:Core/Src/bno055.c ****         }
9426:Core/Src/bno055.c ****     }
9427:Core/Src/bno055.c **** 
9428:Core/Src/bno055.c ****     return com_rslt;
9429:Core/Src/bno055.c **** }
 20453              		.loc 1 9429 1 view .LVU5573
 20454 003a 03B0     		add	sp, sp, #12
 20455              	.LCFI639:
 20456              		.cfi_remember_state
 20457              		.cfi_def_cfa_offset 12
 20458              		@ sp needed
 20459 003c 30BD     		pop	{r4, r5, pc}
 20460              	.LVL2492:
 20461              	.L1451:
 20462              	.LCFI640:
 20463              		.cfi_restore_state
9411:Core/Src/bno055.c ****         }
 20464              		.loc 1 9411 13 is_stmt 1 view .LVU5574
9411:Core/Src/bno055.c ****         }
 20465              		.loc 1 9411 23 is_stmt 0 view .LVU5575
ARM GAS  /tmp/ccWoU29M.s 			page 575


 20466 003e 0020     		movs	r0, #0
 20467              	.LVL2493:
9411:Core/Src/bno055.c ****         }
 20468              		.loc 1 9411 23 view .LVU5576
 20469 0040 FFF7FEFF 		bl	bno055_write_page_id
 20470              	.LVL2494:
9413:Core/Src/bno055.c ****         {
 20471              		.loc 1 9413 9 is_stmt 1 view .LVU5577
9413:Core/Src/bno055.c ****         {
 20472              		.loc 1 9413 12 is_stmt 0 view .LVU5578
 20473 0044 0028     		cmp	r0, #0
 20474 0046 EAD0     		beq	.L1447
 20475 0048 E5E7     		b	.L1446
 20476              	.LVL2495:
 20477              	.L1448:
9402:Core/Src/bno055.c ****     }
 20478              		.loc 1 9402 16 view .LVU5579
 20479 004a 6FF07E00 		mvn	r0, #126
 20480              	.LVL2496:
9402:Core/Src/bno055.c ****     }
 20481              		.loc 1 9402 16 view .LVU5580
 20482 004e F4E7     		b	.L1445
 20483              	.LVL2497:
 20484              	.L1449:
9424:Core/Src/bno055.c ****         }
 20485              		.loc 1 9424 22 view .LVU5581
 20486 0050 4FF0FF30 		mov	r0, #-1
 20487 0054 F1E7     		b	.L1445
 20488              	.L1453:
 20489 0056 00BF     		.align	2
 20490              	.L1452:
 20491 0058 00000000 		.word	.LANCHOR0
 20492              		.cfi_endproc
 20493              	.LFE161:
 20495              		.section	.text.bno055_set_remap_x_sign,"ax",%progbits
 20496              		.align	1
 20497              		.global	bno055_set_remap_x_sign
 20498              		.syntax unified
 20499              		.thumb
 20500              		.thumb_func
 20501              		.fpu fpv4-sp-d16
 20503              	bno055_set_remap_x_sign:
 20504              	.LVL2498:
 20505              	.LFB162:
9430:Core/Src/bno055.c **** 
9431:Core/Src/bno055.c **** /*!
9432:Core/Src/bno055.c ****  *  @brief This API used to write the x-axis remap
9433:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 2
9434:Core/Src/bno055.c ****  *
9435:Core/Src/bno055.c ****  *  @param remap_x_sign_u8 : The value of x-axis remap sign
9436:Core/Src/bno055.c ****  *
9437:Core/Src/bno055.c ****  *    remap_x_sign_u8  |    result
9438:Core/Src/bno055.c ****  *   ------------------- |--------------------
9439:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9440:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9441:Core/Src/bno055.c ****  *
9442:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/ccWoU29M.s 			page 576


9443:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9444:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9445:Core/Src/bno055.c ****  *
9446:Core/Src/bno055.c ****  */
9447:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_remap_x_sign(u8 remap_x_sign_u8)
9448:Core/Src/bno055.c **** {
 20506              		.loc 1 9448 1 is_stmt 1 view -0
 20507              		.cfi_startproc
 20508              		@ args = 0, pretend = 0, frame = 8
 20509              		@ frame_needed = 0, uses_anonymous_args = 0
 20510              		.loc 1 9448 1 is_stmt 0 view .LVU5583
 20511 0000 30B5     		push	{r4, r5, lr}
 20512              	.LCFI641:
 20513              		.cfi_def_cfa_offset 12
 20514              		.cfi_offset 4, -12
 20515              		.cfi_offset 5, -8
 20516              		.cfi_offset 14, -4
 20517 0002 83B0     		sub	sp, sp, #12
 20518              	.LCFI642:
 20519              		.cfi_def_cfa_offset 24
9449:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20520              		.loc 1 9449 5 is_stmt 1 view .LVU5584
 20521              	.LVL2499:
9450:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20522              		.loc 1 9450 5 view .LVU5585
 20523              		.loc 1 9450 8 is_stmt 0 view .LVU5586
 20524 0004 0023     		movs	r3, #0
 20525 0006 8DF80730 		strb	r3, [sp, #7]
9451:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 20526              		.loc 1 9451 5 is_stmt 1 view .LVU5587
 20527              		.loc 1 9451 8 is_stmt 0 view .LVU5588
 20528 000a 8DF80630 		strb	r3, [sp, #6]
9452:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20529              		.loc 1 9452 5 is_stmt 1 view .LVU5589
 20530              	.LVL2500:
9453:Core/Src/bno055.c **** 
9454:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9455:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20531              		.loc 1 9455 5 view .LVU5590
 20532              		.loc 1 9455 18 is_stmt 0 view .LVU5591
 20533 000e 264B     		ldr	r3, .L1464
 20534 0010 1B68     		ldr	r3, [r3]
 20535              		.loc 1 9455 8 view .LVU5592
 20536 0012 002B     		cmp	r3, #0
 20537 0014 44D0     		beq	.L1458
 20538 0016 0546     		mov	r5, r0
9456:Core/Src/bno055.c ****     {
9457:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9458:Core/Src/bno055.c ****     }
9459:Core/Src/bno055.c ****     else
9460:Core/Src/bno055.c ****     {
9461:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9462:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9463:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9464:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 20539              		.loc 1 9464 9 is_stmt 1 view .LVU5593
 20540              		.loc 1 9464 19 is_stmt 0 view .LVU5594
ARM GAS  /tmp/ccWoU29M.s 			page 577


 20541 0018 0DF10600 		add	r0, sp, #6
 20542              	.LVL2501:
 20543              		.loc 1 9464 19 view .LVU5595
 20544 001c FFF7FEFF 		bl	bno055_get_operation_mode
 20545              	.LVL2502:
9465:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 20546              		.loc 1 9465 9 is_stmt 1 view .LVU5596
 20547              		.loc 1 9465 12 is_stmt 0 view .LVU5597
 20548 0020 0446     		mov	r4, r0
 20549 0022 60BB     		cbnz	r0, .L1459
9466:Core/Src/bno055.c ****         {
9467:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20550              		.loc 1 9467 13 is_stmt 1 view .LVU5598
 20551              		.loc 1 9467 32 is_stmt 0 view .LVU5599
 20552 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 20553              		.loc 1 9467 16 view .LVU5600
 20554 0028 1BBB     		cbnz	r3, .L1462
 20555              	.LVL2503:
 20556              	.L1457:
9468:Core/Src/bno055.c ****             {
9469:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9470:Core/Src/bno055.c ****             }
9471:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 20557              		.loc 1 9471 13 is_stmt 1 view .LVU5601
 20558              		.loc 1 9471 16 is_stmt 0 view .LVU5602
 20559 002a 84BB     		cbnz	r4, .L1460
9472:Core/Src/bno055.c ****             {
9473:Core/Src/bno055.c ****                 /* Write the value of x-axis remap */
9474:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20560              		.loc 1 9474 17 is_stmt 1 view .LVU5603
 20561              		.loc 1 9474 36 is_stmt 0 view .LVU5604
 20562 002c 1E4B     		ldr	r3, .L1464
 20563 002e 1868     		ldr	r0, [r3]
 20564 0030 0469     		ldr	r4, [r0, #16]
 20565              	.LVL2504:
 20566              		.loc 1 9474 28 view .LVU5605
 20567 0032 0123     		movs	r3, #1
 20568 0034 0DF10702 		add	r2, sp, #7
 20569 0038 4221     		movs	r1, #66
 20570 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20571 003c A047     		blx	r4
 20572              	.LVL2505:
9475:Core/Src/bno055.c ****                                                           BNO055_REMAP_X_SIGN_REG,
9476:Core/Src/bno055.c ****                                                           &data_u8r,
9477:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9478:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 20573              		.loc 1 9478 17 is_stmt 1 view .LVU5606
 20574              		.loc 1 9478 20 is_stmt 0 view .LVU5607
 20575 003e 0446     		mov	r4, r0
 20576 0040 F8B9     		cbnz	r0, .L1456
9479:Core/Src/bno055.c ****                 {
9480:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_X_SIGN, remap_x_sign_u8);
 20577              		.loc 1 9480 21 is_stmt 1 view .LVU5608
 20578              		.loc 1 9480 32 is_stmt 0 view .LVU5609
 20579 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 20580              	.LVL2506:
 20581              		.loc 1 9480 32 view .LVU5610
ARM GAS  /tmp/ccWoU29M.s 			page 578


 20582 0046 20F00400 		bic	r0, r0, #4
 20583 004a 43B2     		sxtb	r3, r0
 20584 004c A800     		lsls	r0, r5, #2
 20585 004e 00F00400 		and	r0, r0, #4
 20586 0052 1843     		orrs	r0, r0, r3
 20587              		.loc 1 9480 30 view .LVU5611
 20588 0054 8DF80700 		strb	r0, [sp, #7]
9481:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20589              		.loc 1 9481 21 is_stmt 1 view .LVU5612
 20590              		.loc 1 9481 41 is_stmt 0 view .LVU5613
 20591 0058 134B     		ldr	r3, .L1464
 20592 005a 1868     		ldr	r0, [r3]
 20593 005c C568     		ldr	r5, [r0, #12]
 20594              		.loc 1 9481 33 view .LVU5614
 20595 005e 0123     		movs	r3, #1
 20596 0060 0DF10702 		add	r2, sp, #7
 20597 0064 4221     		movs	r1, #66
 20598 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20599 0068 A847     		blx	r5
 20600              	.LVL2507:
 20601              		.loc 1 9481 30 view .LVU5615
 20602 006a 54FA80F4 		uxtab	r4, r4, r0
 20603 006e 64B2     		sxtb	r4, r4
 20604              	.LVL2508:
 20605              		.loc 1 9481 30 view .LVU5616
 20606 0070 07E0     		b	.L1456
 20607              	.LVL2509:
 20608              	.L1462:
9469:Core/Src/bno055.c ****             }
 20609              		.loc 1 9469 17 is_stmt 1 view .LVU5617
9469:Core/Src/bno055.c ****             }
 20610              		.loc 1 9469 28 is_stmt 0 view .LVU5618
 20611 0072 FFF7FEFF 		bl	bno055_set_operation_mode
 20612              	.LVL2510:
9469:Core/Src/bno055.c ****             }
 20613              		.loc 1 9469 25 view .LVU5619
 20614 0076 54FA80F4 		uxtab	r4, r4, r0
 20615 007a 64B2     		sxtb	r4, r4
 20616              	.LVL2511:
9469:Core/Src/bno055.c ****             }
 20617              		.loc 1 9469 25 view .LVU5620
 20618 007c D5E7     		b	.L1457
 20619              	.LVL2512:
 20620              	.L1459:
9482:Core/Src/bno055.c ****                                                                 BNO055_REMAP_X_SIGN_REG,
9483:Core/Src/bno055.c ****                                                                 &data_u8r,
9484:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9485:Core/Src/bno055.c ****                 }
9486:Core/Src/bno055.c ****             }
9487:Core/Src/bno055.c ****             else
9488:Core/Src/bno055.c ****             {
9489:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9490:Core/Src/bno055.c ****             }
9491:Core/Src/bno055.c ****         }
9492:Core/Src/bno055.c ****         else
9493:Core/Src/bno055.c ****         {
9494:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 579


 20621              		.loc 1 9494 22 view .LVU5621
 20622 007e 4FF0FF34 		mov	r4, #-1
 20623              	.LVL2513:
 20624              	.L1456:
9495:Core/Src/bno055.c ****         }
9496:Core/Src/bno055.c ****     }
9497:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20625              		.loc 1 9497 5 is_stmt 1 view .LVU5622
 20626              		.loc 1 9497 24 is_stmt 0 view .LVU5623
 20627 0082 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 20628              		.loc 1 9497 8 view .LVU5624
 20629 0086 28B9     		cbnz	r0, .L1463
 20630              	.LVL2514:
 20631              	.L1455:
9498:Core/Src/bno055.c ****     {
9499:Core/Src/bno055.c ****         /* set the operation mode
9500:Core/Src/bno055.c ****          * of previous operation mode*/
9501:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9502:Core/Src/bno055.c ****     }
9503:Core/Src/bno055.c **** 
9504:Core/Src/bno055.c ****     return com_rslt;
9505:Core/Src/bno055.c **** }
 20632              		.loc 1 9505 1 view .LVU5625
 20633 0088 2046     		mov	r0, r4
 20634 008a 03B0     		add	sp, sp, #12
 20635              	.LCFI643:
 20636              		.cfi_remember_state
 20637              		.cfi_def_cfa_offset 12
 20638              		@ sp needed
 20639 008c 30BD     		pop	{r4, r5, pc}
 20640              	.LVL2515:
 20641              	.L1460:
 20642              	.LCFI644:
 20643              		.cfi_restore_state
9489:Core/Src/bno055.c ****             }
 20644              		.loc 1 9489 26 view .LVU5626
 20645 008e 4FF0FF34 		mov	r4, #-1
 20646              	.LVL2516:
9489:Core/Src/bno055.c ****             }
 20647              		.loc 1 9489 26 view .LVU5627
 20648 0092 F6E7     		b	.L1456
 20649              	.LVL2517:
 20650              	.L1463:
9501:Core/Src/bno055.c ****     }
 20651              		.loc 1 9501 9 is_stmt 1 view .LVU5628
9501:Core/Src/bno055.c ****     }
 20652              		.loc 1 9501 21 is_stmt 0 view .LVU5629
 20653 0094 FFF7FEFF 		bl	bno055_set_operation_mode
 20654              	.LVL2518:
9501:Core/Src/bno055.c ****     }
 20655              		.loc 1 9501 18 view .LVU5630
 20656 0098 54FA80F4 		uxtab	r4, r4, r0
 20657              	.LVL2519:
9501:Core/Src/bno055.c ****     }
 20658              		.loc 1 9501 18 view .LVU5631
 20659 009c 64B2     		sxtb	r4, r4
 20660              	.LVL2520:
ARM GAS  /tmp/ccWoU29M.s 			page 580


9501:Core/Src/bno055.c ****     }
 20661              		.loc 1 9501 18 view .LVU5632
 20662 009e F3E7     		b	.L1455
 20663              	.LVL2521:
 20664              	.L1458:
9457:Core/Src/bno055.c ****     }
 20665              		.loc 1 9457 16 view .LVU5633
 20666 00a0 6FF07E04 		mvn	r4, #126
 20667 00a4 F0E7     		b	.L1455
 20668              	.L1465:
 20669 00a6 00BF     		.align	2
 20670              	.L1464:
 20671 00a8 00000000 		.word	.LANCHOR0
 20672              		.cfi_endproc
 20673              	.LFE162:
 20675              		.section	.text.bno055_get_remap_y_sign,"ax",%progbits
 20676              		.align	1
 20677              		.global	bno055_get_remap_y_sign
 20678              		.syntax unified
 20679              		.thumb
 20680              		.thumb_func
 20681              		.fpu fpv4-sp-d16
 20683              	bno055_get_remap_y_sign:
 20684              	.LVL2522:
 20685              	.LFB163:
9506:Core/Src/bno055.c **** 
9507:Core/Src/bno055.c **** /*!
9508:Core/Src/bno055.c ****  *  @brief This API used to read the y-axis remap
9509:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 1
9510:Core/Src/bno055.c ****  *
9511:Core/Src/bno055.c ****  *  @param remap_y_sign_u8 : The value of y-axis remap sign
9512:Core/Src/bno055.c ****  *
9513:Core/Src/bno055.c ****  *    remap_y_sign_u8  |   result
9514:Core/Src/bno055.c ****  *   ------------------- |--------------------
9515:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9516:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9517:Core/Src/bno055.c ****  *
9518:Core/Src/bno055.c ****  *  @return results of bus communication function
9519:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9520:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9521:Core/Src/bno055.c ****  *
9522:Core/Src/bno055.c ****  */
9523:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_remap_y_sign(u8 *remap_y_sign_u8)
9524:Core/Src/bno055.c **** {
 20686              		.loc 1 9524 1 is_stmt 1 view -0
 20687              		.cfi_startproc
 20688              		@ args = 0, pretend = 0, frame = 8
 20689              		@ frame_needed = 0, uses_anonymous_args = 0
 20690              		.loc 1 9524 1 is_stmt 0 view .LVU5635
 20691 0000 30B5     		push	{r4, r5, lr}
 20692              	.LCFI645:
 20693              		.cfi_def_cfa_offset 12
 20694              		.cfi_offset 4, -12
 20695              		.cfi_offset 5, -8
 20696              		.cfi_offset 14, -4
 20697 0002 83B0     		sub	sp, sp, #12
 20698              	.LCFI646:
ARM GAS  /tmp/ccWoU29M.s 			page 581


 20699              		.cfi_def_cfa_offset 24
9525:Core/Src/bno055.c ****     /* Variable used to return value of
9526:Core/Src/bno055.c ****      * communication routine*/
9527:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20700              		.loc 1 9527 5 is_stmt 1 view .LVU5636
 20701              	.LVL2523:
9528:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20702              		.loc 1 9528 5 view .LVU5637
 20703              		.loc 1 9528 8 is_stmt 0 view .LVU5638
 20704 0004 0023     		movs	r3, #0
 20705 0006 8DF80730 		strb	r3, [sp, #7]
9529:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20706              		.loc 1 9529 5 is_stmt 1 view .LVU5639
 20707              	.LVL2524:
9530:Core/Src/bno055.c **** 
9531:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9532:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20708              		.loc 1 9532 5 view .LVU5640
 20709              		.loc 1 9532 18 is_stmt 0 view .LVU5641
 20710 000a 134B     		ldr	r3, .L1474
 20711 000c 1B68     		ldr	r3, [r3]
 20712              		.loc 1 9532 8 view .LVU5642
 20713 000e E3B1     		cbz	r3, .L1470
 20714 0010 0446     		mov	r4, r0
9533:Core/Src/bno055.c ****     {
9534:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9535:Core/Src/bno055.c ****     }
9536:Core/Src/bno055.c ****     else
9537:Core/Src/bno055.c ****     {
9538:Core/Src/bno055.c ****         /*condition check for page, y-axis remap sign is
9539:Core/Src/bno055.c ****          * available in the page zero*/
9540:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 20715              		.loc 1 9540 9 is_stmt 1 view .LVU5643
 20716              		.loc 1 9540 21 is_stmt 0 view .LVU5644
 20717 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20718              		.loc 1 9540 12 view .LVU5645
 20719 0014 9BB9     		cbnz	r3, .L1473
 20720              	.LVL2525:
 20721              	.L1468:
9541:Core/Src/bno055.c ****         {
9542:Core/Src/bno055.c ****             /* Write the page zero*/
9543:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9544:Core/Src/bno055.c ****         }
9545:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 20722              		.loc 1 9545 53 discriminator 1 view .LVU5646
 20723 0016 104B     		ldr	r3, .L1474
 20724 0018 1B68     		ldr	r3, [r3]
 20725 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20726              		.loc 1 9545 41 discriminator 1 view .LVU5647
 20727 001c C3B9     		cbnz	r3, .L1471
 20728              	.L1469:
9546:Core/Src/bno055.c ****         {
9547:Core/Src/bno055.c ****             /* Read the value of y-axis remap sign*/
9548:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20729              		.loc 1 9548 13 is_stmt 1 view .LVU5648
 20730              		.loc 1 9548 32 is_stmt 0 view .LVU5649
 20731 001e 0E4B     		ldr	r3, .L1474
ARM GAS  /tmp/ccWoU29M.s 			page 582


 20732 0020 1868     		ldr	r0, [r3]
 20733 0022 0569     		ldr	r5, [r0, #16]
 20734              		.loc 1 9548 24 view .LVU5650
 20735 0024 0123     		movs	r3, #1
 20736 0026 0DF10702 		add	r2, sp, #7
 20737 002a 4221     		movs	r1, #66
 20738 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20739 002e A847     		blx	r5
 20740              	.LVL2526:
9549:Core/Src/bno055.c ****                                                       BNO055_REMAP_Y_SIGN_REG,
9550:Core/Src/bno055.c ****                                                       &data_u8r,
9551:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
9552:Core/Src/bno055.c ****             *remap_y_sign_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_REMAP_Y_SIGN);
 20741              		.loc 1 9552 13 is_stmt 1 view .LVU5651
 20742              		.loc 1 9552 32 is_stmt 0 view .LVU5652
 20743 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 20744 0034 C3F34003 		ubfx	r3, r3, #1, #1
 20745              		.loc 1 9552 30 view .LVU5653
 20746 0038 2370     		strb	r3, [r4]
 20747              	.LVL2527:
 20748              	.L1467:
9553:Core/Src/bno055.c ****         }
9554:Core/Src/bno055.c ****         else
9555:Core/Src/bno055.c ****         {
9556:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9557:Core/Src/bno055.c ****         }
9558:Core/Src/bno055.c ****     }
9559:Core/Src/bno055.c **** 
9560:Core/Src/bno055.c ****     return com_rslt;
9561:Core/Src/bno055.c **** }
 20749              		.loc 1 9561 1 view .LVU5654
 20750 003a 03B0     		add	sp, sp, #12
 20751              	.LCFI647:
 20752              		.cfi_remember_state
 20753              		.cfi_def_cfa_offset 12
 20754              		@ sp needed
 20755 003c 30BD     		pop	{r4, r5, pc}
 20756              	.LVL2528:
 20757              	.L1473:
 20758              	.LCFI648:
 20759              		.cfi_restore_state
9543:Core/Src/bno055.c ****         }
 20760              		.loc 1 9543 13 is_stmt 1 view .LVU5655
9543:Core/Src/bno055.c ****         }
 20761              		.loc 1 9543 23 is_stmt 0 view .LVU5656
 20762 003e 0020     		movs	r0, #0
 20763              	.LVL2529:
9543:Core/Src/bno055.c ****         }
 20764              		.loc 1 9543 23 view .LVU5657
 20765 0040 FFF7FEFF 		bl	bno055_write_page_id
 20766              	.LVL2530:
9545:Core/Src/bno055.c ****         {
 20767              		.loc 1 9545 9 is_stmt 1 view .LVU5658
9545:Core/Src/bno055.c ****         {
 20768              		.loc 1 9545 12 is_stmt 0 view .LVU5659
 20769 0044 0028     		cmp	r0, #0
 20770 0046 EAD0     		beq	.L1469
ARM GAS  /tmp/ccWoU29M.s 			page 583


 20771 0048 E5E7     		b	.L1468
 20772              	.LVL2531:
 20773              	.L1470:
9534:Core/Src/bno055.c ****     }
 20774              		.loc 1 9534 16 view .LVU5660
 20775 004a 6FF07E00 		mvn	r0, #126
 20776              	.LVL2532:
9534:Core/Src/bno055.c ****     }
 20777              		.loc 1 9534 16 view .LVU5661
 20778 004e F4E7     		b	.L1467
 20779              	.LVL2533:
 20780              	.L1471:
9556:Core/Src/bno055.c ****         }
 20781              		.loc 1 9556 22 view .LVU5662
 20782 0050 4FF0FF30 		mov	r0, #-1
 20783 0054 F1E7     		b	.L1467
 20784              	.L1475:
 20785 0056 00BF     		.align	2
 20786              	.L1474:
 20787 0058 00000000 		.word	.LANCHOR0
 20788              		.cfi_endproc
 20789              	.LFE163:
 20791              		.section	.text.bno055_set_remap_y_sign,"ax",%progbits
 20792              		.align	1
 20793              		.global	bno055_set_remap_y_sign
 20794              		.syntax unified
 20795              		.thumb
 20796              		.thumb_func
 20797              		.fpu fpv4-sp-d16
 20799              	bno055_set_remap_y_sign:
 20800              	.LVL2534:
 20801              	.LFB164:
9562:Core/Src/bno055.c **** 
9563:Core/Src/bno055.c **** /*!
9564:Core/Src/bno055.c ****  *  @brief This API used to write the y-axis remap
9565:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 1
9566:Core/Src/bno055.c ****  *
9567:Core/Src/bno055.c ****  *  @param remap_y_sign_u8 : The value of y-axis remap sign
9568:Core/Src/bno055.c ****  *
9569:Core/Src/bno055.c ****  *    remap_y_sign_u8  |   result
9570:Core/Src/bno055.c ****  *   ------------------- |--------------------
9571:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9572:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9573:Core/Src/bno055.c ****  *
9574:Core/Src/bno055.c ****  *  @return results of bus communication function
9575:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9576:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9577:Core/Src/bno055.c ****  *
9578:Core/Src/bno055.c ****  */
9579:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_remap_y_sign(u8 remap_y_sign_u8)
9580:Core/Src/bno055.c **** {
 20802              		.loc 1 9580 1 is_stmt 1 view -0
 20803              		.cfi_startproc
 20804              		@ args = 0, pretend = 0, frame = 8
 20805              		@ frame_needed = 0, uses_anonymous_args = 0
 20806              		.loc 1 9580 1 is_stmt 0 view .LVU5664
 20807 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccWoU29M.s 			page 584


 20808              	.LCFI649:
 20809              		.cfi_def_cfa_offset 12
 20810              		.cfi_offset 4, -12
 20811              		.cfi_offset 5, -8
 20812              		.cfi_offset 14, -4
 20813 0002 83B0     		sub	sp, sp, #12
 20814              	.LCFI650:
 20815              		.cfi_def_cfa_offset 24
9581:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20816              		.loc 1 9581 5 is_stmt 1 view .LVU5665
 20817              	.LVL2535:
9582:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20818              		.loc 1 9582 5 view .LVU5666
 20819              		.loc 1 9582 8 is_stmt 0 view .LVU5667
 20820 0004 0023     		movs	r3, #0
 20821 0006 8DF80730 		strb	r3, [sp, #7]
9583:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 20822              		.loc 1 9583 5 is_stmt 1 view .LVU5668
 20823              		.loc 1 9583 8 is_stmt 0 view .LVU5669
 20824 000a 8DF80630 		strb	r3, [sp, #6]
9584:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20825              		.loc 1 9584 5 is_stmt 1 view .LVU5670
 20826              	.LVL2536:
9585:Core/Src/bno055.c **** 
9586:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9587:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20827              		.loc 1 9587 5 view .LVU5671
 20828              		.loc 1 9587 18 is_stmt 0 view .LVU5672
 20829 000e 264B     		ldr	r3, .L1486
 20830 0010 1B68     		ldr	r3, [r3]
 20831              		.loc 1 9587 8 view .LVU5673
 20832 0012 002B     		cmp	r3, #0
 20833 0014 44D0     		beq	.L1480
 20834 0016 0546     		mov	r5, r0
9588:Core/Src/bno055.c ****     {
9589:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9590:Core/Src/bno055.c ****     }
9591:Core/Src/bno055.c ****     else
9592:Core/Src/bno055.c ****     {
9593:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9594:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9595:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9596:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 20835              		.loc 1 9596 9 is_stmt 1 view .LVU5674
 20836              		.loc 1 9596 19 is_stmt 0 view .LVU5675
 20837 0018 0DF10600 		add	r0, sp, #6
 20838              	.LVL2537:
 20839              		.loc 1 9596 19 view .LVU5676
 20840 001c FFF7FEFF 		bl	bno055_get_operation_mode
 20841              	.LVL2538:
9597:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 20842              		.loc 1 9597 9 is_stmt 1 view .LVU5677
 20843              		.loc 1 9597 12 is_stmt 0 view .LVU5678
 20844 0020 0446     		mov	r4, r0
 20845 0022 60BB     		cbnz	r0, .L1481
9598:Core/Src/bno055.c ****         {
9599:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
ARM GAS  /tmp/ccWoU29M.s 			page 585


 20846              		.loc 1 9599 13 is_stmt 1 view .LVU5679
 20847              		.loc 1 9599 32 is_stmt 0 view .LVU5680
 20848 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 20849              		.loc 1 9599 16 view .LVU5681
 20850 0028 1BBB     		cbnz	r3, .L1484
 20851              	.LVL2539:
 20852              	.L1479:
9600:Core/Src/bno055.c ****             {
9601:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9602:Core/Src/bno055.c ****             }
9603:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 20853              		.loc 1 9603 13 is_stmt 1 view .LVU5682
 20854              		.loc 1 9603 16 is_stmt 0 view .LVU5683
 20855 002a 84BB     		cbnz	r4, .L1482
9604:Core/Src/bno055.c ****             {
9605:Core/Src/bno055.c ****                 /* Write the value of y-axis remap sign*/
9606:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20856              		.loc 1 9606 17 is_stmt 1 view .LVU5684
 20857              		.loc 1 9606 36 is_stmt 0 view .LVU5685
 20858 002c 1E4B     		ldr	r3, .L1486
 20859 002e 1868     		ldr	r0, [r3]
 20860 0030 0469     		ldr	r4, [r0, #16]
 20861              	.LVL2540:
 20862              		.loc 1 9606 28 view .LVU5686
 20863 0032 0123     		movs	r3, #1
 20864 0034 0DF10702 		add	r2, sp, #7
 20865 0038 4221     		movs	r1, #66
 20866 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20867 003c A047     		blx	r4
 20868              	.LVL2541:
9607:Core/Src/bno055.c ****                                                           BNO055_REMAP_Y_SIGN_REG,
9608:Core/Src/bno055.c ****                                                           &data_u8r,
9609:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9610:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 20869              		.loc 1 9610 17 is_stmt 1 view .LVU5687
 20870              		.loc 1 9610 20 is_stmt 0 view .LVU5688
 20871 003e 0446     		mov	r4, r0
 20872 0040 F8B9     		cbnz	r0, .L1478
9611:Core/Src/bno055.c ****                 {
9612:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_Y_SIGN, remap_y_sign_u8);
 20873              		.loc 1 9612 21 is_stmt 1 view .LVU5689
 20874              		.loc 1 9612 32 is_stmt 0 view .LVU5690
 20875 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 20876              	.LVL2542:
 20877              		.loc 1 9612 32 view .LVU5691
 20878 0046 20F00200 		bic	r0, r0, #2
 20879 004a 43B2     		sxtb	r3, r0
 20880 004c 6800     		lsls	r0, r5, #1
 20881 004e 00F00200 		and	r0, r0, #2
 20882 0052 1843     		orrs	r0, r0, r3
 20883              		.loc 1 9612 30 view .LVU5692
 20884 0054 8DF80700 		strb	r0, [sp, #7]
9613:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20885              		.loc 1 9613 21 is_stmt 1 view .LVU5693
 20886              		.loc 1 9613 41 is_stmt 0 view .LVU5694
 20887 0058 134B     		ldr	r3, .L1486
 20888 005a 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccWoU29M.s 			page 586


 20889 005c C568     		ldr	r5, [r0, #12]
 20890              		.loc 1 9613 33 view .LVU5695
 20891 005e 0123     		movs	r3, #1
 20892 0060 0DF10702 		add	r2, sp, #7
 20893 0064 4221     		movs	r1, #66
 20894 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20895 0068 A847     		blx	r5
 20896              	.LVL2543:
 20897              		.loc 1 9613 30 view .LVU5696
 20898 006a 54FA80F4 		uxtab	r4, r4, r0
 20899 006e 64B2     		sxtb	r4, r4
 20900              	.LVL2544:
 20901              		.loc 1 9613 30 view .LVU5697
 20902 0070 07E0     		b	.L1478
 20903              	.LVL2545:
 20904              	.L1484:
9601:Core/Src/bno055.c ****             }
 20905              		.loc 1 9601 17 is_stmt 1 view .LVU5698
9601:Core/Src/bno055.c ****             }
 20906              		.loc 1 9601 28 is_stmt 0 view .LVU5699
 20907 0072 FFF7FEFF 		bl	bno055_set_operation_mode
 20908              	.LVL2546:
9601:Core/Src/bno055.c ****             }
 20909              		.loc 1 9601 25 view .LVU5700
 20910 0076 54FA80F4 		uxtab	r4, r4, r0
 20911 007a 64B2     		sxtb	r4, r4
 20912              	.LVL2547:
9601:Core/Src/bno055.c ****             }
 20913              		.loc 1 9601 25 view .LVU5701
 20914 007c D5E7     		b	.L1479
 20915              	.LVL2548:
 20916              	.L1481:
9614:Core/Src/bno055.c ****                                                                 BNO055_REMAP_Y_SIGN_REG,
9615:Core/Src/bno055.c ****                                                                 &data_u8r,
9616:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9617:Core/Src/bno055.c ****                 }
9618:Core/Src/bno055.c ****             }
9619:Core/Src/bno055.c ****             else
9620:Core/Src/bno055.c ****             {
9621:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9622:Core/Src/bno055.c ****             }
9623:Core/Src/bno055.c ****         }
9624:Core/Src/bno055.c ****         else
9625:Core/Src/bno055.c ****         {
9626:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 20917              		.loc 1 9626 22 view .LVU5702
 20918 007e 4FF0FF34 		mov	r4, #-1
 20919              	.LVL2549:
 20920              	.L1478:
9627:Core/Src/bno055.c ****         }
9628:Core/Src/bno055.c ****     }
9629:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20921              		.loc 1 9629 5 is_stmt 1 view .LVU5703
 20922              		.loc 1 9629 24 is_stmt 0 view .LVU5704
 20923 0082 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 20924              		.loc 1 9629 8 view .LVU5705
 20925 0086 28B9     		cbnz	r0, .L1485
ARM GAS  /tmp/ccWoU29M.s 			page 587


 20926              	.LVL2550:
 20927              	.L1477:
9630:Core/Src/bno055.c ****     {
9631:Core/Src/bno055.c ****         /* set the operation mode
9632:Core/Src/bno055.c ****          * of previous operation mode*/
9633:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9634:Core/Src/bno055.c ****     }
9635:Core/Src/bno055.c **** 
9636:Core/Src/bno055.c ****     return com_rslt;
9637:Core/Src/bno055.c **** }
 20928              		.loc 1 9637 1 view .LVU5706
 20929 0088 2046     		mov	r0, r4
 20930 008a 03B0     		add	sp, sp, #12
 20931              	.LCFI651:
 20932              		.cfi_remember_state
 20933              		.cfi_def_cfa_offset 12
 20934              		@ sp needed
 20935 008c 30BD     		pop	{r4, r5, pc}
 20936              	.LVL2551:
 20937              	.L1482:
 20938              	.LCFI652:
 20939              		.cfi_restore_state
9621:Core/Src/bno055.c ****             }
 20940              		.loc 1 9621 26 view .LVU5707
 20941 008e 4FF0FF34 		mov	r4, #-1
 20942              	.LVL2552:
9621:Core/Src/bno055.c ****             }
 20943              		.loc 1 9621 26 view .LVU5708
 20944 0092 F6E7     		b	.L1478
 20945              	.LVL2553:
 20946              	.L1485:
9633:Core/Src/bno055.c ****     }
 20947              		.loc 1 9633 9 is_stmt 1 view .LVU5709
9633:Core/Src/bno055.c ****     }
 20948              		.loc 1 9633 21 is_stmt 0 view .LVU5710
 20949 0094 FFF7FEFF 		bl	bno055_set_operation_mode
 20950              	.LVL2554:
9633:Core/Src/bno055.c ****     }
 20951              		.loc 1 9633 18 view .LVU5711
 20952 0098 54FA80F4 		uxtab	r4, r4, r0
 20953              	.LVL2555:
9633:Core/Src/bno055.c ****     }
 20954              		.loc 1 9633 18 view .LVU5712
 20955 009c 64B2     		sxtb	r4, r4
 20956              	.LVL2556:
9633:Core/Src/bno055.c ****     }
 20957              		.loc 1 9633 18 view .LVU5713
 20958 009e F3E7     		b	.L1477
 20959              	.LVL2557:
 20960              	.L1480:
9589:Core/Src/bno055.c ****     }
 20961              		.loc 1 9589 16 view .LVU5714
 20962 00a0 6FF07E04 		mvn	r4, #126
 20963 00a4 F0E7     		b	.L1477
 20964              	.L1487:
 20965 00a6 00BF     		.align	2
 20966              	.L1486:
ARM GAS  /tmp/ccWoU29M.s 			page 588


 20967 00a8 00000000 		.word	.LANCHOR0
 20968              		.cfi_endproc
 20969              	.LFE164:
 20971              		.section	.text.bno055_get_remap_z_sign,"ax",%progbits
 20972              		.align	1
 20973              		.global	bno055_get_remap_z_sign
 20974              		.syntax unified
 20975              		.thumb
 20976              		.thumb_func
 20977              		.fpu fpv4-sp-d16
 20979              	bno055_get_remap_z_sign:
 20980              	.LVL2558:
 20981              	.LFB165:
9638:Core/Src/bno055.c **** 
9639:Core/Src/bno055.c **** /*!
9640:Core/Src/bno055.c ****  *  @brief This API used to read the z-axis remap
9641:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 0
9642:Core/Src/bno055.c ****  *
9643:Core/Src/bno055.c ****  *  @param remap_z_sign_u8 : The value of z-axis remap sign
9644:Core/Src/bno055.c ****  *
9645:Core/Src/bno055.c ****  *    remap_z_sign_u8  |   result
9646:Core/Src/bno055.c ****  *   ------------------- |--------------------
9647:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9648:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9649:Core/Src/bno055.c ****  *
9650:Core/Src/bno055.c ****  *  @return results of bus communication function
9651:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9652:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9653:Core/Src/bno055.c ****  *
9654:Core/Src/bno055.c ****  */
9655:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_remap_z_sign(u8 *remap_z_sign_u8)
9656:Core/Src/bno055.c **** {
 20982              		.loc 1 9656 1 is_stmt 1 view -0
 20983              		.cfi_startproc
 20984              		@ args = 0, pretend = 0, frame = 8
 20985              		@ frame_needed = 0, uses_anonymous_args = 0
 20986              		.loc 1 9656 1 is_stmt 0 view .LVU5716
 20987 0000 30B5     		push	{r4, r5, lr}
 20988              	.LCFI653:
 20989              		.cfi_def_cfa_offset 12
 20990              		.cfi_offset 4, -12
 20991              		.cfi_offset 5, -8
 20992              		.cfi_offset 14, -4
 20993 0002 83B0     		sub	sp, sp, #12
 20994              	.LCFI654:
 20995              		.cfi_def_cfa_offset 24
9657:Core/Src/bno055.c ****     /* Variable used to return value of
9658:Core/Src/bno055.c ****      * communication routine*/
9659:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20996              		.loc 1 9659 5 is_stmt 1 view .LVU5717
 20997              	.LVL2559:
9660:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20998              		.loc 1 9660 5 view .LVU5718
 20999              		.loc 1 9660 8 is_stmt 0 view .LVU5719
 21000 0004 0023     		movs	r3, #0
 21001 0006 8DF80730 		strb	r3, [sp, #7]
9661:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 589


 21002              		.loc 1 9661 5 is_stmt 1 view .LVU5720
 21003              	.LVL2560:
9662:Core/Src/bno055.c **** 
9663:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9664:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 21004              		.loc 1 9664 5 view .LVU5721
 21005              		.loc 1 9664 18 is_stmt 0 view .LVU5722
 21006 000a 134B     		ldr	r3, .L1496
 21007 000c 1B68     		ldr	r3, [r3]
 21008              		.loc 1 9664 8 view .LVU5723
 21009 000e E3B1     		cbz	r3, .L1492
 21010 0010 0446     		mov	r4, r0
9665:Core/Src/bno055.c ****     {
9666:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9667:Core/Src/bno055.c ****     }
9668:Core/Src/bno055.c ****     else
9669:Core/Src/bno055.c ****     {
9670:Core/Src/bno055.c ****         /*condition check for page, z-axis remap sign is
9671:Core/Src/bno055.c ****          * available in the page zero*/
9672:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 21011              		.loc 1 9672 9 is_stmt 1 view .LVU5724
 21012              		.loc 1 9672 21 is_stmt 0 view .LVU5725
 21013 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 21014              		.loc 1 9672 12 view .LVU5726
 21015 0014 9BB9     		cbnz	r3, .L1495
 21016              	.LVL2561:
 21017              	.L1490:
9673:Core/Src/bno055.c ****         {
9674:Core/Src/bno055.c ****             /* Write the page zero*/
9675:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9676:Core/Src/bno055.c ****         }
9677:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 21018              		.loc 1 9677 53 discriminator 1 view .LVU5727
 21019 0016 104B     		ldr	r3, .L1496
 21020 0018 1B68     		ldr	r3, [r3]
 21021 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 21022              		.loc 1 9677 41 discriminator 1 view .LVU5728
 21023 001c C3B9     		cbnz	r3, .L1493
 21024              	.L1491:
9678:Core/Src/bno055.c ****         {
9679:Core/Src/bno055.c ****             /* Read the value of z-axis remap sign*/
9680:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21025              		.loc 1 9680 13 is_stmt 1 view .LVU5729
 21026              		.loc 1 9680 32 is_stmt 0 view .LVU5730
 21027 001e 0E4B     		ldr	r3, .L1496
 21028 0020 1868     		ldr	r0, [r3]
 21029 0022 0569     		ldr	r5, [r0, #16]
 21030              		.loc 1 9680 24 view .LVU5731
 21031 0024 0123     		movs	r3, #1
 21032 0026 0DF10702 		add	r2, sp, #7
 21033 002a 4221     		movs	r1, #66
 21034 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21035 002e A847     		blx	r5
 21036              	.LVL2562:
9681:Core/Src/bno055.c ****                                                       BNO055_REMAP_Z_SIGN_REG,
9682:Core/Src/bno055.c ****                                                       &data_u8r,
9683:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/ccWoU29M.s 			page 590


9684:Core/Src/bno055.c ****             *remap_z_sign_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_REMAP_Z_SIGN);
 21037              		.loc 1 9684 13 is_stmt 1 view .LVU5732
 21038              		.loc 1 9684 32 is_stmt 0 view .LVU5733
 21039 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 21040 0034 03F00103 		and	r3, r3, #1
 21041              		.loc 1 9684 30 view .LVU5734
 21042 0038 2370     		strb	r3, [r4]
 21043              	.LVL2563:
 21044              	.L1489:
9685:Core/Src/bno055.c ****         }
9686:Core/Src/bno055.c ****         else
9687:Core/Src/bno055.c ****         {
9688:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9689:Core/Src/bno055.c ****         }
9690:Core/Src/bno055.c ****     }
9691:Core/Src/bno055.c **** 
9692:Core/Src/bno055.c ****     return com_rslt;
9693:Core/Src/bno055.c **** }
 21045              		.loc 1 9693 1 view .LVU5735
 21046 003a 03B0     		add	sp, sp, #12
 21047              	.LCFI655:
 21048              		.cfi_remember_state
 21049              		.cfi_def_cfa_offset 12
 21050              		@ sp needed
 21051 003c 30BD     		pop	{r4, r5, pc}
 21052              	.LVL2564:
 21053              	.L1495:
 21054              	.LCFI656:
 21055              		.cfi_restore_state
9675:Core/Src/bno055.c ****         }
 21056              		.loc 1 9675 13 is_stmt 1 view .LVU5736
9675:Core/Src/bno055.c ****         }
 21057              		.loc 1 9675 23 is_stmt 0 view .LVU5737
 21058 003e 0020     		movs	r0, #0
 21059              	.LVL2565:
9675:Core/Src/bno055.c ****         }
 21060              		.loc 1 9675 23 view .LVU5738
 21061 0040 FFF7FEFF 		bl	bno055_write_page_id
 21062              	.LVL2566:
9677:Core/Src/bno055.c ****         {
 21063              		.loc 1 9677 9 is_stmt 1 view .LVU5739
9677:Core/Src/bno055.c ****         {
 21064              		.loc 1 9677 12 is_stmt 0 view .LVU5740
 21065 0044 0028     		cmp	r0, #0
 21066 0046 EAD0     		beq	.L1491
 21067 0048 E5E7     		b	.L1490
 21068              	.LVL2567:
 21069              	.L1492:
9666:Core/Src/bno055.c ****     }
 21070              		.loc 1 9666 16 view .LVU5741
 21071 004a 6FF07E00 		mvn	r0, #126
 21072              	.LVL2568:
9666:Core/Src/bno055.c ****     }
 21073              		.loc 1 9666 16 view .LVU5742
 21074 004e F4E7     		b	.L1489
 21075              	.LVL2569:
 21076              	.L1493:
ARM GAS  /tmp/ccWoU29M.s 			page 591


9688:Core/Src/bno055.c ****         }
 21077              		.loc 1 9688 22 view .LVU5743
 21078 0050 4FF0FF30 		mov	r0, #-1
 21079 0054 F1E7     		b	.L1489
 21080              	.L1497:
 21081 0056 00BF     		.align	2
 21082              	.L1496:
 21083 0058 00000000 		.word	.LANCHOR0
 21084              		.cfi_endproc
 21085              	.LFE165:
 21087              		.section	.text.bno055_set_remap_z_sign,"ax",%progbits
 21088              		.align	1
 21089              		.global	bno055_set_remap_z_sign
 21090              		.syntax unified
 21091              		.thumb
 21092              		.thumb_func
 21093              		.fpu fpv4-sp-d16
 21095              	bno055_set_remap_z_sign:
 21096              	.LVL2570:
 21097              	.LFB166:
9694:Core/Src/bno055.c **** 
9695:Core/Src/bno055.c **** /*!
9696:Core/Src/bno055.c ****  *  @brief This API used to write the z-axis remap
9697:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 0
9698:Core/Src/bno055.c ****  *
9699:Core/Src/bno055.c ****  *  @param remap_z_sign_u8 : The value of z-axis remap sign
9700:Core/Src/bno055.c ****  *
9701:Core/Src/bno055.c ****  *    remap_z_sign_u8  |   result
9702:Core/Src/bno055.c ****  *   ------------------- |--------------------
9703:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9704:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9705:Core/Src/bno055.c ****  *
9706:Core/Src/bno055.c ****  *  @return results of bus communication function
9707:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9708:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9709:Core/Src/bno055.c ****  *
9710:Core/Src/bno055.c ****  */
9711:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_remap_z_sign(u8 remap_z_sign_u8)
9712:Core/Src/bno055.c **** {
 21098              		.loc 1 9712 1 is_stmt 1 view -0
 21099              		.cfi_startproc
 21100              		@ args = 0, pretend = 0, frame = 8
 21101              		@ frame_needed = 0, uses_anonymous_args = 0
 21102              		.loc 1 9712 1 is_stmt 0 view .LVU5745
 21103 0000 30B5     		push	{r4, r5, lr}
 21104              	.LCFI657:
 21105              		.cfi_def_cfa_offset 12
 21106              		.cfi_offset 4, -12
 21107              		.cfi_offset 5, -8
 21108              		.cfi_offset 14, -4
 21109 0002 83B0     		sub	sp, sp, #12
 21110              	.LCFI658:
 21111              		.cfi_def_cfa_offset 24
9713:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 21112              		.loc 1 9713 5 is_stmt 1 view .LVU5746
 21113              	.LVL2571:
9714:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccWoU29M.s 			page 592


 21114              		.loc 1 9714 5 view .LVU5747
 21115              		.loc 1 9714 8 is_stmt 0 view .LVU5748
 21116 0004 0023     		movs	r3, #0
 21117 0006 8DF80730 		strb	r3, [sp, #7]
9715:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 21118              		.loc 1 9715 5 is_stmt 1 view .LVU5749
 21119              		.loc 1 9715 8 is_stmt 0 view .LVU5750
 21120 000a 8DF80630 		strb	r3, [sp, #6]
9716:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 21121              		.loc 1 9716 5 is_stmt 1 view .LVU5751
 21122              	.LVL2572:
9717:Core/Src/bno055.c **** 
9718:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9719:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 21123              		.loc 1 9719 5 view .LVU5752
 21124              		.loc 1 9719 18 is_stmt 0 view .LVU5753
 21125 000e 254B     		ldr	r3, .L1508
 21126 0010 1B68     		ldr	r3, [r3]
 21127              		.loc 1 9719 8 view .LVU5754
 21128 0012 002B     		cmp	r3, #0
 21129 0014 43D0     		beq	.L1502
 21130 0016 0546     		mov	r5, r0
9720:Core/Src/bno055.c ****     {
9721:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9722:Core/Src/bno055.c ****     }
9723:Core/Src/bno055.c ****     else
9724:Core/Src/bno055.c ****     {
9725:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9726:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9727:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9728:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 21131              		.loc 1 9728 9 is_stmt 1 view .LVU5755
 21132              		.loc 1 9728 19 is_stmt 0 view .LVU5756
 21133 0018 0DF10600 		add	r0, sp, #6
 21134              	.LVL2573:
 21135              		.loc 1 9728 19 view .LVU5757
 21136 001c FFF7FEFF 		bl	bno055_get_operation_mode
 21137              	.LVL2574:
9729:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 21138              		.loc 1 9729 9 is_stmt 1 view .LVU5758
 21139              		.loc 1 9729 12 is_stmt 0 view .LVU5759
 21140 0020 0446     		mov	r4, r0
 21141 0022 58BB     		cbnz	r0, .L1503
9730:Core/Src/bno055.c ****         {
9731:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 21142              		.loc 1 9731 13 is_stmt 1 view .LVU5760
 21143              		.loc 1 9731 32 is_stmt 0 view .LVU5761
 21144 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 21145              		.loc 1 9731 16 view .LVU5762
 21146 0028 13BB     		cbnz	r3, .L1506
 21147              	.LVL2575:
 21148              	.L1501:
9732:Core/Src/bno055.c ****             {
9733:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9734:Core/Src/bno055.c ****             }
9735:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 21149              		.loc 1 9735 13 is_stmt 1 view .LVU5763
ARM GAS  /tmp/ccWoU29M.s 			page 593


 21150              		.loc 1 9735 16 is_stmt 0 view .LVU5764
 21151 002a 7CBB     		cbnz	r4, .L1504
9736:Core/Src/bno055.c ****             {
9737:Core/Src/bno055.c ****                 /* Write the value of z-axis remap sign*/
9738:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21152              		.loc 1 9738 17 is_stmt 1 view .LVU5765
 21153              		.loc 1 9738 36 is_stmt 0 view .LVU5766
 21154 002c 1D4B     		ldr	r3, .L1508
 21155 002e 1868     		ldr	r0, [r3]
 21156 0030 0469     		ldr	r4, [r0, #16]
 21157              	.LVL2576:
 21158              		.loc 1 9738 28 view .LVU5767
 21159 0032 0123     		movs	r3, #1
 21160 0034 0DF10702 		add	r2, sp, #7
 21161 0038 4221     		movs	r1, #66
 21162 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21163 003c A047     		blx	r4
 21164              	.LVL2577:
9739:Core/Src/bno055.c ****                                                           BNO055_REMAP_Z_SIGN_REG,
9740:Core/Src/bno055.c ****                                                           &data_u8r,
9741:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9742:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21165              		.loc 1 9742 17 is_stmt 1 view .LVU5768
 21166              		.loc 1 9742 20 is_stmt 0 view .LVU5769
 21167 003e 0446     		mov	r4, r0
 21168 0040 F0B9     		cbnz	r0, .L1500
9743:Core/Src/bno055.c ****                 {
9744:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_Z_SIGN, remap_z_sign_u8);
 21169              		.loc 1 9744 21 is_stmt 1 view .LVU5770
 21170              		.loc 1 9744 32 is_stmt 0 view .LVU5771
 21171 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 21172              	.LVL2578:
 21173              		.loc 1 9744 32 view .LVU5772
 21174 0046 20F00100 		bic	r0, r0, #1
 21175 004a 43B2     		sxtb	r3, r0
 21176 004c 05F00100 		and	r0, r5, #1
 21177 0050 1843     		orrs	r0, r0, r3
 21178              		.loc 1 9744 30 view .LVU5773
 21179 0052 8DF80700 		strb	r0, [sp, #7]
9745:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21180              		.loc 1 9745 21 is_stmt 1 view .LVU5774
 21181              		.loc 1 9745 41 is_stmt 0 view .LVU5775
 21182 0056 134B     		ldr	r3, .L1508
 21183 0058 1868     		ldr	r0, [r3]
 21184 005a C568     		ldr	r5, [r0, #12]
 21185              		.loc 1 9745 33 view .LVU5776
 21186 005c 0123     		movs	r3, #1
 21187 005e 0DF10702 		add	r2, sp, #7
 21188 0062 4221     		movs	r1, #66
 21189 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21190 0066 A847     		blx	r5
 21191              	.LVL2579:
 21192              		.loc 1 9745 30 view .LVU5777
 21193 0068 54FA80F4 		uxtab	r4, r4, r0
 21194 006c 64B2     		sxtb	r4, r4
 21195              	.LVL2580:
 21196              		.loc 1 9745 30 view .LVU5778
ARM GAS  /tmp/ccWoU29M.s 			page 594


 21197 006e 07E0     		b	.L1500
 21198              	.LVL2581:
 21199              	.L1506:
9733:Core/Src/bno055.c ****             }
 21200              		.loc 1 9733 17 is_stmt 1 view .LVU5779
9733:Core/Src/bno055.c ****             }
 21201              		.loc 1 9733 28 is_stmt 0 view .LVU5780
 21202 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 21203              	.LVL2582:
9733:Core/Src/bno055.c ****             }
 21204              		.loc 1 9733 25 view .LVU5781
 21205 0074 54FA80F4 		uxtab	r4, r4, r0
 21206 0078 64B2     		sxtb	r4, r4
 21207              	.LVL2583:
9733:Core/Src/bno055.c ****             }
 21208              		.loc 1 9733 25 view .LVU5782
 21209 007a D6E7     		b	.L1501
 21210              	.LVL2584:
 21211              	.L1503:
9746:Core/Src/bno055.c ****                                                                 BNO055_REMAP_Z_SIGN_REG,
9747:Core/Src/bno055.c ****                                                                 &data_u8r,
9748:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9749:Core/Src/bno055.c ****                 }
9750:Core/Src/bno055.c ****             }
9751:Core/Src/bno055.c ****             else
9752:Core/Src/bno055.c ****             {
9753:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9754:Core/Src/bno055.c ****             }
9755:Core/Src/bno055.c ****         }
9756:Core/Src/bno055.c ****         else
9757:Core/Src/bno055.c ****         {
9758:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 21212              		.loc 1 9758 22 view .LVU5783
 21213 007c 4FF0FF34 		mov	r4, #-1
 21214              	.LVL2585:
 21215              	.L1500:
9759:Core/Src/bno055.c ****         }
9760:Core/Src/bno055.c ****     }
9761:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 21216              		.loc 1 9761 5 is_stmt 1 view .LVU5784
 21217              		.loc 1 9761 24 is_stmt 0 view .LVU5785
 21218 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 21219              		.loc 1 9761 8 view .LVU5786
 21220 0084 28B9     		cbnz	r0, .L1507
 21221              	.LVL2586:
 21222              	.L1499:
9762:Core/Src/bno055.c ****     {
9763:Core/Src/bno055.c ****         /* set the operation mode
9764:Core/Src/bno055.c ****          * of previous operation mode*/
9765:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9766:Core/Src/bno055.c ****     }
9767:Core/Src/bno055.c **** 
9768:Core/Src/bno055.c ****     return com_rslt;
9769:Core/Src/bno055.c **** }
 21223              		.loc 1 9769 1 view .LVU5787
 21224 0086 2046     		mov	r0, r4
 21225 0088 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccWoU29M.s 			page 595


 21226              	.LCFI659:
 21227              		.cfi_remember_state
 21228              		.cfi_def_cfa_offset 12
 21229              		@ sp needed
 21230 008a 30BD     		pop	{r4, r5, pc}
 21231              	.LVL2587:
 21232              	.L1504:
 21233              	.LCFI660:
 21234              		.cfi_restore_state
9753:Core/Src/bno055.c ****             }
 21235              		.loc 1 9753 26 view .LVU5788
 21236 008c 4FF0FF34 		mov	r4, #-1
 21237              	.LVL2588:
9753:Core/Src/bno055.c ****             }
 21238              		.loc 1 9753 26 view .LVU5789
 21239 0090 F6E7     		b	.L1500
 21240              	.LVL2589:
 21241              	.L1507:
9765:Core/Src/bno055.c ****     }
 21242              		.loc 1 9765 9 is_stmt 1 view .LVU5790
9765:Core/Src/bno055.c ****     }
 21243              		.loc 1 9765 21 is_stmt 0 view .LVU5791
 21244 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 21245              	.LVL2590:
9765:Core/Src/bno055.c ****     }
 21246              		.loc 1 9765 18 view .LVU5792
 21247 0096 54FA80F4 		uxtab	r4, r4, r0
 21248              	.LVL2591:
9765:Core/Src/bno055.c ****     }
 21249              		.loc 1 9765 18 view .LVU5793
 21250 009a 64B2     		sxtb	r4, r4
 21251              	.LVL2592:
9765:Core/Src/bno055.c ****     }
 21252              		.loc 1 9765 18 view .LVU5794
 21253 009c F3E7     		b	.L1499
 21254              	.LVL2593:
 21255              	.L1502:
9721:Core/Src/bno055.c ****     }
 21256              		.loc 1 9721 16 view .LVU5795
 21257 009e 6FF07E04 		mvn	r4, #126
 21258 00a2 F0E7     		b	.L1499
 21259              	.L1509:
 21260              		.align	2
 21261              	.L1508:
 21262 00a4 00000000 		.word	.LANCHOR0
 21263              		.cfi_endproc
 21264              	.LFE166:
 21266              		.section	.text.bno055_read_sic_matrix,"ax",%progbits
 21267              		.align	1
 21268              		.global	bno055_read_sic_matrix
 21269              		.syntax unified
 21270              		.thumb
 21271              		.thumb_func
 21272              		.fpu fpv4-sp-d16
 21274              	bno055_read_sic_matrix:
 21275              	.LVL2594:
 21276              	.LFB167:
ARM GAS  /tmp/ccWoU29M.s 			page 596


9770:Core/Src/bno055.c **** 
9771:Core/Src/bno055.c **** /*!
9772:Core/Src/bno055.c ****  *  @brief This API is used to read soft iron calibration matrix
9773:Core/Src/bno055.c ****  *  from the register 0x43 to 0x53 it is a 18 bytes of data
9774:Core/Src/bno055.c ****  *
9775:Core/Src/bno055.c ****  *  @param sic_matrix : The value of soft iron calibration matrix
9776:Core/Src/bno055.c ****  *
9777:Core/Src/bno055.c ****  *  sic_matrix         |           result
9778:Core/Src/bno055.c ****  * --------------------|----------------------------------
9779:Core/Src/bno055.c ****  *       sic_0         | soft iron calibration matrix zero
9780:Core/Src/bno055.c ****  *       sic_1         | soft iron calibration matrix one
9781:Core/Src/bno055.c ****  *       sic_2         | soft iron calibration matrix two
9782:Core/Src/bno055.c ****  *       sic_3         | soft iron calibration matrix three
9783:Core/Src/bno055.c ****  *       sic_4         | soft iron calibration matrix four
9784:Core/Src/bno055.c ****  *       sic_5         | soft iron calibration matrix five
9785:Core/Src/bno055.c ****  *       sic_6         | soft iron calibration matrix six
9786:Core/Src/bno055.c ****  *       sic_7         | soft iron calibration matrix seven
9787:Core/Src/bno055.c ****  *       sic_8         | soft iron calibration matrix eight
9788:Core/Src/bno055.c ****  *
9789:Core/Src/bno055.c ****  *
9790:Core/Src/bno055.c ****  *  @return results of bus communication function
9791:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9792:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9793:Core/Src/bno055.c ****  *
9794:Core/Src/bno055.c ****  *  @note : Each soft iron calibration matrix range from -32768 to +32767
9795:Core/Src/bno055.c ****  */
9796:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_sic_matrix(struct bno055_sic_matrix_t  *sic_matrix)
9797:Core/Src/bno055.c **** {
 21277              		.loc 1 9797 1 is_stmt 1 view -0
 21278              		.cfi_startproc
 21279              		@ args = 0, pretend = 0, frame = 24
 21280              		@ frame_needed = 0, uses_anonymous_args = 0
 21281              		.loc 1 9797 1 is_stmt 0 view .LVU5797
 21282 0000 70B5     		push	{r4, r5, r6, lr}
 21283              	.LCFI661:
 21284              		.cfi_def_cfa_offset 16
 21285              		.cfi_offset 4, -16
 21286              		.cfi_offset 5, -12
 21287              		.cfi_offset 6, -8
 21288              		.cfi_offset 14, -4
 21289 0002 86B0     		sub	sp, sp, #24
 21290              	.LCFI662:
 21291              		.cfi_def_cfa_offset 40
 21292 0004 0446     		mov	r4, r0
9798:Core/Src/bno055.c ****     /* Variable used to return value of
9799:Core/Src/bno055.c ****      * communication routine*/
9800:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 21293              		.loc 1 9800 5 is_stmt 1 view .LVU5798
 21294              	.LVL2595:
9801:Core/Src/bno055.c **** 
9802:Core/Src/bno055.c ****     /* Array holding the soft iron calibration matrix values
9803:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_0_LSB] - sic_0->LSB
9804:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_0_MSB] - sic_0->MSB
9805:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_1_LSB] - sic_1->LSB
9806:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_1_MSB] - sic_1->MSB
9807:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_2_LSB] - sic_2->LSB
9808:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_2_MSB] - sic_2->MSB
ARM GAS  /tmp/ccWoU29M.s 			page 597


9809:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_3_LSB] - sic_3->LSB
9810:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_3_MSB] - sic_3->MSB
9811:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_4_LSB] - sic_4->LSB
9812:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_4_MSB] - sic_4->MSB
9813:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_5_LSB] - sic_5->LSB
9814:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_5_MSB] - sic_5->MSB
9815:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_6_LSB] - sic_6->LSB
9816:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_6_MSB] - sic_6->MSB
9817:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_7_LSB] - sic_7->LSB
9818:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_7_MSB] - sic_7->MSB
9819:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_8_LSB] - sic_8->LSB
9820:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_8_MSB] - sic_8->MSB
9821:Core/Src/bno055.c ****      */
9822:Core/Src/bno055.c ****     u8 data_u8[BNO055_SOFT_IRON_CALIBRATION_MATRIX_SIZE] = {
 21295              		.loc 1 9822 5 view .LVU5799
 21296              		.loc 1 9822 8 is_stmt 0 view .LVU5800
 21297 0006 01AD     		add	r5, sp, #4
 21298 0008 354E     		ldr	r6, .L1519
 21299 000a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 21300              	.LVL2596:
 21301              		.loc 1 9822 8 view .LVU5801
 21302 000c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 21303 000e 3368     		ldr	r3, [r6]
 21304 0010 2B80     		strh	r3, [r5]	@ movhi
9823:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
9824:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
9825:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
9826:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
9827:Core/Src/bno055.c ****     };
9828:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 21305              		.loc 1 9828 5 is_stmt 1 view .LVU5802
 21306              	.LVL2597:
9829:Core/Src/bno055.c **** 
9830:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9831:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 21307              		.loc 1 9831 5 view .LVU5803
 21308              		.loc 1 9831 18 is_stmt 0 view .LVU5804
 21309 0012 344B     		ldr	r3, .L1519+4
 21310 0014 1B68     		ldr	r3, [r3]
 21311              		.loc 1 9831 8 view .LVU5805
 21312 0016 002B     		cmp	r3, #0
 21313 0018 58D0     		beq	.L1514
9832:Core/Src/bno055.c ****     {
9833:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9834:Core/Src/bno055.c ****     }
9835:Core/Src/bno055.c ****     else
9836:Core/Src/bno055.c ****     {
9837:Core/Src/bno055.c ****         /*condition check for page, soft iron calibration matrix is
9838:Core/Src/bno055.c ****          * available in the page zero*/
9839:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 21314              		.loc 1 9839 9 is_stmt 1 view .LVU5806
 21315              		.loc 1 9839 21 is_stmt 0 view .LVU5807
 21316 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 21317              		.loc 1 9839 12 view .LVU5808
 21318 001c 002B     		cmp	r3, #0
 21319 001e 4FD1     		bne	.L1518
 21320              	.LVL2598:
ARM GAS  /tmp/ccWoU29M.s 			page 598


 21321              	.L1512:
9840:Core/Src/bno055.c ****         {
9841:Core/Src/bno055.c ****             /* Write the page zero*/
9842:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9843:Core/Src/bno055.c ****         }
9844:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 21322              		.loc 1 9844 53 discriminator 1 view .LVU5809
 21323 0020 304B     		ldr	r3, .L1519+4
 21324 0022 1B68     		ldr	r3, [r3]
 21325 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 21326              		.loc 1 9844 41 discriminator 1 view .LVU5810
 21327 0026 002B     		cmp	r3, #0
 21328 0028 53D1     		bne	.L1515
 21329              	.L1513:
9845:Core/Src/bno055.c ****         {
9846:Core/Src/bno055.c ****             /* Read soft iron calibration matrix value
9847:Core/Src/bno055.c ****              * it is eighteen bytes of data */
9848:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21330              		.loc 1 9848 13 is_stmt 1 view .LVU5811
 21331              		.loc 1 9848 32 is_stmt 0 view .LVU5812
 21332 002a 2E4B     		ldr	r3, .L1519+4
 21333 002c 1868     		ldr	r0, [r3]
 21334 002e 0569     		ldr	r5, [r0, #16]
 21335              		.loc 1 9848 24 view .LVU5813
 21336 0030 1223     		movs	r3, #18
 21337 0032 01AA     		add	r2, sp, #4
 21338 0034 4321     		movs	r1, #67
 21339 0036 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21340 0038 A847     		blx	r5
 21341              	.LVL2599:
9849:Core/Src/bno055.c ****                                                       BNO055_SIC_MATRIX_0_LSB_REG,
9850:Core/Src/bno055.c ****                                                       data_u8,
9851:Core/Src/bno055.c ****                                                       BNO055_SOFT_IRON_CALIBRATION_MATRIX_SIZE);
9852:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 21342              		.loc 1 9852 13 is_stmt 1 view .LVU5814
 21343              		.loc 1 9852 16 is_stmt 0 view .LVU5815
 21344 003a 0028     		cmp	r0, #0
 21345 003c 4CD1     		bne	.L1516
9853:Core/Src/bno055.c ****             {
9854:Core/Src/bno055.c ****                 /*soft iron calibration matrix zero*/
9855:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_0_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21346              		.loc 1 9855 17 is_stmt 1 view .LVU5816
9856:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_0_LSB
9857:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_0_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21347              		.loc 1 9857 17 view .LVU5817
9858:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_0_MSB
9859:Core/Src/bno055.c ****                 sic_matrix->sic_0 =
 21348              		.loc 1 9859 17 view .LVU5818
9860:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_0_MSB])) << (BNO055_SHIFT_EIGH
 21349              		.loc 1 9860 34 is_stmt 0 view .LVU5819
 21350 003e 9DF90520 		ldrsb	r2, [sp, #5]
9861:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_0_LSB]));
 21351              		.loc 1 9861 35 view .LVU5820
 21352 0042 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
9860:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_0_MSB])) << (BNO055_SHIFT_EIGH
 21353              		.loc 1 9860 21 view .LVU5821
 21354 0046 43EA0223 		orr	r3, r3, r2, lsl #8
ARM GAS  /tmp/ccWoU29M.s 			page 599


9859:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_0_MSB])) << (BNO055_SHIFT_EIGH
 21355              		.loc 1 9859 35 view .LVU5822
 21356 004a 2380     		strh	r3, [r4]	@ movhi
9862:Core/Src/bno055.c **** 
9863:Core/Src/bno055.c ****                 /*soft iron calibration matrix one*/
9864:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_1_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21357              		.loc 1 9864 17 is_stmt 1 view .LVU5823
9865:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_1_LSB
9866:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_1_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21358              		.loc 1 9866 17 view .LVU5824
9867:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_1_MSB
9868:Core/Src/bno055.c ****                 sic_matrix->sic_1 =
 21359              		.loc 1 9868 17 view .LVU5825
9869:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_1_MSB])) << (BNO055_SHIFT_EIGH
 21360              		.loc 1 9869 34 is_stmt 0 view .LVU5826
 21361 004c 9DF90720 		ldrsb	r2, [sp, #7]
9870:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_1_LSB]));
 21362              		.loc 1 9870 35 view .LVU5827
 21363 0050 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
9869:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_1_MSB])) << (BNO055_SHIFT_EIGH
 21364              		.loc 1 9869 21 view .LVU5828
 21365 0054 43EA0223 		orr	r3, r3, r2, lsl #8
9868:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_1_MSB])) << (BNO055_SHIFT_EIGH
 21366              		.loc 1 9868 35 view .LVU5829
 21367 0058 6380     		strh	r3, [r4, #2]	@ movhi
9871:Core/Src/bno055.c **** 
9872:Core/Src/bno055.c ****                 /*soft iron calibration matrix two*/
9873:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_2_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21368              		.loc 1 9873 17 is_stmt 1 view .LVU5830
9874:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_2_LSB
9875:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_2_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21369              		.loc 1 9875 17 view .LVU5831
9876:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_2_MSB
9877:Core/Src/bno055.c ****                 sic_matrix->sic_2 =
 21370              		.loc 1 9877 17 view .LVU5832
9878:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_2_MSB])) << (BNO055_SHIFT_EIGH
 21371              		.loc 1 9878 34 is_stmt 0 view .LVU5833
 21372 005a 9DF90920 		ldrsb	r2, [sp, #9]
9879:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_2_LSB]));
 21373              		.loc 1 9879 35 view .LVU5834
 21374 005e 9DF80830 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
9878:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_2_MSB])) << (BNO055_SHIFT_EIGH
 21375              		.loc 1 9878 21 view .LVU5835
 21376 0062 43EA0223 		orr	r3, r3, r2, lsl #8
9877:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_2_MSB])) << (BNO055_SHIFT_EIGH
 21377              		.loc 1 9877 35 view .LVU5836
 21378 0066 A380     		strh	r3, [r4, #4]	@ movhi
9880:Core/Src/bno055.c **** 
9881:Core/Src/bno055.c ****                 /*soft iron calibration matrix three*/
9882:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_3_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21379              		.loc 1 9882 17 is_stmt 1 view .LVU5837
9883:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_3_LSB
9884:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_3_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21380              		.loc 1 9884 17 view .LVU5838
9885:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_3_LSB
9886:Core/Src/bno055.c ****                 sic_matrix->sic_3 =
 21381              		.loc 1 9886 17 view .LVU5839
ARM GAS  /tmp/ccWoU29M.s 			page 600


9887:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_3_MSB])) << (BNO055_SHIFT_EIGH
 21382              		.loc 1 9887 34 is_stmt 0 view .LVU5840
 21383 0068 9DF90B20 		ldrsb	r2, [sp, #11]
9888:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_3_LSB]));
 21384              		.loc 1 9888 35 view .LVU5841
 21385 006c 9DF80A30 		ldrb	r3, [sp, #10]	@ zero_extendqisi2
9887:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_3_MSB])) << (BNO055_SHIFT_EIGH
 21386              		.loc 1 9887 21 view .LVU5842
 21387 0070 43EA0223 		orr	r3, r3, r2, lsl #8
9886:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_3_MSB])) << (BNO055_SHIFT_EIGH
 21388              		.loc 1 9886 35 view .LVU5843
 21389 0074 E380     		strh	r3, [r4, #6]	@ movhi
9889:Core/Src/bno055.c **** 
9890:Core/Src/bno055.c ****                 /*soft iron calibration matrix four*/
9891:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_4_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21390              		.loc 1 9891 17 is_stmt 1 view .LVU5844
9892:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_4_LSB
9893:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_4_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21391              		.loc 1 9893 17 view .LVU5845
9894:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_4_LSB
9895:Core/Src/bno055.c ****                 sic_matrix->sic_4 =
 21392              		.loc 1 9895 17 view .LVU5846
9896:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_4_MSB])) << (BNO055_SHIFT_EIGH
 21393              		.loc 1 9896 34 is_stmt 0 view .LVU5847
 21394 0076 9DF90D20 		ldrsb	r2, [sp, #13]
9897:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_4_LSB]));
 21395              		.loc 1 9897 35 view .LVU5848
 21396 007a 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
9896:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_4_MSB])) << (BNO055_SHIFT_EIGH
 21397              		.loc 1 9896 21 view .LVU5849
 21398 007e 43EA0223 		orr	r3, r3, r2, lsl #8
9895:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_4_MSB])) << (BNO055_SHIFT_EIGH
 21399              		.loc 1 9895 35 view .LVU5850
 21400 0082 2381     		strh	r3, [r4, #8]	@ movhi
9898:Core/Src/bno055.c **** 
9899:Core/Src/bno055.c ****                 /*soft iron calibration matrix five*/
9900:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_5_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21401              		.loc 1 9900 17 is_stmt 1 view .LVU5851
9901:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_5_LSB
9902:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_5_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21402              		.loc 1 9902 17 view .LVU5852
9903:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_5_LSB
9904:Core/Src/bno055.c ****                 sic_matrix->sic_5 =
 21403              		.loc 1 9904 17 view .LVU5853
9905:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_5_MSB])) << (BNO055_SHIFT_EIGH
 21404              		.loc 1 9905 34 is_stmt 0 view .LVU5854
 21405 0084 9DF90F20 		ldrsb	r2, [sp, #15]
9906:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_5_LSB]));
 21406              		.loc 1 9906 35 view .LVU5855
 21407 0088 9DF80E30 		ldrb	r3, [sp, #14]	@ zero_extendqisi2
9905:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_5_MSB])) << (BNO055_SHIFT_EIGH
 21408              		.loc 1 9905 21 view .LVU5856
 21409 008c 43EA0223 		orr	r3, r3, r2, lsl #8
9904:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_5_MSB])) << (BNO055_SHIFT_EIGH
 21410              		.loc 1 9904 35 view .LVU5857
 21411 0090 6381     		strh	r3, [r4, #10]	@ movhi
9907:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 601


9908:Core/Src/bno055.c ****                 /*soft iron calibration matrix six*/
9909:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_6_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21412              		.loc 1 9909 17 is_stmt 1 view .LVU5858
9910:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_6_LSB
9911:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_6_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21413              		.loc 1 9911 17 view .LVU5859
9912:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_6_LSB
9913:Core/Src/bno055.c ****                 sic_matrix->sic_6 =
 21414              		.loc 1 9913 17 view .LVU5860
9914:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_6_MSB])) << (BNO055_SHIFT_EIGH
 21415              		.loc 1 9914 34 is_stmt 0 view .LVU5861
 21416 0092 9DF91120 		ldrsb	r2, [sp, #17]
9915:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_6_LSB]));
 21417              		.loc 1 9915 35 view .LVU5862
 21418 0096 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
9914:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_6_MSB])) << (BNO055_SHIFT_EIGH
 21419              		.loc 1 9914 21 view .LVU5863
 21420 009a 43EA0223 		orr	r3, r3, r2, lsl #8
9913:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_6_MSB])) << (BNO055_SHIFT_EIGH
 21421              		.loc 1 9913 35 view .LVU5864
 21422 009e A381     		strh	r3, [r4, #12]	@ movhi
9916:Core/Src/bno055.c **** 
9917:Core/Src/bno055.c ****                 /*soft iron calibration matrix seven*/
9918:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_7_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21423              		.loc 1 9918 17 is_stmt 1 view .LVU5865
9919:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_7_LSB
9920:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_7_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21424              		.loc 1 9920 17 view .LVU5866
9921:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_7_LSB
9922:Core/Src/bno055.c ****                 sic_matrix->sic_7 =
 21425              		.loc 1 9922 17 view .LVU5867
9923:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_7_MSB])) << (BNO055_SHIFT_EIGH
 21426              		.loc 1 9923 34 is_stmt 0 view .LVU5868
 21427 00a0 9DF91320 		ldrsb	r2, [sp, #19]
9924:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_7_LSB]));
 21428              		.loc 1 9924 35 view .LVU5869
 21429 00a4 9DF81230 		ldrb	r3, [sp, #18]	@ zero_extendqisi2
9923:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_7_MSB])) << (BNO055_SHIFT_EIGH
 21430              		.loc 1 9923 21 view .LVU5870
 21431 00a8 43EA0223 		orr	r3, r3, r2, lsl #8
9922:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_7_MSB])) << (BNO055_SHIFT_EIGH
 21432              		.loc 1 9922 35 view .LVU5871
 21433 00ac E381     		strh	r3, [r4, #14]	@ movhi
9925:Core/Src/bno055.c **** 
9926:Core/Src/bno055.c ****                 /*soft iron calibration matrix eight*/
9927:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_8_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21434              		.loc 1 9927 17 is_stmt 1 view .LVU5872
9928:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_8_LSB
9929:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_8_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21435              		.loc 1 9929 17 view .LVU5873
9930:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_8_LSB
9931:Core/Src/bno055.c ****                 sic_matrix->sic_8 =
 21436              		.loc 1 9931 17 view .LVU5874
9932:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_8_MSB])) << (BNO055_SHIFT_EIGH
 21437              		.loc 1 9932 34 is_stmt 0 view .LVU5875
 21438 00ae 9DF91520 		ldrsb	r2, [sp, #21]
9933:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_8_LSB]));
ARM GAS  /tmp/ccWoU29M.s 			page 602


 21439              		.loc 1 9933 35 view .LVU5876
 21440 00b2 9DF81430 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
9932:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_8_MSB])) << (BNO055_SHIFT_EIGH
 21441              		.loc 1 9932 21 view .LVU5877
 21442 00b6 43EA0223 		orr	r3, r3, r2, lsl #8
9931:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_8_MSB])) << (BNO055_SHIFT_EIGH
 21443              		.loc 1 9931 35 view .LVU5878
 21444 00ba 2382     		strh	r3, [r4, #16]	@ movhi
 21445              	.LVL2600:
 21446              	.L1511:
9934:Core/Src/bno055.c ****             }
9935:Core/Src/bno055.c ****             else
9936:Core/Src/bno055.c ****             {
9937:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9938:Core/Src/bno055.c ****             }
9939:Core/Src/bno055.c ****         }
9940:Core/Src/bno055.c ****         else
9941:Core/Src/bno055.c ****         {
9942:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9943:Core/Src/bno055.c ****         }
9944:Core/Src/bno055.c ****     }
9945:Core/Src/bno055.c **** 
9946:Core/Src/bno055.c ****     return com_rslt;
9947:Core/Src/bno055.c **** }
 21447              		.loc 1 9947 1 view .LVU5879
 21448 00bc 06B0     		add	sp, sp, #24
 21449              	.LCFI663:
 21450              		.cfi_remember_state
 21451              		.cfi_def_cfa_offset 16
 21452              		@ sp needed
 21453 00be 70BD     		pop	{r4, r5, r6, pc}
 21454              	.LVL2601:
 21455              	.L1518:
 21456              	.LCFI664:
 21457              		.cfi_restore_state
9842:Core/Src/bno055.c ****         }
 21458              		.loc 1 9842 13 is_stmt 1 view .LVU5880
9842:Core/Src/bno055.c ****         }
 21459              		.loc 1 9842 23 is_stmt 0 view .LVU5881
 21460 00c0 0020     		movs	r0, #0
 21461 00c2 FFF7FEFF 		bl	bno055_write_page_id
 21462              	.LVL2602:
9844:Core/Src/bno055.c ****         {
 21463              		.loc 1 9844 9 is_stmt 1 view .LVU5882
9844:Core/Src/bno055.c ****         {
 21464              		.loc 1 9844 12 is_stmt 0 view .LVU5883
 21465 00c6 0028     		cmp	r0, #0
 21466 00c8 AFD0     		beq	.L1513
 21467 00ca A9E7     		b	.L1512
 21468              	.LVL2603:
 21469              	.L1514:
9833:Core/Src/bno055.c ****     }
 21470              		.loc 1 9833 16 view .LVU5884
 21471 00cc 6FF07E00 		mvn	r0, #126
 21472 00d0 F4E7     		b	.L1511
 21473              	.LVL2604:
 21474              	.L1515:
ARM GAS  /tmp/ccWoU29M.s 			page 603


9942:Core/Src/bno055.c ****         }
 21475              		.loc 1 9942 22 view .LVU5885
 21476 00d2 4FF0FF30 		mov	r0, #-1
 21477 00d6 F1E7     		b	.L1511
 21478              	.LVL2605:
 21479              	.L1516:
9937:Core/Src/bno055.c ****             }
 21480              		.loc 1 9937 26 view .LVU5886
 21481 00d8 4FF0FF30 		mov	r0, #-1
 21482              	.LVL2606:
9937:Core/Src/bno055.c ****             }
 21483              		.loc 1 9937 26 view .LVU5887
 21484 00dc EEE7     		b	.L1511
 21485              	.L1520:
 21486 00de 00BF     		.align	2
 21487              	.L1519:
 21488 00e0 10000000 		.word	.LANCHOR1+16
 21489 00e4 00000000 		.word	.LANCHOR0
 21490              		.cfi_endproc
 21491              	.LFE167:
 21493              		.section	.text.bno055_write_sic_matrix,"ax",%progbits
 21494              		.align	1
 21495              		.global	bno055_write_sic_matrix
 21496              		.syntax unified
 21497              		.thumb
 21498              		.thumb_func
 21499              		.fpu fpv4-sp-d16
 21501              	bno055_write_sic_matrix:
 21502              	.LVL2607:
 21503              	.LFB168:
9948:Core/Src/bno055.c **** 
9949:Core/Src/bno055.c **** /*!
9950:Core/Src/bno055.c ****  *  @brief This API is used to write soft iron calibration matrix
9951:Core/Src/bno055.c ****  *  from the register 0x43 to 0x53 it is a 18 bytes of data
9952:Core/Src/bno055.c ****  *
9953:Core/Src/bno055.c ****  *  @param sic_matrix : The value of soft iron calibration matrix
9954:Core/Src/bno055.c ****  *
9955:Core/Src/bno055.c ****  *  sic_matrix         |           result
9956:Core/Src/bno055.c ****  * --------------------|----------------------------------
9957:Core/Src/bno055.c ****  *       sic_0         | soft iron calibration matrix zero
9958:Core/Src/bno055.c ****  *       sic_1         | soft iron calibration matrix one
9959:Core/Src/bno055.c ****  *       sic_2         | soft iron calibration matrix two
9960:Core/Src/bno055.c ****  *       sic_3         | soft iron calibration matrix three
9961:Core/Src/bno055.c ****  *       sic_4         | soft iron calibration matrix four
9962:Core/Src/bno055.c ****  *       sic_5         | soft iron calibration matrix five
9963:Core/Src/bno055.c ****  *       sic_6         | soft iron calibration matrix six
9964:Core/Src/bno055.c ****  *       sic_7         | soft iron calibration matrix seven
9965:Core/Src/bno055.c ****  *       sic_8         | soft iron calibration matrix eight
9966:Core/Src/bno055.c ****  *
9967:Core/Src/bno055.c ****  *
9968:Core/Src/bno055.c ****  *  @return results of bus communication function
9969:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9970:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9971:Core/Src/bno055.c ****  *
9972:Core/Src/bno055.c ****  *  @note : Each soft iron calibration matrix range from -32768 to +32767
9973:Core/Src/bno055.c ****  */
9974:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_sic_matrix(struct bno055_sic_matrix_t  *sic_matrix)
ARM GAS  /tmp/ccWoU29M.s 			page 604


9975:Core/Src/bno055.c **** {
 21504              		.loc 1 9975 1 is_stmt 1 view -0
 21505              		.cfi_startproc
 21506              		@ args = 0, pretend = 0, frame = 8
 21507              		@ frame_needed = 0, uses_anonymous_args = 0
 21508              		.loc 1 9975 1 is_stmt 0 view .LVU5889
 21509 0000 70B5     		push	{r4, r5, r6, lr}
 21510              	.LCFI665:
 21511              		.cfi_def_cfa_offset 16
 21512              		.cfi_offset 4, -16
 21513              		.cfi_offset 5, -12
 21514              		.cfi_offset 6, -8
 21515              		.cfi_offset 14, -4
 21516 0002 82B0     		sub	sp, sp, #8
 21517              	.LCFI666:
 21518              		.cfi_def_cfa_offset 24
9976:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 21519              		.loc 1 9976 5 is_stmt 1 view .LVU5890
 21520              	.LVL2608:
9977:Core/Src/bno055.c ****     u8 data1_u8r = BNO055_INIT_VALUE;
 21521              		.loc 1 9977 5 view .LVU5891
9978:Core/Src/bno055.c ****     u8 data2_u8r = BNO055_INIT_VALUE;
 21522              		.loc 1 9978 5 view .LVU5892
 21523              		.loc 1 9978 8 is_stmt 0 view .LVU5893
 21524 0004 0023     		movs	r3, #0
 21525 0006 8DF80730 		strb	r3, [sp, #7]
9979:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 21526              		.loc 1 9979 5 is_stmt 1 view .LVU5894
 21527              		.loc 1 9979 8 is_stmt 0 view .LVU5895
 21528 000a 8DF80630 		strb	r3, [sp, #6]
9980:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 21529              		.loc 1 9980 5 is_stmt 1 view .LVU5896
 21530              	.LVL2609:
9981:Core/Src/bno055.c **** 
9982:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9983:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 21531              		.loc 1 9983 5 view .LVU5897
 21532              		.loc 1 9983 18 is_stmt 0 view .LVU5898
 21533 000e A74B     		ldr	r3, .L1548
 21534 0010 1B68     		ldr	r3, [r3]
 21535              		.loc 1 9983 8 view .LVU5899
 21536 0012 002B     		cmp	r3, #0
 21537 0014 00F04682 		beq	.L1542
 21538 0018 0546     		mov	r5, r0
9984:Core/Src/bno055.c ****     {
9985:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9986:Core/Src/bno055.c ****     }
9987:Core/Src/bno055.c ****     else
9988:Core/Src/bno055.c ****     {
9989:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9990:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9991:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9992:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 21539              		.loc 1 9992 9 is_stmt 1 view .LVU5900
 21540              		.loc 1 9992 19 is_stmt 0 view .LVU5901
 21541 001a 0DF10600 		add	r0, sp, #6
 21542              	.LVL2610:
ARM GAS  /tmp/ccWoU29M.s 			page 605


 21543              		.loc 1 9992 19 view .LVU5902
 21544 001e FFF7FEFF 		bl	bno055_get_operation_mode
 21545              	.LVL2611:
9993:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 21546              		.loc 1 9993 9 is_stmt 1 view .LVU5903
 21547              		.loc 1 9993 12 is_stmt 0 view .LVU5904
 21548 0022 0446     		mov	r4, r0
 21549 0024 0028     		cmp	r0, #0
 21550 0026 40F02C82 		bne	.L1543
9994:Core/Src/bno055.c ****         {
9995:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 21551              		.loc 1 9995 13 is_stmt 1 view .LVU5905
 21552              		.loc 1 9995 32 is_stmt 0 view .LVU5906
 21553 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 21554              		.loc 1 9995 16 view .LVU5907
 21555 002e 002B     		cmp	r3, #0
 21556 0030 40F02182 		bne	.L1546
 21557              	.LVL2612:
 21558              	.L1524:
9996:Core/Src/bno055.c ****             {
9997:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9998:Core/Src/bno055.c ****             }
9999:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 21559              		.loc 1 9999 13 is_stmt 1 view .LVU5908
 21560              		.loc 1 9999 16 is_stmt 0 view .LVU5909
 21561 0034 002C     		cmp	r4, #0
 21562 0036 40F02C82 		bne	.L1544
10000:Core/Src/bno055.c ****             {
10001:Core/Src/bno055.c ****                 /* write soft iron calibration
10002:Core/Src/bno055.c ****                  * matrix zero value*/
10003:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21563              		.loc 1 10003 17 is_stmt 1 view .LVU5910
 21564              		.loc 1 10003 36 is_stmt 0 view .LVU5911
 21565 003a 9C4B     		ldr	r3, .L1548
 21566 003c 1868     		ldr	r0, [r3]
 21567 003e 0469     		ldr	r4, [r0, #16]
 21568              	.LVL2613:
 21569              		.loc 1 10003 28 view .LVU5912
 21570 0040 0123     		movs	r3, #1
 21571 0042 0DF10702 		add	r2, sp, #7
 21572 0046 4321     		movs	r1, #67
 21573 0048 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21574 004a A047     		blx	r4
 21575              	.LVL2614:
10004:Core/Src/bno055.c ****                                                           BNO055_SIC_MATRIX_0_LSB_REG,
10005:Core/Src/bno055.c ****                                                           &data2_u8r,
10006:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
10007:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21576              		.loc 1 10007 17 is_stmt 1 view .LVU5913
 21577              		.loc 1 10007 20 is_stmt 0 view .LVU5914
 21578 004c 0446     		mov	r4, r0
 21579 004e 78B9     		cbnz	r0, .L1525
10008:Core/Src/bno055.c ****                 {
10009:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_0 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21580              		.loc 1 10009 21 is_stmt 1 view .LVU5915
 21581              		.loc 1 10009 49 is_stmt 0 view .LVU5916
 21582 0050 B5F90030 		ldrsh	r3, [r5]
ARM GAS  /tmp/ccWoU29M.s 			page 606


 21583              	.LVL2615:
10010:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_0_LSB, data1_u8r);
 21584              		.loc 1 10010 21 is_stmt 1 view .LVU5917
 21585              		.loc 1 10010 31 is_stmt 0 view .LVU5918
 21586 0054 8DF80730 		strb	r3, [sp, #7]
10011:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21587              		.loc 1 10011 21 is_stmt 1 view .LVU5919
 21588              		.loc 1 10011 41 is_stmt 0 view .LVU5920
 21589 0058 944B     		ldr	r3, .L1548
 21590              	.LVL2616:
 21591              		.loc 1 10011 41 view .LVU5921
 21592 005a 1868     		ldr	r0, [r3]
 21593              	.LVL2617:
 21594              		.loc 1 10011 41 view .LVU5922
 21595 005c C668     		ldr	r6, [r0, #12]
 21596              		.loc 1 10011 33 view .LVU5923
 21597 005e 0123     		movs	r3, #1
 21598 0060 0DF10702 		add	r2, sp, #7
 21599              	.LVL2618:
 21600              		.loc 1 10011 33 view .LVU5924
 21601 0064 4321     		movs	r1, #67
 21602 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21603 0068 B047     		blx	r6
 21604              	.LVL2619:
 21605              		.loc 1 10011 30 view .LVU5925
 21606 006a 54FA80F4 		uxtab	r4, r4, r0
 21607 006e 64B2     		sxtb	r4, r4
 21608              	.LVL2620:
 21609              	.L1525:
10012:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_0_LSB_REG,
10013:Core/Src/bno055.c ****                                                                 &data2_u8r,
10014:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10015:Core/Src/bno055.c ****                 }
10016:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21610              		.loc 1 10016 17 is_stmt 1 view .LVU5926
 21611              		.loc 1 10016 37 is_stmt 0 view .LVU5927
 21612 0070 8E4B     		ldr	r3, .L1548
 21613 0072 1868     		ldr	r0, [r3]
 21614 0074 0669     		ldr	r6, [r0, #16]
 21615              		.loc 1 10016 29 view .LVU5928
 21616 0076 0123     		movs	r3, #1
 21617 0078 0DF10702 		add	r2, sp, #7
 21618 007c 4421     		movs	r1, #68
 21619 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21620 0080 B047     		blx	r6
 21621              	.LVL2621:
 21622              		.loc 1 10016 26 view .LVU5929
 21623 0082 54FA80F4 		uxtab	r4, r4, r0
 21624              	.LVL2622:
 21625              		.loc 1 10016 26 view .LVU5930
 21626 0086 E6B2     		uxtb	r6, r4
 21627 0088 64B2     		sxtb	r4, r4
 21628              	.LVL2623:
10017:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_0_MSB_REG,
10018:Core/Src/bno055.c ****                                                            &data2_u8r,
10019:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10020:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/ccWoU29M.s 			page 607


 21629              		.loc 1 10020 17 is_stmt 1 view .LVU5931
 21630              		.loc 1 10020 20 is_stmt 0 view .LVU5932
 21631 008a 7CB9     		cbnz	r4, .L1526
10021:Core/Src/bno055.c ****                 {
10022:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_0 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21632              		.loc 1 10022 21 is_stmt 1 view .LVU5933
 21633              		.loc 1 10022 34 is_stmt 0 view .LVU5934
 21634 008c 95F90130 		ldrsb	r3, [r5, #1]
 21635              	.LVL2624:
10023:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_0_MSB, data1_u8r);
 21636              		.loc 1 10023 21 is_stmt 1 view .LVU5935
 21637              		.loc 1 10023 31 is_stmt 0 view .LVU5936
 21638 0090 8DF80730 		strb	r3, [sp, #7]
10024:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21639              		.loc 1 10024 21 is_stmt 1 view .LVU5937
 21640              		.loc 1 10024 41 is_stmt 0 view .LVU5938
 21641 0094 854B     		ldr	r3, .L1548
 21642              	.LVL2625:
 21643              		.loc 1 10024 41 view .LVU5939
 21644 0096 1868     		ldr	r0, [r3]
 21645 0098 C468     		ldr	r4, [r0, #12]
 21646              	.LVL2626:
 21647              		.loc 1 10024 33 view .LVU5940
 21648 009a 0123     		movs	r3, #1
 21649 009c 0DF10702 		add	r2, sp, #7
 21650              	.LVL2627:
 21651              		.loc 1 10024 33 view .LVU5941
 21652 00a0 4421     		movs	r1, #68
 21653 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21654 00a4 A047     		blx	r4
 21655              	.LVL2628:
 21656              		.loc 1 10024 30 view .LVU5942
 21657 00a6 56FA80F4 		uxtab	r4, r6, r0
 21658 00aa 64B2     		sxtb	r4, r4
 21659              	.LVL2629:
 21660              	.L1526:
10025:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_0_MSB_REG,
10026:Core/Src/bno055.c ****                                                                 &data2_u8r,
10027:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10028:Core/Src/bno055.c ****                 }
10029:Core/Src/bno055.c **** 
10030:Core/Src/bno055.c ****                 /* write soft iron calibration
10031:Core/Src/bno055.c ****                  * matrix one value*/
10032:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21661              		.loc 1 10032 17 is_stmt 1 view .LVU5943
 21662              		.loc 1 10032 37 is_stmt 0 view .LVU5944
 21663 00ac 7F4B     		ldr	r3, .L1548
 21664 00ae 1868     		ldr	r0, [r3]
 21665 00b0 0669     		ldr	r6, [r0, #16]
 21666              		.loc 1 10032 29 view .LVU5945
 21667 00b2 0123     		movs	r3, #1
 21668 00b4 0DF10702 		add	r2, sp, #7
 21669 00b8 4521     		movs	r1, #69
 21670 00ba 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21671 00bc B047     		blx	r6
 21672              	.LVL2630:
 21673              		.loc 1 10032 26 view .LVU5946
ARM GAS  /tmp/ccWoU29M.s 			page 608


 21674 00be 54FA80F4 		uxtab	r4, r4, r0
 21675              	.LVL2631:
 21676              		.loc 1 10032 26 view .LVU5947
 21677 00c2 E6B2     		uxtb	r6, r4
 21678 00c4 64B2     		sxtb	r4, r4
 21679              	.LVL2632:
10033:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_1_LSB_REG,
10034:Core/Src/bno055.c ****                                                            &data2_u8r,
10035:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10036:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21680              		.loc 1 10036 17 is_stmt 1 view .LVU5948
 21681              		.loc 1 10036 20 is_stmt 0 view .LVU5949
 21682 00c6 7CB9     		cbnz	r4, .L1527
10037:Core/Src/bno055.c ****                 {
10038:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_1 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21683              		.loc 1 10038 21 is_stmt 1 view .LVU5950
 21684              		.loc 1 10038 49 is_stmt 0 view .LVU5951
 21685 00c8 B5F90230 		ldrsh	r3, [r5, #2]
 21686              	.LVL2633:
10039:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_1_LSB, data1_u8r);
 21687              		.loc 1 10039 21 is_stmt 1 view .LVU5952
 21688              		.loc 1 10039 31 is_stmt 0 view .LVU5953
 21689 00cc 8DF80730 		strb	r3, [sp, #7]
10040:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21690              		.loc 1 10040 21 is_stmt 1 view .LVU5954
 21691              		.loc 1 10040 41 is_stmt 0 view .LVU5955
 21692 00d0 764B     		ldr	r3, .L1548
 21693              	.LVL2634:
 21694              		.loc 1 10040 41 view .LVU5956
 21695 00d2 1868     		ldr	r0, [r3]
 21696 00d4 C468     		ldr	r4, [r0, #12]
 21697              	.LVL2635:
 21698              		.loc 1 10040 33 view .LVU5957
 21699 00d6 0123     		movs	r3, #1
 21700 00d8 0DF10702 		add	r2, sp, #7
 21701              	.LVL2636:
 21702              		.loc 1 10040 33 view .LVU5958
 21703 00dc 4521     		movs	r1, #69
 21704 00de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21705 00e0 A047     		blx	r4
 21706              	.LVL2637:
 21707              		.loc 1 10040 30 view .LVU5959
 21708 00e2 56FA80F4 		uxtab	r4, r6, r0
 21709 00e6 64B2     		sxtb	r4, r4
 21710              	.LVL2638:
 21711              	.L1527:
10041:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_1_LSB_REG,
10042:Core/Src/bno055.c ****                                                                 &data2_u8r,
10043:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10044:Core/Src/bno055.c ****                 }
10045:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21712              		.loc 1 10045 17 is_stmt 1 view .LVU5960
 21713              		.loc 1 10045 37 is_stmt 0 view .LVU5961
 21714 00e8 704B     		ldr	r3, .L1548
 21715 00ea 1868     		ldr	r0, [r3]
 21716 00ec 0669     		ldr	r6, [r0, #16]
 21717              		.loc 1 10045 29 view .LVU5962
ARM GAS  /tmp/ccWoU29M.s 			page 609


 21718 00ee 0123     		movs	r3, #1
 21719 00f0 0DF10702 		add	r2, sp, #7
 21720 00f4 4621     		movs	r1, #70
 21721 00f6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21722 00f8 B047     		blx	r6
 21723              	.LVL2639:
 21724              		.loc 1 10045 26 view .LVU5963
 21725 00fa 54FA80F4 		uxtab	r4, r4, r0
 21726              	.LVL2640:
 21727              		.loc 1 10045 26 view .LVU5964
 21728 00fe E6B2     		uxtb	r6, r4
 21729 0100 64B2     		sxtb	r4, r4
 21730              	.LVL2641:
10046:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_1_MSB_REG,
10047:Core/Src/bno055.c ****                                                            &data2_u8r,
10048:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10049:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21731              		.loc 1 10049 17 is_stmt 1 view .LVU5965
 21732              		.loc 1 10049 20 is_stmt 0 view .LVU5966
 21733 0102 7CB9     		cbnz	r4, .L1528
10050:Core/Src/bno055.c ****                 {
10051:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_1 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21734              		.loc 1 10051 21 is_stmt 1 view .LVU5967
 21735              		.loc 1 10051 34 is_stmt 0 view .LVU5968
 21736 0104 95F90330 		ldrsb	r3, [r5, #3]
 21737              	.LVL2642:
10052:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_1_MSB, data1_u8r);
 21738              		.loc 1 10052 21 is_stmt 1 view .LVU5969
 21739              		.loc 1 10052 31 is_stmt 0 view .LVU5970
 21740 0108 8DF80730 		strb	r3, [sp, #7]
10053:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21741              		.loc 1 10053 21 is_stmt 1 view .LVU5971
 21742              		.loc 1 10053 41 is_stmt 0 view .LVU5972
 21743 010c 674B     		ldr	r3, .L1548
 21744              	.LVL2643:
 21745              		.loc 1 10053 41 view .LVU5973
 21746 010e 1868     		ldr	r0, [r3]
 21747 0110 C468     		ldr	r4, [r0, #12]
 21748              	.LVL2644:
 21749              		.loc 1 10053 33 view .LVU5974
 21750 0112 0123     		movs	r3, #1
 21751 0114 0DF10702 		add	r2, sp, #7
 21752              	.LVL2645:
 21753              		.loc 1 10053 33 view .LVU5975
 21754 0118 4621     		movs	r1, #70
 21755 011a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21756 011c A047     		blx	r4
 21757              	.LVL2646:
 21758              		.loc 1 10053 30 view .LVU5976
 21759 011e 56FA80F4 		uxtab	r4, r6, r0
 21760 0122 64B2     		sxtb	r4, r4
 21761              	.LVL2647:
 21762              	.L1528:
10054:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_1_MSB_REG,
10055:Core/Src/bno055.c ****                                                                 &data2_u8r,
10056:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10057:Core/Src/bno055.c ****                 }
ARM GAS  /tmp/ccWoU29M.s 			page 610


10058:Core/Src/bno055.c **** 
10059:Core/Src/bno055.c ****                 /* write soft iron calibration
10060:Core/Src/bno055.c ****                  * matrix two value*/
10061:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21763              		.loc 1 10061 17 is_stmt 1 view .LVU5977
 21764              		.loc 1 10061 37 is_stmt 0 view .LVU5978
 21765 0124 614B     		ldr	r3, .L1548
 21766 0126 1868     		ldr	r0, [r3]
 21767 0128 0669     		ldr	r6, [r0, #16]
 21768              		.loc 1 10061 29 view .LVU5979
 21769 012a 0123     		movs	r3, #1
 21770 012c 0DF10702 		add	r2, sp, #7
 21771 0130 4721     		movs	r1, #71
 21772 0132 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21773 0134 B047     		blx	r6
 21774              	.LVL2648:
 21775              		.loc 1 10061 26 view .LVU5980
 21776 0136 54FA80F4 		uxtab	r4, r4, r0
 21777              	.LVL2649:
 21778              		.loc 1 10061 26 view .LVU5981
 21779 013a E6B2     		uxtb	r6, r4
 21780 013c 64B2     		sxtb	r4, r4
 21781              	.LVL2650:
10062:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_2_LSB_REG,
10063:Core/Src/bno055.c ****                                                            &data2_u8r,
10064:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10065:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21782              		.loc 1 10065 17 is_stmt 1 view .LVU5982
 21783              		.loc 1 10065 20 is_stmt 0 view .LVU5983
 21784 013e 7CB9     		cbnz	r4, .L1529
10066:Core/Src/bno055.c ****                 {
10067:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_2 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21785              		.loc 1 10067 21 is_stmt 1 view .LVU5984
 21786              		.loc 1 10067 49 is_stmt 0 view .LVU5985
 21787 0140 B5F90430 		ldrsh	r3, [r5, #4]
 21788              	.LVL2651:
10068:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_2_LSB, data1_u8r);
 21789              		.loc 1 10068 21 is_stmt 1 view .LVU5986
 21790              		.loc 1 10068 31 is_stmt 0 view .LVU5987
 21791 0144 8DF80730 		strb	r3, [sp, #7]
10069:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21792              		.loc 1 10069 21 is_stmt 1 view .LVU5988
 21793              		.loc 1 10069 41 is_stmt 0 view .LVU5989
 21794 0148 584B     		ldr	r3, .L1548
 21795              	.LVL2652:
 21796              		.loc 1 10069 41 view .LVU5990
 21797 014a 1868     		ldr	r0, [r3]
 21798 014c C468     		ldr	r4, [r0, #12]
 21799              	.LVL2653:
 21800              		.loc 1 10069 33 view .LVU5991
 21801 014e 0123     		movs	r3, #1
 21802 0150 0DF10702 		add	r2, sp, #7
 21803              	.LVL2654:
 21804              		.loc 1 10069 33 view .LVU5992
 21805 0154 4721     		movs	r1, #71
 21806 0156 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21807 0158 A047     		blx	r4
ARM GAS  /tmp/ccWoU29M.s 			page 611


 21808              	.LVL2655:
 21809              		.loc 1 10069 30 view .LVU5993
 21810 015a 56FA80F4 		uxtab	r4, r6, r0
 21811 015e 64B2     		sxtb	r4, r4
 21812              	.LVL2656:
 21813              	.L1529:
10070:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_2_LSB_REG,
10071:Core/Src/bno055.c ****                                                                 &data2_u8r,
10072:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10073:Core/Src/bno055.c ****                 }
10074:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21814              		.loc 1 10074 17 is_stmt 1 view .LVU5994
 21815              		.loc 1 10074 37 is_stmt 0 view .LVU5995
 21816 0160 524B     		ldr	r3, .L1548
 21817 0162 1868     		ldr	r0, [r3]
 21818 0164 0669     		ldr	r6, [r0, #16]
 21819              		.loc 1 10074 29 view .LVU5996
 21820 0166 0123     		movs	r3, #1
 21821 0168 0DF10702 		add	r2, sp, #7
 21822 016c 4821     		movs	r1, #72
 21823 016e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21824 0170 B047     		blx	r6
 21825              	.LVL2657:
 21826              		.loc 1 10074 26 view .LVU5997
 21827 0172 54FA80F4 		uxtab	r4, r4, r0
 21828              	.LVL2658:
 21829              		.loc 1 10074 26 view .LVU5998
 21830 0176 E6B2     		uxtb	r6, r4
 21831 0178 64B2     		sxtb	r4, r4
 21832              	.LVL2659:
10075:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_2_MSB_REG,
10076:Core/Src/bno055.c ****                                                            &data2_u8r,
10077:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10078:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21833              		.loc 1 10078 17 is_stmt 1 view .LVU5999
 21834              		.loc 1 10078 20 is_stmt 0 view .LVU6000
 21835 017a 7CB9     		cbnz	r4, .L1530
10079:Core/Src/bno055.c ****                 {
10080:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_2 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21836              		.loc 1 10080 21 is_stmt 1 view .LVU6001
 21837              		.loc 1 10080 34 is_stmt 0 view .LVU6002
 21838 017c 95F90530 		ldrsb	r3, [r5, #5]
 21839              	.LVL2660:
10081:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_2_MSB, data1_u8r);
 21840              		.loc 1 10081 21 is_stmt 1 view .LVU6003
 21841              		.loc 1 10081 31 is_stmt 0 view .LVU6004
 21842 0180 8DF80730 		strb	r3, [sp, #7]
10082:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21843              		.loc 1 10082 21 is_stmt 1 view .LVU6005
 21844              		.loc 1 10082 41 is_stmt 0 view .LVU6006
 21845 0184 494B     		ldr	r3, .L1548
 21846              	.LVL2661:
 21847              		.loc 1 10082 41 view .LVU6007
 21848 0186 1868     		ldr	r0, [r3]
 21849 0188 C468     		ldr	r4, [r0, #12]
 21850              	.LVL2662:
 21851              		.loc 1 10082 33 view .LVU6008
ARM GAS  /tmp/ccWoU29M.s 			page 612


 21852 018a 0123     		movs	r3, #1
 21853 018c 0DF10702 		add	r2, sp, #7
 21854              	.LVL2663:
 21855              		.loc 1 10082 33 view .LVU6009
 21856 0190 4821     		movs	r1, #72
 21857 0192 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21858 0194 A047     		blx	r4
 21859              	.LVL2664:
 21860              		.loc 1 10082 30 view .LVU6010
 21861 0196 56FA80F4 		uxtab	r4, r6, r0
 21862 019a 64B2     		sxtb	r4, r4
 21863              	.LVL2665:
 21864              	.L1530:
10083:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_2_MSB_REG,
10084:Core/Src/bno055.c ****                                                                 &data2_u8r,
10085:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10086:Core/Src/bno055.c ****                 }
10087:Core/Src/bno055.c **** 
10088:Core/Src/bno055.c ****                 /* write soft iron calibration
10089:Core/Src/bno055.c ****                  * matrix three value*/
10090:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21865              		.loc 1 10090 17 is_stmt 1 view .LVU6011
 21866              		.loc 1 10090 37 is_stmt 0 view .LVU6012
 21867 019c 434B     		ldr	r3, .L1548
 21868 019e 1868     		ldr	r0, [r3]
 21869 01a0 0669     		ldr	r6, [r0, #16]
 21870              		.loc 1 10090 29 view .LVU6013
 21871 01a2 0123     		movs	r3, #1
 21872 01a4 0DF10702 		add	r2, sp, #7
 21873 01a8 4921     		movs	r1, #73
 21874 01aa 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21875 01ac B047     		blx	r6
 21876              	.LVL2666:
 21877              		.loc 1 10090 26 view .LVU6014
 21878 01ae 54FA80F4 		uxtab	r4, r4, r0
 21879              	.LVL2667:
 21880              		.loc 1 10090 26 view .LVU6015
 21881 01b2 E6B2     		uxtb	r6, r4
 21882 01b4 64B2     		sxtb	r4, r4
 21883              	.LVL2668:
10091:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_3_LSB_REG,
10092:Core/Src/bno055.c ****                                                            &data2_u8r,
10093:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10094:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21884              		.loc 1 10094 17 is_stmt 1 view .LVU6016
 21885              		.loc 1 10094 20 is_stmt 0 view .LVU6017
 21886 01b6 7CB9     		cbnz	r4, .L1531
10095:Core/Src/bno055.c ****                 {
10096:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_3 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21887              		.loc 1 10096 21 is_stmt 1 view .LVU6018
 21888              		.loc 1 10096 49 is_stmt 0 view .LVU6019
 21889 01b8 B5F90630 		ldrsh	r3, [r5, #6]
 21890              	.LVL2669:
10097:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_3_LSB, data1_u8r);
 21891              		.loc 1 10097 21 is_stmt 1 view .LVU6020
 21892              		.loc 1 10097 31 is_stmt 0 view .LVU6021
 21893 01bc 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/ccWoU29M.s 			page 613


10098:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21894              		.loc 1 10098 21 is_stmt 1 view .LVU6022
 21895              		.loc 1 10098 41 is_stmt 0 view .LVU6023
 21896 01c0 3A4B     		ldr	r3, .L1548
 21897              	.LVL2670:
 21898              		.loc 1 10098 41 view .LVU6024
 21899 01c2 1868     		ldr	r0, [r3]
 21900 01c4 C468     		ldr	r4, [r0, #12]
 21901              	.LVL2671:
 21902              		.loc 1 10098 33 view .LVU6025
 21903 01c6 0123     		movs	r3, #1
 21904 01c8 0DF10702 		add	r2, sp, #7
 21905              	.LVL2672:
 21906              		.loc 1 10098 33 view .LVU6026
 21907 01cc 4921     		movs	r1, #73
 21908 01ce 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21909 01d0 A047     		blx	r4
 21910              	.LVL2673:
 21911              		.loc 1 10098 30 view .LVU6027
 21912 01d2 56FA80F4 		uxtab	r4, r6, r0
 21913 01d6 64B2     		sxtb	r4, r4
 21914              	.LVL2674:
 21915              	.L1531:
10099:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_3_LSB_REG,
10100:Core/Src/bno055.c ****                                                                 &data2_u8r,
10101:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10102:Core/Src/bno055.c ****                 }
10103:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21916              		.loc 1 10103 17 is_stmt 1 view .LVU6028
 21917              		.loc 1 10103 37 is_stmt 0 view .LVU6029
 21918 01d8 344B     		ldr	r3, .L1548
 21919 01da 1868     		ldr	r0, [r3]
 21920 01dc 0669     		ldr	r6, [r0, #16]
 21921              		.loc 1 10103 29 view .LVU6030
 21922 01de 0123     		movs	r3, #1
 21923 01e0 0DF10702 		add	r2, sp, #7
 21924 01e4 4A21     		movs	r1, #74
 21925 01e6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21926 01e8 B047     		blx	r6
 21927              	.LVL2675:
 21928              		.loc 1 10103 26 view .LVU6031
 21929 01ea 54FA80F4 		uxtab	r4, r4, r0
 21930              	.LVL2676:
 21931              		.loc 1 10103 26 view .LVU6032
 21932 01ee E6B2     		uxtb	r6, r4
 21933 01f0 64B2     		sxtb	r4, r4
 21934              	.LVL2677:
10104:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_3_MSB_REG,
10105:Core/Src/bno055.c ****                                                            &data2_u8r,
10106:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10107:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21935              		.loc 1 10107 17 is_stmt 1 view .LVU6033
 21936              		.loc 1 10107 20 is_stmt 0 view .LVU6034
 21937 01f2 7CB9     		cbnz	r4, .L1532
10108:Core/Src/bno055.c ****                 {
10109:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_3 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21938              		.loc 1 10109 21 is_stmt 1 view .LVU6035
ARM GAS  /tmp/ccWoU29M.s 			page 614


 21939              		.loc 1 10109 34 is_stmt 0 view .LVU6036
 21940 01f4 95F90730 		ldrsb	r3, [r5, #7]
 21941              	.LVL2678:
10110:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_3_MSB, data1_u8r);
 21942              		.loc 1 10110 21 is_stmt 1 view .LVU6037
 21943              		.loc 1 10110 31 is_stmt 0 view .LVU6038
 21944 01f8 8DF80730 		strb	r3, [sp, #7]
10111:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21945              		.loc 1 10111 21 is_stmt 1 view .LVU6039
 21946              		.loc 1 10111 41 is_stmt 0 view .LVU6040
 21947 01fc 2B4B     		ldr	r3, .L1548
 21948              	.LVL2679:
 21949              		.loc 1 10111 41 view .LVU6041
 21950 01fe 1868     		ldr	r0, [r3]
 21951 0200 C468     		ldr	r4, [r0, #12]
 21952              	.LVL2680:
 21953              		.loc 1 10111 33 view .LVU6042
 21954 0202 0123     		movs	r3, #1
 21955 0204 0DF10702 		add	r2, sp, #7
 21956              	.LVL2681:
 21957              		.loc 1 10111 33 view .LVU6043
 21958 0208 4A21     		movs	r1, #74
 21959 020a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21960 020c A047     		blx	r4
 21961              	.LVL2682:
 21962              		.loc 1 10111 30 view .LVU6044
 21963 020e 56FA80F4 		uxtab	r4, r6, r0
 21964 0212 64B2     		sxtb	r4, r4
 21965              	.LVL2683:
 21966              	.L1532:
10112:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_3_MSB_REG,
10113:Core/Src/bno055.c ****                                                                 &data2_u8r,
10114:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10115:Core/Src/bno055.c ****                 }
10116:Core/Src/bno055.c **** 
10117:Core/Src/bno055.c ****                 /* write soft iron calibration
10118:Core/Src/bno055.c ****                  * matrix four value*/
10119:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21967              		.loc 1 10119 17 is_stmt 1 view .LVU6045
 21968              		.loc 1 10119 37 is_stmt 0 view .LVU6046
 21969 0214 254B     		ldr	r3, .L1548
 21970 0216 1868     		ldr	r0, [r3]
 21971 0218 0669     		ldr	r6, [r0, #16]
 21972              		.loc 1 10119 29 view .LVU6047
 21973 021a 0123     		movs	r3, #1
 21974 021c 0DF10702 		add	r2, sp, #7
 21975 0220 4B21     		movs	r1, #75
 21976 0222 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21977 0224 B047     		blx	r6
 21978              	.LVL2684:
 21979              		.loc 1 10119 26 view .LVU6048
 21980 0226 54FA80F4 		uxtab	r4, r4, r0
 21981              	.LVL2685:
 21982              		.loc 1 10119 26 view .LVU6049
 21983 022a E6B2     		uxtb	r6, r4
 21984 022c 64B2     		sxtb	r4, r4
 21985              	.LVL2686:
ARM GAS  /tmp/ccWoU29M.s 			page 615


10120:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_4_LSB_REG,
10121:Core/Src/bno055.c ****                                                            &data2_u8r,
10122:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10123:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21986              		.loc 1 10123 17 is_stmt 1 view .LVU6050
 21987              		.loc 1 10123 20 is_stmt 0 view .LVU6051
 21988 022e 7CB9     		cbnz	r4, .L1533
10124:Core/Src/bno055.c ****                 {
10125:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_4 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21989              		.loc 1 10125 21 is_stmt 1 view .LVU6052
 21990              		.loc 1 10125 49 is_stmt 0 view .LVU6053
 21991 0230 B5F90830 		ldrsh	r3, [r5, #8]
 21992              	.LVL2687:
10126:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_4_LSB, data1_u8r);
 21993              		.loc 1 10126 21 is_stmt 1 view .LVU6054
 21994              		.loc 1 10126 31 is_stmt 0 view .LVU6055
 21995 0234 8DF80730 		strb	r3, [sp, #7]
10127:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21996              		.loc 1 10127 21 is_stmt 1 view .LVU6056
 21997              		.loc 1 10127 41 is_stmt 0 view .LVU6057
 21998 0238 1C4B     		ldr	r3, .L1548
 21999              	.LVL2688:
 22000              		.loc 1 10127 41 view .LVU6058
 22001 023a 1868     		ldr	r0, [r3]
 22002 023c C468     		ldr	r4, [r0, #12]
 22003              	.LVL2689:
 22004              		.loc 1 10127 33 view .LVU6059
 22005 023e 0123     		movs	r3, #1
 22006 0240 0DF10702 		add	r2, sp, #7
 22007              	.LVL2690:
 22008              		.loc 1 10127 33 view .LVU6060
 22009 0244 4B21     		movs	r1, #75
 22010 0246 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22011 0248 A047     		blx	r4
 22012              	.LVL2691:
 22013              		.loc 1 10127 30 view .LVU6061
 22014 024a 56FA80F4 		uxtab	r4, r6, r0
 22015 024e 64B2     		sxtb	r4, r4
 22016              	.LVL2692:
 22017              	.L1533:
10128:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_4_LSB_REG,
10129:Core/Src/bno055.c ****                                                                 &data2_u8r,
10130:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10131:Core/Src/bno055.c ****                 }
10132:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22018              		.loc 1 10132 17 is_stmt 1 view .LVU6062
 22019              		.loc 1 10132 37 is_stmt 0 view .LVU6063
 22020 0250 164B     		ldr	r3, .L1548
 22021 0252 1868     		ldr	r0, [r3]
 22022 0254 0669     		ldr	r6, [r0, #16]
 22023              		.loc 1 10132 29 view .LVU6064
 22024 0256 0123     		movs	r3, #1
 22025 0258 0DF10702 		add	r2, sp, #7
 22026 025c 4C21     		movs	r1, #76
 22027 025e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22028 0260 B047     		blx	r6
 22029              	.LVL2693:
ARM GAS  /tmp/ccWoU29M.s 			page 616


 22030              		.loc 1 10132 26 view .LVU6065
 22031 0262 54FA80F4 		uxtab	r4, r4, r0
 22032              	.LVL2694:
 22033              		.loc 1 10132 26 view .LVU6066
 22034 0266 E6B2     		uxtb	r6, r4
 22035 0268 64B2     		sxtb	r4, r4
 22036              	.LVL2695:
10133:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_4_MSB_REG,
10134:Core/Src/bno055.c ****                                                            &data2_u8r,
10135:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10136:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22037              		.loc 1 10136 17 is_stmt 1 view .LVU6067
 22038              		.loc 1 10136 20 is_stmt 0 view .LVU6068
 22039 026a 7CB9     		cbnz	r4, .L1534
10137:Core/Src/bno055.c ****                 {
10138:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_4 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 22040              		.loc 1 10138 21 is_stmt 1 view .LVU6069
 22041              		.loc 1 10138 34 is_stmt 0 view .LVU6070
 22042 026c 95F90930 		ldrsb	r3, [r5, #9]
 22043              	.LVL2696:
10139:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_4_MSB, data1_u8r);
 22044              		.loc 1 10139 21 is_stmt 1 view .LVU6071
 22045              		.loc 1 10139 31 is_stmt 0 view .LVU6072
 22046 0270 8DF80730 		strb	r3, [sp, #7]
10140:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22047              		.loc 1 10140 21 is_stmt 1 view .LVU6073
 22048              		.loc 1 10140 41 is_stmt 0 view .LVU6074
 22049 0274 0D4B     		ldr	r3, .L1548
 22050              	.LVL2697:
 22051              		.loc 1 10140 41 view .LVU6075
 22052 0276 1868     		ldr	r0, [r3]
 22053 0278 C468     		ldr	r4, [r0, #12]
 22054              	.LVL2698:
 22055              		.loc 1 10140 33 view .LVU6076
 22056 027a 0123     		movs	r3, #1
 22057 027c 0DF10702 		add	r2, sp, #7
 22058              	.LVL2699:
 22059              		.loc 1 10140 33 view .LVU6077
 22060 0280 4C21     		movs	r1, #76
 22061 0282 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22062 0284 A047     		blx	r4
 22063              	.LVL2700:
 22064              		.loc 1 10140 30 view .LVU6078
 22065 0286 56FA80F4 		uxtab	r4, r6, r0
 22066 028a 64B2     		sxtb	r4, r4
 22067              	.LVL2701:
 22068              	.L1534:
10141:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_4_MSB_REG,
10142:Core/Src/bno055.c ****                                                                 &data2_u8r,
10143:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10144:Core/Src/bno055.c ****                 }
10145:Core/Src/bno055.c **** 
10146:Core/Src/bno055.c ****                 /* write soft iron calibration
10147:Core/Src/bno055.c ****                  * matrix five value*/
10148:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22069              		.loc 1 10148 17 is_stmt 1 view .LVU6079
 22070              		.loc 1 10148 37 is_stmt 0 view .LVU6080
ARM GAS  /tmp/ccWoU29M.s 			page 617


 22071 028c 074B     		ldr	r3, .L1548
 22072 028e 1868     		ldr	r0, [r3]
 22073 0290 0669     		ldr	r6, [r0, #16]
 22074              		.loc 1 10148 29 view .LVU6081
 22075 0292 0123     		movs	r3, #1
 22076 0294 0DF10702 		add	r2, sp, #7
 22077 0298 4D21     		movs	r1, #77
 22078 029a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22079 029c B047     		blx	r6
 22080              	.LVL2702:
 22081              		.loc 1 10148 26 view .LVU6082
 22082 029e 54FA80F4 		uxtab	r4, r4, r0
 22083              	.LVL2703:
 22084              		.loc 1 10148 26 view .LVU6083
 22085 02a2 E6B2     		uxtb	r6, r4
 22086 02a4 64B2     		sxtb	r4, r4
 22087              	.LVL2704:
10149:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_5_LSB_REG,
10150:Core/Src/bno055.c ****                                                            &data2_u8r,
10151:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10152:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22088              		.loc 1 10152 17 is_stmt 1 view .LVU6084
 22089              		.loc 1 10152 20 is_stmt 0 view .LVU6085
 22090 02a6 9CB9     		cbnz	r4, .L1535
 22091 02a8 02E0     		b	.L1549
 22092              	.L1550:
 22093 02aa 00BF     		.align	2
 22094              	.L1548:
 22095 02ac 00000000 		.word	.LANCHOR0
 22096              	.L1549:
10153:Core/Src/bno055.c ****                 {
10154:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_5 & BNO055_SIC_HEX_0_0_F_F_DATA));
 22097              		.loc 1 10154 21 is_stmt 1 view .LVU6086
 22098              		.loc 1 10154 49 is_stmt 0 view .LVU6087
 22099 02b0 B5F90A30 		ldrsh	r3, [r5, #10]
 22100              	.LVL2705:
10155:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_5_LSB, data1_u8r);
 22101              		.loc 1 10155 21 is_stmt 1 view .LVU6088
 22102              		.loc 1 10155 31 is_stmt 0 view .LVU6089
 22103 02b4 8DF80730 		strb	r3, [sp, #7]
10156:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22104              		.loc 1 10156 21 is_stmt 1 view .LVU6090
 22105              		.loc 1 10156 41 is_stmt 0 view .LVU6091
 22106 02b8 7C4B     		ldr	r3, .L1551
 22107              	.LVL2706:
 22108              		.loc 1 10156 41 view .LVU6092
 22109 02ba 1868     		ldr	r0, [r3]
 22110 02bc C468     		ldr	r4, [r0, #12]
 22111              	.LVL2707:
 22112              		.loc 1 10156 33 view .LVU6093
 22113 02be 0123     		movs	r3, #1
 22114 02c0 0DF10702 		add	r2, sp, #7
 22115              	.LVL2708:
 22116              		.loc 1 10156 33 view .LVU6094
 22117 02c4 4D21     		movs	r1, #77
 22118 02c6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22119 02c8 A047     		blx	r4
ARM GAS  /tmp/ccWoU29M.s 			page 618


 22120              	.LVL2709:
 22121              		.loc 1 10156 30 view .LVU6095
 22122 02ca 56FA80F4 		uxtab	r4, r6, r0
 22123 02ce 64B2     		sxtb	r4, r4
 22124              	.LVL2710:
 22125              	.L1535:
10157:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_5_LSB_REG,
10158:Core/Src/bno055.c ****                                                                 &data2_u8r,
10159:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10160:Core/Src/bno055.c ****                 }
10161:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22126              		.loc 1 10161 17 is_stmt 1 view .LVU6096
 22127              		.loc 1 10161 37 is_stmt 0 view .LVU6097
 22128 02d0 764B     		ldr	r3, .L1551
 22129 02d2 1868     		ldr	r0, [r3]
 22130 02d4 0669     		ldr	r6, [r0, #16]
 22131              		.loc 1 10161 29 view .LVU6098
 22132 02d6 0123     		movs	r3, #1
 22133 02d8 0DF10702 		add	r2, sp, #7
 22134 02dc 4E21     		movs	r1, #78
 22135 02de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22136 02e0 B047     		blx	r6
 22137              	.LVL2711:
 22138              		.loc 1 10161 26 view .LVU6099
 22139 02e2 54FA80F4 		uxtab	r4, r4, r0
 22140              	.LVL2712:
 22141              		.loc 1 10161 26 view .LVU6100
 22142 02e6 E6B2     		uxtb	r6, r4
 22143 02e8 64B2     		sxtb	r4, r4
 22144              	.LVL2713:
10162:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_5_MSB_REG,
10163:Core/Src/bno055.c ****                                                            &data2_u8r,
10164:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10165:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22145              		.loc 1 10165 17 is_stmt 1 view .LVU6101
 22146              		.loc 1 10165 20 is_stmt 0 view .LVU6102
 22147 02ea 7CB9     		cbnz	r4, .L1536
10166:Core/Src/bno055.c ****                 {
10167:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_5 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 22148              		.loc 1 10167 21 is_stmt 1 view .LVU6103
 22149              		.loc 1 10167 34 is_stmt 0 view .LVU6104
 22150 02ec 95F90B30 		ldrsb	r3, [r5, #11]
 22151              	.LVL2714:
10168:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_5_MSB, data1_u8r);
 22152              		.loc 1 10168 21 is_stmt 1 view .LVU6105
 22153              		.loc 1 10168 31 is_stmt 0 view .LVU6106
 22154 02f0 8DF80730 		strb	r3, [sp, #7]
10169:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22155              		.loc 1 10169 21 is_stmt 1 view .LVU6107
 22156              		.loc 1 10169 41 is_stmt 0 view .LVU6108
 22157 02f4 6D4B     		ldr	r3, .L1551
 22158              	.LVL2715:
 22159              		.loc 1 10169 41 view .LVU6109
 22160 02f6 1868     		ldr	r0, [r3]
 22161 02f8 C468     		ldr	r4, [r0, #12]
 22162              	.LVL2716:
 22163              		.loc 1 10169 33 view .LVU6110
ARM GAS  /tmp/ccWoU29M.s 			page 619


 22164 02fa 0123     		movs	r3, #1
 22165 02fc 0DF10702 		add	r2, sp, #7
 22166              	.LVL2717:
 22167              		.loc 1 10169 33 view .LVU6111
 22168 0300 4E21     		movs	r1, #78
 22169 0302 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22170 0304 A047     		blx	r4
 22171              	.LVL2718:
 22172              		.loc 1 10169 30 view .LVU6112
 22173 0306 56FA80F4 		uxtab	r4, r6, r0
 22174 030a 64B2     		sxtb	r4, r4
 22175              	.LVL2719:
 22176              	.L1536:
10170:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_5_MSB_REG,
10171:Core/Src/bno055.c ****                                                                 &data2_u8r,
10172:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10173:Core/Src/bno055.c ****                 }
10174:Core/Src/bno055.c **** 
10175:Core/Src/bno055.c ****                 /* write soft iron calibration
10176:Core/Src/bno055.c ****                  * matrix six value*/
10177:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22177              		.loc 1 10177 17 is_stmt 1 view .LVU6113
 22178              		.loc 1 10177 37 is_stmt 0 view .LVU6114
 22179 030c 674B     		ldr	r3, .L1551
 22180 030e 1868     		ldr	r0, [r3]
 22181 0310 0669     		ldr	r6, [r0, #16]
 22182              		.loc 1 10177 29 view .LVU6115
 22183 0312 0123     		movs	r3, #1
 22184 0314 0DF10702 		add	r2, sp, #7
 22185 0318 4F21     		movs	r1, #79
 22186 031a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22187 031c B047     		blx	r6
 22188              	.LVL2720:
 22189              		.loc 1 10177 26 view .LVU6116
 22190 031e 54FA80F4 		uxtab	r4, r4, r0
 22191              	.LVL2721:
 22192              		.loc 1 10177 26 view .LVU6117
 22193 0322 E6B2     		uxtb	r6, r4
 22194 0324 64B2     		sxtb	r4, r4
 22195              	.LVL2722:
10178:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_6_LSB_REG,
10179:Core/Src/bno055.c ****                                                            &data2_u8r,
10180:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10181:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22196              		.loc 1 10181 17 is_stmt 1 view .LVU6118
 22197              		.loc 1 10181 20 is_stmt 0 view .LVU6119
 22198 0326 7CB9     		cbnz	r4, .L1537
10182:Core/Src/bno055.c ****                 {
10183:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_6 & BNO055_SIC_HEX_0_0_F_F_DATA));
 22199              		.loc 1 10183 21 is_stmt 1 view .LVU6120
 22200              		.loc 1 10183 49 is_stmt 0 view .LVU6121
 22201 0328 B5F90C30 		ldrsh	r3, [r5, #12]
 22202              	.LVL2723:
10184:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_6_LSB, data1_u8r);
 22203              		.loc 1 10184 21 is_stmt 1 view .LVU6122
 22204              		.loc 1 10184 31 is_stmt 0 view .LVU6123
 22205 032c 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/ccWoU29M.s 			page 620


10185:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22206              		.loc 1 10185 21 is_stmt 1 view .LVU6124
 22207              		.loc 1 10185 41 is_stmt 0 view .LVU6125
 22208 0330 5E4B     		ldr	r3, .L1551
 22209              	.LVL2724:
 22210              		.loc 1 10185 41 view .LVU6126
 22211 0332 1868     		ldr	r0, [r3]
 22212 0334 C468     		ldr	r4, [r0, #12]
 22213              	.LVL2725:
 22214              		.loc 1 10185 33 view .LVU6127
 22215 0336 0123     		movs	r3, #1
 22216 0338 0DF10702 		add	r2, sp, #7
 22217              	.LVL2726:
 22218              		.loc 1 10185 33 view .LVU6128
 22219 033c 4F21     		movs	r1, #79
 22220 033e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22221 0340 A047     		blx	r4
 22222              	.LVL2727:
 22223              		.loc 1 10185 30 view .LVU6129
 22224 0342 56FA80F4 		uxtab	r4, r6, r0
 22225 0346 64B2     		sxtb	r4, r4
 22226              	.LVL2728:
 22227              	.L1537:
10186:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_6_LSB_REG,
10187:Core/Src/bno055.c ****                                                                 &data2_u8r,
10188:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10189:Core/Src/bno055.c ****                 }
10190:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22228              		.loc 1 10190 17 is_stmt 1 view .LVU6130
 22229              		.loc 1 10190 37 is_stmt 0 view .LVU6131
 22230 0348 584B     		ldr	r3, .L1551
 22231 034a 1868     		ldr	r0, [r3]
 22232 034c 0669     		ldr	r6, [r0, #16]
 22233              		.loc 1 10190 29 view .LVU6132
 22234 034e 0123     		movs	r3, #1
 22235 0350 0DF10702 		add	r2, sp, #7
 22236 0354 5021     		movs	r1, #80
 22237 0356 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22238 0358 B047     		blx	r6
 22239              	.LVL2729:
 22240              		.loc 1 10190 26 view .LVU6133
 22241 035a 54FA80F4 		uxtab	r4, r4, r0
 22242              	.LVL2730:
 22243              		.loc 1 10190 26 view .LVU6134
 22244 035e E6B2     		uxtb	r6, r4
 22245 0360 64B2     		sxtb	r4, r4
 22246              	.LVL2731:
10191:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_6_MSB_REG,
10192:Core/Src/bno055.c ****                                                            &data2_u8r,
10193:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10194:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22247              		.loc 1 10194 17 is_stmt 1 view .LVU6135
 22248              		.loc 1 10194 20 is_stmt 0 view .LVU6136
 22249 0362 7CB9     		cbnz	r4, .L1538
10195:Core/Src/bno055.c ****                 {
10196:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_6 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 22250              		.loc 1 10196 21 is_stmt 1 view .LVU6137
ARM GAS  /tmp/ccWoU29M.s 			page 621


 22251              		.loc 1 10196 34 is_stmt 0 view .LVU6138
 22252 0364 95F90D30 		ldrsb	r3, [r5, #13]
 22253              	.LVL2732:
10197:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_6_MSB, data1_u8r);
 22254              		.loc 1 10197 21 is_stmt 1 view .LVU6139
 22255              		.loc 1 10197 31 is_stmt 0 view .LVU6140
 22256 0368 8DF80730 		strb	r3, [sp, #7]
10198:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22257              		.loc 1 10198 21 is_stmt 1 view .LVU6141
 22258              		.loc 1 10198 41 is_stmt 0 view .LVU6142
 22259 036c 4F4B     		ldr	r3, .L1551
 22260              	.LVL2733:
 22261              		.loc 1 10198 41 view .LVU6143
 22262 036e 1868     		ldr	r0, [r3]
 22263 0370 C468     		ldr	r4, [r0, #12]
 22264              	.LVL2734:
 22265              		.loc 1 10198 33 view .LVU6144
 22266 0372 0123     		movs	r3, #1
 22267 0374 0DF10702 		add	r2, sp, #7
 22268              	.LVL2735:
 22269              		.loc 1 10198 33 view .LVU6145
 22270 0378 5021     		movs	r1, #80
 22271 037a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22272 037c A047     		blx	r4
 22273              	.LVL2736:
 22274              		.loc 1 10198 30 view .LVU6146
 22275 037e 56FA80F4 		uxtab	r4, r6, r0
 22276 0382 64B2     		sxtb	r4, r4
 22277              	.LVL2737:
 22278              	.L1538:
10199:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_6_MSB_REG,
10200:Core/Src/bno055.c ****                                                                 &data2_u8r,
10201:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10202:Core/Src/bno055.c ****                 }
10203:Core/Src/bno055.c **** 
10204:Core/Src/bno055.c ****                 /* write soft iron calibration
10205:Core/Src/bno055.c ****                  * matrix seven value*/
10206:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22279              		.loc 1 10206 17 is_stmt 1 view .LVU6147
 22280              		.loc 1 10206 37 is_stmt 0 view .LVU6148
 22281 0384 494B     		ldr	r3, .L1551
 22282 0386 1868     		ldr	r0, [r3]
 22283 0388 0669     		ldr	r6, [r0, #16]
 22284              		.loc 1 10206 29 view .LVU6149
 22285 038a 0123     		movs	r3, #1
 22286 038c 0DF10702 		add	r2, sp, #7
 22287 0390 5121     		movs	r1, #81
 22288 0392 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22289 0394 B047     		blx	r6
 22290              	.LVL2738:
 22291              		.loc 1 10206 26 view .LVU6150
 22292 0396 54FA80F4 		uxtab	r4, r4, r0
 22293              	.LVL2739:
 22294              		.loc 1 10206 26 view .LVU6151
 22295 039a E6B2     		uxtb	r6, r4
 22296 039c 64B2     		sxtb	r4, r4
 22297              	.LVL2740:
ARM GAS  /tmp/ccWoU29M.s 			page 622


10207:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_7_LSB_REG,
10208:Core/Src/bno055.c ****                                                            &data2_u8r,
10209:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10210:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22298              		.loc 1 10210 17 is_stmt 1 view .LVU6152
 22299              		.loc 1 10210 20 is_stmt 0 view .LVU6153
 22300 039e 7CB9     		cbnz	r4, .L1539
10211:Core/Src/bno055.c ****                 {
10212:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_7 & BNO055_SIC_HEX_0_0_F_F_DATA));
 22301              		.loc 1 10212 21 is_stmt 1 view .LVU6154
 22302              		.loc 1 10212 49 is_stmt 0 view .LVU6155
 22303 03a0 B5F90E30 		ldrsh	r3, [r5, #14]
 22304              	.LVL2741:
10213:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_7_LSB, data1_u8r);
 22305              		.loc 1 10213 21 is_stmt 1 view .LVU6156
 22306              		.loc 1 10213 31 is_stmt 0 view .LVU6157
 22307 03a4 8DF80730 		strb	r3, [sp, #7]
10214:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22308              		.loc 1 10214 21 is_stmt 1 view .LVU6158
 22309              		.loc 1 10214 41 is_stmt 0 view .LVU6159
 22310 03a8 404B     		ldr	r3, .L1551
 22311              	.LVL2742:
 22312              		.loc 1 10214 41 view .LVU6160
 22313 03aa 1868     		ldr	r0, [r3]
 22314 03ac C468     		ldr	r4, [r0, #12]
 22315              	.LVL2743:
 22316              		.loc 1 10214 33 view .LVU6161
 22317 03ae 0123     		movs	r3, #1
 22318 03b0 0DF10702 		add	r2, sp, #7
 22319              	.LVL2744:
 22320              		.loc 1 10214 33 view .LVU6162
 22321 03b4 5121     		movs	r1, #81
 22322 03b6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22323 03b8 A047     		blx	r4
 22324              	.LVL2745:
 22325              		.loc 1 10214 30 view .LVU6163
 22326 03ba 56FA80F4 		uxtab	r4, r6, r0
 22327 03be 64B2     		sxtb	r4, r4
 22328              	.LVL2746:
 22329              	.L1539:
10215:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_7_LSB_REG,
10216:Core/Src/bno055.c ****                                                                 &data2_u8r,
10217:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10218:Core/Src/bno055.c ****                 }
10219:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22330              		.loc 1 10219 17 is_stmt 1 view .LVU6164
 22331              		.loc 1 10219 37 is_stmt 0 view .LVU6165
 22332 03c0 3A4B     		ldr	r3, .L1551
 22333 03c2 1868     		ldr	r0, [r3]
 22334 03c4 0669     		ldr	r6, [r0, #16]
 22335              		.loc 1 10219 29 view .LVU6166
 22336 03c6 0123     		movs	r3, #1
 22337 03c8 0DF10702 		add	r2, sp, #7
 22338 03cc 5221     		movs	r1, #82
 22339 03ce 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22340 03d0 B047     		blx	r6
 22341              	.LVL2747:
ARM GAS  /tmp/ccWoU29M.s 			page 623


 22342              		.loc 1 10219 26 view .LVU6167
 22343 03d2 54FA80F4 		uxtab	r4, r4, r0
 22344              	.LVL2748:
 22345              		.loc 1 10219 26 view .LVU6168
 22346 03d6 E6B2     		uxtb	r6, r4
 22347 03d8 64B2     		sxtb	r4, r4
 22348              	.LVL2749:
10220:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_7_MSB_REG,
10221:Core/Src/bno055.c ****                                                            &data2_u8r,
10222:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10223:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22349              		.loc 1 10223 17 is_stmt 1 view .LVU6169
 22350              		.loc 1 10223 20 is_stmt 0 view .LVU6170
 22351 03da 7CB9     		cbnz	r4, .L1540
10224:Core/Src/bno055.c ****                 {
10225:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_7 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 22352              		.loc 1 10225 21 is_stmt 1 view .LVU6171
 22353              		.loc 1 10225 34 is_stmt 0 view .LVU6172
 22354 03dc 95F90F30 		ldrsb	r3, [r5, #15]
 22355              	.LVL2750:
10226:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_7_MSB, data1_u8r);
 22356              		.loc 1 10226 21 is_stmt 1 view .LVU6173
 22357              		.loc 1 10226 31 is_stmt 0 view .LVU6174
 22358 03e0 8DF80730 		strb	r3, [sp, #7]
10227:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22359              		.loc 1 10227 21 is_stmt 1 view .LVU6175
 22360              		.loc 1 10227 41 is_stmt 0 view .LVU6176
 22361 03e4 314B     		ldr	r3, .L1551
 22362              	.LVL2751:
 22363              		.loc 1 10227 41 view .LVU6177
 22364 03e6 1868     		ldr	r0, [r3]
 22365 03e8 C468     		ldr	r4, [r0, #12]
 22366              	.LVL2752:
 22367              		.loc 1 10227 33 view .LVU6178
 22368 03ea 0123     		movs	r3, #1
 22369 03ec 0DF10702 		add	r2, sp, #7
 22370              	.LVL2753:
 22371              		.loc 1 10227 33 view .LVU6179
 22372 03f0 5221     		movs	r1, #82
 22373 03f2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22374 03f4 A047     		blx	r4
 22375              	.LVL2754:
 22376              		.loc 1 10227 30 view .LVU6180
 22377 03f6 56FA80F4 		uxtab	r4, r6, r0
 22378 03fa 64B2     		sxtb	r4, r4
 22379              	.LVL2755:
 22380              	.L1540:
10228:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_7_MSB_REG,
10229:Core/Src/bno055.c ****                                                                 &data2_u8r,
10230:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10231:Core/Src/bno055.c ****                 }
10232:Core/Src/bno055.c **** 
10233:Core/Src/bno055.c ****                 /* write soft iron calibration
10234:Core/Src/bno055.c ****                  * matrix eight value*/
10235:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22381              		.loc 1 10235 17 is_stmt 1 view .LVU6181
 22382              		.loc 1 10235 37 is_stmt 0 view .LVU6182
ARM GAS  /tmp/ccWoU29M.s 			page 624


 22383 03fc 2B4B     		ldr	r3, .L1551
 22384 03fe 1868     		ldr	r0, [r3]
 22385 0400 0669     		ldr	r6, [r0, #16]
 22386              		.loc 1 10235 29 view .LVU6183
 22387 0402 0123     		movs	r3, #1
 22388 0404 0DF10702 		add	r2, sp, #7
 22389 0408 5321     		movs	r1, #83
 22390 040a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22391 040c B047     		blx	r6
 22392              	.LVL2756:
 22393              		.loc 1 10235 26 view .LVU6184
 22394 040e 54FA80F4 		uxtab	r4, r4, r0
 22395              	.LVL2757:
 22396              		.loc 1 10235 26 view .LVU6185
 22397 0412 E6B2     		uxtb	r6, r4
 22398 0414 64B2     		sxtb	r4, r4
 22399              	.LVL2758:
10236:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_8_LSB_REG,
10237:Core/Src/bno055.c ****                                                            &data2_u8r,
10238:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10239:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22400              		.loc 1 10239 17 is_stmt 1 view .LVU6186
 22401              		.loc 1 10239 20 is_stmt 0 view .LVU6187
 22402 0416 7CB9     		cbnz	r4, .L1541
10240:Core/Src/bno055.c ****                 {
10241:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_8 & BNO055_SIC_HEX_0_0_F_F_DATA));
 22403              		.loc 1 10241 21 is_stmt 1 view .LVU6188
 22404              		.loc 1 10241 49 is_stmt 0 view .LVU6189
 22405 0418 B5F91030 		ldrsh	r3, [r5, #16]
 22406              	.LVL2759:
10242:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_8_LSB, data1_u8r);
 22407              		.loc 1 10242 21 is_stmt 1 view .LVU6190
 22408              		.loc 1 10242 31 is_stmt 0 view .LVU6191
 22409 041c 8DF80730 		strb	r3, [sp, #7]
10243:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22410              		.loc 1 10243 21 is_stmt 1 view .LVU6192
 22411              		.loc 1 10243 41 is_stmt 0 view .LVU6193
 22412 0420 224B     		ldr	r3, .L1551
 22413              	.LVL2760:
 22414              		.loc 1 10243 41 view .LVU6194
 22415 0422 1868     		ldr	r0, [r3]
 22416 0424 C468     		ldr	r4, [r0, #12]
 22417              	.LVL2761:
 22418              		.loc 1 10243 33 view .LVU6195
 22419 0426 0123     		movs	r3, #1
 22420 0428 0DF10702 		add	r2, sp, #7
 22421              	.LVL2762:
 22422              		.loc 1 10243 33 view .LVU6196
 22423 042c 5321     		movs	r1, #83
 22424 042e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22425 0430 A047     		blx	r4
 22426              	.LVL2763:
 22427              		.loc 1 10243 30 view .LVU6197
 22428 0432 56FA80F4 		uxtab	r4, r6, r0
 22429 0436 64B2     		sxtb	r4, r4
 22430              	.LVL2764:
 22431              	.L1541:
ARM GAS  /tmp/ccWoU29M.s 			page 625


10244:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_8_LSB_REG,
10245:Core/Src/bno055.c ****                                                                 &data2_u8r,
10246:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10247:Core/Src/bno055.c ****                 }
10248:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22432              		.loc 1 10248 17 is_stmt 1 view .LVU6198
 22433              		.loc 1 10248 37 is_stmt 0 view .LVU6199
 22434 0438 1C4B     		ldr	r3, .L1551
 22435 043a 1868     		ldr	r0, [r3]
 22436 043c 0669     		ldr	r6, [r0, #16]
 22437              		.loc 1 10248 29 view .LVU6200
 22438 043e 0123     		movs	r3, #1
 22439 0440 0DF10702 		add	r2, sp, #7
 22440 0444 5421     		movs	r1, #84
 22441 0446 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22442 0448 B047     		blx	r6
 22443              	.LVL2765:
 22444              		.loc 1 10248 26 view .LVU6201
 22445 044a 54FA80F4 		uxtab	r4, r4, r0
 22446              	.LVL2766:
 22447              		.loc 1 10248 26 view .LVU6202
 22448 044e E6B2     		uxtb	r6, r4
 22449 0450 64B2     		sxtb	r4, r4
 22450              	.LVL2767:
10249:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_8_MSB_REG,
10250:Core/Src/bno055.c ****                                                            &data2_u8r,
10251:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10252:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22451              		.loc 1 10252 17 is_stmt 1 view .LVU6203
 22452              		.loc 1 10252 20 is_stmt 0 view .LVU6204
 22453 0452 C4B9     		cbnz	r4, .L1523
10253:Core/Src/bno055.c ****                 {
10254:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_8 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 22454              		.loc 1 10254 21 is_stmt 1 view .LVU6205
 22455              		.loc 1 10254 34 is_stmt 0 view .LVU6206
 22456 0454 95F91130 		ldrsb	r3, [r5, #17]
 22457              	.LVL2768:
10255:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_8_MSB, data1_u8r);
 22458              		.loc 1 10255 21 is_stmt 1 view .LVU6207
 22459              		.loc 1 10255 31 is_stmt 0 view .LVU6208
 22460 0458 8DF80730 		strb	r3, [sp, #7]
10256:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22461              		.loc 1 10256 21 is_stmt 1 view .LVU6209
 22462              		.loc 1 10256 41 is_stmt 0 view .LVU6210
 22463 045c 134B     		ldr	r3, .L1551
 22464              	.LVL2769:
 22465              		.loc 1 10256 41 view .LVU6211
 22466 045e 1868     		ldr	r0, [r3]
 22467 0460 C468     		ldr	r4, [r0, #12]
 22468              	.LVL2770:
 22469              		.loc 1 10256 33 view .LVU6212
 22470 0462 0123     		movs	r3, #1
 22471 0464 0DF10702 		add	r2, sp, #7
 22472              	.LVL2771:
 22473              		.loc 1 10256 33 view .LVU6213
 22474 0468 5421     		movs	r1, #84
 22475 046a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 626


 22476 046c A047     		blx	r4
 22477              	.LVL2772:
 22478              		.loc 1 10256 30 view .LVU6214
 22479 046e 56FA80F4 		uxtab	r4, r6, r0
 22480 0472 64B2     		sxtb	r4, r4
 22481              	.LVL2773:
 22482              		.loc 1 10256 30 view .LVU6215
 22483 0474 07E0     		b	.L1523
 22484              	.LVL2774:
 22485              	.L1546:
9997:Core/Src/bno055.c ****             }
 22486              		.loc 1 9997 17 is_stmt 1 view .LVU6216
9997:Core/Src/bno055.c ****             }
 22487              		.loc 1 9997 28 is_stmt 0 view .LVU6217
 22488 0476 FFF7FEFF 		bl	bno055_set_operation_mode
 22489              	.LVL2775:
9997:Core/Src/bno055.c ****             }
 22490              		.loc 1 9997 25 view .LVU6218
 22491 047a 54FA80F4 		uxtab	r4, r4, r0
 22492 047e 64B2     		sxtb	r4, r4
 22493              	.LVL2776:
9997:Core/Src/bno055.c ****             }
 22494              		.loc 1 9997 25 view .LVU6219
 22495 0480 D8E5     		b	.L1524
 22496              	.LVL2777:
 22497              	.L1543:
10257:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_8_MSB_REG,
10258:Core/Src/bno055.c ****                                                                 &data2_u8r,
10259:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10260:Core/Src/bno055.c ****                 }
10261:Core/Src/bno055.c ****             }
10262:Core/Src/bno055.c ****             else
10263:Core/Src/bno055.c ****             {
10264:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10265:Core/Src/bno055.c ****             }
10266:Core/Src/bno055.c ****         }
10267:Core/Src/bno055.c ****         else
10268:Core/Src/bno055.c ****         {
10269:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 22498              		.loc 1 10269 22 view .LVU6220
 22499 0482 4FF0FF34 		mov	r4, #-1
 22500              	.LVL2778:
 22501              	.L1523:
10270:Core/Src/bno055.c ****         }
10271:Core/Src/bno055.c ****     }
10272:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 22502              		.loc 1 10272 5 is_stmt 1 view .LVU6221
 22503              		.loc 1 10272 24 is_stmt 0 view .LVU6222
 22504 0486 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 22505              		.loc 1 10272 8 view .LVU6223
 22506 048a 28B9     		cbnz	r0, .L1547
 22507              	.LVL2779:
 22508              	.L1522:
10273:Core/Src/bno055.c ****     {
10274:Core/Src/bno055.c ****         /* set the operation mode
10275:Core/Src/bno055.c ****          * of previous operation mode*/
10276:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
ARM GAS  /tmp/ccWoU29M.s 			page 627


10277:Core/Src/bno055.c ****     }
10278:Core/Src/bno055.c **** 
10279:Core/Src/bno055.c ****     return com_rslt;
10280:Core/Src/bno055.c **** }
 22509              		.loc 1 10280 1 view .LVU6224
 22510 048c 2046     		mov	r0, r4
 22511 048e 02B0     		add	sp, sp, #8
 22512              	.LCFI667:
 22513              		.cfi_remember_state
 22514              		.cfi_def_cfa_offset 16
 22515              		@ sp needed
 22516 0490 70BD     		pop	{r4, r5, r6, pc}
 22517              	.LVL2780:
 22518              	.L1544:
 22519              	.LCFI668:
 22520              		.cfi_restore_state
10264:Core/Src/bno055.c ****             }
 22521              		.loc 1 10264 26 view .LVU6225
 22522 0492 4FF0FF34 		mov	r4, #-1
 22523              	.LVL2781:
10264:Core/Src/bno055.c ****             }
 22524              		.loc 1 10264 26 view .LVU6226
 22525 0496 F6E7     		b	.L1523
 22526              	.LVL2782:
 22527              	.L1547:
10276:Core/Src/bno055.c ****     }
 22528              		.loc 1 10276 9 is_stmt 1 view .LVU6227
10276:Core/Src/bno055.c ****     }
 22529              		.loc 1 10276 21 is_stmt 0 view .LVU6228
 22530 0498 FFF7FEFF 		bl	bno055_set_operation_mode
 22531              	.LVL2783:
10276:Core/Src/bno055.c ****     }
 22532              		.loc 1 10276 18 view .LVU6229
 22533 049c 54FA80F4 		uxtab	r4, r4, r0
 22534              	.LVL2784:
10276:Core/Src/bno055.c ****     }
 22535              		.loc 1 10276 18 view .LVU6230
 22536 04a0 64B2     		sxtb	r4, r4
 22537              	.LVL2785:
10276:Core/Src/bno055.c ****     }
 22538              		.loc 1 10276 18 view .LVU6231
 22539 04a2 F3E7     		b	.L1522
 22540              	.LVL2786:
 22541              	.L1542:
9985:Core/Src/bno055.c ****     }
 22542              		.loc 1 9985 16 view .LVU6232
 22543 04a4 6FF07E04 		mvn	r4, #126
 22544 04a8 F0E7     		b	.L1522
 22545              	.L1552:
 22546 04aa 00BF     		.align	2
 22547              	.L1551:
 22548 04ac 00000000 		.word	.LANCHOR0
 22549              		.cfi_endproc
 22550              	.LFE168:
 22552              		.section	.text.bno055_read_accel_offset,"ax",%progbits
 22553              		.align	1
 22554              		.global	bno055_read_accel_offset
ARM GAS  /tmp/ccWoU29M.s 			page 628


 22555              		.syntax unified
 22556              		.thumb
 22557              		.thumb_func
 22558              		.fpu fpv4-sp-d16
 22560              	bno055_read_accel_offset:
 22561              	.LVL2787:
 22562              	.LFB169:
10281:Core/Src/bno055.c **** 
10282:Core/Src/bno055.c **** /*!
10283:Core/Src/bno055.c ****  *  @brief This API is used to read accel offset and accel radius
10284:Core/Src/bno055.c ****  *  offset form register 0x55 to 0x5A and radius form 0x67 and 0x68
10285:Core/Src/bno055.c ****  *
10286:Core/Src/bno055.c ****  *  @param accel_offset : The value of accel offset and radius
10287:Core/Src/bno055.c ****  *
10288:Core/Src/bno055.c ****  *      bno055_accel_offset_t |     result
10289:Core/Src/bno055.c ****  *      ------------------- | ----------------
10290:Core/Src/bno055.c ****  *               x          |  accel offset x
10291:Core/Src/bno055.c ****  *               y          |  accel offset y
10292:Core/Src/bno055.c ****  *               z          |  accel offset z
10293:Core/Src/bno055.c ****  *               r          |  accel offset r
10294:Core/Src/bno055.c ****  *
10295:Core/Src/bno055.c ****  *
10296:Core/Src/bno055.c ****  *  @return results of bus communication function
10297:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10298:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10299:Core/Src/bno055.c ****  *
10300:Core/Src/bno055.c ****  *  @note  The range of the accel offset varies based on
10301:Core/Src/bno055.c ****  *  the G-range of accel sensor.
10302:Core/Src/bno055.c ****  *
10303:Core/Src/bno055.c ****  *  accel G range   |  offset range
10304:Core/Src/bno055.c ****  * ---------------  |  --------------
10305:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_2G  |   +/-2000
10306:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_4G  |   +/-4000
10307:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_8G  |   +/-8000
10308:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_16G |   +/-16000
10309:Core/Src/bno055.c ****  *
10310:Core/Src/bno055.c ****  *  accel G range can be configured by using the
10311:Core/Src/bno055.c ****  *  bno055_set_accel_range() API
10312:Core/Src/bno055.c ****  */
10313:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_offset(struct bno055_accel_offset_t  *accel_offset)
10314:Core/Src/bno055.c **** {
 22563              		.loc 1 10314 1 is_stmt 1 view -0
 22564              		.cfi_startproc
 22565              		@ args = 0, pretend = 0, frame = 8
 22566              		@ frame_needed = 0, uses_anonymous_args = 0
 22567              		.loc 1 10314 1 is_stmt 0 view .LVU6234
 22568 0000 70B5     		push	{r4, r5, r6, lr}
 22569              	.LCFI669:
 22570              		.cfi_def_cfa_offset 16
 22571              		.cfi_offset 4, -16
 22572              		.cfi_offset 5, -12
 22573              		.cfi_offset 6, -8
 22574              		.cfi_offset 14, -4
 22575 0002 82B0     		sub	sp, sp, #8
 22576              	.LCFI670:
 22577              		.cfi_def_cfa_offset 24
 22578 0004 0446     		mov	r4, r0
ARM GAS  /tmp/ccWoU29M.s 			page 629


10315:Core/Src/bno055.c ****     /* Variable used to return value of
10316:Core/Src/bno055.c ****      * communication routine*/
10317:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 22579              		.loc 1 10317 5 is_stmt 1 view .LVU6235
 22580              	.LVL2788:
10318:Core/Src/bno055.c **** 
10319:Core/Src/bno055.c ****     /* Array holding the accel offset values
10320:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] - offset x->LSB
10321:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] - offset x->MSB
10322:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] - offset y->LSB
10323:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] - offset y->MSB
10324:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] - offset z->LSB
10325:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] - offset z->MSB
10326:Core/Src/bno055.c ****      */
10327:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_OFFSET_ARRAY] = {
 22581              		.loc 1 10327 5 view .LVU6236
 22582              		.loc 1 10327 8 is_stmt 0 view .LVU6237
 22583 0006 2C4B     		ldr	r3, .L1563
 22584 0008 93E80300 		ldm	r3, {r0, r1}
 22585              	.LVL2789:
 22586              		.loc 1 10327 8 view .LVU6238
 22587 000c 0090     		str	r0, [sp]
 22588 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
10328:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
10329:Core/Src/bno055.c ****     };
10330:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 22589              		.loc 1 10330 5 is_stmt 1 view .LVU6239
 22590              	.LVL2790:
10331:Core/Src/bno055.c **** 
10332:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
10333:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 22591              		.loc 1 10333 5 view .LVU6240
 22592              		.loc 1 10333 18 is_stmt 0 view .LVU6241
 22593 0012 2A4B     		ldr	r3, .L1563+4
 22594 0014 1B68     		ldr	r3, [r3]
 22595              		.loc 1 10333 8 view .LVU6242
 22596 0016 002B     		cmp	r3, #0
 22597 0018 42D0     		beq	.L1557
10334:Core/Src/bno055.c ****     {
10335:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10336:Core/Src/bno055.c ****     }
10337:Core/Src/bno055.c ****     else
10338:Core/Src/bno055.c ****     {
10339:Core/Src/bno055.c ****         /*condition check for page, accel offset is
10340:Core/Src/bno055.c ****          * available in the page zero*/
10341:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 22598              		.loc 1 10341 9 is_stmt 1 view .LVU6243
 22599              		.loc 1 10341 21 is_stmt 0 view .LVU6244
 22600 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 22601              		.loc 1 10341 12 view .LVU6245
 22602 001c 002B     		cmp	r3, #0
 22603 001e 39D1     		bne	.L1562
 22604              	.LVL2791:
 22605              	.L1555:
10342:Core/Src/bno055.c ****         {
10343:Core/Src/bno055.c ****             /* Write the page zero*/
10344:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
ARM GAS  /tmp/ccWoU29M.s 			page 630


10345:Core/Src/bno055.c ****         }
10346:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 22606              		.loc 1 10346 53 discriminator 1 view .LVU6246
 22607 0020 264B     		ldr	r3, .L1563+4
 22608 0022 1B68     		ldr	r3, [r3]
 22609 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 22610              		.loc 1 10346 41 discriminator 1 view .LVU6247
 22611 0026 002B     		cmp	r3, #0
 22612 0028 3DD1     		bne	.L1558
 22613              	.L1556:
10347:Core/Src/bno055.c ****         {
10348:Core/Src/bno055.c ****             /* Read accel offset value it is six bytes of data*/
10349:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22614              		.loc 1 10349 13 is_stmt 1 view .LVU6248
 22615              		.loc 1 10349 32 is_stmt 0 view .LVU6249
 22616 002a 244B     		ldr	r3, .L1563+4
 22617 002c 1868     		ldr	r0, [r3]
 22618 002e 0569     		ldr	r5, [r0, #16]
 22619              		.loc 1 10349 24 view .LVU6250
 22620 0030 0623     		movs	r3, #6
 22621 0032 6A46     		mov	r2, sp
 22622 0034 5521     		movs	r1, #85
 22623 0036 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22624 0038 A847     		blx	r5
 22625              	.LVL2792:
10350:Core/Src/bno055.c ****                                                       BNO055_ACCEL_OFFSET_X_LSB_REG,
10351:Core/Src/bno055.c ****                                                       data_u8,
10352:Core/Src/bno055.c ****                                                       BNO055_ACCEL_OFFSET_ARRAY);
10353:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 22626              		.loc 1 10353 13 is_stmt 1 view .LVU6251
 22627              		.loc 1 10353 16 is_stmt 0 view .LVU6252
 22628 003a 0546     		mov	r5, r0
 22629 003c 0028     		cmp	r0, #0
 22630 003e 35D1     		bne	.L1559
10354:Core/Src/bno055.c ****             {
10355:Core/Src/bno055.c ****                 /* Read accel x offset value*/
10356:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22631              		.loc 1 10356 17 is_stmt 1 view .LVU6253
10357:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10358:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22632              		.loc 1 10358 17 view .LVU6254
10359:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10360:Core/Src/bno055.c ****                 accel_offset->x =
 22633              		.loc 1 10360 17 view .LVU6255
10361:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 22634              		.loc 1 10361 34 is_stmt 0 view .LVU6256
 22635 0040 9DF90120 		ldrsb	r2, [sp, #1]
10362:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB]));
 22636              		.loc 1 10362 35 view .LVU6257
 22637 0044 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
10361:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 22638              		.loc 1 10361 21 view .LVU6258
 22639 0048 43EA0223 		orr	r3, r3, r2, lsl #8
10360:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 22640              		.loc 1 10360 33 view .LVU6259
 22641 004c 2380     		strh	r3, [r4]	@ movhi
10363:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 631


10364:Core/Src/bno055.c ****                 /* Read accel y offset value*/
10365:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22642              		.loc 1 10365 17 is_stmt 1 view .LVU6260
10366:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10367:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22643              		.loc 1 10367 17 view .LVU6261
10368:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10369:Core/Src/bno055.c ****                 accel_offset->y =
 22644              		.loc 1 10369 17 view .LVU6262
10370:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 22645              		.loc 1 10370 34 is_stmt 0 view .LVU6263
 22646 004e 9DF90320 		ldrsb	r2, [sp, #3]
10371:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB]));
 22647              		.loc 1 10371 35 view .LVU6264
 22648 0052 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
10370:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 22649              		.loc 1 10370 21 view .LVU6265
 22650 0056 43EA0223 		orr	r3, r3, r2, lsl #8
10369:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 22651              		.loc 1 10369 33 view .LVU6266
 22652 005a 6380     		strh	r3, [r4, #2]	@ movhi
10372:Core/Src/bno055.c **** 
10373:Core/Src/bno055.c ****                 /* Read accel z offset value*/
10374:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22653              		.loc 1 10374 17 is_stmt 1 view .LVU6267
10375:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10376:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22654              		.loc 1 10376 17 view .LVU6268
10377:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10378:Core/Src/bno055.c ****                 accel_offset->z =
 22655              		.loc 1 10378 17 view .LVU6269
10379:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 22656              		.loc 1 10379 34 is_stmt 0 view .LVU6270
 22657 005c 9DF90520 		ldrsb	r2, [sp, #5]
10380:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB]));
 22658              		.loc 1 10380 35 view .LVU6271
 22659 0060 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
10379:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 22660              		.loc 1 10379 21 view .LVU6272
 22661 0064 43EA0223 		orr	r3, r3, r2, lsl #8
10378:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 22662              		.loc 1 10378 33 view .LVU6273
 22663 0068 A380     		strh	r3, [r4, #4]	@ movhi
10381:Core/Src/bno055.c **** 
10382:Core/Src/bno055.c ****                 /* Read accel radius value
10383:Core/Src/bno055.c ****                  * it is two bytes of data*/
10384:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22664              		.loc 1 10384 17 is_stmt 1 view .LVU6274
 22665              		.loc 1 10384 37 is_stmt 0 view .LVU6275
 22666 006a 144B     		ldr	r3, .L1563+4
 22667 006c 1868     		ldr	r0, [r3]
 22668              	.LVL2793:
 22669              		.loc 1 10384 37 view .LVU6276
 22670 006e 0669     		ldr	r6, [r0, #16]
 22671              		.loc 1 10384 29 view .LVU6277
 22672 0070 0223     		movs	r3, #2
 22673 0072 6A46     		mov	r2, sp
ARM GAS  /tmp/ccWoU29M.s 			page 632


 22674 0074 6721     		movs	r1, #103
 22675 0076 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22676 0078 B047     		blx	r6
 22677              	.LVL2794:
 22678              		.loc 1 10384 26 view .LVU6278
 22679 007a 55FA80F0 		uxtab	r0, r5, r0
 22680 007e 40B2     		sxtb	r0, r0
 22681              	.LVL2795:
10385:Core/Src/bno055.c ****                                                            BNO055_ACCEL_RADIUS_LSB_REG,
10386:Core/Src/bno055.c ****                                                            data_u8,
10387:Core/Src/bno055.c ****                                                            BNO055_LSB_MSB_READ_LENGTH);
10388:Core/Src/bno055.c **** 
10389:Core/Src/bno055.c ****                 /* Array holding the accel radius values
10390:Core/Src/bno055.c ****                  * data_u8[BNO055_OFFSET_RADIUS_LSB] - radius->LSB
10391:Core/Src/bno055.c ****                  * data_u8[BNO055_OFFSET_RADIUS_MSB] - radius->MSB
10392:Core/Src/bno055.c ****                  */
10393:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22682              		.loc 1 10393 17 is_stmt 1 view .LVU6279
 22683              		.loc 1 10393 20 is_stmt 0 view .LVU6280
 22684 0080 B8B9     		cbnz	r0, .L1560
10394:Core/Src/bno055.c ****                 {
10395:Core/Src/bno055.c ****                     data_u8[BNO055_OFFSET_RADIUS_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_OFFSET_R
 22685              		.loc 1 10395 21 is_stmt 1 view .LVU6281
10396:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_RADIUS_LSB
10397:Core/Src/bno055.c ****                     data_u8[BNO055_OFFSET_RADIUS_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_OFFSET_R
 22686              		.loc 1 10397 21 view .LVU6282
10398:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_RADIUS_MSB
10399:Core/Src/bno055.c ****                     accel_offset->r =
 22687              		.loc 1 10399 21 view .LVU6283
10400:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 22688              		.loc 1 10400 38 is_stmt 0 view .LVU6284
 22689 0082 9DF90120 		ldrsb	r2, [sp, #1]
10401:Core/Src/bno055.c ****                               (data_u8[BNO055_OFFSET_RADIUS_LSB]));
 22690              		.loc 1 10401 39 view .LVU6285
 22691 0086 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
10400:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 22692              		.loc 1 10400 25 view .LVU6286
 22693 008a 43EA0223 		orr	r3, r3, r2, lsl #8
10399:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 22694              		.loc 1 10399 37 view .LVU6287
 22695 008e E380     		strh	r3, [r4, #6]	@ movhi
 22696              	.LVL2796:
 22697              	.L1554:
10402:Core/Src/bno055.c ****                 }
10403:Core/Src/bno055.c ****                 else
10404:Core/Src/bno055.c ****                 {
10405:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
10406:Core/Src/bno055.c ****                 }
10407:Core/Src/bno055.c ****             }
10408:Core/Src/bno055.c ****             else
10409:Core/Src/bno055.c ****             {
10410:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10411:Core/Src/bno055.c ****             }
10412:Core/Src/bno055.c ****         }
10413:Core/Src/bno055.c ****         else
10414:Core/Src/bno055.c ****         {
10415:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 633


10416:Core/Src/bno055.c ****         }
10417:Core/Src/bno055.c ****     }
10418:Core/Src/bno055.c **** 
10419:Core/Src/bno055.c ****     return com_rslt;
10420:Core/Src/bno055.c **** }
 22698              		.loc 1 10420 1 view .LVU6288
 22699 0090 02B0     		add	sp, sp, #8
 22700              	.LCFI671:
 22701              		.cfi_remember_state
 22702              		.cfi_def_cfa_offset 16
 22703              		@ sp needed
 22704 0092 70BD     		pop	{r4, r5, r6, pc}
 22705              	.LVL2797:
 22706              	.L1562:
 22707              	.LCFI672:
 22708              		.cfi_restore_state
10344:Core/Src/bno055.c ****         }
 22709              		.loc 1 10344 13 is_stmt 1 view .LVU6289
10344:Core/Src/bno055.c ****         }
 22710              		.loc 1 10344 23 is_stmt 0 view .LVU6290
 22711 0094 0020     		movs	r0, #0
 22712 0096 FFF7FEFF 		bl	bno055_write_page_id
 22713              	.LVL2798:
10346:Core/Src/bno055.c ****         {
 22714              		.loc 1 10346 9 is_stmt 1 view .LVU6291
10346:Core/Src/bno055.c ****         {
 22715              		.loc 1 10346 12 is_stmt 0 view .LVU6292
 22716 009a 0028     		cmp	r0, #0
 22717 009c C5D0     		beq	.L1556
 22718 009e BFE7     		b	.L1555
 22719              	.LVL2799:
 22720              	.L1557:
10335:Core/Src/bno055.c ****     }
 22721              		.loc 1 10335 16 view .LVU6293
 22722 00a0 6FF07E00 		mvn	r0, #126
 22723 00a4 F4E7     		b	.L1554
 22724              	.LVL2800:
 22725              	.L1558:
10415:Core/Src/bno055.c ****         }
 22726              		.loc 1 10415 22 view .LVU6294
 22727 00a6 4FF0FF30 		mov	r0, #-1
 22728 00aa F1E7     		b	.L1554
 22729              	.LVL2801:
 22730              	.L1559:
10410:Core/Src/bno055.c ****             }
 22731              		.loc 1 10410 26 view .LVU6295
 22732 00ac 4FF0FF30 		mov	r0, #-1
 22733              	.LVL2802:
10410:Core/Src/bno055.c ****             }
 22734              		.loc 1 10410 26 view .LVU6296
 22735 00b0 EEE7     		b	.L1554
 22736              	.LVL2803:
 22737              	.L1560:
10405:Core/Src/bno055.c ****                 }
 22738              		.loc 1 10405 30 view .LVU6297
 22739 00b2 4FF0FF30 		mov	r0, #-1
 22740              	.LVL2804:
ARM GAS  /tmp/ccWoU29M.s 			page 634


10405:Core/Src/bno055.c ****                 }
 22741              		.loc 1 10405 30 view .LVU6298
 22742 00b6 EBE7     		b	.L1554
 22743              	.L1564:
 22744              		.align	2
 22745              	.L1563:
 22746 00b8 00000000 		.word	.LANCHOR1
 22747 00bc 00000000 		.word	.LANCHOR0
 22748              		.cfi_endproc
 22749              	.LFE169:
 22751              		.section	.text.bno055_write_accel_offset,"ax",%progbits
 22752              		.align	1
 22753              		.global	bno055_write_accel_offset
 22754              		.syntax unified
 22755              		.thumb
 22756              		.thumb_func
 22757              		.fpu fpv4-sp-d16
 22759              	bno055_write_accel_offset:
 22760              	.LVL2805:
 22761              	.LFB170:
10421:Core/Src/bno055.c **** 
10422:Core/Src/bno055.c **** /*!
10423:Core/Src/bno055.c ****  *  @brief This API is used to write accel offset and accel radius
10424:Core/Src/bno055.c ****  *  offset form register 0x55 to 0x5A and radius form 0x67 and 0x68
10425:Core/Src/bno055.c ****  *
10426:Core/Src/bno055.c ****  *  @param accel_offset : The value of accel offset and radius
10427:Core/Src/bno055.c ****  *
10428:Core/Src/bno055.c ****  *      bno055_accel_offset_t |     result
10429:Core/Src/bno055.c ****  *      ------------------- | ----------------
10430:Core/Src/bno055.c ****  *               x          |  accel offset x
10431:Core/Src/bno055.c ****  *               y          |  accel offset y
10432:Core/Src/bno055.c ****  *               z          |  accel offset z
10433:Core/Src/bno055.c ****  *               r          |  accel offset r
10434:Core/Src/bno055.c ****  *
10435:Core/Src/bno055.c ****  *
10436:Core/Src/bno055.c ****  *  @return results of bus communication function
10437:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10438:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10439:Core/Src/bno055.c ****  *
10440:Core/Src/bno055.c ****  *  @note  The range of the accel offset varies based on
10441:Core/Src/bno055.c ****  *  the G-range of accel sensor.
10442:Core/Src/bno055.c ****  *
10443:Core/Src/bno055.c ****  *  accel G range   |  offset range
10444:Core/Src/bno055.c ****  * ---------------  |  --------------
10445:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_2G  |   +/-2000
10446:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_4G  |   +/-4000
10447:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_8G  |   +/-8000
10448:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_16G |   +/-16000
10449:Core/Src/bno055.c ****  *
10450:Core/Src/bno055.c ****  *  accel G range can be configured by using the
10451:Core/Src/bno055.c ****  *  bno055_set_accel_range() API
10452:Core/Src/bno055.c ****  */
10453:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_accel_offset(struct bno055_accel_offset_t  *accel_offset)
10454:Core/Src/bno055.c **** {
 22762              		.loc 1 10454 1 is_stmt 1 view -0
 22763              		.cfi_startproc
 22764              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccWoU29M.s 			page 635


 22765              		@ frame_needed = 0, uses_anonymous_args = 0
 22766              		.loc 1 10454 1 is_stmt 0 view .LVU6300
 22767 0000 70B5     		push	{r4, r5, r6, lr}
 22768              	.LCFI673:
 22769              		.cfi_def_cfa_offset 16
 22770              		.cfi_offset 4, -16
 22771              		.cfi_offset 5, -12
 22772              		.cfi_offset 6, -8
 22773              		.cfi_offset 14, -4
 22774 0002 82B0     		sub	sp, sp, #8
 22775              	.LCFI674:
 22776              		.cfi_def_cfa_offset 24
10455:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 22777              		.loc 1 10455 5 is_stmt 1 view .LVU6301
 22778              	.LVL2806:
10456:Core/Src/bno055.c ****     u8 data1_u8r = BNO055_INIT_VALUE;
 22779              		.loc 1 10456 5 view .LVU6302
10457:Core/Src/bno055.c ****     u8 data2_u8r = BNO055_INIT_VALUE;
 22780              		.loc 1 10457 5 view .LVU6303
 22781              		.loc 1 10457 8 is_stmt 0 view .LVU6304
 22782 0004 0023     		movs	r3, #0
 22783 0006 8DF80730 		strb	r3, [sp, #7]
10458:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 22784              		.loc 1 10458 5 is_stmt 1 view .LVU6305
 22785              		.loc 1 10458 8 is_stmt 0 view .LVU6306
 22786 000a 8DF80630 		strb	r3, [sp, #6]
10459:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 22787              		.loc 1 10459 5 is_stmt 1 view .LVU6307
 22788              	.LVL2807:
10460:Core/Src/bno055.c **** 
10461:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
10462:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 22789              		.loc 1 10462 5 view .LVU6308
 22790              		.loc 1 10462 18 is_stmt 0 view .LVU6309
 22791 000e 8C4B     		ldr	r3, .L1582
 22792 0010 1B68     		ldr	r3, [r3]
 22793              		.loc 1 10462 8 view .LVU6310
 22794 0012 002B     		cmp	r3, #0
 22795 0014 00F01081 		beq	.L1576
 22796 0018 0546     		mov	r5, r0
10463:Core/Src/bno055.c ****     {
10464:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10465:Core/Src/bno055.c ****     }
10466:Core/Src/bno055.c ****     else
10467:Core/Src/bno055.c ****     {
10468:Core/Src/bno055.c ****         /* The write operation effective only if the operation
10469:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
10470:Core/Src/bno055.c ****          * current operation mode and set the config mode */
10471:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 22797              		.loc 1 10471 9 is_stmt 1 view .LVU6311
 22798              		.loc 1 10471 19 is_stmt 0 view .LVU6312
 22799 001a 0DF10600 		add	r0, sp, #6
 22800              	.LVL2808:
 22801              		.loc 1 10471 19 view .LVU6313
 22802 001e FFF7FEFF 		bl	bno055_get_operation_mode
 22803              	.LVL2809:
10472:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
ARM GAS  /tmp/ccWoU29M.s 			page 636


 22804              		.loc 1 10472 9 is_stmt 1 view .LVU6314
 22805              		.loc 1 10472 12 is_stmt 0 view .LVU6315
 22806 0022 0446     		mov	r4, r0
 22807 0024 0028     		cmp	r0, #0
 22808 0026 40F0F680 		bne	.L1577
10473:Core/Src/bno055.c ****         {
10474:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 22809              		.loc 1 10474 13 is_stmt 1 view .LVU6316
 22810              		.loc 1 10474 32 is_stmt 0 view .LVU6317
 22811 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 22812              		.loc 1 10474 16 view .LVU6318
 22813 002e 002B     		cmp	r3, #0
 22814 0030 40F0EB80 		bne	.L1580
 22815              	.LVL2810:
 22816              	.L1568:
10475:Core/Src/bno055.c ****             {
10476:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
10477:Core/Src/bno055.c ****             }
10478:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 22817              		.loc 1 10478 13 is_stmt 1 view .LVU6319
 22818              		.loc 1 10478 16 is_stmt 0 view .LVU6320
 22819 0034 002C     		cmp	r4, #0
 22820 0036 40F0F680 		bne	.L1578
10479:Core/Src/bno055.c ****             {
10480:Core/Src/bno055.c ****                 /* write accel offset x value*/
10481:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22821              		.loc 1 10481 17 is_stmt 1 view .LVU6321
 22822              		.loc 1 10481 36 is_stmt 0 view .LVU6322
 22823 003a 814B     		ldr	r3, .L1582
 22824 003c 1868     		ldr	r0, [r3]
 22825 003e 0469     		ldr	r4, [r0, #16]
 22826              	.LVL2811:
 22827              		.loc 1 10481 28 view .LVU6323
 22828 0040 0123     		movs	r3, #1
 22829 0042 0DF10702 		add	r2, sp, #7
 22830 0046 5521     		movs	r1, #85
 22831 0048 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22832 004a A047     		blx	r4
 22833              	.LVL2812:
10482:Core/Src/bno055.c ****                                                           BNO055_ACCEL_OFFSET_X_LSB_REG,
10483:Core/Src/bno055.c ****                                                           &data2_u8r,
10484:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
10485:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22834              		.loc 1 10485 17 is_stmt 1 view .LVU6324
 22835              		.loc 1 10485 20 is_stmt 0 view .LVU6325
 22836 004c 0446     		mov	r4, r0
 22837 004e 78B9     		cbnz	r0, .L1569
10486:Core/Src/bno055.c ****                 {
10487:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->x & BNO055_SIC_HEX_0_0_F_F_DATA));
 22838              		.loc 1 10487 21 is_stmt 1 view .LVU6326
 22839              		.loc 1 10487 51 is_stmt 0 view .LVU6327
 22840 0050 B5F90030 		ldrsh	r3, [r5]
 22841              	.LVL2813:
10488:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_X_LSB, data1_u8r
 22842              		.loc 1 10488 21 is_stmt 1 view .LVU6328
 22843              		.loc 1 10488 31 is_stmt 0 view .LVU6329
 22844 0054 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/ccWoU29M.s 			page 637


10489:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22845              		.loc 1 10489 21 is_stmt 1 view .LVU6330
 22846              		.loc 1 10489 41 is_stmt 0 view .LVU6331
 22847 0058 794B     		ldr	r3, .L1582
 22848              	.LVL2814:
 22849              		.loc 1 10489 41 view .LVU6332
 22850 005a 1868     		ldr	r0, [r3]
 22851              	.LVL2815:
 22852              		.loc 1 10489 41 view .LVU6333
 22853 005c C668     		ldr	r6, [r0, #12]
 22854              		.loc 1 10489 33 view .LVU6334
 22855 005e 0123     		movs	r3, #1
 22856 0060 0DF10702 		add	r2, sp, #7
 22857              	.LVL2816:
 22858              		.loc 1 10489 33 view .LVU6335
 22859 0064 5521     		movs	r1, #85
 22860 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22861 0068 B047     		blx	r6
 22862              	.LVL2817:
 22863              		.loc 1 10489 30 view .LVU6336
 22864 006a 54FA80F4 		uxtab	r4, r4, r0
 22865 006e 64B2     		sxtb	r4, r4
 22866              	.LVL2818:
 22867              	.L1569:
10490:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_X_LSB_REG,
10491:Core/Src/bno055.c ****                                                                 &data2_u8r,
10492:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10493:Core/Src/bno055.c ****                 }
10494:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22868              		.loc 1 10494 17 is_stmt 1 view .LVU6337
 22869              		.loc 1 10494 37 is_stmt 0 view .LVU6338
 22870 0070 734B     		ldr	r3, .L1582
 22871 0072 1868     		ldr	r0, [r3]
 22872 0074 0669     		ldr	r6, [r0, #16]
 22873              		.loc 1 10494 29 view .LVU6339
 22874 0076 0123     		movs	r3, #1
 22875 0078 0DF10702 		add	r2, sp, #7
 22876 007c 5621     		movs	r1, #86
 22877 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22878 0080 B047     		blx	r6
 22879              	.LVL2819:
 22880              		.loc 1 10494 26 view .LVU6340
 22881 0082 54FA80F4 		uxtab	r4, r4, r0
 22882              	.LVL2820:
 22883              		.loc 1 10494 26 view .LVU6341
 22884 0086 E6B2     		uxtb	r6, r4
 22885 0088 64B2     		sxtb	r4, r4
 22886              	.LVL2821:
10495:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_X_MSB_REG,
10496:Core/Src/bno055.c ****                                                            &data2_u8r,
10497:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10498:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22887              		.loc 1 10498 17 is_stmt 1 view .LVU6342
 22888              		.loc 1 10498 20 is_stmt 0 view .LVU6343
 22889 008a 7CB9     		cbnz	r4, .L1570
10499:Core/Src/bno055.c ****                 {
10500:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->x >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_
ARM GAS  /tmp/ccWoU29M.s 			page 638


 22890              		.loc 1 10500 21 is_stmt 1 view .LVU6344
 22891              		.loc 1 10500 34 is_stmt 0 view .LVU6345
 22892 008c 95F90130 		ldrsb	r3, [r5, #1]
 22893              	.LVL2822:
10501:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_X_MSB, data1_u8r
 22894              		.loc 1 10501 21 is_stmt 1 view .LVU6346
 22895              		.loc 1 10501 31 is_stmt 0 view .LVU6347
 22896 0090 8DF80730 		strb	r3, [sp, #7]
10502:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22897              		.loc 1 10502 21 is_stmt 1 view .LVU6348
 22898              		.loc 1 10502 41 is_stmt 0 view .LVU6349
 22899 0094 6A4B     		ldr	r3, .L1582
 22900              	.LVL2823:
 22901              		.loc 1 10502 41 view .LVU6350
 22902 0096 1868     		ldr	r0, [r3]
 22903 0098 C468     		ldr	r4, [r0, #12]
 22904              	.LVL2824:
 22905              		.loc 1 10502 33 view .LVU6351
 22906 009a 0123     		movs	r3, #1
 22907 009c 0DF10702 		add	r2, sp, #7
 22908              	.LVL2825:
 22909              		.loc 1 10502 33 view .LVU6352
 22910 00a0 5621     		movs	r1, #86
 22911 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22912 00a4 A047     		blx	r4
 22913              	.LVL2826:
 22914              		.loc 1 10502 30 view .LVU6353
 22915 00a6 56FA80F4 		uxtab	r4, r6, r0
 22916 00aa 64B2     		sxtb	r4, r4
 22917              	.LVL2827:
 22918              	.L1570:
10503:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_X_MSB_REG,
10504:Core/Src/bno055.c ****                                                                 &data2_u8r,
10505:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10506:Core/Src/bno055.c ****                 }
10507:Core/Src/bno055.c **** 
10508:Core/Src/bno055.c ****                 /* write accel offset y value*/
10509:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22919              		.loc 1 10509 17 is_stmt 1 view .LVU6354
 22920              		.loc 1 10509 37 is_stmt 0 view .LVU6355
 22921 00ac 644B     		ldr	r3, .L1582
 22922 00ae 1868     		ldr	r0, [r3]
 22923 00b0 0669     		ldr	r6, [r0, #16]
 22924              		.loc 1 10509 29 view .LVU6356
 22925 00b2 0123     		movs	r3, #1
 22926 00b4 0DF10702 		add	r2, sp, #7
 22927 00b8 5721     		movs	r1, #87
 22928 00ba 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22929 00bc B047     		blx	r6
 22930              	.LVL2828:
 22931              		.loc 1 10509 26 view .LVU6357
 22932 00be 54FA80F4 		uxtab	r4, r4, r0
 22933              	.LVL2829:
 22934              		.loc 1 10509 26 view .LVU6358
 22935 00c2 E6B2     		uxtb	r6, r4
 22936 00c4 64B2     		sxtb	r4, r4
 22937              	.LVL2830:
ARM GAS  /tmp/ccWoU29M.s 			page 639


10510:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_Y_LSB_REG,
10511:Core/Src/bno055.c ****                                                            &data2_u8r,
10512:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10513:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22938              		.loc 1 10513 17 is_stmt 1 view .LVU6359
 22939              		.loc 1 10513 20 is_stmt 0 view .LVU6360
 22940 00c6 7CB9     		cbnz	r4, .L1571
10514:Core/Src/bno055.c ****                 {
10515:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->y & BNO055_SIC_HEX_0_0_F_F_DATA));
 22941              		.loc 1 10515 21 is_stmt 1 view .LVU6361
 22942              		.loc 1 10515 51 is_stmt 0 view .LVU6362
 22943 00c8 B5F90230 		ldrsh	r3, [r5, #2]
 22944              	.LVL2831:
10516:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_Y_LSB, data1_u8r
 22945              		.loc 1 10516 21 is_stmt 1 view .LVU6363
 22946              		.loc 1 10516 31 is_stmt 0 view .LVU6364
 22947 00cc 8DF80730 		strb	r3, [sp, #7]
10517:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22948              		.loc 1 10517 21 is_stmt 1 view .LVU6365
 22949              		.loc 1 10517 41 is_stmt 0 view .LVU6366
 22950 00d0 5B4B     		ldr	r3, .L1582
 22951              	.LVL2832:
 22952              		.loc 1 10517 41 view .LVU6367
 22953 00d2 1868     		ldr	r0, [r3]
 22954 00d4 C468     		ldr	r4, [r0, #12]
 22955              	.LVL2833:
 22956              		.loc 1 10517 33 view .LVU6368
 22957 00d6 0123     		movs	r3, #1
 22958 00d8 0DF10702 		add	r2, sp, #7
 22959              	.LVL2834:
 22960              		.loc 1 10517 33 view .LVU6369
 22961 00dc 5721     		movs	r1, #87
 22962 00de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22963 00e0 A047     		blx	r4
 22964              	.LVL2835:
 22965              		.loc 1 10517 30 view .LVU6370
 22966 00e2 56FA80F4 		uxtab	r4, r6, r0
 22967 00e6 64B2     		sxtb	r4, r4
 22968              	.LVL2836:
 22969              	.L1571:
10518:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_Y_LSB_REG,
10519:Core/Src/bno055.c ****                                                                 &data2_u8r,
10520:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10521:Core/Src/bno055.c ****                 }
10522:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22970              		.loc 1 10522 17 is_stmt 1 view .LVU6371
 22971              		.loc 1 10522 37 is_stmt 0 view .LVU6372
 22972 00e8 554B     		ldr	r3, .L1582
 22973 00ea 1868     		ldr	r0, [r3]
 22974 00ec 0669     		ldr	r6, [r0, #16]
 22975              		.loc 1 10522 29 view .LVU6373
 22976 00ee 0123     		movs	r3, #1
 22977 00f0 0DF10702 		add	r2, sp, #7
 22978 00f4 5821     		movs	r1, #88
 22979 00f6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22980 00f8 B047     		blx	r6
 22981              	.LVL2837:
ARM GAS  /tmp/ccWoU29M.s 			page 640


 22982              		.loc 1 10522 26 view .LVU6374
 22983 00fa 54FA80F4 		uxtab	r4, r4, r0
 22984              	.LVL2838:
 22985              		.loc 1 10522 26 view .LVU6375
 22986 00fe E6B2     		uxtb	r6, r4
 22987 0100 64B2     		sxtb	r4, r4
 22988              	.LVL2839:
10523:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_Y_MSB_REG,
10524:Core/Src/bno055.c ****                                                            &data2_u8r,
10525:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10526:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22989              		.loc 1 10526 17 is_stmt 1 view .LVU6376
 22990              		.loc 1 10526 20 is_stmt 0 view .LVU6377
 22991 0102 7CB9     		cbnz	r4, .L1572
10527:Core/Src/bno055.c ****                 {
10528:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->y >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_
 22992              		.loc 1 10528 21 is_stmt 1 view .LVU6378
 22993              		.loc 1 10528 34 is_stmt 0 view .LVU6379
 22994 0104 95F90330 		ldrsb	r3, [r5, #3]
 22995              	.LVL2840:
10529:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_Y_MSB, data1_u8r
 22996              		.loc 1 10529 21 is_stmt 1 view .LVU6380
 22997              		.loc 1 10529 31 is_stmt 0 view .LVU6381
 22998 0108 8DF80730 		strb	r3, [sp, #7]
10530:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22999              		.loc 1 10530 21 is_stmt 1 view .LVU6382
 23000              		.loc 1 10530 41 is_stmt 0 view .LVU6383
 23001 010c 4C4B     		ldr	r3, .L1582
 23002              	.LVL2841:
 23003              		.loc 1 10530 41 view .LVU6384
 23004 010e 1868     		ldr	r0, [r3]
 23005 0110 C468     		ldr	r4, [r0, #12]
 23006              	.LVL2842:
 23007              		.loc 1 10530 33 view .LVU6385
 23008 0112 0123     		movs	r3, #1
 23009 0114 0DF10702 		add	r2, sp, #7
 23010              	.LVL2843:
 23011              		.loc 1 10530 33 view .LVU6386
 23012 0118 5821     		movs	r1, #88
 23013 011a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23014 011c A047     		blx	r4
 23015              	.LVL2844:
 23016              		.loc 1 10530 30 view .LVU6387
 23017 011e 56FA80F4 		uxtab	r4, r6, r0
 23018 0122 64B2     		sxtb	r4, r4
 23019              	.LVL2845:
 23020              	.L1572:
10531:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_Y_MSB_REG,
10532:Core/Src/bno055.c ****                                                                 &data2_u8r,
10533:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10534:Core/Src/bno055.c ****                 }
10535:Core/Src/bno055.c **** 
10536:Core/Src/bno055.c ****                 /* write accel offset z value*/
10537:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23021              		.loc 1 10537 17 is_stmt 1 view .LVU6388
 23022              		.loc 1 10537 37 is_stmt 0 view .LVU6389
 23023 0124 464B     		ldr	r3, .L1582
ARM GAS  /tmp/ccWoU29M.s 			page 641


 23024 0126 1868     		ldr	r0, [r3]
 23025 0128 0669     		ldr	r6, [r0, #16]
 23026              		.loc 1 10537 29 view .LVU6390
 23027 012a 0123     		movs	r3, #1
 23028 012c 0DF10702 		add	r2, sp, #7
 23029 0130 5921     		movs	r1, #89
 23030 0132 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23031 0134 B047     		blx	r6
 23032              	.LVL2846:
 23033              		.loc 1 10537 26 view .LVU6391
 23034 0136 54FA80F4 		uxtab	r4, r4, r0
 23035              	.LVL2847:
 23036              		.loc 1 10537 26 view .LVU6392
 23037 013a E6B2     		uxtb	r6, r4
 23038 013c 64B2     		sxtb	r4, r4
 23039              	.LVL2848:
10538:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_Z_LSB_REG,
10539:Core/Src/bno055.c ****                                                            &data2_u8r,
10540:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10541:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23040              		.loc 1 10541 17 is_stmt 1 view .LVU6393
 23041              		.loc 1 10541 20 is_stmt 0 view .LVU6394
 23042 013e 7CB9     		cbnz	r4, .L1573
10542:Core/Src/bno055.c ****                 {
10543:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->z & BNO055_SIC_HEX_0_0_F_F_DATA));
 23043              		.loc 1 10543 21 is_stmt 1 view .LVU6395
 23044              		.loc 1 10543 51 is_stmt 0 view .LVU6396
 23045 0140 B5F90430 		ldrsh	r3, [r5, #4]
 23046              	.LVL2849:
10544:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_Z_LSB, data1_u8r
 23047              		.loc 1 10544 21 is_stmt 1 view .LVU6397
 23048              		.loc 1 10544 31 is_stmt 0 view .LVU6398
 23049 0144 8DF80730 		strb	r3, [sp, #7]
10545:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23050              		.loc 1 10545 21 is_stmt 1 view .LVU6399
 23051              		.loc 1 10545 41 is_stmt 0 view .LVU6400
 23052 0148 3D4B     		ldr	r3, .L1582
 23053              	.LVL2850:
 23054              		.loc 1 10545 41 view .LVU6401
 23055 014a 1868     		ldr	r0, [r3]
 23056 014c C468     		ldr	r4, [r0, #12]
 23057              	.LVL2851:
 23058              		.loc 1 10545 33 view .LVU6402
 23059 014e 0123     		movs	r3, #1
 23060 0150 0DF10702 		add	r2, sp, #7
 23061              	.LVL2852:
 23062              		.loc 1 10545 33 view .LVU6403
 23063 0154 5921     		movs	r1, #89
 23064 0156 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23065 0158 A047     		blx	r4
 23066              	.LVL2853:
 23067              		.loc 1 10545 30 view .LVU6404
 23068 015a 56FA80F4 		uxtab	r4, r6, r0
 23069 015e 64B2     		sxtb	r4, r4
 23070              	.LVL2854:
 23071              	.L1573:
10546:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_Z_LSB_REG,
ARM GAS  /tmp/ccWoU29M.s 			page 642


10547:Core/Src/bno055.c ****                                                                 &data2_u8r,
10548:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10549:Core/Src/bno055.c ****                 }
10550:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23072              		.loc 1 10550 17 is_stmt 1 view .LVU6405
 23073              		.loc 1 10550 37 is_stmt 0 view .LVU6406
 23074 0160 374B     		ldr	r3, .L1582
 23075 0162 1868     		ldr	r0, [r3]
 23076 0164 0669     		ldr	r6, [r0, #16]
 23077              		.loc 1 10550 29 view .LVU6407
 23078 0166 0123     		movs	r3, #1
 23079 0168 0DF10702 		add	r2, sp, #7
 23080 016c 5A21     		movs	r1, #90
 23081 016e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23082 0170 B047     		blx	r6
 23083              	.LVL2855:
 23084              		.loc 1 10550 26 view .LVU6408
 23085 0172 54FA80F4 		uxtab	r4, r4, r0
 23086              	.LVL2856:
 23087              		.loc 1 10550 26 view .LVU6409
 23088 0176 E6B2     		uxtb	r6, r4
 23089 0178 64B2     		sxtb	r4, r4
 23090              	.LVL2857:
10551:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_Z_MSB_REG,
10552:Core/Src/bno055.c ****                                                            &data2_u8r,
10553:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10554:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23091              		.loc 1 10554 17 is_stmt 1 view .LVU6410
 23092              		.loc 1 10554 20 is_stmt 0 view .LVU6411
 23093 017a 7CB9     		cbnz	r4, .L1574
10555:Core/Src/bno055.c ****                 {
10556:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->z >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_
 23094              		.loc 1 10556 21 is_stmt 1 view .LVU6412
 23095              		.loc 1 10556 34 is_stmt 0 view .LVU6413
 23096 017c 95F90530 		ldrsb	r3, [r5, #5]
 23097              	.LVL2858:
10557:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_Z_MSB, data1_u8r
 23098              		.loc 1 10557 21 is_stmt 1 view .LVU6414
 23099              		.loc 1 10557 31 is_stmt 0 view .LVU6415
 23100 0180 8DF80730 		strb	r3, [sp, #7]
10558:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23101              		.loc 1 10558 21 is_stmt 1 view .LVU6416
 23102              		.loc 1 10558 41 is_stmt 0 view .LVU6417
 23103 0184 2E4B     		ldr	r3, .L1582
 23104              	.LVL2859:
 23105              		.loc 1 10558 41 view .LVU6418
 23106 0186 1868     		ldr	r0, [r3]
 23107 0188 C468     		ldr	r4, [r0, #12]
 23108              	.LVL2860:
 23109              		.loc 1 10558 33 view .LVU6419
 23110 018a 0123     		movs	r3, #1
 23111 018c 0DF10702 		add	r2, sp, #7
 23112              	.LVL2861:
 23113              		.loc 1 10558 33 view .LVU6420
 23114 0190 5A21     		movs	r1, #90
 23115 0192 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23116 0194 A047     		blx	r4
ARM GAS  /tmp/ccWoU29M.s 			page 643


 23117              	.LVL2862:
 23118              		.loc 1 10558 30 view .LVU6421
 23119 0196 56FA80F4 		uxtab	r4, r6, r0
 23120 019a 64B2     		sxtb	r4, r4
 23121              	.LVL2863:
 23122              	.L1574:
10559:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_Z_MSB_REG,
10560:Core/Src/bno055.c ****                                                                 &data2_u8r,
10561:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10562:Core/Src/bno055.c ****                 }
10563:Core/Src/bno055.c **** 
10564:Core/Src/bno055.c ****                 /*write accel radius value*/
10565:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23123              		.loc 1 10565 17 is_stmt 1 view .LVU6422
 23124              		.loc 1 10565 37 is_stmt 0 view .LVU6423
 23125 019c 284B     		ldr	r3, .L1582
 23126 019e 1868     		ldr	r0, [r3]
 23127 01a0 0669     		ldr	r6, [r0, #16]
 23128              		.loc 1 10565 29 view .LVU6424
 23129 01a2 0123     		movs	r3, #1
 23130 01a4 0DF10702 		add	r2, sp, #7
 23131 01a8 6721     		movs	r1, #103
 23132 01aa 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23133 01ac B047     		blx	r6
 23134              	.LVL2864:
 23135              		.loc 1 10565 26 view .LVU6425
 23136 01ae 54FA80F4 		uxtab	r4, r4, r0
 23137              	.LVL2865:
 23138              		.loc 1 10565 26 view .LVU6426
 23139 01b2 64B2     		sxtb	r4, r4
 23140              	.LVL2866:
10566:Core/Src/bno055.c ****                                                            BNO055_ACCEL_RADIUS_LSB_REG,
10567:Core/Src/bno055.c ****                                                            &data2_u8r,
10568:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10569:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23141              		.loc 1 10569 17 is_stmt 1 view .LVU6427
 23142              		.loc 1 10569 20 is_stmt 0 view .LVU6428
 23143 01b4 6CB9     		cbnz	r4, .L1575
10570:Core/Src/bno055.c ****                 {
10571:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->r & BNO055_SIC_HEX_0_0_F_F_DATA));
 23144              		.loc 1 10571 21 is_stmt 1 view .LVU6429
 23145              		.loc 1 10571 51 is_stmt 0 view .LVU6430
 23146 01b6 B5F90630 		ldrsh	r3, [r5, #6]
 23147              	.LVL2867:
10572:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_RADIUS_LSB, data1_u8r);
 23148              		.loc 1 10572 21 is_stmt 1 view .LVU6431
 23149              		.loc 1 10572 31 is_stmt 0 view .LVU6432
 23150 01ba 8DF80730 		strb	r3, [sp, #7]
10573:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23151              		.loc 1 10573 21 is_stmt 1 view .LVU6433
 23152              		.loc 1 10573 40 is_stmt 0 view .LVU6434
 23153 01be 204B     		ldr	r3, .L1582
 23154              	.LVL2868:
 23155              		.loc 1 10573 40 view .LVU6435
 23156 01c0 1868     		ldr	r0, [r3]
 23157 01c2 C468     		ldr	r4, [r0, #12]
 23158              	.LVL2869:
ARM GAS  /tmp/ccWoU29M.s 			page 644


 23159              		.loc 1 10573 32 view .LVU6436
 23160 01c4 0123     		movs	r3, #1
 23161 01c6 0DF10702 		add	r2, sp, #7
 23162              	.LVL2870:
 23163              		.loc 1 10573 32 view .LVU6437
 23164 01ca 6721     		movs	r1, #103
 23165 01cc 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23166 01ce A047     		blx	r4
 23167              	.LVL2871:
 23168              		.loc 1 10573 32 view .LVU6438
 23169 01d0 0446     		mov	r4, r0
 23170              	.LVL2872:
 23171              	.L1575:
10574:Core/Src/bno055.c ****                                                                BNO055_ACCEL_RADIUS_LSB_REG,
10575:Core/Src/bno055.c ****                                                                &data2_u8r,
10576:Core/Src/bno055.c ****                                                                BNO055_GEN_READ_WRITE_LENGTH);
10577:Core/Src/bno055.c ****                 }
10578:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23172              		.loc 1 10578 17 is_stmt 1 view .LVU6439
 23173              		.loc 1 10578 37 is_stmt 0 view .LVU6440
 23174 01d2 1B4B     		ldr	r3, .L1582
 23175 01d4 1868     		ldr	r0, [r3]
 23176 01d6 0669     		ldr	r6, [r0, #16]
 23177              		.loc 1 10578 29 view .LVU6441
 23178 01d8 0123     		movs	r3, #1
 23179 01da 0DF10702 		add	r2, sp, #7
 23180 01de 6821     		movs	r1, #104
 23181 01e0 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23182 01e2 B047     		blx	r6
 23183              	.LVL2873:
 23184              		.loc 1 10578 26 view .LVU6442
 23185 01e4 54FA80F4 		uxtab	r4, r4, r0
 23186              	.LVL2874:
 23187              		.loc 1 10578 26 view .LVU6443
 23188 01e8 64B2     		sxtb	r4, r4
 23189              	.LVL2875:
10579:Core/Src/bno055.c ****                                                            BNO055_ACCEL_RADIUS_MSB_REG,
10580:Core/Src/bno055.c ****                                                            &data2_u8r,
10581:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10582:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23190              		.loc 1 10582 17 is_stmt 1 view .LVU6444
 23191              		.loc 1 10582 20 is_stmt 0 view .LVU6445
 23192 01ea B4B9     		cbnz	r4, .L1567
10583:Core/Src/bno055.c ****                 {
10584:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->r >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_
 23193              		.loc 1 10584 21 is_stmt 1 view .LVU6446
 23194              		.loc 1 10584 34 is_stmt 0 view .LVU6447
 23195 01ec 95F90730 		ldrsb	r3, [r5, #7]
 23196              	.LVL2876:
10585:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_RADIUS_MSB, data1_u8r);
 23197              		.loc 1 10585 21 is_stmt 1 view .LVU6448
 23198              		.loc 1 10585 31 is_stmt 0 view .LVU6449
 23199 01f0 8DF80730 		strb	r3, [sp, #7]
10586:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23200              		.loc 1 10586 21 is_stmt 1 view .LVU6450
 23201              		.loc 1 10586 40 is_stmt 0 view .LVU6451
 23202 01f4 124B     		ldr	r3, .L1582
ARM GAS  /tmp/ccWoU29M.s 			page 645


 23203              	.LVL2877:
 23204              		.loc 1 10586 40 view .LVU6452
 23205 01f6 1868     		ldr	r0, [r3]
 23206 01f8 C468     		ldr	r4, [r0, #12]
 23207              	.LVL2878:
 23208              		.loc 1 10586 32 view .LVU6453
 23209 01fa 0123     		movs	r3, #1
 23210 01fc 0DF10702 		add	r2, sp, #7
 23211              	.LVL2879:
 23212              		.loc 1 10586 32 view .LVU6454
 23213 0200 6821     		movs	r1, #104
 23214 0202 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23215 0204 A047     		blx	r4
 23216              	.LVL2880:
 23217              		.loc 1 10586 32 view .LVU6455
 23218 0206 0446     		mov	r4, r0
 23219              	.LVL2881:
 23220              		.loc 1 10586 32 view .LVU6456
 23221 0208 07E0     		b	.L1567
 23222              	.LVL2882:
 23223              	.L1580:
10476:Core/Src/bno055.c ****             }
 23224              		.loc 1 10476 17 is_stmt 1 view .LVU6457
10476:Core/Src/bno055.c ****             }
 23225              		.loc 1 10476 28 is_stmt 0 view .LVU6458
 23226 020a FFF7FEFF 		bl	bno055_set_operation_mode
 23227              	.LVL2883:
10476:Core/Src/bno055.c ****             }
 23228              		.loc 1 10476 25 view .LVU6459
 23229 020e 54FA80F4 		uxtab	r4, r4, r0
 23230 0212 64B2     		sxtb	r4, r4
 23231              	.LVL2884:
10476:Core/Src/bno055.c ****             }
 23232              		.loc 1 10476 25 view .LVU6460
 23233 0214 0EE7     		b	.L1568
 23234              	.LVL2885:
 23235              	.L1577:
10587:Core/Src/bno055.c ****                                                                BNO055_ACCEL_RADIUS_MSB_REG,
10588:Core/Src/bno055.c ****                                                                &data2_u8r,
10589:Core/Src/bno055.c ****                                                                BNO055_GEN_READ_WRITE_LENGTH);
10590:Core/Src/bno055.c ****                 }
10591:Core/Src/bno055.c ****             }
10592:Core/Src/bno055.c ****             else
10593:Core/Src/bno055.c ****             {
10594:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10595:Core/Src/bno055.c ****             }
10596:Core/Src/bno055.c ****         }
10597:Core/Src/bno055.c ****         else
10598:Core/Src/bno055.c ****         {
10599:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 23236              		.loc 1 10599 22 view .LVU6461
 23237 0216 4FF0FF34 		mov	r4, #-1
 23238              	.LVL2886:
 23239              	.L1567:
10600:Core/Src/bno055.c ****         }
10601:Core/Src/bno055.c ****     }
10602:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
ARM GAS  /tmp/ccWoU29M.s 			page 646


 23240              		.loc 1 10602 5 is_stmt 1 view .LVU6462
 23241              		.loc 1 10602 24 is_stmt 0 view .LVU6463
 23242 021a 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 23243              		.loc 1 10602 8 view .LVU6464
 23244 021e 28B9     		cbnz	r0, .L1581
 23245              	.LVL2887:
 23246              	.L1566:
10603:Core/Src/bno055.c ****     {
10604:Core/Src/bno055.c ****         /* set the operation mode
10605:Core/Src/bno055.c ****          * of previous operation mode*/
10606:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
10607:Core/Src/bno055.c ****     }
10608:Core/Src/bno055.c **** 
10609:Core/Src/bno055.c ****     return com_rslt;
10610:Core/Src/bno055.c **** }
 23247              		.loc 1 10610 1 view .LVU6465
 23248 0220 2046     		mov	r0, r4
 23249 0222 02B0     		add	sp, sp, #8
 23250              	.LCFI675:
 23251              		.cfi_remember_state
 23252              		.cfi_def_cfa_offset 16
 23253              		@ sp needed
 23254 0224 70BD     		pop	{r4, r5, r6, pc}
 23255              	.LVL2888:
 23256              	.L1578:
 23257              	.LCFI676:
 23258              		.cfi_restore_state
10594:Core/Src/bno055.c ****             }
 23259              		.loc 1 10594 26 view .LVU6466
 23260 0226 4FF0FF34 		mov	r4, #-1
 23261              	.LVL2889:
10594:Core/Src/bno055.c ****             }
 23262              		.loc 1 10594 26 view .LVU6467
 23263 022a F6E7     		b	.L1567
 23264              	.LVL2890:
 23265              	.L1581:
10606:Core/Src/bno055.c ****     }
 23266              		.loc 1 10606 9 is_stmt 1 view .LVU6468
10606:Core/Src/bno055.c ****     }
 23267              		.loc 1 10606 21 is_stmt 0 view .LVU6469
 23268 022c FFF7FEFF 		bl	bno055_set_operation_mode
 23269              	.LVL2891:
10606:Core/Src/bno055.c ****     }
 23270              		.loc 1 10606 18 view .LVU6470
 23271 0230 54FA80F4 		uxtab	r4, r4, r0
 23272              	.LVL2892:
10606:Core/Src/bno055.c ****     }
 23273              		.loc 1 10606 18 view .LVU6471
 23274 0234 64B2     		sxtb	r4, r4
 23275              	.LVL2893:
10606:Core/Src/bno055.c ****     }
 23276              		.loc 1 10606 18 view .LVU6472
 23277 0236 F3E7     		b	.L1566
 23278              	.LVL2894:
 23279              	.L1576:
10464:Core/Src/bno055.c ****     }
 23280              		.loc 1 10464 16 view .LVU6473
ARM GAS  /tmp/ccWoU29M.s 			page 647


 23281 0238 6FF07E04 		mvn	r4, #126
 23282 023c F0E7     		b	.L1566
 23283              	.L1583:
 23284 023e 00BF     		.align	2
 23285              	.L1582:
 23286 0240 00000000 		.word	.LANCHOR0
 23287              		.cfi_endproc
 23288              	.LFE170:
 23290              		.section	.text.bno055_read_mag_offset,"ax",%progbits
 23291              		.align	1
 23292              		.global	bno055_read_mag_offset
 23293              		.syntax unified
 23294              		.thumb
 23295              		.thumb_func
 23296              		.fpu fpv4-sp-d16
 23298              	bno055_read_mag_offset:
 23299              	.LVL2895:
 23300              	.LFB171:
10611:Core/Src/bno055.c **** 
10612:Core/Src/bno055.c **** /*!
10613:Core/Src/bno055.c ****  *  @brief This API is used to read mag offset
10614:Core/Src/bno055.c ****  *  offset form register 0x69 to 0x6A
10615:Core/Src/bno055.c ****  *
10616:Core/Src/bno055.c ****  *  @param mag_offset :  The value of mag offset and radius
10617:Core/Src/bno055.c ****  *
10618:Core/Src/bno055.c ****  *      bno055_mag_offset_t   |     result
10619:Core/Src/bno055.c ****  *      ------------------- | ----------------
10620:Core/Src/bno055.c ****  *               x          |  mag offset x
10621:Core/Src/bno055.c ****  *               y          |  mag offset y
10622:Core/Src/bno055.c ****  *               z          |  mag offset z
10623:Core/Src/bno055.c ****  *               r          |  mag radius r
10624:Core/Src/bno055.c ****  *
10625:Core/Src/bno055.c ****  *
10626:Core/Src/bno055.c ****  *  @return results of bus communication function
10627:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10628:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10629:Core/Src/bno055.c ****  *
10630:Core/Src/bno055.c ****  *  @note  The range of the magnetometer offset is +/-6400 in LSB
10631:Core/Src/bno055.c ****  */
10632:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_offset(struct bno055_mag_offset_t  *mag_offset)
10633:Core/Src/bno055.c **** {
 23301              		.loc 1 10633 1 is_stmt 1 view -0
 23302              		.cfi_startproc
 23303              		@ args = 0, pretend = 0, frame = 8
 23304              		@ frame_needed = 0, uses_anonymous_args = 0
 23305              		.loc 1 10633 1 is_stmt 0 view .LVU6475
 23306 0000 70B5     		push	{r4, r5, r6, lr}
 23307              	.LCFI677:
 23308              		.cfi_def_cfa_offset 16
 23309              		.cfi_offset 4, -16
 23310              		.cfi_offset 5, -12
 23311              		.cfi_offset 6, -8
 23312              		.cfi_offset 14, -4
 23313 0002 82B0     		sub	sp, sp, #8
 23314              	.LCFI678:
 23315              		.cfi_def_cfa_offset 24
 23316 0004 0446     		mov	r4, r0
ARM GAS  /tmp/ccWoU29M.s 			page 648


10634:Core/Src/bno055.c ****     /* Variable used to return value of
10635:Core/Src/bno055.c ****      * communication routine*/
10636:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 23317              		.loc 1 10636 5 is_stmt 1 view .LVU6476
 23318              	.LVL2896:
10637:Core/Src/bno055.c **** 
10638:Core/Src/bno055.c ****     /* Array holding the mag offset values
10639:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] - offset x->LSB
10640:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] - offset x->MSB
10641:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] - offset y->LSB
10642:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] - offset y->MSB
10643:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] - offset z->LSB
10644:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] - offset z->MSB
10645:Core/Src/bno055.c ****      */
10646:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_OFFSET_ARRAY] = {
 23319              		.loc 1 10646 5 view .LVU6477
 23320              		.loc 1 10646 8 is_stmt 0 view .LVU6478
 23321 0006 2C4B     		ldr	r3, .L1594
 23322 0008 93E80300 		ldm	r3, {r0, r1}
 23323              	.LVL2897:
 23324              		.loc 1 10646 8 view .LVU6479
 23325 000c 0090     		str	r0, [sp]
 23326 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
10647:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
10648:Core/Src/bno055.c ****     };
10649:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 23327              		.loc 1 10649 5 is_stmt 1 view .LVU6480
 23328              	.LVL2898:
10650:Core/Src/bno055.c **** 
10651:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
10652:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 23329              		.loc 1 10652 5 view .LVU6481
 23330              		.loc 1 10652 18 is_stmt 0 view .LVU6482
 23331 0012 2A4B     		ldr	r3, .L1594+4
 23332 0014 1B68     		ldr	r3, [r3]
 23333              		.loc 1 10652 8 view .LVU6483
 23334 0016 002B     		cmp	r3, #0
 23335 0018 42D0     		beq	.L1588
10653:Core/Src/bno055.c ****     {
10654:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10655:Core/Src/bno055.c ****     }
10656:Core/Src/bno055.c ****     else
10657:Core/Src/bno055.c ****     {
10658:Core/Src/bno055.c ****         /*condition check for page, mag offset is
10659:Core/Src/bno055.c ****          * available in the page zero*/
10660:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 23336              		.loc 1 10660 9 is_stmt 1 view .LVU6484
 23337              		.loc 1 10660 21 is_stmt 0 view .LVU6485
 23338 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 23339              		.loc 1 10660 12 view .LVU6486
 23340 001c 002B     		cmp	r3, #0
 23341 001e 39D1     		bne	.L1593
 23342              	.LVL2899:
 23343              	.L1586:
10661:Core/Src/bno055.c ****         {
10662:Core/Src/bno055.c ****             /* Write the page zero*/
10663:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
ARM GAS  /tmp/ccWoU29M.s 			page 649


10664:Core/Src/bno055.c ****         }
10665:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 23344              		.loc 1 10665 53 discriminator 1 view .LVU6487
 23345 0020 264B     		ldr	r3, .L1594+4
 23346 0022 1B68     		ldr	r3, [r3]
 23347 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 23348              		.loc 1 10665 41 discriminator 1 view .LVU6488
 23349 0026 002B     		cmp	r3, #0
 23350 0028 3DD1     		bne	.L1589
 23351              	.L1587:
10666:Core/Src/bno055.c ****         {
10667:Core/Src/bno055.c ****             /* Read mag offset value it the six bytes of data */
10668:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23352              		.loc 1 10668 13 is_stmt 1 view .LVU6489
 23353              		.loc 1 10668 32 is_stmt 0 view .LVU6490
 23354 002a 244B     		ldr	r3, .L1594+4
 23355 002c 1868     		ldr	r0, [r3]
 23356 002e 0569     		ldr	r5, [r0, #16]
 23357              		.loc 1 10668 24 view .LVU6491
 23358 0030 0623     		movs	r3, #6
 23359 0032 6A46     		mov	r2, sp
 23360 0034 5B21     		movs	r1, #91
 23361 0036 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23362 0038 A847     		blx	r5
 23363              	.LVL2900:
10669:Core/Src/bno055.c ****                                                       BNO055_MAG_OFFSET_X_LSB_REG,
10670:Core/Src/bno055.c ****                                                       data_u8,
10671:Core/Src/bno055.c ****                                                       BNO055_MAG_OFFSET_ARRAY);
10672:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 23364              		.loc 1 10672 13 is_stmt 1 view .LVU6492
 23365              		.loc 1 10672 16 is_stmt 0 view .LVU6493
 23366 003a 0546     		mov	r5, r0
 23367 003c 0028     		cmp	r0, #0
 23368 003e 35D1     		bne	.L1590
10673:Core/Src/bno055.c ****             {
10674:Core/Src/bno055.c ****                 /* Read mag x offset value*/
10675:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23369              		.loc 1 10675 17 is_stmt 1 view .LVU6494
10676:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_X_
10677:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23370              		.loc 1 10677 17 view .LVU6495
10678:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_X_
10679:Core/Src/bno055.c ****                 mag_offset->x =
 23371              		.loc 1 10679 17 view .LVU6496
10680:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 23372              		.loc 1 10680 34 is_stmt 0 view .LVU6497
 23373 0040 9DF90120 		ldrsb	r2, [sp, #1]
10681:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB]));
 23374              		.loc 1 10681 35 view .LVU6498
 23375 0044 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
10680:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 23376              		.loc 1 10680 21 view .LVU6499
 23377 0048 43EA0223 		orr	r3, r3, r2, lsl #8
10679:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 23378              		.loc 1 10679 31 view .LVU6500
 23379 004c 2380     		strh	r3, [r4]	@ movhi
10682:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 650


10683:Core/Src/bno055.c ****                 /* Read mag y offset value*/
10684:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23380              		.loc 1 10684 17 is_stmt 1 view .LVU6501
10685:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_Y_
10686:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23381              		.loc 1 10686 17 view .LVU6502
10687:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_Y_
10688:Core/Src/bno055.c ****                 mag_offset->y =
 23382              		.loc 1 10688 17 view .LVU6503
10689:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 23383              		.loc 1 10689 34 is_stmt 0 view .LVU6504
 23384 004e 9DF90320 		ldrsb	r2, [sp, #3]
10690:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB]));
 23385              		.loc 1 10690 35 view .LVU6505
 23386 0052 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
10689:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 23387              		.loc 1 10689 21 view .LVU6506
 23388 0056 43EA0223 		orr	r3, r3, r2, lsl #8
10688:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 23389              		.loc 1 10688 31 view .LVU6507
 23390 005a 6380     		strh	r3, [r4, #2]	@ movhi
10691:Core/Src/bno055.c **** 
10692:Core/Src/bno055.c ****                 /* Read mag z offset value*/
10693:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23391              		.loc 1 10693 17 is_stmt 1 view .LVU6508
10694:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_Z_
10695:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23392              		.loc 1 10695 17 view .LVU6509
10696:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_Z_
10697:Core/Src/bno055.c ****                 mag_offset->z =
 23393              		.loc 1 10697 17 view .LVU6510
10698:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 23394              		.loc 1 10698 34 is_stmt 0 view .LVU6511
 23395 005c 9DF90520 		ldrsb	r2, [sp, #5]
10699:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB]));
 23396              		.loc 1 10699 35 view .LVU6512
 23397 0060 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
10698:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 23398              		.loc 1 10698 21 view .LVU6513
 23399 0064 43EA0223 		orr	r3, r3, r2, lsl #8
10697:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 23400              		.loc 1 10697 31 view .LVU6514
 23401 0068 A380     		strh	r3, [r4, #4]	@ movhi
10700:Core/Src/bno055.c **** 
10701:Core/Src/bno055.c ****                 /* Read mag radius value
10702:Core/Src/bno055.c ****                  * it the two bytes of data */
10703:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23402              		.loc 1 10703 17 is_stmt 1 view .LVU6515
 23403              		.loc 1 10703 37 is_stmt 0 view .LVU6516
 23404 006a 144B     		ldr	r3, .L1594+4
 23405 006c 1868     		ldr	r0, [r3]
 23406              	.LVL2901:
 23407              		.loc 1 10703 37 view .LVU6517
 23408 006e 0669     		ldr	r6, [r0, #16]
 23409              		.loc 1 10703 29 view .LVU6518
 23410 0070 0223     		movs	r3, #2
 23411 0072 6A46     		mov	r2, sp
ARM GAS  /tmp/ccWoU29M.s 			page 651


 23412 0074 6921     		movs	r1, #105
 23413 0076 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23414 0078 B047     		blx	r6
 23415              	.LVL2902:
 23416              		.loc 1 10703 26 view .LVU6519
 23417 007a 55FA80F0 		uxtab	r0, r5, r0
 23418 007e 40B2     		sxtb	r0, r0
 23419              	.LVL2903:
10704:Core/Src/bno055.c ****                                                            BNO055_MAG_RADIUS_LSB_REG,
10705:Core/Src/bno055.c ****                                                            data_u8,
10706:Core/Src/bno055.c ****                                                            BNO055_LSB_MSB_READ_LENGTH);
10707:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23420              		.loc 1 10707 17 is_stmt 1 view .LVU6520
 23421              		.loc 1 10707 20 is_stmt 0 view .LVU6521
 23422 0080 B8B9     		cbnz	r0, .L1591
10708:Core/Src/bno055.c ****                 {
10709:Core/Src/bno055.c ****                     /* Array holding the mag radius values
10710:Core/Src/bno055.c ****                      * data_u8[BNO055_OFFSET_RADIUS_LSB] -
10711:Core/Src/bno055.c ****                      * radius->LSB
10712:Core/Src/bno055.c ****                      * data_u8[BNO055_OFFSET_RADIUS_MSB] -
10713:Core/Src/bno055.c ****                      * radius->MSB
10714:Core/Src/bno055.c ****                      */
10715:Core/Src/bno055.c ****                     data_u8[BNO055_OFFSET_RADIUS_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_OFFSET_R
 23423              		.loc 1 10715 21 is_stmt 1 view .LVU6522
10716:Core/Src/bno055.c ****                                                                             BNO055_MAG_RADIUS_LSB);
10717:Core/Src/bno055.c ****                     data_u8[BNO055_OFFSET_RADIUS_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_OFFSET_R
 23424              		.loc 1 10717 21 view .LVU6523
10718:Core/Src/bno055.c ****                                                                             BNO055_MAG_RADIUS_MSB);
10719:Core/Src/bno055.c ****                     mag_offset->r =
 23425              		.loc 1 10719 21 view .LVU6524
10720:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 23426              		.loc 1 10720 38 is_stmt 0 view .LVU6525
 23427 0082 9DF90120 		ldrsb	r2, [sp, #1]
10721:Core/Src/bno055.c ****                               (data_u8[BNO055_OFFSET_RADIUS_LSB]));
 23428              		.loc 1 10721 39 view .LVU6526
 23429 0086 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
10720:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 23430              		.loc 1 10720 25 view .LVU6527
 23431 008a 43EA0223 		orr	r3, r3, r2, lsl #8
10719:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 23432              		.loc 1 10719 35 view .LVU6528
 23433 008e E380     		strh	r3, [r4, #6]	@ movhi
 23434              	.LVL2904:
 23435              	.L1585:
10722:Core/Src/bno055.c ****                 }
10723:Core/Src/bno055.c ****                 else
10724:Core/Src/bno055.c ****                 {
10725:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
10726:Core/Src/bno055.c ****                 }
10727:Core/Src/bno055.c ****             }
10728:Core/Src/bno055.c ****             else
10729:Core/Src/bno055.c ****             {
10730:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10731:Core/Src/bno055.c ****             }
10732:Core/Src/bno055.c ****         }
10733:Core/Src/bno055.c ****         else
10734:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 652


10735:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
10736:Core/Src/bno055.c ****         }
10737:Core/Src/bno055.c ****     }
10738:Core/Src/bno055.c **** 
10739:Core/Src/bno055.c ****     return com_rslt;
10740:Core/Src/bno055.c **** }
 23436              		.loc 1 10740 1 view .LVU6529
 23437 0090 02B0     		add	sp, sp, #8
 23438              	.LCFI679:
 23439              		.cfi_remember_state
 23440              		.cfi_def_cfa_offset 16
 23441              		@ sp needed
 23442 0092 70BD     		pop	{r4, r5, r6, pc}
 23443              	.LVL2905:
 23444              	.L1593:
 23445              	.LCFI680:
 23446              		.cfi_restore_state
10663:Core/Src/bno055.c ****         }
 23447              		.loc 1 10663 13 is_stmt 1 view .LVU6530
10663:Core/Src/bno055.c ****         }
 23448              		.loc 1 10663 23 is_stmt 0 view .LVU6531
 23449 0094 0020     		movs	r0, #0
 23450 0096 FFF7FEFF 		bl	bno055_write_page_id
 23451              	.LVL2906:
10665:Core/Src/bno055.c ****         {
 23452              		.loc 1 10665 9 is_stmt 1 view .LVU6532
10665:Core/Src/bno055.c ****         {
 23453              		.loc 1 10665 12 is_stmt 0 view .LVU6533
 23454 009a 0028     		cmp	r0, #0
 23455 009c C5D0     		beq	.L1587
 23456 009e BFE7     		b	.L1586
 23457              	.LVL2907:
 23458              	.L1588:
10654:Core/Src/bno055.c ****     }
 23459              		.loc 1 10654 16 view .LVU6534
 23460 00a0 6FF07E00 		mvn	r0, #126
 23461 00a4 F4E7     		b	.L1585
 23462              	.LVL2908:
 23463              	.L1589:
10735:Core/Src/bno055.c ****         }
 23464              		.loc 1 10735 22 view .LVU6535
 23465 00a6 4FF0FF30 		mov	r0, #-1
 23466 00aa F1E7     		b	.L1585
 23467              	.LVL2909:
 23468              	.L1590:
10730:Core/Src/bno055.c ****             }
 23469              		.loc 1 10730 26 view .LVU6536
 23470 00ac 4FF0FF30 		mov	r0, #-1
 23471              	.LVL2910:
10730:Core/Src/bno055.c ****             }
 23472              		.loc 1 10730 26 view .LVU6537
 23473 00b0 EEE7     		b	.L1585
 23474              	.LVL2911:
 23475              	.L1591:
10725:Core/Src/bno055.c ****                 }
 23476              		.loc 1 10725 30 view .LVU6538
 23477 00b2 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccWoU29M.s 			page 653


 23478              	.LVL2912:
10725:Core/Src/bno055.c ****                 }
 23479              		.loc 1 10725 30 view .LVU6539
 23480 00b6 EBE7     		b	.L1585
 23481              	.L1595:
 23482              		.align	2
 23483              	.L1594:
 23484 00b8 00000000 		.word	.LANCHOR1
 23485 00bc 00000000 		.word	.LANCHOR0
 23486              		.cfi_endproc
 23487              	.LFE171:
 23489              		.section	.text.bno055_write_mag_offset,"ax",%progbits
 23490              		.align	1
 23491              		.global	bno055_write_mag_offset
 23492              		.syntax unified
 23493              		.thumb
 23494              		.thumb_func
 23495              		.fpu fpv4-sp-d16
 23497              	bno055_write_mag_offset:
 23498              	.LVL2913:
 23499              	.LFB172:
10741:Core/Src/bno055.c **** 
10742:Core/Src/bno055.c **** /*!
10743:Core/Src/bno055.c ****  *  @brief This API is used to read mag offset
10744:Core/Src/bno055.c ****  *  offset form register 0x69 to 0x6A
10745:Core/Src/bno055.c ****  *
10746:Core/Src/bno055.c ****  *  @param mag_offset :  The value of mag offset and radius
10747:Core/Src/bno055.c ****  *
10748:Core/Src/bno055.c ****  *      bno055_mag_offset_t |     result
10749:Core/Src/bno055.c ****  *      ------------------- | ----------------
10750:Core/Src/bno055.c ****  *               x          |  mag offset x
10751:Core/Src/bno055.c ****  *               y          |  mag offset y
10752:Core/Src/bno055.c ****  *               z          |  mag offset z
10753:Core/Src/bno055.c ****  *               r          |  mag radius r
10754:Core/Src/bno055.c ****  *
10755:Core/Src/bno055.c ****  *
10756:Core/Src/bno055.c ****  *  @return results of bus communication function
10757:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10758:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10759:Core/Src/bno055.c ****  *
10760:Core/Src/bno055.c ****  *  @note  The range of the magnetometer offset is +/-6400 in LSB
10761:Core/Src/bno055.c ****  */
10762:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_mag_offset(struct bno055_mag_offset_t *mag_offset)
10763:Core/Src/bno055.c **** {
 23500              		.loc 1 10763 1 is_stmt 1 view -0
 23501              		.cfi_startproc
 23502              		@ args = 0, pretend = 0, frame = 8
 23503              		@ frame_needed = 0, uses_anonymous_args = 0
 23504              		.loc 1 10763 1 is_stmt 0 view .LVU6541
 23505 0000 70B5     		push	{r4, r5, r6, lr}
 23506              	.LCFI681:
 23507              		.cfi_def_cfa_offset 16
 23508              		.cfi_offset 4, -16
 23509              		.cfi_offset 5, -12
 23510              		.cfi_offset 6, -8
 23511              		.cfi_offset 14, -4
 23512 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccWoU29M.s 			page 654


 23513              	.LCFI682:
 23514              		.cfi_def_cfa_offset 24
10764:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 23515              		.loc 1 10764 5 is_stmt 1 view .LVU6542
 23516              	.LVL2914:
10765:Core/Src/bno055.c ****     u8 data1_u8r = BNO055_INIT_VALUE;
 23517              		.loc 1 10765 5 view .LVU6543
10766:Core/Src/bno055.c ****     u8 data2_u8r = BNO055_INIT_VALUE;
 23518              		.loc 1 10766 5 view .LVU6544
 23519              		.loc 1 10766 8 is_stmt 0 view .LVU6545
 23520 0004 0023     		movs	r3, #0
 23521 0006 8DF80730 		strb	r3, [sp, #7]
10767:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 23522              		.loc 1 10767 5 is_stmt 1 view .LVU6546
 23523              		.loc 1 10767 8 is_stmt 0 view .LVU6547
 23524 000a 8DF80630 		strb	r3, [sp, #6]
10768:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 23525              		.loc 1 10768 5 is_stmt 1 view .LVU6548
 23526              	.LVL2915:
10769:Core/Src/bno055.c **** 
10770:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
10771:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 23527              		.loc 1 10771 5 view .LVU6549
 23528              		.loc 1 10771 18 is_stmt 0 view .LVU6550
 23529 000e 8F4B     		ldr	r3, .L1613
 23530 0010 1B68     		ldr	r3, [r3]
 23531              		.loc 1 10771 8 view .LVU6551
 23532 0012 002B     		cmp	r3, #0
 23533 0014 00F01681 		beq	.L1607
 23534 0018 0546     		mov	r5, r0
10772:Core/Src/bno055.c ****     {
10773:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10774:Core/Src/bno055.c ****     }
10775:Core/Src/bno055.c ****     else
10776:Core/Src/bno055.c ****     {
10777:Core/Src/bno055.c ****         /* The write operation effective only if the operation
10778:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
10779:Core/Src/bno055.c ****          * current operation mode and set the config mode */
10780:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 23535              		.loc 1 10780 9 is_stmt 1 view .LVU6552
 23536              		.loc 1 10780 19 is_stmt 0 view .LVU6553
 23537 001a 0DF10600 		add	r0, sp, #6
 23538              	.LVL2916:
 23539              		.loc 1 10780 19 view .LVU6554
 23540 001e FFF7FEFF 		bl	bno055_get_operation_mode
 23541              	.LVL2917:
10781:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 23542              		.loc 1 10781 9 is_stmt 1 view .LVU6555
 23543              		.loc 1 10781 12 is_stmt 0 view .LVU6556
 23544 0022 0446     		mov	r4, r0
 23545 0024 0028     		cmp	r0, #0
 23546 0026 40F0FC80 		bne	.L1608
10782:Core/Src/bno055.c ****         {
10783:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 23547              		.loc 1 10783 13 is_stmt 1 view .LVU6557
 23548              		.loc 1 10783 32 is_stmt 0 view .LVU6558
 23549 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 655


 23550              		.loc 1 10783 16 view .LVU6559
 23551 002e 002B     		cmp	r3, #0
 23552 0030 40F0F180 		bne	.L1611
 23553              	.LVL2918:
 23554              	.L1599:
10784:Core/Src/bno055.c ****             {
10785:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
10786:Core/Src/bno055.c ****             }
10787:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 23555              		.loc 1 10787 13 is_stmt 1 view .LVU6560
 23556              		.loc 1 10787 16 is_stmt 0 view .LVU6561
 23557 0034 002C     		cmp	r4, #0
 23558 0036 40F0FC80 		bne	.L1609
10788:Core/Src/bno055.c ****             {
10789:Core/Src/bno055.c ****                 /* write Mag offset x value*/
10790:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23559              		.loc 1 10790 17 is_stmt 1 view .LVU6562
 23560              		.loc 1 10790 36 is_stmt 0 view .LVU6563
 23561 003a 844B     		ldr	r3, .L1613
 23562 003c 1868     		ldr	r0, [r3]
 23563 003e 0469     		ldr	r4, [r0, #16]
 23564              	.LVL2919:
 23565              		.loc 1 10790 28 view .LVU6564
 23566 0040 0123     		movs	r3, #1
 23567 0042 0DF10702 		add	r2, sp, #7
 23568 0046 5B21     		movs	r1, #91
 23569 0048 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23570 004a A047     		blx	r4
 23571              	.LVL2920:
10791:Core/Src/bno055.c ****                                                           BNO055_MAG_OFFSET_X_LSB_REG,
10792:Core/Src/bno055.c ****                                                           &data2_u8r,
10793:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
10794:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23572              		.loc 1 10794 17 is_stmt 1 view .LVU6565
 23573              		.loc 1 10794 20 is_stmt 0 view .LVU6566
 23574 004c 0446     		mov	r4, r0
 23575 004e 78B9     		cbnz	r0, .L1600
10795:Core/Src/bno055.c ****                 {
10796:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->x & BNO055_SIC_HEX_0_0_F_F_DATA));
 23576              		.loc 1 10796 21 is_stmt 1 view .LVU6567
 23577              		.loc 1 10796 49 is_stmt 0 view .LVU6568
 23578 0050 B5F90030 		ldrsh	r3, [r5]
 23579              	.LVL2921:
10797:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_X_LSB, data1_u8r);
 23580              		.loc 1 10797 21 is_stmt 1 view .LVU6569
 23581              		.loc 1 10797 31 is_stmt 0 view .LVU6570
 23582 0054 8DF80730 		strb	r3, [sp, #7]
10798:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23583              		.loc 1 10798 21 is_stmt 1 view .LVU6571
 23584              		.loc 1 10798 41 is_stmt 0 view .LVU6572
 23585 0058 7C4B     		ldr	r3, .L1613
 23586              	.LVL2922:
 23587              		.loc 1 10798 41 view .LVU6573
 23588 005a 1868     		ldr	r0, [r3]
 23589              	.LVL2923:
 23590              		.loc 1 10798 41 view .LVU6574
 23591 005c C668     		ldr	r6, [r0, #12]
ARM GAS  /tmp/ccWoU29M.s 			page 656


 23592              		.loc 1 10798 33 view .LVU6575
 23593 005e 0123     		movs	r3, #1
 23594 0060 0DF10702 		add	r2, sp, #7
 23595              	.LVL2924:
 23596              		.loc 1 10798 33 view .LVU6576
 23597 0064 5B21     		movs	r1, #91
 23598 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23599 0068 B047     		blx	r6
 23600              	.LVL2925:
 23601              		.loc 1 10798 30 view .LVU6577
 23602 006a 54FA80F4 		uxtab	r4, r4, r0
 23603 006e 64B2     		sxtb	r4, r4
 23604              	.LVL2926:
 23605              	.L1600:
10799:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_X_LSB_REG,
10800:Core/Src/bno055.c ****                                                                 &data2_u8r,
10801:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10802:Core/Src/bno055.c ****                 }
10803:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23606              		.loc 1 10803 17 is_stmt 1 view .LVU6578
 23607              		.loc 1 10803 37 is_stmt 0 view .LVU6579
 23608 0070 764B     		ldr	r3, .L1613
 23609 0072 1868     		ldr	r0, [r3]
 23610 0074 0669     		ldr	r6, [r0, #16]
 23611              		.loc 1 10803 29 view .LVU6580
 23612 0076 0123     		movs	r3, #1
 23613 0078 0DF10702 		add	r2, sp, #7
 23614 007c 5C21     		movs	r1, #92
 23615 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23616 0080 B047     		blx	r6
 23617              	.LVL2927:
 23618              		.loc 1 10803 26 view .LVU6581
 23619 0082 54FA80F4 		uxtab	r4, r4, r0
 23620              	.LVL2928:
 23621              		.loc 1 10803 26 view .LVU6582
 23622 0086 E6B2     		uxtb	r6, r4
 23623 0088 64B2     		sxtb	r4, r4
 23624              	.LVL2929:
10804:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_X_MSB_REG,
10805:Core/Src/bno055.c ****                                                            &data2_u8r,
10806:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10807:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23625              		.loc 1 10807 17 is_stmt 1 view .LVU6583
 23626              		.loc 1 10807 20 is_stmt 0 view .LVU6584
 23627 008a 7CB9     		cbnz	r4, .L1601
10808:Core/Src/bno055.c ****                 {
10809:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->x >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0_
 23628              		.loc 1 10809 21 is_stmt 1 view .LVU6585
 23629              		.loc 1 10809 34 is_stmt 0 view .LVU6586
 23630 008c 95F90130 		ldrsb	r3, [r5, #1]
 23631              	.LVL2930:
10810:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_X_MSB, data1_u8r);
 23632              		.loc 1 10810 21 is_stmt 1 view .LVU6587
 23633              		.loc 1 10810 31 is_stmt 0 view .LVU6588
 23634 0090 8DF80730 		strb	r3, [sp, #7]
10811:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23635              		.loc 1 10811 21 is_stmt 1 view .LVU6589
ARM GAS  /tmp/ccWoU29M.s 			page 657


 23636              		.loc 1 10811 41 is_stmt 0 view .LVU6590
 23637 0094 6D4B     		ldr	r3, .L1613
 23638              	.LVL2931:
 23639              		.loc 1 10811 41 view .LVU6591
 23640 0096 1868     		ldr	r0, [r3]
 23641 0098 C468     		ldr	r4, [r0, #12]
 23642              	.LVL2932:
 23643              		.loc 1 10811 33 view .LVU6592
 23644 009a 0123     		movs	r3, #1
 23645 009c 0DF10702 		add	r2, sp, #7
 23646              	.LVL2933:
 23647              		.loc 1 10811 33 view .LVU6593
 23648 00a0 5C21     		movs	r1, #92
 23649 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23650 00a4 A047     		blx	r4
 23651              	.LVL2934:
 23652              		.loc 1 10811 30 view .LVU6594
 23653 00a6 56FA80F4 		uxtab	r4, r6, r0
 23654 00aa 64B2     		sxtb	r4, r4
 23655              	.LVL2935:
 23656              	.L1601:
10812:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_X_MSB_REG,
10813:Core/Src/bno055.c ****                                                                 &data2_u8r,
10814:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10815:Core/Src/bno055.c ****                 }
10816:Core/Src/bno055.c **** 
10817:Core/Src/bno055.c ****                 /* write Mag offset y value*/
10818:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23657              		.loc 1 10818 17 is_stmt 1 view .LVU6595
 23658              		.loc 1 10818 37 is_stmt 0 view .LVU6596
 23659 00ac 674B     		ldr	r3, .L1613
 23660 00ae 1868     		ldr	r0, [r3]
 23661 00b0 0669     		ldr	r6, [r0, #16]
 23662              		.loc 1 10818 29 view .LVU6597
 23663 00b2 0123     		movs	r3, #1
 23664 00b4 0DF10702 		add	r2, sp, #7
 23665 00b8 5D21     		movs	r1, #93
 23666 00ba 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23667 00bc B047     		blx	r6
 23668              	.LVL2936:
 23669              		.loc 1 10818 26 view .LVU6598
 23670 00be 54FA80F4 		uxtab	r4, r4, r0
 23671              	.LVL2937:
 23672              		.loc 1 10818 26 view .LVU6599
 23673 00c2 E6B2     		uxtb	r6, r4
 23674 00c4 64B2     		sxtb	r4, r4
 23675              	.LVL2938:
10819:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_Y_LSB_REG,
10820:Core/Src/bno055.c ****                                                            &data2_u8r,
10821:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10822:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23676              		.loc 1 10822 17 is_stmt 1 view .LVU6600
 23677              		.loc 1 10822 20 is_stmt 0 view .LVU6601
 23678 00c6 7CB9     		cbnz	r4, .L1602
10823:Core/Src/bno055.c ****                 {
10824:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->y & BNO055_SIC_HEX_0_0_F_F_DATA));
 23679              		.loc 1 10824 21 is_stmt 1 view .LVU6602
ARM GAS  /tmp/ccWoU29M.s 			page 658


 23680              		.loc 1 10824 49 is_stmt 0 view .LVU6603
 23681 00c8 B5F90230 		ldrsh	r3, [r5, #2]
 23682              	.LVL2939:
10825:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_Y_LSB, data1_u8r);
 23683              		.loc 1 10825 21 is_stmt 1 view .LVU6604
 23684              		.loc 1 10825 31 is_stmt 0 view .LVU6605
 23685 00cc 8DF80730 		strb	r3, [sp, #7]
10826:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23686              		.loc 1 10826 21 is_stmt 1 view .LVU6606
 23687              		.loc 1 10826 41 is_stmt 0 view .LVU6607
 23688 00d0 5E4B     		ldr	r3, .L1613
 23689              	.LVL2940:
 23690              		.loc 1 10826 41 view .LVU6608
 23691 00d2 1868     		ldr	r0, [r3]
 23692 00d4 C468     		ldr	r4, [r0, #12]
 23693              	.LVL2941:
 23694              		.loc 1 10826 33 view .LVU6609
 23695 00d6 0123     		movs	r3, #1
 23696 00d8 0DF10702 		add	r2, sp, #7
 23697              	.LVL2942:
 23698              		.loc 1 10826 33 view .LVU6610
 23699 00dc 5D21     		movs	r1, #93
 23700 00de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23701 00e0 A047     		blx	r4
 23702              	.LVL2943:
 23703              		.loc 1 10826 30 view .LVU6611
 23704 00e2 56FA80F4 		uxtab	r4, r6, r0
 23705 00e6 64B2     		sxtb	r4, r4
 23706              	.LVL2944:
 23707              	.L1602:
10827:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_Y_LSB_REG,
10828:Core/Src/bno055.c ****                                                                 &data2_u8r,
10829:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10830:Core/Src/bno055.c ****                 }
10831:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23708              		.loc 1 10831 17 is_stmt 1 view .LVU6612
 23709              		.loc 1 10831 37 is_stmt 0 view .LVU6613
 23710 00e8 584B     		ldr	r3, .L1613
 23711 00ea 1868     		ldr	r0, [r3]
 23712 00ec 0669     		ldr	r6, [r0, #16]
 23713              		.loc 1 10831 29 view .LVU6614
 23714 00ee 0123     		movs	r3, #1
 23715 00f0 0DF10702 		add	r2, sp, #7
 23716 00f4 5E21     		movs	r1, #94
 23717 00f6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23718 00f8 B047     		blx	r6
 23719              	.LVL2945:
 23720              		.loc 1 10831 26 view .LVU6615
 23721 00fa 54FA80F4 		uxtab	r4, r4, r0
 23722              	.LVL2946:
 23723              		.loc 1 10831 26 view .LVU6616
 23724 00fe E6B2     		uxtb	r6, r4
 23725 0100 64B2     		sxtb	r4, r4
 23726              	.LVL2947:
10832:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_Y_MSB_REG,
10833:Core/Src/bno055.c ****                                                            &data2_u8r,
10834:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/ccWoU29M.s 			page 659


10835:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23727              		.loc 1 10835 17 is_stmt 1 view .LVU6617
 23728              		.loc 1 10835 20 is_stmt 0 view .LVU6618
 23729 0102 7CB9     		cbnz	r4, .L1603
10836:Core/Src/bno055.c ****                 {
10837:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->y >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0_
 23730              		.loc 1 10837 21 is_stmt 1 view .LVU6619
 23731              		.loc 1 10837 34 is_stmt 0 view .LVU6620
 23732 0104 95F90330 		ldrsb	r3, [r5, #3]
 23733              	.LVL2948:
10838:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_Y_MSB, data1_u8r);
 23734              		.loc 1 10838 21 is_stmt 1 view .LVU6621
 23735              		.loc 1 10838 31 is_stmt 0 view .LVU6622
 23736 0108 8DF80730 		strb	r3, [sp, #7]
10839:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23737              		.loc 1 10839 21 is_stmt 1 view .LVU6623
 23738              		.loc 1 10839 41 is_stmt 0 view .LVU6624
 23739 010c 4F4B     		ldr	r3, .L1613
 23740              	.LVL2949:
 23741              		.loc 1 10839 41 view .LVU6625
 23742 010e 1868     		ldr	r0, [r3]
 23743 0110 C468     		ldr	r4, [r0, #12]
 23744              	.LVL2950:
 23745              		.loc 1 10839 33 view .LVU6626
 23746 0112 0123     		movs	r3, #1
 23747 0114 0DF10702 		add	r2, sp, #7
 23748              	.LVL2951:
 23749              		.loc 1 10839 33 view .LVU6627
 23750 0118 5E21     		movs	r1, #94
 23751 011a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23752 011c A047     		blx	r4
 23753              	.LVL2952:
 23754              		.loc 1 10839 30 view .LVU6628
 23755 011e 56FA80F4 		uxtab	r4, r6, r0
 23756 0122 64B2     		sxtb	r4, r4
 23757              	.LVL2953:
 23758              	.L1603:
10840:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_Y_MSB_REG,
10841:Core/Src/bno055.c ****                                                                 &data2_u8r,
10842:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10843:Core/Src/bno055.c ****                 }
10844:Core/Src/bno055.c **** 
10845:Core/Src/bno055.c ****                 /* write Mag offset z value*/
10846:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23759              		.loc 1 10846 17 is_stmt 1 view .LVU6629
 23760              		.loc 1 10846 37 is_stmt 0 view .LVU6630
 23761 0124 494B     		ldr	r3, .L1613
 23762 0126 1868     		ldr	r0, [r3]
 23763 0128 0669     		ldr	r6, [r0, #16]
 23764              		.loc 1 10846 29 view .LVU6631
 23765 012a 0123     		movs	r3, #1
 23766 012c 0DF10702 		add	r2, sp, #7
 23767 0130 5F21     		movs	r1, #95
 23768 0132 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23769 0134 B047     		blx	r6
 23770              	.LVL2954:
 23771              		.loc 1 10846 26 view .LVU6632
ARM GAS  /tmp/ccWoU29M.s 			page 660


 23772 0136 54FA80F4 		uxtab	r4, r4, r0
 23773              	.LVL2955:
 23774              		.loc 1 10846 26 view .LVU6633
 23775 013a E6B2     		uxtb	r6, r4
 23776 013c 64B2     		sxtb	r4, r4
 23777              	.LVL2956:
10847:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_Z_LSB_REG,
10848:Core/Src/bno055.c ****                                                            &data2_u8r,
10849:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10850:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23778              		.loc 1 10850 17 is_stmt 1 view .LVU6634
 23779              		.loc 1 10850 20 is_stmt 0 view .LVU6635
 23780 013e 7CB9     		cbnz	r4, .L1604
10851:Core/Src/bno055.c ****                 {
10852:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->z & BNO055_SIC_HEX_0_0_F_F_DATA));
 23781              		.loc 1 10852 21 is_stmt 1 view .LVU6636
 23782              		.loc 1 10852 49 is_stmt 0 view .LVU6637
 23783 0140 B5F90430 		ldrsh	r3, [r5, #4]
 23784              	.LVL2957:
10853:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_Z_LSB, data1_u8r);
 23785              		.loc 1 10853 21 is_stmt 1 view .LVU6638
 23786              		.loc 1 10853 31 is_stmt 0 view .LVU6639
 23787 0144 8DF80730 		strb	r3, [sp, #7]
10854:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23788              		.loc 1 10854 21 is_stmt 1 view .LVU6640
 23789              		.loc 1 10854 41 is_stmt 0 view .LVU6641
 23790 0148 404B     		ldr	r3, .L1613
 23791              	.LVL2958:
 23792              		.loc 1 10854 41 view .LVU6642
 23793 014a 1868     		ldr	r0, [r3]
 23794 014c C468     		ldr	r4, [r0, #12]
 23795              	.LVL2959:
 23796              		.loc 1 10854 33 view .LVU6643
 23797 014e 0123     		movs	r3, #1
 23798 0150 0DF10702 		add	r2, sp, #7
 23799              	.LVL2960:
 23800              		.loc 1 10854 33 view .LVU6644
 23801 0154 5F21     		movs	r1, #95
 23802 0156 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23803 0158 A047     		blx	r4
 23804              	.LVL2961:
 23805              		.loc 1 10854 30 view .LVU6645
 23806 015a 56FA80F4 		uxtab	r4, r6, r0
 23807 015e 64B2     		sxtb	r4, r4
 23808              	.LVL2962:
 23809              	.L1604:
10855:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_Z_LSB_REG,
10856:Core/Src/bno055.c ****                                                                 &data2_u8r,
10857:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10858:Core/Src/bno055.c ****                 }
10859:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23810              		.loc 1 10859 17 is_stmt 1 view .LVU6646
 23811              		.loc 1 10859 37 is_stmt 0 view .LVU6647
 23812 0160 3A4B     		ldr	r3, .L1613
 23813 0162 1868     		ldr	r0, [r3]
 23814 0164 0669     		ldr	r6, [r0, #16]
 23815              		.loc 1 10859 29 view .LVU6648
ARM GAS  /tmp/ccWoU29M.s 			page 661


 23816 0166 0123     		movs	r3, #1
 23817 0168 0DF10702 		add	r2, sp, #7
 23818 016c 6021     		movs	r1, #96
 23819 016e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23820 0170 B047     		blx	r6
 23821              	.LVL2963:
 23822              		.loc 1 10859 26 view .LVU6649
 23823 0172 54FA80F4 		uxtab	r4, r4, r0
 23824              	.LVL2964:
 23825              		.loc 1 10859 26 view .LVU6650
 23826 0176 E6B2     		uxtb	r6, r4
 23827 0178 64B2     		sxtb	r4, r4
 23828              	.LVL2965:
10860:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_Z_MSB_REG,
10861:Core/Src/bno055.c ****                                                            &data2_u8r,
10862:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10863:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23829              		.loc 1 10863 17 is_stmt 1 view .LVU6651
 23830              		.loc 1 10863 20 is_stmt 0 view .LVU6652
 23831 017a 7CB9     		cbnz	r4, .L1605
10864:Core/Src/bno055.c ****                 {
10865:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->z >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0_
 23832              		.loc 1 10865 21 is_stmt 1 view .LVU6653
 23833              		.loc 1 10865 34 is_stmt 0 view .LVU6654
 23834 017c 95F90530 		ldrsb	r3, [r5, #5]
 23835              	.LVL2966:
10866:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_Z_MSB, data1_u8r);
 23836              		.loc 1 10866 21 is_stmt 1 view .LVU6655
 23837              		.loc 1 10866 31 is_stmt 0 view .LVU6656
 23838 0180 8DF80730 		strb	r3, [sp, #7]
10867:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23839              		.loc 1 10867 21 is_stmt 1 view .LVU6657
 23840              		.loc 1 10867 41 is_stmt 0 view .LVU6658
 23841 0184 314B     		ldr	r3, .L1613
 23842              	.LVL2967:
 23843              		.loc 1 10867 41 view .LVU6659
 23844 0186 1868     		ldr	r0, [r3]
 23845 0188 C468     		ldr	r4, [r0, #12]
 23846              	.LVL2968:
 23847              		.loc 1 10867 33 view .LVU6660
 23848 018a 0123     		movs	r3, #1
 23849 018c 0DF10702 		add	r2, sp, #7
 23850              	.LVL2969:
 23851              		.loc 1 10867 33 view .LVU6661
 23852 0190 6021     		movs	r1, #96
 23853 0192 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23854 0194 A047     		blx	r4
 23855              	.LVL2970:
 23856              		.loc 1 10867 30 view .LVU6662
 23857 0196 56FA80F4 		uxtab	r4, r6, r0
 23858 019a 64B2     		sxtb	r4, r4
 23859              	.LVL2971:
 23860              	.L1605:
10868:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_Z_MSB_REG,
10869:Core/Src/bno055.c ****                                                                 &data2_u8r,
10870:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10871:Core/Src/bno055.c ****                 }
ARM GAS  /tmp/ccWoU29M.s 			page 662


10872:Core/Src/bno055.c **** 
10873:Core/Src/bno055.c ****                 /* write Mag radius value*/
10874:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23861              		.loc 1 10874 17 is_stmt 1 view .LVU6663
 23862              		.loc 1 10874 37 is_stmt 0 view .LVU6664
 23863 019c 2B4B     		ldr	r3, .L1613
 23864 019e 1868     		ldr	r0, [r3]
 23865 01a0 0669     		ldr	r6, [r0, #16]
 23866              		.loc 1 10874 29 view .LVU6665
 23867 01a2 0123     		movs	r3, #1
 23868 01a4 0DF10702 		add	r2, sp, #7
 23869 01a8 6921     		movs	r1, #105
 23870 01aa 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23871 01ac B047     		blx	r6
 23872              	.LVL2972:
 23873              		.loc 1 10874 26 view .LVU6666
 23874 01ae 54FA80F4 		uxtab	r4, r4, r0
 23875              	.LVL2973:
 23876              		.loc 1 10874 26 view .LVU6667
 23877 01b2 E6B2     		uxtb	r6, r4
 23878 01b4 64B2     		sxtb	r4, r4
 23879              	.LVL2974:
10875:Core/Src/bno055.c ****                                                            BNO055_MAG_RADIUS_LSB_REG,
10876:Core/Src/bno055.c ****                                                            &data2_u8r,
10877:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10878:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23880              		.loc 1 10878 17 is_stmt 1 view .LVU6668
 23881              		.loc 1 10878 20 is_stmt 0 view .LVU6669
 23882 01b6 7CB9     		cbnz	r4, .L1606
10879:Core/Src/bno055.c ****                 {
10880:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->r & BNO055_SIC_HEX_0_0_F_F_DATA));
 23883              		.loc 1 10880 21 is_stmt 1 view .LVU6670
 23884              		.loc 1 10880 49 is_stmt 0 view .LVU6671
 23885 01b8 B5F90630 		ldrsh	r3, [r5, #6]
 23886              	.LVL2975:
10881:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_RADIUS_LSB, data1_u8r);
 23887              		.loc 1 10881 21 is_stmt 1 view .LVU6672
 23888              		.loc 1 10881 31 is_stmt 0 view .LVU6673
 23889 01bc 8DF80730 		strb	r3, [sp, #7]
10882:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23890              		.loc 1 10882 21 is_stmt 1 view .LVU6674
 23891              		.loc 1 10882 41 is_stmt 0 view .LVU6675
 23892 01c0 224B     		ldr	r3, .L1613
 23893              	.LVL2976:
 23894              		.loc 1 10882 41 view .LVU6676
 23895 01c2 1868     		ldr	r0, [r3]
 23896 01c4 C468     		ldr	r4, [r0, #12]
 23897              	.LVL2977:
 23898              		.loc 1 10882 33 view .LVU6677
 23899 01c6 0123     		movs	r3, #1
 23900 01c8 0DF10702 		add	r2, sp, #7
 23901              	.LVL2978:
 23902              		.loc 1 10882 33 view .LVU6678
 23903 01cc 6921     		movs	r1, #105
 23904 01ce 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23905 01d0 A047     		blx	r4
 23906              	.LVL2979:
ARM GAS  /tmp/ccWoU29M.s 			page 663


 23907              		.loc 1 10882 30 view .LVU6679
 23908 01d2 56FA80F4 		uxtab	r4, r6, r0
 23909 01d6 64B2     		sxtb	r4, r4
 23910              	.LVL2980:
 23911              	.L1606:
10883:Core/Src/bno055.c ****                                                                 BNO055_MAG_RADIUS_LSB_REG,
10884:Core/Src/bno055.c ****                                                                 &data2_u8r,
10885:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10886:Core/Src/bno055.c ****                 }
10887:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23912              		.loc 1 10887 17 is_stmt 1 view .LVU6680
 23913              		.loc 1 10887 37 is_stmt 0 view .LVU6681
 23914 01d8 1C4B     		ldr	r3, .L1613
 23915 01da 1868     		ldr	r0, [r3]
 23916 01dc 0669     		ldr	r6, [r0, #16]
 23917              		.loc 1 10887 29 view .LVU6682
 23918 01de 0123     		movs	r3, #1
 23919 01e0 0DF10702 		add	r2, sp, #7
 23920 01e4 6A21     		movs	r1, #106
 23921 01e6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23922 01e8 B047     		blx	r6
 23923              	.LVL2981:
 23924              		.loc 1 10887 26 view .LVU6683
 23925 01ea 54FA80F4 		uxtab	r4, r4, r0
 23926              	.LVL2982:
 23927              		.loc 1 10887 26 view .LVU6684
 23928 01ee E6B2     		uxtb	r6, r4
 23929 01f0 64B2     		sxtb	r4, r4
 23930              	.LVL2983:
10888:Core/Src/bno055.c ****                                                            BNO055_MAG_RADIUS_MSB_REG,
10889:Core/Src/bno055.c ****                                                            &data2_u8r,
10890:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10891:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23931              		.loc 1 10891 17 is_stmt 1 view .LVU6685
 23932              		.loc 1 10891 20 is_stmt 0 view .LVU6686
 23933 01f2 C4B9     		cbnz	r4, .L1598
10892:Core/Src/bno055.c ****                 {
10893:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->r >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0_
 23934              		.loc 1 10893 21 is_stmt 1 view .LVU6687
 23935              		.loc 1 10893 34 is_stmt 0 view .LVU6688
 23936 01f4 95F90730 		ldrsb	r3, [r5, #7]
 23937              	.LVL2984:
10894:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_RADIUS_MSB, data1_u8r);
 23938              		.loc 1 10894 21 is_stmt 1 view .LVU6689
 23939              		.loc 1 10894 31 is_stmt 0 view .LVU6690
 23940 01f8 8DF80730 		strb	r3, [sp, #7]
10895:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23941              		.loc 1 10895 21 is_stmt 1 view .LVU6691
 23942              		.loc 1 10895 41 is_stmt 0 view .LVU6692
 23943 01fc 134B     		ldr	r3, .L1613
 23944              	.LVL2985:
 23945              		.loc 1 10895 41 view .LVU6693
 23946 01fe 1868     		ldr	r0, [r3]
 23947 0200 C468     		ldr	r4, [r0, #12]
 23948              	.LVL2986:
 23949              		.loc 1 10895 33 view .LVU6694
 23950 0202 0123     		movs	r3, #1
ARM GAS  /tmp/ccWoU29M.s 			page 664


 23951 0204 0DF10702 		add	r2, sp, #7
 23952              	.LVL2987:
 23953              		.loc 1 10895 33 view .LVU6695
 23954 0208 6A21     		movs	r1, #106
 23955 020a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23956 020c A047     		blx	r4
 23957              	.LVL2988:
 23958              		.loc 1 10895 30 view .LVU6696
 23959 020e 56FA80F4 		uxtab	r4, r6, r0
 23960 0212 64B2     		sxtb	r4, r4
 23961              	.LVL2989:
 23962              		.loc 1 10895 30 view .LVU6697
 23963 0214 07E0     		b	.L1598
 23964              	.LVL2990:
 23965              	.L1611:
10785:Core/Src/bno055.c ****             }
 23966              		.loc 1 10785 17 is_stmt 1 view .LVU6698
10785:Core/Src/bno055.c ****             }
 23967              		.loc 1 10785 28 is_stmt 0 view .LVU6699
 23968 0216 FFF7FEFF 		bl	bno055_set_operation_mode
 23969              	.LVL2991:
10785:Core/Src/bno055.c ****             }
 23970              		.loc 1 10785 25 view .LVU6700
 23971 021a 54FA80F4 		uxtab	r4, r4, r0
 23972 021e 64B2     		sxtb	r4, r4
 23973              	.LVL2992:
10785:Core/Src/bno055.c ****             }
 23974              		.loc 1 10785 25 view .LVU6701
 23975 0220 08E7     		b	.L1599
 23976              	.LVL2993:
 23977              	.L1608:
10896:Core/Src/bno055.c ****                                                                 BNO055_MAG_RADIUS_MSB_REG,
10897:Core/Src/bno055.c ****                                                                 &data2_u8r,
10898:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10899:Core/Src/bno055.c ****                 }
10900:Core/Src/bno055.c ****             }
10901:Core/Src/bno055.c ****             else
10902:Core/Src/bno055.c ****             {
10903:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10904:Core/Src/bno055.c ****             }
10905:Core/Src/bno055.c ****         }
10906:Core/Src/bno055.c ****         else
10907:Core/Src/bno055.c ****         {
10908:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 23978              		.loc 1 10908 22 view .LVU6702
 23979 0222 4FF0FF34 		mov	r4, #-1
 23980              	.LVL2994:
 23981              	.L1598:
10909:Core/Src/bno055.c ****         }
10910:Core/Src/bno055.c ****     }
10911:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 23982              		.loc 1 10911 5 is_stmt 1 view .LVU6703
 23983              		.loc 1 10911 24 is_stmt 0 view .LVU6704
 23984 0226 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 23985              		.loc 1 10911 8 view .LVU6705
 23986 022a 28B9     		cbnz	r0, .L1612
 23987              	.LVL2995:
ARM GAS  /tmp/ccWoU29M.s 			page 665


 23988              	.L1597:
10912:Core/Src/bno055.c ****     {
10913:Core/Src/bno055.c ****         /* set the operation mode
10914:Core/Src/bno055.c ****          * of previous operation mode*/
10915:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
10916:Core/Src/bno055.c ****     }
10917:Core/Src/bno055.c **** 
10918:Core/Src/bno055.c ****     return com_rslt;
10919:Core/Src/bno055.c **** }
 23989              		.loc 1 10919 1 view .LVU6706
 23990 022c 2046     		mov	r0, r4
 23991 022e 02B0     		add	sp, sp, #8
 23992              	.LCFI683:
 23993              		.cfi_remember_state
 23994              		.cfi_def_cfa_offset 16
 23995              		@ sp needed
 23996 0230 70BD     		pop	{r4, r5, r6, pc}
 23997              	.LVL2996:
 23998              	.L1609:
 23999              	.LCFI684:
 24000              		.cfi_restore_state
10903:Core/Src/bno055.c ****             }
 24001              		.loc 1 10903 26 view .LVU6707
 24002 0232 4FF0FF34 		mov	r4, #-1
 24003              	.LVL2997:
10903:Core/Src/bno055.c ****             }
 24004              		.loc 1 10903 26 view .LVU6708
 24005 0236 F6E7     		b	.L1598
 24006              	.LVL2998:
 24007              	.L1612:
10915:Core/Src/bno055.c ****     }
 24008              		.loc 1 10915 9 is_stmt 1 view .LVU6709
10915:Core/Src/bno055.c ****     }
 24009              		.loc 1 10915 21 is_stmt 0 view .LVU6710
 24010 0238 FFF7FEFF 		bl	bno055_set_operation_mode
 24011              	.LVL2999:
10915:Core/Src/bno055.c ****     }
 24012              		.loc 1 10915 18 view .LVU6711
 24013 023c 54FA80F4 		uxtab	r4, r4, r0
 24014              	.LVL3000:
10915:Core/Src/bno055.c ****     }
 24015              		.loc 1 10915 18 view .LVU6712
 24016 0240 64B2     		sxtb	r4, r4
 24017              	.LVL3001:
10915:Core/Src/bno055.c ****     }
 24018              		.loc 1 10915 18 view .LVU6713
 24019 0242 F3E7     		b	.L1597
 24020              	.LVL3002:
 24021              	.L1607:
10773:Core/Src/bno055.c ****     }
 24022              		.loc 1 10773 16 view .LVU6714
 24023 0244 6FF07E04 		mvn	r4, #126
 24024 0248 F0E7     		b	.L1597
 24025              	.L1614:
 24026 024a 00BF     		.align	2
 24027              	.L1613:
 24028 024c 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccWoU29M.s 			page 666


 24029              		.cfi_endproc
 24030              	.LFE172:
 24032              		.section	.text.bno055_read_gyro_offset,"ax",%progbits
 24033              		.align	1
 24034              		.global	bno055_read_gyro_offset
 24035              		.syntax unified
 24036              		.thumb
 24037              		.thumb_func
 24038              		.fpu fpv4-sp-d16
 24040              	bno055_read_gyro_offset:
 24041              	.LVL3003:
 24042              	.LFB173:
10920:Core/Src/bno055.c **** 
10921:Core/Src/bno055.c **** /*!
10922:Core/Src/bno055.c ****  *  @brief This API is used to read gyro offset
10923:Core/Src/bno055.c ****  *  offset form register 0x61 to 0x66
10924:Core/Src/bno055.c ****  *
10925:Core/Src/bno055.c ****  *  @param gyro_offset : The value of gyro offset
10926:Core/Src/bno055.c ****  *
10927:Core/Src/bno055.c ****  *      bno055_gyro_offset_t  |     result
10928:Core/Src/bno055.c ****  *      ------------------- | ----------------
10929:Core/Src/bno055.c ****  *               x          |  gyro offset x
10930:Core/Src/bno055.c ****  *               y          |  gyro offset y
10931:Core/Src/bno055.c ****  *               z          |  gyro offset z
10932:Core/Src/bno055.c ****  *
10933:Core/Src/bno055.c ****  *
10934:Core/Src/bno055.c ****  *  @return results of bus communication function
10935:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10936:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10937:Core/Src/bno055.c ****  *
10938:Core/Src/bno055.c ****  *  @note  The range of the gyro offset varies based on
10939:Core/Src/bno055.c ****  *  the range of gyro sensor
10940:Core/Src/bno055.c ****  *
10941:Core/Src/bno055.c ****  *  gyro G range         | offset range
10942:Core/Src/bno055.c ****  * --------------------  | ------------
10943:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_2000DPS   | +/-32000
10944:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_1000DPS   | +/-16000
10945:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_500DPS    | +/-8000
10946:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_250DPS    | +/-4000
10947:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_125DPS    | +/-2000
10948:Core/Src/bno055.c ****  *
10949:Core/Src/bno055.c ****  *  Gyro range can be configured by using the
10950:Core/Src/bno055.c ****  *  bno055_set_gyro_range() API
10951:Core/Src/bno055.c ****  */
10952:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_offset(struct bno055_gyro_offset_t  *gyro_offset)
10953:Core/Src/bno055.c **** {
 24043              		.loc 1 10953 1 is_stmt 1 view -0
 24044              		.cfi_startproc
 24045              		@ args = 0, pretend = 0, frame = 8
 24046              		@ frame_needed = 0, uses_anonymous_args = 0
 24047              		.loc 1 10953 1 is_stmt 0 view .LVU6716
 24048 0000 30B5     		push	{r4, r5, lr}
 24049              	.LCFI685:
 24050              		.cfi_def_cfa_offset 12
 24051              		.cfi_offset 4, -12
 24052              		.cfi_offset 5, -8
 24053              		.cfi_offset 14, -4
ARM GAS  /tmp/ccWoU29M.s 			page 667


 24054 0002 83B0     		sub	sp, sp, #12
 24055              	.LCFI686:
 24056              		.cfi_def_cfa_offset 24
 24057 0004 0446     		mov	r4, r0
10954:Core/Src/bno055.c ****     /* Variable used to return value of
10955:Core/Src/bno055.c ****      * communication routine*/
10956:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24058              		.loc 1 10956 5 is_stmt 1 view .LVU6717
 24059              	.LVL3004:
10957:Core/Src/bno055.c **** 
10958:Core/Src/bno055.c ****     /* Array holding the gyro offset values
10959:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] - offset x->LSB
10960:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] - offset x->MSB
10961:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] - offset y->LSB
10962:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] - offset y->MSB
10963:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] - offset z->LSB
10964:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] - offset z->MSB
10965:Core/Src/bno055.c ****      */
10966:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_OFFSET_ARRAY] = {
 24060              		.loc 1 10966 5 view .LVU6718
 24061              		.loc 1 10966 8 is_stmt 0 view .LVU6719
 24062 0006 1F4B     		ldr	r3, .L1624
 24063 0008 93E80300 		ldm	r3, {r0, r1}
 24064              	.LVL3005:
 24065              		.loc 1 10966 8 view .LVU6720
 24066 000c 0090     		str	r0, [sp]
 24067 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
10967:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
10968:Core/Src/bno055.c ****     };
10969:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24068              		.loc 1 10969 5 is_stmt 1 view .LVU6721
 24069              	.LVL3006:
10970:Core/Src/bno055.c **** 
10971:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
10972:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24070              		.loc 1 10972 5 view .LVU6722
 24071              		.loc 1 10972 18 is_stmt 0 view .LVU6723
 24072 0012 1D4B     		ldr	r3, .L1624+4
 24073 0014 1B68     		ldr	r3, [r3]
 24074              		.loc 1 10972 8 view .LVU6724
 24075 0016 5BB3     		cbz	r3, .L1619
10973:Core/Src/bno055.c ****     {
10974:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10975:Core/Src/bno055.c ****     }
10976:Core/Src/bno055.c ****     else
10977:Core/Src/bno055.c ****     {
10978:Core/Src/bno055.c ****         /*condition check for page, gyro offset is
10979:Core/Src/bno055.c ****          * available in the page zero*/
10980:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 24076              		.loc 1 10980 9 is_stmt 1 view .LVU6725
 24077              		.loc 1 10980 21 is_stmt 0 view .LVU6726
 24078 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24079              		.loc 1 10980 12 view .LVU6727
 24080 001a 1BBB     		cbnz	r3, .L1623
 24081              	.LVL3007:
 24082              	.L1617:
10981:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 668


10982:Core/Src/bno055.c ****             /* Write the page zero*/
10983:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
10984:Core/Src/bno055.c ****         }
10985:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 24083              		.loc 1 10985 53 discriminator 1 view .LVU6728
 24084 001c 1A4B     		ldr	r3, .L1624+4
 24085 001e 1B68     		ldr	r3, [r3]
 24086 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24087              		.loc 1 10985 41 discriminator 1 view .LVU6729
 24088 0022 43BB     		cbnz	r3, .L1620
 24089              	.L1618:
10986:Core/Src/bno055.c ****         {
10987:Core/Src/bno055.c ****             /* Read gyro offset value it the six bytes of data*/
10988:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24090              		.loc 1 10988 13 is_stmt 1 view .LVU6730
 24091              		.loc 1 10988 32 is_stmt 0 view .LVU6731
 24092 0024 184B     		ldr	r3, .L1624+4
 24093 0026 1868     		ldr	r0, [r3]
 24094 0028 0569     		ldr	r5, [r0, #16]
 24095              		.loc 1 10988 24 view .LVU6732
 24096 002a 0623     		movs	r3, #6
 24097 002c 6A46     		mov	r2, sp
 24098 002e 6121     		movs	r1, #97
 24099 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24100 0032 A847     		blx	r5
 24101              	.LVL3008:
10989:Core/Src/bno055.c ****                                                       BNO055_GYRO_OFFSET_X_LSB_REG,
10990:Core/Src/bno055.c ****                                                       data_u8,
10991:Core/Src/bno055.c ****                                                       BNO055_GYRO_OFFSET_ARRAY);
10992:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 24102              		.loc 1 10992 13 is_stmt 1 view .LVU6733
 24103              		.loc 1 10992 16 is_stmt 0 view .LVU6734
 24104 0034 10BB     		cbnz	r0, .L1621
10993:Core/Src/bno055.c ****             {
10994:Core/Src/bno055.c ****                 /* Read gyro x offset value*/
10995:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 24105              		.loc 1 10995 17 is_stmt 1 view .LVU6735
10996:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_X
10997:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 24106              		.loc 1 10997 17 view .LVU6736
10998:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_X
10999:Core/Src/bno055.c ****                 gyro_offset->x =
 24107              		.loc 1 10999 17 view .LVU6737
11000:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 24108              		.loc 1 11000 34 is_stmt 0 view .LVU6738
 24109 0036 9DF90120 		ldrsb	r2, [sp, #1]
11001:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB]));
 24110              		.loc 1 11001 35 view .LVU6739
 24111 003a 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
11000:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 24112              		.loc 1 11000 21 view .LVU6740
 24113 003e 43EA0223 		orr	r3, r3, r2, lsl #8
10999:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 24114              		.loc 1 10999 32 view .LVU6741
 24115 0042 2380     		strh	r3, [r4]	@ movhi
11002:Core/Src/bno055.c **** 
11003:Core/Src/bno055.c ****                 /* Read gyro y offset value*/
ARM GAS  /tmp/ccWoU29M.s 			page 669


11004:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 24116              		.loc 1 11004 17 is_stmt 1 view .LVU6742
11005:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_Y
11006:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 24117              		.loc 1 11006 17 view .LVU6743
11007:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_Y
11008:Core/Src/bno055.c ****                 gyro_offset->y =
 24118              		.loc 1 11008 17 view .LVU6744
11009:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 24119              		.loc 1 11009 34 is_stmt 0 view .LVU6745
 24120 0044 9DF90320 		ldrsb	r2, [sp, #3]
11010:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB]));
 24121              		.loc 1 11010 35 view .LVU6746
 24122 0048 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
11009:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 24123              		.loc 1 11009 21 view .LVU6747
 24124 004c 43EA0223 		orr	r3, r3, r2, lsl #8
11008:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 24125              		.loc 1 11008 32 view .LVU6748
 24126 0050 6380     		strh	r3, [r4, #2]	@ movhi
11011:Core/Src/bno055.c **** 
11012:Core/Src/bno055.c ****                 /* Read gyro z offset value*/
11013:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 24127              		.loc 1 11013 17 is_stmt 1 view .LVU6749
11014:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_Z
11015:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 24128              		.loc 1 11015 17 view .LVU6750
11016:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_Z
11017:Core/Src/bno055.c ****                 gyro_offset->z =
 24129              		.loc 1 11017 17 view .LVU6751
11018:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 24130              		.loc 1 11018 34 is_stmt 0 view .LVU6752
 24131 0052 9DF90520 		ldrsb	r2, [sp, #5]
11019:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB]));
 24132              		.loc 1 11019 35 view .LVU6753
 24133 0056 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
11018:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 24134              		.loc 1 11018 21 view .LVU6754
 24135 005a 43EA0223 		orr	r3, r3, r2, lsl #8
11017:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 24136              		.loc 1 11017 32 view .LVU6755
 24137 005e A380     		strh	r3, [r4, #4]	@ movhi
 24138              	.LVL3009:
 24139              	.L1616:
11020:Core/Src/bno055.c ****             }
11021:Core/Src/bno055.c ****             else
11022:Core/Src/bno055.c ****             {
11023:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
11024:Core/Src/bno055.c ****             }
11025:Core/Src/bno055.c ****         }
11026:Core/Src/bno055.c ****         else
11027:Core/Src/bno055.c ****         {
11028:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11029:Core/Src/bno055.c ****         }
11030:Core/Src/bno055.c ****     }
11031:Core/Src/bno055.c **** 
11032:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/ccWoU29M.s 			page 670


11033:Core/Src/bno055.c **** }
 24140              		.loc 1 11033 1 view .LVU6756
 24141 0060 03B0     		add	sp, sp, #12
 24142              	.LCFI687:
 24143              		.cfi_remember_state
 24144              		.cfi_def_cfa_offset 12
 24145              		@ sp needed
 24146 0062 30BD     		pop	{r4, r5, pc}
 24147              	.LVL3010:
 24148              	.L1623:
 24149              	.LCFI688:
 24150              		.cfi_restore_state
10983:Core/Src/bno055.c ****         }
 24151              		.loc 1 10983 13 is_stmt 1 view .LVU6757
10983:Core/Src/bno055.c ****         }
 24152              		.loc 1 10983 23 is_stmt 0 view .LVU6758
 24153 0064 0020     		movs	r0, #0
 24154 0066 FFF7FEFF 		bl	bno055_write_page_id
 24155              	.LVL3011:
10985:Core/Src/bno055.c ****         {
 24156              		.loc 1 10985 9 is_stmt 1 view .LVU6759
10985:Core/Src/bno055.c ****         {
 24157              		.loc 1 10985 12 is_stmt 0 view .LVU6760
 24158 006a 0028     		cmp	r0, #0
 24159 006c DAD0     		beq	.L1618
 24160 006e D5E7     		b	.L1617
 24161              	.LVL3012:
 24162              	.L1619:
10974:Core/Src/bno055.c ****     }
 24163              		.loc 1 10974 16 view .LVU6761
 24164 0070 6FF07E00 		mvn	r0, #126
 24165 0074 F4E7     		b	.L1616
 24166              	.LVL3013:
 24167              	.L1620:
11028:Core/Src/bno055.c ****         }
 24168              		.loc 1 11028 22 view .LVU6762
 24169 0076 4FF0FF30 		mov	r0, #-1
 24170 007a F1E7     		b	.L1616
 24171              	.LVL3014:
 24172              	.L1621:
11023:Core/Src/bno055.c ****             }
 24173              		.loc 1 11023 26 view .LVU6763
 24174 007c 4FF0FF30 		mov	r0, #-1
 24175              	.LVL3015:
11023:Core/Src/bno055.c ****             }
 24176              		.loc 1 11023 26 view .LVU6764
 24177 0080 EEE7     		b	.L1616
 24178              	.L1625:
 24179 0082 00BF     		.align	2
 24180              	.L1624:
 24181 0084 00000000 		.word	.LANCHOR1
 24182 0088 00000000 		.word	.LANCHOR0
 24183              		.cfi_endproc
 24184              	.LFE173:
 24186              		.section	.text.bno055_write_gyro_offset,"ax",%progbits
 24187              		.align	1
 24188              		.global	bno055_write_gyro_offset
ARM GAS  /tmp/ccWoU29M.s 			page 671


 24189              		.syntax unified
 24190              		.thumb
 24191              		.thumb_func
 24192              		.fpu fpv4-sp-d16
 24194              	bno055_write_gyro_offset:
 24195              	.LVL3016:
 24196              	.LFB174:
11034:Core/Src/bno055.c **** 
11035:Core/Src/bno055.c **** /*!
11036:Core/Src/bno055.c ****  *  @brief This API is used to read gyro offset
11037:Core/Src/bno055.c ****  *  offset form register 0x61 to 0x66
11038:Core/Src/bno055.c ****  *
11039:Core/Src/bno055.c ****  *  @param gyro_offset : The value of gyro offset
11040:Core/Src/bno055.c ****  *
11041:Core/Src/bno055.c ****  *      bno055_gyro_offset_t  |     result
11042:Core/Src/bno055.c ****  *      ------------------- | ----------------
11043:Core/Src/bno055.c ****  *               x          |  gyro offset x
11044:Core/Src/bno055.c ****  *               y          |  gyro offset y
11045:Core/Src/bno055.c ****  *               z          |  gyro offset z
11046:Core/Src/bno055.c ****  *
11047:Core/Src/bno055.c ****  *
11048:Core/Src/bno055.c ****  *  @return results of bus communication function
11049:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11050:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11051:Core/Src/bno055.c ****  *
11052:Core/Src/bno055.c ****  *  @note  The range of the gyro offset varies based on
11053:Core/Src/bno055.c ****  *  the range of gyro sensor
11054:Core/Src/bno055.c ****  *
11055:Core/Src/bno055.c ****  *  gyro G range         | offset range
11056:Core/Src/bno055.c ****  * --------------------  | ------------
11057:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_2000DPS   | +/-32000
11058:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_1000DPS   | +/-16000
11059:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_500DPS    | +/-8000
11060:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_250DPS    | +/-4000
11061:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_125DPS    | +/-2000
11062:Core/Src/bno055.c ****  *
11063:Core/Src/bno055.c ****  *  Gyro range can be configured by using the
11064:Core/Src/bno055.c ****  *  bno055_set_gyro_range() API
11065:Core/Src/bno055.c ****  */
11066:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_gyro_offset(struct bno055_gyro_offset_t  *gyro_offset)
11067:Core/Src/bno055.c **** {
 24197              		.loc 1 11067 1 is_stmt 1 view -0
 24198              		.cfi_startproc
 24199              		@ args = 0, pretend = 0, frame = 8
 24200              		@ frame_needed = 0, uses_anonymous_args = 0
 24201              		.loc 1 11067 1 is_stmt 0 view .LVU6766
 24202 0000 70B5     		push	{r4, r5, r6, lr}
 24203              	.LCFI689:
 24204              		.cfi_def_cfa_offset 16
 24205              		.cfi_offset 4, -16
 24206              		.cfi_offset 5, -12
 24207              		.cfi_offset 6, -8
 24208              		.cfi_offset 14, -4
 24209 0002 82B0     		sub	sp, sp, #8
 24210              	.LCFI690:
 24211              		.cfi_def_cfa_offset 24
11068:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 672


 24212              		.loc 1 11068 5 is_stmt 1 view .LVU6767
 24213              	.LVL3017:
11069:Core/Src/bno055.c ****     u8 data1_u8r = BNO055_INIT_VALUE;
 24214              		.loc 1 11069 5 view .LVU6768
11070:Core/Src/bno055.c ****     u8 data2_u8r = BNO055_INIT_VALUE;
 24215              		.loc 1 11070 5 view .LVU6769
 24216              		.loc 1 11070 8 is_stmt 0 view .LVU6770
 24217 0004 0023     		movs	r3, #0
 24218 0006 8DF80730 		strb	r3, [sp, #7]
11071:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 24219              		.loc 1 11071 5 is_stmt 1 view .LVU6771
 24220              		.loc 1 11071 8 is_stmt 0 view .LVU6772
 24221 000a 8DF80630 		strb	r3, [sp, #6]
11072:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24222              		.loc 1 11072 5 is_stmt 1 view .LVU6773
 24223              	.LVL3018:
11073:Core/Src/bno055.c **** 
11074:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11075:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24224              		.loc 1 11075 5 view .LVU6774
 24225              		.loc 1 11075 18 is_stmt 0 view .LVU6775
 24226 000e 714B     		ldr	r3, .L1641
 24227 0010 1B68     		ldr	r3, [r3]
 24228              		.loc 1 11075 8 view .LVU6776
 24229 0012 002B     		cmp	r3, #0
 24230 0014 00F0DA80 		beq	.L1635
 24231 0018 0546     		mov	r5, r0
11076:Core/Src/bno055.c ****     {
11077:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11078:Core/Src/bno055.c ****     }
11079:Core/Src/bno055.c ****     else
11080:Core/Src/bno055.c ****     {
11081:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11082:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11083:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11084:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 24232              		.loc 1 11084 9 is_stmt 1 view .LVU6777
 24233              		.loc 1 11084 19 is_stmt 0 view .LVU6778
 24234 001a 0DF10600 		add	r0, sp, #6
 24235              	.LVL3019:
 24236              		.loc 1 11084 19 view .LVU6779
 24237 001e FFF7FEFF 		bl	bno055_get_operation_mode
 24238              	.LVL3020:
11085:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 24239              		.loc 1 11085 9 is_stmt 1 view .LVU6780
 24240              		.loc 1 11085 12 is_stmt 0 view .LVU6781
 24241 0022 0446     		mov	r4, r0
 24242 0024 0028     		cmp	r0, #0
 24243 0026 40F0C080 		bne	.L1636
11086:Core/Src/bno055.c ****         {
11087:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24244              		.loc 1 11087 13 is_stmt 1 view .LVU6782
 24245              		.loc 1 11087 32 is_stmt 0 view .LVU6783
 24246 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 24247              		.loc 1 11087 16 view .LVU6784
 24248 002e 002B     		cmp	r3, #0
 24249 0030 40F0B580 		bne	.L1639
ARM GAS  /tmp/ccWoU29M.s 			page 673


 24250              	.LVL3021:
 24251              	.L1629:
11088:Core/Src/bno055.c ****             {
11089:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11090:Core/Src/bno055.c ****             }
11091:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 24252              		.loc 1 11091 13 is_stmt 1 view .LVU6785
 24253              		.loc 1 11091 16 is_stmt 0 view .LVU6786
 24254 0034 002C     		cmp	r4, #0
 24255 0036 40F0C080 		bne	.L1637
11092:Core/Src/bno055.c ****             {
11093:Core/Src/bno055.c ****                 /* write gryo offset x value*/
11094:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24256              		.loc 1 11094 17 is_stmt 1 view .LVU6787
 24257              		.loc 1 11094 36 is_stmt 0 view .LVU6788
 24258 003a 664B     		ldr	r3, .L1641
 24259 003c 1868     		ldr	r0, [r3]
 24260 003e 0469     		ldr	r4, [r0, #16]
 24261              	.LVL3022:
 24262              		.loc 1 11094 28 view .LVU6789
 24263 0040 0123     		movs	r3, #1
 24264 0042 0DF10702 		add	r2, sp, #7
 24265 0046 6121     		movs	r1, #97
 24266 0048 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24267 004a A047     		blx	r4
 24268              	.LVL3023:
11095:Core/Src/bno055.c ****                                                           BNO055_GYRO_OFFSET_X_LSB_REG,
11096:Core/Src/bno055.c ****                                                           &data2_u8r,
11097:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
11098:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 24269              		.loc 1 11098 17 is_stmt 1 view .LVU6790
 24270              		.loc 1 11098 20 is_stmt 0 view .LVU6791
 24271 004c 0446     		mov	r4, r0
 24272 004e 78B9     		cbnz	r0, .L1630
11099:Core/Src/bno055.c ****                 {
11100:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->x & BNO055_SIC_HEX_0_0_F_F_DATA));
 24273              		.loc 1 11100 21 is_stmt 1 view .LVU6792
 24274              		.loc 1 11100 50 is_stmt 0 view .LVU6793
 24275 0050 B5F90030 		ldrsh	r3, [r5]
 24276              	.LVL3024:
11101:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_X_LSB, data1_u8r)
 24277              		.loc 1 11101 21 is_stmt 1 view .LVU6794
 24278              		.loc 1 11101 31 is_stmt 0 view .LVU6795
 24279 0054 8DF80730 		strb	r3, [sp, #7]
11102:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24280              		.loc 1 11102 21 is_stmt 1 view .LVU6796
 24281              		.loc 1 11102 41 is_stmt 0 view .LVU6797
 24282 0058 5E4B     		ldr	r3, .L1641
 24283              	.LVL3025:
 24284              		.loc 1 11102 41 view .LVU6798
 24285 005a 1868     		ldr	r0, [r3]
 24286              	.LVL3026:
 24287              		.loc 1 11102 41 view .LVU6799
 24288 005c C668     		ldr	r6, [r0, #12]
 24289              		.loc 1 11102 33 view .LVU6800
 24290 005e 0123     		movs	r3, #1
 24291 0060 0DF10702 		add	r2, sp, #7
ARM GAS  /tmp/ccWoU29M.s 			page 674


 24292              	.LVL3027:
 24293              		.loc 1 11102 33 view .LVU6801
 24294 0064 6121     		movs	r1, #97
 24295 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24296 0068 B047     		blx	r6
 24297              	.LVL3028:
 24298              		.loc 1 11102 30 view .LVU6802
 24299 006a 54FA80F4 		uxtab	r4, r4, r0
 24300 006e 64B2     		sxtb	r4, r4
 24301              	.LVL3029:
 24302              	.L1630:
11103:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_X_LSB_REG,
11104:Core/Src/bno055.c ****                                                                 &data2_u8r,
11105:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11106:Core/Src/bno055.c ****                 }
11107:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24303              		.loc 1 11107 17 is_stmt 1 view .LVU6803
 24304              		.loc 1 11107 37 is_stmt 0 view .LVU6804
 24305 0070 584B     		ldr	r3, .L1641
 24306 0072 1868     		ldr	r0, [r3]
 24307 0074 0669     		ldr	r6, [r0, #16]
 24308              		.loc 1 11107 29 view .LVU6805
 24309 0076 0123     		movs	r3, #1
 24310 0078 0DF10702 		add	r2, sp, #7
 24311 007c 6221     		movs	r1, #98
 24312 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24313 0080 B047     		blx	r6
 24314              	.LVL3030:
 24315              		.loc 1 11107 26 view .LVU6806
 24316 0082 54FA80F4 		uxtab	r4, r4, r0
 24317              	.LVL3031:
 24318              		.loc 1 11107 26 view .LVU6807
 24319 0086 E6B2     		uxtb	r6, r4
 24320 0088 64B2     		sxtb	r4, r4
 24321              	.LVL3032:
11108:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_X_MSB_REG,
11109:Core/Src/bno055.c ****                                                            &data2_u8r,
11110:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11111:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 24322              		.loc 1 11111 17 is_stmt 1 view .LVU6808
 24323              		.loc 1 11111 20 is_stmt 0 view .LVU6809
 24324 008a 7CB9     		cbnz	r4, .L1631
11112:Core/Src/bno055.c ****                 {
11113:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->x >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0
 24325              		.loc 1 11113 21 is_stmt 1 view .LVU6810
 24326              		.loc 1 11113 34 is_stmt 0 view .LVU6811
 24327 008c 95F90130 		ldrsb	r3, [r5, #1]
 24328              	.LVL3033:
11114:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_X_MSB, data1_u8r)
 24329              		.loc 1 11114 21 is_stmt 1 view .LVU6812
 24330              		.loc 1 11114 31 is_stmt 0 view .LVU6813
 24331 0090 8DF80730 		strb	r3, [sp, #7]
11115:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24332              		.loc 1 11115 21 is_stmt 1 view .LVU6814
 24333              		.loc 1 11115 41 is_stmt 0 view .LVU6815
 24334 0094 4F4B     		ldr	r3, .L1641
 24335              	.LVL3034:
ARM GAS  /tmp/ccWoU29M.s 			page 675


 24336              		.loc 1 11115 41 view .LVU6816
 24337 0096 1868     		ldr	r0, [r3]
 24338 0098 C468     		ldr	r4, [r0, #12]
 24339              	.LVL3035:
 24340              		.loc 1 11115 33 view .LVU6817
 24341 009a 0123     		movs	r3, #1
 24342 009c 0DF10702 		add	r2, sp, #7
 24343              	.LVL3036:
 24344              		.loc 1 11115 33 view .LVU6818
 24345 00a0 6221     		movs	r1, #98
 24346 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24347 00a4 A047     		blx	r4
 24348              	.LVL3037:
 24349              		.loc 1 11115 30 view .LVU6819
 24350 00a6 56FA80F4 		uxtab	r4, r6, r0
 24351 00aa 64B2     		sxtb	r4, r4
 24352              	.LVL3038:
 24353              	.L1631:
11116:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_X_MSB_REG,
11117:Core/Src/bno055.c ****                                                                 &data2_u8r,
11118:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11119:Core/Src/bno055.c ****                 }
11120:Core/Src/bno055.c **** 
11121:Core/Src/bno055.c ****                 /* write gryo offset y value*/
11122:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24354              		.loc 1 11122 17 is_stmt 1 view .LVU6820
 24355              		.loc 1 11122 37 is_stmt 0 view .LVU6821
 24356 00ac 494B     		ldr	r3, .L1641
 24357 00ae 1868     		ldr	r0, [r3]
 24358 00b0 0669     		ldr	r6, [r0, #16]
 24359              		.loc 1 11122 29 view .LVU6822
 24360 00b2 0123     		movs	r3, #1
 24361 00b4 0DF10702 		add	r2, sp, #7
 24362 00b8 6321     		movs	r1, #99
 24363 00ba 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24364 00bc B047     		blx	r6
 24365              	.LVL3039:
 24366              		.loc 1 11122 26 view .LVU6823
 24367 00be 54FA80F4 		uxtab	r4, r4, r0
 24368              	.LVL3040:
 24369              		.loc 1 11122 26 view .LVU6824
 24370 00c2 E6B2     		uxtb	r6, r4
 24371 00c4 64B2     		sxtb	r4, r4
 24372              	.LVL3041:
11123:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_Y_LSB_REG,
11124:Core/Src/bno055.c ****                                                            &data2_u8r,
11125:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11126:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 24373              		.loc 1 11126 17 is_stmt 1 view .LVU6825
 24374              		.loc 1 11126 20 is_stmt 0 view .LVU6826
 24375 00c6 7CB9     		cbnz	r4, .L1632
11127:Core/Src/bno055.c ****                 {
11128:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->y & BNO055_SIC_HEX_0_0_F_F_DATA));
 24376              		.loc 1 11128 21 is_stmt 1 view .LVU6827
 24377              		.loc 1 11128 50 is_stmt 0 view .LVU6828
 24378 00c8 B5F90230 		ldrsh	r3, [r5, #2]
 24379              	.LVL3042:
ARM GAS  /tmp/ccWoU29M.s 			page 676


11129:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_Y_LSB, data1_u8r)
 24380              		.loc 1 11129 21 is_stmt 1 view .LVU6829
 24381              		.loc 1 11129 31 is_stmt 0 view .LVU6830
 24382 00cc 8DF80730 		strb	r3, [sp, #7]
11130:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24383              		.loc 1 11130 21 is_stmt 1 view .LVU6831
 24384              		.loc 1 11130 41 is_stmt 0 view .LVU6832
 24385 00d0 404B     		ldr	r3, .L1641
 24386              	.LVL3043:
 24387              		.loc 1 11130 41 view .LVU6833
 24388 00d2 1868     		ldr	r0, [r3]
 24389 00d4 C468     		ldr	r4, [r0, #12]
 24390              	.LVL3044:
 24391              		.loc 1 11130 33 view .LVU6834
 24392 00d6 0123     		movs	r3, #1
 24393 00d8 0DF10702 		add	r2, sp, #7
 24394              	.LVL3045:
 24395              		.loc 1 11130 33 view .LVU6835
 24396 00dc 6321     		movs	r1, #99
 24397 00de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24398 00e0 A047     		blx	r4
 24399              	.LVL3046:
 24400              		.loc 1 11130 30 view .LVU6836
 24401 00e2 56FA80F4 		uxtab	r4, r6, r0
 24402 00e6 64B2     		sxtb	r4, r4
 24403              	.LVL3047:
 24404              	.L1632:
11131:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_Y_LSB_REG,
11132:Core/Src/bno055.c ****                                                                 &data2_u8r,
11133:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11134:Core/Src/bno055.c ****                 }
11135:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24405              		.loc 1 11135 17 is_stmt 1 view .LVU6837
 24406              		.loc 1 11135 37 is_stmt 0 view .LVU6838
 24407 00e8 3A4B     		ldr	r3, .L1641
 24408 00ea 1868     		ldr	r0, [r3]
 24409 00ec 0669     		ldr	r6, [r0, #16]
 24410              		.loc 1 11135 29 view .LVU6839
 24411 00ee 0123     		movs	r3, #1
 24412 00f0 0DF10702 		add	r2, sp, #7
 24413 00f4 6421     		movs	r1, #100
 24414 00f6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24415 00f8 B047     		blx	r6
 24416              	.LVL3048:
 24417              		.loc 1 11135 26 view .LVU6840
 24418 00fa 54FA80F4 		uxtab	r4, r4, r0
 24419              	.LVL3049:
 24420              		.loc 1 11135 26 view .LVU6841
 24421 00fe E6B2     		uxtb	r6, r4
 24422 0100 64B2     		sxtb	r4, r4
 24423              	.LVL3050:
11136:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_Y_MSB_REG,
11137:Core/Src/bno055.c ****                                                            &data2_u8r,
11138:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11139:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 24424              		.loc 1 11139 17 is_stmt 1 view .LVU6842
 24425              		.loc 1 11139 20 is_stmt 0 view .LVU6843
ARM GAS  /tmp/ccWoU29M.s 			page 677


 24426 0102 7CB9     		cbnz	r4, .L1633
11140:Core/Src/bno055.c ****                 {
11141:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->y >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0
 24427              		.loc 1 11141 21 is_stmt 1 view .LVU6844
 24428              		.loc 1 11141 34 is_stmt 0 view .LVU6845
 24429 0104 95F90330 		ldrsb	r3, [r5, #3]
 24430              	.LVL3051:
11142:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_Y_MSB, data1_u8r)
 24431              		.loc 1 11142 21 is_stmt 1 view .LVU6846
 24432              		.loc 1 11142 31 is_stmt 0 view .LVU6847
 24433 0108 8DF80730 		strb	r3, [sp, #7]
11143:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24434              		.loc 1 11143 21 is_stmt 1 view .LVU6848
 24435              		.loc 1 11143 41 is_stmt 0 view .LVU6849
 24436 010c 314B     		ldr	r3, .L1641
 24437              	.LVL3052:
 24438              		.loc 1 11143 41 view .LVU6850
 24439 010e 1868     		ldr	r0, [r3]
 24440 0110 C468     		ldr	r4, [r0, #12]
 24441              	.LVL3053:
 24442              		.loc 1 11143 33 view .LVU6851
 24443 0112 0123     		movs	r3, #1
 24444 0114 0DF10702 		add	r2, sp, #7
 24445              	.LVL3054:
 24446              		.loc 1 11143 33 view .LVU6852
 24447 0118 6421     		movs	r1, #100
 24448 011a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24449 011c A047     		blx	r4
 24450              	.LVL3055:
 24451              		.loc 1 11143 30 view .LVU6853
 24452 011e 56FA80F4 		uxtab	r4, r6, r0
 24453 0122 64B2     		sxtb	r4, r4
 24454              	.LVL3056:
 24455              	.L1633:
11144:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_Y_MSB_REG,
11145:Core/Src/bno055.c ****                                                                 &data2_u8r,
11146:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11147:Core/Src/bno055.c ****                 }
11148:Core/Src/bno055.c **** 
11149:Core/Src/bno055.c ****                 /* write gryo offset z value*/
11150:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24456              		.loc 1 11150 17 is_stmt 1 view .LVU6854
 24457              		.loc 1 11150 37 is_stmt 0 view .LVU6855
 24458 0124 2B4B     		ldr	r3, .L1641
 24459 0126 1868     		ldr	r0, [r3]
 24460 0128 0669     		ldr	r6, [r0, #16]
 24461              		.loc 1 11150 29 view .LVU6856
 24462 012a 0123     		movs	r3, #1
 24463 012c 0DF10702 		add	r2, sp, #7
 24464 0130 6521     		movs	r1, #101
 24465 0132 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24466 0134 B047     		blx	r6
 24467              	.LVL3057:
 24468              		.loc 1 11150 26 view .LVU6857
 24469 0136 54FA80F4 		uxtab	r4, r4, r0
 24470              	.LVL3058:
 24471              		.loc 1 11150 26 view .LVU6858
ARM GAS  /tmp/ccWoU29M.s 			page 678


 24472 013a E6B2     		uxtb	r6, r4
 24473 013c 64B2     		sxtb	r4, r4
 24474              	.LVL3059:
11151:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_Z_LSB_REG,
11152:Core/Src/bno055.c ****                                                            &data2_u8r,
11153:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11154:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 24475              		.loc 1 11154 17 is_stmt 1 view .LVU6859
 24476              		.loc 1 11154 20 is_stmt 0 view .LVU6860
 24477 013e 7CB9     		cbnz	r4, .L1634
11155:Core/Src/bno055.c ****                 {
11156:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->z & BNO055_SIC_HEX_0_0_F_F_DATA));
 24478              		.loc 1 11156 21 is_stmt 1 view .LVU6861
 24479              		.loc 1 11156 50 is_stmt 0 view .LVU6862
 24480 0140 B5F90430 		ldrsh	r3, [r5, #4]
 24481              	.LVL3060:
11157:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_Z_LSB, data1_u8r)
 24482              		.loc 1 11157 21 is_stmt 1 view .LVU6863
 24483              		.loc 1 11157 31 is_stmt 0 view .LVU6864
 24484 0144 8DF80730 		strb	r3, [sp, #7]
11158:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24485              		.loc 1 11158 21 is_stmt 1 view .LVU6865
 24486              		.loc 1 11158 41 is_stmt 0 view .LVU6866
 24487 0148 224B     		ldr	r3, .L1641
 24488              	.LVL3061:
 24489              		.loc 1 11158 41 view .LVU6867
 24490 014a 1868     		ldr	r0, [r3]
 24491 014c C468     		ldr	r4, [r0, #12]
 24492              	.LVL3062:
 24493              		.loc 1 11158 33 view .LVU6868
 24494 014e 0123     		movs	r3, #1
 24495 0150 0DF10702 		add	r2, sp, #7
 24496              	.LVL3063:
 24497              		.loc 1 11158 33 view .LVU6869
 24498 0154 6521     		movs	r1, #101
 24499 0156 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24500 0158 A047     		blx	r4
 24501              	.LVL3064:
 24502              		.loc 1 11158 30 view .LVU6870
 24503 015a 56FA80F4 		uxtab	r4, r6, r0
 24504 015e 64B2     		sxtb	r4, r4
 24505              	.LVL3065:
 24506              	.L1634:
11159:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_Z_LSB_REG,
11160:Core/Src/bno055.c ****                                                                 &data2_u8r,
11161:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11162:Core/Src/bno055.c ****                 }
11163:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24507              		.loc 1 11163 17 is_stmt 1 view .LVU6871
 24508              		.loc 1 11163 37 is_stmt 0 view .LVU6872
 24509 0160 1C4B     		ldr	r3, .L1641
 24510 0162 1868     		ldr	r0, [r3]
 24511 0164 0669     		ldr	r6, [r0, #16]
 24512              		.loc 1 11163 29 view .LVU6873
 24513 0166 0123     		movs	r3, #1
 24514 0168 0DF10702 		add	r2, sp, #7
 24515 016c 6621     		movs	r1, #102
ARM GAS  /tmp/ccWoU29M.s 			page 679


 24516 016e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24517 0170 B047     		blx	r6
 24518              	.LVL3066:
 24519              		.loc 1 11163 26 view .LVU6874
 24520 0172 54FA80F4 		uxtab	r4, r4, r0
 24521              	.LVL3067:
 24522              		.loc 1 11163 26 view .LVU6875
 24523 0176 E6B2     		uxtb	r6, r4
 24524 0178 64B2     		sxtb	r4, r4
 24525              	.LVL3068:
11164:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_Z_MSB_REG,
11165:Core/Src/bno055.c ****                                                            &data2_u8r,
11166:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11167:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 24526              		.loc 1 11167 17 is_stmt 1 view .LVU6876
 24527              		.loc 1 11167 20 is_stmt 0 view .LVU6877
 24528 017a C4B9     		cbnz	r4, .L1628
11168:Core/Src/bno055.c ****                 {
11169:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->z >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0
 24529              		.loc 1 11169 21 is_stmt 1 view .LVU6878
 24530              		.loc 1 11169 34 is_stmt 0 view .LVU6879
 24531 017c 95F90530 		ldrsb	r3, [r5, #5]
 24532              	.LVL3069:
11170:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_Z_MSB, data1_u8r)
 24533              		.loc 1 11170 21 is_stmt 1 view .LVU6880
 24534              		.loc 1 11170 31 is_stmt 0 view .LVU6881
 24535 0180 8DF80730 		strb	r3, [sp, #7]
11171:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24536              		.loc 1 11171 21 is_stmt 1 view .LVU6882
 24537              		.loc 1 11171 41 is_stmt 0 view .LVU6883
 24538 0184 134B     		ldr	r3, .L1641
 24539              	.LVL3070:
 24540              		.loc 1 11171 41 view .LVU6884
 24541 0186 1868     		ldr	r0, [r3]
 24542 0188 C468     		ldr	r4, [r0, #12]
 24543              	.LVL3071:
 24544              		.loc 1 11171 33 view .LVU6885
 24545 018a 0123     		movs	r3, #1
 24546 018c 0DF10702 		add	r2, sp, #7
 24547              	.LVL3072:
 24548              		.loc 1 11171 33 view .LVU6886
 24549 0190 6621     		movs	r1, #102
 24550 0192 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24551 0194 A047     		blx	r4
 24552              	.LVL3073:
 24553              		.loc 1 11171 30 view .LVU6887
 24554 0196 56FA80F4 		uxtab	r4, r6, r0
 24555 019a 64B2     		sxtb	r4, r4
 24556              	.LVL3074:
 24557              		.loc 1 11171 30 view .LVU6888
 24558 019c 07E0     		b	.L1628
 24559              	.LVL3075:
 24560              	.L1639:
11089:Core/Src/bno055.c ****             }
 24561              		.loc 1 11089 17 is_stmt 1 view .LVU6889
11089:Core/Src/bno055.c ****             }
 24562              		.loc 1 11089 28 is_stmt 0 view .LVU6890
ARM GAS  /tmp/ccWoU29M.s 			page 680


 24563 019e FFF7FEFF 		bl	bno055_set_operation_mode
 24564              	.LVL3076:
11089:Core/Src/bno055.c ****             }
 24565              		.loc 1 11089 25 view .LVU6891
 24566 01a2 54FA80F4 		uxtab	r4, r4, r0
 24567 01a6 64B2     		sxtb	r4, r4
 24568              	.LVL3077:
11089:Core/Src/bno055.c ****             }
 24569              		.loc 1 11089 25 view .LVU6892
 24570 01a8 44E7     		b	.L1629
 24571              	.LVL3078:
 24572              	.L1636:
11172:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_Z_MSB_REG,
11173:Core/Src/bno055.c ****                                                                 &data2_u8r,
11174:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11175:Core/Src/bno055.c ****                 }
11176:Core/Src/bno055.c ****             }
11177:Core/Src/bno055.c ****             else
11178:Core/Src/bno055.c ****             {
11179:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
11180:Core/Src/bno055.c ****             }
11181:Core/Src/bno055.c ****         }
11182:Core/Src/bno055.c ****         else
11183:Core/Src/bno055.c ****         {
11184:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 24573              		.loc 1 11184 22 view .LVU6893
 24574 01aa 4FF0FF34 		mov	r4, #-1
 24575              	.LVL3079:
 24576              	.L1628:
11185:Core/Src/bno055.c ****         }
11186:Core/Src/bno055.c ****     }
11187:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24577              		.loc 1 11187 5 is_stmt 1 view .LVU6894
 24578              		.loc 1 11187 24 is_stmt 0 view .LVU6895
 24579 01ae 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 24580              		.loc 1 11187 8 view .LVU6896
 24581 01b2 28B9     		cbnz	r0, .L1640
 24582              	.LVL3080:
 24583              	.L1627:
11188:Core/Src/bno055.c ****     {
11189:Core/Src/bno055.c ****         /* set the operation mode
11190:Core/Src/bno055.c ****          * of previous operation mode*/
11191:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11192:Core/Src/bno055.c ****     }
11193:Core/Src/bno055.c **** 
11194:Core/Src/bno055.c ****     return com_rslt;
11195:Core/Src/bno055.c **** }
 24584              		.loc 1 11195 1 view .LVU6897
 24585 01b4 2046     		mov	r0, r4
 24586 01b6 02B0     		add	sp, sp, #8
 24587              	.LCFI691:
 24588              		.cfi_remember_state
 24589              		.cfi_def_cfa_offset 16
 24590              		@ sp needed
 24591 01b8 70BD     		pop	{r4, r5, r6, pc}
 24592              	.LVL3081:
 24593              	.L1637:
ARM GAS  /tmp/ccWoU29M.s 			page 681


 24594              	.LCFI692:
 24595              		.cfi_restore_state
11179:Core/Src/bno055.c ****             }
 24596              		.loc 1 11179 26 view .LVU6898
 24597 01ba 4FF0FF34 		mov	r4, #-1
 24598              	.LVL3082:
11179:Core/Src/bno055.c ****             }
 24599              		.loc 1 11179 26 view .LVU6899
 24600 01be F6E7     		b	.L1628
 24601              	.LVL3083:
 24602              	.L1640:
11191:Core/Src/bno055.c ****     }
 24603              		.loc 1 11191 9 is_stmt 1 view .LVU6900
11191:Core/Src/bno055.c ****     }
 24604              		.loc 1 11191 21 is_stmt 0 view .LVU6901
 24605 01c0 FFF7FEFF 		bl	bno055_set_operation_mode
 24606              	.LVL3084:
11191:Core/Src/bno055.c ****     }
 24607              		.loc 1 11191 18 view .LVU6902
 24608 01c4 54FA80F4 		uxtab	r4, r4, r0
 24609              	.LVL3085:
11191:Core/Src/bno055.c ****     }
 24610              		.loc 1 11191 18 view .LVU6903
 24611 01c8 64B2     		sxtb	r4, r4
 24612              	.LVL3086:
11191:Core/Src/bno055.c ****     }
 24613              		.loc 1 11191 18 view .LVU6904
 24614 01ca F3E7     		b	.L1627
 24615              	.LVL3087:
 24616              	.L1635:
11077:Core/Src/bno055.c ****     }
 24617              		.loc 1 11077 16 view .LVU6905
 24618 01cc 6FF07E04 		mvn	r4, #126
 24619 01d0 F0E7     		b	.L1627
 24620              	.L1642:
 24621 01d2 00BF     		.align	2
 24622              	.L1641:
 24623 01d4 00000000 		.word	.LANCHOR0
 24624              		.cfi_endproc
 24625              	.LFE174:
 24627              		.section	.text.bno055_get_accel_range,"ax",%progbits
 24628              		.align	1
 24629              		.global	bno055_get_accel_range
 24630              		.syntax unified
 24631              		.thumb
 24632              		.thumb_func
 24633              		.fpu fpv4-sp-d16
 24635              	bno055_get_accel_range:
 24636              	.LVL3088:
 24637              	.LFB175:
11196:Core/Src/bno055.c **** 
11197:Core/Src/bno055.c **** /********************************************************/
11198:Core/Src/bno055.c **** /************** PAGE1 Functions *********************/
11199:Core/Src/bno055.c **** /********************************************************/
11200:Core/Src/bno055.c **** 
11201:Core/Src/bno055.c **** /*!
11202:Core/Src/bno055.c ****  *  @brief This API used to read the accel range
ARM GAS  /tmp/ccWoU29M.s 			page 682


11203:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 0 and 1
11204:Core/Src/bno055.c ****  *
11205:Core/Src/bno055.c ****  *  @param accel_range_u8 : The value of accel range
11206:Core/Src/bno055.c ****  *        accel_range_u8 |   result
11207:Core/Src/bno055.c ****  *       ----------------- | --------------
11208:Core/Src/bno055.c ****  *              0x00       | BNO055_ACCEL_RANGE_2G
11209:Core/Src/bno055.c ****  *              0x01       | BNO055_ACCEL_RANGE_4G
11210:Core/Src/bno055.c ****  *              0x02       | BNO055_ACCEL_RANGE_8G
11211:Core/Src/bno055.c ****  *              0x03       | BNO055_ACCEL_RANGE_16G
11212:Core/Src/bno055.c ****  *
11213:Core/Src/bno055.c ****  *  @return results of bus communication function
11214:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11215:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11216:Core/Src/bno055.c ****  *
11217:Core/Src/bno055.c ****  *
11218:Core/Src/bno055.c ****  */
11219:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_range(u8 *accel_range_u8)
11220:Core/Src/bno055.c **** {
 24638              		.loc 1 11220 1 is_stmt 1 view -0
 24639              		.cfi_startproc
 24640              		@ args = 0, pretend = 0, frame = 8
 24641              		@ frame_needed = 0, uses_anonymous_args = 0
 24642              		.loc 1 11220 1 is_stmt 0 view .LVU6907
 24643 0000 30B5     		push	{r4, r5, lr}
 24644              	.LCFI693:
 24645              		.cfi_def_cfa_offset 12
 24646              		.cfi_offset 4, -12
 24647              		.cfi_offset 5, -8
 24648              		.cfi_offset 14, -4
 24649 0002 83B0     		sub	sp, sp, #12
 24650              	.LCFI694:
 24651              		.cfi_def_cfa_offset 24
11221:Core/Src/bno055.c ****     /* Variable used to return value of
11222:Core/Src/bno055.c ****      * communication routine*/
11223:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24652              		.loc 1 11223 5 is_stmt 1 view .LVU6908
 24653              	.LVL3089:
11224:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 24654              		.loc 1 11224 5 view .LVU6909
 24655              		.loc 1 11224 8 is_stmt 0 view .LVU6910
 24656 0004 0023     		movs	r3, #0
 24657 0006 8DF80730 		strb	r3, [sp, #7]
11225:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24658              		.loc 1 11225 5 is_stmt 1 view .LVU6911
 24659              	.LVL3090:
11226:Core/Src/bno055.c **** 
11227:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11228:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24660              		.loc 1 11228 5 view .LVU6912
 24661              		.loc 1 11228 18 is_stmt 0 view .LVU6913
 24662 000a 144B     		ldr	r3, .L1651
 24663 000c 1B68     		ldr	r3, [r3]
 24664              		.loc 1 11228 8 view .LVU6914
 24665 000e F3B1     		cbz	r3, .L1647
 24666 0010 0446     		mov	r4, r0
11229:Core/Src/bno055.c ****     {
11230:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
ARM GAS  /tmp/ccWoU29M.s 			page 683


11231:Core/Src/bno055.c ****     }
11232:Core/Src/bno055.c ****     else
11233:Core/Src/bno055.c ****     {
11234:Core/Src/bno055.c ****         /*condition check for page, accel range is
11235:Core/Src/bno055.c ****          * available in the page one*/
11236:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 24667              		.loc 1 11236 9 is_stmt 1 view .LVU6915
 24668              		.loc 1 11236 21 is_stmt 0 view .LVU6916
 24669 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24670              		.loc 1 11236 12 view .LVU6917
 24671 0014 012B     		cmp	r3, #1
 24672 0016 14D1     		bne	.L1650
 24673              	.LVL3091:
 24674              	.L1645:
11237:Core/Src/bno055.c ****         {
11238:Core/Src/bno055.c ****             /* Write page as one */
11239:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11240:Core/Src/bno055.c ****         }
11241:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 24675              		.loc 1 11241 53 discriminator 1 view .LVU6918
 24676 0018 104B     		ldr	r3, .L1651
 24677 001a 1B68     		ldr	r3, [r3]
 24678 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24679              		.loc 1 11241 41 discriminator 1 view .LVU6919
 24680 001e 012B     		cmp	r3, #1
 24681 0020 18D1     		bne	.L1648
 24682              	.L1646:
11242:Core/Src/bno055.c ****         {
11243:Core/Src/bno055.c ****             /* Read the value of accel g range */
11244:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24683              		.loc 1 11244 13 is_stmt 1 view .LVU6920
 24684              		.loc 1 11244 32 is_stmt 0 view .LVU6921
 24685 0022 0E4B     		ldr	r3, .L1651
 24686 0024 1868     		ldr	r0, [r3]
 24687 0026 0569     		ldr	r5, [r0, #16]
 24688              		.loc 1 11244 24 view .LVU6922
 24689 0028 0123     		movs	r3, #1
 24690 002a 0DF10702 		add	r2, sp, #7
 24691 002e 0821     		movs	r1, #8
 24692 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24693 0032 A847     		blx	r5
 24694              	.LVL3092:
11245:Core/Src/bno055.c ****                                                       BNO055_ACCEL_RANGE_REG,
11246:Core/Src/bno055.c ****                                                       &data_u8r,
11247:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
11248:Core/Src/bno055.c ****             *accel_range_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_RANGE);
 24695              		.loc 1 11248 13 is_stmt 1 view .LVU6923
 24696              		.loc 1 11248 31 is_stmt 0 view .LVU6924
 24697 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 24698 0038 03F00303 		and	r3, r3, #3
 24699              		.loc 1 11248 29 view .LVU6925
 24700 003c 2370     		strb	r3, [r4]
 24701              	.LVL3093:
 24702              	.L1644:
11249:Core/Src/bno055.c ****         }
11250:Core/Src/bno055.c ****         else
11251:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 684


11252:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11253:Core/Src/bno055.c ****         }
11254:Core/Src/bno055.c ****     }
11255:Core/Src/bno055.c **** 
11256:Core/Src/bno055.c ****     return com_rslt;
11257:Core/Src/bno055.c **** }
 24703              		.loc 1 11257 1 view .LVU6926
 24704 003e 03B0     		add	sp, sp, #12
 24705              	.LCFI695:
 24706              		.cfi_remember_state
 24707              		.cfi_def_cfa_offset 12
 24708              		@ sp needed
 24709 0040 30BD     		pop	{r4, r5, pc}
 24710              	.LVL3094:
 24711              	.L1650:
 24712              	.LCFI696:
 24713              		.cfi_restore_state
11239:Core/Src/bno055.c ****         }
 24714              		.loc 1 11239 13 is_stmt 1 view .LVU6927
11239:Core/Src/bno055.c ****         }
 24715              		.loc 1 11239 23 is_stmt 0 view .LVU6928
 24716 0042 0120     		movs	r0, #1
 24717              	.LVL3095:
11239:Core/Src/bno055.c ****         }
 24718              		.loc 1 11239 23 view .LVU6929
 24719 0044 FFF7FEFF 		bl	bno055_write_page_id
 24720              	.LVL3096:
11241:Core/Src/bno055.c ****         {
 24721              		.loc 1 11241 9 is_stmt 1 view .LVU6930
11241:Core/Src/bno055.c ****         {
 24722              		.loc 1 11241 12 is_stmt 0 view .LVU6931
 24723 0048 0028     		cmp	r0, #0
 24724 004a EAD0     		beq	.L1646
 24725 004c E4E7     		b	.L1645
 24726              	.LVL3097:
 24727              	.L1647:
11230:Core/Src/bno055.c ****     }
 24728              		.loc 1 11230 16 view .LVU6932
 24729 004e 6FF07E00 		mvn	r0, #126
 24730              	.LVL3098:
11230:Core/Src/bno055.c ****     }
 24731              		.loc 1 11230 16 view .LVU6933
 24732 0052 F4E7     		b	.L1644
 24733              	.LVL3099:
 24734              	.L1648:
11252:Core/Src/bno055.c ****         }
 24735              		.loc 1 11252 22 view .LVU6934
 24736 0054 4FF0FF30 		mov	r0, #-1
 24737 0058 F1E7     		b	.L1644
 24738              	.L1652:
 24739 005a 00BF     		.align	2
 24740              	.L1651:
 24741 005c 00000000 		.word	.LANCHOR0
 24742              		.cfi_endproc
 24743              	.LFE175:
 24745              		.section	.text.bno055_set_accel_range,"ax",%progbits
 24746              		.align	1
ARM GAS  /tmp/ccWoU29M.s 			page 685


 24747              		.global	bno055_set_accel_range
 24748              		.syntax unified
 24749              		.thumb
 24750              		.thumb_func
 24751              		.fpu fpv4-sp-d16
 24753              	bno055_set_accel_range:
 24754              	.LVL3100:
 24755              	.LFB176:
11258:Core/Src/bno055.c **** 
11259:Core/Src/bno055.c **** /*!
11260:Core/Src/bno055.c ****  *  @brief This API used to write the accel range
11261:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 0 and 1
11262:Core/Src/bno055.c ****  *
11263:Core/Src/bno055.c ****  *  @param accel_range_u8 : The value of accel range
11264:Core/Src/bno055.c ****  *
11265:Core/Src/bno055.c ****  *        accel_range_u8 |   result
11266:Core/Src/bno055.c ****  *       ----------------- | --------------
11267:Core/Src/bno055.c ****  *              0x00       | BNO055_ACCEL_RANGE_2G
11268:Core/Src/bno055.c ****  *              0x01       | BNO055_ACCEL_RANGE_4G
11269:Core/Src/bno055.c ****  *              0x02       | BNO055_ACCEL_RANGE_8G
11270:Core/Src/bno055.c ****  *              0x03       | BNO055_ACCEL_RANGE_16G
11271:Core/Src/bno055.c ****  *
11272:Core/Src/bno055.c ****  *  @return results of bus communication function
11273:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11274:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11275:Core/Src/bno055.c ****  *
11276:Core/Src/bno055.c ****  *
11277:Core/Src/bno055.c ****  */
11278:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_range(u8 accel_range_u8)
11279:Core/Src/bno055.c **** {
 24756              		.loc 1 11279 1 is_stmt 1 view -0
 24757              		.cfi_startproc
 24758              		@ args = 0, pretend = 0, frame = 8
 24759              		@ frame_needed = 0, uses_anonymous_args = 0
 24760              		.loc 1 11279 1 is_stmt 0 view .LVU6936
 24761 0000 30B5     		push	{r4, r5, lr}
 24762              	.LCFI697:
 24763              		.cfi_def_cfa_offset 12
 24764              		.cfi_offset 4, -12
 24765              		.cfi_offset 5, -8
 24766              		.cfi_offset 14, -4
 24767 0002 83B0     		sub	sp, sp, #12
 24768              	.LCFI698:
 24769              		.cfi_def_cfa_offset 24
11280:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24770              		.loc 1 11280 5 is_stmt 1 view .LVU6937
 24771              	.LVL3101:
11281:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 24772              		.loc 1 11281 5 view .LVU6938
 24773              		.loc 1 11281 8 is_stmt 0 view .LVU6939
 24774 0004 0023     		movs	r3, #0
 24775 0006 8DF80730 		strb	r3, [sp, #7]
11282:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24776              		.loc 1 11282 5 is_stmt 1 view .LVU6940
 24777              	.LVL3102:
11283:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 24778              		.loc 1 11283 5 view .LVU6941
ARM GAS  /tmp/ccWoU29M.s 			page 686


 24779              		.loc 1 11283 8 is_stmt 0 view .LVU6942
 24780 000a 8DF80630 		strb	r3, [sp, #6]
11284:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 24781              		.loc 1 11284 5 is_stmt 1 view .LVU6943
 24782              	.LVL3103:
11285:Core/Src/bno055.c **** 
11286:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11287:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24783              		.loc 1 11287 5 view .LVU6944
 24784              		.loc 1 11287 18 is_stmt 0 view .LVU6945
 24785 000e 2C4B     		ldr	r3, .L1666
 24786 0010 1B68     		ldr	r3, [r3]
 24787              		.loc 1 11287 8 view .LVU6946
 24788 0012 002B     		cmp	r3, #0
 24789 0014 50D0     		beq	.L1657
 24790 0016 0546     		mov	r5, r0
11288:Core/Src/bno055.c ****     {
11289:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11290:Core/Src/bno055.c ****     }
11291:Core/Src/bno055.c ****     else
11292:Core/Src/bno055.c ****     {
11293:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11294:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11295:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11296:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 24791              		.loc 1 11296 9 is_stmt 1 view .LVU6947
 24792              		.loc 1 11296 19 is_stmt 0 view .LVU6948
 24793 0018 0DF10600 		add	r0, sp, #6
 24794              	.LVL3104:
 24795              		.loc 1 11296 19 view .LVU6949
 24796 001c FFF7FEFF 		bl	bno055_get_operation_mode
 24797              	.LVL3105:
11297:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 24798              		.loc 1 11297 9 is_stmt 1 view .LVU6950
 24799              		.loc 1 11297 12 is_stmt 0 view .LVU6951
 24800 0020 0446     		mov	r4, r0
 24801 0022 0028     		cmp	r0, #0
 24802 0024 34D1     		bne	.L1658
11298:Core/Src/bno055.c ****         {
11299:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24803              		.loc 1 11299 13 is_stmt 1 view .LVU6952
 24804              		.loc 1 11299 32 is_stmt 0 view .LVU6953
 24805 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 24806              		.loc 1 11299 16 view .LVU6954
 24807 002a 1BB9     		cbnz	r3, .L1663
 24808              	.LVL3106:
 24809              	.L1656:
11300:Core/Src/bno055.c ****             {
11301:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11302:Core/Src/bno055.c ****             }
11303:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 24810              		.loc 1 11303 13 is_stmt 1 view .LVU6955
 24811              		.loc 1 11303 16 is_stmt 0 view .LVU6956
 24812 002c 44B1     		cbz	r4, .L1664
11304:Core/Src/bno055.c ****             {
11305:Core/Src/bno055.c ****                 /* Write page as one */
11306:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
ARM GAS  /tmp/ccWoU29M.s 			page 687


11307:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11308:Core/Src/bno055.c ****                 {
11309:Core/Src/bno055.c ****                     if (accel_range_u8 < BNO055_ACCEL_RANGE)
11310:Core/Src/bno055.c ****                     {
11311:Core/Src/bno055.c ****                         /* Write the value of accel range*/
11312:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11313:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
11314:Core/Src/bno055.c ****                                                                   &data_u8r,
11315:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11316:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11317:Core/Src/bno055.c ****                         {
11318:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_RANGE, accel_rang
11319:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11320:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
11321:Core/Src/bno055.c ****                                                                         &data_u8r,
11322:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11323:Core/Src/bno055.c ****                         }
11324:Core/Src/bno055.c ****                     }
11325:Core/Src/bno055.c ****                     else
11326:Core/Src/bno055.c ****                     {
11327:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11328:Core/Src/bno055.c ****                     }
11329:Core/Src/bno055.c ****                 }
11330:Core/Src/bno055.c ****                 else
11331:Core/Src/bno055.c ****                 {
11332:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11333:Core/Src/bno055.c ****                 }
11334:Core/Src/bno055.c ****             }
11335:Core/Src/bno055.c ****             else
11336:Core/Src/bno055.c ****             {
11337:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 24813              		.loc 1 11337 26 view .LVU6957
 24814 002e 4FF0FF34 		mov	r4, #-1
 24815              	.LVL3107:
 24816              		.loc 1 11337 26 view .LVU6958
 24817 0032 2FE0     		b	.L1655
 24818              	.LVL3108:
 24819              	.L1663:
11301:Core/Src/bno055.c ****             }
 24820              		.loc 1 11301 17 is_stmt 1 view .LVU6959
11301:Core/Src/bno055.c ****             }
 24821              		.loc 1 11301 28 is_stmt 0 view .LVU6960
 24822 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 24823              	.LVL3109:
11301:Core/Src/bno055.c ****             }
 24824              		.loc 1 11301 25 view .LVU6961
 24825 0038 54FA80F4 		uxtab	r4, r4, r0
 24826 003c 64B2     		sxtb	r4, r4
 24827              	.LVL3110:
11301:Core/Src/bno055.c ****             }
 24828              		.loc 1 11301 25 view .LVU6962
 24829 003e F5E7     		b	.L1656
 24830              	.L1664:
11306:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 24831              		.loc 1 11306 17 is_stmt 1 view .LVU6963
11306:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 24832              		.loc 1 11306 30 is_stmt 0 view .LVU6964
ARM GAS  /tmp/ccWoU29M.s 			page 688


 24833 0040 0120     		movs	r0, #1
 24834 0042 FFF7FEFF 		bl	bno055_write_page_id
 24835              	.LVL3111:
11307:Core/Src/bno055.c ****                 {
 24836              		.loc 1 11307 17 is_stmt 1 view .LVU6965
11307:Core/Src/bno055.c ****                 {
 24837              		.loc 1 11307 20 is_stmt 0 view .LVU6966
 24838 0046 58BB     		cbnz	r0, .L1660
11309:Core/Src/bno055.c ****                     {
 24839              		.loc 1 11309 21 is_stmt 1 view .LVU6967
11309:Core/Src/bno055.c ****                     {
 24840              		.loc 1 11309 24 is_stmt 0 view .LVU6968
 24841 0048 042D     		cmp	r5, #4
 24842 004a 2CD8     		bhi	.L1661
11312:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
 24843              		.loc 1 11312 25 is_stmt 1 view .LVU6969
11312:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
 24844              		.loc 1 11312 44 is_stmt 0 view .LVU6970
 24845 004c 1C4B     		ldr	r3, .L1666
 24846 004e 1868     		ldr	r0, [r3]
 24847              	.LVL3112:
11312:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
 24848              		.loc 1 11312 44 view .LVU6971
 24849 0050 0469     		ldr	r4, [r0, #16]
 24850              	.LVL3113:
11312:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
 24851              		.loc 1 11312 36 view .LVU6972
 24852 0052 0123     		movs	r3, #1
 24853 0054 0DF10702 		add	r2, sp, #7
 24854 0058 0821     		movs	r1, #8
 24855 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24856 005c A047     		blx	r4
 24857              	.LVL3114:
11316:Core/Src/bno055.c ****                         {
 24858              		.loc 1 11316 25 is_stmt 1 view .LVU6973
11316:Core/Src/bno055.c ****                         {
 24859              		.loc 1 11316 28 is_stmt 0 view .LVU6974
 24860 005e 0446     		mov	r4, r0
 24861 0060 C0B9     		cbnz	r0, .L1655
11318:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24862              		.loc 1 11318 29 is_stmt 1 view .LVU6975
11318:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24863              		.loc 1 11318 40 is_stmt 0 view .LVU6976
 24864 0062 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 24865              	.LVL3115:
11318:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24866              		.loc 1 11318 40 view .LVU6977
 24867 0066 20F00300 		bic	r0, r0, #3
 24868 006a 43B2     		sxtb	r3, r0
 24869 006c 05F00300 		and	r0, r5, #3
 24870 0070 1843     		orrs	r0, r0, r3
11318:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24871              		.loc 1 11318 38 view .LVU6978
 24872 0072 8DF80700 		strb	r0, [sp, #7]
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
 24873              		.loc 1 11319 29 is_stmt 1 view .LVU6979
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
ARM GAS  /tmp/ccWoU29M.s 			page 689


 24874              		.loc 1 11319 49 is_stmt 0 view .LVU6980
 24875 0076 124B     		ldr	r3, .L1666
 24876 0078 1868     		ldr	r0, [r3]
 24877 007a C568     		ldr	r5, [r0, #12]
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
 24878              		.loc 1 11319 41 view .LVU6981
 24879 007c 0123     		movs	r3, #1
 24880 007e 0DF10702 		add	r2, sp, #7
 24881 0082 0821     		movs	r1, #8
 24882 0084 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24883 0086 A847     		blx	r5
 24884              	.LVL3116:
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
 24885              		.loc 1 11319 38 view .LVU6982
 24886 0088 54FA80F4 		uxtab	r4, r4, r0
 24887 008c 64B2     		sxtb	r4, r4
 24888              	.LVL3117:
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
 24889              		.loc 1 11319 38 view .LVU6983
 24890 008e 01E0     		b	.L1655
 24891              	.LVL3118:
 24892              	.L1658:
11338:Core/Src/bno055.c ****             }
11339:Core/Src/bno055.c ****         }
11340:Core/Src/bno055.c ****         else
11341:Core/Src/bno055.c ****         {
11342:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 24893              		.loc 1 11342 22 view .LVU6984
 24894 0090 4FF0FF34 		mov	r4, #-1
 24895              	.LVL3119:
 24896              	.L1655:
11343:Core/Src/bno055.c ****         }
11344:Core/Src/bno055.c ****     }
11345:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24897              		.loc 1 11345 5 is_stmt 1 view .LVU6985
 24898              		.loc 1 11345 24 is_stmt 0 view .LVU6986
 24899 0094 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 24900              		.loc 1 11345 8 view .LVU6987
 24901 0098 40B9     		cbnz	r0, .L1665
 24902              	.LVL3120:
 24903              	.L1654:
11346:Core/Src/bno055.c ****     {
11347:Core/Src/bno055.c ****         /* set the operation mode of
11348:Core/Src/bno055.c ****          * previous operation mode*/
11349:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11350:Core/Src/bno055.c ****     }
11351:Core/Src/bno055.c **** 
11352:Core/Src/bno055.c ****     return com_rslt;
11353:Core/Src/bno055.c **** }
 24904              		.loc 1 11353 1 view .LVU6988
 24905 009a 2046     		mov	r0, r4
 24906 009c 03B0     		add	sp, sp, #12
 24907              	.LCFI699:
 24908              		.cfi_remember_state
 24909              		.cfi_def_cfa_offset 12
 24910              		@ sp needed
 24911 009e 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccWoU29M.s 			page 690


 24912              	.LVL3121:
 24913              	.L1660:
 24914              	.LCFI700:
 24915              		.cfi_restore_state
11332:Core/Src/bno055.c ****                 }
 24916              		.loc 1 11332 30 view .LVU6989
 24917 00a0 4FF0FF34 		mov	r4, #-1
 24918              	.LVL3122:
11332:Core/Src/bno055.c ****                 }
 24919              		.loc 1 11332 30 view .LVU6990
 24920 00a4 F6E7     		b	.L1655
 24921              	.LVL3123:
 24922              	.L1661:
11327:Core/Src/bno055.c ****                     }
 24923              		.loc 1 11327 34 view .LVU6991
 24924 00a6 6FF00104 		mvn	r4, #1
 24925              	.LVL3124:
11327:Core/Src/bno055.c ****                     }
 24926              		.loc 1 11327 34 view .LVU6992
 24927 00aa F3E7     		b	.L1655
 24928              	.LVL3125:
 24929              	.L1665:
11349:Core/Src/bno055.c ****     }
 24930              		.loc 1 11349 9 is_stmt 1 view .LVU6993
11349:Core/Src/bno055.c ****     }
 24931              		.loc 1 11349 21 is_stmt 0 view .LVU6994
 24932 00ac FFF7FEFF 		bl	bno055_set_operation_mode
 24933              	.LVL3126:
11349:Core/Src/bno055.c ****     }
 24934              		.loc 1 11349 18 view .LVU6995
 24935 00b0 54FA80F4 		uxtab	r4, r4, r0
 24936              	.LVL3127:
11349:Core/Src/bno055.c ****     }
 24937              		.loc 1 11349 18 view .LVU6996
 24938 00b4 64B2     		sxtb	r4, r4
 24939              	.LVL3128:
11349:Core/Src/bno055.c ****     }
 24940              		.loc 1 11349 18 view .LVU6997
 24941 00b6 F0E7     		b	.L1654
 24942              	.LVL3129:
 24943              	.L1657:
11289:Core/Src/bno055.c ****     }
 24944              		.loc 1 11289 16 view .LVU6998
 24945 00b8 6FF07E04 		mvn	r4, #126
 24946 00bc EDE7     		b	.L1654
 24947              	.L1667:
 24948 00be 00BF     		.align	2
 24949              	.L1666:
 24950 00c0 00000000 		.word	.LANCHOR0
 24951              		.cfi_endproc
 24952              	.LFE176:
 24954              		.section	.text.bno055_get_accel_bw,"ax",%progbits
 24955              		.align	1
 24956              		.global	bno055_get_accel_bw
 24957              		.syntax unified
 24958              		.thumb
 24959              		.thumb_func
ARM GAS  /tmp/ccWoU29M.s 			page 691


 24960              		.fpu fpv4-sp-d16
 24962              	bno055_get_accel_bw:
 24963              	.LVL3130:
 24964              	.LFB177:
11354:Core/Src/bno055.c **** 
11355:Core/Src/bno055.c **** /*!
11356:Core/Src/bno055.c ****  *  @brief This API used to read the accel bandwidth
11357:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 2 to 4
11358:Core/Src/bno055.c ****  *
11359:Core/Src/bno055.c ****  *  @param accel_bw_u8 : The value of accel bandwidth
11360:Core/Src/bno055.c ****  *
11361:Core/Src/bno055.c ****  *           accel_bw_u8 |     result
11362:Core/Src/bno055.c ****  *       ----------------- | ---------------
11363:Core/Src/bno055.c ****  *              0x00       | BNO055_ACCEL_BW_7_81HZ
11364:Core/Src/bno055.c ****  *              0x01       | BNO055_ACCEL_BW_15_63HZ
11365:Core/Src/bno055.c ****  *              0x02       | BNO055_ACCEL_BW_31_25HZ
11366:Core/Src/bno055.c ****  *              0x03       | BNO055_ACCEL_BW_62_5HZ
11367:Core/Src/bno055.c ****  *              0x04       | BNO055_ACCEL_BW_125HZ
11368:Core/Src/bno055.c ****  *              0x05       | BNO055_ACCEL_BW_250HZ
11369:Core/Src/bno055.c ****  *              0x06       | BNO055_ACCEL_BW_500HZ
11370:Core/Src/bno055.c ****  *              0x07       | BNO055_ACCEL_BW_1000HZ
11371:Core/Src/bno055.c ****  *
11372:Core/Src/bno055.c ****  *  @return results of bus communication function
11373:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11374:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11375:Core/Src/bno055.c ****  *
11376:Core/Src/bno055.c ****  *
11377:Core/Src/bno055.c ****  */
11378:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_bw(u8 *accel_bw_u8)
11379:Core/Src/bno055.c **** {
 24965              		.loc 1 11379 1 is_stmt 1 view -0
 24966              		.cfi_startproc
 24967              		@ args = 0, pretend = 0, frame = 8
 24968              		@ frame_needed = 0, uses_anonymous_args = 0
 24969              		.loc 1 11379 1 is_stmt 0 view .LVU7000
 24970 0000 30B5     		push	{r4, r5, lr}
 24971              	.LCFI701:
 24972              		.cfi_def_cfa_offset 12
 24973              		.cfi_offset 4, -12
 24974              		.cfi_offset 5, -8
 24975              		.cfi_offset 14, -4
 24976 0002 83B0     		sub	sp, sp, #12
 24977              	.LCFI702:
 24978              		.cfi_def_cfa_offset 24
11380:Core/Src/bno055.c ****     /* Variable used to return value of
11381:Core/Src/bno055.c ****      * communication routine*/
11382:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24979              		.loc 1 11382 5 is_stmt 1 view .LVU7001
 24980              	.LVL3131:
11383:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 24981              		.loc 1 11383 5 view .LVU7002
 24982              		.loc 1 11383 8 is_stmt 0 view .LVU7003
 24983 0004 0023     		movs	r3, #0
 24984 0006 8DF80730 		strb	r3, [sp, #7]
11384:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24985              		.loc 1 11384 5 is_stmt 1 view .LVU7004
 24986              	.LVL3132:
ARM GAS  /tmp/ccWoU29M.s 			page 692


11385:Core/Src/bno055.c **** 
11386:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11387:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24987              		.loc 1 11387 5 view .LVU7005
 24988              		.loc 1 11387 18 is_stmt 0 view .LVU7006
 24989 000a 144B     		ldr	r3, .L1676
 24990 000c 1B68     		ldr	r3, [r3]
 24991              		.loc 1 11387 8 view .LVU7007
 24992 000e F3B1     		cbz	r3, .L1672
 24993 0010 0446     		mov	r4, r0
11388:Core/Src/bno055.c ****     {
11389:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11390:Core/Src/bno055.c ****     }
11391:Core/Src/bno055.c ****     else
11392:Core/Src/bno055.c ****     {
11393:Core/Src/bno055.c ****         /*condition check for page, accel bandwidth is
11394:Core/Src/bno055.c ****          * available in the page one*/
11395:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 24994              		.loc 1 11395 9 is_stmt 1 view .LVU7008
 24995              		.loc 1 11395 21 is_stmt 0 view .LVU7009
 24996 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24997              		.loc 1 11395 12 view .LVU7010
 24998 0014 012B     		cmp	r3, #1
 24999 0016 14D1     		bne	.L1675
 25000              	.LVL3133:
 25001              	.L1670:
11396:Core/Src/bno055.c ****         {
11397:Core/Src/bno055.c ****             /* Write page as one */
11398:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11399:Core/Src/bno055.c ****         }
11400:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 25002              		.loc 1 11400 53 discriminator 1 view .LVU7011
 25003 0018 104B     		ldr	r3, .L1676
 25004 001a 1B68     		ldr	r3, [r3]
 25005 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25006              		.loc 1 11400 41 discriminator 1 view .LVU7012
 25007 001e 012B     		cmp	r3, #1
 25008 0020 18D1     		bne	.L1673
 25009              	.L1671:
11401:Core/Src/bno055.c ****         {
11402:Core/Src/bno055.c ****             /* Read the value of accel bandwidth */
11403:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 25010              		.loc 1 11403 13 is_stmt 1 view .LVU7013
 25011              		.loc 1 11403 32 is_stmt 0 view .LVU7014
 25012 0022 0E4B     		ldr	r3, .L1676
 25013 0024 1868     		ldr	r0, [r3]
 25014 0026 0569     		ldr	r5, [r0, #16]
 25015              		.loc 1 11403 24 view .LVU7015
 25016 0028 0123     		movs	r3, #1
 25017 002a 0DF10702 		add	r2, sp, #7
 25018 002e 0821     		movs	r1, #8
 25019 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25020 0032 A847     		blx	r5
 25021              	.LVL3134:
11404:Core/Src/bno055.c ****                                                       BNO055_ACCEL_BW_REG,
11405:Core/Src/bno055.c ****                                                       &data_u8r,
11406:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/ccWoU29M.s 			page 693


11407:Core/Src/bno055.c ****             *accel_bw_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_BW);
 25022              		.loc 1 11407 13 is_stmt 1 view .LVU7016
 25023              		.loc 1 11407 28 is_stmt 0 view .LVU7017
 25024 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 25025 0038 C3F38203 		ubfx	r3, r3, #2, #3
 25026              		.loc 1 11407 26 view .LVU7018
 25027 003c 2370     		strb	r3, [r4]
 25028              	.LVL3135:
 25029              	.L1669:
11408:Core/Src/bno055.c ****         }
11409:Core/Src/bno055.c ****         else
11410:Core/Src/bno055.c ****         {
11411:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11412:Core/Src/bno055.c ****         }
11413:Core/Src/bno055.c ****     }
11414:Core/Src/bno055.c **** 
11415:Core/Src/bno055.c ****     return com_rslt;
11416:Core/Src/bno055.c **** }
 25030              		.loc 1 11416 1 view .LVU7019
 25031 003e 03B0     		add	sp, sp, #12
 25032              	.LCFI703:
 25033              		.cfi_remember_state
 25034              		.cfi_def_cfa_offset 12
 25035              		@ sp needed
 25036 0040 30BD     		pop	{r4, r5, pc}
 25037              	.LVL3136:
 25038              	.L1675:
 25039              	.LCFI704:
 25040              		.cfi_restore_state
11398:Core/Src/bno055.c ****         }
 25041              		.loc 1 11398 13 is_stmt 1 view .LVU7020
11398:Core/Src/bno055.c ****         }
 25042              		.loc 1 11398 23 is_stmt 0 view .LVU7021
 25043 0042 0120     		movs	r0, #1
 25044              	.LVL3137:
11398:Core/Src/bno055.c ****         }
 25045              		.loc 1 11398 23 view .LVU7022
 25046 0044 FFF7FEFF 		bl	bno055_write_page_id
 25047              	.LVL3138:
11400:Core/Src/bno055.c ****         {
 25048              		.loc 1 11400 9 is_stmt 1 view .LVU7023
11400:Core/Src/bno055.c ****         {
 25049              		.loc 1 11400 12 is_stmt 0 view .LVU7024
 25050 0048 0028     		cmp	r0, #0
 25051 004a EAD0     		beq	.L1671
 25052 004c E4E7     		b	.L1670
 25053              	.LVL3139:
 25054              	.L1672:
11389:Core/Src/bno055.c ****     }
 25055              		.loc 1 11389 16 view .LVU7025
 25056 004e 6FF07E00 		mvn	r0, #126
 25057              	.LVL3140:
11389:Core/Src/bno055.c ****     }
 25058              		.loc 1 11389 16 view .LVU7026
 25059 0052 F4E7     		b	.L1669
 25060              	.LVL3141:
 25061              	.L1673:
ARM GAS  /tmp/ccWoU29M.s 			page 694


11411:Core/Src/bno055.c ****         }
 25062              		.loc 1 11411 22 view .LVU7027
 25063 0054 4FF0FF30 		mov	r0, #-1
 25064 0058 F1E7     		b	.L1669
 25065              	.L1677:
 25066 005a 00BF     		.align	2
 25067              	.L1676:
 25068 005c 00000000 		.word	.LANCHOR0
 25069              		.cfi_endproc
 25070              	.LFE177:
 25072              		.section	.text.bno055_set_accel_bw,"ax",%progbits
 25073              		.align	1
 25074              		.global	bno055_set_accel_bw
 25075              		.syntax unified
 25076              		.thumb
 25077              		.thumb_func
 25078              		.fpu fpv4-sp-d16
 25080              	bno055_set_accel_bw:
 25081              	.LVL3142:
 25082              	.LFB178:
11417:Core/Src/bno055.c **** 
11418:Core/Src/bno055.c **** /*!
11419:Core/Src/bno055.c ****  *  @brief This API used to write the accel bandwidth
11420:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 2 to 4
11421:Core/Src/bno055.c ****  *
11422:Core/Src/bno055.c ****  *  @param accel_bw_u8 : The value of accel bandwidth
11423:Core/Src/bno055.c ****  *
11424:Core/Src/bno055.c ****  *           accel_bw_u8 |     result
11425:Core/Src/bno055.c ****  *       ----------------- | ---------------
11426:Core/Src/bno055.c ****  *              0x00       | BNO055_ACCEL_BW_7_81HZ
11427:Core/Src/bno055.c ****  *              0x01       | BNO055_ACCEL_BW_15_63HZ
11428:Core/Src/bno055.c ****  *              0x02       | BNO055_ACCEL_BW_31_25HZ
11429:Core/Src/bno055.c ****  *              0x03       | BNO055_ACCEL_BW_62_5HZ
11430:Core/Src/bno055.c ****  *              0x04       | BNO055_ACCEL_BW_125HZ
11431:Core/Src/bno055.c ****  *              0x05       | BNO055_ACCEL_BW_250HZ
11432:Core/Src/bno055.c ****  *              0x06       | BNO055_ACCEL_BW_500HZ
11433:Core/Src/bno055.c ****  *              0x07       | BNO055_ACCEL_BW_1000HZ
11434:Core/Src/bno055.c ****  *
11435:Core/Src/bno055.c ****  *  @return results of bus communication function
11436:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11437:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11438:Core/Src/bno055.c ****  *
11439:Core/Src/bno055.c ****  *
11440:Core/Src/bno055.c ****  */
11441:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_bw(u8 accel_bw_u8)
11442:Core/Src/bno055.c **** {
 25083              		.loc 1 11442 1 is_stmt 1 view -0
 25084              		.cfi_startproc
 25085              		@ args = 0, pretend = 0, frame = 8
 25086              		@ frame_needed = 0, uses_anonymous_args = 0
 25087              		.loc 1 11442 1 is_stmt 0 view .LVU7029
 25088 0000 30B5     		push	{r4, r5, lr}
 25089              	.LCFI705:
 25090              		.cfi_def_cfa_offset 12
 25091              		.cfi_offset 4, -12
 25092              		.cfi_offset 5, -8
 25093              		.cfi_offset 14, -4
ARM GAS  /tmp/ccWoU29M.s 			page 695


 25094 0002 83B0     		sub	sp, sp, #12
 25095              	.LCFI706:
 25096              		.cfi_def_cfa_offset 24
11443:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25097              		.loc 1 11443 5 is_stmt 1 view .LVU7030
 25098              	.LVL3143:
11444:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25099              		.loc 1 11444 5 view .LVU7031
 25100              		.loc 1 11444 8 is_stmt 0 view .LVU7032
 25101 0004 0023     		movs	r3, #0
 25102 0006 8DF80730 		strb	r3, [sp, #7]
11445:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25103              		.loc 1 11445 5 is_stmt 1 view .LVU7033
 25104              	.LVL3144:
11446:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 25105              		.loc 1 11446 5 view .LVU7034
 25106              		.loc 1 11446 8 is_stmt 0 view .LVU7035
 25107 000a 8DF80630 		strb	r3, [sp, #6]
11447:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 25108              		.loc 1 11447 5 is_stmt 1 view .LVU7036
 25109              	.LVL3145:
11448:Core/Src/bno055.c **** 
11449:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11450:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25110              		.loc 1 11450 5 view .LVU7037
 25111              		.loc 1 11450 18 is_stmt 0 view .LVU7038
 25112 000e 2C4B     		ldr	r3, .L1691
 25113 0010 1B68     		ldr	r3, [r3]
 25114              		.loc 1 11450 8 view .LVU7039
 25115 0012 002B     		cmp	r3, #0
 25116 0014 51D0     		beq	.L1682
 25117 0016 0546     		mov	r5, r0
11451:Core/Src/bno055.c ****     {
11452:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11453:Core/Src/bno055.c ****     }
11454:Core/Src/bno055.c ****     else
11455:Core/Src/bno055.c ****     {
11456:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11457:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11458:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11459:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 25118              		.loc 1 11459 9 is_stmt 1 view .LVU7040
 25119              		.loc 1 11459 19 is_stmt 0 view .LVU7041
 25120 0018 0DF10600 		add	r0, sp, #6
 25121              	.LVL3146:
 25122              		.loc 1 11459 19 view .LVU7042
 25123 001c FFF7FEFF 		bl	bno055_get_operation_mode
 25124              	.LVL3147:
11460:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 25125              		.loc 1 11460 9 is_stmt 1 view .LVU7043
 25126              		.loc 1 11460 12 is_stmt 0 view .LVU7044
 25127 0020 0446     		mov	r4, r0
 25128 0022 0028     		cmp	r0, #0
 25129 0024 35D1     		bne	.L1683
11461:Core/Src/bno055.c ****         {
11462:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25130              		.loc 1 11462 13 is_stmt 1 view .LVU7045
ARM GAS  /tmp/ccWoU29M.s 			page 696


 25131              		.loc 1 11462 32 is_stmt 0 view .LVU7046
 25132 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 25133              		.loc 1 11462 16 view .LVU7047
 25134 002a 1BB9     		cbnz	r3, .L1688
 25135              	.LVL3148:
 25136              	.L1681:
11463:Core/Src/bno055.c ****             {
11464:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11465:Core/Src/bno055.c ****             }
11466:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 25137              		.loc 1 11466 13 is_stmt 1 view .LVU7048
 25138              		.loc 1 11466 16 is_stmt 0 view .LVU7049
 25139 002c 44B1     		cbz	r4, .L1689
11467:Core/Src/bno055.c ****             {
11468:Core/Src/bno055.c ****                 /* Write page as one */
11469:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11470:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11471:Core/Src/bno055.c ****                 {
11472:Core/Src/bno055.c ****                     if (accel_bw_u8 < BNO055_ACCEL_GYRO_BW_RANGE)
11473:Core/Src/bno055.c ****                     {
11474:Core/Src/bno055.c ****                         /* Write the accel */
11475:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11476:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
11477:Core/Src/bno055.c ****                                                                   &data_u8r,
11478:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11479:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11480:Core/Src/bno055.c ****                         {
11481:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_BW, accel_bw_u8);
11482:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11483:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
11484:Core/Src/bno055.c ****                                                                         &data_u8r,
11485:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11486:Core/Src/bno055.c ****                         }
11487:Core/Src/bno055.c ****                     }
11488:Core/Src/bno055.c ****                     else
11489:Core/Src/bno055.c ****                     {
11490:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11491:Core/Src/bno055.c ****                     }
11492:Core/Src/bno055.c ****                 }
11493:Core/Src/bno055.c ****                 else
11494:Core/Src/bno055.c ****                 {
11495:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11496:Core/Src/bno055.c ****                 }
11497:Core/Src/bno055.c ****             }
11498:Core/Src/bno055.c ****             else
11499:Core/Src/bno055.c ****             {
11500:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 25140              		.loc 1 11500 26 view .LVU7050
 25141 002e 4FF0FF34 		mov	r4, #-1
 25142              	.LVL3149:
 25143              		.loc 1 11500 26 view .LVU7051
 25144 0032 30E0     		b	.L1680
 25145              	.LVL3150:
 25146              	.L1688:
11464:Core/Src/bno055.c ****             }
 25147              		.loc 1 11464 17 is_stmt 1 view .LVU7052
11464:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccWoU29M.s 			page 697


 25148              		.loc 1 11464 28 is_stmt 0 view .LVU7053
 25149 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 25150              	.LVL3151:
11464:Core/Src/bno055.c ****             }
 25151              		.loc 1 11464 25 view .LVU7054
 25152 0038 54FA80F4 		uxtab	r4, r4, r0
 25153 003c 64B2     		sxtb	r4, r4
 25154              	.LVL3152:
11464:Core/Src/bno055.c ****             }
 25155              		.loc 1 11464 25 view .LVU7055
 25156 003e F5E7     		b	.L1681
 25157              	.L1689:
11469:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25158              		.loc 1 11469 17 is_stmt 1 view .LVU7056
11469:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25159              		.loc 1 11469 30 is_stmt 0 view .LVU7057
 25160 0040 0120     		movs	r0, #1
 25161 0042 FFF7FEFF 		bl	bno055_write_page_id
 25162              	.LVL3153:
11470:Core/Src/bno055.c ****                 {
 25163              		.loc 1 11470 17 is_stmt 1 view .LVU7058
11470:Core/Src/bno055.c ****                 {
 25164              		.loc 1 11470 20 is_stmt 0 view .LVU7059
 25165 0046 60BB     		cbnz	r0, .L1685
11472:Core/Src/bno055.c ****                     {
 25166              		.loc 1 11472 21 is_stmt 1 view .LVU7060
11472:Core/Src/bno055.c ****                     {
 25167              		.loc 1 11472 24 is_stmt 0 view .LVU7061
 25168 0048 072D     		cmp	r5, #7
 25169 004a 2DD8     		bhi	.L1686
11475:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
 25170              		.loc 1 11475 25 is_stmt 1 view .LVU7062
11475:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
 25171              		.loc 1 11475 44 is_stmt 0 view .LVU7063
 25172 004c 1C4B     		ldr	r3, .L1691
 25173 004e 1868     		ldr	r0, [r3]
 25174              	.LVL3154:
11475:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
 25175              		.loc 1 11475 44 view .LVU7064
 25176 0050 0469     		ldr	r4, [r0, #16]
 25177              	.LVL3155:
11475:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
 25178              		.loc 1 11475 36 view .LVU7065
 25179 0052 0123     		movs	r3, #1
 25180 0054 0DF10702 		add	r2, sp, #7
 25181 0058 0821     		movs	r1, #8
 25182 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25183 005c A047     		blx	r4
 25184              	.LVL3156:
11479:Core/Src/bno055.c ****                         {
 25185              		.loc 1 11479 25 is_stmt 1 view .LVU7066
11479:Core/Src/bno055.c ****                         {
 25186              		.loc 1 11479 28 is_stmt 0 view .LVU7067
 25187 005e 0446     		mov	r4, r0
 25188 0060 C8B9     		cbnz	r0, .L1680
11481:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25189              		.loc 1 11481 29 is_stmt 1 view .LVU7068
ARM GAS  /tmp/ccWoU29M.s 			page 698


11481:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25190              		.loc 1 11481 40 is_stmt 0 view .LVU7069
 25191 0062 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 25192              	.LVL3157:
11481:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25193              		.loc 1 11481 40 view .LVU7070
 25194 0066 20F01C00 		bic	r0, r0, #28
 25195 006a 43B2     		sxtb	r3, r0
 25196 006c A800     		lsls	r0, r5, #2
 25197 006e 00F01C00 		and	r0, r0, #28
 25198 0072 1843     		orrs	r0, r0, r3
11481:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25199              		.loc 1 11481 38 view .LVU7071
 25200 0074 8DF80700 		strb	r0, [sp, #7]
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 25201              		.loc 1 11482 29 is_stmt 1 view .LVU7072
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 25202              		.loc 1 11482 49 is_stmt 0 view .LVU7073
 25203 0078 114B     		ldr	r3, .L1691
 25204 007a 1868     		ldr	r0, [r3]
 25205 007c C568     		ldr	r5, [r0, #12]
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 25206              		.loc 1 11482 41 view .LVU7074
 25207 007e 0123     		movs	r3, #1
 25208 0080 0DF10702 		add	r2, sp, #7
 25209 0084 0821     		movs	r1, #8
 25210 0086 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25211 0088 A847     		blx	r5
 25212              	.LVL3158:
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 25213              		.loc 1 11482 38 view .LVU7075
 25214 008a 54FA80F4 		uxtab	r4, r4, r0
 25215 008e 64B2     		sxtb	r4, r4
 25216              	.LVL3159:
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 25217              		.loc 1 11482 38 view .LVU7076
 25218 0090 01E0     		b	.L1680
 25219              	.LVL3160:
 25220              	.L1683:
11501:Core/Src/bno055.c ****             }
11502:Core/Src/bno055.c ****         }
11503:Core/Src/bno055.c ****         else
11504:Core/Src/bno055.c ****         {
11505:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 25221              		.loc 1 11505 22 view .LVU7077
 25222 0092 4FF0FF34 		mov	r4, #-1
 25223              	.LVL3161:
 25224              	.L1680:
11506:Core/Src/bno055.c ****         }
11507:Core/Src/bno055.c ****     }
11508:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25225              		.loc 1 11508 5 is_stmt 1 view .LVU7078
 25226              		.loc 1 11508 24 is_stmt 0 view .LVU7079
 25227 0096 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 25228              		.loc 1 11508 8 view .LVU7080
 25229 009a 40B9     		cbnz	r0, .L1690
 25230              	.LVL3162:
ARM GAS  /tmp/ccWoU29M.s 			page 699


 25231              	.L1679:
11509:Core/Src/bno055.c ****     {
11510:Core/Src/bno055.c ****         /* set the operation mode of
11511:Core/Src/bno055.c ****          * previous operation mode*/
11512:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11513:Core/Src/bno055.c ****     }
11514:Core/Src/bno055.c **** 
11515:Core/Src/bno055.c ****     return com_rslt;
11516:Core/Src/bno055.c **** }
 25232              		.loc 1 11516 1 view .LVU7081
 25233 009c 2046     		mov	r0, r4
 25234 009e 03B0     		add	sp, sp, #12
 25235              	.LCFI707:
 25236              		.cfi_remember_state
 25237              		.cfi_def_cfa_offset 12
 25238              		@ sp needed
 25239 00a0 30BD     		pop	{r4, r5, pc}
 25240              	.LVL3163:
 25241              	.L1685:
 25242              	.LCFI708:
 25243              		.cfi_restore_state
11495:Core/Src/bno055.c ****                 }
 25244              		.loc 1 11495 30 view .LVU7082
 25245 00a2 4FF0FF34 		mov	r4, #-1
 25246              	.LVL3164:
11495:Core/Src/bno055.c ****                 }
 25247              		.loc 1 11495 30 view .LVU7083
 25248 00a6 F6E7     		b	.L1680
 25249              	.LVL3165:
 25250              	.L1686:
11490:Core/Src/bno055.c ****                     }
 25251              		.loc 1 11490 34 view .LVU7084
 25252 00a8 6FF00104 		mvn	r4, #1
 25253              	.LVL3166:
11490:Core/Src/bno055.c ****                     }
 25254              		.loc 1 11490 34 view .LVU7085
 25255 00ac F3E7     		b	.L1680
 25256              	.LVL3167:
 25257              	.L1690:
11512:Core/Src/bno055.c ****     }
 25258              		.loc 1 11512 9 is_stmt 1 view .LVU7086
11512:Core/Src/bno055.c ****     }
 25259              		.loc 1 11512 21 is_stmt 0 view .LVU7087
 25260 00ae FFF7FEFF 		bl	bno055_set_operation_mode
 25261              	.LVL3168:
11512:Core/Src/bno055.c ****     }
 25262              		.loc 1 11512 18 view .LVU7088
 25263 00b2 54FA80F4 		uxtab	r4, r4, r0
 25264              	.LVL3169:
11512:Core/Src/bno055.c ****     }
 25265              		.loc 1 11512 18 view .LVU7089
 25266 00b6 64B2     		sxtb	r4, r4
 25267              	.LVL3170:
11512:Core/Src/bno055.c ****     }
 25268              		.loc 1 11512 18 view .LVU7090
 25269 00b8 F0E7     		b	.L1679
 25270              	.LVL3171:
ARM GAS  /tmp/ccWoU29M.s 			page 700


 25271              	.L1682:
11452:Core/Src/bno055.c ****     }
 25272              		.loc 1 11452 16 view .LVU7091
 25273 00ba 6FF07E04 		mvn	r4, #126
 25274 00be EDE7     		b	.L1679
 25275              	.L1692:
 25276              		.align	2
 25277              	.L1691:
 25278 00c0 00000000 		.word	.LANCHOR0
 25279              		.cfi_endproc
 25280              	.LFE178:
 25282              		.section	.text.bno055_get_accel_power_mode,"ax",%progbits
 25283              		.align	1
 25284              		.global	bno055_get_accel_power_mode
 25285              		.syntax unified
 25286              		.thumb
 25287              		.thumb_func
 25288              		.fpu fpv4-sp-d16
 25290              	bno055_get_accel_power_mode:
 25291              	.LVL3172:
 25292              	.LFB179:
11517:Core/Src/bno055.c **** 
11518:Core/Src/bno055.c **** /*!
11519:Core/Src/bno055.c ****  *  @brief This API used to read the accel power mode
11520:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 5 to 7
11521:Core/Src/bno055.c ****  *
11522:Core/Src/bno055.c ****  *  @param accel_power_mode_u8 : The value of accel power mode
11523:Core/Src/bno055.c ****  * accel_power_mode_u8 |   result
11524:Core/Src/bno055.c ****  *   -----------------   | -------------
11525:Core/Src/bno055.c ****  *              0x00     | BNO055_ACCEL_NORMAL
11526:Core/Src/bno055.c ****  *              0x01     | BNO055_ACCEL_SUSPEND
11527:Core/Src/bno055.c ****  *              0x02     | BNO055_ACCEL_LOWPOWER_1
11528:Core/Src/bno055.c ****  *              0x03     | BNO055_ACCEL_STANDBY
11529:Core/Src/bno055.c ****  *              0x04     | BNO055_ACCEL_LOWPOWER_2
11530:Core/Src/bno055.c ****  *              0x05     | BNO055_ACCEL_DEEPSUSPEND
11531:Core/Src/bno055.c ****  *
11532:Core/Src/bno055.c ****  *  @return results of bus communication function
11533:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11534:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11535:Core/Src/bno055.c ****  *
11536:Core/Src/bno055.c ****  *
11537:Core/Src/bno055.c ****  */
11538:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_power_mode(u8 *accel_power_mode_u8)
11539:Core/Src/bno055.c **** {
 25293              		.loc 1 11539 1 is_stmt 1 view -0
 25294              		.cfi_startproc
 25295              		@ args = 0, pretend = 0, frame = 8
 25296              		@ frame_needed = 0, uses_anonymous_args = 0
 25297              		.loc 1 11539 1 is_stmt 0 view .LVU7093
 25298 0000 30B5     		push	{r4, r5, lr}
 25299              	.LCFI709:
 25300              		.cfi_def_cfa_offset 12
 25301              		.cfi_offset 4, -12
 25302              		.cfi_offset 5, -8
 25303              		.cfi_offset 14, -4
 25304 0002 83B0     		sub	sp, sp, #12
 25305              	.LCFI710:
ARM GAS  /tmp/ccWoU29M.s 			page 701


 25306              		.cfi_def_cfa_offset 24
11540:Core/Src/bno055.c ****     /* Variable used to return value of
11541:Core/Src/bno055.c ****      * communication routine*/
11542:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25307              		.loc 1 11542 5 is_stmt 1 view .LVU7094
 25308              	.LVL3173:
11543:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25309              		.loc 1 11543 5 view .LVU7095
 25310              		.loc 1 11543 8 is_stmt 0 view .LVU7096
 25311 0004 0023     		movs	r3, #0
 25312 0006 8DF80730 		strb	r3, [sp, #7]
11544:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25313              		.loc 1 11544 5 is_stmt 1 view .LVU7097
 25314              	.LVL3174:
11545:Core/Src/bno055.c **** 
11546:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11547:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25315              		.loc 1 11547 5 view .LVU7098
 25316              		.loc 1 11547 18 is_stmt 0 view .LVU7099
 25317 000a 134B     		ldr	r3, .L1701
 25318 000c 1B68     		ldr	r3, [r3]
 25319              		.loc 1 11547 8 view .LVU7100
 25320 000e EBB1     		cbz	r3, .L1697
 25321 0010 0446     		mov	r4, r0
11548:Core/Src/bno055.c ****     {
11549:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11550:Core/Src/bno055.c ****     }
11551:Core/Src/bno055.c ****     else
11552:Core/Src/bno055.c ****     {
11553:Core/Src/bno055.c ****         /*condition check for page, accel power mode is
11554:Core/Src/bno055.c ****          * available in the page one*/
11555:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 25322              		.loc 1 11555 9 is_stmt 1 view .LVU7101
 25323              		.loc 1 11555 21 is_stmt 0 view .LVU7102
 25324 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25325              		.loc 1 11555 12 view .LVU7103
 25326 0014 012B     		cmp	r3, #1
 25327 0016 13D1     		bne	.L1700
 25328              	.LVL3175:
 25329              	.L1695:
11556:Core/Src/bno055.c ****         {
11557:Core/Src/bno055.c ****             /* Write page as one */
11558:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11559:Core/Src/bno055.c ****         }
11560:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 25330              		.loc 1 11560 53 discriminator 1 view .LVU7104
 25331 0018 0F4B     		ldr	r3, .L1701
 25332 001a 1B68     		ldr	r3, [r3]
 25333 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25334              		.loc 1 11560 41 discriminator 1 view .LVU7105
 25335 001e 012B     		cmp	r3, #1
 25336 0020 17D1     		bne	.L1698
 25337              	.L1696:
11561:Core/Src/bno055.c ****         {
11562:Core/Src/bno055.c ****             /* Read the value of accel bandwidth */
11563:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 25338              		.loc 1 11563 13 is_stmt 1 view .LVU7106
ARM GAS  /tmp/ccWoU29M.s 			page 702


 25339              		.loc 1 11563 32 is_stmt 0 view .LVU7107
 25340 0022 0D4B     		ldr	r3, .L1701
 25341 0024 1868     		ldr	r0, [r3]
 25342 0026 0569     		ldr	r5, [r0, #16]
 25343              		.loc 1 11563 24 view .LVU7108
 25344 0028 0123     		movs	r3, #1
 25345 002a 0DF10702 		add	r2, sp, #7
 25346 002e 0821     		movs	r1, #8
 25347 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25348 0032 A847     		blx	r5
 25349              	.LVL3176:
11564:Core/Src/bno055.c ****                                                       BNO055_ACCEL_POWER_MODE_REG,
11565:Core/Src/bno055.c ****                                                       &data_u8r,
11566:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
11567:Core/Src/bno055.c ****             *accel_power_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_POWER_MODE);
 25350              		.loc 1 11567 13 is_stmt 1 view .LVU7109
 25351              		.loc 1 11567 36 is_stmt 0 view .LVU7110
 25352 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 25353 0038 5B09     		lsrs	r3, r3, #5
 25354              		.loc 1 11567 34 view .LVU7111
 25355 003a 2370     		strb	r3, [r4]
 25356              	.LVL3177:
 25357              	.L1694:
11568:Core/Src/bno055.c ****         }
11569:Core/Src/bno055.c ****         else
11570:Core/Src/bno055.c ****         {
11571:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11572:Core/Src/bno055.c ****         }
11573:Core/Src/bno055.c ****     }
11574:Core/Src/bno055.c **** 
11575:Core/Src/bno055.c ****     return com_rslt;
11576:Core/Src/bno055.c **** }
 25358              		.loc 1 11576 1 view .LVU7112
 25359 003c 03B0     		add	sp, sp, #12
 25360              	.LCFI711:
 25361              		.cfi_remember_state
 25362              		.cfi_def_cfa_offset 12
 25363              		@ sp needed
 25364 003e 30BD     		pop	{r4, r5, pc}
 25365              	.LVL3178:
 25366              	.L1700:
 25367              	.LCFI712:
 25368              		.cfi_restore_state
11558:Core/Src/bno055.c ****         }
 25369              		.loc 1 11558 13 is_stmt 1 view .LVU7113
11558:Core/Src/bno055.c ****         }
 25370              		.loc 1 11558 23 is_stmt 0 view .LVU7114
 25371 0040 0120     		movs	r0, #1
 25372              	.LVL3179:
11558:Core/Src/bno055.c ****         }
 25373              		.loc 1 11558 23 view .LVU7115
 25374 0042 FFF7FEFF 		bl	bno055_write_page_id
 25375              	.LVL3180:
11560:Core/Src/bno055.c ****         {
 25376              		.loc 1 11560 9 is_stmt 1 view .LVU7116
11560:Core/Src/bno055.c ****         {
 25377              		.loc 1 11560 12 is_stmt 0 view .LVU7117
ARM GAS  /tmp/ccWoU29M.s 			page 703


 25378 0046 0028     		cmp	r0, #0
 25379 0048 EBD0     		beq	.L1696
 25380 004a E5E7     		b	.L1695
 25381              	.LVL3181:
 25382              	.L1697:
11549:Core/Src/bno055.c ****     }
 25383              		.loc 1 11549 16 view .LVU7118
 25384 004c 6FF07E00 		mvn	r0, #126
 25385              	.LVL3182:
11549:Core/Src/bno055.c ****     }
 25386              		.loc 1 11549 16 view .LVU7119
 25387 0050 F4E7     		b	.L1694
 25388              	.LVL3183:
 25389              	.L1698:
11571:Core/Src/bno055.c ****         }
 25390              		.loc 1 11571 22 view .LVU7120
 25391 0052 4FF0FF30 		mov	r0, #-1
 25392 0056 F1E7     		b	.L1694
 25393              	.L1702:
 25394              		.align	2
 25395              	.L1701:
 25396 0058 00000000 		.word	.LANCHOR0
 25397              		.cfi_endproc
 25398              	.LFE179:
 25400              		.section	.text.bno055_set_accel_power_mode,"ax",%progbits
 25401              		.align	1
 25402              		.global	bno055_set_accel_power_mode
 25403              		.syntax unified
 25404              		.thumb
 25405              		.thumb_func
 25406              		.fpu fpv4-sp-d16
 25408              	bno055_set_accel_power_mode:
 25409              	.LVL3184:
 25410              	.LFB180:
11577:Core/Src/bno055.c **** 
11578:Core/Src/bno055.c **** /*!
11579:Core/Src/bno055.c ****  *  @brief This API used to write the accel power mode
11580:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 5 to 7
11581:Core/Src/bno055.c ****  *
11582:Core/Src/bno055.c ****  *  @param accel_power_mode_u8 : The value of accel power mode
11583:Core/Src/bno055.c ****  * accel_power_mode_u8 |   result
11584:Core/Src/bno055.c ****  *   -----------------   | -------------
11585:Core/Src/bno055.c ****  *              0x00     | BNO055_ACCEL_NORMAL
11586:Core/Src/bno055.c ****  *              0x01     | BNO055_ACCEL_SUSPEND
11587:Core/Src/bno055.c ****  *              0x02     | BNO055_ACCEL_LOWPOWER_1
11588:Core/Src/bno055.c ****  *              0x03     | BNO055_ACCEL_STANDBY
11589:Core/Src/bno055.c ****  *              0x04     | BNO055_ACCEL_LOWPOWER_2
11590:Core/Src/bno055.c ****  *              0x05     | BNO055_ACCEL_DEEPSUSPEND
11591:Core/Src/bno055.c ****  *
11592:Core/Src/bno055.c ****  *  @return results of bus communication function
11593:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11594:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11595:Core/Src/bno055.c ****  *
11596:Core/Src/bno055.c ****  *
11597:Core/Src/bno055.c ****  */
11598:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_power_mode(u8 accel_power_mode_u8)
11599:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccWoU29M.s 			page 704


 25411              		.loc 1 11599 1 is_stmt 1 view -0
 25412              		.cfi_startproc
 25413              		@ args = 0, pretend = 0, frame = 8
 25414              		@ frame_needed = 0, uses_anonymous_args = 0
 25415              		.loc 1 11599 1 is_stmt 0 view .LVU7122
 25416 0000 30B5     		push	{r4, r5, lr}
 25417              	.LCFI713:
 25418              		.cfi_def_cfa_offset 12
 25419              		.cfi_offset 4, -12
 25420              		.cfi_offset 5, -8
 25421              		.cfi_offset 14, -4
 25422 0002 83B0     		sub	sp, sp, #12
 25423              	.LCFI714:
 25424              		.cfi_def_cfa_offset 24
11600:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25425              		.loc 1 11600 5 is_stmt 1 view .LVU7123
 25426              	.LVL3185:
11601:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25427              		.loc 1 11601 5 view .LVU7124
 25428              		.loc 1 11601 8 is_stmt 0 view .LVU7125
 25429 0004 0023     		movs	r3, #0
 25430 0006 8DF80730 		strb	r3, [sp, #7]
11602:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25431              		.loc 1 11602 5 is_stmt 1 view .LVU7126
 25432              	.LVL3186:
11603:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 25433              		.loc 1 11603 5 view .LVU7127
 25434              		.loc 1 11603 8 is_stmt 0 view .LVU7128
 25435 000a 8DF80630 		strb	r3, [sp, #6]
11604:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 25436              		.loc 1 11604 5 is_stmt 1 view .LVU7129
 25437              	.LVL3187:
11605:Core/Src/bno055.c **** 
11606:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11607:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25438              		.loc 1 11607 5 view .LVU7130
 25439              		.loc 1 11607 18 is_stmt 0 view .LVU7131
 25440 000e 2A4B     		ldr	r3, .L1716
 25441 0010 1B68     		ldr	r3, [r3]
 25442              		.loc 1 11607 8 view .LVU7132
 25443 0012 002B     		cmp	r3, #0
 25444 0014 4DD0     		beq	.L1707
 25445 0016 0546     		mov	r5, r0
11608:Core/Src/bno055.c ****     {
11609:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11610:Core/Src/bno055.c ****     }
11611:Core/Src/bno055.c ****     else
11612:Core/Src/bno055.c ****     {
11613:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11614:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11615:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11616:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 25446              		.loc 1 11616 9 is_stmt 1 view .LVU7133
 25447              		.loc 1 11616 19 is_stmt 0 view .LVU7134
 25448 0018 0DF10600 		add	r0, sp, #6
 25449              	.LVL3188:
 25450              		.loc 1 11616 19 view .LVU7135
ARM GAS  /tmp/ccWoU29M.s 			page 705


 25451 001c FFF7FEFF 		bl	bno055_get_operation_mode
 25452              	.LVL3189:
11617:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 25453              		.loc 1 11617 9 is_stmt 1 view .LVU7136
 25454              		.loc 1 11617 12 is_stmt 0 view .LVU7137
 25455 0020 0446     		mov	r4, r0
 25456 0022 90BB     		cbnz	r0, .L1708
11618:Core/Src/bno055.c ****         {
11619:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25457              		.loc 1 11619 13 is_stmt 1 view .LVU7138
 25458              		.loc 1 11619 32 is_stmt 0 view .LVU7139
 25459 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 25460              		.loc 1 11619 16 view .LVU7140
 25461 0028 1BB9     		cbnz	r3, .L1713
 25462              	.LVL3190:
 25463              	.L1706:
11620:Core/Src/bno055.c ****             {
11621:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11622:Core/Src/bno055.c ****             }
11623:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 25464              		.loc 1 11623 13 is_stmt 1 view .LVU7141
 25465              		.loc 1 11623 16 is_stmt 0 view .LVU7142
 25466 002a 44B1     		cbz	r4, .L1714
11624:Core/Src/bno055.c ****             {
11625:Core/Src/bno055.c ****                 /* Write page as one */
11626:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11627:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11628:Core/Src/bno055.c ****                 {
11629:Core/Src/bno055.c ****                     if (accel_power_mode_u8 < BNO055_ACCEL_POWER_MODE_RANGE)
11630:Core/Src/bno055.c ****                     {
11631:Core/Src/bno055.c ****                         /* Write the value of accel bandwidth*/
11632:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11633:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
11634:Core/Src/bno055.c ****                                                                   &data_u8r,
11635:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11636:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11637:Core/Src/bno055.c ****                         {
11638:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_POWER_MODE, accel
11639:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11640:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
11641:Core/Src/bno055.c ****                                                                         &data_u8r,
11642:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11643:Core/Src/bno055.c ****                         }
11644:Core/Src/bno055.c ****                     }
11645:Core/Src/bno055.c ****                     else
11646:Core/Src/bno055.c ****                     {
11647:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11648:Core/Src/bno055.c ****                     }
11649:Core/Src/bno055.c ****                 }
11650:Core/Src/bno055.c ****                 else
11651:Core/Src/bno055.c ****                 {
11652:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11653:Core/Src/bno055.c ****                 }
11654:Core/Src/bno055.c ****             }
11655:Core/Src/bno055.c ****             else
11656:Core/Src/bno055.c ****             {
11657:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 706


 25467              		.loc 1 11657 26 view .LVU7143
 25468 002c 4FF0FF34 		mov	r4, #-1
 25469              	.LVL3191:
 25470              		.loc 1 11657 26 view .LVU7144
 25471 0030 2DE0     		b	.L1705
 25472              	.LVL3192:
 25473              	.L1713:
11621:Core/Src/bno055.c ****             }
 25474              		.loc 1 11621 17 is_stmt 1 view .LVU7145
11621:Core/Src/bno055.c ****             }
 25475              		.loc 1 11621 28 is_stmt 0 view .LVU7146
 25476 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 25477              	.LVL3193:
11621:Core/Src/bno055.c ****             }
 25478              		.loc 1 11621 25 view .LVU7147
 25479 0036 54FA80F4 		uxtab	r4, r4, r0
 25480 003a 64B2     		sxtb	r4, r4
 25481              	.LVL3194:
11621:Core/Src/bno055.c ****             }
 25482              		.loc 1 11621 25 view .LVU7148
 25483 003c F5E7     		b	.L1706
 25484              	.L1714:
11626:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25485              		.loc 1 11626 17 is_stmt 1 view .LVU7149
11626:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25486              		.loc 1 11626 30 is_stmt 0 view .LVU7150
 25487 003e 0120     		movs	r0, #1
 25488 0040 FFF7FEFF 		bl	bno055_write_page_id
 25489              	.LVL3195:
11627:Core/Src/bno055.c ****                 {
 25490              		.loc 1 11627 17 is_stmt 1 view .LVU7151
11627:Core/Src/bno055.c ****                 {
 25491              		.loc 1 11627 20 is_stmt 0 view .LVU7152
 25492 0044 48BB     		cbnz	r0, .L1710
11629:Core/Src/bno055.c ****                     {
 25493              		.loc 1 11629 21 is_stmt 1 view .LVU7153
11629:Core/Src/bno055.c ****                     {
 25494              		.loc 1 11629 24 is_stmt 0 view .LVU7154
 25495 0046 052D     		cmp	r5, #5
 25496 0048 2AD8     		bhi	.L1711
11632:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
 25497              		.loc 1 11632 25 is_stmt 1 view .LVU7155
11632:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
 25498              		.loc 1 11632 44 is_stmt 0 view .LVU7156
 25499 004a 1B4B     		ldr	r3, .L1716
 25500 004c 1868     		ldr	r0, [r3]
 25501              	.LVL3196:
11632:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
 25502              		.loc 1 11632 44 view .LVU7157
 25503 004e 0469     		ldr	r4, [r0, #16]
 25504              	.LVL3197:
11632:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
 25505              		.loc 1 11632 36 view .LVU7158
 25506 0050 0123     		movs	r3, #1
 25507 0052 0DF10702 		add	r2, sp, #7
 25508 0056 0821     		movs	r1, #8
 25509 0058 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 707


 25510 005a A047     		blx	r4
 25511              	.LVL3198:
11636:Core/Src/bno055.c ****                         {
 25512              		.loc 1 11636 25 is_stmt 1 view .LVU7159
11636:Core/Src/bno055.c ****                         {
 25513              		.loc 1 11636 28 is_stmt 0 view .LVU7160
 25514 005c 0446     		mov	r4, r0
 25515 005e B0B9     		cbnz	r0, .L1705
11638:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25516              		.loc 1 11638 29 is_stmt 1 view .LVU7161
11638:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25517              		.loc 1 11638 40 is_stmt 0 view .LVU7162
 25518 0060 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 25519              	.LVL3199:
11638:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25520              		.loc 1 11638 40 view .LVU7163
 25521 0064 00F01F00 		and	r0, r0, #31
 25522 0068 40EA4510 		orr	r0, r0, r5, lsl #5
11638:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25523              		.loc 1 11638 38 view .LVU7164
 25524 006c 8DF80700 		strb	r0, [sp, #7]
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 25525              		.loc 1 11639 29 is_stmt 1 view .LVU7165
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 25526              		.loc 1 11639 49 is_stmt 0 view .LVU7166
 25527 0070 114B     		ldr	r3, .L1716
 25528 0072 1868     		ldr	r0, [r3]
 25529 0074 C568     		ldr	r5, [r0, #12]
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 25530              		.loc 1 11639 41 view .LVU7167
 25531 0076 0123     		movs	r3, #1
 25532 0078 0DF10702 		add	r2, sp, #7
 25533 007c 0821     		movs	r1, #8
 25534 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25535 0080 A847     		blx	r5
 25536              	.LVL3200:
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 25537              		.loc 1 11639 38 view .LVU7168
 25538 0082 54FA80F4 		uxtab	r4, r4, r0
 25539 0086 64B2     		sxtb	r4, r4
 25540              	.LVL3201:
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 25541              		.loc 1 11639 38 view .LVU7169
 25542 0088 01E0     		b	.L1705
 25543              	.LVL3202:
 25544              	.L1708:
11658:Core/Src/bno055.c ****             }
11659:Core/Src/bno055.c ****         }
11660:Core/Src/bno055.c ****         else
11661:Core/Src/bno055.c ****         {
11662:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 25545              		.loc 1 11662 22 view .LVU7170
 25546 008a 4FF0FF34 		mov	r4, #-1
 25547              	.LVL3203:
 25548              	.L1705:
11663:Core/Src/bno055.c ****         }
11664:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 708


11665:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25549              		.loc 1 11665 5 is_stmt 1 view .LVU7171
 25550              		.loc 1 11665 24 is_stmt 0 view .LVU7172
 25551 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 25552              		.loc 1 11665 8 view .LVU7173
 25553 0092 40B9     		cbnz	r0, .L1715
 25554              	.LVL3204:
 25555              	.L1704:
11666:Core/Src/bno055.c ****     {
11667:Core/Src/bno055.c ****         /* set the operation mode of
11668:Core/Src/bno055.c ****          * previous operation mode*/
11669:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11670:Core/Src/bno055.c ****     }
11671:Core/Src/bno055.c **** 
11672:Core/Src/bno055.c ****     return com_rslt;
11673:Core/Src/bno055.c **** }
 25556              		.loc 1 11673 1 view .LVU7174
 25557 0094 2046     		mov	r0, r4
 25558 0096 03B0     		add	sp, sp, #12
 25559              	.LCFI715:
 25560              		.cfi_remember_state
 25561              		.cfi_def_cfa_offset 12
 25562              		@ sp needed
 25563 0098 30BD     		pop	{r4, r5, pc}
 25564              	.LVL3205:
 25565              	.L1710:
 25566              	.LCFI716:
 25567              		.cfi_restore_state
11652:Core/Src/bno055.c ****                 }
 25568              		.loc 1 11652 30 view .LVU7175
 25569 009a 4FF0FF34 		mov	r4, #-1
 25570              	.LVL3206:
11652:Core/Src/bno055.c ****                 }
 25571              		.loc 1 11652 30 view .LVU7176
 25572 009e F6E7     		b	.L1705
 25573              	.LVL3207:
 25574              	.L1711:
11647:Core/Src/bno055.c ****                     }
 25575              		.loc 1 11647 34 view .LVU7177
 25576 00a0 6FF00104 		mvn	r4, #1
 25577              	.LVL3208:
11647:Core/Src/bno055.c ****                     }
 25578              		.loc 1 11647 34 view .LVU7178
 25579 00a4 F3E7     		b	.L1705
 25580              	.LVL3209:
 25581              	.L1715:
11669:Core/Src/bno055.c ****     }
 25582              		.loc 1 11669 9 is_stmt 1 view .LVU7179
11669:Core/Src/bno055.c ****     }
 25583              		.loc 1 11669 21 is_stmt 0 view .LVU7180
 25584 00a6 FFF7FEFF 		bl	bno055_set_operation_mode
 25585              	.LVL3210:
11669:Core/Src/bno055.c ****     }
 25586              		.loc 1 11669 18 view .LVU7181
 25587 00aa 54FA80F4 		uxtab	r4, r4, r0
 25588              	.LVL3211:
11669:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 709


 25589              		.loc 1 11669 18 view .LVU7182
 25590 00ae 64B2     		sxtb	r4, r4
 25591              	.LVL3212:
11669:Core/Src/bno055.c ****     }
 25592              		.loc 1 11669 18 view .LVU7183
 25593 00b0 F0E7     		b	.L1704
 25594              	.LVL3213:
 25595              	.L1707:
11609:Core/Src/bno055.c ****     }
 25596              		.loc 1 11609 16 view .LVU7184
 25597 00b2 6FF07E04 		mvn	r4, #126
 25598 00b6 EDE7     		b	.L1704
 25599              	.L1717:
 25600              		.align	2
 25601              	.L1716:
 25602 00b8 00000000 		.word	.LANCHOR0
 25603              		.cfi_endproc
 25604              	.LFE180:
 25606              		.section	.text.bno055_get_mag_data_output_rate,"ax",%progbits
 25607              		.align	1
 25608              		.global	bno055_get_mag_data_output_rate
 25609              		.syntax unified
 25610              		.thumb
 25611              		.thumb_func
 25612              		.fpu fpv4-sp-d16
 25614              	bno055_get_mag_data_output_rate:
 25615              	.LVL3214:
 25616              	.LFB181:
11674:Core/Src/bno055.c **** 
11675:Core/Src/bno055.c **** /*!
11676:Core/Src/bno055.c ****  *  @brief This API used to read the mag output data rate
11677:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 0 to 2
11678:Core/Src/bno055.c ****  *
11679:Core/Src/bno055.c ****  *  @param mag_data_output_rate_u8 : The value of mag output data rate
11680:Core/Src/bno055.c ****  *
11681:Core/Src/bno055.c ****  *  mag_data_output_rate_u8 |   result
11682:Core/Src/bno055.c ****  *  ----------------------    |----------------------
11683:Core/Src/bno055.c ****  *     0x00                   | MAG_DATA_OUTPUT_RATE_2HZ
11684:Core/Src/bno055.c ****  *     0x01                   | MAG_DATA_OUTPUT_RATE_6HZ
11685:Core/Src/bno055.c ****  *     0x02                   | MAG_DATA_OUTPUT_RATE_8HZ
11686:Core/Src/bno055.c ****  *     0x03                   | MAG_DATA_OUTPUT_RATE_10HZ
11687:Core/Src/bno055.c ****  *     0x04                   | MAG_DATA_OUTPUT_RATE_15HZ
11688:Core/Src/bno055.c ****  *     0x05                   | MAG_DATA_OUTPUT_RATE_20HZ
11689:Core/Src/bno055.c ****  *     0x06                   | MAG_DATA_OUTPUT_RATE_25HZ
11690:Core/Src/bno055.c ****  *     0x07                   | MAG_DATA_OUTPUT_RATE_30HZ
11691:Core/Src/bno055.c ****  *
11692:Core/Src/bno055.c ****  *  @return results of bus communication function
11693:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11694:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11695:Core/Src/bno055.c ****  *
11696:Core/Src/bno055.c ****  *
11697:Core/Src/bno055.c ****  */
11698:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_data_output_rate(u8 *mag_data_output_rate_u8)
11699:Core/Src/bno055.c **** {
 25617              		.loc 1 11699 1 is_stmt 1 view -0
 25618              		.cfi_startproc
 25619              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccWoU29M.s 			page 710


 25620              		@ frame_needed = 0, uses_anonymous_args = 0
 25621              		.loc 1 11699 1 is_stmt 0 view .LVU7186
 25622 0000 30B5     		push	{r4, r5, lr}
 25623              	.LCFI717:
 25624              		.cfi_def_cfa_offset 12
 25625              		.cfi_offset 4, -12
 25626              		.cfi_offset 5, -8
 25627              		.cfi_offset 14, -4
 25628 0002 83B0     		sub	sp, sp, #12
 25629              	.LCFI718:
 25630              		.cfi_def_cfa_offset 24
11700:Core/Src/bno055.c ****     /* Variable used to return value of
11701:Core/Src/bno055.c ****      * communication routine*/
11702:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25631              		.loc 1 11702 5 is_stmt 1 view .LVU7187
 25632              	.LVL3215:
11703:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25633              		.loc 1 11703 5 view .LVU7188
 25634              		.loc 1 11703 8 is_stmt 0 view .LVU7189
 25635 0004 0023     		movs	r3, #0
 25636 0006 8DF80730 		strb	r3, [sp, #7]
11704:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25637              		.loc 1 11704 5 is_stmt 1 view .LVU7190
 25638              	.LVL3216:
11705:Core/Src/bno055.c **** 
11706:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11707:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25639              		.loc 1 11707 5 view .LVU7191
 25640              		.loc 1 11707 18 is_stmt 0 view .LVU7192
 25641 000a 144B     		ldr	r3, .L1726
 25642 000c 1B68     		ldr	r3, [r3]
 25643              		.loc 1 11707 8 view .LVU7193
 25644 000e F3B1     		cbz	r3, .L1722
 25645 0010 0446     		mov	r4, r0
11708:Core/Src/bno055.c ****     {
11709:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11710:Core/Src/bno055.c ****     }
11711:Core/Src/bno055.c ****     else
11712:Core/Src/bno055.c ****     {
11713:Core/Src/bno055.c ****         /*condition check for page, output data rate
11714:Core/Src/bno055.c ****          * available in the page one*/
11715:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 25646              		.loc 1 11715 9 is_stmt 1 view .LVU7194
 25647              		.loc 1 11715 21 is_stmt 0 view .LVU7195
 25648 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25649              		.loc 1 11715 12 view .LVU7196
 25650 0014 012B     		cmp	r3, #1
 25651 0016 14D1     		bne	.L1725
 25652              	.LVL3217:
 25653              	.L1720:
11716:Core/Src/bno055.c ****         {
11717:Core/Src/bno055.c ****             /* Write page as one */
11718:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11719:Core/Src/bno055.c ****         }
11720:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 25654              		.loc 1 11720 53 discriminator 1 view .LVU7197
 25655 0018 104B     		ldr	r3, .L1726
ARM GAS  /tmp/ccWoU29M.s 			page 711


 25656 001a 1B68     		ldr	r3, [r3]
 25657 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25658              		.loc 1 11720 41 discriminator 1 view .LVU7198
 25659 001e 012B     		cmp	r3, #1
 25660 0020 18D1     		bne	.L1723
 25661              	.L1721:
11721:Core/Src/bno055.c ****         {
11722:Core/Src/bno055.c ****             /* Read the mag output data rate*/
11723:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 25662              		.loc 1 11723 13 is_stmt 1 view .LVU7199
 25663              		.loc 1 11723 32 is_stmt 0 view .LVU7200
 25664 0022 0E4B     		ldr	r3, .L1726
 25665 0024 1868     		ldr	r0, [r3]
 25666 0026 0569     		ldr	r5, [r0, #16]
 25667              		.loc 1 11723 24 view .LVU7201
 25668 0028 0123     		movs	r3, #1
 25669 002a 0DF10702 		add	r2, sp, #7
 25670 002e 0921     		movs	r1, #9
 25671 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25672 0032 A847     		blx	r5
 25673              	.LVL3218:
11724:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_OUTPUT_RATE_REG,
11725:Core/Src/bno055.c ****                                                       &data_u8r,
11726:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
11727:Core/Src/bno055.c ****             *mag_data_output_rate_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_DATA_OUTPUT_RATE);
 25674              		.loc 1 11727 13 is_stmt 1 view .LVU7202
 25675              		.loc 1 11727 40 is_stmt 0 view .LVU7203
 25676 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 25677 0038 03F00703 		and	r3, r3, #7
 25678              		.loc 1 11727 38 view .LVU7204
 25679 003c 2370     		strb	r3, [r4]
 25680              	.LVL3219:
 25681              	.L1719:
11728:Core/Src/bno055.c ****         }
11729:Core/Src/bno055.c ****         else
11730:Core/Src/bno055.c ****         {
11731:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11732:Core/Src/bno055.c ****         }
11733:Core/Src/bno055.c ****     }
11734:Core/Src/bno055.c **** 
11735:Core/Src/bno055.c ****     return com_rslt;
11736:Core/Src/bno055.c **** }
 25682              		.loc 1 11736 1 view .LVU7205
 25683 003e 03B0     		add	sp, sp, #12
 25684              	.LCFI719:
 25685              		.cfi_remember_state
 25686              		.cfi_def_cfa_offset 12
 25687              		@ sp needed
 25688 0040 30BD     		pop	{r4, r5, pc}
 25689              	.LVL3220:
 25690              	.L1725:
 25691              	.LCFI720:
 25692              		.cfi_restore_state
11718:Core/Src/bno055.c ****         }
 25693              		.loc 1 11718 13 is_stmt 1 view .LVU7206
11718:Core/Src/bno055.c ****         }
 25694              		.loc 1 11718 23 is_stmt 0 view .LVU7207
ARM GAS  /tmp/ccWoU29M.s 			page 712


 25695 0042 0120     		movs	r0, #1
 25696              	.LVL3221:
11718:Core/Src/bno055.c ****         }
 25697              		.loc 1 11718 23 view .LVU7208
 25698 0044 FFF7FEFF 		bl	bno055_write_page_id
 25699              	.LVL3222:
11720:Core/Src/bno055.c ****         {
 25700              		.loc 1 11720 9 is_stmt 1 view .LVU7209
11720:Core/Src/bno055.c ****         {
 25701              		.loc 1 11720 12 is_stmt 0 view .LVU7210
 25702 0048 0028     		cmp	r0, #0
 25703 004a EAD0     		beq	.L1721
 25704 004c E4E7     		b	.L1720
 25705              	.LVL3223:
 25706              	.L1722:
11709:Core/Src/bno055.c ****     }
 25707              		.loc 1 11709 16 view .LVU7211
 25708 004e 6FF07E00 		mvn	r0, #126
 25709              	.LVL3224:
11709:Core/Src/bno055.c ****     }
 25710              		.loc 1 11709 16 view .LVU7212
 25711 0052 F4E7     		b	.L1719
 25712              	.LVL3225:
 25713              	.L1723:
11731:Core/Src/bno055.c ****         }
 25714              		.loc 1 11731 22 view .LVU7213
 25715 0054 4FF0FF30 		mov	r0, #-1
 25716 0058 F1E7     		b	.L1719
 25717              	.L1727:
 25718 005a 00BF     		.align	2
 25719              	.L1726:
 25720 005c 00000000 		.word	.LANCHOR0
 25721              		.cfi_endproc
 25722              	.LFE181:
 25724              		.section	.text.bno055_set_mag_data_output_rate,"ax",%progbits
 25725              		.align	1
 25726              		.global	bno055_set_mag_data_output_rate
 25727              		.syntax unified
 25728              		.thumb
 25729              		.thumb_func
 25730              		.fpu fpv4-sp-d16
 25732              	bno055_set_mag_data_output_rate:
 25733              	.LVL3226:
 25734              	.LFB182:
11737:Core/Src/bno055.c **** 
11738:Core/Src/bno055.c **** /*!
11739:Core/Src/bno055.c ****  *  @brief This API used to write the mag output data rate
11740:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 0 to 2
11741:Core/Src/bno055.c ****  *
11742:Core/Src/bno055.c ****  *  @param mag_data_output_rate_u8 : The value of mag output data rate
11743:Core/Src/bno055.c ****  *
11744:Core/Src/bno055.c ****  *  mag_data_output_rate_u8 |   result
11745:Core/Src/bno055.c ****  *  ----------------------    |----------------------
11746:Core/Src/bno055.c ****  *     0x00                   | MAG_DATA_OUTPUT_RATE_2HZ
11747:Core/Src/bno055.c ****  *     0x01                   | MAG_DATA_OUTPUT_RATE_6HZ
11748:Core/Src/bno055.c ****  *     0x02                   | MAG_DATA_OUTPUT_RATE_8HZ
11749:Core/Src/bno055.c ****  *     0x03                   | MAG_DATA_OUTPUT_RATE_10HZ
ARM GAS  /tmp/ccWoU29M.s 			page 713


11750:Core/Src/bno055.c ****  *     0x04                   | MAG_DATA_OUTPUT_RATE_15HZ
11751:Core/Src/bno055.c ****  *     0x05                   | MAG_DATA_OUTPUT_RATE_20HZ
11752:Core/Src/bno055.c ****  *     0x06                   | MAG_DATA_OUTPUT_RATE_25HZ
11753:Core/Src/bno055.c ****  *     0x07                   | MAG_DATA_OUTPUT_RATE_30HZ
11754:Core/Src/bno055.c ****  *
11755:Core/Src/bno055.c ****  *  @return results of bus communication function
11756:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11757:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11758:Core/Src/bno055.c ****  *
11759:Core/Src/bno055.c ****  *
11760:Core/Src/bno055.c ****  */
11761:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_data_output_rate(u8 mag_data_output_rate_u8)
11762:Core/Src/bno055.c **** {
 25735              		.loc 1 11762 1 is_stmt 1 view -0
 25736              		.cfi_startproc
 25737              		@ args = 0, pretend = 0, frame = 8
 25738              		@ frame_needed = 0, uses_anonymous_args = 0
 25739              		.loc 1 11762 1 is_stmt 0 view .LVU7215
 25740 0000 30B5     		push	{r4, r5, lr}
 25741              	.LCFI721:
 25742              		.cfi_def_cfa_offset 12
 25743              		.cfi_offset 4, -12
 25744              		.cfi_offset 5, -8
 25745              		.cfi_offset 14, -4
 25746 0002 83B0     		sub	sp, sp, #12
 25747              	.LCFI722:
 25748              		.cfi_def_cfa_offset 24
11763:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25749              		.loc 1 11763 5 is_stmt 1 view .LVU7216
 25750              	.LVL3227:
11764:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25751              		.loc 1 11764 5 view .LVU7217
 25752              		.loc 1 11764 8 is_stmt 0 view .LVU7218
 25753 0004 0023     		movs	r3, #0
 25754 0006 8DF80730 		strb	r3, [sp, #7]
11765:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25755              		.loc 1 11765 5 is_stmt 1 view .LVU7219
 25756              	.LVL3228:
11766:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 25757              		.loc 1 11766 5 view .LVU7220
11767:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 25758              		.loc 1 11767 5 view .LVU7221
 25759              		.loc 1 11767 8 is_stmt 0 view .LVU7222
 25760 000a 8DF80630 		strb	r3, [sp, #6]
11768:Core/Src/bno055.c **** 
11769:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11770:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25761              		.loc 1 11770 5 is_stmt 1 view .LVU7223
 25762              		.loc 1 11770 18 is_stmt 0 view .LVU7224
 25763 000e 2C4B     		ldr	r3, .L1741
 25764 0010 1B68     		ldr	r3, [r3]
 25765              		.loc 1 11770 8 view .LVU7225
 25766 0012 002B     		cmp	r3, #0
 25767 0014 50D0     		beq	.L1732
 25768 0016 0546     		mov	r5, r0
11771:Core/Src/bno055.c ****     {
11772:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
ARM GAS  /tmp/ccWoU29M.s 			page 714


11773:Core/Src/bno055.c ****     }
11774:Core/Src/bno055.c ****     else
11775:Core/Src/bno055.c ****     {
11776:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11777:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11778:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11779:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 25769              		.loc 1 11779 9 is_stmt 1 view .LVU7226
 25770              		.loc 1 11779 19 is_stmt 0 view .LVU7227
 25771 0018 0DF10600 		add	r0, sp, #6
 25772              	.LVL3229:
 25773              		.loc 1 11779 19 view .LVU7228
 25774 001c FFF7FEFF 		bl	bno055_get_operation_mode
 25775              	.LVL3230:
11780:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 25776              		.loc 1 11780 9 is_stmt 1 view .LVU7229
 25777              		.loc 1 11780 12 is_stmt 0 view .LVU7230
 25778 0020 0446     		mov	r4, r0
 25779 0022 0028     		cmp	r0, #0
 25780 0024 34D1     		bne	.L1733
11781:Core/Src/bno055.c ****         {
11782:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25781              		.loc 1 11782 13 is_stmt 1 view .LVU7231
 25782              		.loc 1 11782 32 is_stmt 0 view .LVU7232
 25783 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 25784              		.loc 1 11782 16 view .LVU7233
 25785 002a 1BB9     		cbnz	r3, .L1738
 25786              	.LVL3231:
 25787              	.L1731:
11783:Core/Src/bno055.c ****             {
11784:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11785:Core/Src/bno055.c ****             }
11786:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 25788              		.loc 1 11786 13 is_stmt 1 view .LVU7234
 25789              		.loc 1 11786 16 is_stmt 0 view .LVU7235
 25790 002c 44B1     		cbz	r4, .L1739
11787:Core/Src/bno055.c ****             {
11788:Core/Src/bno055.c ****                 /* Write page as one */
11789:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11790:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11791:Core/Src/bno055.c ****                 {
11792:Core/Src/bno055.c ****                     if (mag_data_output_rate_u8 < BNO055_MAG_OUTPUT_RANGE)
11793:Core/Src/bno055.c ****                     {
11794:Core/Src/bno055.c ****                         /* Write the value of
11795:Core/Src/bno055.c ****                          * mag output data rate*/
11796:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11797:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
11798:Core/Src/bno055.c ****                                                                   &data_u8r,
11799:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11800:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11801:Core/Src/bno055.c ****                         {
11802:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r,
11803:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
11804:Core/Src/bno055.c ****                                                            mag_data_output_rate_u8);
11805:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11806:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
11807:Core/Src/bno055.c ****                                                                         &data_u8r,
ARM GAS  /tmp/ccWoU29M.s 			page 715


11808:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11809:Core/Src/bno055.c ****                         }
11810:Core/Src/bno055.c ****                     }
11811:Core/Src/bno055.c ****                     else
11812:Core/Src/bno055.c ****                     {
11813:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11814:Core/Src/bno055.c ****                     }
11815:Core/Src/bno055.c ****                 }
11816:Core/Src/bno055.c ****                 else
11817:Core/Src/bno055.c ****                 {
11818:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11819:Core/Src/bno055.c ****                 }
11820:Core/Src/bno055.c ****             }
11821:Core/Src/bno055.c ****             else
11822:Core/Src/bno055.c ****             {
11823:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 25791              		.loc 1 11823 26 view .LVU7236
 25792 002e 4FF0FF34 		mov	r4, #-1
 25793              	.LVL3232:
 25794              		.loc 1 11823 26 view .LVU7237
 25795 0032 2FE0     		b	.L1730
 25796              	.LVL3233:
 25797              	.L1738:
11784:Core/Src/bno055.c ****             }
 25798              		.loc 1 11784 17 is_stmt 1 view .LVU7238
11784:Core/Src/bno055.c ****             }
 25799              		.loc 1 11784 28 is_stmt 0 view .LVU7239
 25800 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 25801              	.LVL3234:
11784:Core/Src/bno055.c ****             }
 25802              		.loc 1 11784 25 view .LVU7240
 25803 0038 54FA80F4 		uxtab	r4, r4, r0
 25804 003c 64B2     		sxtb	r4, r4
 25805              	.LVL3235:
11784:Core/Src/bno055.c ****             }
 25806              		.loc 1 11784 25 view .LVU7241
 25807 003e F5E7     		b	.L1731
 25808              	.L1739:
11789:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25809              		.loc 1 11789 17 is_stmt 1 view .LVU7242
11789:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25810              		.loc 1 11789 30 is_stmt 0 view .LVU7243
 25811 0040 0120     		movs	r0, #1
 25812 0042 FFF7FEFF 		bl	bno055_write_page_id
 25813              	.LVL3236:
11790:Core/Src/bno055.c ****                 {
 25814              		.loc 1 11790 17 is_stmt 1 view .LVU7244
11790:Core/Src/bno055.c ****                 {
 25815              		.loc 1 11790 20 is_stmt 0 view .LVU7245
 25816 0046 58BB     		cbnz	r0, .L1735
11792:Core/Src/bno055.c ****                     {
 25817              		.loc 1 11792 21 is_stmt 1 view .LVU7246
11792:Core/Src/bno055.c ****                     {
 25818              		.loc 1 11792 24 is_stmt 0 view .LVU7247
 25819 0048 072D     		cmp	r5, #7
 25820 004a 2CD8     		bhi	.L1736
11796:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
ARM GAS  /tmp/ccWoU29M.s 			page 716


 25821              		.loc 1 11796 25 is_stmt 1 view .LVU7248
11796:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
 25822              		.loc 1 11796 44 is_stmt 0 view .LVU7249
 25823 004c 1C4B     		ldr	r3, .L1741
 25824 004e 1868     		ldr	r0, [r3]
 25825              	.LVL3237:
11796:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
 25826              		.loc 1 11796 44 view .LVU7250
 25827 0050 0469     		ldr	r4, [r0, #16]
 25828              	.LVL3238:
11796:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
 25829              		.loc 1 11796 36 view .LVU7251
 25830 0052 0123     		movs	r3, #1
 25831 0054 0DF10702 		add	r2, sp, #7
 25832 0058 0921     		movs	r1, #9
 25833 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25834 005c A047     		blx	r4
 25835              	.LVL3239:
11800:Core/Src/bno055.c ****                         {
 25836              		.loc 1 11800 25 is_stmt 1 view .LVU7252
11800:Core/Src/bno055.c ****                         {
 25837              		.loc 1 11800 28 is_stmt 0 view .LVU7253
 25838 005e 0446     		mov	r4, r0
 25839 0060 C0B9     		cbnz	r0, .L1730
11802:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
 25840              		.loc 1 11802 29 is_stmt 1 view .LVU7254
11802:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
 25841              		.loc 1 11802 40 is_stmt 0 view .LVU7255
 25842 0062 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 25843              	.LVL3240:
11802:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
 25844              		.loc 1 11802 40 view .LVU7256
 25845 0066 20F00700 		bic	r0, r0, #7
 25846 006a 43B2     		sxtb	r3, r0
 25847 006c 05F00700 		and	r0, r5, #7
 25848 0070 1843     		orrs	r0, r0, r3
11802:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
 25849              		.loc 1 11802 38 view .LVU7257
 25850 0072 8DF80700 		strb	r0, [sp, #7]
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 25851              		.loc 1 11805 29 is_stmt 1 view .LVU7258
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 25852              		.loc 1 11805 49 is_stmt 0 view .LVU7259
 25853 0076 124B     		ldr	r3, .L1741
 25854 0078 1868     		ldr	r0, [r3]
 25855 007a C568     		ldr	r5, [r0, #12]
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 25856              		.loc 1 11805 41 view .LVU7260
 25857 007c 0123     		movs	r3, #1
 25858 007e 0DF10702 		add	r2, sp, #7
 25859 0082 0921     		movs	r1, #9
 25860 0084 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25861 0086 A847     		blx	r5
 25862              	.LVL3241:
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 25863              		.loc 1 11805 38 view .LVU7261
 25864 0088 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/ccWoU29M.s 			page 717


 25865 008c 64B2     		sxtb	r4, r4
 25866              	.LVL3242:
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 25867              		.loc 1 11805 38 view .LVU7262
 25868 008e 01E0     		b	.L1730
 25869              	.LVL3243:
 25870              	.L1733:
11824:Core/Src/bno055.c ****             }
11825:Core/Src/bno055.c ****         }
11826:Core/Src/bno055.c ****         else
11827:Core/Src/bno055.c ****         {
11828:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 25871              		.loc 1 11828 22 view .LVU7263
 25872 0090 4FF0FF34 		mov	r4, #-1
 25873              	.LVL3244:
 25874              	.L1730:
11829:Core/Src/bno055.c ****         }
11830:Core/Src/bno055.c ****     }
11831:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25875              		.loc 1 11831 5 is_stmt 1 view .LVU7264
 25876              		.loc 1 11831 24 is_stmt 0 view .LVU7265
 25877 0094 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 25878              		.loc 1 11831 8 view .LVU7266
 25879 0098 40B9     		cbnz	r0, .L1740
 25880              	.LVL3245:
 25881              	.L1729:
11832:Core/Src/bno055.c ****     {
11833:Core/Src/bno055.c ****         /* set the operation mode of
11834:Core/Src/bno055.c ****          * previous operation mode*/
11835:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11836:Core/Src/bno055.c ****     }
11837:Core/Src/bno055.c **** 
11838:Core/Src/bno055.c ****     return com_rslt;
11839:Core/Src/bno055.c **** }
 25882              		.loc 1 11839 1 view .LVU7267
 25883 009a 2046     		mov	r0, r4
 25884 009c 03B0     		add	sp, sp, #12
 25885              	.LCFI723:
 25886              		.cfi_remember_state
 25887              		.cfi_def_cfa_offset 12
 25888              		@ sp needed
 25889 009e 30BD     		pop	{r4, r5, pc}
 25890              	.LVL3246:
 25891              	.L1735:
 25892              	.LCFI724:
 25893              		.cfi_restore_state
11818:Core/Src/bno055.c ****                 }
 25894              		.loc 1 11818 30 view .LVU7268
 25895 00a0 4FF0FF34 		mov	r4, #-1
 25896              	.LVL3247:
11818:Core/Src/bno055.c ****                 }
 25897              		.loc 1 11818 30 view .LVU7269
 25898 00a4 F6E7     		b	.L1730
 25899              	.LVL3248:
 25900              	.L1736:
11813:Core/Src/bno055.c ****                     }
 25901              		.loc 1 11813 34 view .LVU7270
ARM GAS  /tmp/ccWoU29M.s 			page 718


 25902 00a6 6FF00104 		mvn	r4, #1
 25903              	.LVL3249:
11813:Core/Src/bno055.c ****                     }
 25904              		.loc 1 11813 34 view .LVU7271
 25905 00aa F3E7     		b	.L1730
 25906              	.LVL3250:
 25907              	.L1740:
11835:Core/Src/bno055.c ****     }
 25908              		.loc 1 11835 9 is_stmt 1 view .LVU7272
11835:Core/Src/bno055.c ****     }
 25909              		.loc 1 11835 21 is_stmt 0 view .LVU7273
 25910 00ac FFF7FEFF 		bl	bno055_set_operation_mode
 25911              	.LVL3251:
11835:Core/Src/bno055.c ****     }
 25912              		.loc 1 11835 18 view .LVU7274
 25913 00b0 54FA80F4 		uxtab	r4, r4, r0
 25914              	.LVL3252:
11835:Core/Src/bno055.c ****     }
 25915              		.loc 1 11835 18 view .LVU7275
 25916 00b4 64B2     		sxtb	r4, r4
 25917              	.LVL3253:
11835:Core/Src/bno055.c ****     }
 25918              		.loc 1 11835 18 view .LVU7276
 25919 00b6 F0E7     		b	.L1729
 25920              	.LVL3254:
 25921              	.L1732:
11772:Core/Src/bno055.c ****     }
 25922              		.loc 1 11772 16 view .LVU7277
 25923 00b8 6FF07E04 		mvn	r4, #126
 25924 00bc EDE7     		b	.L1729
 25925              	.L1742:
 25926 00be 00BF     		.align	2
 25927              	.L1741:
 25928 00c0 00000000 		.word	.LANCHOR0
 25929              		.cfi_endproc
 25930              	.LFE182:
 25932              		.section	.text.bno055_get_mag_operation_mode,"ax",%progbits
 25933              		.align	1
 25934              		.global	bno055_get_mag_operation_mode
 25935              		.syntax unified
 25936              		.thumb
 25937              		.thumb_func
 25938              		.fpu fpv4-sp-d16
 25940              	bno055_get_mag_operation_mode:
 25941              	.LVL3255:
 25942              	.LFB183:
11840:Core/Src/bno055.c **** 
11841:Core/Src/bno055.c **** /*!
11842:Core/Src/bno055.c ****  *  @brief This API used to read the mag operation mode
11843:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 3 to 4
11844:Core/Src/bno055.c ****  *
11845:Core/Src/bno055.c ****  *  @param mag_operation_mode_u8 : The value of mag operation mode
11846:Core/Src/bno055.c ****  *
11847:Core/Src/bno055.c ****  *  mag_operation_mode_u8  |      result
11848:Core/Src/bno055.c ****  * ------------------------- |--------------------------
11849:Core/Src/bno055.c ****  *     0x00                  | MAG_OPR_MODE_LOWPOWER
11850:Core/Src/bno055.c ****  *     0x01                  | MAG_OPR_MODE_REGULAR
ARM GAS  /tmp/ccWoU29M.s 			page 719


11851:Core/Src/bno055.c ****  *     0x02                  | MAG_OPR_MODE_ENHANCED_REGULAR
11852:Core/Src/bno055.c ****  *     0x03                  | MAG_OPR_MODE_HIGH_ACCURACY
11853:Core/Src/bno055.c ****  *
11854:Core/Src/bno055.c ****  *  @return results of bus communication function
11855:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11856:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11857:Core/Src/bno055.c ****  *
11858:Core/Src/bno055.c ****  *
11859:Core/Src/bno055.c ****  */
11860:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_operation_mode(u8 *mag_operation_mode_u8)
11861:Core/Src/bno055.c **** {
 25943              		.loc 1 11861 1 is_stmt 1 view -0
 25944              		.cfi_startproc
 25945              		@ args = 0, pretend = 0, frame = 8
 25946              		@ frame_needed = 0, uses_anonymous_args = 0
 25947              		.loc 1 11861 1 is_stmt 0 view .LVU7279
 25948 0000 30B5     		push	{r4, r5, lr}
 25949              	.LCFI725:
 25950              		.cfi_def_cfa_offset 12
 25951              		.cfi_offset 4, -12
 25952              		.cfi_offset 5, -8
 25953              		.cfi_offset 14, -4
 25954 0002 83B0     		sub	sp, sp, #12
 25955              	.LCFI726:
 25956              		.cfi_def_cfa_offset 24
11862:Core/Src/bno055.c ****     /* Variable used to return value of
11863:Core/Src/bno055.c ****      * communication routine*/
11864:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25957              		.loc 1 11864 5 is_stmt 1 view .LVU7280
 25958              	.LVL3256:
11865:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25959              		.loc 1 11865 5 view .LVU7281
 25960              		.loc 1 11865 8 is_stmt 0 view .LVU7282
 25961 0004 0023     		movs	r3, #0
 25962 0006 8DF80730 		strb	r3, [sp, #7]
11866:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25963              		.loc 1 11866 5 is_stmt 1 view .LVU7283
 25964              	.LVL3257:
11867:Core/Src/bno055.c **** 
11868:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11869:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25965              		.loc 1 11869 5 view .LVU7284
 25966              		.loc 1 11869 18 is_stmt 0 view .LVU7285
 25967 000a 144B     		ldr	r3, .L1751
 25968 000c 1B68     		ldr	r3, [r3]
 25969              		.loc 1 11869 8 view .LVU7286
 25970 000e F3B1     		cbz	r3, .L1747
 25971 0010 0446     		mov	r4, r0
11870:Core/Src/bno055.c ****     {
11871:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11872:Core/Src/bno055.c ****     }
11873:Core/Src/bno055.c ****     else
11874:Core/Src/bno055.c ****     {
11875:Core/Src/bno055.c ****         /*condition check for page, mag operation mode is
11876:Core/Src/bno055.c ****          * available in the page one*/
11877:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 25972              		.loc 1 11877 9 is_stmt 1 view .LVU7287
ARM GAS  /tmp/ccWoU29M.s 			page 720


 25973              		.loc 1 11877 21 is_stmt 0 view .LVU7288
 25974 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25975              		.loc 1 11877 12 view .LVU7289
 25976 0014 012B     		cmp	r3, #1
 25977 0016 14D1     		bne	.L1750
 25978              	.LVL3258:
 25979              	.L1745:
11878:Core/Src/bno055.c ****         {
11879:Core/Src/bno055.c ****             /* Write page as one */
11880:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11881:Core/Src/bno055.c ****         }
11882:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 25980              		.loc 1 11882 53 discriminator 1 view .LVU7290
 25981 0018 104B     		ldr	r3, .L1751
 25982 001a 1B68     		ldr	r3, [r3]
 25983 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25984              		.loc 1 11882 41 discriminator 1 view .LVU7291
 25985 001e 012B     		cmp	r3, #1
 25986 0020 18D1     		bne	.L1748
 25987              	.L1746:
11883:Core/Src/bno055.c ****         {
11884:Core/Src/bno055.c ****             /* Read the value of mag operation mode*/
11885:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 25988              		.loc 1 11885 13 is_stmt 1 view .LVU7292
 25989              		.loc 1 11885 32 is_stmt 0 view .LVU7293
 25990 0022 0E4B     		ldr	r3, .L1751
 25991 0024 1868     		ldr	r0, [r3]
 25992 0026 0569     		ldr	r5, [r0, #16]
 25993              		.loc 1 11885 24 view .LVU7294
 25994 0028 0123     		movs	r3, #1
 25995 002a 0DF10702 		add	r2, sp, #7
 25996 002e 0921     		movs	r1, #9
 25997 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25998 0032 A847     		blx	r5
 25999              	.LVL3259:
11886:Core/Src/bno055.c ****                                                       BNO055_MAG_OPERATION_MODE_REG,
11887:Core/Src/bno055.c ****                                                       &data_u8r,
11888:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
11889:Core/Src/bno055.c ****             *mag_operation_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_OPERATION_MODE);
 26000              		.loc 1 11889 13 is_stmt 1 view .LVU7295
 26001              		.loc 1 11889 38 is_stmt 0 view .LVU7296
 26002 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26003 0038 C3F3C103 		ubfx	r3, r3, #3, #2
 26004              		.loc 1 11889 36 view .LVU7297
 26005 003c 2370     		strb	r3, [r4]
 26006              	.LVL3260:
 26007              	.L1744:
11890:Core/Src/bno055.c ****         }
11891:Core/Src/bno055.c ****         else
11892:Core/Src/bno055.c ****         {
11893:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11894:Core/Src/bno055.c ****         }
11895:Core/Src/bno055.c ****     }
11896:Core/Src/bno055.c **** 
11897:Core/Src/bno055.c ****     return com_rslt;
11898:Core/Src/bno055.c **** }
 26008              		.loc 1 11898 1 view .LVU7298
ARM GAS  /tmp/ccWoU29M.s 			page 721


 26009 003e 03B0     		add	sp, sp, #12
 26010              	.LCFI727:
 26011              		.cfi_remember_state
 26012              		.cfi_def_cfa_offset 12
 26013              		@ sp needed
 26014 0040 30BD     		pop	{r4, r5, pc}
 26015              	.LVL3261:
 26016              	.L1750:
 26017              	.LCFI728:
 26018              		.cfi_restore_state
11880:Core/Src/bno055.c ****         }
 26019              		.loc 1 11880 13 is_stmt 1 view .LVU7299
11880:Core/Src/bno055.c ****         }
 26020              		.loc 1 11880 23 is_stmt 0 view .LVU7300
 26021 0042 0120     		movs	r0, #1
 26022              	.LVL3262:
11880:Core/Src/bno055.c ****         }
 26023              		.loc 1 11880 23 view .LVU7301
 26024 0044 FFF7FEFF 		bl	bno055_write_page_id
 26025              	.LVL3263:
11882:Core/Src/bno055.c ****         {
 26026              		.loc 1 11882 9 is_stmt 1 view .LVU7302
11882:Core/Src/bno055.c ****         {
 26027              		.loc 1 11882 12 is_stmt 0 view .LVU7303
 26028 0048 0028     		cmp	r0, #0
 26029 004a EAD0     		beq	.L1746
 26030 004c E4E7     		b	.L1745
 26031              	.LVL3264:
 26032              	.L1747:
11871:Core/Src/bno055.c ****     }
 26033              		.loc 1 11871 16 view .LVU7304
 26034 004e 6FF07E00 		mvn	r0, #126
 26035              	.LVL3265:
11871:Core/Src/bno055.c ****     }
 26036              		.loc 1 11871 16 view .LVU7305
 26037 0052 F4E7     		b	.L1744
 26038              	.LVL3266:
 26039              	.L1748:
11893:Core/Src/bno055.c ****         }
 26040              		.loc 1 11893 22 view .LVU7306
 26041 0054 4FF0FF30 		mov	r0, #-1
 26042 0058 F1E7     		b	.L1744
 26043              	.L1752:
 26044 005a 00BF     		.align	2
 26045              	.L1751:
 26046 005c 00000000 		.word	.LANCHOR0
 26047              		.cfi_endproc
 26048              	.LFE183:
 26050              		.section	.text.bno055_set_mag_operation_mode,"ax",%progbits
 26051              		.align	1
 26052              		.global	bno055_set_mag_operation_mode
 26053              		.syntax unified
 26054              		.thumb
 26055              		.thumb_func
 26056              		.fpu fpv4-sp-d16
 26058              	bno055_set_mag_operation_mode:
 26059              	.LVL3267:
ARM GAS  /tmp/ccWoU29M.s 			page 722


 26060              	.LFB184:
11899:Core/Src/bno055.c **** 
11900:Core/Src/bno055.c **** /*!
11901:Core/Src/bno055.c ****  *  @brief This API used to write the mag operation mode
11902:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 3 to 4
11903:Core/Src/bno055.c ****  *
11904:Core/Src/bno055.c ****  *  @param mag_operation_mode_u8 : The value of mag operation mode
11905:Core/Src/bno055.c ****  *
11906:Core/Src/bno055.c ****  *  mag_operation_mode_u8  |      result
11907:Core/Src/bno055.c ****  * ------------------------- |--------------------------
11908:Core/Src/bno055.c ****  *     0x00                  | MAG_OPR_MODE_LOWPOWER
11909:Core/Src/bno055.c ****  *     0x01                  | MAG_OPR_MODE_REGULAR
11910:Core/Src/bno055.c ****  *     0x02                  | MAG_OPR_MODE_ENHANCED_REGULAR
11911:Core/Src/bno055.c ****  *     0x03                  | MAG_OPR_MODE_HIGH_ACCURACY
11912:Core/Src/bno055.c ****  *
11913:Core/Src/bno055.c ****  *  @return results of bus communication function
11914:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11915:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11916:Core/Src/bno055.c ****  *
11917:Core/Src/bno055.c ****  *
11918:Core/Src/bno055.c ****  */
11919:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_operation_mode(u8 mag_operation_mode_u8)
11920:Core/Src/bno055.c **** {
 26061              		.loc 1 11920 1 is_stmt 1 view -0
 26062              		.cfi_startproc
 26063              		@ args = 0, pretend = 0, frame = 8
 26064              		@ frame_needed = 0, uses_anonymous_args = 0
 26065              		.loc 1 11920 1 is_stmt 0 view .LVU7308
 26066 0000 30B5     		push	{r4, r5, lr}
 26067              	.LCFI729:
 26068              		.cfi_def_cfa_offset 12
 26069              		.cfi_offset 4, -12
 26070              		.cfi_offset 5, -8
 26071              		.cfi_offset 14, -4
 26072 0002 83B0     		sub	sp, sp, #12
 26073              	.LCFI730:
 26074              		.cfi_def_cfa_offset 24
11921:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26075              		.loc 1 11921 5 is_stmt 1 view .LVU7309
 26076              	.LVL3268:
11922:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26077              		.loc 1 11922 5 view .LVU7310
 26078              		.loc 1 11922 8 is_stmt 0 view .LVU7311
 26079 0004 0023     		movs	r3, #0
 26080 0006 8DF80730 		strb	r3, [sp, #7]
11923:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26081              		.loc 1 11923 5 is_stmt 1 view .LVU7312
 26082              	.LVL3269:
11924:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 26083              		.loc 1 11924 5 view .LVU7313
11925:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 26084              		.loc 1 11925 5 view .LVU7314
 26085              		.loc 1 11925 8 is_stmt 0 view .LVU7315
 26086 000a 8DF80630 		strb	r3, [sp, #6]
11926:Core/Src/bno055.c **** 
11927:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11928:Core/Src/bno055.c ****     if (p_bno055 == NULL)
ARM GAS  /tmp/ccWoU29M.s 			page 723


 26087              		.loc 1 11928 5 is_stmt 1 view .LVU7316
 26088              		.loc 1 11928 18 is_stmt 0 view .LVU7317
 26089 000e 2C4B     		ldr	r3, .L1766
 26090 0010 1B68     		ldr	r3, [r3]
 26091              		.loc 1 11928 8 view .LVU7318
 26092 0012 002B     		cmp	r3, #0
 26093 0014 51D0     		beq	.L1757
 26094 0016 0546     		mov	r5, r0
11929:Core/Src/bno055.c ****     {
11930:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11931:Core/Src/bno055.c ****     }
11932:Core/Src/bno055.c ****     else
11933:Core/Src/bno055.c ****     {
11934:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11935:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11936:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11937:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 26095              		.loc 1 11937 9 is_stmt 1 view .LVU7319
 26096              		.loc 1 11937 19 is_stmt 0 view .LVU7320
 26097 0018 0DF10600 		add	r0, sp, #6
 26098              	.LVL3270:
 26099              		.loc 1 11937 19 view .LVU7321
 26100 001c FFF7FEFF 		bl	bno055_get_operation_mode
 26101              	.LVL3271:
11938:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 26102              		.loc 1 11938 9 is_stmt 1 view .LVU7322
 26103              		.loc 1 11938 12 is_stmt 0 view .LVU7323
 26104 0020 0446     		mov	r4, r0
 26105 0022 0028     		cmp	r0, #0
 26106 0024 35D1     		bne	.L1758
11939:Core/Src/bno055.c ****         {
11940:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26107              		.loc 1 11940 13 is_stmt 1 view .LVU7324
 26108              		.loc 1 11940 32 is_stmt 0 view .LVU7325
 26109 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 26110              		.loc 1 11940 16 view .LVU7326
 26111 002a 1BB9     		cbnz	r3, .L1763
 26112              	.LVL3272:
 26113              	.L1756:
11941:Core/Src/bno055.c ****             {
11942:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11943:Core/Src/bno055.c ****             }
11944:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 26114              		.loc 1 11944 13 is_stmt 1 view .LVU7327
 26115              		.loc 1 11944 16 is_stmt 0 view .LVU7328
 26116 002c 44B1     		cbz	r4, .L1764
11945:Core/Src/bno055.c ****             {
11946:Core/Src/bno055.c ****                 /* Write page as one */
11947:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11948:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11949:Core/Src/bno055.c ****                 {
11950:Core/Src/bno055.c ****                     if (mag_operation_mode_u8 < BNO055_MAG_OPR_MODE_RANGE)
11951:Core/Src/bno055.c ****                     {
11952:Core/Src/bno055.c ****                         /* Write the value
11953:Core/Src/bno055.c ****                          * of mag operation mode*/
11954:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11955:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
ARM GAS  /tmp/ccWoU29M.s 			page 724


11956:Core/Src/bno055.c ****                                                                   &data_u8r,
11957:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11958:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11959:Core/Src/bno055.c ****                         {
11960:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_MAG_OPERATION_MODE, mag
11961:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11962:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
11963:Core/Src/bno055.c ****                                                                         &data_u8r,
11964:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11965:Core/Src/bno055.c ****                         }
11966:Core/Src/bno055.c ****                     }
11967:Core/Src/bno055.c ****                     else
11968:Core/Src/bno055.c ****                     {
11969:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11970:Core/Src/bno055.c ****                     }
11971:Core/Src/bno055.c ****                 }
11972:Core/Src/bno055.c ****                 else
11973:Core/Src/bno055.c ****                 {
11974:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11975:Core/Src/bno055.c ****                 }
11976:Core/Src/bno055.c ****             }
11977:Core/Src/bno055.c ****             else
11978:Core/Src/bno055.c ****             {
11979:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 26117              		.loc 1 11979 26 view .LVU7329
 26118 002e 4FF0FF34 		mov	r4, #-1
 26119              	.LVL3273:
 26120              		.loc 1 11979 26 view .LVU7330
 26121 0032 30E0     		b	.L1755
 26122              	.LVL3274:
 26123              	.L1763:
11942:Core/Src/bno055.c ****             }
 26124              		.loc 1 11942 17 is_stmt 1 view .LVU7331
11942:Core/Src/bno055.c ****             }
 26125              		.loc 1 11942 28 is_stmt 0 view .LVU7332
 26126 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 26127              	.LVL3275:
11942:Core/Src/bno055.c ****             }
 26128              		.loc 1 11942 25 view .LVU7333
 26129 0038 54FA80F4 		uxtab	r4, r4, r0
 26130 003c 64B2     		sxtb	r4, r4
 26131              	.LVL3276:
11942:Core/Src/bno055.c ****             }
 26132              		.loc 1 11942 25 view .LVU7334
 26133 003e F5E7     		b	.L1756
 26134              	.L1764:
11947:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 26135              		.loc 1 11947 17 is_stmt 1 view .LVU7335
11947:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 26136              		.loc 1 11947 30 is_stmt 0 view .LVU7336
 26137 0040 0120     		movs	r0, #1
 26138 0042 FFF7FEFF 		bl	bno055_write_page_id
 26139              	.LVL3277:
11948:Core/Src/bno055.c ****                 {
 26140              		.loc 1 11948 17 is_stmt 1 view .LVU7337
11948:Core/Src/bno055.c ****                 {
 26141              		.loc 1 11948 20 is_stmt 0 view .LVU7338
ARM GAS  /tmp/ccWoU29M.s 			page 725


 26142 0046 60BB     		cbnz	r0, .L1760
11950:Core/Src/bno055.c ****                     {
 26143              		.loc 1 11950 21 is_stmt 1 view .LVU7339
11950:Core/Src/bno055.c ****                     {
 26144              		.loc 1 11950 24 is_stmt 0 view .LVU7340
 26145 0048 042D     		cmp	r5, #4
 26146 004a 2DD8     		bhi	.L1761
11954:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
 26147              		.loc 1 11954 25 is_stmt 1 view .LVU7341
11954:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
 26148              		.loc 1 11954 44 is_stmt 0 view .LVU7342
 26149 004c 1C4B     		ldr	r3, .L1766
 26150 004e 1868     		ldr	r0, [r3]
 26151              	.LVL3278:
11954:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
 26152              		.loc 1 11954 44 view .LVU7343
 26153 0050 0469     		ldr	r4, [r0, #16]
 26154              	.LVL3279:
11954:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
 26155              		.loc 1 11954 36 view .LVU7344
 26156 0052 0123     		movs	r3, #1
 26157 0054 0DF10702 		add	r2, sp, #7
 26158 0058 0921     		movs	r1, #9
 26159 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26160 005c A047     		blx	r4
 26161              	.LVL3280:
11958:Core/Src/bno055.c ****                         {
 26162              		.loc 1 11958 25 is_stmt 1 view .LVU7345
11958:Core/Src/bno055.c ****                         {
 26163              		.loc 1 11958 28 is_stmt 0 view .LVU7346
 26164 005e 0446     		mov	r4, r0
 26165 0060 C8B9     		cbnz	r0, .L1755
11960:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26166              		.loc 1 11960 29 is_stmt 1 view .LVU7347
11960:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26167              		.loc 1 11960 40 is_stmt 0 view .LVU7348
 26168 0062 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 26169              	.LVL3281:
11960:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26170              		.loc 1 11960 40 view .LVU7349
 26171 0066 20F01800 		bic	r0, r0, #24
 26172 006a 43B2     		sxtb	r3, r0
 26173 006c E800     		lsls	r0, r5, #3
 26174 006e 00F01800 		and	r0, r0, #24
 26175 0072 1843     		orrs	r0, r0, r3
11960:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26176              		.loc 1 11960 38 view .LVU7350
 26177 0074 8DF80700 		strb	r0, [sp, #7]
11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 26178              		.loc 1 11961 29 is_stmt 1 view .LVU7351
11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 26179              		.loc 1 11961 49 is_stmt 0 view .LVU7352
 26180 0078 114B     		ldr	r3, .L1766
 26181 007a 1868     		ldr	r0, [r3]
 26182 007c C568     		ldr	r5, [r0, #12]
11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 26183              		.loc 1 11961 41 view .LVU7353
ARM GAS  /tmp/ccWoU29M.s 			page 726


 26184 007e 0123     		movs	r3, #1
 26185 0080 0DF10702 		add	r2, sp, #7
 26186 0084 0921     		movs	r1, #9
 26187 0086 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26188 0088 A847     		blx	r5
 26189              	.LVL3282:
11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 26190              		.loc 1 11961 38 view .LVU7354
 26191 008a 54FA80F4 		uxtab	r4, r4, r0
 26192 008e 64B2     		sxtb	r4, r4
 26193              	.LVL3283:
11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 26194              		.loc 1 11961 38 view .LVU7355
 26195 0090 01E0     		b	.L1755
 26196              	.LVL3284:
 26197              	.L1758:
11980:Core/Src/bno055.c ****             }
11981:Core/Src/bno055.c ****         }
11982:Core/Src/bno055.c ****         else
11983:Core/Src/bno055.c ****         {
11984:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 26198              		.loc 1 11984 22 view .LVU7356
 26199 0092 4FF0FF34 		mov	r4, #-1
 26200              	.LVL3285:
 26201              	.L1755:
11985:Core/Src/bno055.c ****         }
11986:Core/Src/bno055.c ****     }
11987:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26202              		.loc 1 11987 5 is_stmt 1 view .LVU7357
 26203              		.loc 1 11987 24 is_stmt 0 view .LVU7358
 26204 0096 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 26205              		.loc 1 11987 8 view .LVU7359
 26206 009a 40B9     		cbnz	r0, .L1765
 26207              	.LVL3286:
 26208              	.L1754:
11988:Core/Src/bno055.c ****     {
11989:Core/Src/bno055.c ****         /* set the operation mode of
11990:Core/Src/bno055.c ****          * previous operation mode*/
11991:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11992:Core/Src/bno055.c ****     }
11993:Core/Src/bno055.c **** 
11994:Core/Src/bno055.c ****     return com_rslt;
11995:Core/Src/bno055.c **** }
 26209              		.loc 1 11995 1 view .LVU7360
 26210 009c 2046     		mov	r0, r4
 26211 009e 03B0     		add	sp, sp, #12
 26212              	.LCFI731:
 26213              		.cfi_remember_state
 26214              		.cfi_def_cfa_offset 12
 26215              		@ sp needed
 26216 00a0 30BD     		pop	{r4, r5, pc}
 26217              	.LVL3287:
 26218              	.L1760:
 26219              	.LCFI732:
 26220              		.cfi_restore_state
11974:Core/Src/bno055.c ****                 }
 26221              		.loc 1 11974 30 view .LVU7361
ARM GAS  /tmp/ccWoU29M.s 			page 727


 26222 00a2 4FF0FF34 		mov	r4, #-1
 26223              	.LVL3288:
11974:Core/Src/bno055.c ****                 }
 26224              		.loc 1 11974 30 view .LVU7362
 26225 00a6 F6E7     		b	.L1755
 26226              	.LVL3289:
 26227              	.L1761:
11969:Core/Src/bno055.c ****                     }
 26228              		.loc 1 11969 34 view .LVU7363
 26229 00a8 6FF00104 		mvn	r4, #1
 26230              	.LVL3290:
11969:Core/Src/bno055.c ****                     }
 26231              		.loc 1 11969 34 view .LVU7364
 26232 00ac F3E7     		b	.L1755
 26233              	.LVL3291:
 26234              	.L1765:
11991:Core/Src/bno055.c ****     }
 26235              		.loc 1 11991 9 is_stmt 1 view .LVU7365
11991:Core/Src/bno055.c ****     }
 26236              		.loc 1 11991 21 is_stmt 0 view .LVU7366
 26237 00ae FFF7FEFF 		bl	bno055_set_operation_mode
 26238              	.LVL3292:
11991:Core/Src/bno055.c ****     }
 26239              		.loc 1 11991 18 view .LVU7367
 26240 00b2 54FA80F4 		uxtab	r4, r4, r0
 26241              	.LVL3293:
11991:Core/Src/bno055.c ****     }
 26242              		.loc 1 11991 18 view .LVU7368
 26243 00b6 64B2     		sxtb	r4, r4
 26244              	.LVL3294:
11991:Core/Src/bno055.c ****     }
 26245              		.loc 1 11991 18 view .LVU7369
 26246 00b8 F0E7     		b	.L1754
 26247              	.LVL3295:
 26248              	.L1757:
11930:Core/Src/bno055.c ****     }
 26249              		.loc 1 11930 16 view .LVU7370
 26250 00ba 6FF07E04 		mvn	r4, #126
 26251 00be EDE7     		b	.L1754
 26252              	.L1767:
 26253              		.align	2
 26254              	.L1766:
 26255 00c0 00000000 		.word	.LANCHOR0
 26256              		.cfi_endproc
 26257              	.LFE184:
 26259              		.section	.text.bno055_get_mag_power_mode,"ax",%progbits
 26260              		.align	1
 26261              		.global	bno055_get_mag_power_mode
 26262              		.syntax unified
 26263              		.thumb
 26264              		.thumb_func
 26265              		.fpu fpv4-sp-d16
 26267              	bno055_get_mag_power_mode:
 26268              	.LVL3296:
 26269              	.LFB185:
11996:Core/Src/bno055.c **** 
11997:Core/Src/bno055.c **** /*!
ARM GAS  /tmp/ccWoU29M.s 			page 728


11998:Core/Src/bno055.c ****  *  @brief This API used to read the mag power mode
11999:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 4 to 6
12000:Core/Src/bno055.c ****  *
12001:Core/Src/bno055.c ****  *  @param mag_power_mode_u8 : The value of mag power mode
12002:Core/Src/bno055.c ****  *
12003:Core/Src/bno055.c ****  * mag_power_mode_u8 |   result
12004:Core/Src/bno055.c ****  * --------------------|-----------------
12005:Core/Src/bno055.c ****  *     0x00            | BNO055_MAG_POWER_MODE_NORMAL
12006:Core/Src/bno055.c ****  *     0x01            | BNO055_MAG_POWER_MODE_SLEEP
12007:Core/Src/bno055.c ****  *     0x02            | BNO055_MAG_POWER_MODE_SUSPEND
12008:Core/Src/bno055.c ****  *     0x03            | BNO055_MAG_POWER_MODE_FORCE_MODE
12009:Core/Src/bno055.c ****  *
12010:Core/Src/bno055.c ****  *  @return results of bus communication function
12011:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12012:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12013:Core/Src/bno055.c ****  *
12014:Core/Src/bno055.c ****  *
12015:Core/Src/bno055.c ****  */
12016:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_power_mode(u8 *mag_power_mode_u8)
12017:Core/Src/bno055.c **** {
 26270              		.loc 1 12017 1 is_stmt 1 view -0
 26271              		.cfi_startproc
 26272              		@ args = 0, pretend = 0, frame = 8
 26273              		@ frame_needed = 0, uses_anonymous_args = 0
 26274              		.loc 1 12017 1 is_stmt 0 view .LVU7372
 26275 0000 30B5     		push	{r4, r5, lr}
 26276              	.LCFI733:
 26277              		.cfi_def_cfa_offset 12
 26278              		.cfi_offset 4, -12
 26279              		.cfi_offset 5, -8
 26280              		.cfi_offset 14, -4
 26281 0002 83B0     		sub	sp, sp, #12
 26282              	.LCFI734:
 26283              		.cfi_def_cfa_offset 24
12018:Core/Src/bno055.c ****     /* Variable used to return value of
12019:Core/Src/bno055.c ****      * communication routine*/
12020:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26284              		.loc 1 12020 5 is_stmt 1 view .LVU7373
 26285              	.LVL3297:
12021:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26286              		.loc 1 12021 5 view .LVU7374
 26287              		.loc 1 12021 8 is_stmt 0 view .LVU7375
 26288 0004 0023     		movs	r3, #0
 26289 0006 8DF80730 		strb	r3, [sp, #7]
12022:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26290              		.loc 1 12022 5 is_stmt 1 view .LVU7376
 26291              	.LVL3298:
12023:Core/Src/bno055.c **** 
12024:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12025:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26292              		.loc 1 12025 5 view .LVU7377
 26293              		.loc 1 12025 18 is_stmt 0 view .LVU7378
 26294 000a 144B     		ldr	r3, .L1776
 26295 000c 1B68     		ldr	r3, [r3]
 26296              		.loc 1 12025 8 view .LVU7379
 26297 000e F3B1     		cbz	r3, .L1772
 26298 0010 0446     		mov	r4, r0
ARM GAS  /tmp/ccWoU29M.s 			page 729


12026:Core/Src/bno055.c ****     {
12027:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12028:Core/Src/bno055.c ****     }
12029:Core/Src/bno055.c ****     else
12030:Core/Src/bno055.c ****     {
12031:Core/Src/bno055.c ****         /*condition check for page, mag power mode is
12032:Core/Src/bno055.c ****          * available in the page one*/
12033:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 26299              		.loc 1 12033 9 is_stmt 1 view .LVU7380
 26300              		.loc 1 12033 21 is_stmt 0 view .LVU7381
 26301 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26302              		.loc 1 12033 12 view .LVU7382
 26303 0014 012B     		cmp	r3, #1
 26304 0016 14D1     		bne	.L1775
 26305              	.LVL3299:
 26306              	.L1770:
12034:Core/Src/bno055.c ****         {
12035:Core/Src/bno055.c ****             /* Write page as one */
12036:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12037:Core/Src/bno055.c ****         }
12038:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 26307              		.loc 1 12038 53 discriminator 1 view .LVU7383
 26308 0018 104B     		ldr	r3, .L1776
 26309 001a 1B68     		ldr	r3, [r3]
 26310 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26311              		.loc 1 12038 41 discriminator 1 view .LVU7384
 26312 001e 012B     		cmp	r3, #1
 26313 0020 18D1     		bne	.L1773
 26314              	.L1771:
12039:Core/Src/bno055.c ****         {
12040:Core/Src/bno055.c ****             /* Read the value of mag power mode */
12041:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 26315              		.loc 1 12041 13 is_stmt 1 view .LVU7385
 26316              		.loc 1 12041 32 is_stmt 0 view .LVU7386
 26317 0022 0E4B     		ldr	r3, .L1776
 26318 0024 1868     		ldr	r0, [r3]
 26319 0026 0569     		ldr	r5, [r0, #16]
 26320              		.loc 1 12041 24 view .LVU7387
 26321 0028 0123     		movs	r3, #1
 26322 002a 0DF10702 		add	r2, sp, #7
 26323 002e 0921     		movs	r1, #9
 26324 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26325 0032 A847     		blx	r5
 26326              	.LVL3300:
12042:Core/Src/bno055.c ****                                                       BNO055_MAG_POWER_MODE_REG,
12043:Core/Src/bno055.c ****                                                       &data_u8r,
12044:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12045:Core/Src/bno055.c ****             *mag_power_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_POWER_MODE);
 26327              		.loc 1 12045 13 is_stmt 1 view .LVU7388
 26328              		.loc 1 12045 34 is_stmt 0 view .LVU7389
 26329 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26330 0038 C3F34113 		ubfx	r3, r3, #5, #2
 26331              		.loc 1 12045 32 view .LVU7390
 26332 003c 2370     		strb	r3, [r4]
 26333              	.LVL3301:
 26334              	.L1769:
12046:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 730


12047:Core/Src/bno055.c ****         else
12048:Core/Src/bno055.c ****         {
12049:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12050:Core/Src/bno055.c ****         }
12051:Core/Src/bno055.c ****     }
12052:Core/Src/bno055.c **** 
12053:Core/Src/bno055.c ****     return com_rslt;
12054:Core/Src/bno055.c **** }
 26335              		.loc 1 12054 1 view .LVU7391
 26336 003e 03B0     		add	sp, sp, #12
 26337              	.LCFI735:
 26338              		.cfi_remember_state
 26339              		.cfi_def_cfa_offset 12
 26340              		@ sp needed
 26341 0040 30BD     		pop	{r4, r5, pc}
 26342              	.LVL3302:
 26343              	.L1775:
 26344              	.LCFI736:
 26345              		.cfi_restore_state
12036:Core/Src/bno055.c ****         }
 26346              		.loc 1 12036 13 is_stmt 1 view .LVU7392
12036:Core/Src/bno055.c ****         }
 26347              		.loc 1 12036 23 is_stmt 0 view .LVU7393
 26348 0042 0120     		movs	r0, #1
 26349              	.LVL3303:
12036:Core/Src/bno055.c ****         }
 26350              		.loc 1 12036 23 view .LVU7394
 26351 0044 FFF7FEFF 		bl	bno055_write_page_id
 26352              	.LVL3304:
12038:Core/Src/bno055.c ****         {
 26353              		.loc 1 12038 9 is_stmt 1 view .LVU7395
12038:Core/Src/bno055.c ****         {
 26354              		.loc 1 12038 12 is_stmt 0 view .LVU7396
 26355 0048 0028     		cmp	r0, #0
 26356 004a EAD0     		beq	.L1771
 26357 004c E4E7     		b	.L1770
 26358              	.LVL3305:
 26359              	.L1772:
12027:Core/Src/bno055.c ****     }
 26360              		.loc 1 12027 16 view .LVU7397
 26361 004e 6FF07E00 		mvn	r0, #126
 26362              	.LVL3306:
12027:Core/Src/bno055.c ****     }
 26363              		.loc 1 12027 16 view .LVU7398
 26364 0052 F4E7     		b	.L1769
 26365              	.LVL3307:
 26366              	.L1773:
12049:Core/Src/bno055.c ****         }
 26367              		.loc 1 12049 22 view .LVU7399
 26368 0054 4FF0FF30 		mov	r0, #-1
 26369 0058 F1E7     		b	.L1769
 26370              	.L1777:
 26371 005a 00BF     		.align	2
 26372              	.L1776:
 26373 005c 00000000 		.word	.LANCHOR0
 26374              		.cfi_endproc
 26375              	.LFE185:
ARM GAS  /tmp/ccWoU29M.s 			page 731


 26377              		.section	.text.bno055_set_mag_power_mode,"ax",%progbits
 26378              		.align	1
 26379              		.global	bno055_set_mag_power_mode
 26380              		.syntax unified
 26381              		.thumb
 26382              		.thumb_func
 26383              		.fpu fpv4-sp-d16
 26385              	bno055_set_mag_power_mode:
 26386              	.LVL3308:
 26387              	.LFB186:
12055:Core/Src/bno055.c **** 
12056:Core/Src/bno055.c **** /*!
12057:Core/Src/bno055.c ****  *  @brief This API used to write the mag power mode
12058:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 4 to 6
12059:Core/Src/bno055.c ****  *
12060:Core/Src/bno055.c ****  *  @param mag_power_mode_u8 : The value of mag power mode
12061:Core/Src/bno055.c ****  *
12062:Core/Src/bno055.c ****  * mag_power_mode_u8 |   result
12063:Core/Src/bno055.c ****  * --------------------|-----------------
12064:Core/Src/bno055.c ****  *     0x00            | BNO055_MAG_POWER_MODE_NORMAL
12065:Core/Src/bno055.c ****  *     0x01            | BNO055_MAG_POWER_MODE_SLEEP
12066:Core/Src/bno055.c ****  *     0x02            | BNO055_MAG_POWER_MODE_SUSPEND
12067:Core/Src/bno055.c ****  *     0x03            | BNO055_MAG_POWER_MODE_FORCE_MODE
12068:Core/Src/bno055.c ****  *
12069:Core/Src/bno055.c ****  *  @return results of bus communication function
12070:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12071:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12072:Core/Src/bno055.c ****  *
12073:Core/Src/bno055.c ****  *
12074:Core/Src/bno055.c ****  */
12075:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_power_mode(u8 mag_power_mode_u8)
12076:Core/Src/bno055.c **** {
 26388              		.loc 1 12076 1 is_stmt 1 view -0
 26389              		.cfi_startproc
 26390              		@ args = 0, pretend = 0, frame = 8
 26391              		@ frame_needed = 0, uses_anonymous_args = 0
 26392              		.loc 1 12076 1 is_stmt 0 view .LVU7401
 26393 0000 30B5     		push	{r4, r5, lr}
 26394              	.LCFI737:
 26395              		.cfi_def_cfa_offset 12
 26396              		.cfi_offset 4, -12
 26397              		.cfi_offset 5, -8
 26398              		.cfi_offset 14, -4
 26399 0002 83B0     		sub	sp, sp, #12
 26400              	.LCFI738:
 26401              		.cfi_def_cfa_offset 24
12077:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26402              		.loc 1 12077 5 is_stmt 1 view .LVU7402
 26403              	.LVL3309:
12078:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26404              		.loc 1 12078 5 view .LVU7403
 26405              		.loc 1 12078 8 is_stmt 0 view .LVU7404
 26406 0004 0023     		movs	r3, #0
 26407 0006 8DF80730 		strb	r3, [sp, #7]
12079:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26408              		.loc 1 12079 5 is_stmt 1 view .LVU7405
 26409              	.LVL3310:
ARM GAS  /tmp/ccWoU29M.s 			page 732


12080:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 26410              		.loc 1 12080 5 view .LVU7406
12081:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 26411              		.loc 1 12081 5 view .LVU7407
 26412              		.loc 1 12081 8 is_stmt 0 view .LVU7408
 26413 000a 8DF80630 		strb	r3, [sp, #6]
12082:Core/Src/bno055.c **** 
12083:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12084:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26414              		.loc 1 12084 5 is_stmt 1 view .LVU7409
 26415              		.loc 1 12084 18 is_stmt 0 view .LVU7410
 26416 000e 2C4B     		ldr	r3, .L1791
 26417 0010 1B68     		ldr	r3, [r3]
 26418              		.loc 1 12084 8 view .LVU7411
 26419 0012 002B     		cmp	r3, #0
 26420 0014 51D0     		beq	.L1782
 26421 0016 0546     		mov	r5, r0
12085:Core/Src/bno055.c ****     {
12086:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12087:Core/Src/bno055.c ****     }
12088:Core/Src/bno055.c ****     else
12089:Core/Src/bno055.c ****     {
12090:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12091:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12092:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12093:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 26422              		.loc 1 12093 9 is_stmt 1 view .LVU7412
 26423              		.loc 1 12093 19 is_stmt 0 view .LVU7413
 26424 0018 0DF10600 		add	r0, sp, #6
 26425              	.LVL3311:
 26426              		.loc 1 12093 19 view .LVU7414
 26427 001c FFF7FEFF 		bl	bno055_get_operation_mode
 26428              	.LVL3312:
12094:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 26429              		.loc 1 12094 9 is_stmt 1 view .LVU7415
 26430              		.loc 1 12094 12 is_stmt 0 view .LVU7416
 26431 0020 0446     		mov	r4, r0
 26432 0022 0028     		cmp	r0, #0
 26433 0024 35D1     		bne	.L1783
12095:Core/Src/bno055.c ****         {
12096:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26434              		.loc 1 12096 13 is_stmt 1 view .LVU7417
 26435              		.loc 1 12096 32 is_stmt 0 view .LVU7418
 26436 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 26437              		.loc 1 12096 16 view .LVU7419
 26438 002a 1BB9     		cbnz	r3, .L1788
 26439              	.LVL3313:
 26440              	.L1781:
12097:Core/Src/bno055.c ****             {
12098:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12099:Core/Src/bno055.c ****             }
12100:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 26441              		.loc 1 12100 13 is_stmt 1 view .LVU7420
 26442              		.loc 1 12100 16 is_stmt 0 view .LVU7421
 26443 002c 44B1     		cbz	r4, .L1789
12101:Core/Src/bno055.c ****             {
12102:Core/Src/bno055.c ****                 /* Write page as one */
ARM GAS  /tmp/ccWoU29M.s 			page 733


12103:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12104:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12105:Core/Src/bno055.c ****                 {
12106:Core/Src/bno055.c ****                     if (mag_power_mode_u8 < BNO055_MAG_POWER_MODE_RANGE)
12107:Core/Src/bno055.c ****                     {
12108:Core/Src/bno055.c ****                         /* Write the value of mag power mode*/
12109:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12110:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
12111:Core/Src/bno055.c ****                                                                   &data_u8r,
12112:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12113:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12114:Core/Src/bno055.c ****                         {
12115:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_MAG_POWER_MODE, mag_pow
12116:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12117:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
12118:Core/Src/bno055.c ****                                                                         &data_u8r,
12119:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12120:Core/Src/bno055.c ****                         }
12121:Core/Src/bno055.c ****                     }
12122:Core/Src/bno055.c ****                     else
12123:Core/Src/bno055.c ****                     {
12124:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12125:Core/Src/bno055.c ****                     }
12126:Core/Src/bno055.c ****                 }
12127:Core/Src/bno055.c ****                 else
12128:Core/Src/bno055.c ****                 {
12129:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12130:Core/Src/bno055.c ****                 }
12131:Core/Src/bno055.c ****             }
12132:Core/Src/bno055.c ****             else
12133:Core/Src/bno055.c ****             {
12134:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 26444              		.loc 1 12134 26 view .LVU7422
 26445 002e 4FF0FF34 		mov	r4, #-1
 26446              	.LVL3314:
 26447              		.loc 1 12134 26 view .LVU7423
 26448 0032 30E0     		b	.L1780
 26449              	.LVL3315:
 26450              	.L1788:
12098:Core/Src/bno055.c ****             }
 26451              		.loc 1 12098 17 is_stmt 1 view .LVU7424
12098:Core/Src/bno055.c ****             }
 26452              		.loc 1 12098 28 is_stmt 0 view .LVU7425
 26453 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 26454              	.LVL3316:
12098:Core/Src/bno055.c ****             }
 26455              		.loc 1 12098 25 view .LVU7426
 26456 0038 54FA80F4 		uxtab	r4, r4, r0
 26457 003c 64B2     		sxtb	r4, r4
 26458              	.LVL3317:
12098:Core/Src/bno055.c ****             }
 26459              		.loc 1 12098 25 view .LVU7427
 26460 003e F5E7     		b	.L1781
 26461              	.L1789:
12103:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 26462              		.loc 1 12103 17 is_stmt 1 view .LVU7428
12103:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
ARM GAS  /tmp/ccWoU29M.s 			page 734


 26463              		.loc 1 12103 30 is_stmt 0 view .LVU7429
 26464 0040 0120     		movs	r0, #1
 26465 0042 FFF7FEFF 		bl	bno055_write_page_id
 26466              	.LVL3318:
12104:Core/Src/bno055.c ****                 {
 26467              		.loc 1 12104 17 is_stmt 1 view .LVU7430
12104:Core/Src/bno055.c ****                 {
 26468              		.loc 1 12104 20 is_stmt 0 view .LVU7431
 26469 0046 60BB     		cbnz	r0, .L1785
12106:Core/Src/bno055.c ****                     {
 26470              		.loc 1 12106 21 is_stmt 1 view .LVU7432
12106:Core/Src/bno055.c ****                     {
 26471              		.loc 1 12106 24 is_stmt 0 view .LVU7433
 26472 0048 032D     		cmp	r5, #3
 26473 004a 2DD8     		bhi	.L1786
12109:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
 26474              		.loc 1 12109 25 is_stmt 1 view .LVU7434
12109:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
 26475              		.loc 1 12109 44 is_stmt 0 view .LVU7435
 26476 004c 1C4B     		ldr	r3, .L1791
 26477 004e 1868     		ldr	r0, [r3]
 26478              	.LVL3319:
12109:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
 26479              		.loc 1 12109 44 view .LVU7436
 26480 0050 0469     		ldr	r4, [r0, #16]
 26481              	.LVL3320:
12109:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
 26482              		.loc 1 12109 36 view .LVU7437
 26483 0052 0123     		movs	r3, #1
 26484 0054 0DF10702 		add	r2, sp, #7
 26485 0058 0921     		movs	r1, #9
 26486 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26487 005c A047     		blx	r4
 26488              	.LVL3321:
12113:Core/Src/bno055.c ****                         {
 26489              		.loc 1 12113 25 is_stmt 1 view .LVU7438
12113:Core/Src/bno055.c ****                         {
 26490              		.loc 1 12113 28 is_stmt 0 view .LVU7439
 26491 005e 0446     		mov	r4, r0
 26492 0060 C8B9     		cbnz	r0, .L1780
12115:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26493              		.loc 1 12115 29 is_stmt 1 view .LVU7440
12115:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26494              		.loc 1 12115 40 is_stmt 0 view .LVU7441
 26495 0062 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 26496              	.LVL3322:
12115:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26497              		.loc 1 12115 40 view .LVU7442
 26498 0066 20F06000 		bic	r0, r0, #96
 26499 006a 43B2     		sxtb	r3, r0
 26500 006c 6801     		lsls	r0, r5, #5
 26501 006e 00F06000 		and	r0, r0, #96
 26502 0072 1843     		orrs	r0, r0, r3
12115:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26503              		.loc 1 12115 38 view .LVU7443
 26504 0074 8DF80700 		strb	r0, [sp, #7]
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
ARM GAS  /tmp/ccWoU29M.s 			page 735


 26505              		.loc 1 12116 29 is_stmt 1 view .LVU7444
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
 26506              		.loc 1 12116 49 is_stmt 0 view .LVU7445
 26507 0078 114B     		ldr	r3, .L1791
 26508 007a 1868     		ldr	r0, [r3]
 26509 007c C568     		ldr	r5, [r0, #12]
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
 26510              		.loc 1 12116 41 view .LVU7446
 26511 007e 0123     		movs	r3, #1
 26512 0080 0DF10702 		add	r2, sp, #7
 26513 0084 0921     		movs	r1, #9
 26514 0086 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26515 0088 A847     		blx	r5
 26516              	.LVL3323:
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
 26517              		.loc 1 12116 38 view .LVU7447
 26518 008a 54FA80F4 		uxtab	r4, r4, r0
 26519 008e 64B2     		sxtb	r4, r4
 26520              	.LVL3324:
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
 26521              		.loc 1 12116 38 view .LVU7448
 26522 0090 01E0     		b	.L1780
 26523              	.LVL3325:
 26524              	.L1783:
12135:Core/Src/bno055.c ****             }
12136:Core/Src/bno055.c ****         }
12137:Core/Src/bno055.c ****         else
12138:Core/Src/bno055.c ****         {
12139:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 26525              		.loc 1 12139 22 view .LVU7449
 26526 0092 4FF0FF34 		mov	r4, #-1
 26527              	.LVL3326:
 26528              	.L1780:
12140:Core/Src/bno055.c ****         }
12141:Core/Src/bno055.c ****     }
12142:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26529              		.loc 1 12142 5 is_stmt 1 view .LVU7450
 26530              		.loc 1 12142 24 is_stmt 0 view .LVU7451
 26531 0096 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 26532              		.loc 1 12142 8 view .LVU7452
 26533 009a 40B9     		cbnz	r0, .L1790
 26534              	.LVL3327:
 26535              	.L1779:
12143:Core/Src/bno055.c ****     {
12144:Core/Src/bno055.c ****         /* set the operation mode of
12145:Core/Src/bno055.c ****          * previous operation mode*/
12146:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12147:Core/Src/bno055.c ****     }
12148:Core/Src/bno055.c **** 
12149:Core/Src/bno055.c ****     return com_rslt;
12150:Core/Src/bno055.c **** }
 26536              		.loc 1 12150 1 view .LVU7453
 26537 009c 2046     		mov	r0, r4
 26538 009e 03B0     		add	sp, sp, #12
 26539              	.LCFI739:
 26540              		.cfi_remember_state
 26541              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccWoU29M.s 			page 736


 26542              		@ sp needed
 26543 00a0 30BD     		pop	{r4, r5, pc}
 26544              	.LVL3328:
 26545              	.L1785:
 26546              	.LCFI740:
 26547              		.cfi_restore_state
12129:Core/Src/bno055.c ****                 }
 26548              		.loc 1 12129 30 view .LVU7454
 26549 00a2 4FF0FF34 		mov	r4, #-1
 26550              	.LVL3329:
12129:Core/Src/bno055.c ****                 }
 26551              		.loc 1 12129 30 view .LVU7455
 26552 00a6 F6E7     		b	.L1780
 26553              	.LVL3330:
 26554              	.L1786:
12124:Core/Src/bno055.c ****                     }
 26555              		.loc 1 12124 34 view .LVU7456
 26556 00a8 6FF00104 		mvn	r4, #1
 26557              	.LVL3331:
12124:Core/Src/bno055.c ****                     }
 26558              		.loc 1 12124 34 view .LVU7457
 26559 00ac F3E7     		b	.L1780
 26560              	.LVL3332:
 26561              	.L1790:
12146:Core/Src/bno055.c ****     }
 26562              		.loc 1 12146 9 is_stmt 1 view .LVU7458
12146:Core/Src/bno055.c ****     }
 26563              		.loc 1 12146 21 is_stmt 0 view .LVU7459
 26564 00ae FFF7FEFF 		bl	bno055_set_operation_mode
 26565              	.LVL3333:
12146:Core/Src/bno055.c ****     }
 26566              		.loc 1 12146 18 view .LVU7460
 26567 00b2 54FA80F4 		uxtab	r4, r4, r0
 26568              	.LVL3334:
12146:Core/Src/bno055.c ****     }
 26569              		.loc 1 12146 18 view .LVU7461
 26570 00b6 64B2     		sxtb	r4, r4
 26571              	.LVL3335:
12146:Core/Src/bno055.c ****     }
 26572              		.loc 1 12146 18 view .LVU7462
 26573 00b8 F0E7     		b	.L1779
 26574              	.LVL3336:
 26575              	.L1782:
12086:Core/Src/bno055.c ****     }
 26576              		.loc 1 12086 16 view .LVU7463
 26577 00ba 6FF07E04 		mvn	r4, #126
 26578 00be EDE7     		b	.L1779
 26579              	.L1792:
 26580              		.align	2
 26581              	.L1791:
 26582 00c0 00000000 		.word	.LANCHOR0
 26583              		.cfi_endproc
 26584              	.LFE186:
 26586              		.section	.text.bno055_get_gyro_range,"ax",%progbits
 26587              		.align	1
 26588              		.global	bno055_get_gyro_range
 26589              		.syntax unified
ARM GAS  /tmp/ccWoU29M.s 			page 737


 26590              		.thumb
 26591              		.thumb_func
 26592              		.fpu fpv4-sp-d16
 26594              	bno055_get_gyro_range:
 26595              	.LVL3337:
 26596              	.LFB187:
12151:Core/Src/bno055.c **** 
12152:Core/Src/bno055.c **** /*!
12153:Core/Src/bno055.c ****  *  @brief This API used to read the gyro range
12154:Core/Src/bno055.c ****  *  from page one register from 0x0A bit 0 to 3
12155:Core/Src/bno055.c ****  *
12156:Core/Src/bno055.c ****  *  @param gyro_range_u8 : The value of gyro range
12157:Core/Src/bno055.c ****  *
12158:Core/Src/bno055.c ****  *     gyro_range_u8 |   result
12159:Core/Src/bno055.c ****  * --------------------|-----------------
12160:Core/Src/bno055.c ****  *     0x00            | BNO055_GYRO_RANGE_2000DPS
12161:Core/Src/bno055.c ****  *     0x01            | BNO055_GYRO_RANGE_1000DPS
12162:Core/Src/bno055.c ****  *     0x02            | BNO055_GYRO_RANGE_500DPS
12163:Core/Src/bno055.c ****  *     0x03            | BNO055_GYRO_RANGE_250DPS
12164:Core/Src/bno055.c ****  *     0x04            | BNO055_GYRO_RANGE_125DPS
12165:Core/Src/bno055.c ****  *
12166:Core/Src/bno055.c ****  *  @return results of bus communication function
12167:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12168:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12169:Core/Src/bno055.c ****  *
12170:Core/Src/bno055.c ****  *
12171:Core/Src/bno055.c ****  */
12172:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_range(u8 *gyro_range_u8)
12173:Core/Src/bno055.c **** {
 26597              		.loc 1 12173 1 is_stmt 1 view -0
 26598              		.cfi_startproc
 26599              		@ args = 0, pretend = 0, frame = 8
 26600              		@ frame_needed = 0, uses_anonymous_args = 0
 26601              		.loc 1 12173 1 is_stmt 0 view .LVU7465
 26602 0000 30B5     		push	{r4, r5, lr}
 26603              	.LCFI741:
 26604              		.cfi_def_cfa_offset 12
 26605              		.cfi_offset 4, -12
 26606              		.cfi_offset 5, -8
 26607              		.cfi_offset 14, -4
 26608 0002 83B0     		sub	sp, sp, #12
 26609              	.LCFI742:
 26610              		.cfi_def_cfa_offset 24
12174:Core/Src/bno055.c ****     /* Variable used to return value of
12175:Core/Src/bno055.c ****      * communication routine*/
12176:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26611              		.loc 1 12176 5 is_stmt 1 view .LVU7466
 26612              	.LVL3338:
12177:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26613              		.loc 1 12177 5 view .LVU7467
 26614              		.loc 1 12177 8 is_stmt 0 view .LVU7468
 26615 0004 0023     		movs	r3, #0
 26616 0006 8DF80730 		strb	r3, [sp, #7]
12178:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26617              		.loc 1 12178 5 is_stmt 1 view .LVU7469
 26618              	.LVL3339:
12179:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 738


12180:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12181:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26619              		.loc 1 12181 5 view .LVU7470
 26620              		.loc 1 12181 18 is_stmt 0 view .LVU7471
 26621 000a 144B     		ldr	r3, .L1801
 26622 000c 1B68     		ldr	r3, [r3]
 26623              		.loc 1 12181 8 view .LVU7472
 26624 000e F3B1     		cbz	r3, .L1797
 26625 0010 0446     		mov	r4, r0
12182:Core/Src/bno055.c ****     {
12183:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12184:Core/Src/bno055.c ****     }
12185:Core/Src/bno055.c ****     else
12186:Core/Src/bno055.c ****     {
12187:Core/Src/bno055.c ****         /*condition check for page, gyro range is
12188:Core/Src/bno055.c ****          * available in the page one*/
12189:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 26626              		.loc 1 12189 9 is_stmt 1 view .LVU7473
 26627              		.loc 1 12189 21 is_stmt 0 view .LVU7474
 26628 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26629              		.loc 1 12189 12 view .LVU7475
 26630 0014 012B     		cmp	r3, #1
 26631 0016 14D1     		bne	.L1800
 26632              	.LVL3340:
 26633              	.L1795:
12190:Core/Src/bno055.c ****         {
12191:Core/Src/bno055.c ****             /* Write page as one */
12192:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12193:Core/Src/bno055.c ****         }
12194:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 26634              		.loc 1 12194 53 discriminator 1 view .LVU7476
 26635 0018 104B     		ldr	r3, .L1801
 26636 001a 1B68     		ldr	r3, [r3]
 26637 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26638              		.loc 1 12194 41 discriminator 1 view .LVU7477
 26639 001e 012B     		cmp	r3, #1
 26640 0020 18D1     		bne	.L1798
 26641              	.L1796:
12195:Core/Src/bno055.c ****         {
12196:Core/Src/bno055.c ****             /* Read the value of gyro range */
12197:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 26642              		.loc 1 12197 13 is_stmt 1 view .LVU7478
 26643              		.loc 1 12197 32 is_stmt 0 view .LVU7479
 26644 0022 0E4B     		ldr	r3, .L1801
 26645 0024 1868     		ldr	r0, [r3]
 26646 0026 0569     		ldr	r5, [r0, #16]
 26647              		.loc 1 12197 24 view .LVU7480
 26648 0028 0123     		movs	r3, #1
 26649 002a 0DF10702 		add	r2, sp, #7
 26650 002e 0A21     		movs	r1, #10
 26651 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26652 0032 A847     		blx	r5
 26653              	.LVL3341:
12198:Core/Src/bno055.c ****                                                       BNO055_GYRO_RANGE_REG,
12199:Core/Src/bno055.c ****                                                       &data_u8r,
12200:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12201:Core/Src/bno055.c ****             *gyro_range_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_RANGE);
ARM GAS  /tmp/ccWoU29M.s 			page 739


 26654              		.loc 1 12201 13 is_stmt 1 view .LVU7481
 26655              		.loc 1 12201 30 is_stmt 0 view .LVU7482
 26656 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26657 0038 03F00703 		and	r3, r3, #7
 26658              		.loc 1 12201 28 view .LVU7483
 26659 003c 2370     		strb	r3, [r4]
 26660              	.LVL3342:
 26661              	.L1794:
12202:Core/Src/bno055.c ****         }
12203:Core/Src/bno055.c ****         else
12204:Core/Src/bno055.c ****         {
12205:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12206:Core/Src/bno055.c ****         }
12207:Core/Src/bno055.c ****     }
12208:Core/Src/bno055.c **** 
12209:Core/Src/bno055.c ****     return com_rslt;
12210:Core/Src/bno055.c **** }
 26662              		.loc 1 12210 1 view .LVU7484
 26663 003e 03B0     		add	sp, sp, #12
 26664              	.LCFI743:
 26665              		.cfi_remember_state
 26666              		.cfi_def_cfa_offset 12
 26667              		@ sp needed
 26668 0040 30BD     		pop	{r4, r5, pc}
 26669              	.LVL3343:
 26670              	.L1800:
 26671              	.LCFI744:
 26672              		.cfi_restore_state
12192:Core/Src/bno055.c ****         }
 26673              		.loc 1 12192 13 is_stmt 1 view .LVU7485
12192:Core/Src/bno055.c ****         }
 26674              		.loc 1 12192 23 is_stmt 0 view .LVU7486
 26675 0042 0120     		movs	r0, #1
 26676              	.LVL3344:
12192:Core/Src/bno055.c ****         }
 26677              		.loc 1 12192 23 view .LVU7487
 26678 0044 FFF7FEFF 		bl	bno055_write_page_id
 26679              	.LVL3345:
12194:Core/Src/bno055.c ****         {
 26680              		.loc 1 12194 9 is_stmt 1 view .LVU7488
12194:Core/Src/bno055.c ****         {
 26681              		.loc 1 12194 12 is_stmt 0 view .LVU7489
 26682 0048 0028     		cmp	r0, #0
 26683 004a EAD0     		beq	.L1796
 26684 004c E4E7     		b	.L1795
 26685              	.LVL3346:
 26686              	.L1797:
12183:Core/Src/bno055.c ****     }
 26687              		.loc 1 12183 16 view .LVU7490
 26688 004e 6FF07E00 		mvn	r0, #126
 26689              	.LVL3347:
12183:Core/Src/bno055.c ****     }
 26690              		.loc 1 12183 16 view .LVU7491
 26691 0052 F4E7     		b	.L1794
 26692              	.LVL3348:
 26693              	.L1798:
12205:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 740


 26694              		.loc 1 12205 22 view .LVU7492
 26695 0054 4FF0FF30 		mov	r0, #-1
 26696 0058 F1E7     		b	.L1794
 26697              	.L1802:
 26698 005a 00BF     		.align	2
 26699              	.L1801:
 26700 005c 00000000 		.word	.LANCHOR0
 26701              		.cfi_endproc
 26702              	.LFE187:
 26704              		.section	.text.bno055_set_gyro_range,"ax",%progbits
 26705              		.align	1
 26706              		.global	bno055_set_gyro_range
 26707              		.syntax unified
 26708              		.thumb
 26709              		.thumb_func
 26710              		.fpu fpv4-sp-d16
 26712              	bno055_set_gyro_range:
 26713              	.LVL3349:
 26714              	.LFB188:
12211:Core/Src/bno055.c **** 
12212:Core/Src/bno055.c **** /*!
12213:Core/Src/bno055.c ****  *  @brief This API used to write the gyro range
12214:Core/Src/bno055.c ****  *  from page one register from 0x0A bit 0 to 3
12215:Core/Src/bno055.c ****  *
12216:Core/Src/bno055.c ****  *  @param gyro_range_u8 : The value of gyro range
12217:Core/Src/bno055.c ****  *
12218:Core/Src/bno055.c ****  *     gyro_range_u8 |   result
12219:Core/Src/bno055.c ****  * --------------------|-----------------
12220:Core/Src/bno055.c ****  *     0x00            | BNO055_GYRO_RANGE_2000DPS
12221:Core/Src/bno055.c ****  *     0x01            | BNO055_GYRO_RANGE_1000DPS
12222:Core/Src/bno055.c ****  *     0x02            | BNO055_GYRO_RANGE_500DPS
12223:Core/Src/bno055.c ****  *     0x03            | BNO055_GYRO_RANGE_250DPS
12224:Core/Src/bno055.c ****  *     0x04            | BNO055_GYRO_RANGE_125DPS
12225:Core/Src/bno055.c ****  *
12226:Core/Src/bno055.c ****  *  @return results of bus communication function
12227:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12228:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12229:Core/Src/bno055.c ****  *
12230:Core/Src/bno055.c ****  *
12231:Core/Src/bno055.c ****  */
12232:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_range(u8 gyro_range_u8)
12233:Core/Src/bno055.c **** {
 26715              		.loc 1 12233 1 is_stmt 1 view -0
 26716              		.cfi_startproc
 26717              		@ args = 0, pretend = 0, frame = 8
 26718              		@ frame_needed = 0, uses_anonymous_args = 0
 26719              		.loc 1 12233 1 is_stmt 0 view .LVU7494
 26720 0000 30B5     		push	{r4, r5, lr}
 26721              	.LCFI745:
 26722              		.cfi_def_cfa_offset 12
 26723              		.cfi_offset 4, -12
 26724              		.cfi_offset 5, -8
 26725              		.cfi_offset 14, -4
 26726 0002 83B0     		sub	sp, sp, #12
 26727              	.LCFI746:
 26728              		.cfi_def_cfa_offset 24
12234:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 741


 26729              		.loc 1 12234 5 is_stmt 1 view .LVU7495
 26730              	.LVL3350:
12235:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26731              		.loc 1 12235 5 view .LVU7496
 26732              		.loc 1 12235 8 is_stmt 0 view .LVU7497
 26733 0004 0023     		movs	r3, #0
 26734 0006 8DF80730 		strb	r3, [sp, #7]
12236:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26735              		.loc 1 12236 5 is_stmt 1 view .LVU7498
 26736              	.LVL3351:
12237:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 26737              		.loc 1 12237 5 view .LVU7499
12238:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 26738              		.loc 1 12238 5 view .LVU7500
 26739              		.loc 1 12238 8 is_stmt 0 view .LVU7501
 26740 000a 8DF80630 		strb	r3, [sp, #6]
12239:Core/Src/bno055.c **** 
12240:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12241:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26741              		.loc 1 12241 5 is_stmt 1 view .LVU7502
 26742              		.loc 1 12241 18 is_stmt 0 view .LVU7503
 26743 000e 2C4B     		ldr	r3, .L1816
 26744 0010 1B68     		ldr	r3, [r3]
 26745              		.loc 1 12241 8 view .LVU7504
 26746 0012 002B     		cmp	r3, #0
 26747 0014 50D0     		beq	.L1807
 26748 0016 0546     		mov	r5, r0
12242:Core/Src/bno055.c ****     {
12243:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12244:Core/Src/bno055.c ****     }
12245:Core/Src/bno055.c ****     else
12246:Core/Src/bno055.c ****     {
12247:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12248:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12249:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12250:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 26749              		.loc 1 12250 9 is_stmt 1 view .LVU7505
 26750              		.loc 1 12250 19 is_stmt 0 view .LVU7506
 26751 0018 0DF10600 		add	r0, sp, #6
 26752              	.LVL3352:
 26753              		.loc 1 12250 19 view .LVU7507
 26754 001c FFF7FEFF 		bl	bno055_get_operation_mode
 26755              	.LVL3353:
12251:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 26756              		.loc 1 12251 9 is_stmt 1 view .LVU7508
 26757              		.loc 1 12251 12 is_stmt 0 view .LVU7509
 26758 0020 0446     		mov	r4, r0
 26759 0022 0028     		cmp	r0, #0
 26760 0024 34D1     		bne	.L1808
12252:Core/Src/bno055.c ****         {
12253:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26761              		.loc 1 12253 13 is_stmt 1 view .LVU7510
 26762              		.loc 1 12253 32 is_stmt 0 view .LVU7511
 26763 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 26764              		.loc 1 12253 16 view .LVU7512
 26765 002a 1BB9     		cbnz	r3, .L1813
 26766              	.LVL3354:
ARM GAS  /tmp/ccWoU29M.s 			page 742


 26767              	.L1806:
12254:Core/Src/bno055.c ****             {
12255:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12256:Core/Src/bno055.c ****             }
12257:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 26768              		.loc 1 12257 13 is_stmt 1 view .LVU7513
 26769              		.loc 1 12257 16 is_stmt 0 view .LVU7514
 26770 002c 44B1     		cbz	r4, .L1814
12258:Core/Src/bno055.c ****             {
12259:Core/Src/bno055.c ****                 /* Write page as one */
12260:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12261:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12262:Core/Src/bno055.c ****                 {
12263:Core/Src/bno055.c ****                     if (gyro_range_u8 < BNO055_GYRO_RANGE)
12264:Core/Src/bno055.c ****                     {
12265:Core/Src/bno055.c ****                         /* Write the value of gyro range*/
12266:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12267:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
12268:Core/Src/bno055.c ****                                                                   &data_u8r,
12269:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12270:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12271:Core/Src/bno055.c ****                         {
12272:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_RANGE, gyro_range_
12273:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12274:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
12275:Core/Src/bno055.c ****                                                                         &data_u8r,
12276:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12277:Core/Src/bno055.c ****                         }
12278:Core/Src/bno055.c ****                     }
12279:Core/Src/bno055.c ****                     else
12280:Core/Src/bno055.c ****                     {
12281:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12282:Core/Src/bno055.c ****                     }
12283:Core/Src/bno055.c ****                 }
12284:Core/Src/bno055.c ****                 else
12285:Core/Src/bno055.c ****                 {
12286:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12287:Core/Src/bno055.c ****                 }
12288:Core/Src/bno055.c ****             }
12289:Core/Src/bno055.c ****             else
12290:Core/Src/bno055.c ****             {
12291:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 26771              		.loc 1 12291 26 view .LVU7515
 26772 002e 4FF0FF34 		mov	r4, #-1
 26773              	.LVL3355:
 26774              		.loc 1 12291 26 view .LVU7516
 26775 0032 2FE0     		b	.L1805
 26776              	.LVL3356:
 26777              	.L1813:
12255:Core/Src/bno055.c ****             }
 26778              		.loc 1 12255 17 is_stmt 1 view .LVU7517
12255:Core/Src/bno055.c ****             }
 26779              		.loc 1 12255 28 is_stmt 0 view .LVU7518
 26780 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 26781              	.LVL3357:
12255:Core/Src/bno055.c ****             }
 26782              		.loc 1 12255 25 view .LVU7519
ARM GAS  /tmp/ccWoU29M.s 			page 743


 26783 0038 54FA80F4 		uxtab	r4, r4, r0
 26784 003c 64B2     		sxtb	r4, r4
 26785              	.LVL3358:
12255:Core/Src/bno055.c ****             }
 26786              		.loc 1 12255 25 view .LVU7520
 26787 003e F5E7     		b	.L1806
 26788              	.L1814:
12260:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 26789              		.loc 1 12260 17 is_stmt 1 view .LVU7521
12260:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 26790              		.loc 1 12260 30 is_stmt 0 view .LVU7522
 26791 0040 0120     		movs	r0, #1
 26792 0042 FFF7FEFF 		bl	bno055_write_page_id
 26793              	.LVL3359:
12261:Core/Src/bno055.c ****                 {
 26794              		.loc 1 12261 17 is_stmt 1 view .LVU7523
12261:Core/Src/bno055.c ****                 {
 26795              		.loc 1 12261 20 is_stmt 0 view .LVU7524
 26796 0046 58BB     		cbnz	r0, .L1810
12263:Core/Src/bno055.c ****                     {
 26797              		.loc 1 12263 21 is_stmt 1 view .LVU7525
12263:Core/Src/bno055.c ****                     {
 26798              		.loc 1 12263 24 is_stmt 0 view .LVU7526
 26799 0048 042D     		cmp	r5, #4
 26800 004a 2CD8     		bhi	.L1811
12266:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
 26801              		.loc 1 12266 25 is_stmt 1 view .LVU7527
12266:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
 26802              		.loc 1 12266 44 is_stmt 0 view .LVU7528
 26803 004c 1C4B     		ldr	r3, .L1816
 26804 004e 1868     		ldr	r0, [r3]
 26805              	.LVL3360:
12266:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
 26806              		.loc 1 12266 44 view .LVU7529
 26807 0050 0469     		ldr	r4, [r0, #16]
 26808              	.LVL3361:
12266:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
 26809              		.loc 1 12266 36 view .LVU7530
 26810 0052 0123     		movs	r3, #1
 26811 0054 0DF10702 		add	r2, sp, #7
 26812 0058 0A21     		movs	r1, #10
 26813 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26814 005c A047     		blx	r4
 26815              	.LVL3362:
12270:Core/Src/bno055.c ****                         {
 26816              		.loc 1 12270 25 is_stmt 1 view .LVU7531
12270:Core/Src/bno055.c ****                         {
 26817              		.loc 1 12270 28 is_stmt 0 view .LVU7532
 26818 005e 0446     		mov	r4, r0
 26819 0060 C0B9     		cbnz	r0, .L1805
12272:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26820              		.loc 1 12272 29 is_stmt 1 view .LVU7533
12272:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26821              		.loc 1 12272 40 is_stmt 0 view .LVU7534
 26822 0062 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 26823              	.LVL3363:
12272:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccWoU29M.s 			page 744


 26824              		.loc 1 12272 40 view .LVU7535
 26825 0066 20F00700 		bic	r0, r0, #7
 26826 006a 43B2     		sxtb	r3, r0
 26827 006c 05F00700 		and	r0, r5, #7
 26828 0070 1843     		orrs	r0, r0, r3
12272:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26829              		.loc 1 12272 38 view .LVU7536
 26830 0072 8DF80700 		strb	r0, [sp, #7]
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 26831              		.loc 1 12273 29 is_stmt 1 view .LVU7537
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 26832              		.loc 1 12273 49 is_stmt 0 view .LVU7538
 26833 0076 124B     		ldr	r3, .L1816
 26834 0078 1868     		ldr	r0, [r3]
 26835 007a C568     		ldr	r5, [r0, #12]
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 26836              		.loc 1 12273 41 view .LVU7539
 26837 007c 0123     		movs	r3, #1
 26838 007e 0DF10702 		add	r2, sp, #7
 26839 0082 0A21     		movs	r1, #10
 26840 0084 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26841 0086 A847     		blx	r5
 26842              	.LVL3364:
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 26843              		.loc 1 12273 38 view .LVU7540
 26844 0088 54FA80F4 		uxtab	r4, r4, r0
 26845 008c 64B2     		sxtb	r4, r4
 26846              	.LVL3365:
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 26847              		.loc 1 12273 38 view .LVU7541
 26848 008e 01E0     		b	.L1805
 26849              	.LVL3366:
 26850              	.L1808:
12292:Core/Src/bno055.c ****             }
12293:Core/Src/bno055.c ****         }
12294:Core/Src/bno055.c ****         else
12295:Core/Src/bno055.c ****         {
12296:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 26851              		.loc 1 12296 22 view .LVU7542
 26852 0090 4FF0FF34 		mov	r4, #-1
 26853              	.LVL3367:
 26854              	.L1805:
12297:Core/Src/bno055.c ****         }
12298:Core/Src/bno055.c ****     }
12299:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26855              		.loc 1 12299 5 is_stmt 1 view .LVU7543
 26856              		.loc 1 12299 24 is_stmt 0 view .LVU7544
 26857 0094 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 26858              		.loc 1 12299 8 view .LVU7545
 26859 0098 40B9     		cbnz	r0, .L1815
 26860              	.LVL3368:
 26861              	.L1804:
12300:Core/Src/bno055.c ****     {
12301:Core/Src/bno055.c ****         /* set the operation mode of
12302:Core/Src/bno055.c ****          * previous operation mode*/
12303:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12304:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 745


12305:Core/Src/bno055.c **** 
12306:Core/Src/bno055.c ****     return com_rslt;
12307:Core/Src/bno055.c **** }
 26862              		.loc 1 12307 1 view .LVU7546
 26863 009a 2046     		mov	r0, r4
 26864 009c 03B0     		add	sp, sp, #12
 26865              	.LCFI747:
 26866              		.cfi_remember_state
 26867              		.cfi_def_cfa_offset 12
 26868              		@ sp needed
 26869 009e 30BD     		pop	{r4, r5, pc}
 26870              	.LVL3369:
 26871              	.L1810:
 26872              	.LCFI748:
 26873              		.cfi_restore_state
12286:Core/Src/bno055.c ****                 }
 26874              		.loc 1 12286 30 view .LVU7547
 26875 00a0 4FF0FF34 		mov	r4, #-1
 26876              	.LVL3370:
12286:Core/Src/bno055.c ****                 }
 26877              		.loc 1 12286 30 view .LVU7548
 26878 00a4 F6E7     		b	.L1805
 26879              	.LVL3371:
 26880              	.L1811:
12281:Core/Src/bno055.c ****                     }
 26881              		.loc 1 12281 34 view .LVU7549
 26882 00a6 6FF00104 		mvn	r4, #1
 26883              	.LVL3372:
12281:Core/Src/bno055.c ****                     }
 26884              		.loc 1 12281 34 view .LVU7550
 26885 00aa F3E7     		b	.L1805
 26886              	.LVL3373:
 26887              	.L1815:
12303:Core/Src/bno055.c ****     }
 26888              		.loc 1 12303 9 is_stmt 1 view .LVU7551
12303:Core/Src/bno055.c ****     }
 26889              		.loc 1 12303 21 is_stmt 0 view .LVU7552
 26890 00ac FFF7FEFF 		bl	bno055_set_operation_mode
 26891              	.LVL3374:
12303:Core/Src/bno055.c ****     }
 26892              		.loc 1 12303 18 view .LVU7553
 26893 00b0 54FA80F4 		uxtab	r4, r4, r0
 26894              	.LVL3375:
12303:Core/Src/bno055.c ****     }
 26895              		.loc 1 12303 18 view .LVU7554
 26896 00b4 64B2     		sxtb	r4, r4
 26897              	.LVL3376:
12303:Core/Src/bno055.c ****     }
 26898              		.loc 1 12303 18 view .LVU7555
 26899 00b6 F0E7     		b	.L1804
 26900              	.LVL3377:
 26901              	.L1807:
12243:Core/Src/bno055.c ****     }
 26902              		.loc 1 12243 16 view .LVU7556
 26903 00b8 6FF07E04 		mvn	r4, #126
 26904 00bc EDE7     		b	.L1804
 26905              	.L1817:
ARM GAS  /tmp/ccWoU29M.s 			page 746


 26906 00be 00BF     		.align	2
 26907              	.L1816:
 26908 00c0 00000000 		.word	.LANCHOR0
 26909              		.cfi_endproc
 26910              	.LFE188:
 26912              		.section	.text.bno055_get_gyro_bw,"ax",%progbits
 26913              		.align	1
 26914              		.global	bno055_get_gyro_bw
 26915              		.syntax unified
 26916              		.thumb
 26917              		.thumb_func
 26918              		.fpu fpv4-sp-d16
 26920              	bno055_get_gyro_bw:
 26921              	.LVL3378:
 26922              	.LFB189:
12308:Core/Src/bno055.c **** 
12309:Core/Src/bno055.c **** /*!
12310:Core/Src/bno055.c ****  *  @brief This API used to read the gyro bandwidth
12311:Core/Src/bno055.c ****  *  from page one register from 0x0A bit 3 to 5
12312:Core/Src/bno055.c ****  *
12313:Core/Src/bno055.c ****  *  @param gyro_bw_u8 : The value of gyro bandwidth
12314:Core/Src/bno055.c ****  *
12315:Core/Src/bno055.c ****  *     gyro_bw_u8    |   result
12316:Core/Src/bno055.c ****  * --------------------|-----------------
12317:Core/Src/bno055.c ****  *     0x00            | BNO055_GYRO_BW_523HZ
12318:Core/Src/bno055.c ****  *     0x01            | BNO055_GYRO_BW_230HZ
12319:Core/Src/bno055.c ****  *     0x02            | BNO055_GYRO_BW_116HZ
12320:Core/Src/bno055.c ****  *     0x03            | BNO055_GYRO_BW_47HZ
12321:Core/Src/bno055.c ****  *     0x04            | BNO055_GYRO_BW_23HZ
12322:Core/Src/bno055.c ****  *     0x05            | BNO055_GYRO_BW_12HZ
12323:Core/Src/bno055.c ****  *     0x06            | BNO055_GYRO_BW_64HZ
12324:Core/Src/bno055.c ****  *     0x07            | BNO055_GYRO_BW_32HZ
12325:Core/Src/bno055.c ****  *
12326:Core/Src/bno055.c ****  *  @return results of bus communication function
12327:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12328:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12329:Core/Src/bno055.c ****  *
12330:Core/Src/bno055.c ****  *
12331:Core/Src/bno055.c ****  */
12332:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_bw(u8 *gyro_bw_u8)
12333:Core/Src/bno055.c **** {
 26923              		.loc 1 12333 1 is_stmt 1 view -0
 26924              		.cfi_startproc
 26925              		@ args = 0, pretend = 0, frame = 8
 26926              		@ frame_needed = 0, uses_anonymous_args = 0
 26927              		.loc 1 12333 1 is_stmt 0 view .LVU7558
 26928 0000 30B5     		push	{r4, r5, lr}
 26929              	.LCFI749:
 26930              		.cfi_def_cfa_offset 12
 26931              		.cfi_offset 4, -12
 26932              		.cfi_offset 5, -8
 26933              		.cfi_offset 14, -4
 26934 0002 83B0     		sub	sp, sp, #12
 26935              	.LCFI750:
 26936              		.cfi_def_cfa_offset 24
12334:Core/Src/bno055.c ****     /* Variable used to return value of
12335:Core/Src/bno055.c ****      * communication routine*/
ARM GAS  /tmp/ccWoU29M.s 			page 747


12336:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26937              		.loc 1 12336 5 is_stmt 1 view .LVU7559
 26938              	.LVL3379:
12337:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26939              		.loc 1 12337 5 view .LVU7560
 26940              		.loc 1 12337 8 is_stmt 0 view .LVU7561
 26941 0004 0023     		movs	r3, #0
 26942 0006 8DF80730 		strb	r3, [sp, #7]
12338:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26943              		.loc 1 12338 5 is_stmt 1 view .LVU7562
 26944              	.LVL3380:
12339:Core/Src/bno055.c **** 
12340:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12341:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26945              		.loc 1 12341 5 view .LVU7563
 26946              		.loc 1 12341 18 is_stmt 0 view .LVU7564
 26947 000a 144B     		ldr	r3, .L1826
 26948 000c 1B68     		ldr	r3, [r3]
 26949              		.loc 1 12341 8 view .LVU7565
 26950 000e F3B1     		cbz	r3, .L1822
 26951 0010 0446     		mov	r4, r0
12342:Core/Src/bno055.c ****     {
12343:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12344:Core/Src/bno055.c ****     }
12345:Core/Src/bno055.c ****     else
12346:Core/Src/bno055.c ****     {
12347:Core/Src/bno055.c ****         /*condition check for page, gyro bandwidth is
12348:Core/Src/bno055.c ****          * available in the page one*/
12349:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 26952              		.loc 1 12349 9 is_stmt 1 view .LVU7566
 26953              		.loc 1 12349 21 is_stmt 0 view .LVU7567
 26954 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26955              		.loc 1 12349 12 view .LVU7568
 26956 0014 012B     		cmp	r3, #1
 26957 0016 14D1     		bne	.L1825
 26958              	.LVL3381:
 26959              	.L1820:
12350:Core/Src/bno055.c ****         {
12351:Core/Src/bno055.c ****             /* Write page as one */
12352:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12353:Core/Src/bno055.c ****         }
12354:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 26960              		.loc 1 12354 53 discriminator 1 view .LVU7569
 26961 0018 104B     		ldr	r3, .L1826
 26962 001a 1B68     		ldr	r3, [r3]
 26963 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26964              		.loc 1 12354 41 discriminator 1 view .LVU7570
 26965 001e 012B     		cmp	r3, #1
 26966 0020 18D1     		bne	.L1823
 26967              	.L1821:
12355:Core/Src/bno055.c ****         {
12356:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 26968              		.loc 1 12356 13 is_stmt 1 view .LVU7571
 26969              		.loc 1 12356 32 is_stmt 0 view .LVU7572
 26970 0022 0E4B     		ldr	r3, .L1826
 26971 0024 1868     		ldr	r0, [r3]
 26972 0026 0569     		ldr	r5, [r0, #16]
ARM GAS  /tmp/ccWoU29M.s 			page 748


 26973              		.loc 1 12356 24 view .LVU7573
 26974 0028 0123     		movs	r3, #1
 26975 002a 0DF10702 		add	r2, sp, #7
 26976 002e 0A21     		movs	r1, #10
 26977 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26978 0032 A847     		blx	r5
 26979              	.LVL3382:
12357:Core/Src/bno055.c ****                                                       BNO055_GYRO_BW_REG,
12358:Core/Src/bno055.c ****                                                       &data_u8r,
12359:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12360:Core/Src/bno055.c ****             *gyro_bw_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_BW);
 26980              		.loc 1 12360 13 is_stmt 1 view .LVU7574
 26981              		.loc 1 12360 27 is_stmt 0 view .LVU7575
 26982 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26983 0038 C3F3C203 		ubfx	r3, r3, #3, #3
 26984              		.loc 1 12360 25 view .LVU7576
 26985 003c 2370     		strb	r3, [r4]
 26986              	.LVL3383:
 26987              	.L1819:
12361:Core/Src/bno055.c ****         }
12362:Core/Src/bno055.c ****         else
12363:Core/Src/bno055.c ****         {
12364:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12365:Core/Src/bno055.c ****         }
12366:Core/Src/bno055.c ****     }
12367:Core/Src/bno055.c **** 
12368:Core/Src/bno055.c ****     return com_rslt;
12369:Core/Src/bno055.c **** }
 26988              		.loc 1 12369 1 view .LVU7577
 26989 003e 03B0     		add	sp, sp, #12
 26990              	.LCFI751:
 26991              		.cfi_remember_state
 26992              		.cfi_def_cfa_offset 12
 26993              		@ sp needed
 26994 0040 30BD     		pop	{r4, r5, pc}
 26995              	.LVL3384:
 26996              	.L1825:
 26997              	.LCFI752:
 26998              		.cfi_restore_state
12352:Core/Src/bno055.c ****         }
 26999              		.loc 1 12352 13 is_stmt 1 view .LVU7578
12352:Core/Src/bno055.c ****         }
 27000              		.loc 1 12352 23 is_stmt 0 view .LVU7579
 27001 0042 0120     		movs	r0, #1
 27002              	.LVL3385:
12352:Core/Src/bno055.c ****         }
 27003              		.loc 1 12352 23 view .LVU7580
 27004 0044 FFF7FEFF 		bl	bno055_write_page_id
 27005              	.LVL3386:
12354:Core/Src/bno055.c ****         {
 27006              		.loc 1 12354 9 is_stmt 1 view .LVU7581
12354:Core/Src/bno055.c ****         {
 27007              		.loc 1 12354 12 is_stmt 0 view .LVU7582
 27008 0048 0028     		cmp	r0, #0
 27009 004a EAD0     		beq	.L1821
 27010 004c E4E7     		b	.L1820
 27011              	.LVL3387:
ARM GAS  /tmp/ccWoU29M.s 			page 749


 27012              	.L1822:
12343:Core/Src/bno055.c ****     }
 27013              		.loc 1 12343 16 view .LVU7583
 27014 004e 6FF07E00 		mvn	r0, #126
 27015              	.LVL3388:
12343:Core/Src/bno055.c ****     }
 27016              		.loc 1 12343 16 view .LVU7584
 27017 0052 F4E7     		b	.L1819
 27018              	.LVL3389:
 27019              	.L1823:
12364:Core/Src/bno055.c ****         }
 27020              		.loc 1 12364 22 view .LVU7585
 27021 0054 4FF0FF30 		mov	r0, #-1
 27022 0058 F1E7     		b	.L1819
 27023              	.L1827:
 27024 005a 00BF     		.align	2
 27025              	.L1826:
 27026 005c 00000000 		.word	.LANCHOR0
 27027              		.cfi_endproc
 27028              	.LFE189:
 27030              		.section	.text.bno055_get_gyro_power_mode,"ax",%progbits
 27031              		.align	1
 27032              		.global	bno055_get_gyro_power_mode
 27033              		.syntax unified
 27034              		.thumb
 27035              		.thumb_func
 27036              		.fpu fpv4-sp-d16
 27038              	bno055_get_gyro_power_mode:
 27039              	.LVL3390:
 27040              	.LFB191:
12370:Core/Src/bno055.c **** 
12371:Core/Src/bno055.c **** /*!
12372:Core/Src/bno055.c ****  *  @brief This API used to write the gyro bandwidth
12373:Core/Src/bno055.c ****  *  from page one register from 0x0A bit 3 to 5
12374:Core/Src/bno055.c ****  *
12375:Core/Src/bno055.c ****  *  @param gyro_bw_u8 : The value of gyro bandwidth
12376:Core/Src/bno055.c ****  *
12377:Core/Src/bno055.c ****  *     gyro_bw_u8    |   result
12378:Core/Src/bno055.c ****  * --------------------|-----------------
12379:Core/Src/bno055.c ****  *     0x00            | BNO055_GYRO_BW_523HZ
12380:Core/Src/bno055.c ****  *     0x01            | BNO055_GYRO_BW_230HZ
12381:Core/Src/bno055.c ****  *     0x02            | BNO055_GYRO_BW_116HZ
12382:Core/Src/bno055.c ****  *     0x03            | BNO055_GYRO_BW_47HZ
12383:Core/Src/bno055.c ****  *     0x04            | BNO055_GYRO_BW_23HZ
12384:Core/Src/bno055.c ****  *     0x05            | BNO055_GYRO_BW_12HZ
12385:Core/Src/bno055.c ****  *     0x06            | BNO055_GYRO_BW_64HZ
12386:Core/Src/bno055.c ****  *     0x07            | BNO055_GYRO_BW_32HZ
12387:Core/Src/bno055.c ****  *
12388:Core/Src/bno055.c ****  *  @return results of bus communication function
12389:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12390:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12391:Core/Src/bno055.c ****  *
12392:Core/Src/bno055.c ****  *
12393:Core/Src/bno055.c ****  */
12394:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_bw(u8 gyro_bw_u8)
12395:Core/Src/bno055.c **** {
12396:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 750


12397:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
12398:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
12399:Core/Src/bno055.c ****     u8 gyro_opmode = BNO055_INIT_VALUE;
12400:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
12401:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
12402:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
12403:Core/Src/bno055.c **** 
12404:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12405:Core/Src/bno055.c ****     if (p_bno055 == NULL)
12406:Core/Src/bno055.c ****     {
12407:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12408:Core/Src/bno055.c ****     }
12409:Core/Src/bno055.c ****     else
12410:Core/Src/bno055.c ****     {
12411:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12412:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12413:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12414:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
12415:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
12416:Core/Src/bno055.c ****         {
12417:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
12418:Core/Src/bno055.c ****             {
12419:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12420:Core/Src/bno055.c ****             }
12421:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
12422:Core/Src/bno055.c ****             {
12423:Core/Src/bno055.c ****                 /* Write page as one */
12424:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12425:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12426:Core/Src/bno055.c ****                 {
12427:Core/Src/bno055.c ****                     /* Write the value of gyro bandwidth */
12428:Core/Src/bno055.c ****                     if ((gyro_bw_u8 == BNO055_INIT_VALUE || gyro_bw_u8 > BNO055_INIT_VALUE) &&
12429:Core/Src/bno055.c ****                         gyro_bw_u8 < BNO055_ACCEL_GYRO_BW_RANGE)
12430:Core/Src/bno055.c ****                     {
12431:Core/Src/bno055.c ****                         switch (gyro_bw_u8)
12432:Core/Src/bno055.c ****                         {
12433:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_523HZ:
12434:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_523HZ;
12435:Core/Src/bno055.c ****                                 break;
12436:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_230HZ:
12437:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_230HZ;
12438:Core/Src/bno055.c ****                                 break;
12439:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_116HZ:
12440:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_116HZ;
12441:Core/Src/bno055.c ****                                 break;
12442:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_47HZ:
12443:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_47HZ;
12444:Core/Src/bno055.c ****                                 break;
12445:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_23HZ:
12446:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_23HZ;
12447:Core/Src/bno055.c ****                                 break;
12448:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_12HZ:
12449:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_12HZ;
12450:Core/Src/bno055.c ****                                 break;
12451:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_64HZ:
12452:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_64HZ;
12453:Core/Src/bno055.c ****                                 break;
ARM GAS  /tmp/ccWoU29M.s 			page 751


12454:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_32HZ:
12455:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_32HZ;
12456:Core/Src/bno055.c ****                                 break;
12457:Core/Src/bno055.c ****                             default:
12458:Core/Src/bno055.c ****                                 break;
12459:Core/Src/bno055.c ****                         }
12460:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12461:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
12462:Core/Src/bno055.c ****                                                                   &data_u8r,
12463:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12464:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12465:Core/Src/bno055.c ****                         {
12466:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_BW, gyro_bw_u8);
12467:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12468:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
12469:Core/Src/bno055.c ****                                                                         &data_u8r,
12470:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12471:Core/Src/bno055.c ****                         }
12472:Core/Src/bno055.c ****                         com_rslt = bno055_get_gyro_power_mode(&gyro_opmode);
12473:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12474:Core/Src/bno055.c ****                         {
12475:Core/Src/bno055.c ****                             if (gyro_opmode == BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE)
12476:Core/Src/bno055.c ****                             {
12477:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
12478:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
12479:Core/Src/bno055.c ****                                 {
12480:Core/Src/bno055.c ****                                     com_rslt += bno055_gyro_set_auto_sleep_durn(gyro_auto_sleep_dur
12481:Core/Src/bno055.c ****                                 }
12482:Core/Src/bno055.c ****                             }
12483:Core/Src/bno055.c ****                         }
12484:Core/Src/bno055.c ****                     }
12485:Core/Src/bno055.c ****                     else
12486:Core/Src/bno055.c ****                     {
12487:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12488:Core/Src/bno055.c ****                     }
12489:Core/Src/bno055.c ****                 }
12490:Core/Src/bno055.c ****                 else
12491:Core/Src/bno055.c ****                 {
12492:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12493:Core/Src/bno055.c ****                 }
12494:Core/Src/bno055.c ****             }
12495:Core/Src/bno055.c ****             else
12496:Core/Src/bno055.c ****             {
12497:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
12498:Core/Src/bno055.c ****             }
12499:Core/Src/bno055.c ****         }
12500:Core/Src/bno055.c ****         else
12501:Core/Src/bno055.c ****         {
12502:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12503:Core/Src/bno055.c ****         }
12504:Core/Src/bno055.c ****     }
12505:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
12506:Core/Src/bno055.c ****     {
12507:Core/Src/bno055.c ****         /* set the operation mode of
12508:Core/Src/bno055.c ****          * previous operation mode*/
12509:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12510:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 752


12511:Core/Src/bno055.c **** 
12512:Core/Src/bno055.c ****     return com_rslt;
12513:Core/Src/bno055.c **** }
12514:Core/Src/bno055.c **** 
12515:Core/Src/bno055.c **** /*!
12516:Core/Src/bno055.c ****  *  @brief This API used to read the gyro power mode
12517:Core/Src/bno055.c ****  *  from page one register from 0x0B bit 0 to 2
12518:Core/Src/bno055.c ****  *
12519:Core/Src/bno055.c ****  *  @param gyro_power_mode_u8 : The value of gyro power mode
12520:Core/Src/bno055.c ****  *
12521:Core/Src/bno055.c ****  *  gyro_power_mode_u8 |          result
12522:Core/Src/bno055.c ****  * ----------------------|----------------------------
12523:Core/Src/bno055.c ****  *     0x00              | GYRO_OPR_MODE_NORMAL
12524:Core/Src/bno055.c ****  *     0x01              | GYRO_OPR_MODE_FASTPOWERUP
12525:Core/Src/bno055.c ****  *     0x02              | GYRO_OPR_MODE_DEEPSUSPEND
12526:Core/Src/bno055.c ****  *     0x03              | GYRO_OPR_MODE_SUSPEND
12527:Core/Src/bno055.c ****  *     0x04              | GYRO_OPR_MODE_ADVANCE_POWERSAVE
12528:Core/Src/bno055.c ****  *
12529:Core/Src/bno055.c ****  *  @return results of bus communication function
12530:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12531:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12532:Core/Src/bno055.c ****  *
12533:Core/Src/bno055.c ****  *
12534:Core/Src/bno055.c ****  */
12535:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_power_mode(u8 *gyro_power_mode_u8)
12536:Core/Src/bno055.c **** {
 27041              		.loc 1 12536 1 is_stmt 1 view -0
 27042              		.cfi_startproc
 27043              		@ args = 0, pretend = 0, frame = 8
 27044              		@ frame_needed = 0, uses_anonymous_args = 0
 27045              		.loc 1 12536 1 is_stmt 0 view .LVU7587
 27046 0000 30B5     		push	{r4, r5, lr}
 27047              	.LCFI753:
 27048              		.cfi_def_cfa_offset 12
 27049              		.cfi_offset 4, -12
 27050              		.cfi_offset 5, -8
 27051              		.cfi_offset 14, -4
 27052 0002 83B0     		sub	sp, sp, #12
 27053              	.LCFI754:
 27054              		.cfi_def_cfa_offset 24
12537:Core/Src/bno055.c ****     /* Variable used to return value of
12538:Core/Src/bno055.c ****      * communication routine*/
12539:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27055              		.loc 1 12539 5 is_stmt 1 view .LVU7588
 27056              	.LVL3391:
12540:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27057              		.loc 1 12540 5 view .LVU7589
 27058              		.loc 1 12540 8 is_stmt 0 view .LVU7590
 27059 0004 0023     		movs	r3, #0
 27060 0006 8DF80730 		strb	r3, [sp, #7]
12541:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27061              		.loc 1 12541 5 is_stmt 1 view .LVU7591
 27062              	.LVL3392:
12542:Core/Src/bno055.c **** 
12543:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12544:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27063              		.loc 1 12544 5 view .LVU7592
ARM GAS  /tmp/ccWoU29M.s 			page 753


 27064              		.loc 1 12544 18 is_stmt 0 view .LVU7593
 27065 000a 144B     		ldr	r3, .L1836
 27066 000c 1B68     		ldr	r3, [r3]
 27067              		.loc 1 12544 8 view .LVU7594
 27068 000e F3B1     		cbz	r3, .L1832
 27069 0010 0446     		mov	r4, r0
12545:Core/Src/bno055.c ****     {
12546:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12547:Core/Src/bno055.c ****     }
12548:Core/Src/bno055.c ****     else
12549:Core/Src/bno055.c ****     {
12550:Core/Src/bno055.c ****         /*condition check for page, gyro power mode is
12551:Core/Src/bno055.c ****          * available in the page one*/
12552:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 27070              		.loc 1 12552 9 is_stmt 1 view .LVU7595
 27071              		.loc 1 12552 21 is_stmt 0 view .LVU7596
 27072 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27073              		.loc 1 12552 12 view .LVU7597
 27074 0014 012B     		cmp	r3, #1
 27075 0016 14D1     		bne	.L1835
 27076              	.LVL3393:
 27077              	.L1830:
12553:Core/Src/bno055.c ****         {
12554:Core/Src/bno055.c ****             /* Write page as one */
12555:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12556:Core/Src/bno055.c ****         }
12557:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 27078              		.loc 1 12557 53 discriminator 1 view .LVU7598
 27079 0018 104B     		ldr	r3, .L1836
 27080 001a 1B68     		ldr	r3, [r3]
 27081 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27082              		.loc 1 12557 41 discriminator 1 view .LVU7599
 27083 001e 012B     		cmp	r3, #1
 27084 0020 18D1     		bne	.L1833
 27085              	.L1831:
12558:Core/Src/bno055.c ****         {
12559:Core/Src/bno055.c ****             /* Write the value of gyro power mode*/
12560:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 27086              		.loc 1 12560 13 is_stmt 1 view .LVU7600
 27087              		.loc 1 12560 32 is_stmt 0 view .LVU7601
 27088 0022 0E4B     		ldr	r3, .L1836
 27089 0024 1868     		ldr	r0, [r3]
 27090 0026 0569     		ldr	r5, [r0, #16]
 27091              		.loc 1 12560 24 view .LVU7602
 27092 0028 0123     		movs	r3, #1
 27093 002a 0DF10702 		add	r2, sp, #7
 27094 002e 0B21     		movs	r1, #11
 27095 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27096 0032 A847     		blx	r5
 27097              	.LVL3394:
12561:Core/Src/bno055.c ****                                                       BNO055_GYRO_POWER_MODE_REG,
12562:Core/Src/bno055.c ****                                                       &data_u8r,
12563:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12564:Core/Src/bno055.c ****             *gyro_power_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_POWER_MODE);
 27098              		.loc 1 12564 13 is_stmt 1 view .LVU7603
 27099              		.loc 1 12564 35 is_stmt 0 view .LVU7604
 27100 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 754


 27101 0038 03F00703 		and	r3, r3, #7
 27102              		.loc 1 12564 33 view .LVU7605
 27103 003c 2370     		strb	r3, [r4]
 27104              	.LVL3395:
 27105              	.L1829:
12565:Core/Src/bno055.c ****         }
12566:Core/Src/bno055.c ****         else
12567:Core/Src/bno055.c ****         {
12568:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12569:Core/Src/bno055.c ****         }
12570:Core/Src/bno055.c ****     }
12571:Core/Src/bno055.c **** 
12572:Core/Src/bno055.c ****     return com_rslt;
12573:Core/Src/bno055.c **** }
 27106              		.loc 1 12573 1 view .LVU7606
 27107 003e 03B0     		add	sp, sp, #12
 27108              	.LCFI755:
 27109              		.cfi_remember_state
 27110              		.cfi_def_cfa_offset 12
 27111              		@ sp needed
 27112 0040 30BD     		pop	{r4, r5, pc}
 27113              	.LVL3396:
 27114              	.L1835:
 27115              	.LCFI756:
 27116              		.cfi_restore_state
12555:Core/Src/bno055.c ****         }
 27117              		.loc 1 12555 13 is_stmt 1 view .LVU7607
12555:Core/Src/bno055.c ****         }
 27118              		.loc 1 12555 23 is_stmt 0 view .LVU7608
 27119 0042 0120     		movs	r0, #1
 27120              	.LVL3397:
12555:Core/Src/bno055.c ****         }
 27121              		.loc 1 12555 23 view .LVU7609
 27122 0044 FFF7FEFF 		bl	bno055_write_page_id
 27123              	.LVL3398:
12557:Core/Src/bno055.c ****         {
 27124              		.loc 1 12557 9 is_stmt 1 view .LVU7610
12557:Core/Src/bno055.c ****         {
 27125              		.loc 1 12557 12 is_stmt 0 view .LVU7611
 27126 0048 0028     		cmp	r0, #0
 27127 004a EAD0     		beq	.L1831
 27128 004c E4E7     		b	.L1830
 27129              	.LVL3399:
 27130              	.L1832:
12546:Core/Src/bno055.c ****     }
 27131              		.loc 1 12546 16 view .LVU7612
 27132 004e 6FF07E00 		mvn	r0, #126
 27133              	.LVL3400:
12546:Core/Src/bno055.c ****     }
 27134              		.loc 1 12546 16 view .LVU7613
 27135 0052 F4E7     		b	.L1829
 27136              	.LVL3401:
 27137              	.L1833:
12568:Core/Src/bno055.c ****         }
 27138              		.loc 1 12568 22 view .LVU7614
 27139 0054 4FF0FF30 		mov	r0, #-1
 27140 0058 F1E7     		b	.L1829
ARM GAS  /tmp/ccWoU29M.s 			page 755


 27141              	.L1837:
 27142 005a 00BF     		.align	2
 27143              	.L1836:
 27144 005c 00000000 		.word	.LANCHOR0
 27145              		.cfi_endproc
 27146              	.LFE191:
 27148              		.section	.text.bno055_get_accel_sleep_tmr_mode,"ax",%progbits
 27149              		.align	1
 27150              		.global	bno055_get_accel_sleep_tmr_mode
 27151              		.syntax unified
 27152              		.thumb
 27153              		.thumb_func
 27154              		.fpu fpv4-sp-d16
 27156              	bno055_get_accel_sleep_tmr_mode:
 27157              	.LVL3402:
 27158              	.LFB193:
12574:Core/Src/bno055.c **** 
12575:Core/Src/bno055.c **** /*!
12576:Core/Src/bno055.c ****  *  @brief This API used to write the gyro power mode
12577:Core/Src/bno055.c ****  *  from page one register from 0x0B bit 0 to 2
12578:Core/Src/bno055.c ****  *
12579:Core/Src/bno055.c ****  *  @param gyro_power_mode_u8 : The value of gyro power mode
12580:Core/Src/bno055.c ****  *
12581:Core/Src/bno055.c ****  *  gyro_power_mode_u8 |          result
12582:Core/Src/bno055.c ****  * ----------------------|----------------------------
12583:Core/Src/bno055.c ****  *     0x00              | GYRO_OPR_MODE_NORMAL
12584:Core/Src/bno055.c ****  *     0x01              | GYRO_OPR_MODE_FASTPOWERUP
12585:Core/Src/bno055.c ****  *     0x02              | GYRO_OPR_MODE_DEEPSUSPEND
12586:Core/Src/bno055.c ****  *     0x03              | GYRO_OPR_MODE_SUSPEND
12587:Core/Src/bno055.c ****  *     0x04              | GYRO_OPR_MODE_ADVANCE_POWERSAVE
12588:Core/Src/bno055.c ****  *
12589:Core/Src/bno055.c ****  *  @return results of bus communication function
12590:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12591:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12592:Core/Src/bno055.c ****  *
12593:Core/Src/bno055.c ****  *
12594:Core/Src/bno055.c ****  */
12595:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_power_mode(u8 gyro_power_mode_u8)
12596:Core/Src/bno055.c **** {
12597:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
12598:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
12599:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
12600:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
12601:Core/Src/bno055.c ****     u8 gyro_bw_u8 = BNO055_INIT_VALUE;
12602:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
12603:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
12604:Core/Src/bno055.c **** 
12605:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12606:Core/Src/bno055.c ****     if (p_bno055 == NULL)
12607:Core/Src/bno055.c ****     {
12608:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12609:Core/Src/bno055.c ****     }
12610:Core/Src/bno055.c ****     else
12611:Core/Src/bno055.c ****     {
12612:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12613:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12614:Core/Src/bno055.c ****          * current operation mode and set the config mode */
ARM GAS  /tmp/ccWoU29M.s 			page 756


12615:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
12616:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
12617:Core/Src/bno055.c ****         {
12618:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
12619:Core/Src/bno055.c ****             {
12620:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12621:Core/Src/bno055.c ****             }
12622:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
12623:Core/Src/bno055.c ****             {
12624:Core/Src/bno055.c ****                 /* Write page as one */
12625:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12626:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12627:Core/Src/bno055.c ****                 {
12628:Core/Src/bno055.c ****                     /* Write the value of power mode*/
12629:Core/Src/bno055.c ****                     if ((gyro_power_mode_u8 == BNO055_INIT_VALUE || gyro_power_mode_u8 > BNO055_INI
12630:Core/Src/bno055.c ****                         gyro_power_mode_u8 < BNO055_GYRO_RANGE)
12631:Core/Src/bno055.c ****                     {
12632:Core/Src/bno055.c ****                         switch (gyro_power_mode_u8)
12633:Core/Src/bno055.c ****                         {
12634:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_NORMAL:
12635:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_NORMAL;
12636:Core/Src/bno055.c ****                                 break;
12637:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_FASTPOWERUP:
12638:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_FASTPOWERUP;
12639:Core/Src/bno055.c ****                                 break;
12640:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_DEEPSUSPEND:
12641:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_DEEPSUSPEND;
12642:Core/Src/bno055.c ****                                 break;
12643:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_SUSPEND:
12644:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_SUSPEND;
12645:Core/Src/bno055.c ****                                 break;
12646:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE:
12647:Core/Src/bno055.c ****                                 com_rslt = bno055_get_gyro_bw(&gyro_bw_u8);
12648:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
12649:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
12650:Core/Src/bno055.c ****                                 {
12651:Core/Src/bno055.c ****                                     com_rslt += bno055_gyro_set_auto_sleep_durn(gyro_auto_sleep_dur
12652:Core/Src/bno055.c ****                                 }
12653:Core/Src/bno055.c ****                                 com_rslt += bno055_write_page_id(BNO055_PAGE_ONE);
12654:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE;
12655:Core/Src/bno055.c ****                                 break;
12656:Core/Src/bno055.c ****                             default:
12657:Core/Src/bno055.c ****                                 break;
12658:Core/Src/bno055.c ****                         }
12659:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12660:Core/Src/bno055.c ****                                                                   BNO055_GYRO_POWER_MODE_REG,
12661:Core/Src/bno055.c ****                                                                   &data_u8r,
12662:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12663:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12664:Core/Src/bno055.c ****                         {
12665:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_POWER_MODE, gyro_p
12666:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12667:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
12668:Core/Src/bno055.c ****                                                                         &data_u8r,
12669:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12670:Core/Src/bno055.c ****                         }
12671:Core/Src/bno055.c ****                     }
ARM GAS  /tmp/ccWoU29M.s 			page 757


12672:Core/Src/bno055.c ****                     else
12673:Core/Src/bno055.c ****                     {
12674:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12675:Core/Src/bno055.c ****                     }
12676:Core/Src/bno055.c ****                 }
12677:Core/Src/bno055.c ****                 else
12678:Core/Src/bno055.c ****                 {
12679:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12680:Core/Src/bno055.c ****                 }
12681:Core/Src/bno055.c ****             }
12682:Core/Src/bno055.c ****             else
12683:Core/Src/bno055.c ****             {
12684:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
12685:Core/Src/bno055.c ****             }
12686:Core/Src/bno055.c ****         }
12687:Core/Src/bno055.c ****         else
12688:Core/Src/bno055.c ****         {
12689:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12690:Core/Src/bno055.c ****         }
12691:Core/Src/bno055.c ****     }
12692:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
12693:Core/Src/bno055.c ****     {
12694:Core/Src/bno055.c ****         /* set the operation mode of
12695:Core/Src/bno055.c ****          * previous operation mode*/
12696:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12697:Core/Src/bno055.c ****     }
12698:Core/Src/bno055.c **** 
12699:Core/Src/bno055.c ****     return com_rslt;
12700:Core/Src/bno055.c **** }
12701:Core/Src/bno055.c **** 
12702:Core/Src/bno055.c **** /*!
12703:Core/Src/bno055.c ****  *  @brief This API used to read the accel sleep mode
12704:Core/Src/bno055.c ****  *  from page one register from 0x0C bit 0
12705:Core/Src/bno055.c ****  *
12706:Core/Src/bno055.c ****  *  @param sleep_tmr_u8 : The value of accel sleep mode
12707:Core/Src/bno055.c ****  *
12708:Core/Src/bno055.c ****  *  sleep_tmr_u8   |   result
12709:Core/Src/bno055.c ****  * ----------------- |------------------------------------
12710:Core/Src/bno055.c ****  *     0x00          | enable EventDrivenSampling(EDT)
12711:Core/Src/bno055.c ****  *     0x01          | enable Equidistant sampling mode(EST)
12712:Core/Src/bno055.c ****  *
12713:Core/Src/bno055.c ****  *  @return results of bus communication function
12714:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12715:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12716:Core/Src/bno055.c ****  *
12717:Core/Src/bno055.c ****  *
12718:Core/Src/bno055.c ****  */
12719:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_sleep_tmr_mode(u8 *sleep_tmr_u8)
12720:Core/Src/bno055.c **** {
 27159              		.loc 1 12720 1 is_stmt 1 view -0
 27160              		.cfi_startproc
 27161              		@ args = 0, pretend = 0, frame = 8
 27162              		@ frame_needed = 0, uses_anonymous_args = 0
 27163              		.loc 1 12720 1 is_stmt 0 view .LVU7616
 27164 0000 30B5     		push	{r4, r5, lr}
 27165              	.LCFI757:
 27166              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccWoU29M.s 			page 758


 27167              		.cfi_offset 4, -12
 27168              		.cfi_offset 5, -8
 27169              		.cfi_offset 14, -4
 27170 0002 83B0     		sub	sp, sp, #12
 27171              	.LCFI758:
 27172              		.cfi_def_cfa_offset 24
12721:Core/Src/bno055.c ****     /* Variable used to return value of
12722:Core/Src/bno055.c ****      * communication routine*/
12723:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27173              		.loc 1 12723 5 is_stmt 1 view .LVU7617
 27174              	.LVL3403:
12724:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27175              		.loc 1 12724 5 view .LVU7618
 27176              		.loc 1 12724 8 is_stmt 0 view .LVU7619
 27177 0004 0023     		movs	r3, #0
 27178 0006 8DF80730 		strb	r3, [sp, #7]
12725:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27179              		.loc 1 12725 5 is_stmt 1 view .LVU7620
 27180              	.LVL3404:
12726:Core/Src/bno055.c **** 
12727:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12728:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27181              		.loc 1 12728 5 view .LVU7621
 27182              		.loc 1 12728 18 is_stmt 0 view .LVU7622
 27183 000a 144B     		ldr	r3, .L1846
 27184 000c 1B68     		ldr	r3, [r3]
 27185              		.loc 1 12728 8 view .LVU7623
 27186 000e F3B1     		cbz	r3, .L1842
 27187 0010 0446     		mov	r4, r0
12729:Core/Src/bno055.c ****     {
12730:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12731:Core/Src/bno055.c ****     }
12732:Core/Src/bno055.c ****     else
12733:Core/Src/bno055.c ****     {
12734:Core/Src/bno055.c ****         /*condition check for page, accel sleep mode is
12735:Core/Src/bno055.c ****          * available in the page one*/
12736:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 27188              		.loc 1 12736 9 is_stmt 1 view .LVU7624
 27189              		.loc 1 12736 21 is_stmt 0 view .LVU7625
 27190 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27191              		.loc 1 12736 12 view .LVU7626
 27192 0014 012B     		cmp	r3, #1
 27193 0016 14D1     		bne	.L1845
 27194              	.LVL3405:
 27195              	.L1840:
12737:Core/Src/bno055.c ****         {
12738:Core/Src/bno055.c ****             /* Write page as one */
12739:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12740:Core/Src/bno055.c ****         }
12741:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 27196              		.loc 1 12741 53 discriminator 1 view .LVU7627
 27197 0018 104B     		ldr	r3, .L1846
 27198 001a 1B68     		ldr	r3, [r3]
 27199 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27200              		.loc 1 12741 41 discriminator 1 view .LVU7628
 27201 001e 012B     		cmp	r3, #1
 27202 0020 18D1     		bne	.L1843
ARM GAS  /tmp/ccWoU29M.s 			page 759


 27203              	.L1841:
12742:Core/Src/bno055.c ****         {
12743:Core/Src/bno055.c ****             /* read the value of accel sleep mode */
12744:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 27204              		.loc 1 12744 13 is_stmt 1 view .LVU7629
 27205              		.loc 1 12744 32 is_stmt 0 view .LVU7630
 27206 0022 0E4B     		ldr	r3, .L1846
 27207 0024 1868     		ldr	r0, [r3]
 27208 0026 0569     		ldr	r5, [r0, #16]
 27209              		.loc 1 12744 24 view .LVU7631
 27210 0028 0123     		movs	r3, #1
 27211 002a 0DF10702 		add	r2, sp, #7
 27212 002e 0C21     		movs	r1, #12
 27213 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27214 0032 A847     		blx	r5
 27215              	.LVL3406:
12745:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLEEP_MODE_REG,
12746:Core/Src/bno055.c ****                                                       &data_u8r,
12747:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12748:Core/Src/bno055.c ****             *sleep_tmr_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLEEP_MODE);
 27216              		.loc 1 12748 13 is_stmt 1 view .LVU7632
 27217              		.loc 1 12748 29 is_stmt 0 view .LVU7633
 27218 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 27219 0038 03F00103 		and	r3, r3, #1
 27220              		.loc 1 12748 27 view .LVU7634
 27221 003c 2370     		strb	r3, [r4]
 27222              	.LVL3407:
 27223              	.L1839:
12749:Core/Src/bno055.c ****         }
12750:Core/Src/bno055.c ****         else
12751:Core/Src/bno055.c ****         {
12752:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12753:Core/Src/bno055.c ****         }
12754:Core/Src/bno055.c ****     }
12755:Core/Src/bno055.c **** 
12756:Core/Src/bno055.c ****     return com_rslt;
12757:Core/Src/bno055.c **** }
 27224              		.loc 1 12757 1 view .LVU7635
 27225 003e 03B0     		add	sp, sp, #12
 27226              	.LCFI759:
 27227              		.cfi_remember_state
 27228              		.cfi_def_cfa_offset 12
 27229              		@ sp needed
 27230 0040 30BD     		pop	{r4, r5, pc}
 27231              	.LVL3408:
 27232              	.L1845:
 27233              	.LCFI760:
 27234              		.cfi_restore_state
12739:Core/Src/bno055.c ****         }
 27235              		.loc 1 12739 13 is_stmt 1 view .LVU7636
12739:Core/Src/bno055.c ****         }
 27236              		.loc 1 12739 23 is_stmt 0 view .LVU7637
 27237 0042 0120     		movs	r0, #1
 27238              	.LVL3409:
12739:Core/Src/bno055.c ****         }
 27239              		.loc 1 12739 23 view .LVU7638
 27240 0044 FFF7FEFF 		bl	bno055_write_page_id
ARM GAS  /tmp/ccWoU29M.s 			page 760


 27241              	.LVL3410:
12741:Core/Src/bno055.c ****         {
 27242              		.loc 1 12741 9 is_stmt 1 view .LVU7639
12741:Core/Src/bno055.c ****         {
 27243              		.loc 1 12741 12 is_stmt 0 view .LVU7640
 27244 0048 0028     		cmp	r0, #0
 27245 004a EAD0     		beq	.L1841
 27246 004c E4E7     		b	.L1840
 27247              	.LVL3411:
 27248              	.L1842:
12730:Core/Src/bno055.c ****     }
 27249              		.loc 1 12730 16 view .LVU7641
 27250 004e 6FF07E00 		mvn	r0, #126
 27251              	.LVL3412:
12730:Core/Src/bno055.c ****     }
 27252              		.loc 1 12730 16 view .LVU7642
 27253 0052 F4E7     		b	.L1839
 27254              	.LVL3413:
 27255              	.L1843:
12752:Core/Src/bno055.c ****         }
 27256              		.loc 1 12752 22 view .LVU7643
 27257 0054 4FF0FF30 		mov	r0, #-1
 27258 0058 F1E7     		b	.L1839
 27259              	.L1847:
 27260 005a 00BF     		.align	2
 27261              	.L1846:
 27262 005c 00000000 		.word	.LANCHOR0
 27263              		.cfi_endproc
 27264              	.LFE193:
 27266              		.section	.text.bno055_set_accel_sleep_tmr_mode,"ax",%progbits
 27267              		.align	1
 27268              		.global	bno055_set_accel_sleep_tmr_mode
 27269              		.syntax unified
 27270              		.thumb
 27271              		.thumb_func
 27272              		.fpu fpv4-sp-d16
 27274              	bno055_set_accel_sleep_tmr_mode:
 27275              	.LVL3414:
 27276              	.LFB194:
12758:Core/Src/bno055.c **** 
12759:Core/Src/bno055.c **** /*!
12760:Core/Src/bno055.c ****  *  @brief This API used to write the accel sleep mode
12761:Core/Src/bno055.c ****  *  from page one register from 0x0C bit 0
12762:Core/Src/bno055.c ****  *
12763:Core/Src/bno055.c ****  *  @param sleep_tmr_u8 : The value of accel sleep mode
12764:Core/Src/bno055.c ****  *
12765:Core/Src/bno055.c ****  *  sleep_tmr_u8   |   result
12766:Core/Src/bno055.c ****  * ----------------- |------------------------------------
12767:Core/Src/bno055.c ****  *     0x00          | enable EventDrivenSampling(EDT)
12768:Core/Src/bno055.c ****  *     0x01          | enable Equidistant sampling mode(EST)
12769:Core/Src/bno055.c ****  *
12770:Core/Src/bno055.c ****  *  @return results of bus communication function
12771:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12772:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12773:Core/Src/bno055.c ****  *
12774:Core/Src/bno055.c ****  *
12775:Core/Src/bno055.c ****  */
ARM GAS  /tmp/ccWoU29M.s 			page 761


12776:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_sleep_tmr_mode(u8 sleep_tmr_u8)
12777:Core/Src/bno055.c **** {
 27277              		.loc 1 12777 1 is_stmt 1 view -0
 27278              		.cfi_startproc
 27279              		@ args = 0, pretend = 0, frame = 8
 27280              		@ frame_needed = 0, uses_anonymous_args = 0
 27281              		.loc 1 12777 1 is_stmt 0 view .LVU7645
 27282 0000 30B5     		push	{r4, r5, lr}
 27283              	.LCFI761:
 27284              		.cfi_def_cfa_offset 12
 27285              		.cfi_offset 4, -12
 27286              		.cfi_offset 5, -8
 27287              		.cfi_offset 14, -4
 27288 0002 83B0     		sub	sp, sp, #12
 27289              	.LCFI762:
 27290              		.cfi_def_cfa_offset 24
12778:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27291              		.loc 1 12778 5 is_stmt 1 view .LVU7646
 27292              	.LVL3415:
12779:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27293              		.loc 1 12779 5 view .LVU7647
 27294              		.loc 1 12779 8 is_stmt 0 view .LVU7648
 27295 0004 0023     		movs	r3, #0
 27296 0006 8DF80730 		strb	r3, [sp, #7]
12780:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27297              		.loc 1 12780 5 is_stmt 1 view .LVU7649
 27298              	.LVL3416:
12781:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 27299              		.loc 1 12781 5 view .LVU7650
 27300              		.loc 1 12781 8 is_stmt 0 view .LVU7651
 27301 000a 8DF80630 		strb	r3, [sp, #6]
12782:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 27302              		.loc 1 12782 5 is_stmt 1 view .LVU7652
 27303              	.LVL3417:
12783:Core/Src/bno055.c **** 
12784:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12785:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27304              		.loc 1 12785 5 view .LVU7653
 27305              		.loc 1 12785 18 is_stmt 0 view .LVU7654
 27306 000e 2C4B     		ldr	r3, .L1862
 27307 0010 1B68     		ldr	r3, [r3]
 27308              		.loc 1 12785 8 view .LVU7655
 27309 0012 002B     		cmp	r3, #0
 27310 0014 50D0     		beq	.L1852
 27311 0016 0546     		mov	r5, r0
12786:Core/Src/bno055.c ****     {
12787:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12788:Core/Src/bno055.c ****     }
12789:Core/Src/bno055.c ****     else
12790:Core/Src/bno055.c ****     {
12791:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12792:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12793:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12794:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 27312              		.loc 1 12794 9 is_stmt 1 view .LVU7656
 27313              		.loc 1 12794 19 is_stmt 0 view .LVU7657
 27314 0018 0DF10600 		add	r0, sp, #6
ARM GAS  /tmp/ccWoU29M.s 			page 762


 27315              	.LVL3418:
 27316              		.loc 1 12794 19 view .LVU7658
 27317 001c FFF7FEFF 		bl	bno055_get_operation_mode
 27318              	.LVL3419:
12795:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 27319              		.loc 1 12795 9 is_stmt 1 view .LVU7659
 27320              		.loc 1 12795 12 is_stmt 0 view .LVU7660
 27321 0020 0446     		mov	r4, r0
 27322 0022 0028     		cmp	r0, #0
 27323 0024 37D1     		bne	.L1853
12796:Core/Src/bno055.c ****         {
12797:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 27324              		.loc 1 12797 13 is_stmt 1 view .LVU7661
 27325              		.loc 1 12797 32 is_stmt 0 view .LVU7662
 27326 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 27327              		.loc 1 12797 16 view .LVU7663
 27328 002a 1BB9     		cbnz	r3, .L1858
 27329              	.LVL3420:
 27330              	.L1851:
12798:Core/Src/bno055.c ****             {
12799:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12800:Core/Src/bno055.c ****             }
12801:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 27331              		.loc 1 12801 13 is_stmt 1 view .LVU7664
 27332              		.loc 1 12801 16 is_stmt 0 view .LVU7665
 27333 002c 44B1     		cbz	r4, .L1859
12802:Core/Src/bno055.c ****             {
12803:Core/Src/bno055.c ****                 /* Write page as one */
12804:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12805:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12806:Core/Src/bno055.c ****                 {
12807:Core/Src/bno055.c ****                     if (sleep_tmr_u8 < BNO055_ACCEL_SLEEP_MODE_RANGE)
12808:Core/Src/bno055.c ****                     {
12809:Core/Src/bno055.c ****                         /*Write the value
12810:Core/Src/bno055.c ****                          * of accel sleep mode*/
12811:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12812:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
12813:Core/Src/bno055.c ****                                                                   &data_u8r,
12814:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12815:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12816:Core/Src/bno055.c ****                         {
12817:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_SLEEP_MODE, sleep
12818:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12819:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
12820:Core/Src/bno055.c ****                                                                         &data_u8r,
12821:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12822:Core/Src/bno055.c ****                         }
12823:Core/Src/bno055.c ****                     }
12824:Core/Src/bno055.c ****                     else
12825:Core/Src/bno055.c ****                     {
12826:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12827:Core/Src/bno055.c ****                     }
12828:Core/Src/bno055.c ****                 }
12829:Core/Src/bno055.c ****                 else
12830:Core/Src/bno055.c ****                 {
12831:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12832:Core/Src/bno055.c ****                 }
ARM GAS  /tmp/ccWoU29M.s 			page 763


12833:Core/Src/bno055.c ****             }
12834:Core/Src/bno055.c ****             else
12835:Core/Src/bno055.c ****             {
12836:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 27334              		.loc 1 12836 26 view .LVU7666
 27335 002e 4FF0FF34 		mov	r4, #-1
 27336              	.LVL3421:
 27337              		.loc 1 12836 26 view .LVU7667
 27338 0032 32E0     		b	.L1850
 27339              	.LVL3422:
 27340              	.L1858:
12799:Core/Src/bno055.c ****             }
 27341              		.loc 1 12799 17 is_stmt 1 view .LVU7668
12799:Core/Src/bno055.c ****             }
 27342              		.loc 1 12799 28 is_stmt 0 view .LVU7669
 27343 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 27344              	.LVL3423:
12799:Core/Src/bno055.c ****             }
 27345              		.loc 1 12799 25 view .LVU7670
 27346 0038 54FA80F4 		uxtab	r4, r4, r0
 27347 003c 64B2     		sxtb	r4, r4
 27348              	.LVL3424:
12799:Core/Src/bno055.c ****             }
 27349              		.loc 1 12799 25 view .LVU7671
 27350 003e F5E7     		b	.L1851
 27351              	.L1859:
12804:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27352              		.loc 1 12804 17 is_stmt 1 view .LVU7672
12804:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27353              		.loc 1 12804 30 is_stmt 0 view .LVU7673
 27354 0040 0120     		movs	r0, #1
 27355 0042 FFF7FEFF 		bl	bno055_write_page_id
 27356              	.LVL3425:
12805:Core/Src/bno055.c ****                 {
 27357              		.loc 1 12805 17 is_stmt 1 view .LVU7674
12805:Core/Src/bno055.c ****                 {
 27358              		.loc 1 12805 20 is_stmt 0 view .LVU7675
 27359 0046 70BB     		cbnz	r0, .L1855
12807:Core/Src/bno055.c ****                     {
 27360              		.loc 1 12807 21 is_stmt 1 view .LVU7676
12807:Core/Src/bno055.c ****                     {
 27361              		.loc 1 12807 24 is_stmt 0 view .LVU7677
 27362 0048 012D     		cmp	r5, #1
 27363 004a 02D9     		bls	.L1860
12826:Core/Src/bno055.c ****                     }
 27364              		.loc 1 12826 34 view .LVU7678
 27365 004c 6FF00104 		mvn	r4, #1
 27366              	.LVL3426:
12826:Core/Src/bno055.c ****                     }
 27367              		.loc 1 12826 34 view .LVU7679
 27368 0050 23E0     		b	.L1850
 27369              	.LVL3427:
 27370              	.L1860:
12811:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
 27371              		.loc 1 12811 25 is_stmt 1 view .LVU7680
12811:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
 27372              		.loc 1 12811 44 is_stmt 0 view .LVU7681
ARM GAS  /tmp/ccWoU29M.s 			page 764


 27373 0052 1B4B     		ldr	r3, .L1862
 27374 0054 1868     		ldr	r0, [r3]
 27375              	.LVL3428:
12811:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
 27376              		.loc 1 12811 44 view .LVU7682
 27377 0056 0469     		ldr	r4, [r0, #16]
 27378              	.LVL3429:
12811:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
 27379              		.loc 1 12811 36 view .LVU7683
 27380 0058 0123     		movs	r3, #1
 27381 005a 0DF10702 		add	r2, sp, #7
 27382 005e 0C21     		movs	r1, #12
 27383 0060 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27384 0062 A047     		blx	r4
 27385              	.LVL3430:
12815:Core/Src/bno055.c ****                         {
 27386              		.loc 1 12815 25 is_stmt 1 view .LVU7684
12815:Core/Src/bno055.c ****                         {
 27387              		.loc 1 12815 28 is_stmt 0 view .LVU7685
 27388 0064 0446     		mov	r4, r0
 27389 0066 C0B9     		cbnz	r0, .L1850
12817:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27390              		.loc 1 12817 29 is_stmt 1 view .LVU7686
12817:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27391              		.loc 1 12817 40 is_stmt 0 view .LVU7687
 27392 0068 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 27393              	.LVL3431:
12817:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27394              		.loc 1 12817 40 view .LVU7688
 27395 006c 20F00100 		bic	r0, r0, #1
 27396 0070 43B2     		sxtb	r3, r0
 27397 0072 05F00100 		and	r0, r5, #1
 27398 0076 1843     		orrs	r0, r0, r3
12817:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27399              		.loc 1 12817 38 view .LVU7689
 27400 0078 8DF80700 		strb	r0, [sp, #7]
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
 27401              		.loc 1 12818 29 is_stmt 1 view .LVU7690
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
 27402              		.loc 1 12818 49 is_stmt 0 view .LVU7691
 27403 007c 104B     		ldr	r3, .L1862
 27404 007e 1868     		ldr	r0, [r3]
 27405 0080 C568     		ldr	r5, [r0, #12]
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
 27406              		.loc 1 12818 41 view .LVU7692
 27407 0082 0123     		movs	r3, #1
 27408 0084 0DF10702 		add	r2, sp, #7
 27409 0088 0C21     		movs	r1, #12
 27410 008a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27411 008c A847     		blx	r5
 27412              	.LVL3432:
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
 27413              		.loc 1 12818 38 view .LVU7693
 27414 008e 54FA80F4 		uxtab	r4, r4, r0
 27415 0092 64B2     		sxtb	r4, r4
 27416              	.LVL3433:
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
ARM GAS  /tmp/ccWoU29M.s 			page 765


 27417              		.loc 1 12818 38 view .LVU7694
 27418 0094 01E0     		b	.L1850
 27419              	.LVL3434:
 27420              	.L1853:
12837:Core/Src/bno055.c ****             }
12838:Core/Src/bno055.c ****         }
12839:Core/Src/bno055.c ****         else
12840:Core/Src/bno055.c ****         {
12841:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 27421              		.loc 1 12841 22 view .LVU7695
 27422 0096 4FF0FF34 		mov	r4, #-1
 27423              	.LVL3435:
 27424              	.L1850:
12842:Core/Src/bno055.c ****         }
12843:Core/Src/bno055.c ****     }
12844:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 27425              		.loc 1 12844 5 is_stmt 1 view .LVU7696
 27426              		.loc 1 12844 24 is_stmt 0 view .LVU7697
 27427 009a 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 27428              		.loc 1 12844 8 view .LVU7698
 27429 009e 28B9     		cbnz	r0, .L1861
 27430              	.LVL3436:
 27431              	.L1849:
12845:Core/Src/bno055.c ****     {
12846:Core/Src/bno055.c ****         /* set the operation mode of
12847:Core/Src/bno055.c ****          * previous operation mode*/
12848:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12849:Core/Src/bno055.c ****     }
12850:Core/Src/bno055.c **** 
12851:Core/Src/bno055.c ****     return com_rslt;
12852:Core/Src/bno055.c **** }
 27432              		.loc 1 12852 1 view .LVU7699
 27433 00a0 2046     		mov	r0, r4
 27434 00a2 03B0     		add	sp, sp, #12
 27435              	.LCFI763:
 27436              		.cfi_remember_state
 27437              		.cfi_def_cfa_offset 12
 27438              		@ sp needed
 27439 00a4 30BD     		pop	{r4, r5, pc}
 27440              	.LVL3437:
 27441              	.L1855:
 27442              	.LCFI764:
 27443              		.cfi_restore_state
12831:Core/Src/bno055.c ****                 }
 27444              		.loc 1 12831 30 view .LVU7700
 27445 00a6 4FF0FF34 		mov	r4, #-1
 27446              	.LVL3438:
12831:Core/Src/bno055.c ****                 }
 27447              		.loc 1 12831 30 view .LVU7701
 27448 00aa F6E7     		b	.L1850
 27449              	.LVL3439:
 27450              	.L1861:
12848:Core/Src/bno055.c ****     }
 27451              		.loc 1 12848 9 is_stmt 1 view .LVU7702
12848:Core/Src/bno055.c ****     }
 27452              		.loc 1 12848 21 is_stmt 0 view .LVU7703
 27453 00ac FFF7FEFF 		bl	bno055_set_operation_mode
ARM GAS  /tmp/ccWoU29M.s 			page 766


 27454              	.LVL3440:
12848:Core/Src/bno055.c ****     }
 27455              		.loc 1 12848 18 view .LVU7704
 27456 00b0 54FA80F4 		uxtab	r4, r4, r0
 27457              	.LVL3441:
12848:Core/Src/bno055.c ****     }
 27458              		.loc 1 12848 18 view .LVU7705
 27459 00b4 64B2     		sxtb	r4, r4
 27460              	.LVL3442:
12848:Core/Src/bno055.c ****     }
 27461              		.loc 1 12848 18 view .LVU7706
 27462 00b6 F3E7     		b	.L1849
 27463              	.LVL3443:
 27464              	.L1852:
12787:Core/Src/bno055.c ****     }
 27465              		.loc 1 12787 16 view .LVU7707
 27466 00b8 6FF07E04 		mvn	r4, #126
 27467 00bc F0E7     		b	.L1849
 27468              	.L1863:
 27469 00be 00BF     		.align	2
 27470              	.L1862:
 27471 00c0 00000000 		.word	.LANCHOR0
 27472              		.cfi_endproc
 27473              	.LFE194:
 27475              		.section	.text.bno055_get_accel_sleep_durn,"ax",%progbits
 27476              		.align	1
 27477              		.global	bno055_get_accel_sleep_durn
 27478              		.syntax unified
 27479              		.thumb
 27480              		.thumb_func
 27481              		.fpu fpv4-sp-d16
 27483              	bno055_get_accel_sleep_durn:
 27484              	.LVL3444:
 27485              	.LFB195:
12853:Core/Src/bno055.c **** 
12854:Core/Src/bno055.c **** /*!
12855:Core/Src/bno055.c ****  *  @brief This API used to read the accel sleep duration
12856:Core/Src/bno055.c ****  *  from page one register from 0x0C bit 1 to 4
12857:Core/Src/bno055.c ****  *
12858:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of accel sleep duration
12859:Core/Src/bno055.c ****  *
12860:Core/Src/bno055.c ****  * sleep_durn_u8  |      result
12861:Core/Src/bno055.c ****  * ---------------- |-----------------------------
12862:Core/Src/bno055.c ****  *     0x05         | BNO055_ACCEL_SLEEP_DURN_0_5MS
12863:Core/Src/bno055.c ****  *     0x06         | BNO055_ACCEL_SLEEP_DURN_1MS
12864:Core/Src/bno055.c ****  *     0x07         | BNO055_ACCEL_SLEEP_DURN_2MS
12865:Core/Src/bno055.c ****  *     0x08         | BNO055_ACCEL_SLEEP_DURN_4MS
12866:Core/Src/bno055.c ****  *     0x09         | BNO055_ACCEL_SLEEP_DURN_6MS
12867:Core/Src/bno055.c ****  *     0x0A         | BNO055_ACCEL_SLEEP_DURN_10MS
12868:Core/Src/bno055.c ****  *     0x0B         | BNO055_ACCEL_SLEEP_DURN_25MS
12869:Core/Src/bno055.c ****  *     0x0C         | BNO055_ACCEL_SLEEP_DURN_50MS
12870:Core/Src/bno055.c ****  *     0x0D         | BNO055_ACCEL_SLEEP_DURN_100MS
12871:Core/Src/bno055.c ****  *     0x0E         | BNO055_ACCEL_SLEEP_DURN_500MS
12872:Core/Src/bno055.c ****  *     0x0F         | BNO055_ACCEL_SLEEP_DURN_1S
12873:Core/Src/bno055.c ****  *
12874:Core/Src/bno055.c ****  *  @return results of bus communication function
12875:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
ARM GAS  /tmp/ccWoU29M.s 			page 767


12876:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12877:Core/Src/bno055.c ****  *
12878:Core/Src/bno055.c ****  *
12879:Core/Src/bno055.c ****  */
12880:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_sleep_durn(u8 *sleep_durn_u8)
12881:Core/Src/bno055.c **** {
 27486              		.loc 1 12881 1 is_stmt 1 view -0
 27487              		.cfi_startproc
 27488              		@ args = 0, pretend = 0, frame = 8
 27489              		@ frame_needed = 0, uses_anonymous_args = 0
 27490              		.loc 1 12881 1 is_stmt 0 view .LVU7709
 27491 0000 30B5     		push	{r4, r5, lr}
 27492              	.LCFI765:
 27493              		.cfi_def_cfa_offset 12
 27494              		.cfi_offset 4, -12
 27495              		.cfi_offset 5, -8
 27496              		.cfi_offset 14, -4
 27497 0002 83B0     		sub	sp, sp, #12
 27498              	.LCFI766:
 27499              		.cfi_def_cfa_offset 24
12882:Core/Src/bno055.c ****     /* Variable used to return value of
12883:Core/Src/bno055.c ****      * communication routine*/
12884:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27500              		.loc 1 12884 5 is_stmt 1 view .LVU7710
 27501              	.LVL3445:
12885:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27502              		.loc 1 12885 5 view .LVU7711
 27503              		.loc 1 12885 8 is_stmt 0 view .LVU7712
 27504 0004 0023     		movs	r3, #0
 27505 0006 8DF80730 		strb	r3, [sp, #7]
12886:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27506              		.loc 1 12886 5 is_stmt 1 view .LVU7713
 27507              	.LVL3446:
12887:Core/Src/bno055.c **** 
12888:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12889:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27508              		.loc 1 12889 5 view .LVU7714
 27509              		.loc 1 12889 18 is_stmt 0 view .LVU7715
 27510 000a 144B     		ldr	r3, .L1872
 27511 000c 1B68     		ldr	r3, [r3]
 27512              		.loc 1 12889 8 view .LVU7716
 27513 000e F3B1     		cbz	r3, .L1868
 27514 0010 0446     		mov	r4, r0
12890:Core/Src/bno055.c ****     {
12891:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12892:Core/Src/bno055.c ****     }
12893:Core/Src/bno055.c ****     else
12894:Core/Src/bno055.c ****     {
12895:Core/Src/bno055.c ****         /*condition check for page, accel sleep duration
12896:Core/Src/bno055.c ****          * available in the page one*/
12897:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 27515              		.loc 1 12897 9 is_stmt 1 view .LVU7717
 27516              		.loc 1 12897 21 is_stmt 0 view .LVU7718
 27517 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27518              		.loc 1 12897 12 view .LVU7719
 27519 0014 012B     		cmp	r3, #1
 27520 0016 14D1     		bne	.L1871
ARM GAS  /tmp/ccWoU29M.s 			page 768


 27521              	.LVL3447:
 27522              	.L1866:
12898:Core/Src/bno055.c ****         {
12899:Core/Src/bno055.c ****             /* Write page as one */
12900:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12901:Core/Src/bno055.c ****         }
12902:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 27523              		.loc 1 12902 53 discriminator 1 view .LVU7720
 27524 0018 104B     		ldr	r3, .L1872
 27525 001a 1B68     		ldr	r3, [r3]
 27526 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27527              		.loc 1 12902 41 discriminator 1 view .LVU7721
 27528 001e 012B     		cmp	r3, #1
 27529 0020 18D1     		bne	.L1869
 27530              	.L1867:
12903:Core/Src/bno055.c ****         {
12904:Core/Src/bno055.c ****             /* Read the value of accel sleep duration */
12905:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 27531              		.loc 1 12905 13 is_stmt 1 view .LVU7722
 27532              		.loc 1 12905 32 is_stmt 0 view .LVU7723
 27533 0022 0E4B     		ldr	r3, .L1872
 27534 0024 1868     		ldr	r0, [r3]
 27535 0026 0569     		ldr	r5, [r0, #16]
 27536              		.loc 1 12905 24 view .LVU7724
 27537 0028 0123     		movs	r3, #1
 27538 002a 0DF10702 		add	r2, sp, #7
 27539 002e 0C21     		movs	r1, #12
 27540 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27541 0032 A847     		blx	r5
 27542              	.LVL3448:
12906:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLEEP_DURN_REG,
12907:Core/Src/bno055.c ****                                                       &data_u8r,
12908:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12909:Core/Src/bno055.c ****             *sleep_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLEEP_DURN);
 27543              		.loc 1 12909 13 is_stmt 1 view .LVU7725
 27544              		.loc 1 12909 30 is_stmt 0 view .LVU7726
 27545 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 27546 0038 C3F34303 		ubfx	r3, r3, #1, #4
 27547              		.loc 1 12909 28 view .LVU7727
 27548 003c 2370     		strb	r3, [r4]
 27549              	.LVL3449:
 27550              	.L1865:
12910:Core/Src/bno055.c ****         }
12911:Core/Src/bno055.c ****         else
12912:Core/Src/bno055.c ****         {
12913:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12914:Core/Src/bno055.c ****         }
12915:Core/Src/bno055.c ****     }
12916:Core/Src/bno055.c **** 
12917:Core/Src/bno055.c ****     return com_rslt;
12918:Core/Src/bno055.c **** }
 27551              		.loc 1 12918 1 view .LVU7728
 27552 003e 03B0     		add	sp, sp, #12
 27553              	.LCFI767:
 27554              		.cfi_remember_state
 27555              		.cfi_def_cfa_offset 12
 27556              		@ sp needed
ARM GAS  /tmp/ccWoU29M.s 			page 769


 27557 0040 30BD     		pop	{r4, r5, pc}
 27558              	.LVL3450:
 27559              	.L1871:
 27560              	.LCFI768:
 27561              		.cfi_restore_state
12900:Core/Src/bno055.c ****         }
 27562              		.loc 1 12900 13 is_stmt 1 view .LVU7729
12900:Core/Src/bno055.c ****         }
 27563              		.loc 1 12900 23 is_stmt 0 view .LVU7730
 27564 0042 0120     		movs	r0, #1
 27565              	.LVL3451:
12900:Core/Src/bno055.c ****         }
 27566              		.loc 1 12900 23 view .LVU7731
 27567 0044 FFF7FEFF 		bl	bno055_write_page_id
 27568              	.LVL3452:
12902:Core/Src/bno055.c ****         {
 27569              		.loc 1 12902 9 is_stmt 1 view .LVU7732
12902:Core/Src/bno055.c ****         {
 27570              		.loc 1 12902 12 is_stmt 0 view .LVU7733
 27571 0048 0028     		cmp	r0, #0
 27572 004a EAD0     		beq	.L1867
 27573 004c E4E7     		b	.L1866
 27574              	.LVL3453:
 27575              	.L1868:
12891:Core/Src/bno055.c ****     }
 27576              		.loc 1 12891 16 view .LVU7734
 27577 004e 6FF07E00 		mvn	r0, #126
 27578              	.LVL3454:
12891:Core/Src/bno055.c ****     }
 27579              		.loc 1 12891 16 view .LVU7735
 27580 0052 F4E7     		b	.L1865
 27581              	.LVL3455:
 27582              	.L1869:
12913:Core/Src/bno055.c ****         }
 27583              		.loc 1 12913 22 view .LVU7736
 27584 0054 4FF0FF30 		mov	r0, #-1
 27585 0058 F1E7     		b	.L1865
 27586              	.L1873:
 27587 005a 00BF     		.align	2
 27588              	.L1872:
 27589 005c 00000000 		.word	.LANCHOR0
 27590              		.cfi_endproc
 27591              	.LFE195:
 27593              		.section	.text.bno055_set_accel_sleep_durn,"ax",%progbits
 27594              		.align	1
 27595              		.global	bno055_set_accel_sleep_durn
 27596              		.syntax unified
 27597              		.thumb
 27598              		.thumb_func
 27599              		.fpu fpv4-sp-d16
 27601              	bno055_set_accel_sleep_durn:
 27602              	.LVL3456:
 27603              	.LFB196:
12919:Core/Src/bno055.c **** 
12920:Core/Src/bno055.c **** /*!
12921:Core/Src/bno055.c ****  *  @brief This API used to write the accel sleep duration
12922:Core/Src/bno055.c ****  *  from page one register from 0x0C bit 1 to 4
ARM GAS  /tmp/ccWoU29M.s 			page 770


12923:Core/Src/bno055.c ****  *
12924:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of accel sleep duration
12925:Core/Src/bno055.c ****  *
12926:Core/Src/bno055.c ****  * sleep_durn_u8  |      result
12927:Core/Src/bno055.c ****  * ---------------|-----------------------------
12928:Core/Src/bno055.c ****  *     0x05       | BNO055_ACCEL_SLEEP_DURN_0_5MS
12929:Core/Src/bno055.c ****  *     0x06       | BNO055_ACCEL_SLEEP_DURN_1MS
12930:Core/Src/bno055.c ****  *     0x07       | BNO055_ACCEL_SLEEP_DURN_2MS
12931:Core/Src/bno055.c ****  *     0x08       | BNO055_ACCEL_SLEEP_DURN_4MS
12932:Core/Src/bno055.c ****  *     0x09       | BNO055_ACCEL_SLEEP_DURN_6MS
12933:Core/Src/bno055.c ****  *     0x0A       | BNO055_ACCEL_SLEEP_DURN_10MS
12934:Core/Src/bno055.c ****  *     0x0B       | BNO055_ACCEL_SLEEP_DURN_25MS
12935:Core/Src/bno055.c ****  *     0x0C       | BNO055_ACCEL_SLEEP_DURN_50MS
12936:Core/Src/bno055.c ****  *     0x0D       | BNO055_ACCEL_SLEEP_DURN_100MS
12937:Core/Src/bno055.c ****  *     0x0E       | BNO055_ACCEL_SLEEP_DURN_500MS
12938:Core/Src/bno055.c ****  *     0x0F       | BNO055_ACCEL_SLEEP_DURN_1S
12939:Core/Src/bno055.c ****  *
12940:Core/Src/bno055.c ****  *  @return results of bus communication function
12941:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12942:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12943:Core/Src/bno055.c ****  *
12944:Core/Src/bno055.c ****  *
12945:Core/Src/bno055.c ****  */
12946:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_sleep_durn(u8 sleep_durn_u8)
12947:Core/Src/bno055.c **** {
 27604              		.loc 1 12947 1 is_stmt 1 view -0
 27605              		.cfi_startproc
 27606              		@ args = 0, pretend = 0, frame = 8
 27607              		@ frame_needed = 0, uses_anonymous_args = 0
 27608              		.loc 1 12947 1 is_stmt 0 view .LVU7738
 27609 0000 30B5     		push	{r4, r5, lr}
 27610              	.LCFI769:
 27611              		.cfi_def_cfa_offset 12
 27612              		.cfi_offset 4, -12
 27613              		.cfi_offset 5, -8
 27614              		.cfi_offset 14, -4
 27615 0002 83B0     		sub	sp, sp, #12
 27616              	.LCFI770:
 27617              		.cfi_def_cfa_offset 24
12948:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27618              		.loc 1 12948 5 is_stmt 1 view .LVU7739
 27619              	.LVL3457:
12949:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27620              		.loc 1 12949 5 view .LVU7740
 27621              		.loc 1 12949 8 is_stmt 0 view .LVU7741
 27622 0004 0023     		movs	r3, #0
 27623 0006 8DF80730 		strb	r3, [sp, #7]
12950:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27624              		.loc 1 12950 5 is_stmt 1 view .LVU7742
 27625              	.LVL3458:
12951:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 27626              		.loc 1 12951 5 view .LVU7743
 27627              		.loc 1 12951 8 is_stmt 0 view .LVU7744
 27628 000a 8DF80630 		strb	r3, [sp, #6]
12952:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 27629              		.loc 1 12952 5 is_stmt 1 view .LVU7745
 27630              	.LVL3459:
ARM GAS  /tmp/ccWoU29M.s 			page 771


12953:Core/Src/bno055.c **** 
12954:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12955:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27631              		.loc 1 12955 5 view .LVU7746
 27632              		.loc 1 12955 18 is_stmt 0 view .LVU7747
 27633 000e 2C4B     		ldr	r3, .L1887
 27634 0010 1B68     		ldr	r3, [r3]
 27635              		.loc 1 12955 8 view .LVU7748
 27636 0012 002B     		cmp	r3, #0
 27637 0014 51D0     		beq	.L1878
 27638 0016 0546     		mov	r5, r0
12956:Core/Src/bno055.c ****     {
12957:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12958:Core/Src/bno055.c ****     }
12959:Core/Src/bno055.c ****     else
12960:Core/Src/bno055.c ****     {
12961:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12962:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12963:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12964:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 27639              		.loc 1 12964 9 is_stmt 1 view .LVU7749
 27640              		.loc 1 12964 19 is_stmt 0 view .LVU7750
 27641 0018 0DF10600 		add	r0, sp, #6
 27642              	.LVL3460:
 27643              		.loc 1 12964 19 view .LVU7751
 27644 001c FFF7FEFF 		bl	bno055_get_operation_mode
 27645              	.LVL3461:
12965:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 27646              		.loc 1 12965 9 is_stmt 1 view .LVU7752
 27647              		.loc 1 12965 12 is_stmt 0 view .LVU7753
 27648 0020 0446     		mov	r4, r0
 27649 0022 0028     		cmp	r0, #0
 27650 0024 35D1     		bne	.L1879
12966:Core/Src/bno055.c ****         {
12967:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 27651              		.loc 1 12967 13 is_stmt 1 view .LVU7754
 27652              		.loc 1 12967 32 is_stmt 0 view .LVU7755
 27653 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 27654              		.loc 1 12967 16 view .LVU7756
 27655 002a 1BB9     		cbnz	r3, .L1884
 27656              	.LVL3462:
 27657              	.L1877:
12968:Core/Src/bno055.c ****             {
12969:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12970:Core/Src/bno055.c ****             }
12971:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 27658              		.loc 1 12971 13 is_stmt 1 view .LVU7757
 27659              		.loc 1 12971 16 is_stmt 0 view .LVU7758
 27660 002c 44B1     		cbz	r4, .L1885
12972:Core/Src/bno055.c ****             {
12973:Core/Src/bno055.c ****                 /* Write page as one */
12974:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12975:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12976:Core/Src/bno055.c ****                 {
12977:Core/Src/bno055.c ****                     if (sleep_durn_u8 < BNO055_ACCEL_SLEEP_DURATION_RANGE)
12978:Core/Src/bno055.c ****                     {
12979:Core/Src/bno055.c ****                         /* Write the accel
ARM GAS  /tmp/ccWoU29M.s 			page 772


12980:Core/Src/bno055.c ****                         * sleep duration*/
12981:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12982:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
12983:Core/Src/bno055.c ****                                                                   &data_u8r,
12984:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12985:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12986:Core/Src/bno055.c ****                         {
12987:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_SLEEP_DURN, sleep
12988:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12989:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
12990:Core/Src/bno055.c ****                                                                         &data_u8r,
12991:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12992:Core/Src/bno055.c ****                         }
12993:Core/Src/bno055.c ****                     }
12994:Core/Src/bno055.c ****                     else
12995:Core/Src/bno055.c ****                     {
12996:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12997:Core/Src/bno055.c ****                     }
12998:Core/Src/bno055.c ****                 }
12999:Core/Src/bno055.c ****                 else
13000:Core/Src/bno055.c ****                 {
13001:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
13002:Core/Src/bno055.c ****                 }
13003:Core/Src/bno055.c ****             }
13004:Core/Src/bno055.c ****             else
13005:Core/Src/bno055.c ****             {
13006:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 27661              		.loc 1 13006 26 view .LVU7759
 27662 002e 4FF0FF34 		mov	r4, #-1
 27663              	.LVL3463:
 27664              		.loc 1 13006 26 view .LVU7760
 27665 0032 30E0     		b	.L1876
 27666              	.LVL3464:
 27667              	.L1884:
12969:Core/Src/bno055.c ****             }
 27668              		.loc 1 12969 17 is_stmt 1 view .LVU7761
12969:Core/Src/bno055.c ****             }
 27669              		.loc 1 12969 28 is_stmt 0 view .LVU7762
 27670 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 27671              	.LVL3465:
12969:Core/Src/bno055.c ****             }
 27672              		.loc 1 12969 25 view .LVU7763
 27673 0038 54FA80F4 		uxtab	r4, r4, r0
 27674 003c 64B2     		sxtb	r4, r4
 27675              	.LVL3466:
12969:Core/Src/bno055.c ****             }
 27676              		.loc 1 12969 25 view .LVU7764
 27677 003e F5E7     		b	.L1877
 27678              	.L1885:
12974:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27679              		.loc 1 12974 17 is_stmt 1 view .LVU7765
12974:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27680              		.loc 1 12974 30 is_stmt 0 view .LVU7766
 27681 0040 0120     		movs	r0, #1
 27682 0042 FFF7FEFF 		bl	bno055_write_page_id
 27683              	.LVL3467:
12975:Core/Src/bno055.c ****                 {
ARM GAS  /tmp/ccWoU29M.s 			page 773


 27684              		.loc 1 12975 17 is_stmt 1 view .LVU7767
12975:Core/Src/bno055.c ****                 {
 27685              		.loc 1 12975 20 is_stmt 0 view .LVU7768
 27686 0046 60BB     		cbnz	r0, .L1881
12977:Core/Src/bno055.c ****                     {
 27687              		.loc 1 12977 21 is_stmt 1 view .LVU7769
12977:Core/Src/bno055.c ****                     {
 27688              		.loc 1 12977 24 is_stmt 0 view .LVU7770
 27689 0048 0F2D     		cmp	r5, #15
 27690 004a 2DD8     		bhi	.L1882
12981:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
 27691              		.loc 1 12981 25 is_stmt 1 view .LVU7771
12981:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
 27692              		.loc 1 12981 44 is_stmt 0 view .LVU7772
 27693 004c 1C4B     		ldr	r3, .L1887
 27694 004e 1868     		ldr	r0, [r3]
 27695              	.LVL3468:
12981:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
 27696              		.loc 1 12981 44 view .LVU7773
 27697 0050 0469     		ldr	r4, [r0, #16]
 27698              	.LVL3469:
12981:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
 27699              		.loc 1 12981 36 view .LVU7774
 27700 0052 0123     		movs	r3, #1
 27701 0054 0DF10702 		add	r2, sp, #7
 27702 0058 0C21     		movs	r1, #12
 27703 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27704 005c A047     		blx	r4
 27705              	.LVL3470:
12985:Core/Src/bno055.c ****                         {
 27706              		.loc 1 12985 25 is_stmt 1 view .LVU7775
12985:Core/Src/bno055.c ****                         {
 27707              		.loc 1 12985 28 is_stmt 0 view .LVU7776
 27708 005e 0446     		mov	r4, r0
 27709 0060 C8B9     		cbnz	r0, .L1876
12987:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27710              		.loc 1 12987 29 is_stmt 1 view .LVU7777
12987:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27711              		.loc 1 12987 40 is_stmt 0 view .LVU7778
 27712 0062 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 27713              	.LVL3471:
12987:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27714              		.loc 1 12987 40 view .LVU7779
 27715 0066 20F01E00 		bic	r0, r0, #30
 27716 006a 43B2     		sxtb	r3, r0
 27717 006c 6800     		lsls	r0, r5, #1
 27718 006e 00F01E00 		and	r0, r0, #30
 27719 0072 1843     		orrs	r0, r0, r3
12987:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27720              		.loc 1 12987 38 view .LVU7780
 27721 0074 8DF80700 		strb	r0, [sp, #7]
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 27722              		.loc 1 12988 29 is_stmt 1 view .LVU7781
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 27723              		.loc 1 12988 49 is_stmt 0 view .LVU7782
 27724 0078 114B     		ldr	r3, .L1887
 27725 007a 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccWoU29M.s 			page 774


 27726 007c C568     		ldr	r5, [r0, #12]
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 27727              		.loc 1 12988 41 view .LVU7783
 27728 007e 0123     		movs	r3, #1
 27729 0080 0DF10702 		add	r2, sp, #7
 27730 0084 0C21     		movs	r1, #12
 27731 0086 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27732 0088 A847     		blx	r5
 27733              	.LVL3472:
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 27734              		.loc 1 12988 38 view .LVU7784
 27735 008a 54FA80F4 		uxtab	r4, r4, r0
 27736 008e 64B2     		sxtb	r4, r4
 27737              	.LVL3473:
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 27738              		.loc 1 12988 38 view .LVU7785
 27739 0090 01E0     		b	.L1876
 27740              	.LVL3474:
 27741              	.L1879:
13007:Core/Src/bno055.c ****             }
13008:Core/Src/bno055.c ****         }
13009:Core/Src/bno055.c ****         else
13010:Core/Src/bno055.c ****         {
13011:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 27742              		.loc 1 13011 22 view .LVU7786
 27743 0092 4FF0FF34 		mov	r4, #-1
 27744              	.LVL3475:
 27745              	.L1876:
13012:Core/Src/bno055.c ****         }
13013:Core/Src/bno055.c ****     }
13014:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 27746              		.loc 1 13014 5 is_stmt 1 view .LVU7787
 27747              		.loc 1 13014 24 is_stmt 0 view .LVU7788
 27748 0096 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 27749              		.loc 1 13014 8 view .LVU7789
 27750 009a 40B9     		cbnz	r0, .L1886
 27751              	.LVL3476:
 27752              	.L1875:
13015:Core/Src/bno055.c ****     {
13016:Core/Src/bno055.c ****         /* set the operation mode of
13017:Core/Src/bno055.c ****          * previous operation mode*/
13018:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
13019:Core/Src/bno055.c ****     }
13020:Core/Src/bno055.c **** 
13021:Core/Src/bno055.c ****     return com_rslt;
13022:Core/Src/bno055.c **** }
 27753              		.loc 1 13022 1 view .LVU7790
 27754 009c 2046     		mov	r0, r4
 27755 009e 03B0     		add	sp, sp, #12
 27756              	.LCFI771:
 27757              		.cfi_remember_state
 27758              		.cfi_def_cfa_offset 12
 27759              		@ sp needed
 27760 00a0 30BD     		pop	{r4, r5, pc}
 27761              	.LVL3477:
 27762              	.L1881:
 27763              	.LCFI772:
ARM GAS  /tmp/ccWoU29M.s 			page 775


 27764              		.cfi_restore_state
13001:Core/Src/bno055.c ****                 }
 27765              		.loc 1 13001 30 view .LVU7791
 27766 00a2 4FF0FF34 		mov	r4, #-1
 27767              	.LVL3478:
13001:Core/Src/bno055.c ****                 }
 27768              		.loc 1 13001 30 view .LVU7792
 27769 00a6 F6E7     		b	.L1876
 27770              	.LVL3479:
 27771              	.L1882:
12996:Core/Src/bno055.c ****                     }
 27772              		.loc 1 12996 34 view .LVU7793
 27773 00a8 6FF00104 		mvn	r4, #1
 27774              	.LVL3480:
12996:Core/Src/bno055.c ****                     }
 27775              		.loc 1 12996 34 view .LVU7794
 27776 00ac F3E7     		b	.L1876
 27777              	.LVL3481:
 27778              	.L1886:
13018:Core/Src/bno055.c ****     }
 27779              		.loc 1 13018 9 is_stmt 1 view .LVU7795
13018:Core/Src/bno055.c ****     }
 27780              		.loc 1 13018 21 is_stmt 0 view .LVU7796
 27781 00ae FFF7FEFF 		bl	bno055_set_operation_mode
 27782              	.LVL3482:
13018:Core/Src/bno055.c ****     }
 27783              		.loc 1 13018 18 view .LVU7797
 27784 00b2 54FA80F4 		uxtab	r4, r4, r0
 27785              	.LVL3483:
13018:Core/Src/bno055.c ****     }
 27786              		.loc 1 13018 18 view .LVU7798
 27787 00b6 64B2     		sxtb	r4, r4
 27788              	.LVL3484:
13018:Core/Src/bno055.c ****     }
 27789              		.loc 1 13018 18 view .LVU7799
 27790 00b8 F0E7     		b	.L1875
 27791              	.LVL3485:
 27792              	.L1878:
12957:Core/Src/bno055.c ****     }
 27793              		.loc 1 12957 16 view .LVU7800
 27794 00ba 6FF07E04 		mvn	r4, #126
 27795 00be EDE7     		b	.L1875
 27796              	.L1888:
 27797              		.align	2
 27798              	.L1887:
 27799 00c0 00000000 		.word	.LANCHOR0
 27800              		.cfi_endproc
 27801              	.LFE196:
 27803              		.section	.text.bno055_get_gyro_sleep_durn,"ax",%progbits
 27804              		.align	1
 27805              		.global	bno055_get_gyro_sleep_durn
 27806              		.syntax unified
 27807              		.thumb
 27808              		.thumb_func
 27809              		.fpu fpv4-sp-d16
 27811              	bno055_get_gyro_sleep_durn:
 27812              	.LVL3486:
ARM GAS  /tmp/ccWoU29M.s 			page 776


 27813              	.LFB197:
13023:Core/Src/bno055.c **** 
13024:Core/Src/bno055.c **** /*!
13025:Core/Src/bno055.c ****  *  @brief This API used to write the gyro sleep duration
13026:Core/Src/bno055.c ****  *  from page one register from 0x0D bit 0 to 2
13027:Core/Src/bno055.c ****  *
13028:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of gyro sleep duration
13029:Core/Src/bno055.c ****  *
13030:Core/Src/bno055.c ****  *  @return results of bus communication function
13031:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13032:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13033:Core/Src/bno055.c ****  *
13034:Core/Src/bno055.c ****  *
13035:Core/Src/bno055.c ****  */
13036:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_sleep_durn(u8 *sleep_durn_u8)
13037:Core/Src/bno055.c **** {
 27814              		.loc 1 13037 1 is_stmt 1 view -0
 27815              		.cfi_startproc
 27816              		@ args = 0, pretend = 0, frame = 8
 27817              		@ frame_needed = 0, uses_anonymous_args = 0
 27818              		.loc 1 13037 1 is_stmt 0 view .LVU7802
 27819 0000 30B5     		push	{r4, r5, lr}
 27820              	.LCFI773:
 27821              		.cfi_def_cfa_offset 12
 27822              		.cfi_offset 4, -12
 27823              		.cfi_offset 5, -8
 27824              		.cfi_offset 14, -4
 27825 0002 83B0     		sub	sp, sp, #12
 27826              	.LCFI774:
 27827              		.cfi_def_cfa_offset 24
13038:Core/Src/bno055.c ****     /* Variable used to return value of
13039:Core/Src/bno055.c ****      * communication routine*/
13040:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27828              		.loc 1 13040 5 is_stmt 1 view .LVU7803
 27829              	.LVL3487:
13041:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27830              		.loc 1 13041 5 view .LVU7804
 27831              		.loc 1 13041 8 is_stmt 0 view .LVU7805
 27832 0004 0023     		movs	r3, #0
 27833 0006 8DF80730 		strb	r3, [sp, #7]
13042:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27834              		.loc 1 13042 5 is_stmt 1 view .LVU7806
 27835              	.LVL3488:
13043:Core/Src/bno055.c **** 
13044:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13045:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27836              		.loc 1 13045 5 view .LVU7807
 27837              		.loc 1 13045 18 is_stmt 0 view .LVU7808
 27838 000a 144B     		ldr	r3, .L1897
 27839 000c 1B68     		ldr	r3, [r3]
 27840              		.loc 1 13045 8 view .LVU7809
 27841 000e F3B1     		cbz	r3, .L1893
 27842 0010 0446     		mov	r4, r0
13046:Core/Src/bno055.c ****     {
13047:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13048:Core/Src/bno055.c ****     }
13049:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccWoU29M.s 			page 777


13050:Core/Src/bno055.c ****     {
13051:Core/Src/bno055.c ****         /*condition check for page, accel range is
13052:Core/Src/bno055.c ****          * available in the page one*/
13053:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 27843              		.loc 1 13053 9 is_stmt 1 view .LVU7810
 27844              		.loc 1 13053 21 is_stmt 0 view .LVU7811
 27845 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27846              		.loc 1 13053 12 view .LVU7812
 27847 0014 012B     		cmp	r3, #1
 27848 0016 14D1     		bne	.L1896
 27849              	.LVL3489:
 27850              	.L1891:
13054:Core/Src/bno055.c ****         {
13055:Core/Src/bno055.c ****             /* Write page as one */
13056:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13057:Core/Src/bno055.c ****         }
13058:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 27851              		.loc 1 13058 53 discriminator 1 view .LVU7813
 27852 0018 104B     		ldr	r3, .L1897
 27853 001a 1B68     		ldr	r3, [r3]
 27854 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27855              		.loc 1 13058 41 discriminator 1 view .LVU7814
 27856 001e 012B     		cmp	r3, #1
 27857 0020 18D1     		bne	.L1894
 27858              	.L1892:
13059:Core/Src/bno055.c ****         {
13060:Core/Src/bno055.c ****             /* Read the gyro sleep duration */
13061:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 27859              		.loc 1 13061 13 is_stmt 1 view .LVU7815
 27860              		.loc 1 13061 32 is_stmt 0 view .LVU7816
 27861 0022 0E4B     		ldr	r3, .L1897
 27862 0024 1868     		ldr	r0, [r3]
 27863 0026 0569     		ldr	r5, [r0, #16]
 27864              		.loc 1 13061 24 view .LVU7817
 27865 0028 0123     		movs	r3, #1
 27866 002a 0DF10702 		add	r2, sp, #7
 27867 002e 0D21     		movs	r1, #13
 27868 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27869 0032 A847     		blx	r5
 27870              	.LVL3490:
13062:Core/Src/bno055.c ****                                                       BNO055_GYRO_SLEEP_DURN_REG,
13063:Core/Src/bno055.c ****                                                       &data_u8r,
13064:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13065:Core/Src/bno055.c ****             *sleep_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_SLEEP_DURN);
 27871              		.loc 1 13065 13 is_stmt 1 view .LVU7818
 27872              		.loc 1 13065 30 is_stmt 0 view .LVU7819
 27873 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 27874 0038 03F00703 		and	r3, r3, #7
 27875              		.loc 1 13065 28 view .LVU7820
 27876 003c 2370     		strb	r3, [r4]
 27877              	.LVL3491:
 27878              	.L1890:
13066:Core/Src/bno055.c ****         }
13067:Core/Src/bno055.c ****         else
13068:Core/Src/bno055.c ****         {
13069:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13070:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 778


13071:Core/Src/bno055.c ****     }
13072:Core/Src/bno055.c **** 
13073:Core/Src/bno055.c ****     return com_rslt;
13074:Core/Src/bno055.c **** }
 27879              		.loc 1 13074 1 view .LVU7821
 27880 003e 03B0     		add	sp, sp, #12
 27881              	.LCFI775:
 27882              		.cfi_remember_state
 27883              		.cfi_def_cfa_offset 12
 27884              		@ sp needed
 27885 0040 30BD     		pop	{r4, r5, pc}
 27886              	.LVL3492:
 27887              	.L1896:
 27888              	.LCFI776:
 27889              		.cfi_restore_state
13056:Core/Src/bno055.c ****         }
 27890              		.loc 1 13056 13 is_stmt 1 view .LVU7822
13056:Core/Src/bno055.c ****         }
 27891              		.loc 1 13056 23 is_stmt 0 view .LVU7823
 27892 0042 0120     		movs	r0, #1
 27893              	.LVL3493:
13056:Core/Src/bno055.c ****         }
 27894              		.loc 1 13056 23 view .LVU7824
 27895 0044 FFF7FEFF 		bl	bno055_write_page_id
 27896              	.LVL3494:
13058:Core/Src/bno055.c ****         {
 27897              		.loc 1 13058 9 is_stmt 1 view .LVU7825
13058:Core/Src/bno055.c ****         {
 27898              		.loc 1 13058 12 is_stmt 0 view .LVU7826
 27899 0048 0028     		cmp	r0, #0
 27900 004a EAD0     		beq	.L1892
 27901 004c E4E7     		b	.L1891
 27902              	.LVL3495:
 27903              	.L1893:
13047:Core/Src/bno055.c ****     }
 27904              		.loc 1 13047 16 view .LVU7827
 27905 004e 6FF07E00 		mvn	r0, #126
 27906              	.LVL3496:
13047:Core/Src/bno055.c ****     }
 27907              		.loc 1 13047 16 view .LVU7828
 27908 0052 F4E7     		b	.L1890
 27909              	.LVL3497:
 27910              	.L1894:
13069:Core/Src/bno055.c ****         }
 27911              		.loc 1 13069 22 view .LVU7829
 27912 0054 4FF0FF30 		mov	r0, #-1
 27913 0058 F1E7     		b	.L1890
 27914              	.L1898:
 27915 005a 00BF     		.align	2
 27916              	.L1897:
 27917 005c 00000000 		.word	.LANCHOR0
 27918              		.cfi_endproc
 27919              	.LFE197:
 27921              		.section	.text.bno055_set_gyro_sleep_durn,"ax",%progbits
 27922              		.align	1
 27923              		.global	bno055_set_gyro_sleep_durn
 27924              		.syntax unified
ARM GAS  /tmp/ccWoU29M.s 			page 779


 27925              		.thumb
 27926              		.thumb_func
 27927              		.fpu fpv4-sp-d16
 27929              	bno055_set_gyro_sleep_durn:
 27930              	.LVL3498:
 27931              	.LFB198:
13075:Core/Src/bno055.c **** 
13076:Core/Src/bno055.c **** /*!
13077:Core/Src/bno055.c ****  *  @brief This API used to write the gyro sleep duration
13078:Core/Src/bno055.c ****  *  from page one register from 0x0D bit 0 to 2
13079:Core/Src/bno055.c ****  *
13080:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of gyro sleep duration
13081:Core/Src/bno055.c ****  *
13082:Core/Src/bno055.c ****  *  @return results of bus communication function
13083:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13084:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13085:Core/Src/bno055.c ****  *
13086:Core/Src/bno055.c ****  *
13087:Core/Src/bno055.c ****  */
13088:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_sleep_durn(u8 sleep_durn_u8)
13089:Core/Src/bno055.c **** {
 27932              		.loc 1 13089 1 is_stmt 1 view -0
 27933              		.cfi_startproc
 27934              		@ args = 0, pretend = 0, frame = 8
 27935              		@ frame_needed = 0, uses_anonymous_args = 0
 27936              		.loc 1 13089 1 is_stmt 0 view .LVU7831
 27937 0000 30B5     		push	{r4, r5, lr}
 27938              	.LCFI777:
 27939              		.cfi_def_cfa_offset 12
 27940              		.cfi_offset 4, -12
 27941              		.cfi_offset 5, -8
 27942              		.cfi_offset 14, -4
 27943 0002 83B0     		sub	sp, sp, #12
 27944              	.LCFI778:
 27945              		.cfi_def_cfa_offset 24
13090:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27946              		.loc 1 13090 5 is_stmt 1 view .LVU7832
 27947              	.LVL3499:
13091:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27948              		.loc 1 13091 5 view .LVU7833
 27949              		.loc 1 13091 8 is_stmt 0 view .LVU7834
 27950 0004 0023     		movs	r3, #0
 27951 0006 8DF80730 		strb	r3, [sp, #7]
13092:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27952              		.loc 1 13092 5 is_stmt 1 view .LVU7835
 27953              	.LVL3500:
13093:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 27954              		.loc 1 13093 5 view .LVU7836
13094:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 27955              		.loc 1 13094 5 view .LVU7837
 27956              		.loc 1 13094 8 is_stmt 0 view .LVU7838
 27957 000a 8DF80630 		strb	r3, [sp, #6]
13095:Core/Src/bno055.c **** 
13096:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13097:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27958              		.loc 1 13097 5 is_stmt 1 view .LVU7839
 27959              		.loc 1 13097 18 is_stmt 0 view .LVU7840
ARM GAS  /tmp/ccWoU29M.s 			page 780


 27960 000e 2C4B     		ldr	r3, .L1912
 27961 0010 1B68     		ldr	r3, [r3]
 27962              		.loc 1 13097 8 view .LVU7841
 27963 0012 002B     		cmp	r3, #0
 27964 0014 50D0     		beq	.L1903
 27965 0016 0546     		mov	r5, r0
13098:Core/Src/bno055.c ****     {
13099:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13100:Core/Src/bno055.c ****     }
13101:Core/Src/bno055.c ****     else
13102:Core/Src/bno055.c ****     {
13103:Core/Src/bno055.c ****         /* The write operation effective only if the operation
13104:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
13105:Core/Src/bno055.c ****          * current operation mode and set the config mode */
13106:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 27966              		.loc 1 13106 9 is_stmt 1 view .LVU7842
 27967              		.loc 1 13106 19 is_stmt 0 view .LVU7843
 27968 0018 0DF10600 		add	r0, sp, #6
 27969              	.LVL3501:
 27970              		.loc 1 13106 19 view .LVU7844
 27971 001c FFF7FEFF 		bl	bno055_get_operation_mode
 27972              	.LVL3502:
13107:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 27973              		.loc 1 13107 9 is_stmt 1 view .LVU7845
 27974              		.loc 1 13107 12 is_stmt 0 view .LVU7846
 27975 0020 0446     		mov	r4, r0
 27976 0022 0028     		cmp	r0, #0
 27977 0024 34D1     		bne	.L1904
13108:Core/Src/bno055.c ****         {
13109:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 27978              		.loc 1 13109 13 is_stmt 1 view .LVU7847
 27979              		.loc 1 13109 32 is_stmt 0 view .LVU7848
 27980 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 27981              		.loc 1 13109 16 view .LVU7849
 27982 002a 1BB9     		cbnz	r3, .L1909
 27983              	.LVL3503:
 27984              	.L1902:
13110:Core/Src/bno055.c ****             {
13111:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
13112:Core/Src/bno055.c ****             }
13113:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 27985              		.loc 1 13113 13 is_stmt 1 view .LVU7850
 27986              		.loc 1 13113 16 is_stmt 0 view .LVU7851
 27987 002c 44B1     		cbz	r4, .L1910
13114:Core/Src/bno055.c ****             {
13115:Core/Src/bno055.c ****                 /* Write page as one */
13116:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13117:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
13118:Core/Src/bno055.c ****                 {
13119:Core/Src/bno055.c ****                     if (sleep_durn_u8 < BNO055_GYRO_AUTO_SLEEP_DURATION_RANGE)
13120:Core/Src/bno055.c ****                     {
13121:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
13122:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
13123:Core/Src/bno055.c ****                                                                   &data_u8r,
13124:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
13125:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
13126:Core/Src/bno055.c ****                         {
ARM GAS  /tmp/ccWoU29M.s 			page 781


13127:Core/Src/bno055.c ****                             /* Write the gyro
13128:Core/Src/bno055.c ****                              *  sleep duration */
13129:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_SLEEP_DURN, sleep_
13130:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
13131:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
13132:Core/Src/bno055.c ****                                                                         &data_u8r,
13133:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
13134:Core/Src/bno055.c ****                         }
13135:Core/Src/bno055.c ****                     }
13136:Core/Src/bno055.c ****                     else
13137:Core/Src/bno055.c ****                     {
13138:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
13139:Core/Src/bno055.c ****                     }
13140:Core/Src/bno055.c ****                 }
13141:Core/Src/bno055.c ****                 else
13142:Core/Src/bno055.c ****                 {
13143:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
13144:Core/Src/bno055.c ****                 }
13145:Core/Src/bno055.c ****             }
13146:Core/Src/bno055.c ****             else
13147:Core/Src/bno055.c ****             {
13148:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 27988              		.loc 1 13148 26 view .LVU7852
 27989 002e 4FF0FF34 		mov	r4, #-1
 27990              	.LVL3504:
 27991              		.loc 1 13148 26 view .LVU7853
 27992 0032 2FE0     		b	.L1901
 27993              	.LVL3505:
 27994              	.L1909:
13111:Core/Src/bno055.c ****             }
 27995              		.loc 1 13111 17 is_stmt 1 view .LVU7854
13111:Core/Src/bno055.c ****             }
 27996              		.loc 1 13111 28 is_stmt 0 view .LVU7855
 27997 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 27998              	.LVL3506:
13111:Core/Src/bno055.c ****             }
 27999              		.loc 1 13111 25 view .LVU7856
 28000 0038 54FA80F4 		uxtab	r4, r4, r0
 28001 003c 64B2     		sxtb	r4, r4
 28002              	.LVL3507:
13111:Core/Src/bno055.c ****             }
 28003              		.loc 1 13111 25 view .LVU7857
 28004 003e F5E7     		b	.L1902
 28005              	.L1910:
13116:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28006              		.loc 1 13116 17 is_stmt 1 view .LVU7858
13116:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28007              		.loc 1 13116 30 is_stmt 0 view .LVU7859
 28008 0040 0120     		movs	r0, #1
 28009 0042 FFF7FEFF 		bl	bno055_write_page_id
 28010              	.LVL3508:
13117:Core/Src/bno055.c ****                 {
 28011              		.loc 1 13117 17 is_stmt 1 view .LVU7860
13117:Core/Src/bno055.c ****                 {
 28012              		.loc 1 13117 20 is_stmt 0 view .LVU7861
 28013 0046 58BB     		cbnz	r0, .L1906
13119:Core/Src/bno055.c ****                     {
ARM GAS  /tmp/ccWoU29M.s 			page 782


 28014              		.loc 1 13119 21 is_stmt 1 view .LVU7862
13119:Core/Src/bno055.c ****                     {
 28015              		.loc 1 13119 24 is_stmt 0 view .LVU7863
 28016 0048 072D     		cmp	r5, #7
 28017 004a 2CD8     		bhi	.L1907
13121:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
 28018              		.loc 1 13121 25 is_stmt 1 view .LVU7864
13121:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
 28019              		.loc 1 13121 44 is_stmt 0 view .LVU7865
 28020 004c 1C4B     		ldr	r3, .L1912
 28021 004e 1868     		ldr	r0, [r3]
 28022              	.LVL3509:
13121:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
 28023              		.loc 1 13121 44 view .LVU7866
 28024 0050 0469     		ldr	r4, [r0, #16]
 28025              	.LVL3510:
13121:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
 28026              		.loc 1 13121 36 view .LVU7867
 28027 0052 0123     		movs	r3, #1
 28028 0054 0DF10702 		add	r2, sp, #7
 28029 0058 0D21     		movs	r1, #13
 28030 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28031 005c A047     		blx	r4
 28032              	.LVL3511:
13125:Core/Src/bno055.c ****                         {
 28033              		.loc 1 13125 25 is_stmt 1 view .LVU7868
13125:Core/Src/bno055.c ****                         {
 28034              		.loc 1 13125 28 is_stmt 0 view .LVU7869
 28035 005e 0446     		mov	r4, r0
 28036 0060 C0B9     		cbnz	r0, .L1901
13129:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28037              		.loc 1 13129 29 is_stmt 1 view .LVU7870
13129:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28038              		.loc 1 13129 40 is_stmt 0 view .LVU7871
 28039 0062 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 28040              	.LVL3512:
13129:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28041              		.loc 1 13129 40 view .LVU7872
 28042 0066 20F00700 		bic	r0, r0, #7
 28043 006a 43B2     		sxtb	r3, r0
 28044 006c 05F00700 		and	r0, r5, #7
 28045 0070 1843     		orrs	r0, r0, r3
13129:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28046              		.loc 1 13129 38 view .LVU7873
 28047 0072 8DF80700 		strb	r0, [sp, #7]
13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 28048              		.loc 1 13130 29 is_stmt 1 view .LVU7874
13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 28049              		.loc 1 13130 49 is_stmt 0 view .LVU7875
 28050 0076 124B     		ldr	r3, .L1912
 28051 0078 1868     		ldr	r0, [r3]
 28052 007a C568     		ldr	r5, [r0, #12]
13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 28053              		.loc 1 13130 41 view .LVU7876
 28054 007c 0123     		movs	r3, #1
 28055 007e 0DF10702 		add	r2, sp, #7
 28056 0082 0D21     		movs	r1, #13
ARM GAS  /tmp/ccWoU29M.s 			page 783


 28057 0084 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28058 0086 A847     		blx	r5
 28059              	.LVL3513:
13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 28060              		.loc 1 13130 38 view .LVU7877
 28061 0088 54FA80F4 		uxtab	r4, r4, r0
 28062 008c 64B2     		sxtb	r4, r4
 28063              	.LVL3514:
13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 28064              		.loc 1 13130 38 view .LVU7878
 28065 008e 01E0     		b	.L1901
 28066              	.LVL3515:
 28067              	.L1904:
13149:Core/Src/bno055.c ****             }
13150:Core/Src/bno055.c ****         }
13151:Core/Src/bno055.c ****         else
13152:Core/Src/bno055.c ****         {
13153:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 28068              		.loc 1 13153 22 view .LVU7879
 28069 0090 4FF0FF34 		mov	r4, #-1
 28070              	.LVL3516:
 28071              	.L1901:
13154:Core/Src/bno055.c ****         }
13155:Core/Src/bno055.c ****     }
13156:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 28072              		.loc 1 13156 5 is_stmt 1 view .LVU7880
 28073              		.loc 1 13156 24 is_stmt 0 view .LVU7881
 28074 0094 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 28075              		.loc 1 13156 8 view .LVU7882
 28076 0098 40B9     		cbnz	r0, .L1911
 28077              	.LVL3517:
 28078              	.L1900:
13157:Core/Src/bno055.c ****     {
13158:Core/Src/bno055.c ****         /* set the operation mode of
13159:Core/Src/bno055.c ****          * previous operation mode*/
13160:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
13161:Core/Src/bno055.c ****     }
13162:Core/Src/bno055.c **** 
13163:Core/Src/bno055.c ****     return com_rslt;
13164:Core/Src/bno055.c **** }
 28079              		.loc 1 13164 1 view .LVU7883
 28080 009a 2046     		mov	r0, r4
 28081 009c 03B0     		add	sp, sp, #12
 28082              	.LCFI779:
 28083              		.cfi_remember_state
 28084              		.cfi_def_cfa_offset 12
 28085              		@ sp needed
 28086 009e 30BD     		pop	{r4, r5, pc}
 28087              	.LVL3518:
 28088              	.L1906:
 28089              	.LCFI780:
 28090              		.cfi_restore_state
13143:Core/Src/bno055.c ****                 }
 28091              		.loc 1 13143 30 view .LVU7884
 28092 00a0 4FF0FF34 		mov	r4, #-1
 28093              	.LVL3519:
13143:Core/Src/bno055.c ****                 }
ARM GAS  /tmp/ccWoU29M.s 			page 784


 28094              		.loc 1 13143 30 view .LVU7885
 28095 00a4 F6E7     		b	.L1901
 28096              	.LVL3520:
 28097              	.L1907:
13138:Core/Src/bno055.c ****                     }
 28098              		.loc 1 13138 34 view .LVU7886
 28099 00a6 6FF00104 		mvn	r4, #1
 28100              	.LVL3521:
13138:Core/Src/bno055.c ****                     }
 28101              		.loc 1 13138 34 view .LVU7887
 28102 00aa F3E7     		b	.L1901
 28103              	.LVL3522:
 28104              	.L1911:
13160:Core/Src/bno055.c ****     }
 28105              		.loc 1 13160 9 is_stmt 1 view .LVU7888
13160:Core/Src/bno055.c ****     }
 28106              		.loc 1 13160 21 is_stmt 0 view .LVU7889
 28107 00ac FFF7FEFF 		bl	bno055_set_operation_mode
 28108              	.LVL3523:
13160:Core/Src/bno055.c ****     }
 28109              		.loc 1 13160 18 view .LVU7890
 28110 00b0 54FA80F4 		uxtab	r4, r4, r0
 28111              	.LVL3524:
13160:Core/Src/bno055.c ****     }
 28112              		.loc 1 13160 18 view .LVU7891
 28113 00b4 64B2     		sxtb	r4, r4
 28114              	.LVL3525:
13160:Core/Src/bno055.c ****     }
 28115              		.loc 1 13160 18 view .LVU7892
 28116 00b6 F0E7     		b	.L1900
 28117              	.LVL3526:
 28118              	.L1903:
13099:Core/Src/bno055.c ****     }
 28119              		.loc 1 13099 16 view .LVU7893
 28120 00b8 6FF07E04 		mvn	r4, #126
 28121 00bc EDE7     		b	.L1900
 28122              	.L1913:
 28123 00be 00BF     		.align	2
 28124              	.L1912:
 28125 00c0 00000000 		.word	.LANCHOR0
 28126              		.cfi_endproc
 28127              	.LFE198:
 28129              		.section	.text.bno055_get_gyro_auto_sleep_durn,"ax",%progbits
 28130              		.align	1
 28131              		.global	bno055_get_gyro_auto_sleep_durn
 28132              		.syntax unified
 28133              		.thumb
 28134              		.thumb_func
 28135              		.fpu fpv4-sp-d16
 28137              	bno055_get_gyro_auto_sleep_durn:
 28138              	.LVL3527:
 28139              	.LFB199:
13165:Core/Src/bno055.c **** 
13166:Core/Src/bno055.c **** /*!
13167:Core/Src/bno055.c ****  *  @brief This API used to read the gyro auto sleep duration
13168:Core/Src/bno055.c ****  *  from page one register from 0x0D bit 3 to 5
13169:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 785


13170:Core/Src/bno055.c ****  *  @param auto_sleep_durn_u8 : The value of gyro auto sleep duration
13171:Core/Src/bno055.c ****  *
13172:Core/Src/bno055.c ****  *  @return results of bus communication function
13173:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13174:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13175:Core/Src/bno055.c ****  *
13176:Core/Src/bno055.c ****  *
13177:Core/Src/bno055.c ****  */
13178:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_auto_sleep_durn(u8 *auto_sleep_durn_u8)
13179:Core/Src/bno055.c **** {
 28140              		.loc 1 13179 1 is_stmt 1 view -0
 28141              		.cfi_startproc
 28142              		@ args = 0, pretend = 0, frame = 8
 28143              		@ frame_needed = 0, uses_anonymous_args = 0
 28144              		.loc 1 13179 1 is_stmt 0 view .LVU7895
 28145 0000 30B5     		push	{r4, r5, lr}
 28146              	.LCFI781:
 28147              		.cfi_def_cfa_offset 12
 28148              		.cfi_offset 4, -12
 28149              		.cfi_offset 5, -8
 28150              		.cfi_offset 14, -4
 28151 0002 83B0     		sub	sp, sp, #12
 28152              	.LCFI782:
 28153              		.cfi_def_cfa_offset 24
13180:Core/Src/bno055.c ****     /* Variable used to return value of
13181:Core/Src/bno055.c ****      * communication routine*/
13182:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28154              		.loc 1 13182 5 is_stmt 1 view .LVU7896
 28155              	.LVL3528:
13183:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 28156              		.loc 1 13183 5 view .LVU7897
 28157              		.loc 1 13183 8 is_stmt 0 view .LVU7898
 28158 0004 0023     		movs	r3, #0
 28159 0006 8DF80730 		strb	r3, [sp, #7]
13184:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28160              		.loc 1 13184 5 is_stmt 1 view .LVU7899
 28161              	.LVL3529:
13185:Core/Src/bno055.c **** 
13186:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13187:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 28162              		.loc 1 13187 5 view .LVU7900
 28163              		.loc 1 13187 18 is_stmt 0 view .LVU7901
 28164 000a 144B     		ldr	r3, .L1922
 28165 000c 1B68     		ldr	r3, [r3]
 28166              		.loc 1 13187 8 view .LVU7902
 28167 000e F3B1     		cbz	r3, .L1918
 28168 0010 0446     		mov	r4, r0
13188:Core/Src/bno055.c ****     {
13189:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13190:Core/Src/bno055.c ****     }
13191:Core/Src/bno055.c ****     else
13192:Core/Src/bno055.c ****     {
13193:Core/Src/bno055.c ****         /*condition check for page, accel range is
13194:Core/Src/bno055.c ****          * available in the page one*/
13195:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 28169              		.loc 1 13195 9 is_stmt 1 view .LVU7903
 28170              		.loc 1 13195 21 is_stmt 0 view .LVU7904
ARM GAS  /tmp/ccWoU29M.s 			page 786


 28171 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 28172              		.loc 1 13195 12 view .LVU7905
 28173 0014 012B     		cmp	r3, #1
 28174 0016 14D1     		bne	.L1921
 28175              	.LVL3530:
 28176              	.L1916:
13196:Core/Src/bno055.c ****         {
13197:Core/Src/bno055.c ****             /* Write page as one */
13198:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13199:Core/Src/bno055.c ****         }
13200:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 28177              		.loc 1 13200 53 discriminator 1 view .LVU7906
 28178 0018 104B     		ldr	r3, .L1922
 28179 001a 1B68     		ldr	r3, [r3]
 28180 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 28181              		.loc 1 13200 41 discriminator 1 view .LVU7907
 28182 001e 012B     		cmp	r3, #1
 28183 0020 18D1     		bne	.L1919
 28184              	.L1917:
13201:Core/Src/bno055.c ****         {
13202:Core/Src/bno055.c ****             /* Read the value of gyro auto sleep duration */
13203:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 28185              		.loc 1 13203 13 is_stmt 1 view .LVU7908
 28186              		.loc 1 13203 32 is_stmt 0 view .LVU7909
 28187 0022 0E4B     		ldr	r3, .L1922
 28188 0024 1868     		ldr	r0, [r3]
 28189 0026 0569     		ldr	r5, [r0, #16]
 28190              		.loc 1 13203 24 view .LVU7910
 28191 0028 0123     		movs	r3, #1
 28192 002a 0DF10702 		add	r2, sp, #7
 28193 002e 0D21     		movs	r1, #13
 28194 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28195 0032 A847     		blx	r5
 28196              	.LVL3531:
13204:Core/Src/bno055.c ****                                                       BNO055_GYRO_AUTO_SLEEP_DURN_REG,
13205:Core/Src/bno055.c ****                                                       &data_u8r,
13206:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13207:Core/Src/bno055.c ****             *auto_sleep_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_AUTO_SLEEP_DURN);
 28197              		.loc 1 13207 13 is_stmt 1 view .LVU7911
 28198              		.loc 1 13207 35 is_stmt 0 view .LVU7912
 28199 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 28200 0038 C3F3C203 		ubfx	r3, r3, #3, #3
 28201              		.loc 1 13207 33 view .LVU7913
 28202 003c 2370     		strb	r3, [r4]
 28203              	.LVL3532:
 28204              	.L1915:
13208:Core/Src/bno055.c ****         }
13209:Core/Src/bno055.c ****         else
13210:Core/Src/bno055.c ****         {
13211:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13212:Core/Src/bno055.c ****         }
13213:Core/Src/bno055.c ****     }
13214:Core/Src/bno055.c **** 
13215:Core/Src/bno055.c ****     return com_rslt;
13216:Core/Src/bno055.c **** }
 28205              		.loc 1 13216 1 view .LVU7914
 28206 003e 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccWoU29M.s 			page 787


 28207              	.LCFI783:
 28208              		.cfi_remember_state
 28209              		.cfi_def_cfa_offset 12
 28210              		@ sp needed
 28211 0040 30BD     		pop	{r4, r5, pc}
 28212              	.LVL3533:
 28213              	.L1921:
 28214              	.LCFI784:
 28215              		.cfi_restore_state
13198:Core/Src/bno055.c ****         }
 28216              		.loc 1 13198 13 is_stmt 1 view .LVU7915
13198:Core/Src/bno055.c ****         }
 28217              		.loc 1 13198 23 is_stmt 0 view .LVU7916
 28218 0042 0120     		movs	r0, #1
 28219              	.LVL3534:
13198:Core/Src/bno055.c ****         }
 28220              		.loc 1 13198 23 view .LVU7917
 28221 0044 FFF7FEFF 		bl	bno055_write_page_id
 28222              	.LVL3535:
13200:Core/Src/bno055.c ****         {
 28223              		.loc 1 13200 9 is_stmt 1 view .LVU7918
13200:Core/Src/bno055.c ****         {
 28224              		.loc 1 13200 12 is_stmt 0 view .LVU7919
 28225 0048 0028     		cmp	r0, #0
 28226 004a EAD0     		beq	.L1917
 28227 004c E4E7     		b	.L1916
 28228              	.LVL3536:
 28229              	.L1918:
13189:Core/Src/bno055.c ****     }
 28230              		.loc 1 13189 16 view .LVU7920
 28231 004e 6FF07E00 		mvn	r0, #126
 28232              	.LVL3537:
13189:Core/Src/bno055.c ****     }
 28233              		.loc 1 13189 16 view .LVU7921
 28234 0052 F4E7     		b	.L1915
 28235              	.LVL3538:
 28236              	.L1919:
13211:Core/Src/bno055.c ****         }
 28237              		.loc 1 13211 22 view .LVU7922
 28238 0054 4FF0FF30 		mov	r0, #-1
 28239 0058 F1E7     		b	.L1915
 28240              	.L1923:
 28241 005a 00BF     		.align	2
 28242              	.L1922:
 28243 005c 00000000 		.word	.LANCHOR0
 28244              		.cfi_endproc
 28245              	.LFE199:
 28247              		.section	.text.bno055_gyro_set_auto_sleep_durn,"ax",%progbits
 28248              		.align	1
 28249              		.global	bno055_gyro_set_auto_sleep_durn
 28250              		.syntax unified
 28251              		.thumb
 28252              		.thumb_func
 28253              		.fpu fpv4-sp-d16
 28255              	bno055_gyro_set_auto_sleep_durn:
 28256              	.LVL3539:
 28257              	.LFB200:
ARM GAS  /tmp/ccWoU29M.s 			page 788


13217:Core/Src/bno055.c **** 
13218:Core/Src/bno055.c **** /*!
13219:Core/Src/bno055.c ****  *  @brief This API used to write the gyro auto sleep duration
13220:Core/Src/bno055.c ****  *  from page one register from 0x0D bit 3 to 5
13221:Core/Src/bno055.c ****  *
13222:Core/Src/bno055.c ****  *  @param auto_sleep_durn_u8 : The value of gyro auto sleep duration
13223:Core/Src/bno055.c ****  *  @param bw : The value of gyro bandwidth
13224:Core/Src/bno055.c ****  *
13225:Core/Src/bno055.c ****  *  @return results of bus communication function
13226:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13227:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13228:Core/Src/bno055.c ****  *
13229:Core/Src/bno055.c ****  *
13230:Core/Src/bno055.c ****  */
13231:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_gyro_set_auto_sleep_durn(u8 auto_sleep_durn_u8, u8 bw)
13232:Core/Src/bno055.c **** {
 28258              		.loc 1 13232 1 is_stmt 1 view -0
 28259              		.cfi_startproc
 28260              		@ args = 0, pretend = 0, frame = 8
 28261              		@ frame_needed = 0, uses_anonymous_args = 0
 28262              		.loc 1 13232 1 is_stmt 0 view .LVU7924
 28263 0000 70B5     		push	{r4, r5, r6, lr}
 28264              	.LCFI785:
 28265              		.cfi_def_cfa_offset 16
 28266              		.cfi_offset 4, -16
 28267              		.cfi_offset 5, -12
 28268              		.cfi_offset 6, -8
 28269              		.cfi_offset 14, -4
 28270 0002 82B0     		sub	sp, sp, #8
 28271              	.LCFI786:
 28272              		.cfi_def_cfa_offset 24
13233:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28273              		.loc 1 13233 5 is_stmt 1 view .LVU7925
 28274              	.LVL3540:
13234:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 28275              		.loc 1 13234 5 view .LVU7926
 28276              		.loc 1 13234 8 is_stmt 0 view .LVU7927
 28277 0004 0023     		movs	r3, #0
 28278 0006 8DF80730 		strb	r3, [sp, #7]
13235:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28279              		.loc 1 13235 5 is_stmt 1 view .LVU7928
 28280              	.LVL3541:
13236:Core/Src/bno055.c ****     u8 auto_sleep_durn_u8r;
 28281              		.loc 1 13236 5 view .LVU7929
13237:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 28282              		.loc 1 13237 5 view .LVU7930
 28283              		.loc 1 13237 8 is_stmt 0 view .LVU7931
 28284 000a 8DF80630 		strb	r3, [sp, #6]
13238:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 28285              		.loc 1 13238 5 is_stmt 1 view .LVU7932
 28286              	.LVL3542:
13239:Core/Src/bno055.c **** 
13240:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13241:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 28287              		.loc 1 13241 5 view .LVU7933
 28288              		.loc 1 13241 18 is_stmt 0 view .LVU7934
 28289 000e 444B     		ldr	r3, .L1958
ARM GAS  /tmp/ccWoU29M.s 			page 789


 28290 0010 1B68     		ldr	r3, [r3]
 28291              		.loc 1 13241 8 view .LVU7935
 28292 0012 002B     		cmp	r3, #0
 28293 0014 00F08180 		beq	.L1939
 28294 0018 0546     		mov	r5, r0
 28295 001a 0C46     		mov	r4, r1
13242:Core/Src/bno055.c ****     {
13243:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13244:Core/Src/bno055.c ****     }
13245:Core/Src/bno055.c ****     else
13246:Core/Src/bno055.c ****     {
13247:Core/Src/bno055.c ****         /* The write operation effective only if the operation
13248:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
13249:Core/Src/bno055.c ****          * current operation mode and set the config mode */
13250:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 28296              		.loc 1 13250 9 is_stmt 1 view .LVU7936
 28297              		.loc 1 13250 19 is_stmt 0 view .LVU7937
 28298 001c 0DF10600 		add	r0, sp, #6
 28299              	.LVL3543:
 28300              		.loc 1 13250 19 view .LVU7938
 28301 0020 FFF7FEFF 		bl	bno055_get_operation_mode
 28302              	.LVL3544:
13251:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28303              		.loc 1 13251 9 is_stmt 1 view .LVU7939
 28304              		.loc 1 13251 12 is_stmt 0 view .LVU7940
 28305 0024 0646     		mov	r6, r0
 28306 0026 0028     		cmp	r0, #0
 28307 0028 63D1     		bne	.L1940
13252:Core/Src/bno055.c ****         {
13253:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 28308              		.loc 1 13253 13 is_stmt 1 view .LVU7941
 28309              		.loc 1 13253 32 is_stmt 0 view .LVU7942
 28310 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 28311              		.loc 1 13253 16 view .LVU7943
 28312 002e 1BB9     		cbnz	r3, .L1954
 28313              	.LVL3545:
 28314              	.L1927:
13254:Core/Src/bno055.c ****             {
13255:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
13256:Core/Src/bno055.c ****             }
13257:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 28315              		.loc 1 13257 13 is_stmt 1 view .LVU7944
 28316              		.loc 1 13257 16 is_stmt 0 view .LVU7945
 28317 0030 46B1     		cbz	r6, .L1955
13258:Core/Src/bno055.c ****             {
13259:Core/Src/bno055.c ****                 /* Write page as one */
13260:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13261:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
13262:Core/Src/bno055.c ****                 {
13263:Core/Src/bno055.c ****                     /* Write the value of gyro sleep duration */
13264:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
13265:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
13266:Core/Src/bno055.c ****                                                               &data_u8r,
13267:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
13268:Core/Src/bno055.c ****                     if (auto_sleep_durn_u8 < BNO055_GYRO_AUTO_SLEEP_DURATION_RANGE)
13269:Core/Src/bno055.c ****                     {
13270:Core/Src/bno055.c ****                         switch (bw)
ARM GAS  /tmp/ccWoU29M.s 			page 790


13271:Core/Src/bno055.c ****                         {
13272:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_523HZ:
13273:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_4MS_AUTOSLPDUR)
13274:Core/Src/bno055.c ****                                 {
13275:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13276:Core/Src/bno055.c ****                                 }
13277:Core/Src/bno055.c ****                                 else
13278:Core/Src/bno055.c ****                                 {
13279:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_4MS_AUTOSLPDUR;
13280:Core/Src/bno055.c ****                                 }
13281:Core/Src/bno055.c ****                                 break;
13282:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_230HZ:
13283:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_4MS_AUTOSLPDUR)
13284:Core/Src/bno055.c ****                                 {
13285:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13286:Core/Src/bno055.c ****                                 }
13287:Core/Src/bno055.c ****                                 else
13288:Core/Src/bno055.c ****                                 {
13289:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_4MS_AUTOSLPDUR;
13290:Core/Src/bno055.c ****                                 }
13291:Core/Src/bno055.c ****                                 break;
13292:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_116HZ:
13293:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_4MS_AUTOSLPDUR)
13294:Core/Src/bno055.c ****                                 {
13295:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13296:Core/Src/bno055.c ****                                 }
13297:Core/Src/bno055.c ****                                 else
13298:Core/Src/bno055.c ****                                 {
13299:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_4MS_AUTOSLPDUR;
13300:Core/Src/bno055.c ****                                 }
13301:Core/Src/bno055.c ****                                 break;
13302:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_47HZ:
13303:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_5MS_AUTOSLPDUR)
13304:Core/Src/bno055.c ****                                 {
13305:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13306:Core/Src/bno055.c ****                                 }
13307:Core/Src/bno055.c ****                                 else
13308:Core/Src/bno055.c ****                                 {
13309:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_5MS_AUTOSLPDUR;
13310:Core/Src/bno055.c ****                                 }
13311:Core/Src/bno055.c ****                                 break;
13312:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_23HZ:
13313:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_10MS_AUTOSLPDUR)
13314:Core/Src/bno055.c ****                                 {
13315:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13316:Core/Src/bno055.c ****                                 }
13317:Core/Src/bno055.c ****                                 else
13318:Core/Src/bno055.c ****                                 {
13319:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_10MS_AUTOSLPDUR;
13320:Core/Src/bno055.c ****                                 }
13321:Core/Src/bno055.c ****                                 break;
13322:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_12HZ:
13323:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_20MS_AUTOSLPDUR)
13324:Core/Src/bno055.c ****                                 {
13325:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13326:Core/Src/bno055.c ****                                 }
13327:Core/Src/bno055.c ****                                 else
ARM GAS  /tmp/ccWoU29M.s 			page 791


13328:Core/Src/bno055.c ****                                 {
13329:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_20MS_AUTOSLPDUR;
13330:Core/Src/bno055.c ****                                 }
13331:Core/Src/bno055.c ****                                 break;
13332:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_64HZ:
13333:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_10MS_AUTOSLPDUR)
13334:Core/Src/bno055.c ****                                 {
13335:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13336:Core/Src/bno055.c ****                                 }
13337:Core/Src/bno055.c ****                                 else
13338:Core/Src/bno055.c ****                                 {
13339:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_10MS_AUTOSLPDUR;
13340:Core/Src/bno055.c ****                                 }
13341:Core/Src/bno055.c ****                                 break;
13342:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_32HZ:
13343:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_20MS_AUTOSLPDUR)
13344:Core/Src/bno055.c ****                                 {
13345:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13346:Core/Src/bno055.c ****                                 }
13347:Core/Src/bno055.c ****                                 else
13348:Core/Src/bno055.c ****                                 {
13349:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_20MS_AUTOSLPDUR;
13350:Core/Src/bno055.c ****                                 }
13351:Core/Src/bno055.c ****                                 break;
13352:Core/Src/bno055.c ****                             default:
13353:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_4MS_AUTOSLPDUR)
13354:Core/Src/bno055.c ****                                 {
13355:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13356:Core/Src/bno055.c ****                                 }
13357:Core/Src/bno055.c ****                                 else
13358:Core/Src/bno055.c ****                                 {
13359:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_4MS_AUTOSLPDUR;
13360:Core/Src/bno055.c ****                                 }
13361:Core/Src/bno055.c ****                                 break;
13362:Core/Src/bno055.c ****                         }
13363:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
13364:Core/Src/bno055.c ****                         {
13365:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_AUTO_SLEEP_DURN, a
13366:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
13367:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
13368:Core/Src/bno055.c ****                                                                         &data_u8r,
13369:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
13370:Core/Src/bno055.c ****                         }
13371:Core/Src/bno055.c ****                     }
13372:Core/Src/bno055.c ****                     else
13373:Core/Src/bno055.c ****                     {
13374:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
13375:Core/Src/bno055.c ****                     }
13376:Core/Src/bno055.c ****                 }
13377:Core/Src/bno055.c ****                 else
13378:Core/Src/bno055.c ****                 {
13379:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
13380:Core/Src/bno055.c ****                 }
13381:Core/Src/bno055.c ****             }
13382:Core/Src/bno055.c ****             else
13383:Core/Src/bno055.c ****             {
13384:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 792


 28318              		.loc 1 13384 26 view .LVU7946
 28319 0032 4FF0FF36 		mov	r6, #-1
 28320              	.LVL3546:
 28321              		.loc 1 13384 26 view .LVU7947
 28322 0036 5EE0     		b	.L1926
 28323              	.LVL3547:
 28324              	.L1954:
13255:Core/Src/bno055.c ****             }
 28325              		.loc 1 13255 17 is_stmt 1 view .LVU7948
13255:Core/Src/bno055.c ****             }
 28326              		.loc 1 13255 28 is_stmt 0 view .LVU7949
 28327 0038 FFF7FEFF 		bl	bno055_set_operation_mode
 28328              	.LVL3548:
13255:Core/Src/bno055.c ****             }
 28329              		.loc 1 13255 25 view .LVU7950
 28330 003c 56FA80F6 		uxtab	r6, r6, r0
 28331 0040 76B2     		sxtb	r6, r6
 28332              	.LVL3549:
13255:Core/Src/bno055.c ****             }
 28333              		.loc 1 13255 25 view .LVU7951
 28334 0042 F5E7     		b	.L1927
 28335              	.L1955:
13260:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28336              		.loc 1 13260 17 is_stmt 1 view .LVU7952
13260:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28337              		.loc 1 13260 30 is_stmt 0 view .LVU7953
 28338 0044 0120     		movs	r0, #1
 28339 0046 FFF7FEFF 		bl	bno055_write_page_id
 28340              	.LVL3550:
13261:Core/Src/bno055.c ****                 {
 28341              		.loc 1 13261 17 is_stmt 1 view .LVU7954
13261:Core/Src/bno055.c ****                 {
 28342              		.loc 1 13261 20 is_stmt 0 view .LVU7955
 28343 004a 0028     		cmp	r0, #0
 28344 004c 59D1     		bne	.L1942
13264:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
 28345              		.loc 1 13264 21 is_stmt 1 view .LVU7956
13264:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
 28346              		.loc 1 13264 40 is_stmt 0 view .LVU7957
 28347 004e 344B     		ldr	r3, .L1958
 28348 0050 1868     		ldr	r0, [r3]
 28349              	.LVL3551:
13264:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
 28350              		.loc 1 13264 40 view .LVU7958
 28351 0052 0669     		ldr	r6, [r0, #16]
 28352              	.LVL3552:
13264:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
 28353              		.loc 1 13264 32 view .LVU7959
 28354 0054 0123     		movs	r3, #1
 28355 0056 0DF10702 		add	r2, sp, #7
 28356 005a 0D21     		movs	r1, #13
 28357 005c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28358 005e B047     		blx	r6
 28359              	.LVL3553:
 28360 0060 0646     		mov	r6, r0
 28361              	.LVL3554:
13268:Core/Src/bno055.c ****                     {
ARM GAS  /tmp/ccWoU29M.s 			page 793


 28362              		.loc 1 13268 21 is_stmt 1 view .LVU7960
13268:Core/Src/bno055.c ****                     {
 28363              		.loc 1 13268 24 is_stmt 0 view .LVU7961
 28364 0062 072D     		cmp	r5, #7
 28365 0064 50D8     		bhi	.L1943
13270:Core/Src/bno055.c ****                         {
 28366              		.loc 1 13270 25 is_stmt 1 view .LVU7962
 28367 0066 072C     		cmp	r4, #7
 28368 0068 3DD8     		bhi	.L1928
 28369 006a DFE804F0 		tbb	[pc, r4]
 28370              	.L1930:
 28371 006e 04       		.byte	(.L1937-.L1930)/2
 28372 006f 20       		.byte	(.L1936-.L1930)/2
 28373 0070 24       		.byte	(.L1935-.L1930)/2
 28374 0071 28       		.byte	(.L1934-.L1930)/2
 28375 0072 2C       		.byte	(.L1933-.L1930)/2
 28376 0073 30       		.byte	(.L1932-.L1930)/2
 28377 0074 34       		.byte	(.L1931-.L1930)/2
 28378 0075 38       		.byte	(.L1929-.L1930)/2
 28379              		.p2align 1
 28380              	.L1937:
13273:Core/Src/bno055.c ****                                 {
 28381              		.loc 1 13273 33 view .LVU7963
13273:Core/Src/bno055.c ****                                 {
 28382              		.loc 1 13273 36 is_stmt 0 view .LVU7964
 28383 0076 012D     		cmp	r5, #1
 28384 0078 39D9     		bls	.L1956
 28385              	.L1938:
 28386              	.LVL3555:
13363:Core/Src/bno055.c ****                         {
 28387              		.loc 1 13363 25 is_stmt 1 view .LVU7965
13363:Core/Src/bno055.c ****                         {
 28388              		.loc 1 13363 28 is_stmt 0 view .LVU7966
 28389 007a 002E     		cmp	r6, #0
 28390 007c 3BD1     		bne	.L1926
13365:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28391              		.loc 1 13365 29 is_stmt 1 view .LVU7967
13365:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28392              		.loc 1 13365 40 is_stmt 0 view .LVU7968
 28393 007e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 28394 0082 23F03803 		bic	r3, r3, #56
 28395 0086 5BB2     		sxtb	r3, r3
 28396 0088 ED00     		lsls	r5, r5, #3
 28397              	.LVL3556:
13365:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28398              		.loc 1 13365 40 view .LVU7969
 28399 008a 05F03805 		and	r5, r5, #56
 28400 008e 1D43     		orrs	r5, r5, r3
13365:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28401              		.loc 1 13365 38 view .LVU7970
 28402 0090 8DF80750 		strb	r5, [sp, #7]
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 28403              		.loc 1 13366 29 is_stmt 1 view .LVU7971
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 28404              		.loc 1 13366 49 is_stmt 0 view .LVU7972
 28405 0094 224B     		ldr	r3, .L1958
 28406 0096 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccWoU29M.s 			page 794


 28407 0098 C468     		ldr	r4, [r0, #12]
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 28408              		.loc 1 13366 41 view .LVU7973
 28409 009a 0123     		movs	r3, #1
 28410 009c 0DF10702 		add	r2, sp, #7
 28411 00a0 0D21     		movs	r1, #13
 28412 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28413 00a4 A047     		blx	r4
 28414              	.LVL3557:
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 28415              		.loc 1 13366 38 view .LVU7974
 28416 00a6 56FA80F6 		uxtab	r6, r6, r0
 28417              	.LVL3558:
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 28418              		.loc 1 13366 38 view .LVU7975
 28419 00aa 76B2     		sxtb	r6, r6
 28420              	.LVL3559:
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 28421              		.loc 1 13366 38 view .LVU7976
 28422 00ac 23E0     		b	.L1926
 28423              	.L1936:
13283:Core/Src/bno055.c ****                                 {
 28424              		.loc 1 13283 33 is_stmt 1 view .LVU7977
13283:Core/Src/bno055.c ****                                 {
 28425              		.loc 1 13283 36 is_stmt 0 view .LVU7978
 28426 00ae 012D     		cmp	r5, #1
 28427 00b0 E3D8     		bhi	.L1938
13289:Core/Src/bno055.c ****                                 }
 28428              		.loc 1 13289 57 view .LVU7979
 28429 00b2 2546     		mov	r5, r4
 28430 00b4 E1E7     		b	.L1938
 28431              	.L1935:
13293:Core/Src/bno055.c ****                                 {
 28432              		.loc 1 13293 33 is_stmt 1 view .LVU7980
13293:Core/Src/bno055.c ****                                 {
 28433              		.loc 1 13293 36 is_stmt 0 view .LVU7981
 28434 00b6 012D     		cmp	r5, #1
 28435 00b8 DFD8     		bhi	.L1938
13299:Core/Src/bno055.c ****                                 }
 28436              		.loc 1 13299 57 view .LVU7982
 28437 00ba 0125     		movs	r5, #1
 28438 00bc DDE7     		b	.L1938
 28439              	.L1934:
13303:Core/Src/bno055.c ****                                 {
 28440              		.loc 1 13303 33 is_stmt 1 view .LVU7983
13303:Core/Src/bno055.c ****                                 {
 28441              		.loc 1 13303 36 is_stmt 0 view .LVU7984
 28442 00be 022D     		cmp	r5, #2
 28443 00c0 DBD8     		bhi	.L1938
13309:Core/Src/bno055.c ****                                 }
 28444              		.loc 1 13309 57 view .LVU7985
 28445 00c2 0225     		movs	r5, #2
 28446 00c4 D9E7     		b	.L1938
 28447              	.L1933:
13313:Core/Src/bno055.c ****                                 {
 28448              		.loc 1 13313 33 is_stmt 1 view .LVU7986
13313:Core/Src/bno055.c ****                                 {
ARM GAS  /tmp/ccWoU29M.s 			page 795


 28449              		.loc 1 13313 36 is_stmt 0 view .LVU7987
 28450 00c6 042D     		cmp	r5, #4
 28451 00c8 D7D8     		bhi	.L1938
13319:Core/Src/bno055.c ****                                 }
 28452              		.loc 1 13319 57 view .LVU7988
 28453 00ca 2546     		mov	r5, r4
 28454 00cc D5E7     		b	.L1938
 28455              	.L1932:
13323:Core/Src/bno055.c ****                                 {
 28456              		.loc 1 13323 33 is_stmt 1 view .LVU7989
13323:Core/Src/bno055.c ****                                 {
 28457              		.loc 1 13323 36 is_stmt 0 view .LVU7990
 28458 00ce 062D     		cmp	r5, #6
 28459 00d0 D3D8     		bhi	.L1938
13329:Core/Src/bno055.c ****                                 }
 28460              		.loc 1 13329 57 view .LVU7991
 28461 00d2 0625     		movs	r5, #6
 28462 00d4 D1E7     		b	.L1938
 28463              	.L1931:
13333:Core/Src/bno055.c ****                                 {
 28464              		.loc 1 13333 33 is_stmt 1 view .LVU7992
13333:Core/Src/bno055.c ****                                 {
 28465              		.loc 1 13333 36 is_stmt 0 view .LVU7993
 28466 00d6 042D     		cmp	r5, #4
 28467 00d8 CFD8     		bhi	.L1938
13339:Core/Src/bno055.c ****                                 }
 28468              		.loc 1 13339 57 view .LVU7994
 28469 00da 0425     		movs	r5, #4
 28470 00dc CDE7     		b	.L1938
 28471              	.L1929:
13343:Core/Src/bno055.c ****                                 {
 28472              		.loc 1 13343 33 is_stmt 1 view .LVU7995
13343:Core/Src/bno055.c ****                                 {
 28473              		.loc 1 13343 36 is_stmt 0 view .LVU7996
 28474 00de 062D     		cmp	r5, #6
 28475 00e0 CBD8     		bhi	.L1938
13349:Core/Src/bno055.c ****                                 }
 28476              		.loc 1 13349 57 view .LVU7997
 28477 00e2 0625     		movs	r5, #6
 28478 00e4 C9E7     		b	.L1938
 28479              	.L1928:
13353:Core/Src/bno055.c ****                                 {
 28480              		.loc 1 13353 33 is_stmt 1 view .LVU7998
13353:Core/Src/bno055.c ****                                 {
 28481              		.loc 1 13353 36 is_stmt 0 view .LVU7999
 28482 00e6 012D     		cmp	r5, #1
 28483 00e8 C7D8     		bhi	.L1938
13359:Core/Src/bno055.c ****                                 }
 28484              		.loc 1 13359 57 view .LVU8000
 28485 00ea 0125     		movs	r5, #1
 28486 00ec C5E7     		b	.L1938
 28487              	.L1956:
13279:Core/Src/bno055.c ****                                 }
 28488              		.loc 1 13279 57 view .LVU8001
 28489 00ee 0125     		movs	r5, #1
 28490 00f0 C3E7     		b	.L1938
 28491              	.LVL3560:
ARM GAS  /tmp/ccWoU29M.s 			page 796


 28492              	.L1940:
13385:Core/Src/bno055.c ****             }
13386:Core/Src/bno055.c ****         }
13387:Core/Src/bno055.c ****         else
13388:Core/Src/bno055.c ****         {
13389:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 28493              		.loc 1 13389 22 view .LVU8002
 28494 00f2 4FF0FF36 		mov	r6, #-1
 28495              	.LVL3561:
 28496              	.L1926:
13390:Core/Src/bno055.c ****         }
13391:Core/Src/bno055.c ****     }
13392:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 28497              		.loc 1 13392 5 is_stmt 1 view .LVU8003
 28498              		.loc 1 13392 24 is_stmt 0 view .LVU8004
 28499 00f6 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 28500              		.loc 1 13392 8 view .LVU8005
 28501 00fa 40B9     		cbnz	r0, .L1957
 28502              	.LVL3562:
 28503              	.L1925:
13393:Core/Src/bno055.c ****     {
13394:Core/Src/bno055.c ****         /* set the operation mode of
13395:Core/Src/bno055.c ****          * previous operation mode*/
13396:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
13397:Core/Src/bno055.c ****     }
13398:Core/Src/bno055.c **** 
13399:Core/Src/bno055.c ****     return com_rslt;
13400:Core/Src/bno055.c **** }
 28504              		.loc 1 13400 1 view .LVU8006
 28505 00fc 3046     		mov	r0, r6
 28506 00fe 02B0     		add	sp, sp, #8
 28507              	.LCFI787:
 28508              		.cfi_remember_state
 28509              		.cfi_def_cfa_offset 16
 28510              		@ sp needed
 28511 0100 70BD     		pop	{r4, r5, r6, pc}
 28512              	.LVL3563:
 28513              	.L1942:
 28514              	.LCFI788:
 28515              		.cfi_restore_state
13379:Core/Src/bno055.c ****                 }
 28516              		.loc 1 13379 30 view .LVU8007
 28517 0102 4FF0FF36 		mov	r6, #-1
 28518              	.LVL3564:
13379:Core/Src/bno055.c ****                 }
 28519              		.loc 1 13379 30 view .LVU8008
 28520 0106 F6E7     		b	.L1926
 28521              	.LVL3565:
 28522              	.L1943:
13374:Core/Src/bno055.c ****                     }
 28523              		.loc 1 13374 34 view .LVU8009
 28524 0108 6FF00106 		mvn	r6, #1
 28525              	.LVL3566:
13374:Core/Src/bno055.c ****                     }
 28526              		.loc 1 13374 34 view .LVU8010
 28527 010c F3E7     		b	.L1926
 28528              	.LVL3567:
ARM GAS  /tmp/ccWoU29M.s 			page 797


 28529              	.L1957:
13396:Core/Src/bno055.c ****     }
 28530              		.loc 1 13396 9 is_stmt 1 view .LVU8011
13396:Core/Src/bno055.c ****     }
 28531              		.loc 1 13396 21 is_stmt 0 view .LVU8012
 28532 010e FFF7FEFF 		bl	bno055_set_operation_mode
 28533              	.LVL3568:
13396:Core/Src/bno055.c ****     }
 28534              		.loc 1 13396 18 view .LVU8013
 28535 0112 56FA80F6 		uxtab	r6, r6, r0
 28536              	.LVL3569:
13396:Core/Src/bno055.c ****     }
 28537              		.loc 1 13396 18 view .LVU8014
 28538 0116 76B2     		sxtb	r6, r6
 28539              	.LVL3570:
13396:Core/Src/bno055.c ****     }
 28540              		.loc 1 13396 18 view .LVU8015
 28541 0118 F0E7     		b	.L1925
 28542              	.LVL3571:
 28543              	.L1939:
13243:Core/Src/bno055.c ****     }
 28544              		.loc 1 13243 16 view .LVU8016
 28545 011a 6FF07E06 		mvn	r6, #126
 28546 011e EDE7     		b	.L1925
 28547              	.L1959:
 28548              		.align	2
 28549              	.L1958:
 28550 0120 00000000 		.word	.LANCHOR0
 28551              		.cfi_endproc
 28552              	.LFE200:
 28554              		.section	.text.bno055_set_gyro_bw,"ax",%progbits
 28555              		.align	1
 28556              		.global	bno055_set_gyro_bw
 28557              		.syntax unified
 28558              		.thumb
 28559              		.thumb_func
 28560              		.fpu fpv4-sp-d16
 28562              	bno055_set_gyro_bw:
 28563              	.LVL3572:
 28564              	.LFB190:
12395:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28565              		.loc 1 12395 1 is_stmt 1 view -0
 28566              		.cfi_startproc
 28567              		@ args = 0, pretend = 0, frame = 8
 28568              		@ frame_needed = 0, uses_anonymous_args = 0
12395:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28569              		.loc 1 12395 1 is_stmt 0 view .LVU8018
 28570 0000 70B5     		push	{r4, r5, r6, lr}
 28571              	.LCFI789:
 28572              		.cfi_def_cfa_offset 16
 28573              		.cfi_offset 4, -16
 28574              		.cfi_offset 5, -12
 28575              		.cfi_offset 6, -8
 28576              		.cfi_offset 14, -4
 28577 0002 82B0     		sub	sp, sp, #8
 28578              	.LCFI790:
 28579              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccWoU29M.s 			page 798


12396:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 28580              		.loc 1 12396 5 is_stmt 1 view .LVU8019
 28581              	.LVL3573:
12397:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28582              		.loc 1 12397 5 view .LVU8020
12397:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28583              		.loc 1 12397 8 is_stmt 0 view .LVU8021
 28584 0004 0023     		movs	r3, #0
 28585 0006 8DF80730 		strb	r3, [sp, #7]
12398:Core/Src/bno055.c ****     u8 gyro_opmode = BNO055_INIT_VALUE;
 28586              		.loc 1 12398 5 is_stmt 1 view .LVU8022
 28587              	.LVL3574:
12399:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
 28588              		.loc 1 12399 5 view .LVU8023
12399:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
 28589              		.loc 1 12399 8 is_stmt 0 view .LVU8024
 28590 000a 8DF80630 		strb	r3, [sp, #6]
12400:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 28591              		.loc 1 12400 5 is_stmt 1 view .LVU8025
12400:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 28592              		.loc 1 12400 8 is_stmt 0 view .LVU8026
 28593 000e 8DF80530 		strb	r3, [sp, #5]
12401:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 28594              		.loc 1 12401 5 is_stmt 1 view .LVU8027
 28595              	.LVL3575:
12402:Core/Src/bno055.c **** 
 28596              		.loc 1 12402 5 view .LVU8028
12402:Core/Src/bno055.c **** 
 28597              		.loc 1 12402 8 is_stmt 0 view .LVU8029
 28598 0012 8DF80430 		strb	r3, [sp, #4]
12405:Core/Src/bno055.c ****     {
 28599              		.loc 1 12405 5 is_stmt 1 view .LVU8030
12405:Core/Src/bno055.c ****     {
 28600              		.loc 1 12405 18 is_stmt 0 view .LVU8031
 28601 0016 384B     		ldr	r3, .L1974
 28602 0018 1B68     		ldr	r3, [r3]
12405:Core/Src/bno055.c ****     {
 28603              		.loc 1 12405 8 view .LVU8032
 28604 001a 002B     		cmp	r3, #0
 28605 001c 68D0     		beq	.L1965
 28606 001e 0546     		mov	r5, r0
12414:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28607              		.loc 1 12414 9 is_stmt 1 view .LVU8033
12414:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28608              		.loc 1 12414 19 is_stmt 0 view .LVU8034
 28609 0020 01A8     		add	r0, sp, #4
 28610              	.LVL3576:
12414:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28611              		.loc 1 12414 19 view .LVU8035
 28612 0022 FFF7FEFF 		bl	bno055_get_operation_mode
 28613              	.LVL3577:
12415:Core/Src/bno055.c ****         {
 28614              		.loc 1 12415 9 is_stmt 1 view .LVU8036
12415:Core/Src/bno055.c ****         {
 28615              		.loc 1 12415 12 is_stmt 0 view .LVU8037
 28616 0026 0446     		mov	r4, r0
 28617 0028 0028     		cmp	r0, #0
ARM GAS  /tmp/ccWoU29M.s 			page 799


 28618 002a 4DD1     		bne	.L1966
12417:Core/Src/bno055.c ****             {
 28619              		.loc 1 12417 13 is_stmt 1 view .LVU8038
12417:Core/Src/bno055.c ****             {
 28620              		.loc 1 12417 32 is_stmt 0 view .LVU8039
 28621 002c 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
12417:Core/Src/bno055.c ****             {
 28622              		.loc 1 12417 16 view .LVU8040
 28623 0030 1BB9     		cbnz	r3, .L1971
 28624              	.LVL3578:
 28625              	.L1963:
12421:Core/Src/bno055.c ****             {
 28626              		.loc 1 12421 13 is_stmt 1 view .LVU8041
12421:Core/Src/bno055.c ****             {
 28627              		.loc 1 12421 16 is_stmt 0 view .LVU8042
 28628 0032 44B1     		cbz	r4, .L1972
12497:Core/Src/bno055.c ****             }
 28629              		.loc 1 12497 26 view .LVU8043
 28630 0034 4FF0FF34 		mov	r4, #-1
 28631              	.LVL3579:
12497:Core/Src/bno055.c ****             }
 28632              		.loc 1 12497 26 view .LVU8044
 28633 0038 48E0     		b	.L1962
 28634              	.LVL3580:
 28635              	.L1971:
12419:Core/Src/bno055.c ****             }
 28636              		.loc 1 12419 17 is_stmt 1 view .LVU8045
12419:Core/Src/bno055.c ****             }
 28637              		.loc 1 12419 28 is_stmt 0 view .LVU8046
 28638 003a FFF7FEFF 		bl	bno055_set_operation_mode
 28639              	.LVL3581:
12419:Core/Src/bno055.c ****             }
 28640              		.loc 1 12419 25 view .LVU8047
 28641 003e 54FA80F4 		uxtab	r4, r4, r0
 28642 0042 64B2     		sxtb	r4, r4
 28643              	.LVL3582:
12419:Core/Src/bno055.c ****             }
 28644              		.loc 1 12419 25 view .LVU8048
 28645 0044 F5E7     		b	.L1963
 28646              	.L1972:
12424:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28647              		.loc 1 12424 17 is_stmt 1 view .LVU8049
12424:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28648              		.loc 1 12424 30 is_stmt 0 view .LVU8050
 28649 0046 0120     		movs	r0, #1
 28650 0048 FFF7FEFF 		bl	bno055_write_page_id
 28651              	.LVL3583:
12425:Core/Src/bno055.c ****                 {
 28652              		.loc 1 12425 17 is_stmt 1 view .LVU8051
12425:Core/Src/bno055.c ****                 {
 28653              		.loc 1 12425 20 is_stmt 0 view .LVU8052
 28654 004c 0028     		cmp	r0, #0
 28655 004e 43D1     		bne	.L1968
12428:Core/Src/bno055.c ****                         gyro_bw_u8 < BNO055_ACCEL_GYRO_BW_RANGE)
 28656              		.loc 1 12428 21 is_stmt 1 view .LVU8053
12428:Core/Src/bno055.c ****                         gyro_bw_u8 < BNO055_ACCEL_GYRO_BW_RANGE)
 28657              		.loc 1 12428 24 is_stmt 0 view .LVU8054
ARM GAS  /tmp/ccWoU29M.s 			page 800


 28658 0050 072D     		cmp	r5, #7
 28659 0052 44D8     		bhi	.L1969
12431:Core/Src/bno055.c ****                         {
 28660              		.loc 1 12431 25 is_stmt 1 view .LVU8055
 28661              	.LVL3584:
12460:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
 28662              		.loc 1 12460 25 view .LVU8056
12460:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
 28663              		.loc 1 12460 44 is_stmt 0 view .LVU8057
 28664 0054 284B     		ldr	r3, .L1974
 28665 0056 1868     		ldr	r0, [r3]
 28666              	.LVL3585:
12460:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
 28667              		.loc 1 12460 44 view .LVU8058
 28668 0058 0469     		ldr	r4, [r0, #16]
 28669              	.LVL3586:
12460:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
 28670              		.loc 1 12460 36 view .LVU8059
 28671 005a 0123     		movs	r3, #1
 28672 005c 0DF10702 		add	r2, sp, #7
 28673 0060 0A21     		movs	r1, #10
 28674 0062 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28675 0064 A047     		blx	r4
 28676              	.LVL3587:
12464:Core/Src/bno055.c ****                         {
 28677              		.loc 1 12464 25 is_stmt 1 view .LVU8060
12464:Core/Src/bno055.c ****                         {
 28678              		.loc 1 12464 28 is_stmt 0 view .LVU8061
 28679 0066 98B9     		cbnz	r0, .L1964
12466:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28680              		.loc 1 12466 29 is_stmt 1 view .LVU8062
12466:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28681              		.loc 1 12466 40 is_stmt 0 view .LVU8063
 28682 0068 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 28683 006c 23F03803 		bic	r3, r3, #56
 28684 0070 5BB2     		sxtb	r3, r3
 28685 0072 EA00     		lsls	r2, r5, #3
 28686 0074 02F03802 		and	r2, r2, #56
 28687 0078 1343     		orrs	r3, r3, r2
12466:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28688              		.loc 1 12466 38 view .LVU8064
 28689 007a 8DF80730 		strb	r3, [sp, #7]
12467:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
 28690              		.loc 1 12467 29 is_stmt 1 view .LVU8065
12467:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
 28691              		.loc 1 12467 49 is_stmt 0 view .LVU8066
 28692 007e 1E4B     		ldr	r3, .L1974
 28693 0080 1868     		ldr	r0, [r3]
 28694              	.LVL3588:
12467:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
 28695              		.loc 1 12467 49 view .LVU8067
 28696 0082 C468     		ldr	r4, [r0, #12]
12467:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
 28697              		.loc 1 12467 41 view .LVU8068
 28698 0084 0123     		movs	r3, #1
 28699 0086 0DF10702 		add	r2, sp, #7
 28700 008a 0A21     		movs	r1, #10
ARM GAS  /tmp/ccWoU29M.s 			page 801


 28701 008c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28702 008e A047     		blx	r4
 28703              	.LVL3589:
 28704              	.L1964:
12472:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
 28705              		.loc 1 12472 25 is_stmt 1 view .LVU8069
12472:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
 28706              		.loc 1 12472 36 is_stmt 0 view .LVU8070
 28707 0090 0DF10600 		add	r0, sp, #6
 28708 0094 FFF7FEFF 		bl	bno055_get_gyro_power_mode
 28709              	.LVL3590:
12473:Core/Src/bno055.c ****                         {
 28710              		.loc 1 12473 25 is_stmt 1 view .LVU8071
12473:Core/Src/bno055.c ****                         {
 28711              		.loc 1 12473 28 is_stmt 0 view .LVU8072
 28712 0098 0446     		mov	r4, r0
 28713 009a B8B9     		cbnz	r0, .L1962
12475:Core/Src/bno055.c ****                             {
 28714              		.loc 1 12475 29 is_stmt 1 view .LVU8073
12475:Core/Src/bno055.c ****                             {
 28715              		.loc 1 12475 45 is_stmt 0 view .LVU8074
 28716 009c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
12475:Core/Src/bno055.c ****                             {
 28717              		.loc 1 12475 32 view .LVU8075
 28718 00a0 042B     		cmp	r3, #4
 28719 00a2 13D1     		bne	.L1962
12477:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28720              		.loc 1 12477 33 is_stmt 1 view .LVU8076
12477:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28721              		.loc 1 12477 45 is_stmt 0 view .LVU8077
 28722 00a4 0DF10500 		add	r0, sp, #5
 28723              	.LVL3591:
12477:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28724              		.loc 1 12477 45 view .LVU8078
 28725 00a8 FFF7FEFF 		bl	bno055_get_gyro_auto_sleep_durn
 28726              	.LVL3592:
12477:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28727              		.loc 1 12477 42 view .LVU8079
 28728 00ac 54FA80F4 		uxtab	r4, r4, r0
 28729 00b0 E6B2     		uxtb	r6, r4
 28730 00b2 64B2     		sxtb	r4, r4
 28731              	.LVL3593:
12478:Core/Src/bno055.c ****                                 {
 28732              		.loc 1 12478 33 is_stmt 1 view .LVU8080
12478:Core/Src/bno055.c ****                                 {
 28733              		.loc 1 12478 36 is_stmt 0 view .LVU8081
 28734 00b4 54B9     		cbnz	r4, .L1962
12480:Core/Src/bno055.c ****                                 }
 28735              		.loc 1 12480 37 is_stmt 1 view .LVU8082
12480:Core/Src/bno055.c ****                                 }
 28736              		.loc 1 12480 49 is_stmt 0 view .LVU8083
 28737 00b6 2946     		mov	r1, r5
 28738 00b8 9DF80500 		ldrb	r0, [sp, #5]	@ zero_extendqisi2
 28739 00bc FFF7FEFF 		bl	bno055_gyro_set_auto_sleep_durn
 28740              	.LVL3594:
12480:Core/Src/bno055.c ****                                 }
 28741              		.loc 1 12480 46 view .LVU8084
ARM GAS  /tmp/ccWoU29M.s 			page 802


 28742 00c0 56FA80F4 		uxtab	r4, r6, r0
 28743              	.LVL3595:
12480:Core/Src/bno055.c ****                                 }
 28744              		.loc 1 12480 46 view .LVU8085
 28745 00c4 64B2     		sxtb	r4, r4
 28746              	.LVL3596:
12480:Core/Src/bno055.c ****                                 }
 28747              		.loc 1 12480 46 view .LVU8086
 28748 00c6 01E0     		b	.L1962
 28749              	.LVL3597:
 28750              	.L1966:
12502:Core/Src/bno055.c ****         }
 28751              		.loc 1 12502 22 view .LVU8087
 28752 00c8 4FF0FF34 		mov	r4, #-1
 28753              	.LVL3598:
 28754              	.L1962:
12505:Core/Src/bno055.c ****     {
 28755              		.loc 1 12505 5 is_stmt 1 view .LVU8088
12505:Core/Src/bno055.c ****     {
 28756              		.loc 1 12505 24 is_stmt 0 view .LVU8089
 28757 00cc 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
12505:Core/Src/bno055.c ****     {
 28758              		.loc 1 12505 8 view .LVU8090
 28759 00d0 40B9     		cbnz	r0, .L1973
 28760              	.LVL3599:
 28761              	.L1961:
12513:Core/Src/bno055.c **** 
 28762              		.loc 1 12513 1 view .LVU8091
 28763 00d2 2046     		mov	r0, r4
 28764 00d4 02B0     		add	sp, sp, #8
 28765              	.LCFI791:
 28766              		.cfi_remember_state
 28767              		.cfi_def_cfa_offset 16
 28768              		@ sp needed
 28769 00d6 70BD     		pop	{r4, r5, r6, pc}
 28770              	.LVL3600:
 28771              	.L1968:
 28772              	.LCFI792:
 28773              		.cfi_restore_state
12492:Core/Src/bno055.c ****                 }
 28774              		.loc 1 12492 30 view .LVU8092
 28775 00d8 4FF0FF34 		mov	r4, #-1
 28776              	.LVL3601:
12492:Core/Src/bno055.c ****                 }
 28777              		.loc 1 12492 30 view .LVU8093
 28778 00dc F6E7     		b	.L1962
 28779              	.LVL3602:
 28780              	.L1969:
12487:Core/Src/bno055.c ****                     }
 28781              		.loc 1 12487 34 view .LVU8094
 28782 00de 6FF00104 		mvn	r4, #1
 28783              	.LVL3603:
12487:Core/Src/bno055.c ****                     }
 28784              		.loc 1 12487 34 view .LVU8095
 28785 00e2 F3E7     		b	.L1962
 28786              	.LVL3604:
 28787              	.L1973:
ARM GAS  /tmp/ccWoU29M.s 			page 803


12509:Core/Src/bno055.c ****     }
 28788              		.loc 1 12509 9 is_stmt 1 view .LVU8096
12509:Core/Src/bno055.c ****     }
 28789              		.loc 1 12509 21 is_stmt 0 view .LVU8097
 28790 00e4 FFF7FEFF 		bl	bno055_set_operation_mode
 28791              	.LVL3605:
12509:Core/Src/bno055.c ****     }
 28792              		.loc 1 12509 18 view .LVU8098
 28793 00e8 54FA80F4 		uxtab	r4, r4, r0
 28794              	.LVL3606:
12509:Core/Src/bno055.c ****     }
 28795              		.loc 1 12509 18 view .LVU8099
 28796 00ec 64B2     		sxtb	r4, r4
 28797              	.LVL3607:
12509:Core/Src/bno055.c ****     }
 28798              		.loc 1 12509 18 view .LVU8100
 28799 00ee F0E7     		b	.L1961
 28800              	.LVL3608:
 28801              	.L1965:
12407:Core/Src/bno055.c ****     }
 28802              		.loc 1 12407 16 view .LVU8101
 28803 00f0 6FF07E04 		mvn	r4, #126
 28804 00f4 EDE7     		b	.L1961
 28805              	.L1975:
 28806 00f6 00BF     		.align	2
 28807              	.L1974:
 28808 00f8 00000000 		.word	.LANCHOR0
 28809              		.cfi_endproc
 28810              	.LFE190:
 28812              		.section	.text.bno055_set_gyro_power_mode,"ax",%progbits
 28813              		.align	1
 28814              		.global	bno055_set_gyro_power_mode
 28815              		.syntax unified
 28816              		.thumb
 28817              		.thumb_func
 28818              		.fpu fpv4-sp-d16
 28820              	bno055_set_gyro_power_mode:
 28821              	.LVL3609:
 28822              	.LFB192:
12596:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28823              		.loc 1 12596 1 is_stmt 1 view -0
 28824              		.cfi_startproc
 28825              		@ args = 0, pretend = 0, frame = 8
 28826              		@ frame_needed = 0, uses_anonymous_args = 0
12596:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28827              		.loc 1 12596 1 is_stmt 0 view .LVU8103
 28828 0000 30B5     		push	{r4, r5, lr}
 28829              	.LCFI793:
 28830              		.cfi_def_cfa_offset 12
 28831              		.cfi_offset 4, -12
 28832              		.cfi_offset 5, -8
 28833              		.cfi_offset 14, -4
 28834 0002 83B0     		sub	sp, sp, #12
 28835              	.LCFI794:
 28836              		.cfi_def_cfa_offset 24
12597:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 28837              		.loc 1 12597 5 is_stmt 1 view .LVU8104
ARM GAS  /tmp/ccWoU29M.s 			page 804


 28838              	.LVL3610:
12598:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28839              		.loc 1 12598 5 view .LVU8105
12598:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28840              		.loc 1 12598 8 is_stmt 0 view .LVU8106
 28841 0004 0023     		movs	r3, #0
 28842 0006 8DF80730 		strb	r3, [sp, #7]
12599:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
 28843              		.loc 1 12599 5 is_stmt 1 view .LVU8107
 28844              	.LVL3611:
12600:Core/Src/bno055.c ****     u8 gyro_bw_u8 = BNO055_INIT_VALUE;
 28845              		.loc 1 12600 5 view .LVU8108
12600:Core/Src/bno055.c ****     u8 gyro_bw_u8 = BNO055_INIT_VALUE;
 28846              		.loc 1 12600 8 is_stmt 0 view .LVU8109
 28847 000a 8DF80630 		strb	r3, [sp, #6]
12601:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 28848              		.loc 1 12601 5 is_stmt 1 view .LVU8110
12601:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 28849              		.loc 1 12601 8 is_stmt 0 view .LVU8111
 28850 000e 8DF80530 		strb	r3, [sp, #5]
12602:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 28851              		.loc 1 12602 5 is_stmt 1 view .LVU8112
 28852              	.LVL3612:
12603:Core/Src/bno055.c **** 
 28853              		.loc 1 12603 5 view .LVU8113
12603:Core/Src/bno055.c **** 
 28854              		.loc 1 12603 8 is_stmt 0 view .LVU8114
 28855 0012 8DF80430 		strb	r3, [sp, #4]
12606:Core/Src/bno055.c ****     {
 28856              		.loc 1 12606 5 is_stmt 1 view .LVU8115
12606:Core/Src/bno055.c ****     {
 28857              		.loc 1 12606 18 is_stmt 0 view .LVU8116
 28858 0016 3A4B     		ldr	r3, .L1994
 28859 0018 1B68     		ldr	r3, [r3]
12606:Core/Src/bno055.c ****     {
 28860              		.loc 1 12606 8 view .LVU8117
 28861 001a 002B     		cmp	r3, #0
 28862 001c 6DD0     		beq	.L1984
 28863 001e 0446     		mov	r4, r0
12615:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28864              		.loc 1 12615 9 is_stmt 1 view .LVU8118
12615:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28865              		.loc 1 12615 19 is_stmt 0 view .LVU8119
 28866 0020 01A8     		add	r0, sp, #4
 28867              	.LVL3613:
12615:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28868              		.loc 1 12615 19 view .LVU8120
 28869 0022 FFF7FEFF 		bl	bno055_get_operation_mode
 28870              	.LVL3614:
12616:Core/Src/bno055.c ****         {
 28871              		.loc 1 12616 9 is_stmt 1 view .LVU8121
12616:Core/Src/bno055.c ****         {
 28872              		.loc 1 12616 12 is_stmt 0 view .LVU8122
 28873 0026 0546     		mov	r5, r0
 28874 0028 0028     		cmp	r0, #0
 28875 002a 52D1     		bne	.L1985
12618:Core/Src/bno055.c ****             {
ARM GAS  /tmp/ccWoU29M.s 			page 805


 28876              		.loc 1 12618 13 is_stmt 1 view .LVU8123
12618:Core/Src/bno055.c ****             {
 28877              		.loc 1 12618 32 is_stmt 0 view .LVU8124
 28878 002c 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
12618:Core/Src/bno055.c ****             {
 28879              		.loc 1 12618 16 view .LVU8125
 28880 0030 1BB9     		cbnz	r3, .L1990
 28881              	.LVL3615:
 28882              	.L1979:
12622:Core/Src/bno055.c ****             {
 28883              		.loc 1 12622 13 is_stmt 1 view .LVU8126
12622:Core/Src/bno055.c ****             {
 28884              		.loc 1 12622 16 is_stmt 0 view .LVU8127
 28885 0032 45B1     		cbz	r5, .L1991
12684:Core/Src/bno055.c ****             }
 28886              		.loc 1 12684 26 view .LVU8128
 28887 0034 4FF0FF35 		mov	r5, #-1
 28888              	.LVL3616:
12684:Core/Src/bno055.c ****             }
 28889              		.loc 1 12684 26 view .LVU8129
 28890 0038 4DE0     		b	.L1978
 28891              	.LVL3617:
 28892              	.L1990:
12620:Core/Src/bno055.c ****             }
 28893              		.loc 1 12620 17 is_stmt 1 view .LVU8130
12620:Core/Src/bno055.c ****             }
 28894              		.loc 1 12620 28 is_stmt 0 view .LVU8131
 28895 003a FFF7FEFF 		bl	bno055_set_operation_mode
 28896              	.LVL3618:
12620:Core/Src/bno055.c ****             }
 28897              		.loc 1 12620 25 view .LVU8132
 28898 003e 55FA80F5 		uxtab	r5, r5, r0
 28899 0042 6DB2     		sxtb	r5, r5
 28900              	.LVL3619:
12620:Core/Src/bno055.c ****             }
 28901              		.loc 1 12620 25 view .LVU8133
 28902 0044 F5E7     		b	.L1979
 28903              	.L1991:
12625:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28904              		.loc 1 12625 17 is_stmt 1 view .LVU8134
12625:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28905              		.loc 1 12625 30 is_stmt 0 view .LVU8135
 28906 0046 0120     		movs	r0, #1
 28907 0048 FFF7FEFF 		bl	bno055_write_page_id
 28908              	.LVL3620:
12626:Core/Src/bno055.c ****                 {
 28909              		.loc 1 12626 17 is_stmt 1 view .LVU8136
12626:Core/Src/bno055.c ****                 {
 28910              		.loc 1 12626 20 is_stmt 0 view .LVU8137
 28911 004c 0028     		cmp	r0, #0
 28912 004e 48D1     		bne	.L1987
12629:Core/Src/bno055.c ****                         gyro_power_mode_u8 < BNO055_GYRO_RANGE)
 28913              		.loc 1 12629 21 is_stmt 1 view .LVU8138
12629:Core/Src/bno055.c ****                         gyro_power_mode_u8 < BNO055_GYRO_RANGE)
 28914              		.loc 1 12629 24 is_stmt 0 view .LVU8139
 28915 0050 042C     		cmp	r4, #4
 28916 0052 49D8     		bhi	.L1988
ARM GAS  /tmp/ccWoU29M.s 			page 806


12632:Core/Src/bno055.c ****                         {
 28917              		.loc 1 12632 25 is_stmt 1 view .LVU8140
 28918 0054 231F     		subs	r3, r4, #4
 28919 0056 002B     		cmp	r3, #0
 28920 0058 12D8     		bhi	.L1980
 28921 005a DFE803F0 		tbb	[pc, r3]
 28922              	.L1982:
 28923 005e 01       		.byte	(.L1981-.L1982)/2
 28924 005f 00       		.p2align 1
 28925              	.L1981:
12647:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
 28926              		.loc 1 12647 33 view .LVU8141
12647:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
 28927              		.loc 1 12647 44 is_stmt 0 view .LVU8142
 28928 0060 0DF10500 		add	r0, sp, #5
 28929              	.LVL3621:
12647:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
 28930              		.loc 1 12647 44 view .LVU8143
 28931 0064 FFF7FEFF 		bl	bno055_get_gyro_bw
 28932              	.LVL3622:
 28933 0068 0546     		mov	r5, r0
 28934              	.LVL3623:
12648:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28935              		.loc 1 12648 33 is_stmt 1 view .LVU8144
12648:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28936              		.loc 1 12648 45 is_stmt 0 view .LVU8145
 28937 006a 0DF10600 		add	r0, sp, #6
 28938 006e FFF7FEFF 		bl	bno055_get_gyro_auto_sleep_durn
 28939              	.LVL3624:
12648:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28940              		.loc 1 12648 42 view .LVU8146
 28941 0072 55FA80F3 		uxtab	r3, r5, r0
 28942 0076 5BB2     		sxtb	r3, r3
 28943              	.LVL3625:
12649:Core/Src/bno055.c ****                                 {
 28944              		.loc 1 12649 33 is_stmt 1 view .LVU8147
12649:Core/Src/bno055.c ****                                 {
 28945              		.loc 1 12649 36 is_stmt 0 view .LVU8148
 28946 0078 23B3     		cbz	r3, .L1992
 28947              	.LVL3626:
 28948              	.L1983:
12653:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE;
 28949              		.loc 1 12653 33 is_stmt 1 view .LVU8149
12653:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE;
 28950              		.loc 1 12653 45 is_stmt 0 view .LVU8150
 28951 007a 0120     		movs	r0, #1
 28952 007c FFF7FEFF 		bl	bno055_write_page_id
 28953              	.LVL3627:
12654:Core/Src/bno055.c ****                                 break;
 28954              		.loc 1 12654 33 is_stmt 1 view .LVU8151
12655:Core/Src/bno055.c ****                             default:
 28955              		.loc 1 12655 33 view .LVU8152
 28956              	.L1980:
12659:Core/Src/bno055.c ****                                                                   BNO055_GYRO_POWER_MODE_REG,
 28957              		.loc 1 12659 25 view .LVU8153
12659:Core/Src/bno055.c ****                                                                   BNO055_GYRO_POWER_MODE_REG,
 28958              		.loc 1 12659 44 is_stmt 0 view .LVU8154
ARM GAS  /tmp/ccWoU29M.s 			page 807


 28959 0080 1F4B     		ldr	r3, .L1994
 28960 0082 1868     		ldr	r0, [r3]
 28961 0084 0569     		ldr	r5, [r0, #16]
12659:Core/Src/bno055.c ****                                                                   BNO055_GYRO_POWER_MODE_REG,
 28962              		.loc 1 12659 36 view .LVU8155
 28963 0086 0123     		movs	r3, #1
 28964 0088 0DF10702 		add	r2, sp, #7
 28965 008c 0B21     		movs	r1, #11
 28966 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28967 0090 A847     		blx	r5
 28968              	.LVL3628:
12663:Core/Src/bno055.c ****                         {
 28969              		.loc 1 12663 25 is_stmt 1 view .LVU8156
12663:Core/Src/bno055.c ****                         {
 28970              		.loc 1 12663 28 is_stmt 0 view .LVU8157
 28971 0092 0546     		mov	r5, r0
 28972 0094 F8B9     		cbnz	r0, .L1978
12665:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28973              		.loc 1 12665 29 is_stmt 1 view .LVU8158
12665:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28974              		.loc 1 12665 40 is_stmt 0 view .LVU8159
 28975 0096 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 28976 009a 23F00703 		bic	r3, r3, #7
 28977 009e 5BB2     		sxtb	r3, r3
 28978 00a0 04F00704 		and	r4, r4, #7
 28979              	.LVL3629:
12665:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28980              		.loc 1 12665 40 view .LVU8160
 28981 00a4 1C43     		orrs	r4, r4, r3
12665:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28982              		.loc 1 12665 38 view .LVU8161
 28983 00a6 8DF80740 		strb	r4, [sp, #7]
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 28984              		.loc 1 12666 29 is_stmt 1 view .LVU8162
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 28985              		.loc 1 12666 49 is_stmt 0 view .LVU8163
 28986 00aa 154B     		ldr	r3, .L1994
 28987 00ac 1868     		ldr	r0, [r3]
 28988              	.LVL3630:
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 28989              		.loc 1 12666 49 view .LVU8164
 28990 00ae C468     		ldr	r4, [r0, #12]
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 28991              		.loc 1 12666 41 view .LVU8165
 28992 00b0 0123     		movs	r3, #1
 28993 00b2 0DF10702 		add	r2, sp, #7
 28994 00b6 0B21     		movs	r1, #11
 28995 00b8 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28996 00ba A047     		blx	r4
 28997              	.LVL3631:
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 28998              		.loc 1 12666 38 view .LVU8166
 28999 00bc 55FA80F5 		uxtab	r5, r5, r0
 29000 00c0 6DB2     		sxtb	r5, r5
 29001              	.LVL3632:
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 29002              		.loc 1 12666 38 view .LVU8167
ARM GAS  /tmp/ccWoU29M.s 			page 808


 29003 00c2 08E0     		b	.L1978
 29004              	.LVL3633:
 29005              	.L1992:
12651:Core/Src/bno055.c ****                                 }
 29006              		.loc 1 12651 37 is_stmt 1 view .LVU8168
12651:Core/Src/bno055.c ****                                 }
 29007              		.loc 1 12651 49 is_stmt 0 view .LVU8169
 29008 00c4 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 29009 00c8 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 29010 00cc FFF7FEFF 		bl	bno055_gyro_set_auto_sleep_durn
 29011              	.LVL3634:
12651:Core/Src/bno055.c ****                                 }
 29012              		.loc 1 12651 49 view .LVU8170
 29013 00d0 D3E7     		b	.L1983
 29014              	.LVL3635:
 29015              	.L1985:
12689:Core/Src/bno055.c ****         }
 29016              		.loc 1 12689 22 view .LVU8171
 29017 00d2 4FF0FF35 		mov	r5, #-1
 29018              	.LVL3636:
 29019              	.L1978:
12692:Core/Src/bno055.c ****     {
 29020              		.loc 1 12692 5 is_stmt 1 view .LVU8172
12692:Core/Src/bno055.c ****     {
 29021              		.loc 1 12692 24 is_stmt 0 view .LVU8173
 29022 00d6 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
12692:Core/Src/bno055.c ****     {
 29023              		.loc 1 12692 8 view .LVU8174
 29024 00da 40B9     		cbnz	r0, .L1993
 29025              	.LVL3637:
 29026              	.L1977:
12700:Core/Src/bno055.c **** 
 29027              		.loc 1 12700 1 view .LVU8175
 29028 00dc 2846     		mov	r0, r5
 29029 00de 03B0     		add	sp, sp, #12
 29030              	.LCFI795:
 29031              		.cfi_remember_state
 29032              		.cfi_def_cfa_offset 12
 29033              		@ sp needed
 29034 00e0 30BD     		pop	{r4, r5, pc}
 29035              	.LVL3638:
 29036              	.L1987:
 29037              	.LCFI796:
 29038              		.cfi_restore_state
12679:Core/Src/bno055.c ****                 }
 29039              		.loc 1 12679 30 view .LVU8176
 29040 00e2 4FF0FF35 		mov	r5, #-1
 29041              	.LVL3639:
12679:Core/Src/bno055.c ****                 }
 29042              		.loc 1 12679 30 view .LVU8177
 29043 00e6 F6E7     		b	.L1978
 29044              	.LVL3640:
 29045              	.L1988:
12674:Core/Src/bno055.c ****                     }
 29046              		.loc 1 12674 34 view .LVU8178
 29047 00e8 6FF00105 		mvn	r5, #1
 29048              	.LVL3641:
ARM GAS  /tmp/ccWoU29M.s 			page 809


12674:Core/Src/bno055.c ****                     }
 29049              		.loc 1 12674 34 view .LVU8179
 29050 00ec F3E7     		b	.L1978
 29051              	.LVL3642:
 29052              	.L1993:
12696:Core/Src/bno055.c ****     }
 29053              		.loc 1 12696 9 is_stmt 1 view .LVU8180
12696:Core/Src/bno055.c ****     }
 29054              		.loc 1 12696 21 is_stmt 0 view .LVU8181
 29055 00ee FFF7FEFF 		bl	bno055_set_operation_mode
 29056              	.LVL3643:
12696:Core/Src/bno055.c ****     }
 29057              		.loc 1 12696 18 view .LVU8182
 29058 00f2 55FA80F5 		uxtab	r5, r5, r0
 29059              	.LVL3644:
12696:Core/Src/bno055.c ****     }
 29060              		.loc 1 12696 18 view .LVU8183
 29061 00f6 6DB2     		sxtb	r5, r5
 29062              	.LVL3645:
12696:Core/Src/bno055.c ****     }
 29063              		.loc 1 12696 18 view .LVU8184
 29064 00f8 F0E7     		b	.L1977
 29065              	.LVL3646:
 29066              	.L1984:
12608:Core/Src/bno055.c ****     }
 29067              		.loc 1 12608 16 view .LVU8185
 29068 00fa 6FF07E05 		mvn	r5, #126
 29069 00fe EDE7     		b	.L1977
 29070              	.L1995:
 29071              		.align	2
 29072              	.L1994:
 29073 0100 00000000 		.word	.LANCHOR0
 29074              		.cfi_endproc
 29075              	.LFE192:
 29077              		.section	.text.bno055_get_mag_sleep_mode,"ax",%progbits
 29078              		.align	1
 29079              		.global	bno055_get_mag_sleep_mode
 29080              		.syntax unified
 29081              		.thumb
 29082              		.thumb_func
 29083              		.fpu fpv4-sp-d16
 29085              	bno055_get_mag_sleep_mode:
 29086              	.LVL3647:
 29087              	.LFB201:
13401:Core/Src/bno055.c **** 
13402:Core/Src/bno055.c **** /*!
13403:Core/Src/bno055.c ****  *  @brief This API used to read the mag sleep mode
13404:Core/Src/bno055.c ****  *  from page one register from 0x0E bit 0
13405:Core/Src/bno055.c ****  *
13406:Core/Src/bno055.c ****  *  @param sleep_mode_u8 : The value of mag sleep mode
13407:Core/Src/bno055.c ****  *
13408:Core/Src/bno055.c ****  *  @return results of bus communication function
13409:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13410:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13411:Core/Src/bno055.c ****  *
13412:Core/Src/bno055.c ****  *
13413:Core/Src/bno055.c ****  */
ARM GAS  /tmp/ccWoU29M.s 			page 810


13414:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_sleep_mode(u8 *sleep_mode_u8)
13415:Core/Src/bno055.c **** {
 29088              		.loc 1 13415 1 is_stmt 1 view -0
 29089              		.cfi_startproc
 29090              		@ args = 0, pretend = 0, frame = 8
 29091              		@ frame_needed = 0, uses_anonymous_args = 0
 29092              		.loc 1 13415 1 is_stmt 0 view .LVU8187
 29093 0000 30B5     		push	{r4, r5, lr}
 29094              	.LCFI797:
 29095              		.cfi_def_cfa_offset 12
 29096              		.cfi_offset 4, -12
 29097              		.cfi_offset 5, -8
 29098              		.cfi_offset 14, -4
 29099 0002 83B0     		sub	sp, sp, #12
 29100              	.LCFI798:
 29101              		.cfi_def_cfa_offset 24
13416:Core/Src/bno055.c ****     /* Variable used to return value of
13417:Core/Src/bno055.c ****      * communication routine*/
13418:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29102              		.loc 1 13418 5 is_stmt 1 view .LVU8188
 29103              	.LVL3648:
13419:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29104              		.loc 1 13419 5 view .LVU8189
 29105              		.loc 1 13419 8 is_stmt 0 view .LVU8190
 29106 0004 0023     		movs	r3, #0
 29107 0006 8DF80730 		strb	r3, [sp, #7]
13420:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29108              		.loc 1 13420 5 is_stmt 1 view .LVU8191
 29109              	.LVL3649:
13421:Core/Src/bno055.c **** 
13422:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13423:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29110              		.loc 1 13423 5 view .LVU8192
 29111              		.loc 1 13423 18 is_stmt 0 view .LVU8193
 29112 000a 144B     		ldr	r3, .L2004
 29113 000c 1B68     		ldr	r3, [r3]
 29114              		.loc 1 13423 8 view .LVU8194
 29115 000e F3B1     		cbz	r3, .L2000
 29116 0010 0446     		mov	r4, r0
13424:Core/Src/bno055.c ****     {
13425:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13426:Core/Src/bno055.c ****     }
13427:Core/Src/bno055.c ****     else
13428:Core/Src/bno055.c ****     {
13429:Core/Src/bno055.c ****         /*condition check for page,mag sleep mode is
13430:Core/Src/bno055.c ****          * available in the page one*/
13431:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29117              		.loc 1 13431 9 is_stmt 1 view .LVU8195
 29118              		.loc 1 13431 21 is_stmt 0 view .LVU8196
 29119 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29120              		.loc 1 13431 12 view .LVU8197
 29121 0014 012B     		cmp	r3, #1
 29122 0016 14D1     		bne	.L2003
 29123              	.LVL3650:
 29124              	.L1998:
13432:Core/Src/bno055.c ****         {
13433:Core/Src/bno055.c ****             /* Write page as one */
ARM GAS  /tmp/ccWoU29M.s 			page 811


13434:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13435:Core/Src/bno055.c ****         }
13436:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29125              		.loc 1 13436 53 discriminator 1 view .LVU8198
 29126 0018 104B     		ldr	r3, .L2004
 29127 001a 1B68     		ldr	r3, [r3]
 29128 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29129              		.loc 1 13436 41 discriminator 1 view .LVU8199
 29130 001e 012B     		cmp	r3, #1
 29131 0020 18D1     		bne	.L2001
 29132              	.L1999:
13437:Core/Src/bno055.c ****         {
13438:Core/Src/bno055.c ****             /* Read the value of mag sleep mode*/
13439:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29133              		.loc 1 13439 13 is_stmt 1 view .LVU8200
 29134              		.loc 1 13439 32 is_stmt 0 view .LVU8201
 29135 0022 0E4B     		ldr	r3, .L2004
 29136 0024 1868     		ldr	r0, [r3]
 29137 0026 0569     		ldr	r5, [r0, #16]
 29138              		.loc 1 13439 24 view .LVU8202
 29139 0028 0123     		movs	r3, #1
 29140 002a 0DF10702 		add	r2, sp, #7
 29141 002e 0E21     		movs	r1, #14
 29142 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29143 0032 A847     		blx	r5
 29144              	.LVL3651:
13440:Core/Src/bno055.c ****                                                       BNO055_MAG_SLEEP_MODE_REG,
13441:Core/Src/bno055.c ****                                                       &data_u8r,
13442:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13443:Core/Src/bno055.c ****             *sleep_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_SLEEP_MODE);
 29145              		.loc 1 13443 13 is_stmt 1 view .LVU8203
 29146              		.loc 1 13443 30 is_stmt 0 view .LVU8204
 29147 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29148 0038 03F00103 		and	r3, r3, #1
 29149              		.loc 1 13443 28 view .LVU8205
 29150 003c 2370     		strb	r3, [r4]
 29151              	.LVL3652:
 29152              	.L1997:
13444:Core/Src/bno055.c ****         }
13445:Core/Src/bno055.c ****         else
13446:Core/Src/bno055.c ****         {
13447:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13448:Core/Src/bno055.c ****         }
13449:Core/Src/bno055.c ****     }
13450:Core/Src/bno055.c **** 
13451:Core/Src/bno055.c ****     return com_rslt;
13452:Core/Src/bno055.c **** }
 29153              		.loc 1 13452 1 view .LVU8206
 29154 003e 03B0     		add	sp, sp, #12
 29155              	.LCFI799:
 29156              		.cfi_remember_state
 29157              		.cfi_def_cfa_offset 12
 29158              		@ sp needed
 29159 0040 30BD     		pop	{r4, r5, pc}
 29160              	.LVL3653:
 29161              	.L2003:
 29162              	.LCFI800:
ARM GAS  /tmp/ccWoU29M.s 			page 812


 29163              		.cfi_restore_state
13434:Core/Src/bno055.c ****         }
 29164              		.loc 1 13434 13 is_stmt 1 view .LVU8207
13434:Core/Src/bno055.c ****         }
 29165              		.loc 1 13434 23 is_stmt 0 view .LVU8208
 29166 0042 0120     		movs	r0, #1
 29167              	.LVL3654:
13434:Core/Src/bno055.c ****         }
 29168              		.loc 1 13434 23 view .LVU8209
 29169 0044 FFF7FEFF 		bl	bno055_write_page_id
 29170              	.LVL3655:
13436:Core/Src/bno055.c ****         {
 29171              		.loc 1 13436 9 is_stmt 1 view .LVU8210
13436:Core/Src/bno055.c ****         {
 29172              		.loc 1 13436 12 is_stmt 0 view .LVU8211
 29173 0048 0028     		cmp	r0, #0
 29174 004a EAD0     		beq	.L1999
 29175 004c E4E7     		b	.L1998
 29176              	.LVL3656:
 29177              	.L2000:
13425:Core/Src/bno055.c ****     }
 29178              		.loc 1 13425 16 view .LVU8212
 29179 004e 6FF07E00 		mvn	r0, #126
 29180              	.LVL3657:
13425:Core/Src/bno055.c ****     }
 29181              		.loc 1 13425 16 view .LVU8213
 29182 0052 F4E7     		b	.L1997
 29183              	.LVL3658:
 29184              	.L2001:
13447:Core/Src/bno055.c ****         }
 29185              		.loc 1 13447 22 view .LVU8214
 29186 0054 4FF0FF30 		mov	r0, #-1
 29187 0058 F1E7     		b	.L1997
 29188              	.L2005:
 29189 005a 00BF     		.align	2
 29190              	.L2004:
 29191 005c 00000000 		.word	.LANCHOR0
 29192              		.cfi_endproc
 29193              	.LFE201:
 29195              		.section	.text.bno055_set_mag_sleep_mode,"ax",%progbits
 29196              		.align	1
 29197              		.global	bno055_set_mag_sleep_mode
 29198              		.syntax unified
 29199              		.thumb
 29200              		.thumb_func
 29201              		.fpu fpv4-sp-d16
 29203              	bno055_set_mag_sleep_mode:
 29204              	.LVL3659:
 29205              	.LFB202:
13453:Core/Src/bno055.c **** 
13454:Core/Src/bno055.c **** /*!
13455:Core/Src/bno055.c ****  *  @brief This API used to write the mag sleep mode
13456:Core/Src/bno055.c ****  *  from page one register from 0x0E bit 0
13457:Core/Src/bno055.c ****  *
13458:Core/Src/bno055.c ****  *  @param sleep_mode_u8 : The value of mag sleep mode
13459:Core/Src/bno055.c ****  *
13460:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/ccWoU29M.s 			page 813


13461:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13462:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13463:Core/Src/bno055.c ****  *
13464:Core/Src/bno055.c ****  *
13465:Core/Src/bno055.c ****  */
13466:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_sleep_mode(u8 sleep_mode_u8)
13467:Core/Src/bno055.c **** {
 29206              		.loc 1 13467 1 is_stmt 1 view -0
 29207              		.cfi_startproc
 29208              		@ args = 0, pretend = 0, frame = 8
 29209              		@ frame_needed = 0, uses_anonymous_args = 0
 29210              		.loc 1 13467 1 is_stmt 0 view .LVU8216
 29211 0000 30B5     		push	{r4, r5, lr}
 29212              	.LCFI801:
 29213              		.cfi_def_cfa_offset 12
 29214              		.cfi_offset 4, -12
 29215              		.cfi_offset 5, -8
 29216              		.cfi_offset 14, -4
 29217 0002 83B0     		sub	sp, sp, #12
 29218              	.LCFI802:
 29219              		.cfi_def_cfa_offset 24
13468:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29220              		.loc 1 13468 5 is_stmt 1 view .LVU8217
 29221              	.LVL3660:
13469:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29222              		.loc 1 13469 5 view .LVU8218
 29223              		.loc 1 13469 8 is_stmt 0 view .LVU8219
 29224 0004 0023     		movs	r3, #0
 29225 0006 8DF80730 		strb	r3, [sp, #7]
13470:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29226              		.loc 1 13470 5 is_stmt 1 view .LVU8220
 29227              	.LVL3661:
13471:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 29228              		.loc 1 13471 5 view .LVU8221
13472:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 29229              		.loc 1 13472 5 view .LVU8222
 29230              		.loc 1 13472 8 is_stmt 0 view .LVU8223
 29231 000a 8DF80630 		strb	r3, [sp, #6]
13473:Core/Src/bno055.c **** 
13474:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13475:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29232              		.loc 1 13475 5 is_stmt 1 view .LVU8224
 29233              		.loc 1 13475 18 is_stmt 0 view .LVU8225
 29234 000e 294B     		ldr	r3, .L2018
 29235 0010 1B68     		ldr	r3, [r3]
 29236              		.loc 1 13475 8 view .LVU8226
 29237 0012 002B     		cmp	r3, #0
 29238 0014 4AD0     		beq	.L2010
 29239 0016 0546     		mov	r5, r0
13476:Core/Src/bno055.c ****     {
13477:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13478:Core/Src/bno055.c ****     }
13479:Core/Src/bno055.c ****     else
13480:Core/Src/bno055.c ****     {
13481:Core/Src/bno055.c ****         /* The write operation effective only if the operation
13482:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
13483:Core/Src/bno055.c ****          * current operation mode and set the config mode */
ARM GAS  /tmp/ccWoU29M.s 			page 814


13484:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 29240              		.loc 1 13484 9 is_stmt 1 view .LVU8227
 29241              		.loc 1 13484 19 is_stmt 0 view .LVU8228
 29242 0018 0DF10600 		add	r0, sp, #6
 29243              	.LVL3662:
 29244              		.loc 1 13484 19 view .LVU8229
 29245 001c FFF7FEFF 		bl	bno055_get_operation_mode
 29246              	.LVL3663:
13485:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 29247              		.loc 1 13485 9 is_stmt 1 view .LVU8230
 29248              		.loc 1 13485 12 is_stmt 0 view .LVU8231
 29249 0020 0446     		mov	r4, r0
 29250 0022 90BB     		cbnz	r0, .L2011
13486:Core/Src/bno055.c ****         {
13487:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 29251              		.loc 1 13487 13 is_stmt 1 view .LVU8232
 29252              		.loc 1 13487 32 is_stmt 0 view .LVU8233
 29253 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 29254              		.loc 1 13487 16 view .LVU8234
 29255 0028 1BB9     		cbnz	r3, .L2015
 29256              	.LVL3664:
 29257              	.L2009:
13488:Core/Src/bno055.c ****             {
13489:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
13490:Core/Src/bno055.c ****             }
13491:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 29258              		.loc 1 13491 13 is_stmt 1 view .LVU8235
 29259              		.loc 1 13491 16 is_stmt 0 view .LVU8236
 29260 002a 44B1     		cbz	r4, .L2016
13492:Core/Src/bno055.c ****             {
13493:Core/Src/bno055.c ****                 /* Write page as one */
13494:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13495:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
13496:Core/Src/bno055.c ****                 {
13497:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
13498:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
13499:Core/Src/bno055.c ****                                                               &data_u8r,
13500:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
13501:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
13502:Core/Src/bno055.c ****                     {
13503:Core/Src/bno055.c ****                         /* Write the value
13504:Core/Src/bno055.c ****                          * of mag sleep mode*/
13505:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_MAG_SLEEP_MODE, sleep_mode_
13506:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
13507:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
13508:Core/Src/bno055.c ****                                                                     &data_u8r,
13509:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
13510:Core/Src/bno055.c ****                     }
13511:Core/Src/bno055.c ****                 }
13512:Core/Src/bno055.c ****                 else
13513:Core/Src/bno055.c ****                 {
13514:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
13515:Core/Src/bno055.c ****                 }
13516:Core/Src/bno055.c ****             }
13517:Core/Src/bno055.c ****             else
13518:Core/Src/bno055.c ****             {
13519:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 815


 29261              		.loc 1 13519 26 view .LVU8237
 29262 002c 4FF0FF34 		mov	r4, #-1
 29263              	.LVL3665:
 29264              		.loc 1 13519 26 view .LVU8238
 29265 0030 2DE0     		b	.L2008
 29266              	.LVL3666:
 29267              	.L2015:
13489:Core/Src/bno055.c ****             }
 29268              		.loc 1 13489 17 is_stmt 1 view .LVU8239
13489:Core/Src/bno055.c ****             }
 29269              		.loc 1 13489 28 is_stmt 0 view .LVU8240
 29270 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 29271              	.LVL3667:
13489:Core/Src/bno055.c ****             }
 29272              		.loc 1 13489 25 view .LVU8241
 29273 0036 54FA80F4 		uxtab	r4, r4, r0
 29274 003a 64B2     		sxtb	r4, r4
 29275              	.LVL3668:
13489:Core/Src/bno055.c ****             }
 29276              		.loc 1 13489 25 view .LVU8242
 29277 003c F5E7     		b	.L2009
 29278              	.L2016:
13494:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 29279              		.loc 1 13494 17 is_stmt 1 view .LVU8243
13494:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 29280              		.loc 1 13494 30 is_stmt 0 view .LVU8244
 29281 003e 0120     		movs	r0, #1
 29282 0040 FFF7FEFF 		bl	bno055_write_page_id
 29283              	.LVL3669:
13495:Core/Src/bno055.c ****                 {
 29284              		.loc 1 13495 17 is_stmt 1 view .LVU8245
13495:Core/Src/bno055.c ****                 {
 29285              		.loc 1 13495 20 is_stmt 0 view .LVU8246
 29286 0044 48BB     		cbnz	r0, .L2013
13497:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
 29287              		.loc 1 13497 21 is_stmt 1 view .LVU8247
13497:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
 29288              		.loc 1 13497 40 is_stmt 0 view .LVU8248
 29289 0046 1B4B     		ldr	r3, .L2018
 29290 0048 1868     		ldr	r0, [r3]
 29291              	.LVL3670:
13497:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
 29292              		.loc 1 13497 40 view .LVU8249
 29293 004a 0469     		ldr	r4, [r0, #16]
 29294              	.LVL3671:
13497:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
 29295              		.loc 1 13497 32 view .LVU8250
 29296 004c 0123     		movs	r3, #1
 29297 004e 0DF10702 		add	r2, sp, #7
 29298 0052 0E21     		movs	r1, #14
 29299 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29300 0056 A047     		blx	r4
 29301              	.LVL3672:
13501:Core/Src/bno055.c ****                     {
 29302              		.loc 1 13501 21 is_stmt 1 view .LVU8251
13501:Core/Src/bno055.c ****                     {
 29303              		.loc 1 13501 24 is_stmt 0 view .LVU8252
ARM GAS  /tmp/ccWoU29M.s 			page 816


 29304 0058 0446     		mov	r4, r0
 29305 005a C0B9     		cbnz	r0, .L2008
13505:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29306              		.loc 1 13505 25 is_stmt 1 view .LVU8253
13505:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29307              		.loc 1 13505 36 is_stmt 0 view .LVU8254
 29308 005c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 29309              	.LVL3673:
13505:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29310              		.loc 1 13505 36 view .LVU8255
 29311 0060 20F00100 		bic	r0, r0, #1
 29312 0064 43B2     		sxtb	r3, r0
 29313 0066 05F00100 		and	r0, r5, #1
 29314 006a 1843     		orrs	r0, r0, r3
13505:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29315              		.loc 1 13505 34 view .LVU8256
 29316 006c 8DF80700 		strb	r0, [sp, #7]
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 29317              		.loc 1 13506 25 is_stmt 1 view .LVU8257
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 29318              		.loc 1 13506 45 is_stmt 0 view .LVU8258
 29319 0070 104B     		ldr	r3, .L2018
 29320 0072 1868     		ldr	r0, [r3]
 29321 0074 C568     		ldr	r5, [r0, #12]
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 29322              		.loc 1 13506 37 view .LVU8259
 29323 0076 0123     		movs	r3, #1
 29324 0078 0DF10702 		add	r2, sp, #7
 29325 007c 0E21     		movs	r1, #14
 29326 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29327 0080 A847     		blx	r5
 29328              	.LVL3674:
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 29329              		.loc 1 13506 34 view .LVU8260
 29330 0082 54FA80F4 		uxtab	r4, r4, r0
 29331 0086 64B2     		sxtb	r4, r4
 29332              	.LVL3675:
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 29333              		.loc 1 13506 34 view .LVU8261
 29334 0088 01E0     		b	.L2008
 29335              	.LVL3676:
 29336              	.L2011:
13520:Core/Src/bno055.c ****             }
13521:Core/Src/bno055.c ****         }
13522:Core/Src/bno055.c ****         else
13523:Core/Src/bno055.c ****         {
13524:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 29337              		.loc 1 13524 22 view .LVU8262
 29338 008a 4FF0FF34 		mov	r4, #-1
 29339              	.LVL3677:
 29340              	.L2008:
13525:Core/Src/bno055.c ****         }
13526:Core/Src/bno055.c ****     }
13527:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 29341              		.loc 1 13527 5 is_stmt 1 view .LVU8263
 29342              		.loc 1 13527 24 is_stmt 0 view .LVU8264
 29343 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 817


 29344              		.loc 1 13527 8 view .LVU8265
 29345 0092 28B9     		cbnz	r0, .L2017
 29346              	.LVL3678:
 29347              	.L2007:
13528:Core/Src/bno055.c ****     {
13529:Core/Src/bno055.c ****         /* set the operation mode of
13530:Core/Src/bno055.c ****          * previous operation mode*/
13531:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
13532:Core/Src/bno055.c ****     }
13533:Core/Src/bno055.c **** 
13534:Core/Src/bno055.c ****     return com_rslt;
13535:Core/Src/bno055.c **** }
 29348              		.loc 1 13535 1 view .LVU8266
 29349 0094 2046     		mov	r0, r4
 29350 0096 03B0     		add	sp, sp, #12
 29351              	.LCFI803:
 29352              		.cfi_remember_state
 29353              		.cfi_def_cfa_offset 12
 29354              		@ sp needed
 29355 0098 30BD     		pop	{r4, r5, pc}
 29356              	.LVL3679:
 29357              	.L2013:
 29358              	.LCFI804:
 29359              		.cfi_restore_state
13514:Core/Src/bno055.c ****                 }
 29360              		.loc 1 13514 30 view .LVU8267
 29361 009a 4FF0FF34 		mov	r4, #-1
 29362              	.LVL3680:
13514:Core/Src/bno055.c ****                 }
 29363              		.loc 1 13514 30 view .LVU8268
 29364 009e F6E7     		b	.L2008
 29365              	.LVL3681:
 29366              	.L2017:
13531:Core/Src/bno055.c ****     }
 29367              		.loc 1 13531 9 is_stmt 1 view .LVU8269
13531:Core/Src/bno055.c ****     }
 29368              		.loc 1 13531 21 is_stmt 0 view .LVU8270
 29369 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 29370              	.LVL3682:
13531:Core/Src/bno055.c ****     }
 29371              		.loc 1 13531 18 view .LVU8271
 29372 00a4 54FA80F4 		uxtab	r4, r4, r0
 29373              	.LVL3683:
13531:Core/Src/bno055.c ****     }
 29374              		.loc 1 13531 18 view .LVU8272
 29375 00a8 64B2     		sxtb	r4, r4
 29376              	.LVL3684:
13531:Core/Src/bno055.c ****     }
 29377              		.loc 1 13531 18 view .LVU8273
 29378 00aa F3E7     		b	.L2007
 29379              	.LVL3685:
 29380              	.L2010:
13477:Core/Src/bno055.c ****     }
 29381              		.loc 1 13477 16 view .LVU8274
 29382 00ac 6FF07E04 		mvn	r4, #126
 29383 00b0 F0E7     		b	.L2007
 29384              	.L2019:
ARM GAS  /tmp/ccWoU29M.s 			page 818


 29385 00b2 00BF     		.align	2
 29386              	.L2018:
 29387 00b4 00000000 		.word	.LANCHOR0
 29388              		.cfi_endproc
 29389              	.LFE202:
 29391              		.section	.text.bno055_get_mag_sleep_durn,"ax",%progbits
 29392              		.align	1
 29393              		.global	bno055_get_mag_sleep_durn
 29394              		.syntax unified
 29395              		.thumb
 29396              		.thumb_func
 29397              		.fpu fpv4-sp-d16
 29399              	bno055_get_mag_sleep_durn:
 29400              	.LVL3686:
 29401              	.LFB203:
13536:Core/Src/bno055.c **** 
13537:Core/Src/bno055.c **** /*!
13538:Core/Src/bno055.c ****  *  @brief This API used to read the mag sleep duration
13539:Core/Src/bno055.c ****  *  from page one register from 0x0E bit 1 to 4
13540:Core/Src/bno055.c ****  *
13541:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of mag sleep duration
13542:Core/Src/bno055.c ****  *
13543:Core/Src/bno055.c ****  *  @return results of bus communication function
13544:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13545:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13546:Core/Src/bno055.c ****  *
13547:Core/Src/bno055.c ****  *
13548:Core/Src/bno055.c ****  */
13549:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_sleep_durn(u8 *sleep_durn_u8)
13550:Core/Src/bno055.c **** {
 29402              		.loc 1 13550 1 is_stmt 1 view -0
 29403              		.cfi_startproc
 29404              		@ args = 0, pretend = 0, frame = 8
 29405              		@ frame_needed = 0, uses_anonymous_args = 0
 29406              		.loc 1 13550 1 is_stmt 0 view .LVU8276
 29407 0000 30B5     		push	{r4, r5, lr}
 29408              	.LCFI805:
 29409              		.cfi_def_cfa_offset 12
 29410              		.cfi_offset 4, -12
 29411              		.cfi_offset 5, -8
 29412              		.cfi_offset 14, -4
 29413 0002 83B0     		sub	sp, sp, #12
 29414              	.LCFI806:
 29415              		.cfi_def_cfa_offset 24
13551:Core/Src/bno055.c ****     /* Variable used to return value of
13552:Core/Src/bno055.c ****      * communication routine*/
13553:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29416              		.loc 1 13553 5 is_stmt 1 view .LVU8277
 29417              	.LVL3687:
13554:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29418              		.loc 1 13554 5 view .LVU8278
 29419              		.loc 1 13554 8 is_stmt 0 view .LVU8279
 29420 0004 0023     		movs	r3, #0
 29421 0006 8DF80730 		strb	r3, [sp, #7]
13555:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29422              		.loc 1 13555 5 is_stmt 1 view .LVU8280
 29423              	.LVL3688:
ARM GAS  /tmp/ccWoU29M.s 			page 819


13556:Core/Src/bno055.c **** 
13557:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13558:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29424              		.loc 1 13558 5 view .LVU8281
 29425              		.loc 1 13558 18 is_stmt 0 view .LVU8282
 29426 000a 144B     		ldr	r3, .L2028
 29427 000c 1B68     		ldr	r3, [r3]
 29428              		.loc 1 13558 8 view .LVU8283
 29429 000e F3B1     		cbz	r3, .L2024
 29430 0010 0446     		mov	r4, r0
13559:Core/Src/bno055.c ****     {
13560:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13561:Core/Src/bno055.c ****     }
13562:Core/Src/bno055.c ****     else
13563:Core/Src/bno055.c ****     {
13564:Core/Src/bno055.c ****         /*condition check for page,mag sleep duration is
13565:Core/Src/bno055.c ****          * available in the page one*/
13566:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29431              		.loc 1 13566 9 is_stmt 1 view .LVU8284
 29432              		.loc 1 13566 21 is_stmt 0 view .LVU8285
 29433 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29434              		.loc 1 13566 12 view .LVU8286
 29435 0014 012B     		cmp	r3, #1
 29436 0016 14D1     		bne	.L2027
 29437              	.LVL3689:
 29438              	.L2022:
13567:Core/Src/bno055.c ****         {
13568:Core/Src/bno055.c ****             /* Write page as one */
13569:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13570:Core/Src/bno055.c ****         }
13571:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29439              		.loc 1 13571 53 discriminator 1 view .LVU8287
 29440 0018 104B     		ldr	r3, .L2028
 29441 001a 1B68     		ldr	r3, [r3]
 29442 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29443              		.loc 1 13571 41 discriminator 1 view .LVU8288
 29444 001e 012B     		cmp	r3, #1
 29445 0020 18D1     		bne	.L2025
 29446              	.L2023:
13572:Core/Src/bno055.c ****         {
13573:Core/Src/bno055.c ****             /* Read the value of mag sleep duration*/
13574:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29447              		.loc 1 13574 13 is_stmt 1 view .LVU8289
 29448              		.loc 1 13574 32 is_stmt 0 view .LVU8290
 29449 0022 0E4B     		ldr	r3, .L2028
 29450 0024 1868     		ldr	r0, [r3]
 29451 0026 0569     		ldr	r5, [r0, #16]
 29452              		.loc 1 13574 24 view .LVU8291
 29453 0028 0123     		movs	r3, #1
 29454 002a 0DF10702 		add	r2, sp, #7
 29455 002e 0E21     		movs	r1, #14
 29456 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29457 0032 A847     		blx	r5
 29458              	.LVL3690:
13575:Core/Src/bno055.c ****                                                       BNO055_MAG_SLEEP_DURN_REG,
13576:Core/Src/bno055.c ****                                                       &data_u8r,
13577:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/ccWoU29M.s 			page 820


13578:Core/Src/bno055.c ****             *sleep_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_SLEEP_DURN);
 29459              		.loc 1 13578 13 is_stmt 1 view .LVU8292
 29460              		.loc 1 13578 30 is_stmt 0 view .LVU8293
 29461 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29462 0038 C3F34303 		ubfx	r3, r3, #1, #4
 29463              		.loc 1 13578 28 view .LVU8294
 29464 003c 2370     		strb	r3, [r4]
 29465              	.LVL3691:
 29466              	.L2021:
13579:Core/Src/bno055.c ****         }
13580:Core/Src/bno055.c ****         else
13581:Core/Src/bno055.c ****         {
13582:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13583:Core/Src/bno055.c ****         }
13584:Core/Src/bno055.c ****     }
13585:Core/Src/bno055.c **** 
13586:Core/Src/bno055.c ****     return com_rslt;
13587:Core/Src/bno055.c **** }
 29467              		.loc 1 13587 1 view .LVU8295
 29468 003e 03B0     		add	sp, sp, #12
 29469              	.LCFI807:
 29470              		.cfi_remember_state
 29471              		.cfi_def_cfa_offset 12
 29472              		@ sp needed
 29473 0040 30BD     		pop	{r4, r5, pc}
 29474              	.LVL3692:
 29475              	.L2027:
 29476              	.LCFI808:
 29477              		.cfi_restore_state
13569:Core/Src/bno055.c ****         }
 29478              		.loc 1 13569 13 is_stmt 1 view .LVU8296
13569:Core/Src/bno055.c ****         }
 29479              		.loc 1 13569 23 is_stmt 0 view .LVU8297
 29480 0042 0120     		movs	r0, #1
 29481              	.LVL3693:
13569:Core/Src/bno055.c ****         }
 29482              		.loc 1 13569 23 view .LVU8298
 29483 0044 FFF7FEFF 		bl	bno055_write_page_id
 29484              	.LVL3694:
13571:Core/Src/bno055.c ****         {
 29485              		.loc 1 13571 9 is_stmt 1 view .LVU8299
13571:Core/Src/bno055.c ****         {
 29486              		.loc 1 13571 12 is_stmt 0 view .LVU8300
 29487 0048 0028     		cmp	r0, #0
 29488 004a EAD0     		beq	.L2023
 29489 004c E4E7     		b	.L2022
 29490              	.LVL3695:
 29491              	.L2024:
13560:Core/Src/bno055.c ****     }
 29492              		.loc 1 13560 16 view .LVU8301
 29493 004e 6FF07E00 		mvn	r0, #126
 29494              	.LVL3696:
13560:Core/Src/bno055.c ****     }
 29495              		.loc 1 13560 16 view .LVU8302
 29496 0052 F4E7     		b	.L2021
 29497              	.LVL3697:
 29498              	.L2025:
ARM GAS  /tmp/ccWoU29M.s 			page 821


13582:Core/Src/bno055.c ****         }
 29499              		.loc 1 13582 22 view .LVU8303
 29500 0054 4FF0FF30 		mov	r0, #-1
 29501 0058 F1E7     		b	.L2021
 29502              	.L2029:
 29503 005a 00BF     		.align	2
 29504              	.L2028:
 29505 005c 00000000 		.word	.LANCHOR0
 29506              		.cfi_endproc
 29507              	.LFE203:
 29509              		.section	.text.bno055_set_mag_sleep_durn,"ax",%progbits
 29510              		.align	1
 29511              		.global	bno055_set_mag_sleep_durn
 29512              		.syntax unified
 29513              		.thumb
 29514              		.thumb_func
 29515              		.fpu fpv4-sp-d16
 29517              	bno055_set_mag_sleep_durn:
 29518              	.LVL3698:
 29519              	.LFB204:
13588:Core/Src/bno055.c **** 
13589:Core/Src/bno055.c **** /*!
13590:Core/Src/bno055.c ****  *  @brief This API used to write the mag sleep duration
13591:Core/Src/bno055.c ****  *  from page one register from 0x0E bit 1 to 4
13592:Core/Src/bno055.c ****  *
13593:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of mag sleep duration
13594:Core/Src/bno055.c ****  *
13595:Core/Src/bno055.c ****  *  @return results of bus communication function
13596:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13597:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13598:Core/Src/bno055.c ****  *
13599:Core/Src/bno055.c ****  *
13600:Core/Src/bno055.c ****  */
13601:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_sleep_durn(u8 sleep_durn_u8)
13602:Core/Src/bno055.c **** {
 29520              		.loc 1 13602 1 is_stmt 1 view -0
 29521              		.cfi_startproc
 29522              		@ args = 0, pretend = 0, frame = 8
 29523              		@ frame_needed = 0, uses_anonymous_args = 0
 29524              		.loc 1 13602 1 is_stmt 0 view .LVU8305
 29525 0000 30B5     		push	{r4, r5, lr}
 29526              	.LCFI809:
 29527              		.cfi_def_cfa_offset 12
 29528              		.cfi_offset 4, -12
 29529              		.cfi_offset 5, -8
 29530              		.cfi_offset 14, -4
 29531 0002 83B0     		sub	sp, sp, #12
 29532              	.LCFI810:
 29533              		.cfi_def_cfa_offset 24
13603:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29534              		.loc 1 13603 5 is_stmt 1 view .LVU8306
 29535              	.LVL3699:
13604:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29536              		.loc 1 13604 5 view .LVU8307
 29537              		.loc 1 13604 8 is_stmt 0 view .LVU8308
 29538 0004 0023     		movs	r3, #0
 29539 0006 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/ccWoU29M.s 			page 822


13605:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29540              		.loc 1 13605 5 is_stmt 1 view .LVU8309
 29541              	.LVL3700:
13606:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 29542              		.loc 1 13606 5 view .LVU8310
13607:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 29543              		.loc 1 13607 5 view .LVU8311
 29544              		.loc 1 13607 8 is_stmt 0 view .LVU8312
 29545 000a 8DF80630 		strb	r3, [sp, #6]
13608:Core/Src/bno055.c **** 
13609:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13610:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29546              		.loc 1 13610 5 is_stmt 1 view .LVU8313
 29547              		.loc 1 13610 18 is_stmt 0 view .LVU8314
 29548 000e 2A4B     		ldr	r3, .L2042
 29549 0010 1B68     		ldr	r3, [r3]
 29550              		.loc 1 13610 8 view .LVU8315
 29551 0012 002B     		cmp	r3, #0
 29552 0014 4CD0     		beq	.L2034
 29553 0016 0546     		mov	r5, r0
13611:Core/Src/bno055.c ****     {
13612:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13613:Core/Src/bno055.c ****     }
13614:Core/Src/bno055.c ****     else
13615:Core/Src/bno055.c ****     {
13616:Core/Src/bno055.c ****         /* The write operation effective only if the operation
13617:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
13618:Core/Src/bno055.c ****          * current operation mode and set the config mode */
13619:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 29554              		.loc 1 13619 9 is_stmt 1 view .LVU8316
 29555              		.loc 1 13619 19 is_stmt 0 view .LVU8317
 29556 0018 0DF10600 		add	r0, sp, #6
 29557              	.LVL3701:
 29558              		.loc 1 13619 19 view .LVU8318
 29559 001c FFF7FEFF 		bl	bno055_get_operation_mode
 29560              	.LVL3702:
13620:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 29561              		.loc 1 13620 9 is_stmt 1 view .LVU8319
 29562              		.loc 1 13620 12 is_stmt 0 view .LVU8320
 29563 0020 0446     		mov	r4, r0
 29564 0022 0028     		cmp	r0, #0
 29565 0024 33D1     		bne	.L2035
13621:Core/Src/bno055.c ****         {
13622:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 29566              		.loc 1 13622 13 is_stmt 1 view .LVU8321
 29567              		.loc 1 13622 32 is_stmt 0 view .LVU8322
 29568 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 29569              		.loc 1 13622 16 view .LVU8323
 29570 002a 1BB9     		cbnz	r3, .L2039
 29571              	.LVL3703:
 29572              	.L2033:
13623:Core/Src/bno055.c ****             {
13624:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
13625:Core/Src/bno055.c ****             }
13626:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 29573              		.loc 1 13626 13 is_stmt 1 view .LVU8324
 29574              		.loc 1 13626 16 is_stmt 0 view .LVU8325
ARM GAS  /tmp/ccWoU29M.s 			page 823


 29575 002c 44B1     		cbz	r4, .L2040
13627:Core/Src/bno055.c ****             {
13628:Core/Src/bno055.c ****                 /* Write page as one */
13629:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13630:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
13631:Core/Src/bno055.c ****                 {
13632:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
13633:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
13634:Core/Src/bno055.c ****                                                               &data_u8r,
13635:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
13636:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
13637:Core/Src/bno055.c ****                     {
13638:Core/Src/bno055.c ****                         /* Write the value of
13639:Core/Src/bno055.c ****                          *  mag sleep duration */
13640:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_MAG_SLEEP_DURN, sleep_durn_
13641:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
13642:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
13643:Core/Src/bno055.c ****                                                                     &data_u8r,
13644:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
13645:Core/Src/bno055.c ****                     }
13646:Core/Src/bno055.c ****                 }
13647:Core/Src/bno055.c ****                 else
13648:Core/Src/bno055.c ****                 {
13649:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
13650:Core/Src/bno055.c ****                 }
13651:Core/Src/bno055.c ****             }
13652:Core/Src/bno055.c ****             else
13653:Core/Src/bno055.c ****             {
13654:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 29576              		.loc 1 13654 26 view .LVU8326
 29577 002e 4FF0FF34 		mov	r4, #-1
 29578              	.LVL3704:
 29579              		.loc 1 13654 26 view .LVU8327
 29580 0032 2EE0     		b	.L2032
 29581              	.LVL3705:
 29582              	.L2039:
13624:Core/Src/bno055.c ****             }
 29583              		.loc 1 13624 17 is_stmt 1 view .LVU8328
13624:Core/Src/bno055.c ****             }
 29584              		.loc 1 13624 28 is_stmt 0 view .LVU8329
 29585 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 29586              	.LVL3706:
13624:Core/Src/bno055.c ****             }
 29587              		.loc 1 13624 25 view .LVU8330
 29588 0038 54FA80F4 		uxtab	r4, r4, r0
 29589 003c 64B2     		sxtb	r4, r4
 29590              	.LVL3707:
13624:Core/Src/bno055.c ****             }
 29591              		.loc 1 13624 25 view .LVU8331
 29592 003e F5E7     		b	.L2033
 29593              	.L2040:
13629:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 29594              		.loc 1 13629 17 is_stmt 1 view .LVU8332
13629:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 29595              		.loc 1 13629 30 is_stmt 0 view .LVU8333
 29596 0040 0120     		movs	r0, #1
 29597 0042 FFF7FEFF 		bl	bno055_write_page_id
ARM GAS  /tmp/ccWoU29M.s 			page 824


 29598              	.LVL3708:
13630:Core/Src/bno055.c ****                 {
 29599              		.loc 1 13630 17 is_stmt 1 view .LVU8334
13630:Core/Src/bno055.c ****                 {
 29600              		.loc 1 13630 20 is_stmt 0 view .LVU8335
 29601 0046 50BB     		cbnz	r0, .L2037
13632:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
 29602              		.loc 1 13632 21 is_stmt 1 view .LVU8336
13632:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
 29603              		.loc 1 13632 40 is_stmt 0 view .LVU8337
 29604 0048 1B4B     		ldr	r3, .L2042
 29605 004a 1868     		ldr	r0, [r3]
 29606              	.LVL3709:
13632:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
 29607              		.loc 1 13632 40 view .LVU8338
 29608 004c 0469     		ldr	r4, [r0, #16]
 29609              	.LVL3710:
13632:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
 29610              		.loc 1 13632 32 view .LVU8339
 29611 004e 0123     		movs	r3, #1
 29612 0050 0DF10702 		add	r2, sp, #7
 29613 0054 0E21     		movs	r1, #14
 29614 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29615 0058 A047     		blx	r4
 29616              	.LVL3711:
13636:Core/Src/bno055.c ****                     {
 29617              		.loc 1 13636 21 is_stmt 1 view .LVU8340
13636:Core/Src/bno055.c ****                     {
 29618              		.loc 1 13636 24 is_stmt 0 view .LVU8341
 29619 005a 0446     		mov	r4, r0
 29620 005c C8B9     		cbnz	r0, .L2032
13640:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29621              		.loc 1 13640 25 is_stmt 1 view .LVU8342
13640:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29622              		.loc 1 13640 36 is_stmt 0 view .LVU8343
 29623 005e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 29624              	.LVL3712:
13640:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29625              		.loc 1 13640 36 view .LVU8344
 29626 0062 20F01E00 		bic	r0, r0, #30
 29627 0066 43B2     		sxtb	r3, r0
 29628 0068 6800     		lsls	r0, r5, #1
 29629 006a 00F01E00 		and	r0, r0, #30
 29630 006e 1843     		orrs	r0, r0, r3
13640:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29631              		.loc 1 13640 34 view .LVU8345
 29632 0070 8DF80700 		strb	r0, [sp, #7]
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 29633              		.loc 1 13641 25 is_stmt 1 view .LVU8346
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 29634              		.loc 1 13641 45 is_stmt 0 view .LVU8347
 29635 0074 104B     		ldr	r3, .L2042
 29636 0076 1868     		ldr	r0, [r3]
 29637 0078 C568     		ldr	r5, [r0, #12]
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 29638              		.loc 1 13641 37 view .LVU8348
 29639 007a 0123     		movs	r3, #1
ARM GAS  /tmp/ccWoU29M.s 			page 825


 29640 007c 0DF10702 		add	r2, sp, #7
 29641 0080 0E21     		movs	r1, #14
 29642 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29643 0084 A847     		blx	r5
 29644              	.LVL3713:
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 29645              		.loc 1 13641 34 view .LVU8349
 29646 0086 54FA80F4 		uxtab	r4, r4, r0
 29647 008a 64B2     		sxtb	r4, r4
 29648              	.LVL3714:
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 29649              		.loc 1 13641 34 view .LVU8350
 29650 008c 01E0     		b	.L2032
 29651              	.LVL3715:
 29652              	.L2035:
13655:Core/Src/bno055.c ****             }
13656:Core/Src/bno055.c ****         }
13657:Core/Src/bno055.c ****         else
13658:Core/Src/bno055.c ****         {
13659:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 29653              		.loc 1 13659 22 view .LVU8351
 29654 008e 4FF0FF34 		mov	r4, #-1
 29655              	.LVL3716:
 29656              	.L2032:
13660:Core/Src/bno055.c ****         }
13661:Core/Src/bno055.c ****     }
13662:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 29657              		.loc 1 13662 5 is_stmt 1 view .LVU8352
 29658              		.loc 1 13662 24 is_stmt 0 view .LVU8353
 29659 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 29660              		.loc 1 13662 8 view .LVU8354
 29661 0096 28B9     		cbnz	r0, .L2041
 29662              	.LVL3717:
 29663              	.L2031:
13663:Core/Src/bno055.c ****     {
13664:Core/Src/bno055.c ****         /* set the operation mode of
13665:Core/Src/bno055.c ****          * previous operation mode*/
13666:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
13667:Core/Src/bno055.c ****     }
13668:Core/Src/bno055.c **** 
13669:Core/Src/bno055.c ****     return com_rslt;
13670:Core/Src/bno055.c **** }
 29664              		.loc 1 13670 1 view .LVU8355
 29665 0098 2046     		mov	r0, r4
 29666 009a 03B0     		add	sp, sp, #12
 29667              	.LCFI811:
 29668              		.cfi_remember_state
 29669              		.cfi_def_cfa_offset 12
 29670              		@ sp needed
 29671 009c 30BD     		pop	{r4, r5, pc}
 29672              	.LVL3718:
 29673              	.L2037:
 29674              	.LCFI812:
 29675              		.cfi_restore_state
13649:Core/Src/bno055.c ****                 }
 29676              		.loc 1 13649 30 view .LVU8356
 29677 009e 4FF0FF34 		mov	r4, #-1
ARM GAS  /tmp/ccWoU29M.s 			page 826


 29678              	.LVL3719:
13649:Core/Src/bno055.c ****                 }
 29679              		.loc 1 13649 30 view .LVU8357
 29680 00a2 F6E7     		b	.L2032
 29681              	.LVL3720:
 29682              	.L2041:
13666:Core/Src/bno055.c ****     }
 29683              		.loc 1 13666 9 is_stmt 1 view .LVU8358
13666:Core/Src/bno055.c ****     }
 29684              		.loc 1 13666 21 is_stmt 0 view .LVU8359
 29685 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 29686              	.LVL3721:
13666:Core/Src/bno055.c ****     }
 29687              		.loc 1 13666 18 view .LVU8360
 29688 00a8 54FA80F4 		uxtab	r4, r4, r0
 29689              	.LVL3722:
13666:Core/Src/bno055.c ****     }
 29690              		.loc 1 13666 18 view .LVU8361
 29691 00ac 64B2     		sxtb	r4, r4
 29692              	.LVL3723:
13666:Core/Src/bno055.c ****     }
 29693              		.loc 1 13666 18 view .LVU8362
 29694 00ae F3E7     		b	.L2031
 29695              	.LVL3724:
 29696              	.L2034:
13612:Core/Src/bno055.c ****     }
 29697              		.loc 1 13612 16 view .LVU8363
 29698 00b0 6FF07E04 		mvn	r4, #126
 29699 00b4 F0E7     		b	.L2031
 29700              	.L2043:
 29701 00b6 00BF     		.align	2
 29702              	.L2042:
 29703 00b8 00000000 		.word	.LANCHOR0
 29704              		.cfi_endproc
 29705              	.LFE204:
 29707              		.section	.text.bno055_get_intr_mask_gyro_any_motion,"ax",%progbits
 29708              		.align	1
 29709              		.global	bno055_get_intr_mask_gyro_any_motion
 29710              		.syntax unified
 29711              		.thumb
 29712              		.thumb_func
 29713              		.fpu fpv4-sp-d16
 29715              	bno055_get_intr_mask_gyro_any_motion:
 29716              	.LVL3725:
 29717              	.LFB205:
13671:Core/Src/bno055.c **** 
13672:Core/Src/bno055.c **** /*!
13673:Core/Src/bno055.c ****  *  @brief This API used to read the gyro anymotion interrupt mask
13674:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 2
13675:Core/Src/bno055.c ****  *
13676:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt mask
13677:Core/Src/bno055.c ****  *      gyro_any_motion_u8 |   result
13678:Core/Src/bno055.c ****  *     --------------------  |------------
13679:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
13680:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
13681:Core/Src/bno055.c ****  *
13682:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/ccWoU29M.s 			page 827


13683:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13684:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13685:Core/Src/bno055.c ****  *
13686:Core/Src/bno055.c ****  *  @note While enabling the gyro anymotion interrupt
13687:Core/Src/bno055.c ****  *  configure the following settings
13688:Core/Src/bno055.c ****  *
13689:Core/Src/bno055.c ****  *  Axis:
13690:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_axis_enable()
13691:Core/Src/bno055.c ****  *
13692:Core/Src/bno055.c ****  *  Filter setting:
13693:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_filter()
13694:Core/Src/bno055.c ****  *
13695:Core/Src/bno055.c ****  *  Threshold :
13696:Core/Src/bno055.c ****  *
13697:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_thres()
13698:Core/Src/bno055.c ****  *
13699:Core/Src/bno055.c ****  *  Slope samples :
13700:Core/Src/bno055.c ****  *
13701:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_slope_samples()
13702:Core/Src/bno055.c ****  *
13703:Core/Src/bno055.c ****  *  Awake duration :
13704:Core/Src/bno055.c ****  *
13705:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_awake_durn()
13706:Core/Src/bno055.c ****  *
13707:Core/Src/bno055.c ****  */
13708:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_gyro_any_motion(u8 *gyro_any_motion_u8)
13709:Core/Src/bno055.c **** {
 29718              		.loc 1 13709 1 is_stmt 1 view -0
 29719              		.cfi_startproc
 29720              		@ args = 0, pretend = 0, frame = 8
 29721              		@ frame_needed = 0, uses_anonymous_args = 0
 29722              		.loc 1 13709 1 is_stmt 0 view .LVU8365
 29723 0000 30B5     		push	{r4, r5, lr}
 29724              	.LCFI813:
 29725              		.cfi_def_cfa_offset 12
 29726              		.cfi_offset 4, -12
 29727              		.cfi_offset 5, -8
 29728              		.cfi_offset 14, -4
 29729 0002 83B0     		sub	sp, sp, #12
 29730              	.LCFI814:
 29731              		.cfi_def_cfa_offset 24
13710:Core/Src/bno055.c ****     /* Variable used to return value of
13711:Core/Src/bno055.c ****      * communication routine*/
13712:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29732              		.loc 1 13712 5 is_stmt 1 view .LVU8366
 29733              	.LVL3726:
13713:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29734              		.loc 1 13713 5 view .LVU8367
 29735              		.loc 1 13713 8 is_stmt 0 view .LVU8368
 29736 0004 0023     		movs	r3, #0
 29737 0006 8DF80730 		strb	r3, [sp, #7]
13714:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29738              		.loc 1 13714 5 is_stmt 1 view .LVU8369
 29739              	.LVL3727:
13715:Core/Src/bno055.c **** 
13716:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13717:Core/Src/bno055.c ****     if (p_bno055 == NULL)
ARM GAS  /tmp/ccWoU29M.s 			page 828


 29740              		.loc 1 13717 5 view .LVU8370
 29741              		.loc 1 13717 18 is_stmt 0 view .LVU8371
 29742 000a 144B     		ldr	r3, .L2052
 29743 000c 1B68     		ldr	r3, [r3]
 29744              		.loc 1 13717 8 view .LVU8372
 29745 000e F3B1     		cbz	r3, .L2048
 29746 0010 0446     		mov	r4, r0
13718:Core/Src/bno055.c ****     {
13719:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13720:Core/Src/bno055.c ****     }
13721:Core/Src/bno055.c ****     else
13722:Core/Src/bno055.c ****     {
13723:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion interrupt mask is
13724:Core/Src/bno055.c ****          * available in the page one*/
13725:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29747              		.loc 1 13725 9 is_stmt 1 view .LVU8373
 29748              		.loc 1 13725 21 is_stmt 0 view .LVU8374
 29749 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29750              		.loc 1 13725 12 view .LVU8375
 29751 0014 012B     		cmp	r3, #1
 29752 0016 14D1     		bne	.L2051
 29753              	.LVL3728:
 29754              	.L2046:
13726:Core/Src/bno055.c ****         {
13727:Core/Src/bno055.c ****             /* Write page as one */
13728:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13729:Core/Src/bno055.c ****         }
13730:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29755              		.loc 1 13730 53 discriminator 1 view .LVU8376
 29756 0018 104B     		ldr	r3, .L2052
 29757 001a 1B68     		ldr	r3, [r3]
 29758 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29759              		.loc 1 13730 41 discriminator 1 view .LVU8377
 29760 001e 012B     		cmp	r3, #1
 29761 0020 18D1     		bne	.L2049
 29762              	.L2047:
13731:Core/Src/bno055.c ****         {
13732:Core/Src/bno055.c ****             /* Read the value of gyro anymotion interrupt mask*/
13733:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29763              		.loc 1 13733 13 is_stmt 1 view .LVU8378
 29764              		.loc 1 13733 32 is_stmt 0 view .LVU8379
 29765 0022 0E4B     		ldr	r3, .L2052
 29766 0024 1868     		ldr	r0, [r3]
 29767 0026 0569     		ldr	r5, [r0, #16]
 29768              		.loc 1 13733 24 view .LVU8380
 29769 0028 0123     		movs	r3, #1
 29770 002a 0DF10702 		add	r2, sp, #7
 29771 002e 0F21     		movs	r1, #15
 29772 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29773 0032 A847     		blx	r5
 29774              	.LVL3729:
13734:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_INTR_MASK_REG,
13735:Core/Src/bno055.c ****                                                       &data_u8r,
13736:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13737:Core/Src/bno055.c ****             *gyro_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_INTR_MASK);
 29775              		.loc 1 13737 13 is_stmt 1 view .LVU8381
 29776              		.loc 1 13737 35 is_stmt 0 view .LVU8382
ARM GAS  /tmp/ccWoU29M.s 			page 829


 29777 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29778 0038 C3F38003 		ubfx	r3, r3, #2, #1
 29779              		.loc 1 13737 33 view .LVU8383
 29780 003c 2370     		strb	r3, [r4]
 29781              	.LVL3730:
 29782              	.L2045:
13738:Core/Src/bno055.c ****         }
13739:Core/Src/bno055.c ****         else
13740:Core/Src/bno055.c ****         {
13741:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13742:Core/Src/bno055.c ****         }
13743:Core/Src/bno055.c ****     }
13744:Core/Src/bno055.c **** 
13745:Core/Src/bno055.c ****     return com_rslt;
13746:Core/Src/bno055.c **** }
 29783              		.loc 1 13746 1 view .LVU8384
 29784 003e 03B0     		add	sp, sp, #12
 29785              	.LCFI815:
 29786              		.cfi_remember_state
 29787              		.cfi_def_cfa_offset 12
 29788              		@ sp needed
 29789 0040 30BD     		pop	{r4, r5, pc}
 29790              	.LVL3731:
 29791              	.L2051:
 29792              	.LCFI816:
 29793              		.cfi_restore_state
13728:Core/Src/bno055.c ****         }
 29794              		.loc 1 13728 13 is_stmt 1 view .LVU8385
13728:Core/Src/bno055.c ****         }
 29795              		.loc 1 13728 23 is_stmt 0 view .LVU8386
 29796 0042 0120     		movs	r0, #1
 29797              	.LVL3732:
13728:Core/Src/bno055.c ****         }
 29798              		.loc 1 13728 23 view .LVU8387
 29799 0044 FFF7FEFF 		bl	bno055_write_page_id
 29800              	.LVL3733:
13730:Core/Src/bno055.c ****         {
 29801              		.loc 1 13730 9 is_stmt 1 view .LVU8388
13730:Core/Src/bno055.c ****         {
 29802              		.loc 1 13730 12 is_stmt 0 view .LVU8389
 29803 0048 0028     		cmp	r0, #0
 29804 004a EAD0     		beq	.L2047
 29805 004c E4E7     		b	.L2046
 29806              	.LVL3734:
 29807              	.L2048:
13719:Core/Src/bno055.c ****     }
 29808              		.loc 1 13719 16 view .LVU8390
 29809 004e 6FF07E00 		mvn	r0, #126
 29810              	.LVL3735:
13719:Core/Src/bno055.c ****     }
 29811              		.loc 1 13719 16 view .LVU8391
 29812 0052 F4E7     		b	.L2045
 29813              	.LVL3736:
 29814              	.L2049:
13741:Core/Src/bno055.c ****         }
 29815              		.loc 1 13741 22 view .LVU8392
 29816 0054 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccWoU29M.s 			page 830


 29817 0058 F1E7     		b	.L2045
 29818              	.L2053:
 29819 005a 00BF     		.align	2
 29820              	.L2052:
 29821 005c 00000000 		.word	.LANCHOR0
 29822              		.cfi_endproc
 29823              	.LFE205:
 29825              		.section	.text.bno055_set_intr_mask_gyro_any_motion,"ax",%progbits
 29826              		.align	1
 29827              		.global	bno055_set_intr_mask_gyro_any_motion
 29828              		.syntax unified
 29829              		.thumb
 29830              		.thumb_func
 29831              		.fpu fpv4-sp-d16
 29833              	bno055_set_intr_mask_gyro_any_motion:
 29834              	.LVL3737:
 29835              	.LFB206:
13747:Core/Src/bno055.c **** 
13748:Core/Src/bno055.c **** /*!
13749:Core/Src/bno055.c ****  *  @brief This API used to write the gyro anymotion interrupt mask
13750:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 2
13751:Core/Src/bno055.c ****  *
13752:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt mask
13753:Core/Src/bno055.c ****  *      gyro_any_motion_u8 |   result
13754:Core/Src/bno055.c ****  *     --------------------  |------------
13755:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
13756:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
13757:Core/Src/bno055.c ****  *
13758:Core/Src/bno055.c ****  *  @return results of bus communication function
13759:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13760:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13761:Core/Src/bno055.c ****  *
13762:Core/Src/bno055.c ****  *  @note While enabling the gyro anymotion interrupt
13763:Core/Src/bno055.c ****  *  configure the following settings
13764:Core/Src/bno055.c ****  *
13765:Core/Src/bno055.c ****  *  Axis:
13766:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_axis_enable()
13767:Core/Src/bno055.c ****  *
13768:Core/Src/bno055.c ****  *  Filter setting:
13769:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_filter()
13770:Core/Src/bno055.c ****  *
13771:Core/Src/bno055.c ****  *  Threshold :
13772:Core/Src/bno055.c ****  *
13773:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_thres()
13774:Core/Src/bno055.c ****  *
13775:Core/Src/bno055.c ****  *  Slope samples :
13776:Core/Src/bno055.c ****  *
13777:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_slope_samples()
13778:Core/Src/bno055.c ****  *
13779:Core/Src/bno055.c ****  *  Awake duration :
13780:Core/Src/bno055.c ****  *
13781:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_awake_durn()
13782:Core/Src/bno055.c ****  *
13783:Core/Src/bno055.c ****  */
13784:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_gyro_any_motion(u8 gyro_any_motion_u8)
13785:Core/Src/bno055.c **** {
 29836              		.loc 1 13785 1 is_stmt 1 view -0
ARM GAS  /tmp/ccWoU29M.s 			page 831


 29837              		.cfi_startproc
 29838              		@ args = 0, pretend = 0, frame = 8
 29839              		@ frame_needed = 0, uses_anonymous_args = 0
 29840              		.loc 1 13785 1 is_stmt 0 view .LVU8394
 29841 0000 30B5     		push	{r4, r5, lr}
 29842              	.LCFI817:
 29843              		.cfi_def_cfa_offset 12
 29844              		.cfi_offset 4, -12
 29845              		.cfi_offset 5, -8
 29846              		.cfi_offset 14, -4
 29847 0002 83B0     		sub	sp, sp, #12
 29848              	.LCFI818:
 29849              		.cfi_def_cfa_offset 24
13786:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29850              		.loc 1 13786 5 is_stmt 1 view .LVU8395
 29851              	.LVL3738:
13787:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29852              		.loc 1 13787 5 view .LVU8396
 29853              		.loc 1 13787 8 is_stmt 0 view .LVU8397
 29854 0004 0023     		movs	r3, #0
 29855 0006 8DF80730 		strb	r3, [sp, #7]
13788:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29856              		.loc 1 13788 5 is_stmt 1 view .LVU8398
 29857              	.LVL3739:
13789:Core/Src/bno055.c **** 
13790:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13791:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29858              		.loc 1 13791 5 view .LVU8399
 29859              		.loc 1 13791 18 is_stmt 0 view .LVU8400
 29860 000a 1F4B     		ldr	r3, .L2062
 29861 000c 1B68     		ldr	r3, [r3]
 29862              		.loc 1 13791 8 view .LVU8401
 29863 000e 002B     		cmp	r3, #0
 29864 0010 33D0     		beq	.L2058
 29865 0012 0446     		mov	r4, r0
13792:Core/Src/bno055.c ****     {
13793:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13794:Core/Src/bno055.c ****     }
13795:Core/Src/bno055.c ****     else
13796:Core/Src/bno055.c ****     {
13797:Core/Src/bno055.c ****         /*condition check for page, accel range is
13798:Core/Src/bno055.c ****          * available in the page one*/
13799:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29866              		.loc 1 13799 9 is_stmt 1 view .LVU8402
 29867              		.loc 1 13799 21 is_stmt 0 view .LVU8403
 29868 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29869              		.loc 1 13799 12 view .LVU8404
 29870 0016 012B     		cmp	r3, #1
 29871 0018 29D1     		bne	.L2061
 29872              	.LVL3740:
 29873              	.L2056:
13800:Core/Src/bno055.c ****         {
13801:Core/Src/bno055.c ****             /* Write page as one */
13802:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13803:Core/Src/bno055.c ****         }
13804:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29874              		.loc 1 13804 53 discriminator 1 view .LVU8405
ARM GAS  /tmp/ccWoU29M.s 			page 832


 29875 001a 1B4B     		ldr	r3, .L2062
 29876 001c 1B68     		ldr	r3, [r3]
 29877 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29878              		.loc 1 13804 41 discriminator 1 view .LVU8406
 29879 0020 012B     		cmp	r3, #1
 29880 0022 2DD1     		bne	.L2059
 29881              	.L2057:
13805:Core/Src/bno055.c ****         {
13806:Core/Src/bno055.c ****             /* Write the value of gyro anymotion interrupt mask*/
13807:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29882              		.loc 1 13807 13 is_stmt 1 view .LVU8407
 29883              		.loc 1 13807 32 is_stmt 0 view .LVU8408
 29884 0024 184B     		ldr	r3, .L2062
 29885 0026 1868     		ldr	r0, [r3]
 29886 0028 0569     		ldr	r5, [r0, #16]
 29887              		.loc 1 13807 24 view .LVU8409
 29888 002a 0123     		movs	r3, #1
 29889 002c 0DF10702 		add	r2, sp, #7
 29890 0030 0F21     		movs	r1, #15
 29891 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29892 0034 A847     		blx	r5
 29893              	.LVL3741:
13808:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_INTR_MASK_REG,
13809:Core/Src/bno055.c ****                                                       &data_u8r,
13810:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13811:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 29894              		.loc 1 13811 13 is_stmt 1 view .LVU8410
 29895              		.loc 1 13811 16 is_stmt 0 view .LVU8411
 29896 0036 0546     		mov	r5, r0
 29897 0038 B0B9     		cbnz	r0, .L2055
13812:Core/Src/bno055.c ****             {
13813:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_INTR_MASK, gyro_any
 29898              		.loc 1 13813 17 is_stmt 1 view .LVU8412
 29899              		.loc 1 13813 28 is_stmt 0 view .LVU8413
 29900 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29901 003e 23F00403 		bic	r3, r3, #4
 29902 0042 5BB2     		sxtb	r3, r3
 29903 0044 A400     		lsls	r4, r4, #2
 29904 0046 04F00404 		and	r4, r4, #4
 29905 004a 1C43     		orrs	r4, r4, r3
 29906              		.loc 1 13813 26 view .LVU8414
 29907 004c 8DF80740 		strb	r4, [sp, #7]
13814:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29908              		.loc 1 13814 17 is_stmt 1 view .LVU8415
 29909              		.loc 1 13814 37 is_stmt 0 view .LVU8416
 29910 0050 0D4B     		ldr	r3, .L2062
 29911 0052 1868     		ldr	r0, [r3]
 29912              	.LVL3742:
 29913              		.loc 1 13814 37 view .LVU8417
 29914 0054 C468     		ldr	r4, [r0, #12]
 29915              		.loc 1 13814 29 view .LVU8418
 29916 0056 0123     		movs	r3, #1
 29917 0058 0DF10702 		add	r2, sp, #7
 29918 005c 0F21     		movs	r1, #15
 29919 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29920 0060 A047     		blx	r4
 29921              	.LVL3743:
ARM GAS  /tmp/ccWoU29M.s 			page 833


 29922              		.loc 1 13814 26 view .LVU8419
 29923 0062 55FA80F5 		uxtab	r5, r5, r0
 29924 0066 6DB2     		sxtb	r5, r5
 29925              	.LVL3744:
 29926              	.L2055:
13815:Core/Src/bno055.c ****                                                             BNO055_GYRO_ANY_MOTION_INTR_MASK_REG,
13816:Core/Src/bno055.c ****                                                             &data_u8r,
13817:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
13818:Core/Src/bno055.c ****             }
13819:Core/Src/bno055.c ****         }
13820:Core/Src/bno055.c ****         else
13821:Core/Src/bno055.c ****         {
13822:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13823:Core/Src/bno055.c ****         }
13824:Core/Src/bno055.c ****     }
13825:Core/Src/bno055.c **** 
13826:Core/Src/bno055.c ****     return com_rslt;
13827:Core/Src/bno055.c **** }
 29927              		.loc 1 13827 1 view .LVU8420
 29928 0068 2846     		mov	r0, r5
 29929 006a 03B0     		add	sp, sp, #12
 29930              	.LCFI819:
 29931              		.cfi_remember_state
 29932              		.cfi_def_cfa_offset 12
 29933              		@ sp needed
 29934 006c 30BD     		pop	{r4, r5, pc}
 29935              	.LVL3745:
 29936              	.L2061:
 29937              	.LCFI820:
 29938              		.cfi_restore_state
13802:Core/Src/bno055.c ****         }
 29939              		.loc 1 13802 13 is_stmt 1 view .LVU8421
13802:Core/Src/bno055.c ****         }
 29940              		.loc 1 13802 23 is_stmt 0 view .LVU8422
 29941 006e 0120     		movs	r0, #1
 29942              	.LVL3746:
13802:Core/Src/bno055.c ****         }
 29943              		.loc 1 13802 23 view .LVU8423
 29944 0070 FFF7FEFF 		bl	bno055_write_page_id
 29945              	.LVL3747:
13804:Core/Src/bno055.c ****         {
 29946              		.loc 1 13804 9 is_stmt 1 view .LVU8424
13804:Core/Src/bno055.c ****         {
 29947              		.loc 1 13804 12 is_stmt 0 view .LVU8425
 29948 0074 0028     		cmp	r0, #0
 29949 0076 D5D0     		beq	.L2057
 29950 0078 CFE7     		b	.L2056
 29951              	.LVL3748:
 29952              	.L2058:
13793:Core/Src/bno055.c ****     }
 29953              		.loc 1 13793 16 view .LVU8426
 29954 007a 6FF07E05 		mvn	r5, #126
 29955 007e F3E7     		b	.L2055
 29956              	.LVL3749:
 29957              	.L2059:
13822:Core/Src/bno055.c ****         }
 29958              		.loc 1 13822 22 view .LVU8427
ARM GAS  /tmp/ccWoU29M.s 			page 834


 29959 0080 4FF0FF35 		mov	r5, #-1
 29960 0084 F0E7     		b	.L2055
 29961              	.L2063:
 29962 0086 00BF     		.align	2
 29963              	.L2062:
 29964 0088 00000000 		.word	.LANCHOR0
 29965              		.cfi_endproc
 29966              	.LFE206:
 29968              		.section	.text.bno055_get_intr_mask_gyro_highrate,"ax",%progbits
 29969              		.align	1
 29970              		.global	bno055_get_intr_mask_gyro_highrate
 29971              		.syntax unified
 29972              		.thumb
 29973              		.thumb_func
 29974              		.fpu fpv4-sp-d16
 29976              	bno055_get_intr_mask_gyro_highrate:
 29977              	.LVL3750:
 29978              	.LFB207:
13828:Core/Src/bno055.c **** 
13829:Core/Src/bno055.c **** /*!
13830:Core/Src/bno055.c ****  *  @brief This API used to read the gyro highrate interrupt mask
13831:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 3
13832:Core/Src/bno055.c ****  *
13833:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt mask
13834:Core/Src/bno055.c ****  *        gyro_highrate_u8 |  result
13835:Core/Src/bno055.c ****  *     --------------------  |------------
13836:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
13837:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
13838:Core/Src/bno055.c ****  *
13839:Core/Src/bno055.c ****  *  @return results of bus communication function
13840:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13841:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13842:Core/Src/bno055.c ****  *
13843:Core/Src/bno055.c ****  *  @note While enabling the gyro highrate interrupt
13844:Core/Src/bno055.c ****  *  configure the below settings by using
13845:Core/Src/bno055.c ****  *  the following API
13846:Core/Src/bno055.c ****  *
13847:Core/Src/bno055.c ****  *  Axis :
13848:Core/Src/bno055.c ****  *
13849:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_axis_enable()
13850:Core/Src/bno055.c ****  *
13851:Core/Src/bno055.c ****  *  Filter :
13852:Core/Src/bno055.c ****  *
13853:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_filter()
13854:Core/Src/bno055.c ****  *
13855:Core/Src/bno055.c ****  *  Threshold :
13856:Core/Src/bno055.c ****  *
13857:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_x_thres()
13858:Core/Src/bno055.c ****  *
13859:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_y_thres()
13860:Core/Src/bno055.c ****  *
13861:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_z_thres()
13862:Core/Src/bno055.c ****  *
13863:Core/Src/bno055.c ****  *  Hysteresis :
13864:Core/Src/bno055.c ****  *
13865:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_hyst()
13866:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 835


13867:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_hyst()
13868:Core/Src/bno055.c ****  *
13869:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_hyst()
13870:Core/Src/bno055.c ****  *
13871:Core/Src/bno055.c ****  *  Duration :
13872:Core/Src/bno055.c ****  *
13873:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_durn()
13874:Core/Src/bno055.c ****  *
13875:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_durn()
13876:Core/Src/bno055.c ****  *
13877:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_durn()
13878:Core/Src/bno055.c ****  *
13879:Core/Src/bno055.c ****  */
13880:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_gyro_highrate(u8 *gyro_highrate_u8)
13881:Core/Src/bno055.c **** {
 29979              		.loc 1 13881 1 is_stmt 1 view -0
 29980              		.cfi_startproc
 29981              		@ args = 0, pretend = 0, frame = 8
 29982              		@ frame_needed = 0, uses_anonymous_args = 0
 29983              		.loc 1 13881 1 is_stmt 0 view .LVU8429
 29984 0000 30B5     		push	{r4, r5, lr}
 29985              	.LCFI821:
 29986              		.cfi_def_cfa_offset 12
 29987              		.cfi_offset 4, -12
 29988              		.cfi_offset 5, -8
 29989              		.cfi_offset 14, -4
 29990 0002 83B0     		sub	sp, sp, #12
 29991              	.LCFI822:
 29992              		.cfi_def_cfa_offset 24
13882:Core/Src/bno055.c ****     /* Variable used to return value of
13883:Core/Src/bno055.c ****      * communication routine*/
13884:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29993              		.loc 1 13884 5 is_stmt 1 view .LVU8430
 29994              	.LVL3751:
13885:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29995              		.loc 1 13885 5 view .LVU8431
 29996              		.loc 1 13885 8 is_stmt 0 view .LVU8432
 29997 0004 0023     		movs	r3, #0
 29998 0006 8DF80730 		strb	r3, [sp, #7]
13886:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29999              		.loc 1 13886 5 is_stmt 1 view .LVU8433
 30000              	.LVL3752:
13887:Core/Src/bno055.c **** 
13888:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13889:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30001              		.loc 1 13889 5 view .LVU8434
 30002              		.loc 1 13889 18 is_stmt 0 view .LVU8435
 30003 000a 144B     		ldr	r3, .L2072
 30004 000c 1B68     		ldr	r3, [r3]
 30005              		.loc 1 13889 8 view .LVU8436
 30006 000e F3B1     		cbz	r3, .L2068
 30007 0010 0446     		mov	r4, r0
13890:Core/Src/bno055.c ****     {
13891:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13892:Core/Src/bno055.c ****     }
13893:Core/Src/bno055.c ****     else
13894:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccWoU29M.s 			page 836


13895:Core/Src/bno055.c ****         /*condition check for page, gyro highrate interrupt mask is
13896:Core/Src/bno055.c ****          * available in the page one*/
13897:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30008              		.loc 1 13897 9 is_stmt 1 view .LVU8437
 30009              		.loc 1 13897 21 is_stmt 0 view .LVU8438
 30010 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30011              		.loc 1 13897 12 view .LVU8439
 30012 0014 012B     		cmp	r3, #1
 30013 0016 14D1     		bne	.L2071
 30014              	.LVL3753:
 30015              	.L2066:
13898:Core/Src/bno055.c ****         {
13899:Core/Src/bno055.c ****             /* Write page as one */
13900:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13901:Core/Src/bno055.c ****         }
13902:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30016              		.loc 1 13902 53 discriminator 1 view .LVU8440
 30017 0018 104B     		ldr	r3, .L2072
 30018 001a 1B68     		ldr	r3, [r3]
 30019 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30020              		.loc 1 13902 41 discriminator 1 view .LVU8441
 30021 001e 012B     		cmp	r3, #1
 30022 0020 18D1     		bne	.L2069
 30023              	.L2067:
13903:Core/Src/bno055.c ****         {
13904:Core/Src/bno055.c ****             /* Read the value of gyro highrate interrupt mask*/
13905:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30024              		.loc 1 13905 13 is_stmt 1 view .LVU8442
 30025              		.loc 1 13905 32 is_stmt 0 view .LVU8443
 30026 0022 0E4B     		ldr	r3, .L2072
 30027 0024 1868     		ldr	r0, [r3]
 30028 0026 0569     		ldr	r5, [r0, #16]
 30029              		.loc 1 13905 24 view .LVU8444
 30030 0028 0123     		movs	r3, #1
 30031 002a 0DF10702 		add	r2, sp, #7
 30032 002e 0F21     		movs	r1, #15
 30033 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30034 0032 A847     		blx	r5
 30035              	.LVL3754:
13906:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_INTR_MASK_REG,
13907:Core/Src/bno055.c ****                                                       &data_u8r,
13908:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13909:Core/Src/bno055.c ****             *gyro_highrate_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_INTR_MASK);
 30036              		.loc 1 13909 13 is_stmt 1 view .LVU8445
 30037              		.loc 1 13909 33 is_stmt 0 view .LVU8446
 30038 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30039 0038 C3F3C003 		ubfx	r3, r3, #3, #1
 30040              		.loc 1 13909 31 view .LVU8447
 30041 003c 2370     		strb	r3, [r4]
 30042              	.LVL3755:
 30043              	.L2065:
13910:Core/Src/bno055.c ****         }
13911:Core/Src/bno055.c ****         else
13912:Core/Src/bno055.c ****         {
13913:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13914:Core/Src/bno055.c ****         }
13915:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 837


13916:Core/Src/bno055.c **** 
13917:Core/Src/bno055.c ****     return com_rslt;
13918:Core/Src/bno055.c **** }
 30044              		.loc 1 13918 1 view .LVU8448
 30045 003e 03B0     		add	sp, sp, #12
 30046              	.LCFI823:
 30047              		.cfi_remember_state
 30048              		.cfi_def_cfa_offset 12
 30049              		@ sp needed
 30050 0040 30BD     		pop	{r4, r5, pc}
 30051              	.LVL3756:
 30052              	.L2071:
 30053              	.LCFI824:
 30054              		.cfi_restore_state
13900:Core/Src/bno055.c ****         }
 30055              		.loc 1 13900 13 is_stmt 1 view .LVU8449
13900:Core/Src/bno055.c ****         }
 30056              		.loc 1 13900 23 is_stmt 0 view .LVU8450
 30057 0042 0120     		movs	r0, #1
 30058              	.LVL3757:
13900:Core/Src/bno055.c ****         }
 30059              		.loc 1 13900 23 view .LVU8451
 30060 0044 FFF7FEFF 		bl	bno055_write_page_id
 30061              	.LVL3758:
13902:Core/Src/bno055.c ****         {
 30062              		.loc 1 13902 9 is_stmt 1 view .LVU8452
13902:Core/Src/bno055.c ****         {
 30063              		.loc 1 13902 12 is_stmt 0 view .LVU8453
 30064 0048 0028     		cmp	r0, #0
 30065 004a EAD0     		beq	.L2067
 30066 004c E4E7     		b	.L2066
 30067              	.LVL3759:
 30068              	.L2068:
13891:Core/Src/bno055.c ****     }
 30069              		.loc 1 13891 16 view .LVU8454
 30070 004e 6FF07E00 		mvn	r0, #126
 30071              	.LVL3760:
13891:Core/Src/bno055.c ****     }
 30072              		.loc 1 13891 16 view .LVU8455
 30073 0052 F4E7     		b	.L2065
 30074              	.LVL3761:
 30075              	.L2069:
13913:Core/Src/bno055.c ****         }
 30076              		.loc 1 13913 22 view .LVU8456
 30077 0054 4FF0FF30 		mov	r0, #-1
 30078 0058 F1E7     		b	.L2065
 30079              	.L2073:
 30080 005a 00BF     		.align	2
 30081              	.L2072:
 30082 005c 00000000 		.word	.LANCHOR0
 30083              		.cfi_endproc
 30084              	.LFE207:
 30086              		.section	.text.bno055_set_intr_mask_gyro_highrate,"ax",%progbits
 30087              		.align	1
 30088              		.global	bno055_set_intr_mask_gyro_highrate
 30089              		.syntax unified
 30090              		.thumb
ARM GAS  /tmp/ccWoU29M.s 			page 838


 30091              		.thumb_func
 30092              		.fpu fpv4-sp-d16
 30094              	bno055_set_intr_mask_gyro_highrate:
 30095              	.LVL3762:
 30096              	.LFB208:
13919:Core/Src/bno055.c **** 
13920:Core/Src/bno055.c **** /*!
13921:Core/Src/bno055.c ****  *  @brief This API used to write the gyro highrate interrupt mask
13922:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 3
13923:Core/Src/bno055.c ****  *
13924:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt mask
13925:Core/Src/bno055.c ****  *        gyro_highrate_u8 |  result
13926:Core/Src/bno055.c ****  *     --------------------  |------------
13927:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
13928:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
13929:Core/Src/bno055.c ****  *
13930:Core/Src/bno055.c ****  *  @return results of bus communication function
13931:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13932:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13933:Core/Src/bno055.c ****  *
13934:Core/Src/bno055.c ****  *  @note While enabling the gyro highrate interrupt
13935:Core/Src/bno055.c ****  *  configure the below settings by using
13936:Core/Src/bno055.c ****  *  the following APIs
13937:Core/Src/bno055.c ****  *
13938:Core/Src/bno055.c ****  *  Axis :
13939:Core/Src/bno055.c ****  *
13940:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_axis_enable()
13941:Core/Src/bno055.c ****  *
13942:Core/Src/bno055.c ****  *  Filter :
13943:Core/Src/bno055.c ****  *
13944:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_filter()
13945:Core/Src/bno055.c ****  *
13946:Core/Src/bno055.c ****  *  Threshold :
13947:Core/Src/bno055.c ****  *
13948:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_x_thres()
13949:Core/Src/bno055.c ****  *
13950:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_y_thres()
13951:Core/Src/bno055.c ****  *
13952:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_z_thres()
13953:Core/Src/bno055.c ****  *
13954:Core/Src/bno055.c ****  *  Hysteresis :
13955:Core/Src/bno055.c ****  *
13956:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_hyst()
13957:Core/Src/bno055.c ****  *
13958:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_hyst()
13959:Core/Src/bno055.c ****  *
13960:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_hyst()
13961:Core/Src/bno055.c ****  *
13962:Core/Src/bno055.c ****  *  Duration :
13963:Core/Src/bno055.c ****  *
13964:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_durn()
13965:Core/Src/bno055.c ****  *
13966:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_durn()
13967:Core/Src/bno055.c ****  *
13968:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_durn()
13969:Core/Src/bno055.c ****  *
13970:Core/Src/bno055.c ****  */
ARM GAS  /tmp/ccWoU29M.s 			page 839


13971:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_gyro_highrate(u8 gyro_highrate_u8)
13972:Core/Src/bno055.c **** {
 30097              		.loc 1 13972 1 is_stmt 1 view -0
 30098              		.cfi_startproc
 30099              		@ args = 0, pretend = 0, frame = 8
 30100              		@ frame_needed = 0, uses_anonymous_args = 0
 30101              		.loc 1 13972 1 is_stmt 0 view .LVU8458
 30102 0000 30B5     		push	{r4, r5, lr}
 30103              	.LCFI825:
 30104              		.cfi_def_cfa_offset 12
 30105              		.cfi_offset 4, -12
 30106              		.cfi_offset 5, -8
 30107              		.cfi_offset 14, -4
 30108 0002 83B0     		sub	sp, sp, #12
 30109              	.LCFI826:
 30110              		.cfi_def_cfa_offset 24
13973:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30111              		.loc 1 13973 5 is_stmt 1 view .LVU8459
 30112              	.LVL3763:
13974:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30113              		.loc 1 13974 5 view .LVU8460
 30114              		.loc 1 13974 8 is_stmt 0 view .LVU8461
 30115 0004 0023     		movs	r3, #0
 30116 0006 8DF80730 		strb	r3, [sp, #7]
13975:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30117              		.loc 1 13975 5 is_stmt 1 view .LVU8462
 30118              	.LVL3764:
13976:Core/Src/bno055.c **** 
13977:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13978:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30119              		.loc 1 13978 5 view .LVU8463
 30120              		.loc 1 13978 18 is_stmt 0 view .LVU8464
 30121 000a 1F4B     		ldr	r3, .L2082
 30122 000c 1B68     		ldr	r3, [r3]
 30123              		.loc 1 13978 8 view .LVU8465
 30124 000e 002B     		cmp	r3, #0
 30125 0010 33D0     		beq	.L2078
 30126 0012 0446     		mov	r4, r0
13979:Core/Src/bno055.c ****     {
13980:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13981:Core/Src/bno055.c ****     }
13982:Core/Src/bno055.c ****     else
13983:Core/Src/bno055.c ****     {
13984:Core/Src/bno055.c ****         /*condition check for page, gyro highrate interrupt mask is
13985:Core/Src/bno055.c ****          * available in the page one*/
13986:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30127              		.loc 1 13986 9 is_stmt 1 view .LVU8466
 30128              		.loc 1 13986 21 is_stmt 0 view .LVU8467
 30129 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30130              		.loc 1 13986 12 view .LVU8468
 30131 0016 012B     		cmp	r3, #1
 30132 0018 29D1     		bne	.L2081
 30133              	.LVL3765:
 30134              	.L2076:
13987:Core/Src/bno055.c ****         {
13988:Core/Src/bno055.c ****             /* Write page as one */
13989:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
ARM GAS  /tmp/ccWoU29M.s 			page 840


13990:Core/Src/bno055.c ****         }
13991:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30135              		.loc 1 13991 53 discriminator 1 view .LVU8469
 30136 001a 1B4B     		ldr	r3, .L2082
 30137 001c 1B68     		ldr	r3, [r3]
 30138 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30139              		.loc 1 13991 41 discriminator 1 view .LVU8470
 30140 0020 012B     		cmp	r3, #1
 30141 0022 2DD1     		bne	.L2079
 30142              	.L2077:
13992:Core/Src/bno055.c ****         {
13993:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30143              		.loc 1 13993 13 is_stmt 1 view .LVU8471
 30144              		.loc 1 13993 32 is_stmt 0 view .LVU8472
 30145 0024 184B     		ldr	r3, .L2082
 30146 0026 1868     		ldr	r0, [r3]
 30147 0028 0569     		ldr	r5, [r0, #16]
 30148              		.loc 1 13993 24 view .LVU8473
 30149 002a 0123     		movs	r3, #1
 30150 002c 0DF10702 		add	r2, sp, #7
 30151 0030 0F21     		movs	r1, #15
 30152 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30153 0034 A847     		blx	r5
 30154              	.LVL3766:
13994:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_INTR_MASK_REG,
13995:Core/Src/bno055.c ****                                                       &data_u8r,
13996:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13997:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 30155              		.loc 1 13997 13 is_stmt 1 view .LVU8474
 30156              		.loc 1 13997 16 is_stmt 0 view .LVU8475
 30157 0036 0546     		mov	r5, r0
 30158 0038 B0B9     		cbnz	r0, .L2075
13998:Core/Src/bno055.c ****             {
13999:Core/Src/bno055.c ****                 /* Write the value of gyro
14000:Core/Src/bno055.c ****                  * highrate interrupt mask*/
14001:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_INTR_MASK, gyro_highr
 30159              		.loc 1 14001 17 is_stmt 1 view .LVU8476
 30160              		.loc 1 14001 28 is_stmt 0 view .LVU8477
 30161 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30162 003e 23F00803 		bic	r3, r3, #8
 30163 0042 5BB2     		sxtb	r3, r3
 30164 0044 E400     		lsls	r4, r4, #3
 30165 0046 04F00804 		and	r4, r4, #8
 30166 004a 1C43     		orrs	r4, r4, r3
 30167              		.loc 1 14001 26 view .LVU8478
 30168 004c 8DF80740 		strb	r4, [sp, #7]
14002:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 30169              		.loc 1 14002 17 is_stmt 1 view .LVU8479
 30170              		.loc 1 14002 37 is_stmt 0 view .LVU8480
 30171 0050 0D4B     		ldr	r3, .L2082
 30172 0052 1868     		ldr	r0, [r3]
 30173              	.LVL3767:
 30174              		.loc 1 14002 37 view .LVU8481
 30175 0054 C468     		ldr	r4, [r0, #12]
 30176              		.loc 1 14002 29 view .LVU8482
 30177 0056 0123     		movs	r3, #1
 30178 0058 0DF10702 		add	r2, sp, #7
ARM GAS  /tmp/ccWoU29M.s 			page 841


 30179 005c 0F21     		movs	r1, #15
 30180 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30181 0060 A047     		blx	r4
 30182              	.LVL3768:
 30183              		.loc 1 14002 26 view .LVU8483
 30184 0062 55FA80F5 		uxtab	r5, r5, r0
 30185 0066 6DB2     		sxtb	r5, r5
 30186              	.LVL3769:
 30187              	.L2075:
14003:Core/Src/bno055.c ****                                                             BNO055_GYRO_HIGHRATE_INTR_MASK_REG,
14004:Core/Src/bno055.c ****                                                             &data_u8r,
14005:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14006:Core/Src/bno055.c ****             }
14007:Core/Src/bno055.c ****         }
14008:Core/Src/bno055.c ****         else
14009:Core/Src/bno055.c ****         {
14010:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14011:Core/Src/bno055.c ****         }
14012:Core/Src/bno055.c ****     }
14013:Core/Src/bno055.c **** 
14014:Core/Src/bno055.c ****     return com_rslt;
14015:Core/Src/bno055.c **** }
 30188              		.loc 1 14015 1 view .LVU8484
 30189 0068 2846     		mov	r0, r5
 30190 006a 03B0     		add	sp, sp, #12
 30191              	.LCFI827:
 30192              		.cfi_remember_state
 30193              		.cfi_def_cfa_offset 12
 30194              		@ sp needed
 30195 006c 30BD     		pop	{r4, r5, pc}
 30196              	.LVL3770:
 30197              	.L2081:
 30198              	.LCFI828:
 30199              		.cfi_restore_state
13989:Core/Src/bno055.c ****         }
 30200              		.loc 1 13989 13 is_stmt 1 view .LVU8485
13989:Core/Src/bno055.c ****         }
 30201              		.loc 1 13989 23 is_stmt 0 view .LVU8486
 30202 006e 0120     		movs	r0, #1
 30203              	.LVL3771:
13989:Core/Src/bno055.c ****         }
 30204              		.loc 1 13989 23 view .LVU8487
 30205 0070 FFF7FEFF 		bl	bno055_write_page_id
 30206              	.LVL3772:
13991:Core/Src/bno055.c ****         {
 30207              		.loc 1 13991 9 is_stmt 1 view .LVU8488
13991:Core/Src/bno055.c ****         {
 30208              		.loc 1 13991 12 is_stmt 0 view .LVU8489
 30209 0074 0028     		cmp	r0, #0
 30210 0076 D5D0     		beq	.L2077
 30211 0078 CFE7     		b	.L2076
 30212              	.LVL3773:
 30213              	.L2078:
13980:Core/Src/bno055.c ****     }
 30214              		.loc 1 13980 16 view .LVU8490
 30215 007a 6FF07E05 		mvn	r5, #126
 30216 007e F3E7     		b	.L2075
ARM GAS  /tmp/ccWoU29M.s 			page 842


 30217              	.LVL3774:
 30218              	.L2079:
14010:Core/Src/bno055.c ****         }
 30219              		.loc 1 14010 22 view .LVU8491
 30220 0080 4FF0FF35 		mov	r5, #-1
 30221 0084 F0E7     		b	.L2075
 30222              	.L2083:
 30223 0086 00BF     		.align	2
 30224              	.L2082:
 30225 0088 00000000 		.word	.LANCHOR0
 30226              		.cfi_endproc
 30227              	.LFE208:
 30229              		.section	.text.bno055_get_intr_mask_accel_high_g,"ax",%progbits
 30230              		.align	1
 30231              		.global	bno055_get_intr_mask_accel_high_g
 30232              		.syntax unified
 30233              		.thumb
 30234              		.thumb_func
 30235              		.fpu fpv4-sp-d16
 30237              	bno055_get_intr_mask_accel_high_g:
 30238              	.LVL3775:
 30239              	.LFB209:
14016:Core/Src/bno055.c **** 
14017:Core/Src/bno055.c **** /*!
14018:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg interrupt mask
14019:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 5
14020:Core/Src/bno055.c ****  *
14021:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt mask
14022:Core/Src/bno055.c ****  *         accel_high_g_u8 |   result
14023:Core/Src/bno055.c ****  *     --------------------  |------------
14024:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14025:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14026:Core/Src/bno055.c ****  *
14027:Core/Src/bno055.c ****  *  @return results of bus communication function
14028:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14029:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14030:Core/Src/bno055.c ****  *
14031:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
14032:Core/Src/bno055.c ****  *  configure the below settings by using
14033:Core/Src/bno055.c ****  *  the following APIs
14034:Core/Src/bno055.c ****  *
14035:Core/Src/bno055.c ****  *  Axis :
14036:Core/Src/bno055.c ****  *
14037:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14038:Core/Src/bno055.c ****  *
14039:Core/Src/bno055.c ****  *  Threshold :
14040:Core/Src/bno055.c ****  *
14041:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14042:Core/Src/bno055.c ****  *
14043:Core/Src/bno055.c ****  *  Duration :
14044:Core/Src/bno055.c ****  *
14045:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
14046:Core/Src/bno055.c ****  *
14047:Core/Src/bno055.c ****  */
14048:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_accel_high_g(u8 *accel_high_g_u8)
14049:Core/Src/bno055.c **** {
 30240              		.loc 1 14049 1 is_stmt 1 view -0
ARM GAS  /tmp/ccWoU29M.s 			page 843


 30241              		.cfi_startproc
 30242              		@ args = 0, pretend = 0, frame = 8
 30243              		@ frame_needed = 0, uses_anonymous_args = 0
 30244              		.loc 1 14049 1 is_stmt 0 view .LVU8493
 30245 0000 30B5     		push	{r4, r5, lr}
 30246              	.LCFI829:
 30247              		.cfi_def_cfa_offset 12
 30248              		.cfi_offset 4, -12
 30249              		.cfi_offset 5, -8
 30250              		.cfi_offset 14, -4
 30251 0002 83B0     		sub	sp, sp, #12
 30252              	.LCFI830:
 30253              		.cfi_def_cfa_offset 24
14050:Core/Src/bno055.c ****     /* Variable used to return value of
14051:Core/Src/bno055.c ****      * communication routine*/
14052:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30254              		.loc 1 14052 5 is_stmt 1 view .LVU8494
 30255              	.LVL3776:
14053:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30256              		.loc 1 14053 5 view .LVU8495
 30257              		.loc 1 14053 8 is_stmt 0 view .LVU8496
 30258 0004 0023     		movs	r3, #0
 30259 0006 8DF80730 		strb	r3, [sp, #7]
14054:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30260              		.loc 1 14054 5 is_stmt 1 view .LVU8497
 30261              	.LVL3777:
14055:Core/Src/bno055.c **** 
14056:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14057:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30262              		.loc 1 14057 5 view .LVU8498
 30263              		.loc 1 14057 18 is_stmt 0 view .LVU8499
 30264 000a 144B     		ldr	r3, .L2092
 30265 000c 1B68     		ldr	r3, [r3]
 30266              		.loc 1 14057 8 view .LVU8500
 30267 000e F3B1     		cbz	r3, .L2088
 30268 0010 0446     		mov	r4, r0
14058:Core/Src/bno055.c ****     {
14059:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14060:Core/Src/bno055.c ****     }
14061:Core/Src/bno055.c ****     else
14062:Core/Src/bno055.c ****     {
14063:Core/Src/bno055.c ****         /*condition check for page, accel highg interrupt mask is
14064:Core/Src/bno055.c ****          * available in the page one*/
14065:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30269              		.loc 1 14065 9 is_stmt 1 view .LVU8501
 30270              		.loc 1 14065 21 is_stmt 0 view .LVU8502
 30271 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30272              		.loc 1 14065 12 view .LVU8503
 30273 0014 012B     		cmp	r3, #1
 30274 0016 14D1     		bne	.L2091
 30275              	.LVL3778:
 30276              	.L2086:
14066:Core/Src/bno055.c ****         {
14067:Core/Src/bno055.c ****             /* Write page as one */
14068:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14069:Core/Src/bno055.c ****         }
14070:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
ARM GAS  /tmp/ccWoU29M.s 			page 844


 30277              		.loc 1 14070 53 discriminator 1 view .LVU8504
 30278 0018 104B     		ldr	r3, .L2092
 30279 001a 1B68     		ldr	r3, [r3]
 30280 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30281              		.loc 1 14070 41 discriminator 1 view .LVU8505
 30282 001e 012B     		cmp	r3, #1
 30283 0020 18D1     		bne	.L2089
 30284              	.L2087:
14071:Core/Src/bno055.c ****         {
14072:Core/Src/bno055.c ****             /* Read the value of accel highg interrupt mask*/
14073:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30285              		.loc 1 14073 13 is_stmt 1 view .LVU8506
 30286              		.loc 1 14073 32 is_stmt 0 view .LVU8507
 30287 0022 0E4B     		ldr	r3, .L2092
 30288 0024 1868     		ldr	r0, [r3]
 30289 0026 0569     		ldr	r5, [r0, #16]
 30290              		.loc 1 14073 24 view .LVU8508
 30291 0028 0123     		movs	r3, #1
 30292 002a 0DF10702 		add	r2, sp, #7
 30293 002e 0F21     		movs	r1, #15
 30294 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30295 0032 A847     		blx	r5
 30296              	.LVL3779:
14074:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_INTR_MASK_REG,
14075:Core/Src/bno055.c ****                                                       &data_u8r,
14076:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14077:Core/Src/bno055.c ****             *accel_high_g_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_INTR_MASK);
 30297              		.loc 1 14077 13 is_stmt 1 view .LVU8509
 30298              		.loc 1 14077 32 is_stmt 0 view .LVU8510
 30299 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30300 0038 C3F34013 		ubfx	r3, r3, #5, #1
 30301              		.loc 1 14077 30 view .LVU8511
 30302 003c 2370     		strb	r3, [r4]
 30303              	.LVL3780:
 30304              	.L2085:
14078:Core/Src/bno055.c ****         }
14079:Core/Src/bno055.c ****         else
14080:Core/Src/bno055.c ****         {
14081:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14082:Core/Src/bno055.c ****         }
14083:Core/Src/bno055.c ****     }
14084:Core/Src/bno055.c **** 
14085:Core/Src/bno055.c ****     return com_rslt;
14086:Core/Src/bno055.c **** }
 30305              		.loc 1 14086 1 view .LVU8512
 30306 003e 03B0     		add	sp, sp, #12
 30307              	.LCFI831:
 30308              		.cfi_remember_state
 30309              		.cfi_def_cfa_offset 12
 30310              		@ sp needed
 30311 0040 30BD     		pop	{r4, r5, pc}
 30312              	.LVL3781:
 30313              	.L2091:
 30314              	.LCFI832:
 30315              		.cfi_restore_state
14068:Core/Src/bno055.c ****         }
 30316              		.loc 1 14068 13 is_stmt 1 view .LVU8513
ARM GAS  /tmp/ccWoU29M.s 			page 845


14068:Core/Src/bno055.c ****         }
 30317              		.loc 1 14068 23 is_stmt 0 view .LVU8514
 30318 0042 0120     		movs	r0, #1
 30319              	.LVL3782:
14068:Core/Src/bno055.c ****         }
 30320              		.loc 1 14068 23 view .LVU8515
 30321 0044 FFF7FEFF 		bl	bno055_write_page_id
 30322              	.LVL3783:
14070:Core/Src/bno055.c ****         {
 30323              		.loc 1 14070 9 is_stmt 1 view .LVU8516
14070:Core/Src/bno055.c ****         {
 30324              		.loc 1 14070 12 is_stmt 0 view .LVU8517
 30325 0048 0028     		cmp	r0, #0
 30326 004a EAD0     		beq	.L2087
 30327 004c E4E7     		b	.L2086
 30328              	.LVL3784:
 30329              	.L2088:
14059:Core/Src/bno055.c ****     }
 30330              		.loc 1 14059 16 view .LVU8518
 30331 004e 6FF07E00 		mvn	r0, #126
 30332              	.LVL3785:
14059:Core/Src/bno055.c ****     }
 30333              		.loc 1 14059 16 view .LVU8519
 30334 0052 F4E7     		b	.L2085
 30335              	.LVL3786:
 30336              	.L2089:
14081:Core/Src/bno055.c ****         }
 30337              		.loc 1 14081 22 view .LVU8520
 30338 0054 4FF0FF30 		mov	r0, #-1
 30339 0058 F1E7     		b	.L2085
 30340              	.L2093:
 30341 005a 00BF     		.align	2
 30342              	.L2092:
 30343 005c 00000000 		.word	.LANCHOR0
 30344              		.cfi_endproc
 30345              	.LFE209:
 30347              		.section	.text.bno055_set_intr_mask_accel_high_g,"ax",%progbits
 30348              		.align	1
 30349              		.global	bno055_set_intr_mask_accel_high_g
 30350              		.syntax unified
 30351              		.thumb
 30352              		.thumb_func
 30353              		.fpu fpv4-sp-d16
 30355              	bno055_set_intr_mask_accel_high_g:
 30356              	.LVL3787:
 30357              	.LFB210:
14087:Core/Src/bno055.c **** 
14088:Core/Src/bno055.c **** /*!
14089:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg interrupt mask
14090:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 5
14091:Core/Src/bno055.c ****  *
14092:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt mask
14093:Core/Src/bno055.c ****  *         accel_high_g_u8 |   result
14094:Core/Src/bno055.c ****  *     --------------------  |------------
14095:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14096:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14097:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 846


14098:Core/Src/bno055.c ****  *  @return results of bus communication function
14099:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14100:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14101:Core/Src/bno055.c ****  *
14102:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
14103:Core/Src/bno055.c ****  *  configure the below settings by using
14104:Core/Src/bno055.c ****  *  the following APIs
14105:Core/Src/bno055.c ****  *
14106:Core/Src/bno055.c ****  *  Axis :
14107:Core/Src/bno055.c ****  *
14108:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14109:Core/Src/bno055.c ****  *
14110:Core/Src/bno055.c ****  *  Threshold :
14111:Core/Src/bno055.c ****  *
14112:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14113:Core/Src/bno055.c ****  *
14114:Core/Src/bno055.c ****  *  Duration :
14115:Core/Src/bno055.c ****  *
14116:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
14117:Core/Src/bno055.c ****  *
14118:Core/Src/bno055.c ****  */
14119:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_accel_high_g(u8 accel_high_g_u8)
14120:Core/Src/bno055.c **** {
 30358              		.loc 1 14120 1 is_stmt 1 view -0
 30359              		.cfi_startproc
 30360              		@ args = 0, pretend = 0, frame = 8
 30361              		@ frame_needed = 0, uses_anonymous_args = 0
 30362              		.loc 1 14120 1 is_stmt 0 view .LVU8522
 30363 0000 30B5     		push	{r4, r5, lr}
 30364              	.LCFI833:
 30365              		.cfi_def_cfa_offset 12
 30366              		.cfi_offset 4, -12
 30367              		.cfi_offset 5, -8
 30368              		.cfi_offset 14, -4
 30369 0002 83B0     		sub	sp, sp, #12
 30370              	.LCFI834:
 30371              		.cfi_def_cfa_offset 24
14121:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30372              		.loc 1 14121 5 is_stmt 1 view .LVU8523
 30373              	.LVL3788:
14122:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30374              		.loc 1 14122 5 view .LVU8524
 30375              		.loc 1 14122 8 is_stmt 0 view .LVU8525
 30376 0004 0023     		movs	r3, #0
 30377 0006 8DF80730 		strb	r3, [sp, #7]
14123:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30378              		.loc 1 14123 5 is_stmt 1 view .LVU8526
 30379              	.LVL3789:
14124:Core/Src/bno055.c **** 
14125:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14126:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30380              		.loc 1 14126 5 view .LVU8527
 30381              		.loc 1 14126 18 is_stmt 0 view .LVU8528
 30382 000a 1F4B     		ldr	r3, .L2102
 30383 000c 1B68     		ldr	r3, [r3]
 30384              		.loc 1 14126 8 view .LVU8529
 30385 000e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccWoU29M.s 			page 847


 30386 0010 33D0     		beq	.L2098
 30387 0012 0446     		mov	r4, r0
14127:Core/Src/bno055.c ****     {
14128:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14129:Core/Src/bno055.c ****     }
14130:Core/Src/bno055.c ****     else
14131:Core/Src/bno055.c ****     {
14132:Core/Src/bno055.c ****         /*condition check for page, accel highg interrupt mask is
14133:Core/Src/bno055.c ****          * available in the page one*/
14134:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30388              		.loc 1 14134 9 is_stmt 1 view .LVU8530
 30389              		.loc 1 14134 21 is_stmt 0 view .LVU8531
 30390 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30391              		.loc 1 14134 12 view .LVU8532
 30392 0016 012B     		cmp	r3, #1
 30393 0018 29D1     		bne	.L2101
 30394              	.LVL3790:
 30395              	.L2096:
14135:Core/Src/bno055.c ****         {
14136:Core/Src/bno055.c ****             /* Write page as one */
14137:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14138:Core/Src/bno055.c ****         }
14139:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30396              		.loc 1 14139 53 discriminator 1 view .LVU8533
 30397 001a 1B4B     		ldr	r3, .L2102
 30398 001c 1B68     		ldr	r3, [r3]
 30399 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30400              		.loc 1 14139 41 discriminator 1 view .LVU8534
 30401 0020 012B     		cmp	r3, #1
 30402 0022 2DD1     		bne	.L2099
 30403              	.L2097:
14140:Core/Src/bno055.c ****         {
14141:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30404              		.loc 1 14141 13 is_stmt 1 view .LVU8535
 30405              		.loc 1 14141 32 is_stmt 0 view .LVU8536
 30406 0024 184B     		ldr	r3, .L2102
 30407 0026 1868     		ldr	r0, [r3]
 30408 0028 0569     		ldr	r5, [r0, #16]
 30409              		.loc 1 14141 24 view .LVU8537
 30410 002a 0123     		movs	r3, #1
 30411 002c 0DF10702 		add	r2, sp, #7
 30412 0030 0F21     		movs	r1, #15
 30413 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30414 0034 A847     		blx	r5
 30415              	.LVL3791:
14142:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_INTR_MASK_REG,
14143:Core/Src/bno055.c ****                                                       &data_u8r,
14144:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14145:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 30416              		.loc 1 14145 13 is_stmt 1 view .LVU8538
 30417              		.loc 1 14145 16 is_stmt 0 view .LVU8539
 30418 0036 0546     		mov	r5, r0
 30419 0038 B0B9     		cbnz	r0, .L2095
14146:Core/Src/bno055.c ****             {
14147:Core/Src/bno055.c ****                 /* Write the value of accel
14148:Core/Src/bno055.c ****                  * highg interrupt mask*/
14149:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_INTR_MASK, accel_high_
ARM GAS  /tmp/ccWoU29M.s 			page 848


 30420              		.loc 1 14149 17 is_stmt 1 view .LVU8540
 30421              		.loc 1 14149 28 is_stmt 0 view .LVU8541
 30422 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30423 003e 23F02003 		bic	r3, r3, #32
 30424 0042 5BB2     		sxtb	r3, r3
 30425 0044 6401     		lsls	r4, r4, #5
 30426 0046 04F02004 		and	r4, r4, #32
 30427 004a 1C43     		orrs	r4, r4, r3
 30428              		.loc 1 14149 26 view .LVU8542
 30429 004c 8DF80740 		strb	r4, [sp, #7]
14150:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 30430              		.loc 1 14150 17 is_stmt 1 view .LVU8543
 30431              		.loc 1 14150 37 is_stmt 0 view .LVU8544
 30432 0050 0D4B     		ldr	r3, .L2102
 30433 0052 1868     		ldr	r0, [r3]
 30434              	.LVL3792:
 30435              		.loc 1 14150 37 view .LVU8545
 30436 0054 C468     		ldr	r4, [r0, #12]
 30437              		.loc 1 14150 29 view .LVU8546
 30438 0056 0123     		movs	r3, #1
 30439 0058 0DF10702 		add	r2, sp, #7
 30440 005c 0F21     		movs	r1, #15
 30441 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30442 0060 A047     		blx	r4
 30443              	.LVL3793:
 30444              		.loc 1 14150 26 view .LVU8547
 30445 0062 55FA80F5 		uxtab	r5, r5, r0
 30446 0066 6DB2     		sxtb	r5, r5
 30447              	.LVL3794:
 30448              	.L2095:
14151:Core/Src/bno055.c ****                                                             BNO055_ACCEL_HIGH_G_INTR_MASK_REG,
14152:Core/Src/bno055.c ****                                                             &data_u8r,
14153:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14154:Core/Src/bno055.c ****             }
14155:Core/Src/bno055.c ****         }
14156:Core/Src/bno055.c ****         else
14157:Core/Src/bno055.c ****         {
14158:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14159:Core/Src/bno055.c ****         }
14160:Core/Src/bno055.c ****     }
14161:Core/Src/bno055.c **** 
14162:Core/Src/bno055.c ****     return com_rslt;
14163:Core/Src/bno055.c **** }
 30449              		.loc 1 14163 1 view .LVU8548
 30450 0068 2846     		mov	r0, r5
 30451 006a 03B0     		add	sp, sp, #12
 30452              	.LCFI835:
 30453              		.cfi_remember_state
 30454              		.cfi_def_cfa_offset 12
 30455              		@ sp needed
 30456 006c 30BD     		pop	{r4, r5, pc}
 30457              	.LVL3795:
 30458              	.L2101:
 30459              	.LCFI836:
 30460              		.cfi_restore_state
14137:Core/Src/bno055.c ****         }
 30461              		.loc 1 14137 13 is_stmt 1 view .LVU8549
ARM GAS  /tmp/ccWoU29M.s 			page 849


14137:Core/Src/bno055.c ****         }
 30462              		.loc 1 14137 23 is_stmt 0 view .LVU8550
 30463 006e 0120     		movs	r0, #1
 30464              	.LVL3796:
14137:Core/Src/bno055.c ****         }
 30465              		.loc 1 14137 23 view .LVU8551
 30466 0070 FFF7FEFF 		bl	bno055_write_page_id
 30467              	.LVL3797:
14139:Core/Src/bno055.c ****         {
 30468              		.loc 1 14139 9 is_stmt 1 view .LVU8552
14139:Core/Src/bno055.c ****         {
 30469              		.loc 1 14139 12 is_stmt 0 view .LVU8553
 30470 0074 0028     		cmp	r0, #0
 30471 0076 D5D0     		beq	.L2097
 30472 0078 CFE7     		b	.L2096
 30473              	.LVL3798:
 30474              	.L2098:
14128:Core/Src/bno055.c ****     }
 30475              		.loc 1 14128 16 view .LVU8554
 30476 007a 6FF07E05 		mvn	r5, #126
 30477 007e F3E7     		b	.L2095
 30478              	.LVL3799:
 30479              	.L2099:
14158:Core/Src/bno055.c ****         }
 30480              		.loc 1 14158 22 view .LVU8555
 30481 0080 4FF0FF35 		mov	r5, #-1
 30482 0084 F0E7     		b	.L2095
 30483              	.L2103:
 30484 0086 00BF     		.align	2
 30485              	.L2102:
 30486 0088 00000000 		.word	.LANCHOR0
 30487              		.cfi_endproc
 30488              	.LFE210:
 30490              		.section	.text.bno055_get_intr_mask_accel_any_motion,"ax",%progbits
 30491              		.align	1
 30492              		.global	bno055_get_intr_mask_accel_any_motion
 30493              		.syntax unified
 30494              		.thumb
 30495              		.thumb_func
 30496              		.fpu fpv4-sp-d16
 30498              	bno055_get_intr_mask_accel_any_motion:
 30499              	.LVL3800:
 30500              	.LFB211:
14164:Core/Src/bno055.c **** 
14165:Core/Src/bno055.c **** /*!
14166:Core/Src/bno055.c ****  *  @brief This API used to read the accel anymotion interrupt mask
14167:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 6
14168:Core/Src/bno055.c ****  *
14169:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt mask
14170:Core/Src/bno055.c ****  *     accel_any_motion_u8 | result
14171:Core/Src/bno055.c ****  *     --------------------  |------------
14172:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14173:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14174:Core/Src/bno055.c ****  *
14175:Core/Src/bno055.c ****  *  @return results of bus communication function
14176:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14177:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
ARM GAS  /tmp/ccWoU29M.s 			page 850


14178:Core/Src/bno055.c ****  *
14179:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
14180:Core/Src/bno055.c ****  *  configure the below settings by using
14181:Core/Src/bno055.c ****  *  the following APIs
14182:Core/Src/bno055.c ****  *
14183:Core/Src/bno055.c ****  *  Axis :
14184:Core/Src/bno055.c ****  *
14185:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14186:Core/Src/bno055.c ****  *
14187:Core/Src/bno055.c ****  *  Threshold :
14188:Core/Src/bno055.c ****  *
14189:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14190:Core/Src/bno055.c ****  *
14191:Core/Src/bno055.c ****  *  Duration :
14192:Core/Src/bno055.c ****  *
14193:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
14194:Core/Src/bno055.c ****  *
14195:Core/Src/bno055.c ****  */
14196:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_accel_any_motion(u8 *accel_any_motion_u8)
14197:Core/Src/bno055.c **** {
 30501              		.loc 1 14197 1 is_stmt 1 view -0
 30502              		.cfi_startproc
 30503              		@ args = 0, pretend = 0, frame = 8
 30504              		@ frame_needed = 0, uses_anonymous_args = 0
 30505              		.loc 1 14197 1 is_stmt 0 view .LVU8557
 30506 0000 30B5     		push	{r4, r5, lr}
 30507              	.LCFI837:
 30508              		.cfi_def_cfa_offset 12
 30509              		.cfi_offset 4, -12
 30510              		.cfi_offset 5, -8
 30511              		.cfi_offset 14, -4
 30512 0002 83B0     		sub	sp, sp, #12
 30513              	.LCFI838:
 30514              		.cfi_def_cfa_offset 24
14198:Core/Src/bno055.c ****     /* Variable used to return value of
14199:Core/Src/bno055.c ****      * communication routine*/
14200:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30515              		.loc 1 14200 5 is_stmt 1 view .LVU8558
 30516              	.LVL3801:
14201:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30517              		.loc 1 14201 5 view .LVU8559
 30518              		.loc 1 14201 8 is_stmt 0 view .LVU8560
 30519 0004 0023     		movs	r3, #0
 30520 0006 8DF80730 		strb	r3, [sp, #7]
14202:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30521              		.loc 1 14202 5 is_stmt 1 view .LVU8561
 30522              	.LVL3802:
14203:Core/Src/bno055.c **** 
14204:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14205:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30523              		.loc 1 14205 5 view .LVU8562
 30524              		.loc 1 14205 18 is_stmt 0 view .LVU8563
 30525 000a 144B     		ldr	r3, .L2112
 30526 000c 1B68     		ldr	r3, [r3]
 30527              		.loc 1 14205 8 view .LVU8564
 30528 000e F3B1     		cbz	r3, .L2108
 30529 0010 0446     		mov	r4, r0
ARM GAS  /tmp/ccWoU29M.s 			page 851


14206:Core/Src/bno055.c ****     {
14207:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14208:Core/Src/bno055.c ****     }
14209:Core/Src/bno055.c ****     else
14210:Core/Src/bno055.c ****     {
14211:Core/Src/bno055.c ****         /*condition check for page, accel anymotion interrupt mask is
14212:Core/Src/bno055.c ****          * available in the page one*/
14213:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30530              		.loc 1 14213 9 is_stmt 1 view .LVU8565
 30531              		.loc 1 14213 21 is_stmt 0 view .LVU8566
 30532 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30533              		.loc 1 14213 12 view .LVU8567
 30534 0014 012B     		cmp	r3, #1
 30535 0016 14D1     		bne	.L2111
 30536              	.LVL3803:
 30537              	.L2106:
14214:Core/Src/bno055.c ****         {
14215:Core/Src/bno055.c ****             /* Write page as one */
14216:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14217:Core/Src/bno055.c ****         }
14218:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30538              		.loc 1 14218 53 discriminator 1 view .LVU8568
 30539 0018 104B     		ldr	r3, .L2112
 30540 001a 1B68     		ldr	r3, [r3]
 30541 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30542              		.loc 1 14218 41 discriminator 1 view .LVU8569
 30543 001e 012B     		cmp	r3, #1
 30544 0020 18D1     		bne	.L2109
 30545              	.L2107:
14219:Core/Src/bno055.c ****         {
14220:Core/Src/bno055.c ****             /* The value of accel anymotion interrupt mask*/
14221:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30546              		.loc 1 14221 13 is_stmt 1 view .LVU8570
 30547              		.loc 1 14221 32 is_stmt 0 view .LVU8571
 30548 0022 0E4B     		ldr	r3, .L2112
 30549 0024 1868     		ldr	r0, [r3]
 30550 0026 0569     		ldr	r5, [r0, #16]
 30551              		.loc 1 14221 24 view .LVU8572
 30552 0028 0123     		movs	r3, #1
 30553 002a 0DF10702 		add	r2, sp, #7
 30554 002e 0F21     		movs	r1, #15
 30555 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30556 0032 A847     		blx	r5
 30557              	.LVL3804:
14222:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_INTR_MASK_REG,
14223:Core/Src/bno055.c ****                                                       &data_u8r,
14224:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14225:Core/Src/bno055.c ****             *accel_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_INTR_MASK)
 30558              		.loc 1 14225 13 is_stmt 1 view .LVU8573
 30559              		.loc 1 14225 36 is_stmt 0 view .LVU8574
 30560 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30561 0038 C3F38013 		ubfx	r3, r3, #6, #1
 30562              		.loc 1 14225 34 view .LVU8575
 30563 003c 2370     		strb	r3, [r4]
 30564              	.LVL3805:
 30565              	.L2105:
14226:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 852


14227:Core/Src/bno055.c ****         else
14228:Core/Src/bno055.c ****         {
14229:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14230:Core/Src/bno055.c ****         }
14231:Core/Src/bno055.c ****     }
14232:Core/Src/bno055.c **** 
14233:Core/Src/bno055.c ****     return com_rslt;
14234:Core/Src/bno055.c **** }
 30566              		.loc 1 14234 1 view .LVU8576
 30567 003e 03B0     		add	sp, sp, #12
 30568              	.LCFI839:
 30569              		.cfi_remember_state
 30570              		.cfi_def_cfa_offset 12
 30571              		@ sp needed
 30572 0040 30BD     		pop	{r4, r5, pc}
 30573              	.LVL3806:
 30574              	.L2111:
 30575              	.LCFI840:
 30576              		.cfi_restore_state
14216:Core/Src/bno055.c ****         }
 30577              		.loc 1 14216 13 is_stmt 1 view .LVU8577
14216:Core/Src/bno055.c ****         }
 30578              		.loc 1 14216 23 is_stmt 0 view .LVU8578
 30579 0042 0120     		movs	r0, #1
 30580              	.LVL3807:
14216:Core/Src/bno055.c ****         }
 30581              		.loc 1 14216 23 view .LVU8579
 30582 0044 FFF7FEFF 		bl	bno055_write_page_id
 30583              	.LVL3808:
14218:Core/Src/bno055.c ****         {
 30584              		.loc 1 14218 9 is_stmt 1 view .LVU8580
14218:Core/Src/bno055.c ****         {
 30585              		.loc 1 14218 12 is_stmt 0 view .LVU8581
 30586 0048 0028     		cmp	r0, #0
 30587 004a EAD0     		beq	.L2107
 30588 004c E4E7     		b	.L2106
 30589              	.LVL3809:
 30590              	.L2108:
14207:Core/Src/bno055.c ****     }
 30591              		.loc 1 14207 16 view .LVU8582
 30592 004e 6FF07E00 		mvn	r0, #126
 30593              	.LVL3810:
14207:Core/Src/bno055.c ****     }
 30594              		.loc 1 14207 16 view .LVU8583
 30595 0052 F4E7     		b	.L2105
 30596              	.LVL3811:
 30597              	.L2109:
14229:Core/Src/bno055.c ****         }
 30598              		.loc 1 14229 22 view .LVU8584
 30599 0054 4FF0FF30 		mov	r0, #-1
 30600 0058 F1E7     		b	.L2105
 30601              	.L2113:
 30602 005a 00BF     		.align	2
 30603              	.L2112:
 30604 005c 00000000 		.word	.LANCHOR0
 30605              		.cfi_endproc
 30606              	.LFE211:
ARM GAS  /tmp/ccWoU29M.s 			page 853


 30608              		.section	.text.bno055_set_intr_mask_accel_any_motion,"ax",%progbits
 30609              		.align	1
 30610              		.global	bno055_set_intr_mask_accel_any_motion
 30611              		.syntax unified
 30612              		.thumb
 30613              		.thumb_func
 30614              		.fpu fpv4-sp-d16
 30616              	bno055_set_intr_mask_accel_any_motion:
 30617              	.LVL3812:
 30618              	.LFB212:
14235:Core/Src/bno055.c **** 
14236:Core/Src/bno055.c **** /*!
14237:Core/Src/bno055.c ****  *  @brief This API used to write the accel anymotion interrupt mask
14238:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 6
14239:Core/Src/bno055.c ****  *
14240:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt mask
14241:Core/Src/bno055.c ****  *     accel_any_motion_u8 | result
14242:Core/Src/bno055.c ****  *     --------------------  |------------
14243:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14244:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14245:Core/Src/bno055.c ****  *
14246:Core/Src/bno055.c ****  *  @return results of bus communication function
14247:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14248:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14249:Core/Src/bno055.c ****  *
14250:Core/Src/bno055.c ****  *  @note While enabling the accel anymotion interrupt
14251:Core/Src/bno055.c ****  *  configure the following settings
14252:Core/Src/bno055.c ****  *
14253:Core/Src/bno055.c ****  *  Axis:
14254:Core/Src/bno055.c ****  *
14255:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
14256:Core/Src/bno055.c ****  *
14257:Core/Src/bno055.c ****  *  Duration:
14258:Core/Src/bno055.c ****  *
14259:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_durn()
14260:Core/Src/bno055.c ****  *
14261:Core/Src/bno055.c ****  * Threshold:
14262:Core/Src/bno055.c ****  *
14263:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_thres()
14264:Core/Src/bno055.c ****  *
14265:Core/Src/bno055.c ****  */
14266:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_accel_any_motion(u8 accel_any_motion_u8)
14267:Core/Src/bno055.c **** {
 30619              		.loc 1 14267 1 is_stmt 1 view -0
 30620              		.cfi_startproc
 30621              		@ args = 0, pretend = 0, frame = 8
 30622              		@ frame_needed = 0, uses_anonymous_args = 0
 30623              		.loc 1 14267 1 is_stmt 0 view .LVU8586
 30624 0000 30B5     		push	{r4, r5, lr}
 30625              	.LCFI841:
 30626              		.cfi_def_cfa_offset 12
 30627              		.cfi_offset 4, -12
 30628              		.cfi_offset 5, -8
 30629              		.cfi_offset 14, -4
 30630 0002 83B0     		sub	sp, sp, #12
 30631              	.LCFI842:
 30632              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccWoU29M.s 			page 854


14268:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30633              		.loc 1 14268 5 is_stmt 1 view .LVU8587
 30634              	.LVL3813:
14269:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30635              		.loc 1 14269 5 view .LVU8588
 30636              		.loc 1 14269 8 is_stmt 0 view .LVU8589
 30637 0004 0023     		movs	r3, #0
 30638 0006 8DF80730 		strb	r3, [sp, #7]
14270:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30639              		.loc 1 14270 5 is_stmt 1 view .LVU8590
 30640              	.LVL3814:
14271:Core/Src/bno055.c **** 
14272:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14273:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30641              		.loc 1 14273 5 view .LVU8591
 30642              		.loc 1 14273 18 is_stmt 0 view .LVU8592
 30643 000a 1F4B     		ldr	r3, .L2122
 30644 000c 1B68     		ldr	r3, [r3]
 30645              		.loc 1 14273 8 view .LVU8593
 30646 000e 002B     		cmp	r3, #0
 30647 0010 33D0     		beq	.L2118
 30648 0012 0446     		mov	r4, r0
14274:Core/Src/bno055.c ****     {
14275:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14276:Core/Src/bno055.c ****     }
14277:Core/Src/bno055.c ****     else
14278:Core/Src/bno055.c ****     {
14279:Core/Src/bno055.c ****         /*condition check for page, accel anymotion interrupt mask is
14280:Core/Src/bno055.c ****          * available in the page one*/
14281:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30649              		.loc 1 14281 9 is_stmt 1 view .LVU8594
 30650              		.loc 1 14281 21 is_stmt 0 view .LVU8595
 30651 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30652              		.loc 1 14281 12 view .LVU8596
 30653 0016 012B     		cmp	r3, #1
 30654 0018 29D1     		bne	.L2121
 30655              	.LVL3815:
 30656              	.L2116:
14282:Core/Src/bno055.c ****         {
14283:Core/Src/bno055.c ****             /* Write page as one */
14284:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14285:Core/Src/bno055.c ****         }
14286:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30657              		.loc 1 14286 53 discriminator 1 view .LVU8597
 30658 001a 1B4B     		ldr	r3, .L2122
 30659 001c 1B68     		ldr	r3, [r3]
 30660 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30661              		.loc 1 14286 41 discriminator 1 view .LVU8598
 30662 0020 012B     		cmp	r3, #1
 30663 0022 2DD1     		bne	.L2119
 30664              	.L2117:
14287:Core/Src/bno055.c ****         {
14288:Core/Src/bno055.c ****             /* Write the value of accel anymotion interrupt mask*/
14289:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30665              		.loc 1 14289 13 is_stmt 1 view .LVU8599
 30666              		.loc 1 14289 32 is_stmt 0 view .LVU8600
 30667 0024 184B     		ldr	r3, .L2122
ARM GAS  /tmp/ccWoU29M.s 			page 855


 30668 0026 1868     		ldr	r0, [r3]
 30669 0028 0569     		ldr	r5, [r0, #16]
 30670              		.loc 1 14289 24 view .LVU8601
 30671 002a 0123     		movs	r3, #1
 30672 002c 0DF10702 		add	r2, sp, #7
 30673 0030 0F21     		movs	r1, #15
 30674 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30675 0034 A847     		blx	r5
 30676              	.LVL3816:
14290:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_INTR_MASK_REG,
14291:Core/Src/bno055.c ****                                                       &data_u8r,
14292:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14293:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 30677              		.loc 1 14293 13 is_stmt 1 view .LVU8602
 30678              		.loc 1 14293 16 is_stmt 0 view .LVU8603
 30679 0036 0546     		mov	r5, r0
 30680 0038 B0B9     		cbnz	r0, .L2115
14294:Core/Src/bno055.c ****             {
14295:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_INTR_MASK, accel_a
 30681              		.loc 1 14295 17 is_stmt 1 view .LVU8604
 30682              		.loc 1 14295 28 is_stmt 0 view .LVU8605
 30683 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30684 003e 23F04003 		bic	r3, r3, #64
 30685 0042 5BB2     		sxtb	r3, r3
 30686 0044 A401     		lsls	r4, r4, #6
 30687 0046 04F04004 		and	r4, r4, #64
 30688 004a 1C43     		orrs	r4, r4, r3
 30689              		.loc 1 14295 26 view .LVU8606
 30690 004c 8DF80740 		strb	r4, [sp, #7]
14296:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 30691              		.loc 1 14296 17 is_stmt 1 view .LVU8607
 30692              		.loc 1 14296 37 is_stmt 0 view .LVU8608
 30693 0050 0D4B     		ldr	r3, .L2122
 30694 0052 1868     		ldr	r0, [r3]
 30695              	.LVL3817:
 30696              		.loc 1 14296 37 view .LVU8609
 30697 0054 C468     		ldr	r4, [r0, #12]
 30698              		.loc 1 14296 29 view .LVU8610
 30699 0056 0123     		movs	r3, #1
 30700 0058 0DF10702 		add	r2, sp, #7
 30701 005c 0F21     		movs	r1, #15
 30702 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30703 0060 A047     		blx	r4
 30704              	.LVL3818:
 30705              		.loc 1 14296 26 view .LVU8611
 30706 0062 55FA80F5 		uxtab	r5, r5, r0
 30707 0066 6DB2     		sxtb	r5, r5
 30708              	.LVL3819:
 30709              	.L2115:
14297:Core/Src/bno055.c ****                                                             BNO055_ACCEL_ANY_MOTION_INTR_MASK_REG,
14298:Core/Src/bno055.c ****                                                             &data_u8r,
14299:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14300:Core/Src/bno055.c ****             }
14301:Core/Src/bno055.c ****         }
14302:Core/Src/bno055.c ****         else
14303:Core/Src/bno055.c ****         {
14304:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 856


14305:Core/Src/bno055.c ****         }
14306:Core/Src/bno055.c ****     }
14307:Core/Src/bno055.c **** 
14308:Core/Src/bno055.c ****     return com_rslt;
14309:Core/Src/bno055.c **** }
 30710              		.loc 1 14309 1 view .LVU8612
 30711 0068 2846     		mov	r0, r5
 30712 006a 03B0     		add	sp, sp, #12
 30713              	.LCFI843:
 30714              		.cfi_remember_state
 30715              		.cfi_def_cfa_offset 12
 30716              		@ sp needed
 30717 006c 30BD     		pop	{r4, r5, pc}
 30718              	.LVL3820:
 30719              	.L2121:
 30720              	.LCFI844:
 30721              		.cfi_restore_state
14284:Core/Src/bno055.c ****         }
 30722              		.loc 1 14284 13 is_stmt 1 view .LVU8613
14284:Core/Src/bno055.c ****         }
 30723              		.loc 1 14284 23 is_stmt 0 view .LVU8614
 30724 006e 0120     		movs	r0, #1
 30725              	.LVL3821:
14284:Core/Src/bno055.c ****         }
 30726              		.loc 1 14284 23 view .LVU8615
 30727 0070 FFF7FEFF 		bl	bno055_write_page_id
 30728              	.LVL3822:
14286:Core/Src/bno055.c ****         {
 30729              		.loc 1 14286 9 is_stmt 1 view .LVU8616
14286:Core/Src/bno055.c ****         {
 30730              		.loc 1 14286 12 is_stmt 0 view .LVU8617
 30731 0074 0028     		cmp	r0, #0
 30732 0076 D5D0     		beq	.L2117
 30733 0078 CFE7     		b	.L2116
 30734              	.LVL3823:
 30735              	.L2118:
14275:Core/Src/bno055.c ****     }
 30736              		.loc 1 14275 16 view .LVU8618
 30737 007a 6FF07E05 		mvn	r5, #126
 30738 007e F3E7     		b	.L2115
 30739              	.LVL3824:
 30740              	.L2119:
14304:Core/Src/bno055.c ****         }
 30741              		.loc 1 14304 22 view .LVU8619
 30742 0080 4FF0FF35 		mov	r5, #-1
 30743 0084 F0E7     		b	.L2115
 30744              	.L2123:
 30745 0086 00BF     		.align	2
 30746              	.L2122:
 30747 0088 00000000 		.word	.LANCHOR0
 30748              		.cfi_endproc
 30749              	.LFE212:
 30751              		.section	.text.bno055_get_intr_mask_accel_no_motion,"ax",%progbits
 30752              		.align	1
 30753              		.global	bno055_get_intr_mask_accel_no_motion
 30754              		.syntax unified
 30755              		.thumb
ARM GAS  /tmp/ccWoU29M.s 			page 857


 30756              		.thumb_func
 30757              		.fpu fpv4-sp-d16
 30759              	bno055_get_intr_mask_accel_no_motion:
 30760              	.LVL3825:
 30761              	.LFB213:
14310:Core/Src/bno055.c **** 
14311:Core/Src/bno055.c **** /*!
14312:Core/Src/bno055.c ****  *  @brief This API used to read the accel nomotion interrupt mask
14313:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 7
14314:Core/Src/bno055.c ****  *
14315:Core/Src/bno055.c ****  *  @param accel_nomotion_u8 : The value of accel nomotion interrupt mask
14316:Core/Src/bno055.c ****  *     accel_nomotion_u8   | result
14317:Core/Src/bno055.c ****  *     --------------------  |------------
14318:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14319:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14320:Core/Src/bno055.c ****  *
14321:Core/Src/bno055.c ****  *  @return results of bus communication function
14322:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14323:Core/Src/bno055.c ****  *
14324:Core/Src/bno055.c ****  *  @note While enabling the accel anymotion interrupt
14325:Core/Src/bno055.c ****  *  configure the following settings
14326:Core/Src/bno055.c ****  *
14327:Core/Src/bno055.c ****  *  Axis:
14328:Core/Src/bno055.c ****  *
14329:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
14330:Core/Src/bno055.c ****  *
14331:Core/Src/bno055.c ****  *  Duration:
14332:Core/Src/bno055.c ****  *
14333:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_durn()
14334:Core/Src/bno055.c ****  *
14335:Core/Src/bno055.c ****  * Threshold:
14336:Core/Src/bno055.c ****  *
14337:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_thres())
14338:Core/Src/bno055.c ****  *
14339:Core/Src/bno055.c ****  */
14340:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_accel_no_motion(u8 *accel_nomotion_u8)
14341:Core/Src/bno055.c **** {
 30762              		.loc 1 14341 1 is_stmt 1 view -0
 30763              		.cfi_startproc
 30764              		@ args = 0, pretend = 0, frame = 8
 30765              		@ frame_needed = 0, uses_anonymous_args = 0
 30766              		.loc 1 14341 1 is_stmt 0 view .LVU8621
 30767 0000 30B5     		push	{r4, r5, lr}
 30768              	.LCFI845:
 30769              		.cfi_def_cfa_offset 12
 30770              		.cfi_offset 4, -12
 30771              		.cfi_offset 5, -8
 30772              		.cfi_offset 14, -4
 30773 0002 83B0     		sub	sp, sp, #12
 30774              	.LCFI846:
 30775              		.cfi_def_cfa_offset 24
14342:Core/Src/bno055.c ****     /* Variable used to return value of
14343:Core/Src/bno055.c ****      * communication routine*/
14344:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30776              		.loc 1 14344 5 is_stmt 1 view .LVU8622
 30777              	.LVL3826:
14345:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccWoU29M.s 			page 858


 30778              		.loc 1 14345 5 view .LVU8623
 30779              		.loc 1 14345 8 is_stmt 0 view .LVU8624
 30780 0004 0023     		movs	r3, #0
 30781 0006 8DF80730 		strb	r3, [sp, #7]
14346:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30782              		.loc 1 14346 5 is_stmt 1 view .LVU8625
 30783              	.LVL3827:
14347:Core/Src/bno055.c **** 
14348:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14349:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30784              		.loc 1 14349 5 view .LVU8626
 30785              		.loc 1 14349 18 is_stmt 0 view .LVU8627
 30786 000a 134B     		ldr	r3, .L2132
 30787 000c 1B68     		ldr	r3, [r3]
 30788              		.loc 1 14349 8 view .LVU8628
 30789 000e EBB1     		cbz	r3, .L2128
 30790 0010 0446     		mov	r4, r0
14350:Core/Src/bno055.c ****     {
14351:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14352:Core/Src/bno055.c ****     }
14353:Core/Src/bno055.c ****     else
14354:Core/Src/bno055.c ****     {
14355:Core/Src/bno055.c ****         /*condition check for page, accel nomotion interrupt mask is
14356:Core/Src/bno055.c ****          * available in the page one*/
14357:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30791              		.loc 1 14357 9 is_stmt 1 view .LVU8629
 30792              		.loc 1 14357 21 is_stmt 0 view .LVU8630
 30793 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30794              		.loc 1 14357 12 view .LVU8631
 30795 0014 012B     		cmp	r3, #1
 30796 0016 13D1     		bne	.L2131
 30797              	.LVL3828:
 30798              	.L2126:
14358:Core/Src/bno055.c ****         {
14359:Core/Src/bno055.c ****             /* Write page as one */
14360:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14361:Core/Src/bno055.c ****         }
14362:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30799              		.loc 1 14362 53 discriminator 1 view .LVU8632
 30800 0018 0F4B     		ldr	r3, .L2132
 30801 001a 1B68     		ldr	r3, [r3]
 30802 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30803              		.loc 1 14362 41 discriminator 1 view .LVU8633
 30804 001e 012B     		cmp	r3, #1
 30805 0020 17D1     		bne	.L2129
 30806              	.L2127:
14363:Core/Src/bno055.c ****         {
14364:Core/Src/bno055.c ****             /* Read the value of accel nomotion interrupt mask*/
14365:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30807              		.loc 1 14365 13 is_stmt 1 view .LVU8634
 30808              		.loc 1 14365 32 is_stmt 0 view .LVU8635
 30809 0022 0D4B     		ldr	r3, .L2132
 30810 0024 1868     		ldr	r0, [r3]
 30811 0026 0569     		ldr	r5, [r0, #16]
 30812              		.loc 1 14365 24 view .LVU8636
 30813 0028 0123     		movs	r3, #1
 30814 002a 0DF10702 		add	r2, sp, #7
ARM GAS  /tmp/ccWoU29M.s 			page 859


 30815 002e 0F21     		movs	r1, #15
 30816 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30817 0032 A847     		blx	r5
 30818              	.LVL3829:
14366:Core/Src/bno055.c ****                                                       BNO055_ACCEL_NO_MOTION_INTR_MASK_REG,
14367:Core/Src/bno055.c ****                                                       &data_u8r,
14368:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14369:Core/Src/bno055.c ****             *accel_nomotion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_NO_MOTION_INTR_MASK);
 30819              		.loc 1 14369 13 is_stmt 1 view .LVU8637
 30820              		.loc 1 14369 34 is_stmt 0 view .LVU8638
 30821 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30822 0038 DB09     		lsrs	r3, r3, #7
 30823              		.loc 1 14369 32 view .LVU8639
 30824 003a 2370     		strb	r3, [r4]
 30825              	.LVL3830:
 30826              	.L2125:
14370:Core/Src/bno055.c ****         }
14371:Core/Src/bno055.c ****         else
14372:Core/Src/bno055.c ****         {
14373:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14374:Core/Src/bno055.c ****         }
14375:Core/Src/bno055.c ****     }
14376:Core/Src/bno055.c **** 
14377:Core/Src/bno055.c ****     return com_rslt;
14378:Core/Src/bno055.c **** }
 30827              		.loc 1 14378 1 view .LVU8640
 30828 003c 03B0     		add	sp, sp, #12
 30829              	.LCFI847:
 30830              		.cfi_remember_state
 30831              		.cfi_def_cfa_offset 12
 30832              		@ sp needed
 30833 003e 30BD     		pop	{r4, r5, pc}
 30834              	.LVL3831:
 30835              	.L2131:
 30836              	.LCFI848:
 30837              		.cfi_restore_state
14360:Core/Src/bno055.c ****         }
 30838              		.loc 1 14360 13 is_stmt 1 view .LVU8641
14360:Core/Src/bno055.c ****         }
 30839              		.loc 1 14360 23 is_stmt 0 view .LVU8642
 30840 0040 0120     		movs	r0, #1
 30841              	.LVL3832:
14360:Core/Src/bno055.c ****         }
 30842              		.loc 1 14360 23 view .LVU8643
 30843 0042 FFF7FEFF 		bl	bno055_write_page_id
 30844              	.LVL3833:
14362:Core/Src/bno055.c ****         {
 30845              		.loc 1 14362 9 is_stmt 1 view .LVU8644
14362:Core/Src/bno055.c ****         {
 30846              		.loc 1 14362 12 is_stmt 0 view .LVU8645
 30847 0046 0028     		cmp	r0, #0
 30848 0048 EBD0     		beq	.L2127
 30849 004a E5E7     		b	.L2126
 30850              	.LVL3834:
 30851              	.L2128:
14351:Core/Src/bno055.c ****     }
 30852              		.loc 1 14351 16 view .LVU8646
ARM GAS  /tmp/ccWoU29M.s 			page 860


 30853 004c 6FF07E00 		mvn	r0, #126
 30854              	.LVL3835:
14351:Core/Src/bno055.c ****     }
 30855              		.loc 1 14351 16 view .LVU8647
 30856 0050 F4E7     		b	.L2125
 30857              	.LVL3836:
 30858              	.L2129:
14373:Core/Src/bno055.c ****         }
 30859              		.loc 1 14373 22 view .LVU8648
 30860 0052 4FF0FF30 		mov	r0, #-1
 30861 0056 F1E7     		b	.L2125
 30862              	.L2133:
 30863              		.align	2
 30864              	.L2132:
 30865 0058 00000000 		.word	.LANCHOR0
 30866              		.cfi_endproc
 30867              	.LFE213:
 30869              		.section	.text.bno055_set_intr_mask_accel_no_motion,"ax",%progbits
 30870              		.align	1
 30871              		.global	bno055_set_intr_mask_accel_no_motion
 30872              		.syntax unified
 30873              		.thumb
 30874              		.thumb_func
 30875              		.fpu fpv4-sp-d16
 30877              	bno055_set_intr_mask_accel_no_motion:
 30878              	.LVL3837:
 30879              	.LFB214:
14379:Core/Src/bno055.c **** 
14380:Core/Src/bno055.c **** /*!
14381:Core/Src/bno055.c ****  *  @brief This API used to write the accel nomotion interrupt mask
14382:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 7
14383:Core/Src/bno055.c ****  *
14384:Core/Src/bno055.c ****  *  @param accel_nomotion_u8 : The value of accel nomotion interrupt mask
14385:Core/Src/bno055.c ****  *     accel_nomotion_u8   | result
14386:Core/Src/bno055.c ****  *     --------------------  |------------
14387:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14388:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14389:Core/Src/bno055.c ****  *
14390:Core/Src/bno055.c ****  *  @return results of bus communication function
14391:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14392:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14393:Core/Src/bno055.c ****  *
14394:Core/Src/bno055.c ****  *  @note While enabling the accel nomotion interrupt
14395:Core/Src/bno055.c ****  *  configure the following settings
14396:Core/Src/bno055.c ****  *
14397:Core/Src/bno055.c ****  *  Axis:
14398:Core/Src/bno055.c ****  *
14399:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
14400:Core/Src/bno055.c ****  *
14401:Core/Src/bno055.c ****  *  Threshold :
14402:Core/Src/bno055.c ****  *
14403:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_thres()
14404:Core/Src/bno055.c ****  *
14405:Core/Src/bno055.c ****  *  Duration :
14406:Core/Src/bno055.c ****  *
14407:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_durn()
14408:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 861


14409:Core/Src/bno055.c ****  *  Slow/no motion enable:
14410:Core/Src/bno055.c ****  *
14411:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_enable()
14412:Core/Src/bno055.c ****  *
14413:Core/Src/bno055.c ****  */
14414:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_accel_no_motion(u8 accel_nomotion_u8)
14415:Core/Src/bno055.c **** {
 30880              		.loc 1 14415 1 is_stmt 1 view -0
 30881              		.cfi_startproc
 30882              		@ args = 0, pretend = 0, frame = 8
 30883              		@ frame_needed = 0, uses_anonymous_args = 0
 30884              		.loc 1 14415 1 is_stmt 0 view .LVU8650
 30885 0000 30B5     		push	{r4, r5, lr}
 30886              	.LCFI849:
 30887              		.cfi_def_cfa_offset 12
 30888              		.cfi_offset 4, -12
 30889              		.cfi_offset 5, -8
 30890              		.cfi_offset 14, -4
 30891 0002 83B0     		sub	sp, sp, #12
 30892              	.LCFI850:
 30893              		.cfi_def_cfa_offset 24
14416:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30894              		.loc 1 14416 5 is_stmt 1 view .LVU8651
 30895              	.LVL3838:
14417:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30896              		.loc 1 14417 5 view .LVU8652
 30897              		.loc 1 14417 8 is_stmt 0 view .LVU8653
 30898 0004 0023     		movs	r3, #0
 30899 0006 8DF80730 		strb	r3, [sp, #7]
14418:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30900              		.loc 1 14418 5 is_stmt 1 view .LVU8654
 30901              	.LVL3839:
14419:Core/Src/bno055.c **** 
14420:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14421:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30902              		.loc 1 14421 5 view .LVU8655
 30903              		.loc 1 14421 18 is_stmt 0 view .LVU8656
 30904 000a 1D4B     		ldr	r3, .L2142
 30905 000c 1B68     		ldr	r3, [r3]
 30906              		.loc 1 14421 8 view .LVU8657
 30907 000e 002B     		cmp	r3, #0
 30908 0010 30D0     		beq	.L2138
 30909 0012 0446     		mov	r4, r0
14422:Core/Src/bno055.c ****     {
14423:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14424:Core/Src/bno055.c ****     }
14425:Core/Src/bno055.c ****     else
14426:Core/Src/bno055.c ****     {
14427:Core/Src/bno055.c ****         /*condition check for page, accel
14428:Core/Src/bno055.c ****          * nomotion interrupt mask is
14429:Core/Src/bno055.c ****          * available in the page one*/
14430:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30910              		.loc 1 14430 9 is_stmt 1 view .LVU8658
 30911              		.loc 1 14430 21 is_stmt 0 view .LVU8659
 30912 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30913              		.loc 1 14430 12 view .LVU8660
 30914 0016 012B     		cmp	r3, #1
ARM GAS  /tmp/ccWoU29M.s 			page 862


 30915 0018 26D1     		bne	.L2141
 30916              	.LVL3840:
 30917              	.L2136:
14431:Core/Src/bno055.c ****         {
14432:Core/Src/bno055.c ****             /* Write page as one */
14433:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14434:Core/Src/bno055.c ****         }
14435:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30918              		.loc 1 14435 53 discriminator 1 view .LVU8661
 30919 001a 194B     		ldr	r3, .L2142
 30920 001c 1B68     		ldr	r3, [r3]
 30921 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30922              		.loc 1 14435 41 discriminator 1 view .LVU8662
 30923 0020 012B     		cmp	r3, #1
 30924 0022 2AD1     		bne	.L2139
 30925              	.L2137:
14436:Core/Src/bno055.c ****         {
14437:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30926              		.loc 1 14437 13 is_stmt 1 view .LVU8663
 30927              		.loc 1 14437 32 is_stmt 0 view .LVU8664
 30928 0024 164B     		ldr	r3, .L2142
 30929 0026 1868     		ldr	r0, [r3]
 30930 0028 0569     		ldr	r5, [r0, #16]
 30931              		.loc 1 14437 24 view .LVU8665
 30932 002a 0123     		movs	r3, #1
 30933 002c 0DF10702 		add	r2, sp, #7
 30934 0030 0F21     		movs	r1, #15
 30935 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30936 0034 A847     		blx	r5
 30937              	.LVL3841:
14438:Core/Src/bno055.c ****                                                       BNO055_ACCEL_NO_MOTION_INTR_MASK_REG,
14439:Core/Src/bno055.c ****                                                       &data_u8r,
14440:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14441:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 30938              		.loc 1 14441 13 is_stmt 1 view .LVU8666
 30939              		.loc 1 14441 16 is_stmt 0 view .LVU8667
 30940 0036 0546     		mov	r5, r0
 30941 0038 98B9     		cbnz	r0, .L2135
14442:Core/Src/bno055.c ****             {
14443:Core/Src/bno055.c ****                 /* Write the value of accel
14444:Core/Src/bno055.c ****                 * nomotion interrupt mask*/
14445:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_NO_MOTION_INTR_MASK, accel_no
 30942              		.loc 1 14445 17 is_stmt 1 view .LVU8668
 30943              		.loc 1 14445 28 is_stmt 0 view .LVU8669
 30944 003a 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 30945              	.LVL3842:
 30946              		.loc 1 14445 28 view .LVU8670
 30947 003e 00F07F00 		and	r0, r0, #127
 30948 0042 40EAC414 		orr	r4, r0, r4, lsl #7
 30949              		.loc 1 14445 26 view .LVU8671
 30950 0046 8DF80740 		strb	r4, [sp, #7]
14446:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 30951              		.loc 1 14446 17 is_stmt 1 view .LVU8672
 30952              		.loc 1 14446 37 is_stmt 0 view .LVU8673
 30953 004a 0D4B     		ldr	r3, .L2142
 30954 004c 1868     		ldr	r0, [r3]
 30955 004e C468     		ldr	r4, [r0, #12]
ARM GAS  /tmp/ccWoU29M.s 			page 863


 30956              		.loc 1 14446 29 view .LVU8674
 30957 0050 0123     		movs	r3, #1
 30958 0052 0DF10702 		add	r2, sp, #7
 30959 0056 0F21     		movs	r1, #15
 30960 0058 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30961 005a A047     		blx	r4
 30962              	.LVL3843:
 30963              		.loc 1 14446 26 view .LVU8675
 30964 005c 55FA80F5 		uxtab	r5, r5, r0
 30965 0060 6DB2     		sxtb	r5, r5
 30966              	.LVL3844:
 30967              	.L2135:
14447:Core/Src/bno055.c ****                                                             BNO055_ACCEL_NO_MOTION_INTR_MASK_REG,
14448:Core/Src/bno055.c ****                                                             &data_u8r,
14449:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14450:Core/Src/bno055.c ****             }
14451:Core/Src/bno055.c ****         }
14452:Core/Src/bno055.c ****         else
14453:Core/Src/bno055.c ****         {
14454:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14455:Core/Src/bno055.c ****         }
14456:Core/Src/bno055.c ****     }
14457:Core/Src/bno055.c **** 
14458:Core/Src/bno055.c ****     return com_rslt;
14459:Core/Src/bno055.c **** }
 30968              		.loc 1 14459 1 view .LVU8676
 30969 0062 2846     		mov	r0, r5
 30970 0064 03B0     		add	sp, sp, #12
 30971              	.LCFI851:
 30972              		.cfi_remember_state
 30973              		.cfi_def_cfa_offset 12
 30974              		@ sp needed
 30975 0066 30BD     		pop	{r4, r5, pc}
 30976              	.LVL3845:
 30977              	.L2141:
 30978              	.LCFI852:
 30979              		.cfi_restore_state
14433:Core/Src/bno055.c ****         }
 30980              		.loc 1 14433 13 is_stmt 1 view .LVU8677
14433:Core/Src/bno055.c ****         }
 30981              		.loc 1 14433 23 is_stmt 0 view .LVU8678
 30982 0068 0120     		movs	r0, #1
 30983              	.LVL3846:
14433:Core/Src/bno055.c ****         }
 30984              		.loc 1 14433 23 view .LVU8679
 30985 006a FFF7FEFF 		bl	bno055_write_page_id
 30986              	.LVL3847:
14435:Core/Src/bno055.c ****         {
 30987              		.loc 1 14435 9 is_stmt 1 view .LVU8680
14435:Core/Src/bno055.c ****         {
 30988              		.loc 1 14435 12 is_stmt 0 view .LVU8681
 30989 006e 0028     		cmp	r0, #0
 30990 0070 D8D0     		beq	.L2137
 30991 0072 D2E7     		b	.L2136
 30992              	.LVL3848:
 30993              	.L2138:
14423:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 864


 30994              		.loc 1 14423 16 view .LVU8682
 30995 0074 6FF07E05 		mvn	r5, #126
 30996 0078 F3E7     		b	.L2135
 30997              	.LVL3849:
 30998              	.L2139:
14454:Core/Src/bno055.c ****         }
 30999              		.loc 1 14454 22 view .LVU8683
 31000 007a 4FF0FF35 		mov	r5, #-1
 31001 007e F0E7     		b	.L2135
 31002              	.L2143:
 31003              		.align	2
 31004              	.L2142:
 31005 0080 00000000 		.word	.LANCHOR0
 31006              		.cfi_endproc
 31007              	.LFE214:
 31009              		.section	.text.bno055_get_intr_gyro_any_motion,"ax",%progbits
 31010              		.align	1
 31011              		.global	bno055_get_intr_gyro_any_motion
 31012              		.syntax unified
 31013              		.thumb
 31014              		.thumb_func
 31015              		.fpu fpv4-sp-d16
 31017              	bno055_get_intr_gyro_any_motion:
 31018              	.LVL3850:
 31019              	.LFB215:
14460:Core/Src/bno055.c **** 
14461:Core/Src/bno055.c **** /*!
14462:Core/Src/bno055.c ****  *  @brief This API used to read the gyro anymotion interrupt
14463:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 2
14464:Core/Src/bno055.c ****  *
14465:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt
14466:Core/Src/bno055.c ****  *      gyro_any_motion_u8 | result
14467:Core/Src/bno055.c ****  *     --------------------  |------------
14468:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14469:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14470:Core/Src/bno055.c ****  *
14471:Core/Src/bno055.c ****  *  @return results of bus communication function
14472:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14473:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14474:Core/Src/bno055.c ****  *
14475:Core/Src/bno055.c ****  *  @note While enabling the gyro anymotion interrupt
14476:Core/Src/bno055.c ****  *  configure the following settings
14477:Core/Src/bno055.c ****  *
14478:Core/Src/bno055.c ****  *  Axis:
14479:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_axis_enable()
14480:Core/Src/bno055.c ****  *
14481:Core/Src/bno055.c ****  *  Filter setting:
14482:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_filter()
14483:Core/Src/bno055.c ****  *
14484:Core/Src/bno055.c ****  *  Threshold :
14485:Core/Src/bno055.c ****  *
14486:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_thres()
14487:Core/Src/bno055.c ****  *
14488:Core/Src/bno055.c ****  *  Slope samples :
14489:Core/Src/bno055.c ****  *
14490:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_slope_samples()
14491:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 865


14492:Core/Src/bno055.c ****  *  Awake duration :
14493:Core/Src/bno055.c ****  *
14494:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_awake_durn()
14495:Core/Src/bno055.c ****  */
14496:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_gyro_any_motion(u8 *gyro_any_motion_u8)
14497:Core/Src/bno055.c **** {
 31020              		.loc 1 14497 1 is_stmt 1 view -0
 31021              		.cfi_startproc
 31022              		@ args = 0, pretend = 0, frame = 8
 31023              		@ frame_needed = 0, uses_anonymous_args = 0
 31024              		.loc 1 14497 1 is_stmt 0 view .LVU8685
 31025 0000 30B5     		push	{r4, r5, lr}
 31026              	.LCFI853:
 31027              		.cfi_def_cfa_offset 12
 31028              		.cfi_offset 4, -12
 31029              		.cfi_offset 5, -8
 31030              		.cfi_offset 14, -4
 31031 0002 83B0     		sub	sp, sp, #12
 31032              	.LCFI854:
 31033              		.cfi_def_cfa_offset 24
14498:Core/Src/bno055.c ****     /* Variable used to return value of
14499:Core/Src/bno055.c ****      * communication routine*/
14500:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31034              		.loc 1 14500 5 is_stmt 1 view .LVU8686
 31035              	.LVL3851:
14501:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31036              		.loc 1 14501 5 view .LVU8687
 31037              		.loc 1 14501 8 is_stmt 0 view .LVU8688
 31038 0004 0023     		movs	r3, #0
 31039 0006 8DF80730 		strb	r3, [sp, #7]
14502:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31040              		.loc 1 14502 5 is_stmt 1 view .LVU8689
 31041              	.LVL3852:
14503:Core/Src/bno055.c **** 
14504:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14505:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31042              		.loc 1 14505 5 view .LVU8690
 31043              		.loc 1 14505 18 is_stmt 0 view .LVU8691
 31044 000a 144B     		ldr	r3, .L2152
 31045 000c 1B68     		ldr	r3, [r3]
 31046              		.loc 1 14505 8 view .LVU8692
 31047 000e F3B1     		cbz	r3, .L2148
 31048 0010 0446     		mov	r4, r0
14506:Core/Src/bno055.c ****     {
14507:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14508:Core/Src/bno055.c ****     }
14509:Core/Src/bno055.c ****     else
14510:Core/Src/bno055.c ****     {
14511:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion interrupt  is
14512:Core/Src/bno055.c ****          * available in the page one*/
14513:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31049              		.loc 1 14513 9 is_stmt 1 view .LVU8693
 31050              		.loc 1 14513 21 is_stmt 0 view .LVU8694
 31051 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31052              		.loc 1 14513 12 view .LVU8695
 31053 0014 012B     		cmp	r3, #1
 31054 0016 14D1     		bne	.L2151
ARM GAS  /tmp/ccWoU29M.s 			page 866


 31055              	.LVL3853:
 31056              	.L2146:
14514:Core/Src/bno055.c ****         {
14515:Core/Src/bno055.c ****             /* Write page as one */
14516:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14517:Core/Src/bno055.c ****         }
14518:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31057              		.loc 1 14518 53 discriminator 1 view .LVU8696
 31058 0018 104B     		ldr	r3, .L2152
 31059 001a 1B68     		ldr	r3, [r3]
 31060 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31061              		.loc 1 14518 41 discriminator 1 view .LVU8697
 31062 001e 012B     		cmp	r3, #1
 31063 0020 18D1     		bne	.L2149
 31064              	.L2147:
14519:Core/Src/bno055.c ****         {
14520:Core/Src/bno055.c ****             /* Read the value of gyro anymotion interrupt */
14521:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31065              		.loc 1 14521 13 is_stmt 1 view .LVU8698
 31066              		.loc 1 14521 32 is_stmt 0 view .LVU8699
 31067 0022 0E4B     		ldr	r3, .L2152
 31068 0024 1868     		ldr	r0, [r3]
 31069 0026 0569     		ldr	r5, [r0, #16]
 31070              		.loc 1 14521 24 view .LVU8700
 31071 0028 0123     		movs	r3, #1
 31072 002a 0DF10702 		add	r2, sp, #7
 31073 002e 1021     		movs	r1, #16
 31074 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31075 0032 A847     		blx	r5
 31076              	.LVL3854:
14522:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_INTR_REG,
14523:Core/Src/bno055.c ****                                                       &data_u8r,
14524:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14525:Core/Src/bno055.c ****             *gyro_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_INTR);
 31077              		.loc 1 14525 13 is_stmt 1 view .LVU8701
 31078              		.loc 1 14525 35 is_stmt 0 view .LVU8702
 31079 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31080 0038 C3F38003 		ubfx	r3, r3, #2, #1
 31081              		.loc 1 14525 33 view .LVU8703
 31082 003c 2370     		strb	r3, [r4]
 31083              	.LVL3855:
 31084              	.L2145:
14526:Core/Src/bno055.c ****         }
14527:Core/Src/bno055.c ****         else
14528:Core/Src/bno055.c ****         {
14529:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14530:Core/Src/bno055.c ****         }
14531:Core/Src/bno055.c ****     }
14532:Core/Src/bno055.c **** 
14533:Core/Src/bno055.c ****     return com_rslt;
14534:Core/Src/bno055.c **** }
 31085              		.loc 1 14534 1 view .LVU8704
 31086 003e 03B0     		add	sp, sp, #12
 31087              	.LCFI855:
 31088              		.cfi_remember_state
 31089              		.cfi_def_cfa_offset 12
 31090              		@ sp needed
ARM GAS  /tmp/ccWoU29M.s 			page 867


 31091 0040 30BD     		pop	{r4, r5, pc}
 31092              	.LVL3856:
 31093              	.L2151:
 31094              	.LCFI856:
 31095              		.cfi_restore_state
14516:Core/Src/bno055.c ****         }
 31096              		.loc 1 14516 13 is_stmt 1 view .LVU8705
14516:Core/Src/bno055.c ****         }
 31097              		.loc 1 14516 23 is_stmt 0 view .LVU8706
 31098 0042 0120     		movs	r0, #1
 31099              	.LVL3857:
14516:Core/Src/bno055.c ****         }
 31100              		.loc 1 14516 23 view .LVU8707
 31101 0044 FFF7FEFF 		bl	bno055_write_page_id
 31102              	.LVL3858:
14518:Core/Src/bno055.c ****         {
 31103              		.loc 1 14518 9 is_stmt 1 view .LVU8708
14518:Core/Src/bno055.c ****         {
 31104              		.loc 1 14518 12 is_stmt 0 view .LVU8709
 31105 0048 0028     		cmp	r0, #0
 31106 004a EAD0     		beq	.L2147
 31107 004c E4E7     		b	.L2146
 31108              	.LVL3859:
 31109              	.L2148:
14507:Core/Src/bno055.c ****     }
 31110              		.loc 1 14507 16 view .LVU8710
 31111 004e 6FF07E00 		mvn	r0, #126
 31112              	.LVL3860:
14507:Core/Src/bno055.c ****     }
 31113              		.loc 1 14507 16 view .LVU8711
 31114 0052 F4E7     		b	.L2145
 31115              	.LVL3861:
 31116              	.L2149:
14529:Core/Src/bno055.c ****         }
 31117              		.loc 1 14529 22 view .LVU8712
 31118 0054 4FF0FF30 		mov	r0, #-1
 31119 0058 F1E7     		b	.L2145
 31120              	.L2153:
 31121 005a 00BF     		.align	2
 31122              	.L2152:
 31123 005c 00000000 		.word	.LANCHOR0
 31124              		.cfi_endproc
 31125              	.LFE215:
 31127              		.section	.text.bno055_set_intr_gyro_any_motion,"ax",%progbits
 31128              		.align	1
 31129              		.global	bno055_set_intr_gyro_any_motion
 31130              		.syntax unified
 31131              		.thumb
 31132              		.thumb_func
 31133              		.fpu fpv4-sp-d16
 31135              	bno055_set_intr_gyro_any_motion:
 31136              	.LVL3862:
 31137              	.LFB216:
14535:Core/Src/bno055.c **** 
14536:Core/Src/bno055.c **** /*!
14537:Core/Src/bno055.c ****  *  @brief This API used to write the gyro anymotion interrupt
14538:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 2
ARM GAS  /tmp/ccWoU29M.s 			page 868


14539:Core/Src/bno055.c ****  *
14540:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt
14541:Core/Src/bno055.c ****  *    gyro_any_motion_u8   | result
14542:Core/Src/bno055.c ****  *     --------------------  |------------
14543:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14544:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14545:Core/Src/bno055.c ****  *
14546:Core/Src/bno055.c ****  *  @return results of bus communication function
14547:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14548:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14549:Core/Src/bno055.c ****  *
14550:Core/Src/bno055.c ****  *  @note While enabling the gyro anymotion interrupt
14551:Core/Src/bno055.c ****  *  configure the following settings
14552:Core/Src/bno055.c ****  *
14553:Core/Src/bno055.c ****  *  Axis:
14554:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_axis_enable()
14555:Core/Src/bno055.c ****  *
14556:Core/Src/bno055.c ****  *  Filter setting:
14557:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_filter()
14558:Core/Src/bno055.c ****  *
14559:Core/Src/bno055.c ****  *  Threshold :
14560:Core/Src/bno055.c ****  *
14561:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_thres()
14562:Core/Src/bno055.c ****  *
14563:Core/Src/bno055.c ****  *  Slope samples :
14564:Core/Src/bno055.c ****  *
14565:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_slope_samples()
14566:Core/Src/bno055.c ****  *
14567:Core/Src/bno055.c ****  *  Awake duration :
14568:Core/Src/bno055.c ****  *
14569:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_awake_durn()
14570:Core/Src/bno055.c ****  */
14571:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_gyro_any_motion(u8 gyro_any_motion_u8)
14572:Core/Src/bno055.c **** {
 31138              		.loc 1 14572 1 is_stmt 1 view -0
 31139              		.cfi_startproc
 31140              		@ args = 0, pretend = 0, frame = 8
 31141              		@ frame_needed = 0, uses_anonymous_args = 0
 31142              		.loc 1 14572 1 is_stmt 0 view .LVU8714
 31143 0000 30B5     		push	{r4, r5, lr}
 31144              	.LCFI857:
 31145              		.cfi_def_cfa_offset 12
 31146              		.cfi_offset 4, -12
 31147              		.cfi_offset 5, -8
 31148              		.cfi_offset 14, -4
 31149 0002 83B0     		sub	sp, sp, #12
 31150              	.LCFI858:
 31151              		.cfi_def_cfa_offset 24
14573:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31152              		.loc 1 14573 5 is_stmt 1 view .LVU8715
 31153              	.LVL3863:
14574:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31154              		.loc 1 14574 5 view .LVU8716
 31155              		.loc 1 14574 8 is_stmt 0 view .LVU8717
 31156 0004 0023     		movs	r3, #0
 31157 0006 8DF80730 		strb	r3, [sp, #7]
14575:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 869


 31158              		.loc 1 14575 5 is_stmt 1 view .LVU8718
 31159              	.LVL3864:
14576:Core/Src/bno055.c **** 
14577:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14578:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31160              		.loc 1 14578 5 view .LVU8719
 31161              		.loc 1 14578 18 is_stmt 0 view .LVU8720
 31162 000a 1F4B     		ldr	r3, .L2162
 31163 000c 1B68     		ldr	r3, [r3]
 31164              		.loc 1 14578 8 view .LVU8721
 31165 000e 002B     		cmp	r3, #0
 31166 0010 33D0     		beq	.L2158
 31167 0012 0446     		mov	r4, r0
14579:Core/Src/bno055.c ****     {
14580:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14581:Core/Src/bno055.c ****     }
14582:Core/Src/bno055.c ****     else
14583:Core/Src/bno055.c ****     {
14584:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion interrupt  is
14585:Core/Src/bno055.c ****          * available in the page one*/
14586:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31168              		.loc 1 14586 9 is_stmt 1 view .LVU8722
 31169              		.loc 1 14586 21 is_stmt 0 view .LVU8723
 31170 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31171              		.loc 1 14586 12 view .LVU8724
 31172 0016 012B     		cmp	r3, #1
 31173 0018 29D1     		bne	.L2161
 31174              	.LVL3865:
 31175              	.L2156:
14587:Core/Src/bno055.c ****         {
14588:Core/Src/bno055.c ****             /* Write page as one */
14589:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14590:Core/Src/bno055.c ****         }
14591:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31176              		.loc 1 14591 53 discriminator 1 view .LVU8725
 31177 001a 1B4B     		ldr	r3, .L2162
 31178 001c 1B68     		ldr	r3, [r3]
 31179 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31180              		.loc 1 14591 41 discriminator 1 view .LVU8726
 31181 0020 012B     		cmp	r3, #1
 31182 0022 2DD1     		bne	.L2159
 31183              	.L2157:
14592:Core/Src/bno055.c ****         {
14593:Core/Src/bno055.c ****             /* Write the value of gyro anymotion interrupt */
14594:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31184              		.loc 1 14594 13 is_stmt 1 view .LVU8727
 31185              		.loc 1 14594 32 is_stmt 0 view .LVU8728
 31186 0024 184B     		ldr	r3, .L2162
 31187 0026 1868     		ldr	r0, [r3]
 31188 0028 0569     		ldr	r5, [r0, #16]
 31189              		.loc 1 14594 24 view .LVU8729
 31190 002a 0123     		movs	r3, #1
 31191 002c 0DF10702 		add	r2, sp, #7
 31192 0030 1021     		movs	r1, #16
 31193 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31194 0034 A847     		blx	r5
 31195              	.LVL3866:
ARM GAS  /tmp/ccWoU29M.s 			page 870


14595:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_INTR_REG,
14596:Core/Src/bno055.c ****                                                       &data_u8r,
14597:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14598:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 31196              		.loc 1 14598 13 is_stmt 1 view .LVU8730
 31197              		.loc 1 14598 16 is_stmt 0 view .LVU8731
 31198 0036 0546     		mov	r5, r0
 31199 0038 B0B9     		cbnz	r0, .L2155
14599:Core/Src/bno055.c ****             {
14600:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_INTR, gyro_any_moti
 31200              		.loc 1 14600 17 is_stmt 1 view .LVU8732
 31201              		.loc 1 14600 28 is_stmt 0 view .LVU8733
 31202 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31203 003e 23F00403 		bic	r3, r3, #4
 31204 0042 5BB2     		sxtb	r3, r3
 31205 0044 A400     		lsls	r4, r4, #2
 31206 0046 04F00404 		and	r4, r4, #4
 31207 004a 1C43     		orrs	r4, r4, r3
 31208              		.loc 1 14600 26 view .LVU8734
 31209 004c 8DF80740 		strb	r4, [sp, #7]
14601:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 31210              		.loc 1 14601 17 is_stmt 1 view .LVU8735
 31211              		.loc 1 14601 37 is_stmt 0 view .LVU8736
 31212 0050 0D4B     		ldr	r3, .L2162
 31213 0052 1868     		ldr	r0, [r3]
 31214              	.LVL3867:
 31215              		.loc 1 14601 37 view .LVU8737
 31216 0054 C468     		ldr	r4, [r0, #12]
 31217              		.loc 1 14601 29 view .LVU8738
 31218 0056 0123     		movs	r3, #1
 31219 0058 0DF10702 		add	r2, sp, #7
 31220 005c 1021     		movs	r1, #16
 31221 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31222 0060 A047     		blx	r4
 31223              	.LVL3868:
 31224              		.loc 1 14601 26 view .LVU8739
 31225 0062 55FA80F5 		uxtab	r5, r5, r0
 31226 0066 6DB2     		sxtb	r5, r5
 31227              	.LVL3869:
 31228              	.L2155:
14602:Core/Src/bno055.c ****                                                             BNO055_GYRO_ANY_MOTION_INTR_REG,
14603:Core/Src/bno055.c ****                                                             &data_u8r,
14604:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14605:Core/Src/bno055.c ****             }
14606:Core/Src/bno055.c ****         }
14607:Core/Src/bno055.c ****         else
14608:Core/Src/bno055.c ****         {
14609:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14610:Core/Src/bno055.c ****         }
14611:Core/Src/bno055.c ****     }
14612:Core/Src/bno055.c **** 
14613:Core/Src/bno055.c ****     return com_rslt;
14614:Core/Src/bno055.c **** }
 31229              		.loc 1 14614 1 view .LVU8740
 31230 0068 2846     		mov	r0, r5
 31231 006a 03B0     		add	sp, sp, #12
 31232              	.LCFI859:
ARM GAS  /tmp/ccWoU29M.s 			page 871


 31233              		.cfi_remember_state
 31234              		.cfi_def_cfa_offset 12
 31235              		@ sp needed
 31236 006c 30BD     		pop	{r4, r5, pc}
 31237              	.LVL3870:
 31238              	.L2161:
 31239              	.LCFI860:
 31240              		.cfi_restore_state
14589:Core/Src/bno055.c ****         }
 31241              		.loc 1 14589 13 is_stmt 1 view .LVU8741
14589:Core/Src/bno055.c ****         }
 31242              		.loc 1 14589 23 is_stmt 0 view .LVU8742
 31243 006e 0120     		movs	r0, #1
 31244              	.LVL3871:
14589:Core/Src/bno055.c ****         }
 31245              		.loc 1 14589 23 view .LVU8743
 31246 0070 FFF7FEFF 		bl	bno055_write_page_id
 31247              	.LVL3872:
14591:Core/Src/bno055.c ****         {
 31248              		.loc 1 14591 9 is_stmt 1 view .LVU8744
14591:Core/Src/bno055.c ****         {
 31249              		.loc 1 14591 12 is_stmt 0 view .LVU8745
 31250 0074 0028     		cmp	r0, #0
 31251 0076 D5D0     		beq	.L2157
 31252 0078 CFE7     		b	.L2156
 31253              	.LVL3873:
 31254              	.L2158:
14580:Core/Src/bno055.c ****     }
 31255              		.loc 1 14580 16 view .LVU8746
 31256 007a 6FF07E05 		mvn	r5, #126
 31257 007e F3E7     		b	.L2155
 31258              	.LVL3874:
 31259              	.L2159:
14609:Core/Src/bno055.c ****         }
 31260              		.loc 1 14609 22 view .LVU8747
 31261 0080 4FF0FF35 		mov	r5, #-1
 31262 0084 F0E7     		b	.L2155
 31263              	.L2163:
 31264 0086 00BF     		.align	2
 31265              	.L2162:
 31266 0088 00000000 		.word	.LANCHOR0
 31267              		.cfi_endproc
 31268              	.LFE216:
 31270              		.section	.text.bno055_get_intr_gyro_highrate,"ax",%progbits
 31271              		.align	1
 31272              		.global	bno055_get_intr_gyro_highrate
 31273              		.syntax unified
 31274              		.thumb
 31275              		.thumb_func
 31276              		.fpu fpv4-sp-d16
 31278              	bno055_get_intr_gyro_highrate:
 31279              	.LVL3875:
 31280              	.LFB217:
14615:Core/Src/bno055.c **** 
14616:Core/Src/bno055.c **** /*!
14617:Core/Src/bno055.c ****  *  @brief This API used to read the gyro highrate interrupt
14618:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 3
ARM GAS  /tmp/ccWoU29M.s 			page 872


14619:Core/Src/bno055.c ****  *
14620:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt
14621:Core/Src/bno055.c ****  *      gyro_highrate_u8   | result
14622:Core/Src/bno055.c ****  *     --------------------  |------------
14623:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14624:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14625:Core/Src/bno055.c ****  *
14626:Core/Src/bno055.c ****  *  @return results of bus communication function
14627:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14628:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14629:Core/Src/bno055.c ****  *
14630:Core/Src/bno055.c ****  *  @note While enabling the gyro highrate interrupt
14631:Core/Src/bno055.c ****  *  configure the below settings by using
14632:Core/Src/bno055.c ****  *  the following APIs
14633:Core/Src/bno055.c ****  *
14634:Core/Src/bno055.c ****  *  Axis :
14635:Core/Src/bno055.c ****  *
14636:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_axis_enable()
14637:Core/Src/bno055.c ****  *
14638:Core/Src/bno055.c ****  *  Filter :
14639:Core/Src/bno055.c ****  *
14640:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_filter()
14641:Core/Src/bno055.c ****  *
14642:Core/Src/bno055.c ****  *  Threshold :
14643:Core/Src/bno055.c ****  *
14644:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_x_thres()
14645:Core/Src/bno055.c ****  *
14646:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_y_thres()
14647:Core/Src/bno055.c ****  *
14648:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_z_thres()
14649:Core/Src/bno055.c ****  *
14650:Core/Src/bno055.c ****  *  Hysteresis :
14651:Core/Src/bno055.c ****  *
14652:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_hyst()
14653:Core/Src/bno055.c ****  *
14654:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_hyst()
14655:Core/Src/bno055.c ****  *
14656:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_hyst()
14657:Core/Src/bno055.c ****  *
14658:Core/Src/bno055.c ****  *  Duration :
14659:Core/Src/bno055.c ****  *
14660:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_durn()
14661:Core/Src/bno055.c ****  *
14662:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_durn()
14663:Core/Src/bno055.c ****  *
14664:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_durn()
14665:Core/Src/bno055.c ****  *
14666:Core/Src/bno055.c ****  */
14667:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_gyro_highrate(u8 *gyro_highrate_u8)
14668:Core/Src/bno055.c **** {
 31281              		.loc 1 14668 1 is_stmt 1 view -0
 31282              		.cfi_startproc
 31283              		@ args = 0, pretend = 0, frame = 8
 31284              		@ frame_needed = 0, uses_anonymous_args = 0
 31285              		.loc 1 14668 1 is_stmt 0 view .LVU8749
 31286 0000 30B5     		push	{r4, r5, lr}
 31287              	.LCFI861:
ARM GAS  /tmp/ccWoU29M.s 			page 873


 31288              		.cfi_def_cfa_offset 12
 31289              		.cfi_offset 4, -12
 31290              		.cfi_offset 5, -8
 31291              		.cfi_offset 14, -4
 31292 0002 83B0     		sub	sp, sp, #12
 31293              	.LCFI862:
 31294              		.cfi_def_cfa_offset 24
14669:Core/Src/bno055.c ****     /* Variable used to return value of
14670:Core/Src/bno055.c ****      * communication routine*/
14671:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31295              		.loc 1 14671 5 is_stmt 1 view .LVU8750
 31296              	.LVL3876:
14672:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31297              		.loc 1 14672 5 view .LVU8751
 31298              		.loc 1 14672 8 is_stmt 0 view .LVU8752
 31299 0004 0023     		movs	r3, #0
 31300 0006 8DF80730 		strb	r3, [sp, #7]
14673:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31301              		.loc 1 14673 5 is_stmt 1 view .LVU8753
 31302              	.LVL3877:
14674:Core/Src/bno055.c **** 
14675:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14676:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31303              		.loc 1 14676 5 view .LVU8754
 31304              		.loc 1 14676 18 is_stmt 0 view .LVU8755
 31305 000a 144B     		ldr	r3, .L2172
 31306 000c 1B68     		ldr	r3, [r3]
 31307              		.loc 1 14676 8 view .LVU8756
 31308 000e F3B1     		cbz	r3, .L2168
 31309 0010 0446     		mov	r4, r0
14677:Core/Src/bno055.c ****     {
14678:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14679:Core/Src/bno055.c ****     }
14680:Core/Src/bno055.c ****     else
14681:Core/Src/bno055.c ****     {
14682:Core/Src/bno055.c ****         /*condition check for page, gyro highrate interrupt is
14683:Core/Src/bno055.c ****          * available in the page one*/
14684:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31310              		.loc 1 14684 9 is_stmt 1 view .LVU8757
 31311              		.loc 1 14684 21 is_stmt 0 view .LVU8758
 31312 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31313              		.loc 1 14684 12 view .LVU8759
 31314 0014 012B     		cmp	r3, #1
 31315 0016 14D1     		bne	.L2171
 31316              	.LVL3878:
 31317              	.L2166:
14685:Core/Src/bno055.c ****         {
14686:Core/Src/bno055.c ****             /* Write page as one */
14687:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14688:Core/Src/bno055.c ****         }
14689:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31318              		.loc 1 14689 53 discriminator 1 view .LVU8760
 31319 0018 104B     		ldr	r3, .L2172
 31320 001a 1B68     		ldr	r3, [r3]
 31321 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31322              		.loc 1 14689 41 discriminator 1 view .LVU8761
 31323 001e 012B     		cmp	r3, #1
ARM GAS  /tmp/ccWoU29M.s 			page 874


 31324 0020 18D1     		bne	.L2169
 31325              	.L2167:
14690:Core/Src/bno055.c ****         {
14691:Core/Src/bno055.c ****             /* Read the value of gyro highrate interrupt */
14692:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31326              		.loc 1 14692 13 is_stmt 1 view .LVU8762
 31327              		.loc 1 14692 32 is_stmt 0 view .LVU8763
 31328 0022 0E4B     		ldr	r3, .L2172
 31329 0024 1868     		ldr	r0, [r3]
 31330 0026 0569     		ldr	r5, [r0, #16]
 31331              		.loc 1 14692 24 view .LVU8764
 31332 0028 0123     		movs	r3, #1
 31333 002a 0DF10702 		add	r2, sp, #7
 31334 002e 1021     		movs	r1, #16
 31335 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31336 0032 A847     		blx	r5
 31337              	.LVL3879:
14693:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_INTR_REG,
14694:Core/Src/bno055.c ****                                                       &data_u8r,
14695:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14696:Core/Src/bno055.c ****             *gyro_highrate_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_INTR);
 31338              		.loc 1 14696 13 is_stmt 1 view .LVU8765
 31339              		.loc 1 14696 33 is_stmt 0 view .LVU8766
 31340 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31341 0038 C3F3C003 		ubfx	r3, r3, #3, #1
 31342              		.loc 1 14696 31 view .LVU8767
 31343 003c 2370     		strb	r3, [r4]
 31344              	.LVL3880:
 31345              	.L2165:
14697:Core/Src/bno055.c ****         }
14698:Core/Src/bno055.c ****         else
14699:Core/Src/bno055.c ****         {
14700:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14701:Core/Src/bno055.c ****         }
14702:Core/Src/bno055.c ****     }
14703:Core/Src/bno055.c **** 
14704:Core/Src/bno055.c ****     return com_rslt;
14705:Core/Src/bno055.c **** }
 31346              		.loc 1 14705 1 view .LVU8768
 31347 003e 03B0     		add	sp, sp, #12
 31348              	.LCFI863:
 31349              		.cfi_remember_state
 31350              		.cfi_def_cfa_offset 12
 31351              		@ sp needed
 31352 0040 30BD     		pop	{r4, r5, pc}
 31353              	.LVL3881:
 31354              	.L2171:
 31355              	.LCFI864:
 31356              		.cfi_restore_state
14687:Core/Src/bno055.c ****         }
 31357              		.loc 1 14687 13 is_stmt 1 view .LVU8769
14687:Core/Src/bno055.c ****         }
 31358              		.loc 1 14687 23 is_stmt 0 view .LVU8770
 31359 0042 0120     		movs	r0, #1
 31360              	.LVL3882:
14687:Core/Src/bno055.c ****         }
 31361              		.loc 1 14687 23 view .LVU8771
ARM GAS  /tmp/ccWoU29M.s 			page 875


 31362 0044 FFF7FEFF 		bl	bno055_write_page_id
 31363              	.LVL3883:
14689:Core/Src/bno055.c ****         {
 31364              		.loc 1 14689 9 is_stmt 1 view .LVU8772
14689:Core/Src/bno055.c ****         {
 31365              		.loc 1 14689 12 is_stmt 0 view .LVU8773
 31366 0048 0028     		cmp	r0, #0
 31367 004a EAD0     		beq	.L2167
 31368 004c E4E7     		b	.L2166
 31369              	.LVL3884:
 31370              	.L2168:
14678:Core/Src/bno055.c ****     }
 31371              		.loc 1 14678 16 view .LVU8774
 31372 004e 6FF07E00 		mvn	r0, #126
 31373              	.LVL3885:
14678:Core/Src/bno055.c ****     }
 31374              		.loc 1 14678 16 view .LVU8775
 31375 0052 F4E7     		b	.L2165
 31376              	.LVL3886:
 31377              	.L2169:
14700:Core/Src/bno055.c ****         }
 31378              		.loc 1 14700 22 view .LVU8776
 31379 0054 4FF0FF30 		mov	r0, #-1
 31380 0058 F1E7     		b	.L2165
 31381              	.L2173:
 31382 005a 00BF     		.align	2
 31383              	.L2172:
 31384 005c 00000000 		.word	.LANCHOR0
 31385              		.cfi_endproc
 31386              	.LFE217:
 31388              		.section	.text.bno055_set_intr_gyro_highrate,"ax",%progbits
 31389              		.align	1
 31390              		.global	bno055_set_intr_gyro_highrate
 31391              		.syntax unified
 31392              		.thumb
 31393              		.thumb_func
 31394              		.fpu fpv4-sp-d16
 31396              	bno055_set_intr_gyro_highrate:
 31397              	.LVL3887:
 31398              	.LFB218:
14706:Core/Src/bno055.c **** 
14707:Core/Src/bno055.c **** /*!
14708:Core/Src/bno055.c ****  *  @brief This API used to write the gyro highrate interrupt
14709:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 3
14710:Core/Src/bno055.c ****  *
14711:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt
14712:Core/Src/bno055.c ****  *      gyro_highrate_u8   | result
14713:Core/Src/bno055.c ****  *     --------------------  |------------
14714:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14715:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14716:Core/Src/bno055.c ****  *
14717:Core/Src/bno055.c ****  *  @return results of bus communication function
14718:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14719:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14720:Core/Src/bno055.c ****  *
14721:Core/Src/bno055.c ****  *  @note While enabling the gyro highrate interrupt
14722:Core/Src/bno055.c ****  *  configure the below settings by using
ARM GAS  /tmp/ccWoU29M.s 			page 876


14723:Core/Src/bno055.c ****  *  the following APIs
14724:Core/Src/bno055.c ****  *
14725:Core/Src/bno055.c ****  *  Axis :
14726:Core/Src/bno055.c ****  *
14727:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_axis_enable()
14728:Core/Src/bno055.c ****  *
14729:Core/Src/bno055.c ****  *  Filter :
14730:Core/Src/bno055.c ****  *
14731:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_filter()
14732:Core/Src/bno055.c ****  *
14733:Core/Src/bno055.c ****  *  Threshold :
14734:Core/Src/bno055.c ****  *
14735:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_x_thres()
14736:Core/Src/bno055.c ****  *
14737:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_y_thres()
14738:Core/Src/bno055.c ****  *
14739:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_z_thres()
14740:Core/Src/bno055.c ****  *
14741:Core/Src/bno055.c ****  *  Hysteresis :
14742:Core/Src/bno055.c ****  *
14743:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_hyst()
14744:Core/Src/bno055.c ****  *
14745:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_hyst()
14746:Core/Src/bno055.c ****  *
14747:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_hyst()
14748:Core/Src/bno055.c ****  *
14749:Core/Src/bno055.c ****  *  Duration :
14750:Core/Src/bno055.c ****  *
14751:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_durn()
14752:Core/Src/bno055.c ****  *
14753:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_durn()
14754:Core/Src/bno055.c ****  *
14755:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_durn()
14756:Core/Src/bno055.c ****  *
14757:Core/Src/bno055.c ****  */
14758:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_gyro_highrate(u8 gyro_highrate_u8)
14759:Core/Src/bno055.c **** {
 31399              		.loc 1 14759 1 is_stmt 1 view -0
 31400              		.cfi_startproc
 31401              		@ args = 0, pretend = 0, frame = 8
 31402              		@ frame_needed = 0, uses_anonymous_args = 0
 31403              		.loc 1 14759 1 is_stmt 0 view .LVU8778
 31404 0000 30B5     		push	{r4, r5, lr}
 31405              	.LCFI865:
 31406              		.cfi_def_cfa_offset 12
 31407              		.cfi_offset 4, -12
 31408              		.cfi_offset 5, -8
 31409              		.cfi_offset 14, -4
 31410 0002 83B0     		sub	sp, sp, #12
 31411              	.LCFI866:
 31412              		.cfi_def_cfa_offset 24
14760:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31413              		.loc 1 14760 5 is_stmt 1 view .LVU8779
 31414              	.LVL3888:
14761:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31415              		.loc 1 14761 5 view .LVU8780
 31416              		.loc 1 14761 8 is_stmt 0 view .LVU8781
ARM GAS  /tmp/ccWoU29M.s 			page 877


 31417 0004 0023     		movs	r3, #0
 31418 0006 8DF80730 		strb	r3, [sp, #7]
14762:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31419              		.loc 1 14762 5 is_stmt 1 view .LVU8782
 31420              	.LVL3889:
14763:Core/Src/bno055.c **** 
14764:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14765:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31421              		.loc 1 14765 5 view .LVU8783
 31422              		.loc 1 14765 18 is_stmt 0 view .LVU8784
 31423 000a 1F4B     		ldr	r3, .L2182
 31424 000c 1B68     		ldr	r3, [r3]
 31425              		.loc 1 14765 8 view .LVU8785
 31426 000e 002B     		cmp	r3, #0
 31427 0010 33D0     		beq	.L2178
 31428 0012 0446     		mov	r4, r0
14766:Core/Src/bno055.c ****     {
14767:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14768:Core/Src/bno055.c ****     }
14769:Core/Src/bno055.c ****     else
14770:Core/Src/bno055.c ****     {
14771:Core/Src/bno055.c ****         /*condition check for page, gyro highrate interrupt is
14772:Core/Src/bno055.c ****          * available in the page one*/
14773:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31429              		.loc 1 14773 9 is_stmt 1 view .LVU8786
 31430              		.loc 1 14773 21 is_stmt 0 view .LVU8787
 31431 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31432              		.loc 1 14773 12 view .LVU8788
 31433 0016 012B     		cmp	r3, #1
 31434 0018 29D1     		bne	.L2181
 31435              	.LVL3890:
 31436              	.L2176:
14774:Core/Src/bno055.c ****         {
14775:Core/Src/bno055.c ****             /* Write page as one */
14776:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14777:Core/Src/bno055.c ****         }
14778:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31437              		.loc 1 14778 53 discriminator 1 view .LVU8789
 31438 001a 1B4B     		ldr	r3, .L2182
 31439 001c 1B68     		ldr	r3, [r3]
 31440 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31441              		.loc 1 14778 41 discriminator 1 view .LVU8790
 31442 0020 012B     		cmp	r3, #1
 31443 0022 2DD1     		bne	.L2179
 31444              	.L2177:
14779:Core/Src/bno055.c ****         {
14780:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31445              		.loc 1 14780 13 is_stmt 1 view .LVU8791
 31446              		.loc 1 14780 32 is_stmt 0 view .LVU8792
 31447 0024 184B     		ldr	r3, .L2182
 31448 0026 1868     		ldr	r0, [r3]
 31449 0028 0569     		ldr	r5, [r0, #16]
 31450              		.loc 1 14780 24 view .LVU8793
 31451 002a 0123     		movs	r3, #1
 31452 002c 0DF10702 		add	r2, sp, #7
 31453 0030 1021     		movs	r1, #16
 31454 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 878


 31455 0034 A847     		blx	r5
 31456              	.LVL3891:
14781:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_INTR_REG,
14782:Core/Src/bno055.c ****                                                       &data_u8r,
14783:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14784:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 31457              		.loc 1 14784 13 is_stmt 1 view .LVU8794
 31458              		.loc 1 14784 16 is_stmt 0 view .LVU8795
 31459 0036 0546     		mov	r5, r0
 31460 0038 B0B9     		cbnz	r0, .L2175
14785:Core/Src/bno055.c ****             {
14786:Core/Src/bno055.c ****                 /* Write the value of gyro highrate interrupt */
14787:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_INTR, gyro_highrate_u
 31461              		.loc 1 14787 17 is_stmt 1 view .LVU8796
 31462              		.loc 1 14787 28 is_stmt 0 view .LVU8797
 31463 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31464 003e 23F00803 		bic	r3, r3, #8
 31465 0042 5BB2     		sxtb	r3, r3
 31466 0044 E400     		lsls	r4, r4, #3
 31467 0046 04F00804 		and	r4, r4, #8
 31468 004a 1C43     		orrs	r4, r4, r3
 31469              		.loc 1 14787 26 view .LVU8798
 31470 004c 8DF80740 		strb	r4, [sp, #7]
14788:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 31471              		.loc 1 14788 17 is_stmt 1 view .LVU8799
 31472              		.loc 1 14788 37 is_stmt 0 view .LVU8800
 31473 0050 0D4B     		ldr	r3, .L2182
 31474 0052 1868     		ldr	r0, [r3]
 31475              	.LVL3892:
 31476              		.loc 1 14788 37 view .LVU8801
 31477 0054 C468     		ldr	r4, [r0, #12]
 31478              		.loc 1 14788 29 view .LVU8802
 31479 0056 0123     		movs	r3, #1
 31480 0058 0DF10702 		add	r2, sp, #7
 31481 005c 1021     		movs	r1, #16
 31482 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31483 0060 A047     		blx	r4
 31484              	.LVL3893:
 31485              		.loc 1 14788 26 view .LVU8803
 31486 0062 55FA80F5 		uxtab	r5, r5, r0
 31487 0066 6DB2     		sxtb	r5, r5
 31488              	.LVL3894:
 31489              	.L2175:
14789:Core/Src/bno055.c ****                                                             BNO055_GYRO_HIGHRATE_INTR_REG,
14790:Core/Src/bno055.c ****                                                             &data_u8r,
14791:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14792:Core/Src/bno055.c ****             }
14793:Core/Src/bno055.c ****         }
14794:Core/Src/bno055.c ****         else
14795:Core/Src/bno055.c ****         {
14796:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14797:Core/Src/bno055.c ****         }
14798:Core/Src/bno055.c ****     }
14799:Core/Src/bno055.c **** 
14800:Core/Src/bno055.c ****     return com_rslt;
14801:Core/Src/bno055.c **** }
 31490              		.loc 1 14801 1 view .LVU8804
ARM GAS  /tmp/ccWoU29M.s 			page 879


 31491 0068 2846     		mov	r0, r5
 31492 006a 03B0     		add	sp, sp, #12
 31493              	.LCFI867:
 31494              		.cfi_remember_state
 31495              		.cfi_def_cfa_offset 12
 31496              		@ sp needed
 31497 006c 30BD     		pop	{r4, r5, pc}
 31498              	.LVL3895:
 31499              	.L2181:
 31500              	.LCFI868:
 31501              		.cfi_restore_state
14776:Core/Src/bno055.c ****         }
 31502              		.loc 1 14776 13 is_stmt 1 view .LVU8805
14776:Core/Src/bno055.c ****         }
 31503              		.loc 1 14776 23 is_stmt 0 view .LVU8806
 31504 006e 0120     		movs	r0, #1
 31505              	.LVL3896:
14776:Core/Src/bno055.c ****         }
 31506              		.loc 1 14776 23 view .LVU8807
 31507 0070 FFF7FEFF 		bl	bno055_write_page_id
 31508              	.LVL3897:
14778:Core/Src/bno055.c ****         {
 31509              		.loc 1 14778 9 is_stmt 1 view .LVU8808
14778:Core/Src/bno055.c ****         {
 31510              		.loc 1 14778 12 is_stmt 0 view .LVU8809
 31511 0074 0028     		cmp	r0, #0
 31512 0076 D5D0     		beq	.L2177
 31513 0078 CFE7     		b	.L2176
 31514              	.LVL3898:
 31515              	.L2178:
14767:Core/Src/bno055.c ****     }
 31516              		.loc 1 14767 16 view .LVU8810
 31517 007a 6FF07E05 		mvn	r5, #126
 31518 007e F3E7     		b	.L2175
 31519              	.LVL3899:
 31520              	.L2179:
14796:Core/Src/bno055.c ****         }
 31521              		.loc 1 14796 22 view .LVU8811
 31522 0080 4FF0FF35 		mov	r5, #-1
 31523 0084 F0E7     		b	.L2175
 31524              	.L2183:
 31525 0086 00BF     		.align	2
 31526              	.L2182:
 31527 0088 00000000 		.word	.LANCHOR0
 31528              		.cfi_endproc
 31529              	.LFE218:
 31531              		.section	.text.bno055_get_intr_accel_high_g,"ax",%progbits
 31532              		.align	1
 31533              		.global	bno055_get_intr_accel_high_g
 31534              		.syntax unified
 31535              		.thumb
 31536              		.thumb_func
 31537              		.fpu fpv4-sp-d16
 31539              	bno055_get_intr_accel_high_g:
 31540              	.LVL3900:
 31541              	.LFB219:
14802:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 880


14803:Core/Src/bno055.c **** /*!
14804:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg interrupt
14805:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 5
14806:Core/Src/bno055.c ****  *
14807:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt
14808:Core/Src/bno055.c ****  *      accel_high_g_u8    | result
14809:Core/Src/bno055.c ****  *     --------------------  |------------
14810:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14811:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14812:Core/Src/bno055.c ****  *
14813:Core/Src/bno055.c ****  *  @return results of bus communication function
14814:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14815:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14816:Core/Src/bno055.c ****  *
14817:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
14818:Core/Src/bno055.c ****  *  configure the below settings by using
14819:Core/Src/bno055.c ****  *  the following APIs
14820:Core/Src/bno055.c ****  *
14821:Core/Src/bno055.c ****  *  Axis :
14822:Core/Src/bno055.c ****  *
14823:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14824:Core/Src/bno055.c ****  *
14825:Core/Src/bno055.c ****  *  Threshold :
14826:Core/Src/bno055.c ****  *
14827:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14828:Core/Src/bno055.c ****  *
14829:Core/Src/bno055.c ****  *  Duration :
14830:Core/Src/bno055.c ****  *
14831:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
14832:Core/Src/bno055.c ****  *
14833:Core/Src/bno055.c ****  */
14834:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_accel_high_g(u8 *accel_high_g_u8)
14835:Core/Src/bno055.c **** {
 31542              		.loc 1 14835 1 is_stmt 1 view -0
 31543              		.cfi_startproc
 31544              		@ args = 0, pretend = 0, frame = 8
 31545              		@ frame_needed = 0, uses_anonymous_args = 0
 31546              		.loc 1 14835 1 is_stmt 0 view .LVU8813
 31547 0000 30B5     		push	{r4, r5, lr}
 31548              	.LCFI869:
 31549              		.cfi_def_cfa_offset 12
 31550              		.cfi_offset 4, -12
 31551              		.cfi_offset 5, -8
 31552              		.cfi_offset 14, -4
 31553 0002 83B0     		sub	sp, sp, #12
 31554              	.LCFI870:
 31555              		.cfi_def_cfa_offset 24
14836:Core/Src/bno055.c ****     /* Variable used to return value of
14837:Core/Src/bno055.c ****      * communication routine*/
14838:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31556              		.loc 1 14838 5 is_stmt 1 view .LVU8814
 31557              	.LVL3901:
14839:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31558              		.loc 1 14839 5 view .LVU8815
 31559              		.loc 1 14839 8 is_stmt 0 view .LVU8816
 31560 0004 0023     		movs	r3, #0
 31561 0006 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/ccWoU29M.s 			page 881


14840:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31562              		.loc 1 14840 5 is_stmt 1 view .LVU8817
 31563              	.LVL3902:
14841:Core/Src/bno055.c **** 
14842:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14843:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31564              		.loc 1 14843 5 view .LVU8818
 31565              		.loc 1 14843 18 is_stmt 0 view .LVU8819
 31566 000a 144B     		ldr	r3, .L2192
 31567 000c 1B68     		ldr	r3, [r3]
 31568              		.loc 1 14843 8 view .LVU8820
 31569 000e F3B1     		cbz	r3, .L2188
 31570 0010 0446     		mov	r4, r0
14844:Core/Src/bno055.c ****     {
14845:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14846:Core/Src/bno055.c ****     }
14847:Core/Src/bno055.c ****     else
14848:Core/Src/bno055.c ****     {
14849:Core/Src/bno055.c ****         /*condition check for page, accel highg interrupt  is
14850:Core/Src/bno055.c ****          * available in the page one*/
14851:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31571              		.loc 1 14851 9 is_stmt 1 view .LVU8821
 31572              		.loc 1 14851 21 is_stmt 0 view .LVU8822
 31573 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31574              		.loc 1 14851 12 view .LVU8823
 31575 0014 012B     		cmp	r3, #1
 31576 0016 14D1     		bne	.L2191
 31577              	.LVL3903:
 31578              	.L2186:
14852:Core/Src/bno055.c ****         {
14853:Core/Src/bno055.c ****             /* Write page as one */
14854:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14855:Core/Src/bno055.c ****         }
14856:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31579              		.loc 1 14856 53 discriminator 1 view .LVU8824
 31580 0018 104B     		ldr	r3, .L2192
 31581 001a 1B68     		ldr	r3, [r3]
 31582 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31583              		.loc 1 14856 41 discriminator 1 view .LVU8825
 31584 001e 012B     		cmp	r3, #1
 31585 0020 18D1     		bne	.L2189
 31586              	.L2187:
14857:Core/Src/bno055.c ****         {
14858:Core/Src/bno055.c ****             /* Read the value of accel highg interrupt*/
14859:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31587              		.loc 1 14859 13 is_stmt 1 view .LVU8826
 31588              		.loc 1 14859 32 is_stmt 0 view .LVU8827
 31589 0022 0E4B     		ldr	r3, .L2192
 31590 0024 1868     		ldr	r0, [r3]
 31591 0026 0569     		ldr	r5, [r0, #16]
 31592              		.loc 1 14859 24 view .LVU8828
 31593 0028 0123     		movs	r3, #1
 31594 002a 0DF10702 		add	r2, sp, #7
 31595 002e 1021     		movs	r1, #16
 31596 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31597 0032 A847     		blx	r5
 31598              	.LVL3904:
ARM GAS  /tmp/ccWoU29M.s 			page 882


14860:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_INTR_REG,
14861:Core/Src/bno055.c ****                                                       &data_u8r,
14862:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14863:Core/Src/bno055.c ****             *accel_high_g_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_INTR);
 31599              		.loc 1 14863 13 is_stmt 1 view .LVU8829
 31600              		.loc 1 14863 32 is_stmt 0 view .LVU8830
 31601 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31602 0038 C3F34013 		ubfx	r3, r3, #5, #1
 31603              		.loc 1 14863 30 view .LVU8831
 31604 003c 2370     		strb	r3, [r4]
 31605              	.LVL3905:
 31606              	.L2185:
14864:Core/Src/bno055.c ****         }
14865:Core/Src/bno055.c ****         else
14866:Core/Src/bno055.c ****         {
14867:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14868:Core/Src/bno055.c ****         }
14869:Core/Src/bno055.c ****     }
14870:Core/Src/bno055.c **** 
14871:Core/Src/bno055.c ****     return com_rslt;
14872:Core/Src/bno055.c **** }
 31607              		.loc 1 14872 1 view .LVU8832
 31608 003e 03B0     		add	sp, sp, #12
 31609              	.LCFI871:
 31610              		.cfi_remember_state
 31611              		.cfi_def_cfa_offset 12
 31612              		@ sp needed
 31613 0040 30BD     		pop	{r4, r5, pc}
 31614              	.LVL3906:
 31615              	.L2191:
 31616              	.LCFI872:
 31617              		.cfi_restore_state
14854:Core/Src/bno055.c ****         }
 31618              		.loc 1 14854 13 is_stmt 1 view .LVU8833
14854:Core/Src/bno055.c ****         }
 31619              		.loc 1 14854 23 is_stmt 0 view .LVU8834
 31620 0042 0120     		movs	r0, #1
 31621              	.LVL3907:
14854:Core/Src/bno055.c ****         }
 31622              		.loc 1 14854 23 view .LVU8835
 31623 0044 FFF7FEFF 		bl	bno055_write_page_id
 31624              	.LVL3908:
14856:Core/Src/bno055.c ****         {
 31625              		.loc 1 14856 9 is_stmt 1 view .LVU8836
14856:Core/Src/bno055.c ****         {
 31626              		.loc 1 14856 12 is_stmt 0 view .LVU8837
 31627 0048 0028     		cmp	r0, #0
 31628 004a EAD0     		beq	.L2187
 31629 004c E4E7     		b	.L2186
 31630              	.LVL3909:
 31631              	.L2188:
14845:Core/Src/bno055.c ****     }
 31632              		.loc 1 14845 16 view .LVU8838
 31633 004e 6FF07E00 		mvn	r0, #126
 31634              	.LVL3910:
14845:Core/Src/bno055.c ****     }
 31635              		.loc 1 14845 16 view .LVU8839
ARM GAS  /tmp/ccWoU29M.s 			page 883


 31636 0052 F4E7     		b	.L2185
 31637              	.LVL3911:
 31638              	.L2189:
14867:Core/Src/bno055.c ****         }
 31639              		.loc 1 14867 22 view .LVU8840
 31640 0054 4FF0FF30 		mov	r0, #-1
 31641 0058 F1E7     		b	.L2185
 31642              	.L2193:
 31643 005a 00BF     		.align	2
 31644              	.L2192:
 31645 005c 00000000 		.word	.LANCHOR0
 31646              		.cfi_endproc
 31647              	.LFE219:
 31649              		.section	.text.bno055_set_intr_accel_high_g,"ax",%progbits
 31650              		.align	1
 31651              		.global	bno055_set_intr_accel_high_g
 31652              		.syntax unified
 31653              		.thumb
 31654              		.thumb_func
 31655              		.fpu fpv4-sp-d16
 31657              	bno055_set_intr_accel_high_g:
 31658              	.LVL3912:
 31659              	.LFB220:
14873:Core/Src/bno055.c **** 
14874:Core/Src/bno055.c **** /*!
14875:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg interrupt
14876:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 5
14877:Core/Src/bno055.c ****  *
14878:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt
14879:Core/Src/bno055.c ****  *      accel_high_g_u8    | result
14880:Core/Src/bno055.c ****  *     --------------------  |------------
14881:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14882:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14883:Core/Src/bno055.c ****  *
14884:Core/Src/bno055.c ****  *  @return results of bus communication function
14885:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14886:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14887:Core/Src/bno055.c ****  *
14888:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
14889:Core/Src/bno055.c ****  *  configure the below settings by using
14890:Core/Src/bno055.c ****  *  the following APIs
14891:Core/Src/bno055.c ****  *
14892:Core/Src/bno055.c ****  *  Axis :
14893:Core/Src/bno055.c ****  *
14894:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14895:Core/Src/bno055.c ****  *
14896:Core/Src/bno055.c ****  *  Threshold :
14897:Core/Src/bno055.c ****  *
14898:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14899:Core/Src/bno055.c ****  *
14900:Core/Src/bno055.c ****  *  Duration :
14901:Core/Src/bno055.c ****  *
14902:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
14903:Core/Src/bno055.c ****  *
14904:Core/Src/bno055.c ****  */
14905:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_accel_high_g(u8 accel_high_g_u8)
14906:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccWoU29M.s 			page 884


 31660              		.loc 1 14906 1 is_stmt 1 view -0
 31661              		.cfi_startproc
 31662              		@ args = 0, pretend = 0, frame = 8
 31663              		@ frame_needed = 0, uses_anonymous_args = 0
 31664              		.loc 1 14906 1 is_stmt 0 view .LVU8842
 31665 0000 30B5     		push	{r4, r5, lr}
 31666              	.LCFI873:
 31667              		.cfi_def_cfa_offset 12
 31668              		.cfi_offset 4, -12
 31669              		.cfi_offset 5, -8
 31670              		.cfi_offset 14, -4
 31671 0002 83B0     		sub	sp, sp, #12
 31672              	.LCFI874:
 31673              		.cfi_def_cfa_offset 24
14907:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31674              		.loc 1 14907 5 is_stmt 1 view .LVU8843
 31675              	.LVL3913:
14908:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31676              		.loc 1 14908 5 view .LVU8844
 31677              		.loc 1 14908 8 is_stmt 0 view .LVU8845
 31678 0004 0023     		movs	r3, #0
 31679 0006 8DF80730 		strb	r3, [sp, #7]
14909:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31680              		.loc 1 14909 5 is_stmt 1 view .LVU8846
 31681              	.LVL3914:
14910:Core/Src/bno055.c **** 
14911:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14912:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31682              		.loc 1 14912 5 view .LVU8847
 31683              		.loc 1 14912 18 is_stmt 0 view .LVU8848
 31684 000a 1F4B     		ldr	r3, .L2202
 31685 000c 1B68     		ldr	r3, [r3]
 31686              		.loc 1 14912 8 view .LVU8849
 31687 000e 002B     		cmp	r3, #0
 31688 0010 33D0     		beq	.L2198
 31689 0012 0446     		mov	r4, r0
14913:Core/Src/bno055.c ****     {
14914:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14915:Core/Src/bno055.c ****     }
14916:Core/Src/bno055.c ****     else
14917:Core/Src/bno055.c ****     {
14918:Core/Src/bno055.c ****         /*condition check for page, accel highg interrupt is
14919:Core/Src/bno055.c ****          * available in the page one*/
14920:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31690              		.loc 1 14920 9 is_stmt 1 view .LVU8850
 31691              		.loc 1 14920 21 is_stmt 0 view .LVU8851
 31692 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31693              		.loc 1 14920 12 view .LVU8852
 31694 0016 012B     		cmp	r3, #1
 31695 0018 29D1     		bne	.L2201
 31696              	.LVL3915:
 31697              	.L2196:
14921:Core/Src/bno055.c ****         {
14922:Core/Src/bno055.c ****             /* Write page as one */
14923:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14924:Core/Src/bno055.c ****         }
14925:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
ARM GAS  /tmp/ccWoU29M.s 			page 885


 31698              		.loc 1 14925 53 discriminator 1 view .LVU8853
 31699 001a 1B4B     		ldr	r3, .L2202
 31700 001c 1B68     		ldr	r3, [r3]
 31701 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31702              		.loc 1 14925 41 discriminator 1 view .LVU8854
 31703 0020 012B     		cmp	r3, #1
 31704 0022 2DD1     		bne	.L2199
 31705              	.L2197:
14926:Core/Src/bno055.c ****         {
14927:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31706              		.loc 1 14927 13 is_stmt 1 view .LVU8855
 31707              		.loc 1 14927 32 is_stmt 0 view .LVU8856
 31708 0024 184B     		ldr	r3, .L2202
 31709 0026 1868     		ldr	r0, [r3]
 31710 0028 0569     		ldr	r5, [r0, #16]
 31711              		.loc 1 14927 24 view .LVU8857
 31712 002a 0123     		movs	r3, #1
 31713 002c 0DF10702 		add	r2, sp, #7
 31714 0030 1021     		movs	r1, #16
 31715 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31716 0034 A847     		blx	r5
 31717              	.LVL3916:
14928:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_INTR_REG,
14929:Core/Src/bno055.c ****                                                       &data_u8r,
14930:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14931:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 31718              		.loc 1 14931 13 is_stmt 1 view .LVU8858
 31719              		.loc 1 14931 16 is_stmt 0 view .LVU8859
 31720 0036 0546     		mov	r5, r0
 31721 0038 B0B9     		cbnz	r0, .L2195
14932:Core/Src/bno055.c ****             {
14933:Core/Src/bno055.c ****                 /* Write the value of accel highg interrupt*/
14934:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_INTR, accel_high_g_u8)
 31722              		.loc 1 14934 17 is_stmt 1 view .LVU8860
 31723              		.loc 1 14934 28 is_stmt 0 view .LVU8861
 31724 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31725 003e 23F02003 		bic	r3, r3, #32
 31726 0042 5BB2     		sxtb	r3, r3
 31727 0044 6401     		lsls	r4, r4, #5
 31728 0046 04F02004 		and	r4, r4, #32
 31729 004a 1C43     		orrs	r4, r4, r3
 31730              		.loc 1 14934 26 view .LVU8862
 31731 004c 8DF80740 		strb	r4, [sp, #7]
14935:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 31732              		.loc 1 14935 17 is_stmt 1 view .LVU8863
 31733              		.loc 1 14935 37 is_stmt 0 view .LVU8864
 31734 0050 0D4B     		ldr	r3, .L2202
 31735 0052 1868     		ldr	r0, [r3]
 31736              	.LVL3917:
 31737              		.loc 1 14935 37 view .LVU8865
 31738 0054 C468     		ldr	r4, [r0, #12]
 31739              		.loc 1 14935 29 view .LVU8866
 31740 0056 0123     		movs	r3, #1
 31741 0058 0DF10702 		add	r2, sp, #7
 31742 005c 1021     		movs	r1, #16
 31743 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31744 0060 A047     		blx	r4
ARM GAS  /tmp/ccWoU29M.s 			page 886


 31745              	.LVL3918:
 31746              		.loc 1 14935 26 view .LVU8867
 31747 0062 55FA80F5 		uxtab	r5, r5, r0
 31748 0066 6DB2     		sxtb	r5, r5
 31749              	.LVL3919:
 31750              	.L2195:
14936:Core/Src/bno055.c ****                                                             BNO055_ACCEL_HIGH_G_INTR_REG,
14937:Core/Src/bno055.c ****                                                             &data_u8r,
14938:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14939:Core/Src/bno055.c ****             }
14940:Core/Src/bno055.c ****         }
14941:Core/Src/bno055.c ****         else
14942:Core/Src/bno055.c ****         {
14943:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14944:Core/Src/bno055.c ****         }
14945:Core/Src/bno055.c ****     }
14946:Core/Src/bno055.c **** 
14947:Core/Src/bno055.c ****     return com_rslt;
14948:Core/Src/bno055.c **** }
 31751              		.loc 1 14948 1 view .LVU8868
 31752 0068 2846     		mov	r0, r5
 31753 006a 03B0     		add	sp, sp, #12
 31754              	.LCFI875:
 31755              		.cfi_remember_state
 31756              		.cfi_def_cfa_offset 12
 31757              		@ sp needed
 31758 006c 30BD     		pop	{r4, r5, pc}
 31759              	.LVL3920:
 31760              	.L2201:
 31761              	.LCFI876:
 31762              		.cfi_restore_state
14923:Core/Src/bno055.c ****         }
 31763              		.loc 1 14923 13 is_stmt 1 view .LVU8869
14923:Core/Src/bno055.c ****         }
 31764              		.loc 1 14923 23 is_stmt 0 view .LVU8870
 31765 006e 0120     		movs	r0, #1
 31766              	.LVL3921:
14923:Core/Src/bno055.c ****         }
 31767              		.loc 1 14923 23 view .LVU8871
 31768 0070 FFF7FEFF 		bl	bno055_write_page_id
 31769              	.LVL3922:
14925:Core/Src/bno055.c ****         {
 31770              		.loc 1 14925 9 is_stmt 1 view .LVU8872
14925:Core/Src/bno055.c ****         {
 31771              		.loc 1 14925 12 is_stmt 0 view .LVU8873
 31772 0074 0028     		cmp	r0, #0
 31773 0076 D5D0     		beq	.L2197
 31774 0078 CFE7     		b	.L2196
 31775              	.LVL3923:
 31776              	.L2198:
14914:Core/Src/bno055.c ****     }
 31777              		.loc 1 14914 16 view .LVU8874
 31778 007a 6FF07E05 		mvn	r5, #126
 31779 007e F3E7     		b	.L2195
 31780              	.LVL3924:
 31781              	.L2199:
14943:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 887


 31782              		.loc 1 14943 22 view .LVU8875
 31783 0080 4FF0FF35 		mov	r5, #-1
 31784 0084 F0E7     		b	.L2195
 31785              	.L2203:
 31786 0086 00BF     		.align	2
 31787              	.L2202:
 31788 0088 00000000 		.word	.LANCHOR0
 31789              		.cfi_endproc
 31790              	.LFE220:
 31792              		.section	.text.bno055_get_intr_accel_any_motion,"ax",%progbits
 31793              		.align	1
 31794              		.global	bno055_get_intr_accel_any_motion
 31795              		.syntax unified
 31796              		.thumb
 31797              		.thumb_func
 31798              		.fpu fpv4-sp-d16
 31800              	bno055_get_intr_accel_any_motion:
 31801              	.LVL3925:
 31802              	.LFB221:
14949:Core/Src/bno055.c **** 
14950:Core/Src/bno055.c **** /*!
14951:Core/Src/bno055.c ****  *  @brief This API used to read the accel anymotion interrupt
14952:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 6
14953:Core/Src/bno055.c ****  *
14954:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt
14955:Core/Src/bno055.c ****  *  accel_any_motion_u8    | result
14956:Core/Src/bno055.c ****  *     --------------------  |------------
14957:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14958:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14959:Core/Src/bno055.c ****  *
14960:Core/Src/bno055.c ****  *  @return results of bus communication function
14961:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14962:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14963:Core/Src/bno055.c ****  *
14964:Core/Src/bno055.c ****  *  @note While enabling the accel anymotion interrupt
14965:Core/Src/bno055.c ****  *  configure the following settings
14966:Core/Src/bno055.c ****  *
14967:Core/Src/bno055.c ****  *  Axis:
14968:Core/Src/bno055.c ****  *
14969:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
14970:Core/Src/bno055.c ****  *
14971:Core/Src/bno055.c ****  *  Duration:
14972:Core/Src/bno055.c ****  *
14973:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_durn()
14974:Core/Src/bno055.c ****  *
14975:Core/Src/bno055.c ****  * Threshold:
14976:Core/Src/bno055.c ****  *
14977:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_thres()
14978:Core/Src/bno055.c ****  *
14979:Core/Src/bno055.c ****  */
14980:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_accel_any_motion(u8 *accel_any_motion_u8)
14981:Core/Src/bno055.c **** {
 31803              		.loc 1 14981 1 is_stmt 1 view -0
 31804              		.cfi_startproc
 31805              		@ args = 0, pretend = 0, frame = 8
 31806              		@ frame_needed = 0, uses_anonymous_args = 0
 31807              		.loc 1 14981 1 is_stmt 0 view .LVU8877
ARM GAS  /tmp/ccWoU29M.s 			page 888


 31808 0000 30B5     		push	{r4, r5, lr}
 31809              	.LCFI877:
 31810              		.cfi_def_cfa_offset 12
 31811              		.cfi_offset 4, -12
 31812              		.cfi_offset 5, -8
 31813              		.cfi_offset 14, -4
 31814 0002 83B0     		sub	sp, sp, #12
 31815              	.LCFI878:
 31816              		.cfi_def_cfa_offset 24
14982:Core/Src/bno055.c ****     /* Variable used to return value of
14983:Core/Src/bno055.c ****      * communication routine*/
14984:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31817              		.loc 1 14984 5 is_stmt 1 view .LVU8878
 31818              	.LVL3926:
14985:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31819              		.loc 1 14985 5 view .LVU8879
 31820              		.loc 1 14985 8 is_stmt 0 view .LVU8880
 31821 0004 0023     		movs	r3, #0
 31822 0006 8DF80730 		strb	r3, [sp, #7]
14986:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31823              		.loc 1 14986 5 is_stmt 1 view .LVU8881
 31824              	.LVL3927:
14987:Core/Src/bno055.c **** 
14988:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14989:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31825              		.loc 1 14989 5 view .LVU8882
 31826              		.loc 1 14989 18 is_stmt 0 view .LVU8883
 31827 000a 144B     		ldr	r3, .L2212
 31828 000c 1B68     		ldr	r3, [r3]
 31829              		.loc 1 14989 8 view .LVU8884
 31830 000e F3B1     		cbz	r3, .L2208
 31831 0010 0446     		mov	r4, r0
14990:Core/Src/bno055.c ****     {
14991:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14992:Core/Src/bno055.c ****     }
14993:Core/Src/bno055.c ****     else
14994:Core/Src/bno055.c ****     {
14995:Core/Src/bno055.c ****         /*condition check for page, accel anymotion interrupt  is
14996:Core/Src/bno055.c ****          * available in the page one*/
14997:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31832              		.loc 1 14997 9 is_stmt 1 view .LVU8885
 31833              		.loc 1 14997 21 is_stmt 0 view .LVU8886
 31834 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31835              		.loc 1 14997 12 view .LVU8887
 31836 0014 012B     		cmp	r3, #1
 31837 0016 14D1     		bne	.L2211
 31838              	.LVL3928:
 31839              	.L2206:
14998:Core/Src/bno055.c ****         {
14999:Core/Src/bno055.c ****             /* Write page as one */
15000:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15001:Core/Src/bno055.c ****         }
15002:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31840              		.loc 1 15002 53 discriminator 1 view .LVU8888
 31841 0018 104B     		ldr	r3, .L2212
 31842 001a 1B68     		ldr	r3, [r3]
 31843 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 889


 31844              		.loc 1 15002 41 discriminator 1 view .LVU8889
 31845 001e 012B     		cmp	r3, #1
 31846 0020 18D1     		bne	.L2209
 31847              	.L2207:
15003:Core/Src/bno055.c ****         {
15004:Core/Src/bno055.c ****             /* Read the value of accel anymotion interrupt */
15005:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31848              		.loc 1 15005 13 is_stmt 1 view .LVU8890
 31849              		.loc 1 15005 32 is_stmt 0 view .LVU8891
 31850 0022 0E4B     		ldr	r3, .L2212
 31851 0024 1868     		ldr	r0, [r3]
 31852 0026 0569     		ldr	r5, [r0, #16]
 31853              		.loc 1 15005 24 view .LVU8892
 31854 0028 0123     		movs	r3, #1
 31855 002a 0DF10702 		add	r2, sp, #7
 31856 002e 1021     		movs	r1, #16
 31857 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31858 0032 A847     		blx	r5
 31859              	.LVL3929:
15006:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_INTR_REG,
15007:Core/Src/bno055.c ****                                                       &data_u8r,
15008:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15009:Core/Src/bno055.c ****             *accel_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_INTR);
 31860              		.loc 1 15009 13 is_stmt 1 view .LVU8893
 31861              		.loc 1 15009 36 is_stmt 0 view .LVU8894
 31862 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31863 0038 C3F38013 		ubfx	r3, r3, #6, #1
 31864              		.loc 1 15009 34 view .LVU8895
 31865 003c 2370     		strb	r3, [r4]
 31866              	.LVL3930:
 31867              	.L2205:
15010:Core/Src/bno055.c ****         }
15011:Core/Src/bno055.c ****         else
15012:Core/Src/bno055.c ****         {
15013:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15014:Core/Src/bno055.c ****         }
15015:Core/Src/bno055.c ****     }
15016:Core/Src/bno055.c **** 
15017:Core/Src/bno055.c ****     return com_rslt;
15018:Core/Src/bno055.c **** }
 31868              		.loc 1 15018 1 view .LVU8896
 31869 003e 03B0     		add	sp, sp, #12
 31870              	.LCFI879:
 31871              		.cfi_remember_state
 31872              		.cfi_def_cfa_offset 12
 31873              		@ sp needed
 31874 0040 30BD     		pop	{r4, r5, pc}
 31875              	.LVL3931:
 31876              	.L2211:
 31877              	.LCFI880:
 31878              		.cfi_restore_state
15000:Core/Src/bno055.c ****         }
 31879              		.loc 1 15000 13 is_stmt 1 view .LVU8897
15000:Core/Src/bno055.c ****         }
 31880              		.loc 1 15000 23 is_stmt 0 view .LVU8898
 31881 0042 0120     		movs	r0, #1
 31882              	.LVL3932:
ARM GAS  /tmp/ccWoU29M.s 			page 890


15000:Core/Src/bno055.c ****         }
 31883              		.loc 1 15000 23 view .LVU8899
 31884 0044 FFF7FEFF 		bl	bno055_write_page_id
 31885              	.LVL3933:
15002:Core/Src/bno055.c ****         {
 31886              		.loc 1 15002 9 is_stmt 1 view .LVU8900
15002:Core/Src/bno055.c ****         {
 31887              		.loc 1 15002 12 is_stmt 0 view .LVU8901
 31888 0048 0028     		cmp	r0, #0
 31889 004a EAD0     		beq	.L2207
 31890 004c E4E7     		b	.L2206
 31891              	.LVL3934:
 31892              	.L2208:
14991:Core/Src/bno055.c ****     }
 31893              		.loc 1 14991 16 view .LVU8902
 31894 004e 6FF07E00 		mvn	r0, #126
 31895              	.LVL3935:
14991:Core/Src/bno055.c ****     }
 31896              		.loc 1 14991 16 view .LVU8903
 31897 0052 F4E7     		b	.L2205
 31898              	.LVL3936:
 31899              	.L2209:
15013:Core/Src/bno055.c ****         }
 31900              		.loc 1 15013 22 view .LVU8904
 31901 0054 4FF0FF30 		mov	r0, #-1
 31902 0058 F1E7     		b	.L2205
 31903              	.L2213:
 31904 005a 00BF     		.align	2
 31905              	.L2212:
 31906 005c 00000000 		.word	.LANCHOR0
 31907              		.cfi_endproc
 31908              	.LFE221:
 31910              		.section	.text.bno055_set_intr_accel_any_motion,"ax",%progbits
 31911              		.align	1
 31912              		.global	bno055_set_intr_accel_any_motion
 31913              		.syntax unified
 31914              		.thumb
 31915              		.thumb_func
 31916              		.fpu fpv4-sp-d16
 31918              	bno055_set_intr_accel_any_motion:
 31919              	.LVL3937:
 31920              	.LFB222:
15019:Core/Src/bno055.c **** 
15020:Core/Src/bno055.c **** /*!
15021:Core/Src/bno055.c ****  *  @brief This API used to write the accel anymotion interrupt
15022:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 6
15023:Core/Src/bno055.c ****  *
15024:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt
15025:Core/Src/bno055.c ****  *  accel_any_motion_u8    | result
15026:Core/Src/bno055.c ****  *     --------------------  |------------
15027:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
15028:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
15029:Core/Src/bno055.c ****  *
15030:Core/Src/bno055.c ****  *  @return results of bus communication function
15031:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15032:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15033:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 891


15034:Core/Src/bno055.c ****  *  @note While enabling the accel anymotion interrupt
15035:Core/Src/bno055.c ****  *  configure the following settings
15036:Core/Src/bno055.c ****  *
15037:Core/Src/bno055.c ****  *  Axis:
15038:Core/Src/bno055.c ****  *
15039:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
15040:Core/Src/bno055.c ****  *
15041:Core/Src/bno055.c ****  *  Duration:
15042:Core/Src/bno055.c ****  *
15043:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_durn()
15044:Core/Src/bno055.c ****  *
15045:Core/Src/bno055.c ****  *  Threshold:
15046:Core/Src/bno055.c ****  *
15047:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_thres()
15048:Core/Src/bno055.c ****  *
15049:Core/Src/bno055.c ****  */
15050:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_accel_any_motion(u8 accel_any_motion_u8)
15051:Core/Src/bno055.c **** {
 31921              		.loc 1 15051 1 is_stmt 1 view -0
 31922              		.cfi_startproc
 31923              		@ args = 0, pretend = 0, frame = 8
 31924              		@ frame_needed = 0, uses_anonymous_args = 0
 31925              		.loc 1 15051 1 is_stmt 0 view .LVU8906
 31926 0000 30B5     		push	{r4, r5, lr}
 31927              	.LCFI881:
 31928              		.cfi_def_cfa_offset 12
 31929              		.cfi_offset 4, -12
 31930              		.cfi_offset 5, -8
 31931              		.cfi_offset 14, -4
 31932 0002 83B0     		sub	sp, sp, #12
 31933              	.LCFI882:
 31934              		.cfi_def_cfa_offset 24
15052:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31935              		.loc 1 15052 5 is_stmt 1 view .LVU8907
 31936              	.LVL3938:
15053:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31937              		.loc 1 15053 5 view .LVU8908
 31938              		.loc 1 15053 8 is_stmt 0 view .LVU8909
 31939 0004 0023     		movs	r3, #0
 31940 0006 8DF80730 		strb	r3, [sp, #7]
15054:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31941              		.loc 1 15054 5 is_stmt 1 view .LVU8910
 31942              	.LVL3939:
15055:Core/Src/bno055.c **** 
15056:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15057:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31943              		.loc 1 15057 5 view .LVU8911
 31944              		.loc 1 15057 18 is_stmt 0 view .LVU8912
 31945 000a 1F4B     		ldr	r3, .L2222
 31946 000c 1B68     		ldr	r3, [r3]
 31947              		.loc 1 15057 8 view .LVU8913
 31948 000e 002B     		cmp	r3, #0
 31949 0010 33D0     		beq	.L2218
 31950 0012 0446     		mov	r4, r0
15058:Core/Src/bno055.c ****     {
15059:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15060:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 892


15061:Core/Src/bno055.c ****     else
15062:Core/Src/bno055.c ****     {
15063:Core/Src/bno055.c ****         /*condition check for page, accel range is
15064:Core/Src/bno055.c ****          * available in the page one*/
15065:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31951              		.loc 1 15065 9 is_stmt 1 view .LVU8914
 31952              		.loc 1 15065 21 is_stmt 0 view .LVU8915
 31953 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31954              		.loc 1 15065 12 view .LVU8916
 31955 0016 012B     		cmp	r3, #1
 31956 0018 29D1     		bne	.L2221
 31957              	.LVL3940:
 31958              	.L2216:
15066:Core/Src/bno055.c ****         {
15067:Core/Src/bno055.c ****             /* Write page as one */
15068:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15069:Core/Src/bno055.c ****         }
15070:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31959              		.loc 1 15070 53 discriminator 1 view .LVU8917
 31960 001a 1B4B     		ldr	r3, .L2222
 31961 001c 1B68     		ldr	r3, [r3]
 31962 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31963              		.loc 1 15070 41 discriminator 1 view .LVU8918
 31964 0020 012B     		cmp	r3, #1
 31965 0022 2DD1     		bne	.L2219
 31966              	.L2217:
15071:Core/Src/bno055.c ****         {
15072:Core/Src/bno055.c ****             /* Write the value of accel anymotion interrupt */
15073:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31967              		.loc 1 15073 13 is_stmt 1 view .LVU8919
 31968              		.loc 1 15073 32 is_stmt 0 view .LVU8920
 31969 0024 184B     		ldr	r3, .L2222
 31970 0026 1868     		ldr	r0, [r3]
 31971 0028 0569     		ldr	r5, [r0, #16]
 31972              		.loc 1 15073 24 view .LVU8921
 31973 002a 0123     		movs	r3, #1
 31974 002c 0DF10702 		add	r2, sp, #7
 31975 0030 1021     		movs	r1, #16
 31976 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31977 0034 A847     		blx	r5
 31978              	.LVL3941:
15074:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_INTR_REG,
15075:Core/Src/bno055.c ****                                                       &data_u8r,
15076:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15077:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 31979              		.loc 1 15077 13 is_stmt 1 view .LVU8922
 31980              		.loc 1 15077 16 is_stmt 0 view .LVU8923
 31981 0036 0546     		mov	r5, r0
 31982 0038 B0B9     		cbnz	r0, .L2215
15078:Core/Src/bno055.c ****             {
15079:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_INTR, accel_any_mo
 31983              		.loc 1 15079 17 is_stmt 1 view .LVU8924
 31984              		.loc 1 15079 28 is_stmt 0 view .LVU8925
 31985 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31986 003e 23F04003 		bic	r3, r3, #64
 31987 0042 5BB2     		sxtb	r3, r3
 31988 0044 A401     		lsls	r4, r4, #6
ARM GAS  /tmp/ccWoU29M.s 			page 893


 31989 0046 04F04004 		and	r4, r4, #64
 31990 004a 1C43     		orrs	r4, r4, r3
 31991              		.loc 1 15079 26 view .LVU8926
 31992 004c 8DF80740 		strb	r4, [sp, #7]
15080:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 31993              		.loc 1 15080 17 is_stmt 1 view .LVU8927
 31994              		.loc 1 15080 37 is_stmt 0 view .LVU8928
 31995 0050 0D4B     		ldr	r3, .L2222
 31996 0052 1868     		ldr	r0, [r3]
 31997              	.LVL3942:
 31998              		.loc 1 15080 37 view .LVU8929
 31999 0054 C468     		ldr	r4, [r0, #12]
 32000              		.loc 1 15080 29 view .LVU8930
 32001 0056 0123     		movs	r3, #1
 32002 0058 0DF10702 		add	r2, sp, #7
 32003 005c 1021     		movs	r1, #16
 32004 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32005 0060 A047     		blx	r4
 32006              	.LVL3943:
 32007              		.loc 1 15080 26 view .LVU8931
 32008 0062 55FA80F5 		uxtab	r5, r5, r0
 32009 0066 6DB2     		sxtb	r5, r5
 32010              	.LVL3944:
 32011              	.L2215:
15081:Core/Src/bno055.c ****                                                             BNO055_ACCEL_ANY_MOTION_INTR_REG,
15082:Core/Src/bno055.c ****                                                             &data_u8r,
15083:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
15084:Core/Src/bno055.c ****             }
15085:Core/Src/bno055.c ****         }
15086:Core/Src/bno055.c ****         else
15087:Core/Src/bno055.c ****         {
15088:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15089:Core/Src/bno055.c ****         }
15090:Core/Src/bno055.c ****     }
15091:Core/Src/bno055.c **** 
15092:Core/Src/bno055.c ****     return com_rslt;
15093:Core/Src/bno055.c **** }
 32012              		.loc 1 15093 1 view .LVU8932
 32013 0068 2846     		mov	r0, r5
 32014 006a 03B0     		add	sp, sp, #12
 32015              	.LCFI883:
 32016              		.cfi_remember_state
 32017              		.cfi_def_cfa_offset 12
 32018              		@ sp needed
 32019 006c 30BD     		pop	{r4, r5, pc}
 32020              	.LVL3945:
 32021              	.L2221:
 32022              	.LCFI884:
 32023              		.cfi_restore_state
15068:Core/Src/bno055.c ****         }
 32024              		.loc 1 15068 13 is_stmt 1 view .LVU8933
15068:Core/Src/bno055.c ****         }
 32025              		.loc 1 15068 23 is_stmt 0 view .LVU8934
 32026 006e 0120     		movs	r0, #1
 32027              	.LVL3946:
15068:Core/Src/bno055.c ****         }
 32028              		.loc 1 15068 23 view .LVU8935
ARM GAS  /tmp/ccWoU29M.s 			page 894


 32029 0070 FFF7FEFF 		bl	bno055_write_page_id
 32030              	.LVL3947:
15070:Core/Src/bno055.c ****         {
 32031              		.loc 1 15070 9 is_stmt 1 view .LVU8936
15070:Core/Src/bno055.c ****         {
 32032              		.loc 1 15070 12 is_stmt 0 view .LVU8937
 32033 0074 0028     		cmp	r0, #0
 32034 0076 D5D0     		beq	.L2217
 32035 0078 CFE7     		b	.L2216
 32036              	.LVL3948:
 32037              	.L2218:
15059:Core/Src/bno055.c ****     }
 32038              		.loc 1 15059 16 view .LVU8938
 32039 007a 6FF07E05 		mvn	r5, #126
 32040 007e F3E7     		b	.L2215
 32041              	.LVL3949:
 32042              	.L2219:
15088:Core/Src/bno055.c ****         }
 32043              		.loc 1 15088 22 view .LVU8939
 32044 0080 4FF0FF35 		mov	r5, #-1
 32045 0084 F0E7     		b	.L2215
 32046              	.L2223:
 32047 0086 00BF     		.align	2
 32048              	.L2222:
 32049 0088 00000000 		.word	.LANCHOR0
 32050              		.cfi_endproc
 32051              	.LFE222:
 32053              		.section	.text.bno055_get_intr_accel_no_motion,"ax",%progbits
 32054              		.align	1
 32055              		.global	bno055_get_intr_accel_no_motion
 32056              		.syntax unified
 32057              		.thumb
 32058              		.thumb_func
 32059              		.fpu fpv4-sp-d16
 32061              	bno055_get_intr_accel_no_motion:
 32062              	.LVL3950:
 32063              	.LFB223:
15094:Core/Src/bno055.c **** 
15095:Core/Src/bno055.c **** /*!
15096:Core/Src/bno055.c ****  *  @brief This API used to read the accel nomotion interrupt
15097:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 6
15098:Core/Src/bno055.c ****  *
15099:Core/Src/bno055.c ****  *  @param accel_nomotion_u8 : The value of accel nomotion interrupt
15100:Core/Src/bno055.c ****  *    accel_nomotion_u8    | result
15101:Core/Src/bno055.c ****  *     --------------------  |------------
15102:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
15103:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
15104:Core/Src/bno055.c ****  *
15105:Core/Src/bno055.c ****  *  @return results of bus communication function
15106:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15107:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15108:Core/Src/bno055.c ****  *
15109:Core/Src/bno055.c ****  *  @note While enabling the accel nomotion interrupt
15110:Core/Src/bno055.c ****  *  configure the following settings
15111:Core/Src/bno055.c ****  *
15112:Core/Src/bno055.c ****  *  Axis:
15113:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 895


15114:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
15115:Core/Src/bno055.c ****  *
15116:Core/Src/bno055.c ****  *  Threshold :
15117:Core/Src/bno055.c ****  *
15118:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_thres()
15119:Core/Src/bno055.c ****  *
15120:Core/Src/bno055.c ****  *  Duration :
15121:Core/Src/bno055.c ****  *
15122:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_durn()
15123:Core/Src/bno055.c ****  *
15124:Core/Src/bno055.c ****  *  Slow/no motion enable:
15125:Core/Src/bno055.c ****  *
15126:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_enable()
15127:Core/Src/bno055.c ****  *
15128:Core/Src/bno055.c ****  */
15129:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_accel_no_motion(u8 *accel_nomotion_u8)
15130:Core/Src/bno055.c **** {
 32064              		.loc 1 15130 1 is_stmt 1 view -0
 32065              		.cfi_startproc
 32066              		@ args = 0, pretend = 0, frame = 8
 32067              		@ frame_needed = 0, uses_anonymous_args = 0
 32068              		.loc 1 15130 1 is_stmt 0 view .LVU8941
 32069 0000 30B5     		push	{r4, r5, lr}
 32070              	.LCFI885:
 32071              		.cfi_def_cfa_offset 12
 32072              		.cfi_offset 4, -12
 32073              		.cfi_offset 5, -8
 32074              		.cfi_offset 14, -4
 32075 0002 83B0     		sub	sp, sp, #12
 32076              	.LCFI886:
 32077              		.cfi_def_cfa_offset 24
15131:Core/Src/bno055.c ****     /* Variable used to return value of
15132:Core/Src/bno055.c ****      * communication routine*/
15133:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32078              		.loc 1 15133 5 is_stmt 1 view .LVU8942
 32079              	.LVL3951:
15134:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32080              		.loc 1 15134 5 view .LVU8943
 32081              		.loc 1 15134 8 is_stmt 0 view .LVU8944
 32082 0004 0023     		movs	r3, #0
 32083 0006 8DF80730 		strb	r3, [sp, #7]
15135:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32084              		.loc 1 15135 5 is_stmt 1 view .LVU8945
 32085              	.LVL3952:
15136:Core/Src/bno055.c **** 
15137:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15138:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32086              		.loc 1 15138 5 view .LVU8946
 32087              		.loc 1 15138 18 is_stmt 0 view .LVU8947
 32088 000a 134B     		ldr	r3, .L2232
 32089 000c 1B68     		ldr	r3, [r3]
 32090              		.loc 1 15138 8 view .LVU8948
 32091 000e EBB1     		cbz	r3, .L2228
 32092 0010 0446     		mov	r4, r0
15139:Core/Src/bno055.c ****     {
15140:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15141:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 896


15142:Core/Src/bno055.c ****     else
15143:Core/Src/bno055.c ****     {
15144:Core/Src/bno055.c ****         /*condition check for page, accel nomotion interrupt is
15145:Core/Src/bno055.c ****          * available in the page one*/
15146:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 32093              		.loc 1 15146 9 is_stmt 1 view .LVU8949
 32094              		.loc 1 15146 21 is_stmt 0 view .LVU8950
 32095 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32096              		.loc 1 15146 12 view .LVU8951
 32097 0014 012B     		cmp	r3, #1
 32098 0016 13D1     		bne	.L2231
 32099              	.LVL3953:
 32100              	.L2226:
15147:Core/Src/bno055.c ****         {
15148:Core/Src/bno055.c ****             /* Write page as one */
15149:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15150:Core/Src/bno055.c ****         }
15151:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 32101              		.loc 1 15151 53 discriminator 1 view .LVU8952
 32102 0018 0F4B     		ldr	r3, .L2232
 32103 001a 1B68     		ldr	r3, [r3]
 32104 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32105              		.loc 1 15151 41 discriminator 1 view .LVU8953
 32106 001e 012B     		cmp	r3, #1
 32107 0020 17D1     		bne	.L2229
 32108              	.L2227:
15152:Core/Src/bno055.c ****         {
15153:Core/Src/bno055.c ****             /* Read the value of accel nomotion interrupt*/
15154:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 32109              		.loc 1 15154 13 is_stmt 1 view .LVU8954
 32110              		.loc 1 15154 32 is_stmt 0 view .LVU8955
 32111 0022 0D4B     		ldr	r3, .L2232
 32112 0024 1868     		ldr	r0, [r3]
 32113 0026 0569     		ldr	r5, [r0, #16]
 32114              		.loc 1 15154 24 view .LVU8956
 32115 0028 0123     		movs	r3, #1
 32116 002a 0DF10702 		add	r2, sp, #7
 32117 002e 1021     		movs	r1, #16
 32118 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32119 0032 A847     		blx	r5
 32120              	.LVL3954:
15155:Core/Src/bno055.c ****                                                       BNO055_ACCEL_NO_MOTION_INTR_REG,
15156:Core/Src/bno055.c ****                                                       &data_u8r,
15157:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15158:Core/Src/bno055.c ****             *accel_nomotion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_NO_MOTION_INTR);
 32121              		.loc 1 15158 13 is_stmt 1 view .LVU8957
 32122              		.loc 1 15158 34 is_stmt 0 view .LVU8958
 32123 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32124 0038 DB09     		lsrs	r3, r3, #7
 32125              		.loc 1 15158 32 view .LVU8959
 32126 003a 2370     		strb	r3, [r4]
 32127              	.LVL3955:
 32128              	.L2225:
15159:Core/Src/bno055.c ****         }
15160:Core/Src/bno055.c ****         else
15161:Core/Src/bno055.c ****         {
15162:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 897


15163:Core/Src/bno055.c ****         }
15164:Core/Src/bno055.c ****     }
15165:Core/Src/bno055.c **** 
15166:Core/Src/bno055.c ****     return com_rslt;
15167:Core/Src/bno055.c **** }
 32129              		.loc 1 15167 1 view .LVU8960
 32130 003c 03B0     		add	sp, sp, #12
 32131              	.LCFI887:
 32132              		.cfi_remember_state
 32133              		.cfi_def_cfa_offset 12
 32134              		@ sp needed
 32135 003e 30BD     		pop	{r4, r5, pc}
 32136              	.LVL3956:
 32137              	.L2231:
 32138              	.LCFI888:
 32139              		.cfi_restore_state
15149:Core/Src/bno055.c ****         }
 32140              		.loc 1 15149 13 is_stmt 1 view .LVU8961
15149:Core/Src/bno055.c ****         }
 32141              		.loc 1 15149 23 is_stmt 0 view .LVU8962
 32142 0040 0120     		movs	r0, #1
 32143              	.LVL3957:
15149:Core/Src/bno055.c ****         }
 32144              		.loc 1 15149 23 view .LVU8963
 32145 0042 FFF7FEFF 		bl	bno055_write_page_id
 32146              	.LVL3958:
15151:Core/Src/bno055.c ****         {
 32147              		.loc 1 15151 9 is_stmt 1 view .LVU8964
15151:Core/Src/bno055.c ****         {
 32148              		.loc 1 15151 12 is_stmt 0 view .LVU8965
 32149 0046 0028     		cmp	r0, #0
 32150 0048 EBD0     		beq	.L2227
 32151 004a E5E7     		b	.L2226
 32152              	.LVL3959:
 32153              	.L2228:
15140:Core/Src/bno055.c ****     }
 32154              		.loc 1 15140 16 view .LVU8966
 32155 004c 6FF07E00 		mvn	r0, #126
 32156              	.LVL3960:
15140:Core/Src/bno055.c ****     }
 32157              		.loc 1 15140 16 view .LVU8967
 32158 0050 F4E7     		b	.L2225
 32159              	.LVL3961:
 32160              	.L2229:
15162:Core/Src/bno055.c ****         }
 32161              		.loc 1 15162 22 view .LVU8968
 32162 0052 4FF0FF30 		mov	r0, #-1
 32163 0056 F1E7     		b	.L2225
 32164              	.L2233:
 32165              		.align	2
 32166              	.L2232:
 32167 0058 00000000 		.word	.LANCHOR0
 32168              		.cfi_endproc
 32169              	.LFE223:
 32171              		.section	.text.bno055_set_intr_accel_no_motion,"ax",%progbits
 32172              		.align	1
 32173              		.global	bno055_set_intr_accel_no_motion
ARM GAS  /tmp/ccWoU29M.s 			page 898


 32174              		.syntax unified
 32175              		.thumb
 32176              		.thumb_func
 32177              		.fpu fpv4-sp-d16
 32179              	bno055_set_intr_accel_no_motion:
 32180              	.LVL3962:
 32181              	.LFB224:
15168:Core/Src/bno055.c **** 
15169:Core/Src/bno055.c **** /*!
15170:Core/Src/bno055.c ****  *  @brief This API used to write the accel nomotion interrupt
15171:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 6
15172:Core/Src/bno055.c ****  *
15173:Core/Src/bno055.c ****  *  @param accel_nomotion_u8 : The value of accel nomotion interrupt
15174:Core/Src/bno055.c ****  *    accel_nomotion_u8    | result
15175:Core/Src/bno055.c ****  *     --------------------  |------------
15176:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
15177:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
15178:Core/Src/bno055.c ****  *
15179:Core/Src/bno055.c ****  *  @return results of bus communication function
15180:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15181:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15182:Core/Src/bno055.c ****  *
15183:Core/Src/bno055.c ****  *  @note While enabling the accel nomotion interrupt
15184:Core/Src/bno055.c ****  *  configure the following settings
15185:Core/Src/bno055.c ****  *
15186:Core/Src/bno055.c ****  *  Axis:
15187:Core/Src/bno055.c ****  *
15188:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
15189:Core/Src/bno055.c ****  *
15190:Core/Src/bno055.c ****  *  Threshold :
15191:Core/Src/bno055.c ****  *
15192:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_thres()
15193:Core/Src/bno055.c ****  *
15194:Core/Src/bno055.c ****  *  Duration :
15195:Core/Src/bno055.c ****  *
15196:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_durn()
15197:Core/Src/bno055.c ****  *
15198:Core/Src/bno055.c ****  *  Slow/no motion enable:
15199:Core/Src/bno055.c ****  *
15200:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_enable()
15201:Core/Src/bno055.c ****  *
15202:Core/Src/bno055.c ****  */
15203:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_accel_no_motion(u8 accel_nomotion_u8)
15204:Core/Src/bno055.c **** {
 32182              		.loc 1 15204 1 is_stmt 1 view -0
 32183              		.cfi_startproc
 32184              		@ args = 0, pretend = 0, frame = 8
 32185              		@ frame_needed = 0, uses_anonymous_args = 0
 32186              		.loc 1 15204 1 is_stmt 0 view .LVU8970
 32187 0000 30B5     		push	{r4, r5, lr}
 32188              	.LCFI889:
 32189              		.cfi_def_cfa_offset 12
 32190              		.cfi_offset 4, -12
 32191              		.cfi_offset 5, -8
 32192              		.cfi_offset 14, -4
 32193 0002 83B0     		sub	sp, sp, #12
 32194              	.LCFI890:
ARM GAS  /tmp/ccWoU29M.s 			page 899


 32195              		.cfi_def_cfa_offset 24
15205:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32196              		.loc 1 15205 5 is_stmt 1 view .LVU8971
 32197              	.LVL3963:
15206:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32198              		.loc 1 15206 5 view .LVU8972
 32199              		.loc 1 15206 8 is_stmt 0 view .LVU8973
 32200 0004 0023     		movs	r3, #0
 32201 0006 8DF80730 		strb	r3, [sp, #7]
15207:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32202              		.loc 1 15207 5 is_stmt 1 view .LVU8974
 32203              	.LVL3964:
15208:Core/Src/bno055.c **** 
15209:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15210:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32204              		.loc 1 15210 5 view .LVU8975
 32205              		.loc 1 15210 18 is_stmt 0 view .LVU8976
 32206 000a 1D4B     		ldr	r3, .L2242
 32207 000c 1B68     		ldr	r3, [r3]
 32208              		.loc 1 15210 8 view .LVU8977
 32209 000e 002B     		cmp	r3, #0
 32210 0010 30D0     		beq	.L2238
 32211 0012 0446     		mov	r4, r0
15211:Core/Src/bno055.c ****     {
15212:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15213:Core/Src/bno055.c ****     }
15214:Core/Src/bno055.c ****     else
15215:Core/Src/bno055.c ****     {
15216:Core/Src/bno055.c ****         /*condition check for page,
15217:Core/Src/bno055.c ****          *  accel nomotion interrupt is
15218:Core/Src/bno055.c ****          *  available in the page one*/
15219:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 32212              		.loc 1 15219 9 is_stmt 1 view .LVU8978
 32213              		.loc 1 15219 21 is_stmt 0 view .LVU8979
 32214 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32215              		.loc 1 15219 12 view .LVU8980
 32216 0016 012B     		cmp	r3, #1
 32217 0018 26D1     		bne	.L2241
 32218              	.LVL3965:
 32219              	.L2236:
15220:Core/Src/bno055.c ****         {
15221:Core/Src/bno055.c ****             /* Write page as one */
15222:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15223:Core/Src/bno055.c ****         }
15224:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 32220              		.loc 1 15224 53 discriminator 1 view .LVU8981
 32221 001a 194B     		ldr	r3, .L2242
 32222 001c 1B68     		ldr	r3, [r3]
 32223 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32224              		.loc 1 15224 41 discriminator 1 view .LVU8982
 32225 0020 012B     		cmp	r3, #1
 32226 0022 2AD1     		bne	.L2239
 32227              	.L2237:
15225:Core/Src/bno055.c ****         {
15226:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 32228              		.loc 1 15226 13 is_stmt 1 view .LVU8983
 32229              		.loc 1 15226 32 is_stmt 0 view .LVU8984
ARM GAS  /tmp/ccWoU29M.s 			page 900


 32230 0024 164B     		ldr	r3, .L2242
 32231 0026 1868     		ldr	r0, [r3]
 32232 0028 0569     		ldr	r5, [r0, #16]
 32233              		.loc 1 15226 24 view .LVU8985
 32234 002a 0123     		movs	r3, #1
 32235 002c 0DF10702 		add	r2, sp, #7
 32236 0030 1021     		movs	r1, #16
 32237 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32238 0034 A847     		blx	r5
 32239              	.LVL3966:
15227:Core/Src/bno055.c ****                                                       BNO055_ACCEL_NO_MOTION_INTR_REG,
15228:Core/Src/bno055.c ****                                                       &data_u8r,
15229:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15230:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 32240              		.loc 1 15230 13 is_stmt 1 view .LVU8986
 32241              		.loc 1 15230 16 is_stmt 0 view .LVU8987
 32242 0036 0546     		mov	r5, r0
 32243 0038 98B9     		cbnz	r0, .L2235
15231:Core/Src/bno055.c ****             {
15232:Core/Src/bno055.c ****                 /* Write the value of
15233:Core/Src/bno055.c ****                  * accel nomotion interrupt */
15234:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_NO_MOTION_INTR, accel_nomotio
 32244              		.loc 1 15234 17 is_stmt 1 view .LVU8988
 32245              		.loc 1 15234 28 is_stmt 0 view .LVU8989
 32246 003a 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 32247              	.LVL3967:
 32248              		.loc 1 15234 28 view .LVU8990
 32249 003e 00F07F00 		and	r0, r0, #127
 32250 0042 40EAC414 		orr	r4, r0, r4, lsl #7
 32251              		.loc 1 15234 26 view .LVU8991
 32252 0046 8DF80740 		strb	r4, [sp, #7]
15235:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32253              		.loc 1 15235 17 is_stmt 1 view .LVU8992
 32254              		.loc 1 15235 37 is_stmt 0 view .LVU8993
 32255 004a 0D4B     		ldr	r3, .L2242
 32256 004c 1868     		ldr	r0, [r3]
 32257 004e C468     		ldr	r4, [r0, #12]
 32258              		.loc 1 15235 29 view .LVU8994
 32259 0050 0123     		movs	r3, #1
 32260 0052 0DF10702 		add	r2, sp, #7
 32261 0056 1021     		movs	r1, #16
 32262 0058 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32263 005a A047     		blx	r4
 32264              	.LVL3968:
 32265              		.loc 1 15235 26 view .LVU8995
 32266 005c 55FA80F5 		uxtab	r5, r5, r0
 32267 0060 6DB2     		sxtb	r5, r5
 32268              	.LVL3969:
 32269              	.L2235:
15236:Core/Src/bno055.c ****                                                             BNO055_ACCEL_NO_MOTION_INTR_REG,
15237:Core/Src/bno055.c ****                                                             &data_u8r,
15238:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
15239:Core/Src/bno055.c ****             }
15240:Core/Src/bno055.c ****         }
15241:Core/Src/bno055.c ****         else
15242:Core/Src/bno055.c ****         {
15243:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 901


15244:Core/Src/bno055.c ****         }
15245:Core/Src/bno055.c ****     }
15246:Core/Src/bno055.c **** 
15247:Core/Src/bno055.c ****     return com_rslt;
15248:Core/Src/bno055.c **** }
 32270              		.loc 1 15248 1 view .LVU8996
 32271 0062 2846     		mov	r0, r5
 32272 0064 03B0     		add	sp, sp, #12
 32273              	.LCFI891:
 32274              		.cfi_remember_state
 32275              		.cfi_def_cfa_offset 12
 32276              		@ sp needed
 32277 0066 30BD     		pop	{r4, r5, pc}
 32278              	.LVL3970:
 32279              	.L2241:
 32280              	.LCFI892:
 32281              		.cfi_restore_state
15222:Core/Src/bno055.c ****         }
 32282              		.loc 1 15222 13 is_stmt 1 view .LVU8997
15222:Core/Src/bno055.c ****         }
 32283              		.loc 1 15222 23 is_stmt 0 view .LVU8998
 32284 0068 0120     		movs	r0, #1
 32285              	.LVL3971:
15222:Core/Src/bno055.c ****         }
 32286              		.loc 1 15222 23 view .LVU8999
 32287 006a FFF7FEFF 		bl	bno055_write_page_id
 32288              	.LVL3972:
15224:Core/Src/bno055.c ****         {
 32289              		.loc 1 15224 9 is_stmt 1 view .LVU9000
15224:Core/Src/bno055.c ****         {
 32290              		.loc 1 15224 12 is_stmt 0 view .LVU9001
 32291 006e 0028     		cmp	r0, #0
 32292 0070 D8D0     		beq	.L2237
 32293 0072 D2E7     		b	.L2236
 32294              	.LVL3973:
 32295              	.L2238:
15212:Core/Src/bno055.c ****     }
 32296              		.loc 1 15212 16 view .LVU9002
 32297 0074 6FF07E05 		mvn	r5, #126
 32298 0078 F3E7     		b	.L2235
 32299              	.LVL3974:
 32300              	.L2239:
15243:Core/Src/bno055.c ****         }
 32301              		.loc 1 15243 22 view .LVU9003
 32302 007a 4FF0FF35 		mov	r5, #-1
 32303 007e F0E7     		b	.L2235
 32304              	.L2243:
 32305              		.align	2
 32306              	.L2242:
 32307 0080 00000000 		.word	.LANCHOR0
 32308              		.cfi_endproc
 32309              	.LFE224:
 32311              		.section	.text.bno055_get_accel_any_motion_thres,"ax",%progbits
 32312              		.align	1
 32313              		.global	bno055_get_accel_any_motion_thres
 32314              		.syntax unified
 32315              		.thumb
ARM GAS  /tmp/ccWoU29M.s 			page 902


 32316              		.thumb_func
 32317              		.fpu fpv4-sp-d16
 32319              	bno055_get_accel_any_motion_thres:
 32320              	.LVL3975:
 32321              	.LFB225:
15249:Core/Src/bno055.c **** 
15250:Core/Src/bno055.c **** /*!
15251:Core/Src/bno055.c ****  *  @brief This API used to read the accel any motion threshold
15252:Core/Src/bno055.c ****  *  from page one register from 0x11 bit 0 to 7
15253:Core/Src/bno055.c ****  *
15254:Core/Src/bno055.c ****  *  @param accel_any_motion_thres_u8 : The value of any motion threshold
15255:Core/Src/bno055.c ****  *  accel_any_motion_thres_u8 | result
15256:Core/Src/bno055.c ****  *  ------------------------    | -------------
15257:Core/Src/bno055.c ****  *              0x01            | BNO055_BIT_ENABLE
15258:Core/Src/bno055.c ****  *              0x00            | BNO055_BIT_DISABLE
15259:Core/Src/bno055.c ****  *
15260:Core/Src/bno055.c ****  *  @return results of bus communication function
15261:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15262:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15263:Core/Src/bno055.c ****  *
15264:Core/Src/bno055.c ****  *  @note Accel anymotion threshold dependent on the
15265:Core/Src/bno055.c ****  *  range values
15266:Core/Src/bno055.c ****  *
15267:Core/Src/bno055.c ****  *  accel_range_u8 |    threshold | LSB
15268:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
15269:Core/Src/bno055.c ****  *     2g        |    3.19mg     |   1LSB
15270:Core/Src/bno055.c ****  *     4g        |    7.81mg     |   1LSB
15271:Core/Src/bno055.c ****  *     8g        |    15.63mg    |   1LSB
15272:Core/Src/bno055.c ****  *     16g       |    31.25mg    |   1LSB
15273:Core/Src/bno055.c ****  *
15274:Core/Src/bno055.c ****  */
15275:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_any_motion_thres(u8 *accel_any_motion_thres_u8)
15276:Core/Src/bno055.c **** {
 32322              		.loc 1 15276 1 is_stmt 1 view -0
 32323              		.cfi_startproc
 32324              		@ args = 0, pretend = 0, frame = 8
 32325              		@ frame_needed = 0, uses_anonymous_args = 0
 32326              		.loc 1 15276 1 is_stmt 0 view .LVU9005
 32327 0000 70B5     		push	{r4, r5, r6, lr}
 32328              	.LCFI893:
 32329              		.cfi_def_cfa_offset 16
 32330              		.cfi_offset 4, -16
 32331              		.cfi_offset 5, -12
 32332              		.cfi_offset 6, -8
 32333              		.cfi_offset 14, -4
 32334 0002 82B0     		sub	sp, sp, #8
 32335              	.LCFI894:
 32336              		.cfi_def_cfa_offset 24
15277:Core/Src/bno055.c ****     /* Variable used to return value of
15278:Core/Src/bno055.c ****      * communication routine*/
15279:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32337              		.loc 1 15279 5 is_stmt 1 view .LVU9006
 32338              	.LVL3976:
15280:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32339              		.loc 1 15280 5 view .LVU9007
 32340              		.loc 1 15280 8 is_stmt 0 view .LVU9008
 32341 0004 0023     		movs	r3, #0
ARM GAS  /tmp/ccWoU29M.s 			page 903


 32342 0006 8DF80730 		strb	r3, [sp, #7]
15281:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32343              		.loc 1 15281 5 is_stmt 1 view .LVU9009
 32344              	.LVL3977:
15282:Core/Src/bno055.c **** 
15283:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15284:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32345              		.loc 1 15284 5 view .LVU9010
 32346              		.loc 1 15284 18 is_stmt 0 view .LVU9011
 32347 000a 134B     		ldr	r3, .L2252
 32348 000c 1B68     		ldr	r3, [r3]
 32349              		.loc 1 15284 8 view .LVU9012
 32350 000e E3B1     		cbz	r3, .L2248
 32351 0010 0546     		mov	r5, r0
15285:Core/Src/bno055.c ****     {
15286:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15287:Core/Src/bno055.c ****     }
15288:Core/Src/bno055.c ****     else
15289:Core/Src/bno055.c ****     {
15290:Core/Src/bno055.c ****         /*condition check for page, accel any motion threshold  is
15291:Core/Src/bno055.c ****          * available in the page one*/
15292:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 32352              		.loc 1 15292 9 is_stmt 1 view .LVU9013
 32353              		.loc 1 15292 21 is_stmt 0 view .LVU9014
 32354 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32355              		.loc 1 15292 12 view .LVU9015
 32356 0014 012B     		cmp	r3, #1
 32357 0016 12D1     		bne	.L2251
 32358              	.LVL3978:
 32359              	.L2246:
15293:Core/Src/bno055.c ****         {
15294:Core/Src/bno055.c ****             /* Write page as one */
15295:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15296:Core/Src/bno055.c ****         }
15297:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 32360              		.loc 1 15297 53 discriminator 1 view .LVU9016
 32361 0018 0F4B     		ldr	r3, .L2252
 32362 001a 1B68     		ldr	r3, [r3]
 32363 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32364              		.loc 1 15297 41 discriminator 1 view .LVU9017
 32365 001e 012B     		cmp	r3, #1
 32366 0020 16D1     		bne	.L2249
 32367              	.L2247:
15298:Core/Src/bno055.c ****         {
15299:Core/Src/bno055.c ****             /* Read the value of accel any motion threshold */
15300:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 32368              		.loc 1 15300 13 is_stmt 1 view .LVU9018
 32369              		.loc 1 15300 32 is_stmt 0 view .LVU9019
 32370 0022 0D4B     		ldr	r3, .L2252
 32371 0024 1C68     		ldr	r4, [r3]
 32372 0026 2669     		ldr	r6, [r4, #16]
 32373              		.loc 1 15300 24 view .LVU9020
 32374 0028 0123     		movs	r3, #1
 32375 002a 0DF10702 		add	r2, sp, #7
 32376 002e 1121     		movs	r1, #17
 32377 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 32378 0032 B047     		blx	r6
ARM GAS  /tmp/ccWoU29M.s 			page 904


 32379              	.LVL3979:
15301:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_THRES_REG,
15302:Core/Src/bno055.c ****                                                       &data_u8r,
15303:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15304:Core/Src/bno055.c ****             *accel_any_motion_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_THRE
 32380              		.loc 1 15304 13 is_stmt 1 view .LVU9021
 32381              		.loc 1 15304 40 is_stmt 0 view .LVU9022
 32382 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32383 0038 2B70     		strb	r3, [r5]
 32384              	.LVL3980:
 32385              	.L2245:
15305:Core/Src/bno055.c ****         }
15306:Core/Src/bno055.c ****         else
15307:Core/Src/bno055.c ****         {
15308:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15309:Core/Src/bno055.c ****         }
15310:Core/Src/bno055.c ****     }
15311:Core/Src/bno055.c **** 
15312:Core/Src/bno055.c ****     return com_rslt;
15313:Core/Src/bno055.c **** }
 32386              		.loc 1 15313 1 view .LVU9023
 32387 003a 02B0     		add	sp, sp, #8
 32388              	.LCFI895:
 32389              		.cfi_remember_state
 32390              		.cfi_def_cfa_offset 16
 32391              		@ sp needed
 32392 003c 70BD     		pop	{r4, r5, r6, pc}
 32393              	.LVL3981:
 32394              	.L2251:
 32395              	.LCFI896:
 32396              		.cfi_restore_state
15295:Core/Src/bno055.c ****         }
 32397              		.loc 1 15295 13 is_stmt 1 view .LVU9024
15295:Core/Src/bno055.c ****         }
 32398              		.loc 1 15295 23 is_stmt 0 view .LVU9025
 32399 003e 0120     		movs	r0, #1
 32400              	.LVL3982:
15295:Core/Src/bno055.c ****         }
 32401              		.loc 1 15295 23 view .LVU9026
 32402 0040 FFF7FEFF 		bl	bno055_write_page_id
 32403              	.LVL3983:
15297:Core/Src/bno055.c ****         {
 32404              		.loc 1 15297 9 is_stmt 1 view .LVU9027
15297:Core/Src/bno055.c ****         {
 32405              		.loc 1 15297 12 is_stmt 0 view .LVU9028
 32406 0044 0028     		cmp	r0, #0
 32407 0046 ECD0     		beq	.L2247
 32408 0048 E6E7     		b	.L2246
 32409              	.LVL3984:
 32410              	.L2248:
15286:Core/Src/bno055.c ****     }
 32411              		.loc 1 15286 16 view .LVU9029
 32412 004a 6FF07E00 		mvn	r0, #126
 32413              	.LVL3985:
15286:Core/Src/bno055.c ****     }
 32414              		.loc 1 15286 16 view .LVU9030
 32415 004e F4E7     		b	.L2245
ARM GAS  /tmp/ccWoU29M.s 			page 905


 32416              	.LVL3986:
 32417              	.L2249:
15308:Core/Src/bno055.c ****         }
 32418              		.loc 1 15308 22 view .LVU9031
 32419 0050 4FF0FF30 		mov	r0, #-1
 32420 0054 F1E7     		b	.L2245
 32421              	.L2253:
 32422 0056 00BF     		.align	2
 32423              	.L2252:
 32424 0058 00000000 		.word	.LANCHOR0
 32425              		.cfi_endproc
 32426              	.LFE225:
 32428              		.section	.text.bno055_set_accel_any_motion_thres,"ax",%progbits
 32429              		.align	1
 32430              		.global	bno055_set_accel_any_motion_thres
 32431              		.syntax unified
 32432              		.thumb
 32433              		.thumb_func
 32434              		.fpu fpv4-sp-d16
 32436              	bno055_set_accel_any_motion_thres:
 32437              	.LVL3987:
 32438              	.LFB226:
15314:Core/Src/bno055.c **** 
15315:Core/Src/bno055.c **** /*!
15316:Core/Src/bno055.c ****  *  @brief This API used to write the accel any motion threshold
15317:Core/Src/bno055.c ****  *  from page one register from 0x11 bit 0 to 7
15318:Core/Src/bno055.c ****  *
15319:Core/Src/bno055.c ****  *  @param accel_any_motion_thres_u8 : The value of any motion threshold
15320:Core/Src/bno055.c ****  *  accel_any_motion_thres_u8 | result
15321:Core/Src/bno055.c ****  *  ------------------------    | -------------
15322:Core/Src/bno055.c ****  *              0x01            | BNO055_BIT_ENABLE
15323:Core/Src/bno055.c ****  *              0x00            | BNO055_BIT_DISABLE
15324:Core/Src/bno055.c ****  *
15325:Core/Src/bno055.c ****  *  @return results of bus communication function
15326:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15327:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15328:Core/Src/bno055.c ****  *
15329:Core/Src/bno055.c ****  *  @note Accel anymotion threshold dependent on the
15330:Core/Src/bno055.c ****  *  range values
15331:Core/Src/bno055.c ****  *
15332:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
15333:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
15334:Core/Src/bno055.c ****  *     2g        |    3.19mg     |   1LSB
15335:Core/Src/bno055.c ****  *     4g        |    7.81mg     |   1LSB
15336:Core/Src/bno055.c ****  *     8g        |    15.63mg    |   1LSB
15337:Core/Src/bno055.c ****  *     16g       |    31.25mg    |   1LSB
15338:Core/Src/bno055.c ****  *
15339:Core/Src/bno055.c ****  */
15340:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_any_motion_thres(u8 accel_any_motion_thres_u8)
15341:Core/Src/bno055.c **** {
 32439              		.loc 1 15341 1 is_stmt 1 view -0
 32440              		.cfi_startproc
 32441              		@ args = 0, pretend = 0, frame = 8
 32442              		@ frame_needed = 0, uses_anonymous_args = 0
 32443              		.loc 1 15341 1 is_stmt 0 view .LVU9033
 32444 0000 30B5     		push	{r4, r5, lr}
 32445              	.LCFI897:
ARM GAS  /tmp/ccWoU29M.s 			page 906


 32446              		.cfi_def_cfa_offset 12
 32447              		.cfi_offset 4, -12
 32448              		.cfi_offset 5, -8
 32449              		.cfi_offset 14, -4
 32450 0002 83B0     		sub	sp, sp, #12
 32451              	.LCFI898:
 32452              		.cfi_def_cfa_offset 24
15342:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32453              		.loc 1 15342 5 is_stmt 1 view .LVU9034
 32454              	.LVL3988:
15343:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32455              		.loc 1 15343 5 view .LVU9035
 32456              		.loc 1 15343 8 is_stmt 0 view .LVU9036
 32457 0004 0023     		movs	r3, #0
 32458 0006 8DF80730 		strb	r3, [sp, #7]
15344:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32459              		.loc 1 15344 5 is_stmt 1 view .LVU9037
 32460              	.LVL3989:
15345:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 32461              		.loc 1 15345 5 view .LVU9038
15346:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 32462              		.loc 1 15346 5 view .LVU9039
 32463              		.loc 1 15346 8 is_stmt 0 view .LVU9040
 32464 000a 8DF80630 		strb	r3, [sp, #6]
15347:Core/Src/bno055.c **** 
15348:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15349:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32465              		.loc 1 15349 5 is_stmt 1 view .LVU9041
 32466              		.loc 1 15349 18 is_stmt 0 view .LVU9042
 32467 000e 254B     		ldr	r3, .L2266
 32468 0010 1B68     		ldr	r3, [r3]
 32469              		.loc 1 15349 8 view .LVU9043
 32470 0012 002B     		cmp	r3, #0
 32471 0014 42D0     		beq	.L2258
 32472 0016 0546     		mov	r5, r0
15350:Core/Src/bno055.c ****     {
15351:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15352:Core/Src/bno055.c ****     }
15353:Core/Src/bno055.c ****     else
15354:Core/Src/bno055.c ****     {
15355:Core/Src/bno055.c ****         /* The write operation effective only if the operation
15356:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
15357:Core/Src/bno055.c ****          * current operation mode and set the config mode */
15358:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 32473              		.loc 1 15358 9 is_stmt 1 view .LVU9044
 32474              		.loc 1 15358 19 is_stmt 0 view .LVU9045
 32475 0018 0DF10600 		add	r0, sp, #6
 32476              	.LVL3990:
 32477              		.loc 1 15358 19 view .LVU9046
 32478 001c FFF7FEFF 		bl	bno055_get_operation_mode
 32479              	.LVL3991:
15359:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 32480              		.loc 1 15359 9 is_stmt 1 view .LVU9047
 32481              		.loc 1 15359 12 is_stmt 0 view .LVU9048
 32482 0020 0446     		mov	r4, r0
 32483 0022 50BB     		cbnz	r0, .L2259
15360:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 907


15361:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 32484              		.loc 1 15361 13 is_stmt 1 view .LVU9049
 32485              		.loc 1 15361 32 is_stmt 0 view .LVU9050
 32486 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 32487              		.loc 1 15361 16 view .LVU9051
 32488 0028 1BB9     		cbnz	r3, .L2263
 32489              	.LVL3992:
 32490              	.L2257:
15362:Core/Src/bno055.c ****             {
15363:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
15364:Core/Src/bno055.c ****             }
15365:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 32491              		.loc 1 15365 13 is_stmt 1 view .LVU9052
 32492              		.loc 1 15365 16 is_stmt 0 view .LVU9053
 32493 002a 44B1     		cbz	r4, .L2264
15366:Core/Src/bno055.c ****             {
15367:Core/Src/bno055.c ****                 /* Write page as one */
15368:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15369:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
15370:Core/Src/bno055.c ****                 {
15371:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15372:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
15373:Core/Src/bno055.c ****                                                               &data_u8r,
15374:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15375:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
15376:Core/Src/bno055.c ****                     {
15377:Core/Src/bno055.c ****                         /* Write the value of
15378:Core/Src/bno055.c ****                          * accel any motion threshold*/
15379:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
15380:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_THRES,
15381:Core/Src/bno055.c ****                                                        accel_any_motion_thres_u8);
15382:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15383:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
15384:Core/Src/bno055.c ****                                                                     &data_u8r,
15385:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
15386:Core/Src/bno055.c ****                     }
15387:Core/Src/bno055.c ****                 }
15388:Core/Src/bno055.c ****                 else
15389:Core/Src/bno055.c ****                 {
15390:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
15391:Core/Src/bno055.c ****                 }
15392:Core/Src/bno055.c ****             }
15393:Core/Src/bno055.c ****             else
15394:Core/Src/bno055.c ****             {
15395:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 32494              		.loc 1 15395 26 view .LVU9054
 32495 002c 4FF0FF34 		mov	r4, #-1
 32496              	.LVL3993:
 32497              		.loc 1 15395 26 view .LVU9055
 32498 0030 25E0     		b	.L2256
 32499              	.LVL3994:
 32500              	.L2263:
15363:Core/Src/bno055.c ****             }
 32501              		.loc 1 15363 17 is_stmt 1 view .LVU9056
15363:Core/Src/bno055.c ****             }
 32502              		.loc 1 15363 28 is_stmt 0 view .LVU9057
 32503 0032 FFF7FEFF 		bl	bno055_set_operation_mode
ARM GAS  /tmp/ccWoU29M.s 			page 908


 32504              	.LVL3995:
15363:Core/Src/bno055.c ****             }
 32505              		.loc 1 15363 25 view .LVU9058
 32506 0036 54FA80F4 		uxtab	r4, r4, r0
 32507 003a 64B2     		sxtb	r4, r4
 32508              	.LVL3996:
15363:Core/Src/bno055.c ****             }
 32509              		.loc 1 15363 25 view .LVU9059
 32510 003c F5E7     		b	.L2257
 32511              	.L2264:
15368:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32512              		.loc 1 15368 17 is_stmt 1 view .LVU9060
15368:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32513              		.loc 1 15368 30 is_stmt 0 view .LVU9061
 32514 003e 0120     		movs	r0, #1
 32515 0040 FFF7FEFF 		bl	bno055_write_page_id
 32516              	.LVL3997:
15369:Core/Src/bno055.c ****                 {
 32517              		.loc 1 15369 17 is_stmt 1 view .LVU9062
15369:Core/Src/bno055.c ****                 {
 32518              		.loc 1 15369 20 is_stmt 0 view .LVU9063
 32519 0044 08BB     		cbnz	r0, .L2261
15371:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
 32520              		.loc 1 15371 21 is_stmt 1 view .LVU9064
15371:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
 32521              		.loc 1 15371 40 is_stmt 0 view .LVU9065
 32522 0046 174B     		ldr	r3, .L2266
 32523 0048 1868     		ldr	r0, [r3]
 32524              	.LVL3998:
15371:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
 32525              		.loc 1 15371 40 view .LVU9066
 32526 004a 0469     		ldr	r4, [r0, #16]
 32527              	.LVL3999:
15371:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
 32528              		.loc 1 15371 32 view .LVU9067
 32529 004c 0123     		movs	r3, #1
 32530 004e 0DF10702 		add	r2, sp, #7
 32531 0052 1121     		movs	r1, #17
 32532 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32533 0056 A047     		blx	r4
 32534              	.LVL4000:
15375:Core/Src/bno055.c ****                     {
 32535              		.loc 1 15375 21 is_stmt 1 view .LVU9068
15375:Core/Src/bno055.c ****                     {
 32536              		.loc 1 15375 24 is_stmt 0 view .LVU9069
 32537 0058 0446     		mov	r4, r0
 32538 005a 80B9     		cbnz	r0, .L2256
15379:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_THRES,
 32539              		.loc 1 15379 25 is_stmt 1 view .LVU9070
15379:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_THRES,
 32540              		.loc 1 15379 34 is_stmt 0 view .LVU9071
 32541 005c 8DF80750 		strb	r5, [sp, #7]
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 32542              		.loc 1 15382 25 is_stmt 1 view .LVU9072
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 32543              		.loc 1 15382 45 is_stmt 0 view .LVU9073
 32544 0060 104B     		ldr	r3, .L2266
ARM GAS  /tmp/ccWoU29M.s 			page 909


 32545 0062 1868     		ldr	r0, [r3]
 32546              	.LVL4001:
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 32547              		.loc 1 15382 45 view .LVU9074
 32548 0064 C568     		ldr	r5, [r0, #12]
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 32549              		.loc 1 15382 37 view .LVU9075
 32550 0066 0123     		movs	r3, #1
 32551 0068 0DF10702 		add	r2, sp, #7
 32552 006c 1121     		movs	r1, #17
 32553 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32554 0070 A847     		blx	r5
 32555              	.LVL4002:
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 32556              		.loc 1 15382 34 view .LVU9076
 32557 0072 54FA80F4 		uxtab	r4, r4, r0
 32558 0076 64B2     		sxtb	r4, r4
 32559              	.LVL4003:
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 32560              		.loc 1 15382 34 view .LVU9077
 32561 0078 01E0     		b	.L2256
 32562              	.LVL4004:
 32563              	.L2259:
15396:Core/Src/bno055.c ****             }
15397:Core/Src/bno055.c ****         }
15398:Core/Src/bno055.c ****         else
15399:Core/Src/bno055.c ****         {
15400:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 32564              		.loc 1 15400 22 view .LVU9078
 32565 007a 4FF0FF34 		mov	r4, #-1
 32566              	.LVL4005:
 32567              	.L2256:
15401:Core/Src/bno055.c ****         }
15402:Core/Src/bno055.c ****     }
15403:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 32568              		.loc 1 15403 5 is_stmt 1 view .LVU9079
 32569              		.loc 1 15403 24 is_stmt 0 view .LVU9080
 32570 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 32571              		.loc 1 15403 8 view .LVU9081
 32572 0082 28B9     		cbnz	r0, .L2265
 32573              	.LVL4006:
 32574              	.L2255:
15404:Core/Src/bno055.c ****     {
15405:Core/Src/bno055.c ****         /* set the operation mode of
15406:Core/Src/bno055.c ****          * previous operation mode*/
15407:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
15408:Core/Src/bno055.c ****     }
15409:Core/Src/bno055.c **** 
15410:Core/Src/bno055.c ****     return com_rslt;
15411:Core/Src/bno055.c **** }
 32575              		.loc 1 15411 1 view .LVU9082
 32576 0084 2046     		mov	r0, r4
 32577 0086 03B0     		add	sp, sp, #12
 32578              	.LCFI899:
 32579              		.cfi_remember_state
 32580              		.cfi_def_cfa_offset 12
 32581              		@ sp needed
ARM GAS  /tmp/ccWoU29M.s 			page 910


 32582 0088 30BD     		pop	{r4, r5, pc}
 32583              	.LVL4007:
 32584              	.L2261:
 32585              	.LCFI900:
 32586              		.cfi_restore_state
15390:Core/Src/bno055.c ****                 }
 32587              		.loc 1 15390 30 view .LVU9083
 32588 008a 4FF0FF34 		mov	r4, #-1
 32589              	.LVL4008:
15390:Core/Src/bno055.c ****                 }
 32590              		.loc 1 15390 30 view .LVU9084
 32591 008e F6E7     		b	.L2256
 32592              	.LVL4009:
 32593              	.L2265:
15407:Core/Src/bno055.c ****     }
 32594              		.loc 1 15407 9 is_stmt 1 view .LVU9085
15407:Core/Src/bno055.c ****     }
 32595              		.loc 1 15407 21 is_stmt 0 view .LVU9086
 32596 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 32597              	.LVL4010:
15407:Core/Src/bno055.c ****     }
 32598              		.loc 1 15407 18 view .LVU9087
 32599 0094 54FA80F4 		uxtab	r4, r4, r0
 32600              	.LVL4011:
15407:Core/Src/bno055.c ****     }
 32601              		.loc 1 15407 18 view .LVU9088
 32602 0098 64B2     		sxtb	r4, r4
 32603              	.LVL4012:
15407:Core/Src/bno055.c ****     }
 32604              		.loc 1 15407 18 view .LVU9089
 32605 009a F3E7     		b	.L2255
 32606              	.LVL4013:
 32607              	.L2258:
15351:Core/Src/bno055.c ****     }
 32608              		.loc 1 15351 16 view .LVU9090
 32609 009c 6FF07E04 		mvn	r4, #126
 32610 00a0 F0E7     		b	.L2255
 32611              	.L2267:
 32612 00a2 00BF     		.align	2
 32613              	.L2266:
 32614 00a4 00000000 		.word	.LANCHOR0
 32615              		.cfi_endproc
 32616              	.LFE226:
 32618              		.section	.text.bno055_get_accel_any_motion_durn,"ax",%progbits
 32619              		.align	1
 32620              		.global	bno055_get_accel_any_motion_durn
 32621              		.syntax unified
 32622              		.thumb
 32623              		.thumb_func
 32624              		.fpu fpv4-sp-d16
 32626              	bno055_get_accel_any_motion_durn:
 32627              	.LVL4014:
 32628              	.LFB227:
15412:Core/Src/bno055.c **** 
15413:Core/Src/bno055.c **** /*!
15414:Core/Src/bno055.c ****  *  @brief This API used to read the accel anymotion duration
15415:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 0 to 1
ARM GAS  /tmp/ccWoU29M.s 			page 911


15416:Core/Src/bno055.c ****  *
15417:Core/Src/bno055.c ****  *  @param accel_any_motion_durn_u8 : The value of accel anymotion duration
15418:Core/Src/bno055.c ****  * accel_any_motion_durn_u8  | result
15419:Core/Src/bno055.c ****  *  -------------------------  | -------------
15420:Core/Src/bno055.c ****  *              0x01           | BNO055_BIT_ENABLE
15421:Core/Src/bno055.c ****  *              0x00           | BNO055_BIT_DISABLE
15422:Core/Src/bno055.c ****  *
15423:Core/Src/bno055.c ****  *  @return results of bus communication function
15424:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15425:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15426:Core/Src/bno055.c ****  *
15427:Core/Src/bno055.c ****  *
15428:Core/Src/bno055.c ****  */
15429:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_any_motion_durn(u8 *accel_any_motion_durn_u8)
15430:Core/Src/bno055.c **** {
 32629              		.loc 1 15430 1 is_stmt 1 view -0
 32630              		.cfi_startproc
 32631              		@ args = 0, pretend = 0, frame = 8
 32632              		@ frame_needed = 0, uses_anonymous_args = 0
 32633              		.loc 1 15430 1 is_stmt 0 view .LVU9092
 32634 0000 30B5     		push	{r4, r5, lr}
 32635              	.LCFI901:
 32636              		.cfi_def_cfa_offset 12
 32637              		.cfi_offset 4, -12
 32638              		.cfi_offset 5, -8
 32639              		.cfi_offset 14, -4
 32640 0002 83B0     		sub	sp, sp, #12
 32641              	.LCFI902:
 32642              		.cfi_def_cfa_offset 24
15431:Core/Src/bno055.c ****     /* Variable used to return value of
15432:Core/Src/bno055.c ****      * communication routine*/
15433:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32643              		.loc 1 15433 5 is_stmt 1 view .LVU9093
 32644              	.LVL4015:
15434:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32645              		.loc 1 15434 5 view .LVU9094
 32646              		.loc 1 15434 8 is_stmt 0 view .LVU9095
 32647 0004 0023     		movs	r3, #0
 32648 0006 8DF80730 		strb	r3, [sp, #7]
15435:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32649              		.loc 1 15435 5 is_stmt 1 view .LVU9096
 32650              	.LVL4016:
15436:Core/Src/bno055.c **** 
15437:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15438:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32651              		.loc 1 15438 5 view .LVU9097
 32652              		.loc 1 15438 18 is_stmt 0 view .LVU9098
 32653 000a 144B     		ldr	r3, .L2276
 32654 000c 1B68     		ldr	r3, [r3]
 32655              		.loc 1 15438 8 view .LVU9099
 32656 000e F3B1     		cbz	r3, .L2272
 32657 0010 0446     		mov	r4, r0
15439:Core/Src/bno055.c ****     {
15440:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15441:Core/Src/bno055.c ****     }
15442:Core/Src/bno055.c ****     else
15443:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccWoU29M.s 			page 912


15444:Core/Src/bno055.c ****         /*condition check for page, accel anymotion duration  is
15445:Core/Src/bno055.c ****          * available in the page one*/
15446:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 32658              		.loc 1 15446 9 is_stmt 1 view .LVU9100
 32659              		.loc 1 15446 21 is_stmt 0 view .LVU9101
 32660 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32661              		.loc 1 15446 12 view .LVU9102
 32662 0014 012B     		cmp	r3, #1
 32663 0016 14D1     		bne	.L2275
 32664              	.LVL4017:
 32665              	.L2270:
15447:Core/Src/bno055.c ****         {
15448:Core/Src/bno055.c ****             /* Write page as one */
15449:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15450:Core/Src/bno055.c ****         }
15451:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 32666              		.loc 1 15451 53 discriminator 1 view .LVU9103
 32667 0018 104B     		ldr	r3, .L2276
 32668 001a 1B68     		ldr	r3, [r3]
 32669 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32670              		.loc 1 15451 41 discriminator 1 view .LVU9104
 32671 001e 012B     		cmp	r3, #1
 32672 0020 18D1     		bne	.L2273
 32673              	.L2271:
15452:Core/Src/bno055.c ****         {
15453:Core/Src/bno055.c ****             /* Read the value of accel anymotion duration */
15454:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 32674              		.loc 1 15454 13 is_stmt 1 view .LVU9105
 32675              		.loc 1 15454 32 is_stmt 0 view .LVU9106
 32676 0022 0E4B     		ldr	r3, .L2276
 32677 0024 1868     		ldr	r0, [r3]
 32678 0026 0569     		ldr	r5, [r0, #16]
 32679              		.loc 1 15454 24 view .LVU9107
 32680 0028 0123     		movs	r3, #1
 32681 002a 0DF10702 		add	r2, sp, #7
 32682 002e 1221     		movs	r1, #18
 32683 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32684 0032 A847     		blx	r5
 32685              	.LVL4018:
15455:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
15456:Core/Src/bno055.c ****                                                       &data_u8r,
15457:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15458:Core/Src/bno055.c ****             *accel_any_motion_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_DURN_
 32686              		.loc 1 15458 13 is_stmt 1 view .LVU9108
 32687              		.loc 1 15458 41 is_stmt 0 view .LVU9109
 32688 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32689 0038 03F00303 		and	r3, r3, #3
 32690              		.loc 1 15458 39 view .LVU9110
 32691 003c 2370     		strb	r3, [r4]
 32692              	.LVL4019:
 32693              	.L2269:
15459:Core/Src/bno055.c ****         }
15460:Core/Src/bno055.c ****         else
15461:Core/Src/bno055.c ****         {
15462:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15463:Core/Src/bno055.c ****         }
15464:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 913


15465:Core/Src/bno055.c **** 
15466:Core/Src/bno055.c ****     return com_rslt;
15467:Core/Src/bno055.c **** }
 32694              		.loc 1 15467 1 view .LVU9111
 32695 003e 03B0     		add	sp, sp, #12
 32696              	.LCFI903:
 32697              		.cfi_remember_state
 32698              		.cfi_def_cfa_offset 12
 32699              		@ sp needed
 32700 0040 30BD     		pop	{r4, r5, pc}
 32701              	.LVL4020:
 32702              	.L2275:
 32703              	.LCFI904:
 32704              		.cfi_restore_state
15449:Core/Src/bno055.c ****         }
 32705              		.loc 1 15449 13 is_stmt 1 view .LVU9112
15449:Core/Src/bno055.c ****         }
 32706              		.loc 1 15449 23 is_stmt 0 view .LVU9113
 32707 0042 0120     		movs	r0, #1
 32708              	.LVL4021:
15449:Core/Src/bno055.c ****         }
 32709              		.loc 1 15449 23 view .LVU9114
 32710 0044 FFF7FEFF 		bl	bno055_write_page_id
 32711              	.LVL4022:
15451:Core/Src/bno055.c ****         {
 32712              		.loc 1 15451 9 is_stmt 1 view .LVU9115
15451:Core/Src/bno055.c ****         {
 32713              		.loc 1 15451 12 is_stmt 0 view .LVU9116
 32714 0048 0028     		cmp	r0, #0
 32715 004a EAD0     		beq	.L2271
 32716 004c E4E7     		b	.L2270
 32717              	.LVL4023:
 32718              	.L2272:
15440:Core/Src/bno055.c ****     }
 32719              		.loc 1 15440 16 view .LVU9117
 32720 004e 6FF07E00 		mvn	r0, #126
 32721              	.LVL4024:
15440:Core/Src/bno055.c ****     }
 32722              		.loc 1 15440 16 view .LVU9118
 32723 0052 F4E7     		b	.L2269
 32724              	.LVL4025:
 32725              	.L2273:
15462:Core/Src/bno055.c ****         }
 32726              		.loc 1 15462 22 view .LVU9119
 32727 0054 4FF0FF30 		mov	r0, #-1
 32728 0058 F1E7     		b	.L2269
 32729              	.L2277:
 32730 005a 00BF     		.align	2
 32731              	.L2276:
 32732 005c 00000000 		.word	.LANCHOR0
 32733              		.cfi_endproc
 32734              	.LFE227:
 32736              		.section	.text.bno055_set_accel_any_motion_durn,"ax",%progbits
 32737              		.align	1
 32738              		.global	bno055_set_accel_any_motion_durn
 32739              		.syntax unified
 32740              		.thumb
ARM GAS  /tmp/ccWoU29M.s 			page 914


 32741              		.thumb_func
 32742              		.fpu fpv4-sp-d16
 32744              	bno055_set_accel_any_motion_durn:
 32745              	.LVL4026:
 32746              	.LFB228:
15468:Core/Src/bno055.c **** 
15469:Core/Src/bno055.c **** /*!
15470:Core/Src/bno055.c ****  *  @brief This API used to write the accel anymotion duration
15471:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 0 to 1
15472:Core/Src/bno055.c ****  *
15473:Core/Src/bno055.c ****  *  @param accel_any_motion_durn_u8 : The value of accel anymotion duration
15474:Core/Src/bno055.c ****  *
15475:Core/Src/bno055.c ****  * accel_any_motion_durn_u8  | result
15476:Core/Src/bno055.c ****  *  -------------------------  | -------------
15477:Core/Src/bno055.c ****  *              0x01           | BNO055_BIT_ENABLE
15478:Core/Src/bno055.c ****  *              0x00           | BNO055_BIT_DISABLE
15479:Core/Src/bno055.c ****  *
15480:Core/Src/bno055.c ****  *  @return results of bus communication function
15481:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15482:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15483:Core/Src/bno055.c ****  *
15484:Core/Src/bno055.c ****  *
15485:Core/Src/bno055.c ****  */
15486:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_any_motion_durn(u8 accel_any_motion_durn_u8)
15487:Core/Src/bno055.c **** {
 32747              		.loc 1 15487 1 is_stmt 1 view -0
 32748              		.cfi_startproc
 32749              		@ args = 0, pretend = 0, frame = 8
 32750              		@ frame_needed = 0, uses_anonymous_args = 0
 32751              		.loc 1 15487 1 is_stmt 0 view .LVU9121
 32752 0000 30B5     		push	{r4, r5, lr}
 32753              	.LCFI905:
 32754              		.cfi_def_cfa_offset 12
 32755              		.cfi_offset 4, -12
 32756              		.cfi_offset 5, -8
 32757              		.cfi_offset 14, -4
 32758 0002 83B0     		sub	sp, sp, #12
 32759              	.LCFI906:
 32760              		.cfi_def_cfa_offset 24
15488:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32761              		.loc 1 15488 5 is_stmt 1 view .LVU9122
 32762              	.LVL4027:
15489:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32763              		.loc 1 15489 5 view .LVU9123
 32764              		.loc 1 15489 8 is_stmt 0 view .LVU9124
 32765 0004 0023     		movs	r3, #0
 32766 0006 8DF80730 		strb	r3, [sp, #7]
15490:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32767              		.loc 1 15490 5 is_stmt 1 view .LVU9125
 32768              	.LVL4028:
15491:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 32769              		.loc 1 15491 5 view .LVU9126
15492:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 32770              		.loc 1 15492 5 view .LVU9127
 32771              		.loc 1 15492 8 is_stmt 0 view .LVU9128
 32772 000a 8DF80630 		strb	r3, [sp, #6]
15493:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 915


15494:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15495:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32773              		.loc 1 15495 5 is_stmt 1 view .LVU9129
 32774              		.loc 1 15495 18 is_stmt 0 view .LVU9130
 32775 000e 294B     		ldr	r3, .L2290
 32776 0010 1B68     		ldr	r3, [r3]
 32777              		.loc 1 15495 8 view .LVU9131
 32778 0012 002B     		cmp	r3, #0
 32779 0014 4AD0     		beq	.L2282
 32780 0016 0546     		mov	r5, r0
15496:Core/Src/bno055.c ****     {
15497:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15498:Core/Src/bno055.c ****     }
15499:Core/Src/bno055.c ****     else
15500:Core/Src/bno055.c ****     {
15501:Core/Src/bno055.c ****         /* The write operation effective only if the operation
15502:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
15503:Core/Src/bno055.c ****          * current operation mode and set the config mode */
15504:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 32781              		.loc 1 15504 9 is_stmt 1 view .LVU9132
 32782              		.loc 1 15504 19 is_stmt 0 view .LVU9133
 32783 0018 0DF10600 		add	r0, sp, #6
 32784              	.LVL4029:
 32785              		.loc 1 15504 19 view .LVU9134
 32786 001c FFF7FEFF 		bl	bno055_get_operation_mode
 32787              	.LVL4030:
15505:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 32788              		.loc 1 15505 9 is_stmt 1 view .LVU9135
 32789              		.loc 1 15505 12 is_stmt 0 view .LVU9136
 32790 0020 0446     		mov	r4, r0
 32791 0022 90BB     		cbnz	r0, .L2283
15506:Core/Src/bno055.c ****         {
15507:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 32792              		.loc 1 15507 13 is_stmt 1 view .LVU9137
 32793              		.loc 1 15507 32 is_stmt 0 view .LVU9138
 32794 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 32795              		.loc 1 15507 16 view .LVU9139
 32796 0028 1BB9     		cbnz	r3, .L2287
 32797              	.LVL4031:
 32798              	.L2281:
15508:Core/Src/bno055.c ****             {
15509:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
15510:Core/Src/bno055.c ****             }
15511:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 32799              		.loc 1 15511 13 is_stmt 1 view .LVU9140
 32800              		.loc 1 15511 16 is_stmt 0 view .LVU9141
 32801 002a 44B1     		cbz	r4, .L2288
15512:Core/Src/bno055.c ****             {
15513:Core/Src/bno055.c ****                 /* Write page as one */
15514:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15515:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
15516:Core/Src/bno055.c ****                 {
15517:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15518:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
15519:Core/Src/bno055.c ****                                                               &data_u8r,
15520:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15521:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/ccWoU29M.s 			page 916


15522:Core/Src/bno055.c ****                     {
15523:Core/Src/bno055.c ****                         /* Write the value of
15524:Core/Src/bno055.c ****                          * accel anymotion duration*/
15525:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
15526:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
15527:Core/Src/bno055.c ****                                                        accel_any_motion_durn_u8);
15528:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15529:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
15530:Core/Src/bno055.c ****                                                                     &data_u8r,
15531:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
15532:Core/Src/bno055.c ****                     }
15533:Core/Src/bno055.c ****                 }
15534:Core/Src/bno055.c ****                 else
15535:Core/Src/bno055.c ****                 {
15536:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
15537:Core/Src/bno055.c ****                 }
15538:Core/Src/bno055.c ****             }
15539:Core/Src/bno055.c ****             else
15540:Core/Src/bno055.c ****             {
15541:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 32802              		.loc 1 15541 26 view .LVU9142
 32803 002c 4FF0FF34 		mov	r4, #-1
 32804              	.LVL4032:
 32805              		.loc 1 15541 26 view .LVU9143
 32806 0030 2DE0     		b	.L2280
 32807              	.LVL4033:
 32808              	.L2287:
15509:Core/Src/bno055.c ****             }
 32809              		.loc 1 15509 17 is_stmt 1 view .LVU9144
15509:Core/Src/bno055.c ****             }
 32810              		.loc 1 15509 28 is_stmt 0 view .LVU9145
 32811 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 32812              	.LVL4034:
15509:Core/Src/bno055.c ****             }
 32813              		.loc 1 15509 25 view .LVU9146
 32814 0036 54FA80F4 		uxtab	r4, r4, r0
 32815 003a 64B2     		sxtb	r4, r4
 32816              	.LVL4035:
15509:Core/Src/bno055.c ****             }
 32817              		.loc 1 15509 25 view .LVU9147
 32818 003c F5E7     		b	.L2281
 32819              	.L2288:
15514:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32820              		.loc 1 15514 17 is_stmt 1 view .LVU9148
15514:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32821              		.loc 1 15514 30 is_stmt 0 view .LVU9149
 32822 003e 0120     		movs	r0, #1
 32823 0040 FFF7FEFF 		bl	bno055_write_page_id
 32824              	.LVL4036:
15515:Core/Src/bno055.c ****                 {
 32825              		.loc 1 15515 17 is_stmt 1 view .LVU9150
15515:Core/Src/bno055.c ****                 {
 32826              		.loc 1 15515 20 is_stmt 0 view .LVU9151
 32827 0044 48BB     		cbnz	r0, .L2285
15517:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
 32828              		.loc 1 15517 21 is_stmt 1 view .LVU9152
15517:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
ARM GAS  /tmp/ccWoU29M.s 			page 917


 32829              		.loc 1 15517 40 is_stmt 0 view .LVU9153
 32830 0046 1B4B     		ldr	r3, .L2290
 32831 0048 1868     		ldr	r0, [r3]
 32832              	.LVL4037:
15517:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
 32833              		.loc 1 15517 40 view .LVU9154
 32834 004a 0469     		ldr	r4, [r0, #16]
 32835              	.LVL4038:
15517:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
 32836              		.loc 1 15517 32 view .LVU9155
 32837 004c 0123     		movs	r3, #1
 32838 004e 0DF10702 		add	r2, sp, #7
 32839 0052 1221     		movs	r1, #18
 32840 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32841 0056 A047     		blx	r4
 32842              	.LVL4039:
15521:Core/Src/bno055.c ****                     {
 32843              		.loc 1 15521 21 is_stmt 1 view .LVU9156
15521:Core/Src/bno055.c ****                     {
 32844              		.loc 1 15521 24 is_stmt 0 view .LVU9157
 32845 0058 0446     		mov	r4, r0
 32846 005a C0B9     		cbnz	r0, .L2280
15525:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
 32847              		.loc 1 15525 25 is_stmt 1 view .LVU9158
15525:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
 32848              		.loc 1 15525 36 is_stmt 0 view .LVU9159
 32849 005c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 32850              	.LVL4040:
15525:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
 32851              		.loc 1 15525 36 view .LVU9160
 32852 0060 20F00300 		bic	r0, r0, #3
 32853 0064 43B2     		sxtb	r3, r0
 32854 0066 05F00300 		and	r0, r5, #3
 32855 006a 1843     		orrs	r0, r0, r3
15525:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
 32856              		.loc 1 15525 34 view .LVU9161
 32857 006c 8DF80700 		strb	r0, [sp, #7]
15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 32858              		.loc 1 15528 25 is_stmt 1 view .LVU9162
15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 32859              		.loc 1 15528 45 is_stmt 0 view .LVU9163
 32860 0070 104B     		ldr	r3, .L2290
 32861 0072 1868     		ldr	r0, [r3]
 32862 0074 C568     		ldr	r5, [r0, #12]
15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 32863              		.loc 1 15528 37 view .LVU9164
 32864 0076 0123     		movs	r3, #1
 32865 0078 0DF10702 		add	r2, sp, #7
 32866 007c 1221     		movs	r1, #18
 32867 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32868 0080 A847     		blx	r5
 32869              	.LVL4041:
15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 32870              		.loc 1 15528 34 view .LVU9165
 32871 0082 54FA80F4 		uxtab	r4, r4, r0
 32872 0086 64B2     		sxtb	r4, r4
 32873              	.LVL4042:
ARM GAS  /tmp/ccWoU29M.s 			page 918


15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 32874              		.loc 1 15528 34 view .LVU9166
 32875 0088 01E0     		b	.L2280
 32876              	.LVL4043:
 32877              	.L2283:
15542:Core/Src/bno055.c ****             }
15543:Core/Src/bno055.c ****         }
15544:Core/Src/bno055.c ****         else
15545:Core/Src/bno055.c ****         {
15546:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 32878              		.loc 1 15546 22 view .LVU9167
 32879 008a 4FF0FF34 		mov	r4, #-1
 32880              	.LVL4044:
 32881              	.L2280:
15547:Core/Src/bno055.c ****         }
15548:Core/Src/bno055.c ****     }
15549:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 32882              		.loc 1 15549 5 is_stmt 1 view .LVU9168
 32883              		.loc 1 15549 24 is_stmt 0 view .LVU9169
 32884 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 32885              		.loc 1 15549 8 view .LVU9170
 32886 0092 28B9     		cbnz	r0, .L2289
 32887              	.LVL4045:
 32888              	.L2279:
15550:Core/Src/bno055.c ****     {
15551:Core/Src/bno055.c ****         /* set the operation mode of
15552:Core/Src/bno055.c ****          * previous operation mode*/
15553:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
15554:Core/Src/bno055.c ****     }
15555:Core/Src/bno055.c **** 
15556:Core/Src/bno055.c ****     return com_rslt;
15557:Core/Src/bno055.c **** }
 32889              		.loc 1 15557 1 view .LVU9171
 32890 0094 2046     		mov	r0, r4
 32891 0096 03B0     		add	sp, sp, #12
 32892              	.LCFI907:
 32893              		.cfi_remember_state
 32894              		.cfi_def_cfa_offset 12
 32895              		@ sp needed
 32896 0098 30BD     		pop	{r4, r5, pc}
 32897              	.LVL4046:
 32898              	.L2285:
 32899              	.LCFI908:
 32900              		.cfi_restore_state
15536:Core/Src/bno055.c ****                 }
 32901              		.loc 1 15536 30 view .LVU9172
 32902 009a 4FF0FF34 		mov	r4, #-1
 32903              	.LVL4047:
15536:Core/Src/bno055.c ****                 }
 32904              		.loc 1 15536 30 view .LVU9173
 32905 009e F6E7     		b	.L2280
 32906              	.LVL4048:
 32907              	.L2289:
15553:Core/Src/bno055.c ****     }
 32908              		.loc 1 15553 9 is_stmt 1 view .LVU9174
15553:Core/Src/bno055.c ****     }
 32909              		.loc 1 15553 21 is_stmt 0 view .LVU9175
ARM GAS  /tmp/ccWoU29M.s 			page 919


 32910 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 32911              	.LVL4049:
15553:Core/Src/bno055.c ****     }
 32912              		.loc 1 15553 18 view .LVU9176
 32913 00a4 54FA80F4 		uxtab	r4, r4, r0
 32914              	.LVL4050:
15553:Core/Src/bno055.c ****     }
 32915              		.loc 1 15553 18 view .LVU9177
 32916 00a8 64B2     		sxtb	r4, r4
 32917              	.LVL4051:
15553:Core/Src/bno055.c ****     }
 32918              		.loc 1 15553 18 view .LVU9178
 32919 00aa F3E7     		b	.L2279
 32920              	.LVL4052:
 32921              	.L2282:
15497:Core/Src/bno055.c ****     }
 32922              		.loc 1 15497 16 view .LVU9179
 32923 00ac 6FF07E04 		mvn	r4, #126
 32924 00b0 F0E7     		b	.L2279
 32925              	.L2291:
 32926 00b2 00BF     		.align	2
 32927              	.L2290:
 32928 00b4 00000000 		.word	.LANCHOR0
 32929              		.cfi_endproc
 32930              	.LFE228:
 32932              		.section	.text.bno055_get_accel_any_motion_no_motion_axis_enable,"ax",%progbits
 32933              		.align	1
 32934              		.global	bno055_get_accel_any_motion_no_motion_axis_enable
 32935              		.syntax unified
 32936              		.thumb
 32937              		.thumb_func
 32938              		.fpu fpv4-sp-d16
 32940              	bno055_get_accel_any_motion_no_motion_axis_enable:
 32941              	.LVL4053:
 32942              	.LFB229:
15558:Core/Src/bno055.c **** 
15559:Core/Src/bno055.c **** /*!
15560:Core/Src/bno055.c ****  *  @brief This API used to read the accel anymotion enable
15561:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 2 to 4
15562:Core/Src/bno055.c ****  *
15563:Core/Src/bno055.c ****  *  @param data_u8 : The value of accel anymotion enable
15564:Core/Src/bno055.c ****  *     data_u8 | result
15565:Core/Src/bno055.c ****  *  ------------ | -------------
15566:Core/Src/bno055.c ****  *      0x01     | BNO055_BIT_ENABLE
15567:Core/Src/bno055.c ****  *      0x00     | BNO055_BIT_DISABLE
15568:Core/Src/bno055.c ****  *  @param channel_u8 : The value of accel anymotion axis selection
15569:Core/Src/bno055.c ****  *           channel_u8                        | value
15570:Core/Src/bno055.c ****  *     --------------------------                | ----------
15571:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_X_AXIS  |   0
15572:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS  |   1
15573:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS  |   2
15574:Core/Src/bno055.c ****  *
15575:Core/Src/bno055.c ****  *  @return results of bus communication function
15576:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15577:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15578:Core/Src/bno055.c ****  *
15579:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 920


15580:Core/Src/bno055.c ****  */
15581:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_any_motion_no_motion_axis_enable(u8 channel_u8, u8 *da
15582:Core/Src/bno055.c **** {
 32943              		.loc 1 15582 1 is_stmt 1 view -0
 32944              		.cfi_startproc
 32945              		@ args = 0, pretend = 0, frame = 8
 32946              		@ frame_needed = 0, uses_anonymous_args = 0
 32947              		.loc 1 15582 1 is_stmt 0 view .LVU9181
 32948 0000 30B5     		push	{r4, r5, lr}
 32949              	.LCFI909:
 32950              		.cfi_def_cfa_offset 12
 32951              		.cfi_offset 4, -12
 32952              		.cfi_offset 5, -8
 32953              		.cfi_offset 14, -4
 32954 0002 83B0     		sub	sp, sp, #12
 32955              	.LCFI910:
 32956              		.cfi_def_cfa_offset 24
15583:Core/Src/bno055.c ****     /* Variable used to return value of
15584:Core/Src/bno055.c ****      * communication routine*/
15585:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32957              		.loc 1 15585 5 is_stmt 1 view .LVU9182
 32958              	.LVL4054:
15586:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32959              		.loc 1 15586 5 view .LVU9183
 32960              		.loc 1 15586 8 is_stmt 0 view .LVU9184
 32961 0004 0023     		movs	r3, #0
 32962 0006 8DF80730 		strb	r3, [sp, #7]
15587:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32963              		.loc 1 15587 5 is_stmt 1 view .LVU9185
 32964              	.LVL4055:
15588:Core/Src/bno055.c **** 
15589:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15590:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32965              		.loc 1 15590 5 view .LVU9186
 32966              		.loc 1 15590 18 is_stmt 0 view .LVU9187
 32967 000a 284B     		ldr	r3, .L2304
 32968 000c 1B68     		ldr	r3, [r3]
 32969              		.loc 1 15590 8 view .LVU9188
 32970 000e 002B     		cmp	r3, #0
 32971 0010 45D0     		beq	.L2298
 32972 0012 0446     		mov	r4, r0
 32973 0014 0D46     		mov	r5, r1
15591:Core/Src/bno055.c ****     {
15592:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15593:Core/Src/bno055.c ****     }
15594:Core/Src/bno055.c ****     else
15595:Core/Src/bno055.c ****     {
15596:Core/Src/bno055.c ****         /*condition check for page, accel anymotion enable is
15597:Core/Src/bno055.c ****          * available in the page one*/
15598:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 32974              		.loc 1 15598 9 is_stmt 1 view .LVU9189
 32975              		.loc 1 15598 21 is_stmt 0 view .LVU9190
 32976 0016 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32977              		.loc 1 15598 12 view .LVU9191
 32978 0018 012B     		cmp	r3, #1
 32979 001a 0DD1     		bne	.L2302
 32980              	.LVL4056:
ARM GAS  /tmp/ccWoU29M.s 			page 921


 32981              	.L2294:
15599:Core/Src/bno055.c ****         {
15600:Core/Src/bno055.c ****             /* Write page as one */
15601:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15602:Core/Src/bno055.c ****         }
15603:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 32982              		.loc 1 15603 53 discriminator 1 view .LVU9192
 32983 001c 234B     		ldr	r3, .L2304
 32984 001e 1B68     		ldr	r3, [r3]
 32985 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32986              		.loc 1 15603 41 discriminator 1 view .LVU9193
 32987 0022 012B     		cmp	r3, #1
 32988 0024 3ED1     		bne	.L2299
 32989              	.L2295:
15604:Core/Src/bno055.c ****         {
15605:Core/Src/bno055.c ****             switch (channel_u8)
 32990              		.loc 1 15605 13 is_stmt 1 view .LVU9194
 32991 0026 012C     		cmp	r4, #1
 32992 0028 1BD0     		beq	.L2296
 32993 002a 022C     		cmp	r4, #2
 32994 002c 28D0     		beq	.L2297
 32995 002e 4CB1     		cbz	r4, .L2303
 32996 0030 6FF00100 		mvn	r0, #1
 32997              	.LVL4057:
 32998              	.L2293:
15606:Core/Src/bno055.c ****             {
15607:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_X_AXIS:
15608:Core/Src/bno055.c **** 
15609:Core/Src/bno055.c ****                     /* Read the value of accel anymotion x enable*/
15610:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15611:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_X_AXIS_REG,
15612:Core/Src/bno055.c ****                                                               &data_u8r,
15613:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15614:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_X_AXIS);
15615:Core/Src/bno055.c ****                     break;
15616:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS:
15617:Core/Src/bno055.c **** 
15618:Core/Src/bno055.c ****                     /* Read the value of accel anymotion y enable*/
15619:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15620:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Y_AXIS_REG,
15621:Core/Src/bno055.c ****                                                               &data_u8r,
15622:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15623:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_Y_AXIS);
15624:Core/Src/bno055.c ****                     break;
15625:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Z_AXIS:
15626:Core/Src/bno055.c **** 
15627:Core/Src/bno055.c ****                     /* Read the value of accel anymotion z enable*/
15628:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15629:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Z_AXIS_REG,
15630:Core/Src/bno055.c ****                                                               &data_u8r,
15631:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15632:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_Z_AXIS);
15633:Core/Src/bno055.c ****                     break;
15634:Core/Src/bno055.c ****                 default:
15635:Core/Src/bno055.c ****                     com_rslt = BNO055_OUT_OF_RANGE;
15636:Core/Src/bno055.c ****                     break;
15637:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccWoU29M.s 			page 922


15638:Core/Src/bno055.c ****         }
15639:Core/Src/bno055.c ****         else
15640:Core/Src/bno055.c ****         {
15641:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15642:Core/Src/bno055.c ****         }
15643:Core/Src/bno055.c ****     }
15644:Core/Src/bno055.c **** 
15645:Core/Src/bno055.c ****     return com_rslt;
15646:Core/Src/bno055.c **** }
 32999              		.loc 1 15646 1 is_stmt 0 view .LVU9195
 33000 0034 03B0     		add	sp, sp, #12
 33001              	.LCFI911:
 33002              		.cfi_remember_state
 33003              		.cfi_def_cfa_offset 12
 33004              		@ sp needed
 33005 0036 30BD     		pop	{r4, r5, pc}
 33006              	.LVL4058:
 33007              	.L2302:
 33008              	.LCFI912:
 33009              		.cfi_restore_state
15601:Core/Src/bno055.c ****         }
 33010              		.loc 1 15601 13 is_stmt 1 view .LVU9196
15601:Core/Src/bno055.c ****         }
 33011              		.loc 1 15601 23 is_stmt 0 view .LVU9197
 33012 0038 0120     		movs	r0, #1
 33013              	.LVL4059:
15601:Core/Src/bno055.c ****         }
 33014              		.loc 1 15601 23 view .LVU9198
 33015 003a FFF7FEFF 		bl	bno055_write_page_id
 33016              	.LVL4060:
15603:Core/Src/bno055.c ****         {
 33017              		.loc 1 15603 9 is_stmt 1 view .LVU9199
15603:Core/Src/bno055.c ****         {
 33018              		.loc 1 15603 12 is_stmt 0 view .LVU9200
 33019 003e 0028     		cmp	r0, #0
 33020 0040 F1D0     		beq	.L2295
 33021 0042 EBE7     		b	.L2294
 33022              	.LVL4061:
 33023              	.L2303:
15610:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_X_AXIS_REG,
 33024              		.loc 1 15610 21 is_stmt 1 view .LVU9201
15610:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_X_AXIS_REG,
 33025              		.loc 1 15610 40 is_stmt 0 view .LVU9202
 33026 0044 194B     		ldr	r3, .L2304
 33027 0046 1868     		ldr	r0, [r3]
 33028 0048 0469     		ldr	r4, [r0, #16]
15610:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_X_AXIS_REG,
 33029              		.loc 1 15610 32 view .LVU9203
 33030 004a 0123     		movs	r3, #1
 33031 004c 0DF10702 		add	r2, sp, #7
 33032 0050 1221     		movs	r1, #18
 33033 0052 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33034 0054 A047     		blx	r4
 33035              	.LVL4062:
15614:Core/Src/bno055.c ****                     break;
 33036              		.loc 1 15614 21 is_stmt 1 view .LVU9204
15614:Core/Src/bno055.c ****                     break;
ARM GAS  /tmp/ccWoU29M.s 			page 923


 33037              		.loc 1 15614 32 is_stmt 0 view .LVU9205
 33038 0056 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33039 005a C3F38003 		ubfx	r3, r3, #2, #1
15614:Core/Src/bno055.c ****                     break;
 33040              		.loc 1 15614 30 view .LVU9206
 33041 005e 2B70     		strb	r3, [r5]
15615:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS:
 33042              		.loc 1 15615 21 is_stmt 1 view .LVU9207
 33043 0060 E8E7     		b	.L2293
 33044              	.LVL4063:
 33045              	.L2296:
15619:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Y_AXIS_REG,
 33046              		.loc 1 15619 21 view .LVU9208
15619:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Y_AXIS_REG,
 33047              		.loc 1 15619 40 is_stmt 0 view .LVU9209
 33048 0062 124B     		ldr	r3, .L2304
 33049 0064 1868     		ldr	r0, [r3]
 33050 0066 0469     		ldr	r4, [r0, #16]
15619:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Y_AXIS_REG,
 33051              		.loc 1 15619 32 view .LVU9210
 33052 0068 0123     		movs	r3, #1
 33053 006a 0DF10702 		add	r2, sp, #7
 33054 006e 1221     		movs	r1, #18
 33055 0070 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33056 0072 A047     		blx	r4
 33057              	.LVL4064:
15623:Core/Src/bno055.c ****                     break;
 33058              		.loc 1 15623 21 is_stmt 1 view .LVU9211
15623:Core/Src/bno055.c ****                     break;
 33059              		.loc 1 15623 32 is_stmt 0 view .LVU9212
 33060 0074 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33061 0078 C3F3C003 		ubfx	r3, r3, #3, #1
15623:Core/Src/bno055.c ****                     break;
 33062              		.loc 1 15623 30 view .LVU9213
 33063 007c 2B70     		strb	r3, [r5]
15624:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Z_AXIS:
 33064              		.loc 1 15624 21 is_stmt 1 view .LVU9214
 33065 007e D9E7     		b	.L2293
 33066              	.LVL4065:
 33067              	.L2297:
15628:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Z_AXIS_REG,
 33068              		.loc 1 15628 21 view .LVU9215
15628:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Z_AXIS_REG,
 33069              		.loc 1 15628 40 is_stmt 0 view .LVU9216
 33070 0080 0A4B     		ldr	r3, .L2304
 33071 0082 1868     		ldr	r0, [r3]
 33072 0084 0469     		ldr	r4, [r0, #16]
15628:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Z_AXIS_REG,
 33073              		.loc 1 15628 32 view .LVU9217
 33074 0086 0123     		movs	r3, #1
 33075 0088 0DF10702 		add	r2, sp, #7
 33076 008c 1221     		movs	r1, #18
 33077 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33078 0090 A047     		blx	r4
 33079              	.LVL4066:
15632:Core/Src/bno055.c ****                     break;
 33080              		.loc 1 15632 21 is_stmt 1 view .LVU9218
ARM GAS  /tmp/ccWoU29M.s 			page 924


15632:Core/Src/bno055.c ****                     break;
 33081              		.loc 1 15632 32 is_stmt 0 view .LVU9219
 33082 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33083 0096 C3F30013 		ubfx	r3, r3, #4, #1
15632:Core/Src/bno055.c ****                     break;
 33084              		.loc 1 15632 30 view .LVU9220
 33085 009a 2B70     		strb	r3, [r5]
15633:Core/Src/bno055.c ****                 default:
 33086              		.loc 1 15633 21 is_stmt 1 view .LVU9221
 33087 009c CAE7     		b	.L2293
 33088              	.LVL4067:
 33089              	.L2298:
15592:Core/Src/bno055.c ****     }
 33090              		.loc 1 15592 16 is_stmt 0 view .LVU9222
 33091 009e 6FF07E00 		mvn	r0, #126
 33092              	.LVL4068:
15592:Core/Src/bno055.c ****     }
 33093              		.loc 1 15592 16 view .LVU9223
 33094 00a2 C7E7     		b	.L2293
 33095              	.LVL4069:
 33096              	.L2299:
15641:Core/Src/bno055.c ****         }
 33097              		.loc 1 15641 22 view .LVU9224
 33098 00a4 4FF0FF30 		mov	r0, #-1
 33099 00a8 C4E7     		b	.L2293
 33100              	.L2305:
 33101 00aa 00BF     		.align	2
 33102              	.L2304:
 33103 00ac 00000000 		.word	.LANCHOR0
 33104              		.cfi_endproc
 33105              	.LFE229:
 33107              		.section	.text.bno055_set_accel_any_motion_no_motion_axis_enable,"ax",%progbits
 33108              		.align	1
 33109              		.global	bno055_set_accel_any_motion_no_motion_axis_enable
 33110              		.syntax unified
 33111              		.thumb
 33112              		.thumb_func
 33113              		.fpu fpv4-sp-d16
 33115              	bno055_set_accel_any_motion_no_motion_axis_enable:
 33116              	.LVL4070:
 33117              	.LFB230:
15647:Core/Src/bno055.c **** 
15648:Core/Src/bno055.c **** /*!
15649:Core/Src/bno055.c ****  *  @brief This API used to write the accel anymotion enable
15650:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 2 to 4
15651:Core/Src/bno055.c ****  *
15652:Core/Src/bno055.c ****  *  @param data_u8 : The value of accel anymotion enable
15653:Core/Src/bno055.c ****  *     data_u8 | result
15654:Core/Src/bno055.c ****  *  ------------ | -------------
15655:Core/Src/bno055.c ****  *      0x01     | BNO055_BIT_ENABLE
15656:Core/Src/bno055.c ****  *      0x00     | BNO055_BIT_DISABLE
15657:Core/Src/bno055.c ****  *  @param channel_u8 : The value of accel anymotion axis selection
15658:Core/Src/bno055.c ****  *           channel_u8                        | value
15659:Core/Src/bno055.c ****  *     --------------------------                | ----------
15660:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_X_AXIS  |   0
15661:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS  |   1
15662:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS  |   2
ARM GAS  /tmp/ccWoU29M.s 			page 925


15663:Core/Src/bno055.c ****  *
15664:Core/Src/bno055.c ****  *  @return results of bus communication function
15665:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15666:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15667:Core/Src/bno055.c ****  *
15668:Core/Src/bno055.c ****  *
15669:Core/Src/bno055.c ****  */
15670:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_any_motion_no_motion_axis_enable(u8 channel_u8, u8 dat
15671:Core/Src/bno055.c **** {
 33118              		.loc 1 15671 1 is_stmt 1 view -0
 33119              		.cfi_startproc
 33120              		@ args = 0, pretend = 0, frame = 8
 33121              		@ frame_needed = 0, uses_anonymous_args = 0
 33122              		.loc 1 15671 1 is_stmt 0 view .LVU9226
 33123 0000 70B5     		push	{r4, r5, r6, lr}
 33124              	.LCFI913:
 33125              		.cfi_def_cfa_offset 16
 33126              		.cfi_offset 4, -16
 33127              		.cfi_offset 5, -12
 33128              		.cfi_offset 6, -8
 33129              		.cfi_offset 14, -4
 33130 0002 82B0     		sub	sp, sp, #8
 33131              	.LCFI914:
 33132              		.cfi_def_cfa_offset 24
15672:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33133              		.loc 1 15672 5 is_stmt 1 view .LVU9227
 33134              	.LVL4071:
15673:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33135              		.loc 1 15673 5 view .LVU9228
 33136              		.loc 1 15673 8 is_stmt 0 view .LVU9229
 33137 0004 0023     		movs	r3, #0
 33138 0006 8DF80730 		strb	r3, [sp, #7]
15674:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33139              		.loc 1 15674 5 is_stmt 1 view .LVU9230
 33140              	.LVL4072:
15675:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 33141              		.loc 1 15675 5 view .LVU9231
15676:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 33142              		.loc 1 15676 5 view .LVU9232
 33143              		.loc 1 15676 8 is_stmt 0 view .LVU9233
 33144 000a 8DF80630 		strb	r3, [sp, #6]
15677:Core/Src/bno055.c **** 
15678:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15679:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33145              		.loc 1 15679 5 is_stmt 1 view .LVU9234
 33146              		.loc 1 15679 18 is_stmt 0 view .LVU9235
 33147 000e 544B     		ldr	r3, .L2322
 33148 0010 1B68     		ldr	r3, [r3]
 33149              		.loc 1 15679 8 view .LVU9236
 33150 0012 002B     		cmp	r3, #0
 33151 0014 00F0A080 		beq	.L2312
 33152 0018 0446     		mov	r4, r0
 33153 001a 0D46     		mov	r5, r1
15680:Core/Src/bno055.c ****     {
15681:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15682:Core/Src/bno055.c ****     }
15683:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccWoU29M.s 			page 926


15684:Core/Src/bno055.c ****     {
15685:Core/Src/bno055.c ****         /* The write operation effective only if the operation
15686:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
15687:Core/Src/bno055.c ****          * current operation mode and set the config mode */
15688:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 33154              		.loc 1 15688 9 is_stmt 1 view .LVU9237
 33155              		.loc 1 15688 19 is_stmt 0 view .LVU9238
 33156 001c 0DF10600 		add	r0, sp, #6
 33157              	.LVL4073:
 33158              		.loc 1 15688 19 view .LVU9239
 33159 0020 FFF7FEFF 		bl	bno055_get_operation_mode
 33160              	.LVL4074:
15689:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 33161              		.loc 1 15689 9 is_stmt 1 view .LVU9240
 33162              		.loc 1 15689 12 is_stmt 0 view .LVU9241
 33163 0024 0646     		mov	r6, r0
 33164 0026 0028     		cmp	r0, #0
 33165 0028 40F08580 		bne	.L2313
15690:Core/Src/bno055.c ****         {
15691:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33166              		.loc 1 15691 13 is_stmt 1 view .LVU9242
 33167              		.loc 1 15691 32 is_stmt 0 view .LVU9243
 33168 002c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 33169              		.loc 1 15691 16 view .LVU9244
 33170 0030 1BB9     		cbnz	r3, .L2318
 33171              	.LVL4075:
 33172              	.L2309:
15692:Core/Src/bno055.c ****             {
15693:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
15694:Core/Src/bno055.c ****             }
15695:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 33173              		.loc 1 15695 13 is_stmt 1 view .LVU9245
 33174              		.loc 1 15695 16 is_stmt 0 view .LVU9246
 33175 0032 46B1     		cbz	r6, .L2319
15696:Core/Src/bno055.c ****             {
15697:Core/Src/bno055.c ****                 /* Write page as one */
15698:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15699:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
15700:Core/Src/bno055.c ****                 {
15701:Core/Src/bno055.c ****                     switch (channel_u8)
15702:Core/Src/bno055.c ****                     {
15703:Core/Src/bno055.c ****                         case BNO055_ACCEL_ANY_MOTION_NO_MOTION_X_AXIS:
15704:Core/Src/bno055.c **** 
15705:Core/Src/bno055.c ****                             /* Write the value of
15706:Core/Src/bno055.c ****                              * accel anymotion x enable*/
15707:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15708:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
15709:Core/Src/bno055.c ****                                                                       &data_u8r,
15710:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15711:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15712:Core/Src/bno055.c ****                             {
15713:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_X_
15714:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15715:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
15716:Core/Src/bno055.c ****                                                                             &data_u8r,
15717:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15718:Core/Src/bno055.c ****                             }
ARM GAS  /tmp/ccWoU29M.s 			page 927


15719:Core/Src/bno055.c ****                             break;
15720:Core/Src/bno055.c ****                         case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS:
15721:Core/Src/bno055.c **** 
15722:Core/Src/bno055.c ****                             /* Write the value of
15723:Core/Src/bno055.c ****                              * accel anymotion y enable*/
15724:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15725:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
15726:Core/Src/bno055.c ****                                                                       &data_u8r,
15727:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15728:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15729:Core/Src/bno055.c ****                             {
15730:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_Y_
15731:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15732:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
15733:Core/Src/bno055.c ****                                                                             &data_u8r,
15734:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15735:Core/Src/bno055.c ****                             }
15736:Core/Src/bno055.c ****                             break;
15737:Core/Src/bno055.c ****                         case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Z_AXIS:
15738:Core/Src/bno055.c **** 
15739:Core/Src/bno055.c ****                             /* Write the value of
15740:Core/Src/bno055.c ****                              * accel anymotion z enable*/
15741:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15742:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
15743:Core/Src/bno055.c ****                                                                       &data_u8r,
15744:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15745:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15746:Core/Src/bno055.c ****                             {
15747:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_Z_
15748:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15749:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
15750:Core/Src/bno055.c ****                                                                             &data_u8r,
15751:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15752:Core/Src/bno055.c ****                             }
15753:Core/Src/bno055.c ****                             break;
15754:Core/Src/bno055.c ****                         default:
15755:Core/Src/bno055.c ****                             com_rslt = BNO055_OUT_OF_RANGE;
15756:Core/Src/bno055.c ****                             break;
15757:Core/Src/bno055.c ****                     }
15758:Core/Src/bno055.c ****                 }
15759:Core/Src/bno055.c ****                 else
15760:Core/Src/bno055.c ****                 {
15761:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
15762:Core/Src/bno055.c ****                 }
15763:Core/Src/bno055.c ****             }
15764:Core/Src/bno055.c ****             else
15765:Core/Src/bno055.c ****             {
15766:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 33176              		.loc 1 15766 26 view .LVU9247
 33177 0034 4FF0FF34 		mov	r4, #-1
 33178 0038 7FE0     		b	.L2308
 33179              	.LVL4076:
 33180              	.L2318:
15693:Core/Src/bno055.c ****             }
 33181              		.loc 1 15693 17 is_stmt 1 view .LVU9248
15693:Core/Src/bno055.c ****             }
 33182              		.loc 1 15693 28 is_stmt 0 view .LVU9249
ARM GAS  /tmp/ccWoU29M.s 			page 928


 33183 003a FFF7FEFF 		bl	bno055_set_operation_mode
 33184              	.LVL4077:
15693:Core/Src/bno055.c ****             }
 33185              		.loc 1 15693 25 view .LVU9250
 33186 003e 56FA80F6 		uxtab	r6, r6, r0
 33187 0042 76B2     		sxtb	r6, r6
 33188              	.LVL4078:
15693:Core/Src/bno055.c ****             }
 33189              		.loc 1 15693 25 view .LVU9251
 33190 0044 F5E7     		b	.L2309
 33191              	.L2319:
15698:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 33192              		.loc 1 15698 17 is_stmt 1 view .LVU9252
15698:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 33193              		.loc 1 15698 30 is_stmt 0 view .LVU9253
 33194 0046 0120     		movs	r0, #1
 33195 0048 FFF7FEFF 		bl	bno055_write_page_id
 33196              	.LVL4079:
15699:Core/Src/bno055.c ****                 {
 33197              		.loc 1 15699 17 is_stmt 1 view .LVU9254
15699:Core/Src/bno055.c ****                 {
 33198              		.loc 1 15699 20 is_stmt 0 view .LVU9255
 33199 004c 0028     		cmp	r0, #0
 33200 004e 7AD1     		bne	.L2315
15701:Core/Src/bno055.c ****                     {
 33201              		.loc 1 15701 21 is_stmt 1 view .LVU9256
 33202 0050 012C     		cmp	r4, #1
 33203 0052 29D0     		beq	.L2310
 33204 0054 022C     		cmp	r4, #2
 33205 0056 4BD0     		beq	.L2311
 33206 0058 14B1     		cbz	r4, .L2320
 33207 005a 6FF00104 		mvn	r4, #1
 33208 005e 6CE0     		b	.L2308
 33209              	.L2320:
15707:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
 33210              		.loc 1 15707 29 view .LVU9257
15707:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
 33211              		.loc 1 15707 48 is_stmt 0 view .LVU9258
 33212 0060 3F4B     		ldr	r3, .L2322
 33213 0062 1868     		ldr	r0, [r3]
 33214              	.LVL4080:
15707:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
 33215              		.loc 1 15707 48 view .LVU9259
 33216 0064 0469     		ldr	r4, [r0, #16]
15707:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
 33217              		.loc 1 15707 40 view .LVU9260
 33218 0066 0123     		movs	r3, #1
 33219 0068 0DF10702 		add	r2, sp, #7
 33220 006c 1221     		movs	r1, #18
 33221 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33222 0070 A047     		blx	r4
 33223              	.LVL4081:
15711:Core/Src/bno055.c ****                             {
 33224              		.loc 1 15711 29 is_stmt 1 view .LVU9261
15711:Core/Src/bno055.c ****                             {
 33225              		.loc 1 15711 32 is_stmt 0 view .LVU9262
 33226 0072 0446     		mov	r4, r0
ARM GAS  /tmp/ccWoU29M.s 			page 929


 33227 0074 0028     		cmp	r0, #0
 33228 0076 60D1     		bne	.L2308
15713:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33229              		.loc 1 15713 33 is_stmt 1 view .LVU9263
15713:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33230              		.loc 1 15713 44 is_stmt 0 view .LVU9264
 33231 0078 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33232 007c 23F00403 		bic	r3, r3, #4
 33233 0080 5AB2     		sxtb	r2, r3
 33234 0082 AB00     		lsls	r3, r5, #2
 33235 0084 03F00403 		and	r3, r3, #4
 33236 0088 1343     		orrs	r3, r3, r2
15713:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33237              		.loc 1 15713 42 view .LVU9265
 33238 008a 8DF80730 		strb	r3, [sp, #7]
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33239              		.loc 1 15714 33 is_stmt 1 view .LVU9266
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33240              		.loc 1 15714 53 is_stmt 0 view .LVU9267
 33241 008e 344B     		ldr	r3, .L2322
 33242 0090 1868     		ldr	r0, [r3]
 33243              	.LVL4082:
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33244              		.loc 1 15714 53 view .LVU9268
 33245 0092 C568     		ldr	r5, [r0, #12]
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33246              		.loc 1 15714 45 view .LVU9269
 33247 0094 0123     		movs	r3, #1
 33248 0096 0DF10702 		add	r2, sp, #7
 33249 009a 1221     		movs	r1, #18
 33250 009c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33251 009e A847     		blx	r5
 33252              	.LVL4083:
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33253              		.loc 1 15714 42 view .LVU9270
 33254 00a0 54FA80F4 		uxtab	r4, r4, r0
 33255 00a4 64B2     		sxtb	r4, r4
 33256              	.LVL4084:
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33257              		.loc 1 15714 42 view .LVU9271
 33258 00a6 48E0     		b	.L2308
 33259              	.LVL4085:
 33260              	.L2310:
15724:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
 33261              		.loc 1 15724 29 is_stmt 1 view .LVU9272
15724:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
 33262              		.loc 1 15724 48 is_stmt 0 view .LVU9273
 33263 00a8 2D4B     		ldr	r3, .L2322
 33264 00aa 1868     		ldr	r0, [r3]
 33265              	.LVL4086:
15724:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
 33266              		.loc 1 15724 48 view .LVU9274
 33267 00ac 0469     		ldr	r4, [r0, #16]
15724:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
 33268              		.loc 1 15724 40 view .LVU9275
 33269 00ae 0123     		movs	r3, #1
 33270 00b0 0DF10702 		add	r2, sp, #7
ARM GAS  /tmp/ccWoU29M.s 			page 930


 33271 00b4 1221     		movs	r1, #18
 33272 00b6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33273 00b8 A047     		blx	r4
 33274              	.LVL4087:
15728:Core/Src/bno055.c ****                             {
 33275              		.loc 1 15728 29 is_stmt 1 view .LVU9276
15728:Core/Src/bno055.c ****                             {
 33276              		.loc 1 15728 32 is_stmt 0 view .LVU9277
 33277 00ba 0446     		mov	r4, r0
 33278 00bc 0028     		cmp	r0, #0
 33279 00be 3CD1     		bne	.L2308
15730:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33280              		.loc 1 15730 33 is_stmt 1 view .LVU9278
15730:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33281              		.loc 1 15730 44 is_stmt 0 view .LVU9279
 33282 00c0 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33283 00c4 23F00803 		bic	r3, r3, #8
 33284 00c8 5AB2     		sxtb	r2, r3
 33285 00ca EB00     		lsls	r3, r5, #3
 33286 00cc 03F00803 		and	r3, r3, #8
 33287 00d0 1343     		orrs	r3, r3, r2
15730:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33288              		.loc 1 15730 42 view .LVU9280
 33289 00d2 8DF80730 		strb	r3, [sp, #7]
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33290              		.loc 1 15731 33 is_stmt 1 view .LVU9281
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33291              		.loc 1 15731 53 is_stmt 0 view .LVU9282
 33292 00d6 224B     		ldr	r3, .L2322
 33293 00d8 1868     		ldr	r0, [r3]
 33294              	.LVL4088:
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33295              		.loc 1 15731 53 view .LVU9283
 33296 00da C568     		ldr	r5, [r0, #12]
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33297              		.loc 1 15731 45 view .LVU9284
 33298 00dc 0123     		movs	r3, #1
 33299 00de 0DF10702 		add	r2, sp, #7
 33300 00e2 1221     		movs	r1, #18
 33301 00e4 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33302 00e6 A847     		blx	r5
 33303              	.LVL4089:
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33304              		.loc 1 15731 42 view .LVU9285
 33305 00e8 54FA80F4 		uxtab	r4, r4, r0
 33306 00ec 64B2     		sxtb	r4, r4
 33307              	.LVL4090:
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33308              		.loc 1 15731 42 view .LVU9286
 33309 00ee 24E0     		b	.L2308
 33310              	.LVL4091:
 33311              	.L2311:
15741:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
 33312              		.loc 1 15741 29 is_stmt 1 view .LVU9287
15741:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
 33313              		.loc 1 15741 48 is_stmt 0 view .LVU9288
 33314 00f0 1B4B     		ldr	r3, .L2322
ARM GAS  /tmp/ccWoU29M.s 			page 931


 33315 00f2 1868     		ldr	r0, [r3]
 33316              	.LVL4092:
15741:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
 33317              		.loc 1 15741 48 view .LVU9289
 33318 00f4 0469     		ldr	r4, [r0, #16]
15741:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
 33319              		.loc 1 15741 40 view .LVU9290
 33320 00f6 0123     		movs	r3, #1
 33321 00f8 0DF10702 		add	r2, sp, #7
 33322 00fc 1221     		movs	r1, #18
 33323 00fe 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33324 0100 A047     		blx	r4
 33325              	.LVL4093:
15745:Core/Src/bno055.c ****                             {
 33326              		.loc 1 15745 29 is_stmt 1 view .LVU9291
15745:Core/Src/bno055.c ****                             {
 33327              		.loc 1 15745 32 is_stmt 0 view .LVU9292
 33328 0102 0446     		mov	r4, r0
 33329 0104 C8B9     		cbnz	r0, .L2308
15747:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33330              		.loc 1 15747 33 is_stmt 1 view .LVU9293
15747:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33331              		.loc 1 15747 44 is_stmt 0 view .LVU9294
 33332 0106 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33333 010a 23F01003 		bic	r3, r3, #16
 33334 010e 5AB2     		sxtb	r2, r3
 33335 0110 2B01     		lsls	r3, r5, #4
 33336 0112 03F01003 		and	r3, r3, #16
 33337 0116 1343     		orrs	r3, r3, r2
15747:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33338              		.loc 1 15747 42 view .LVU9295
 33339 0118 8DF80730 		strb	r3, [sp, #7]
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33340              		.loc 1 15748 33 is_stmt 1 view .LVU9296
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33341              		.loc 1 15748 53 is_stmt 0 view .LVU9297
 33342 011c 104B     		ldr	r3, .L2322
 33343 011e 1868     		ldr	r0, [r3]
 33344              	.LVL4094:
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33345              		.loc 1 15748 53 view .LVU9298
 33346 0120 C568     		ldr	r5, [r0, #12]
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33347              		.loc 1 15748 45 view .LVU9299
 33348 0122 0123     		movs	r3, #1
 33349 0124 0DF10702 		add	r2, sp, #7
 33350 0128 1221     		movs	r1, #18
 33351 012a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33352 012c A847     		blx	r5
 33353              	.LVL4095:
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33354              		.loc 1 15748 42 view .LVU9300
 33355 012e 54FA80F4 		uxtab	r4, r4, r0
 33356 0132 64B2     		sxtb	r4, r4
 33357              	.LVL4096:
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33358              		.loc 1 15748 42 view .LVU9301
ARM GAS  /tmp/ccWoU29M.s 			page 932


 33359 0134 01E0     		b	.L2308
 33360              	.LVL4097:
 33361              	.L2313:
15767:Core/Src/bno055.c ****             }
15768:Core/Src/bno055.c ****         }
15769:Core/Src/bno055.c ****         else
15770:Core/Src/bno055.c ****         {
15771:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 33362              		.loc 1 15771 22 view .LVU9302
 33363 0136 4FF0FF34 		mov	r4, #-1
 33364              	.LVL4098:
 33365              	.L2308:
15772:Core/Src/bno055.c ****         }
15773:Core/Src/bno055.c ****     }
15774:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33366              		.loc 1 15774 5 is_stmt 1 view .LVU9303
 33367              		.loc 1 15774 24 is_stmt 0 view .LVU9304
 33368 013a 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 33369              		.loc 1 15774 8 view .LVU9305
 33370 013e 28B9     		cbnz	r0, .L2321
 33371              	.LVL4099:
 33372              	.L2307:
15775:Core/Src/bno055.c ****     {
15776:Core/Src/bno055.c ****         /* set the operation mode of
15777:Core/Src/bno055.c ****          * previous operation mode*/
15778:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
15779:Core/Src/bno055.c ****     }
15780:Core/Src/bno055.c **** 
15781:Core/Src/bno055.c ****     return com_rslt;
15782:Core/Src/bno055.c **** }
 33373              		.loc 1 15782 1 view .LVU9306
 33374 0140 2046     		mov	r0, r4
 33375 0142 02B0     		add	sp, sp, #8
 33376              	.LCFI915:
 33377              		.cfi_remember_state
 33378              		.cfi_def_cfa_offset 16
 33379              		@ sp needed
 33380 0144 70BD     		pop	{r4, r5, r6, pc}
 33381              	.LVL4100:
 33382              	.L2315:
 33383              	.LCFI916:
 33384              		.cfi_restore_state
15761:Core/Src/bno055.c ****                 }
 33385              		.loc 1 15761 30 view .LVU9307
 33386 0146 4FF0FF34 		mov	r4, #-1
 33387 014a F6E7     		b	.L2308
 33388              	.LVL4101:
 33389              	.L2321:
15778:Core/Src/bno055.c ****     }
 33390              		.loc 1 15778 9 is_stmt 1 view .LVU9308
15778:Core/Src/bno055.c ****     }
 33391              		.loc 1 15778 21 is_stmt 0 view .LVU9309
 33392 014c FFF7FEFF 		bl	bno055_set_operation_mode
 33393              	.LVL4102:
15778:Core/Src/bno055.c ****     }
 33394              		.loc 1 15778 18 view .LVU9310
 33395 0150 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/ccWoU29M.s 			page 933


 33396              	.LVL4103:
15778:Core/Src/bno055.c ****     }
 33397              		.loc 1 15778 18 view .LVU9311
 33398 0154 64B2     		sxtb	r4, r4
 33399              	.LVL4104:
15778:Core/Src/bno055.c ****     }
 33400              		.loc 1 15778 18 view .LVU9312
 33401 0156 F3E7     		b	.L2307
 33402              	.LVL4105:
 33403              	.L2312:
15681:Core/Src/bno055.c ****     }
 33404              		.loc 1 15681 16 view .LVU9313
 33405 0158 6FF07E04 		mvn	r4, #126
 33406 015c F0E7     		b	.L2307
 33407              	.L2323:
 33408 015e 00BF     		.align	2
 33409              	.L2322:
 33410 0160 00000000 		.word	.LANCHOR0
 33411              		.cfi_endproc
 33412              	.LFE230:
 33414              		.section	.text.bno055_get_accel_high_g_axis_enable,"ax",%progbits
 33415              		.align	1
 33416              		.global	bno055_get_accel_high_g_axis_enable
 33417              		.syntax unified
 33418              		.thumb
 33419              		.thumb_func
 33420              		.fpu fpv4-sp-d16
 33422              	bno055_get_accel_high_g_axis_enable:
 33423              	.LVL4106:
 33424              	.LFB231:
15783:Core/Src/bno055.c **** 
15784:Core/Src/bno055.c **** /*!
15785:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg enable
15786:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 5 to 7
15787:Core/Src/bno055.c ****  *
15788:Core/Src/bno055.c ****  *  @param data_u8 : The value of accel highg enable
15789:Core/Src/bno055.c ****  *      data_u8| result
15790:Core/Src/bno055.c ****  *  ------------ | -------------
15791:Core/Src/bno055.c ****  *      0x01     | BNO055_BIT_ENABLE
15792:Core/Src/bno055.c ****  *      0x00     | BNO055_BIT_DISABLE
15793:Core/Src/bno055.c ****  *  @param channel_u8 : The value of accel highg axis selection
15794:Core/Src/bno055.c ****  *               channel_u8     | value
15795:Core/Src/bno055.c ****  *     -------------------------- | ----------
15796:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_X_AXIS |   0
15797:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_Y_AXIS |   1
15798:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_Z_AXIS |   2
15799:Core/Src/bno055.c ****  *
15800:Core/Src/bno055.c ****  *  @return results of bus communication function
15801:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15802:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15803:Core/Src/bno055.c ****  *
15804:Core/Src/bno055.c ****  *
15805:Core/Src/bno055.c ****  */
15806:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_high_g_axis_enable(u8 channel_u8, u8 *data_u8)
15807:Core/Src/bno055.c **** {
 33425              		.loc 1 15807 1 is_stmt 1 view -0
 33426              		.cfi_startproc
ARM GAS  /tmp/ccWoU29M.s 			page 934


 33427              		@ args = 0, pretend = 0, frame = 8
 33428              		@ frame_needed = 0, uses_anonymous_args = 0
 33429              		.loc 1 15807 1 is_stmt 0 view .LVU9315
 33430 0000 30B5     		push	{r4, r5, lr}
 33431              	.LCFI917:
 33432              		.cfi_def_cfa_offset 12
 33433              		.cfi_offset 4, -12
 33434              		.cfi_offset 5, -8
 33435              		.cfi_offset 14, -4
 33436 0002 83B0     		sub	sp, sp, #12
 33437              	.LCFI918:
 33438              		.cfi_def_cfa_offset 24
15808:Core/Src/bno055.c ****     /* Variable used to return value of
15809:Core/Src/bno055.c ****      * communication routine*/
15810:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33439              		.loc 1 15810 5 is_stmt 1 view .LVU9316
 33440              	.LVL4107:
15811:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33441              		.loc 1 15811 5 view .LVU9317
 33442              		.loc 1 15811 8 is_stmt 0 view .LVU9318
 33443 0004 0023     		movs	r3, #0
 33444 0006 8DF80730 		strb	r3, [sp, #7]
15812:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33445              		.loc 1 15812 5 is_stmt 1 view .LVU9319
 33446              	.LVL4108:
15813:Core/Src/bno055.c **** 
15814:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15815:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33447              		.loc 1 15815 5 view .LVU9320
 33448              		.loc 1 15815 18 is_stmt 0 view .LVU9321
 33449 000a 274B     		ldr	r3, .L2336
 33450 000c 1B68     		ldr	r3, [r3]
 33451              		.loc 1 15815 8 view .LVU9322
 33452 000e 002B     		cmp	r3, #0
 33453 0010 44D0     		beq	.L2330
 33454 0012 0446     		mov	r4, r0
 33455 0014 0D46     		mov	r5, r1
15816:Core/Src/bno055.c ****     {
15817:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15818:Core/Src/bno055.c ****     }
15819:Core/Src/bno055.c ****     else
15820:Core/Src/bno055.c ****     {
15821:Core/Src/bno055.c ****         /*condition check for page, accel highg enable is
15822:Core/Src/bno055.c ****          * available in the page one*/
15823:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 33456              		.loc 1 15823 9 is_stmt 1 view .LVU9323
 33457              		.loc 1 15823 21 is_stmt 0 view .LVU9324
 33458 0016 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33459              		.loc 1 15823 12 view .LVU9325
 33460 0018 012B     		cmp	r3, #1
 33461 001a 0DD1     		bne	.L2334
 33462              	.LVL4109:
 33463              	.L2326:
15824:Core/Src/bno055.c ****         {
15825:Core/Src/bno055.c ****             /* Write page as one */
15826:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15827:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 935


15828:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 33464              		.loc 1 15828 53 discriminator 1 view .LVU9326
 33465 001c 224B     		ldr	r3, .L2336
 33466 001e 1B68     		ldr	r3, [r3]
 33467 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33468              		.loc 1 15828 41 discriminator 1 view .LVU9327
 33469 0022 012B     		cmp	r3, #1
 33470 0024 3DD1     		bne	.L2331
 33471              	.L2327:
15829:Core/Src/bno055.c ****         {
15830:Core/Src/bno055.c ****             switch (channel_u8)
 33472              		.loc 1 15830 13 is_stmt 1 view .LVU9328
 33473 0026 012C     		cmp	r4, #1
 33474 0028 1BD0     		beq	.L2328
 33475 002a 022C     		cmp	r4, #2
 33476 002c 28D0     		beq	.L2329
 33477 002e 4CB1     		cbz	r4, .L2335
 33478 0030 6FF00100 		mvn	r0, #1
 33479              	.LVL4110:
 33480              	.L2325:
15831:Core/Src/bno055.c ****             {
15832:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_X_AXIS:
15833:Core/Src/bno055.c **** 
15834:Core/Src/bno055.c ****                     /* Read the value of accel x highg enable*/
15835:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15836:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_X_AXIS_REG,
15837:Core/Src/bno055.c ****                                                               &data_u8r,
15838:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15839:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_X_AXIS);
15840:Core/Src/bno055.c ****                     break;
15841:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_Y_AXIS:
15842:Core/Src/bno055.c **** 
15843:Core/Src/bno055.c ****                     /* Read the value of accel y highg enable*/
15844:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15845:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Y_AXIS_REG,
15846:Core/Src/bno055.c ****                                                               &data_u8r,
15847:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15848:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_Y_AXIS);
15849:Core/Src/bno055.c ****                     break;
15850:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_Z_AXIS:
15851:Core/Src/bno055.c **** 
15852:Core/Src/bno055.c ****                     /* Read the value of accel z highg enable*/
15853:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15854:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Z_AXIS_REG,
15855:Core/Src/bno055.c ****                                                               &data_u8r,
15856:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15857:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_Z_AXIS);
15858:Core/Src/bno055.c ****                     break;
15859:Core/Src/bno055.c ****                 default:
15860:Core/Src/bno055.c ****                     com_rslt = BNO055_OUT_OF_RANGE;
15861:Core/Src/bno055.c ****                     break;
15862:Core/Src/bno055.c ****             }
15863:Core/Src/bno055.c ****         }
15864:Core/Src/bno055.c ****         else
15865:Core/Src/bno055.c ****         {
15866:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15867:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 936


15868:Core/Src/bno055.c ****     }
15869:Core/Src/bno055.c **** 
15870:Core/Src/bno055.c ****     return com_rslt;
15871:Core/Src/bno055.c **** }
 33481              		.loc 1 15871 1 is_stmt 0 view .LVU9329
 33482 0034 03B0     		add	sp, sp, #12
 33483              	.LCFI919:
 33484              		.cfi_remember_state
 33485              		.cfi_def_cfa_offset 12
 33486              		@ sp needed
 33487 0036 30BD     		pop	{r4, r5, pc}
 33488              	.LVL4111:
 33489              	.L2334:
 33490              	.LCFI920:
 33491              		.cfi_restore_state
15826:Core/Src/bno055.c ****         }
 33492              		.loc 1 15826 13 is_stmt 1 view .LVU9330
15826:Core/Src/bno055.c ****         }
 33493              		.loc 1 15826 23 is_stmt 0 view .LVU9331
 33494 0038 0120     		movs	r0, #1
 33495              	.LVL4112:
15826:Core/Src/bno055.c ****         }
 33496              		.loc 1 15826 23 view .LVU9332
 33497 003a FFF7FEFF 		bl	bno055_write_page_id
 33498              	.LVL4113:
15828:Core/Src/bno055.c ****         {
 33499              		.loc 1 15828 9 is_stmt 1 view .LVU9333
15828:Core/Src/bno055.c ****         {
 33500              		.loc 1 15828 12 is_stmt 0 view .LVU9334
 33501 003e 0028     		cmp	r0, #0
 33502 0040 F1D0     		beq	.L2327
 33503 0042 EBE7     		b	.L2326
 33504              	.LVL4114:
 33505              	.L2335:
15835:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_X_AXIS_REG,
 33506              		.loc 1 15835 21 is_stmt 1 view .LVU9335
15835:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_X_AXIS_REG,
 33507              		.loc 1 15835 40 is_stmt 0 view .LVU9336
 33508 0044 184B     		ldr	r3, .L2336
 33509 0046 1868     		ldr	r0, [r3]
 33510 0048 0469     		ldr	r4, [r0, #16]
15835:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_X_AXIS_REG,
 33511              		.loc 1 15835 32 view .LVU9337
 33512 004a 0123     		movs	r3, #1
 33513 004c 0DF10702 		add	r2, sp, #7
 33514 0050 1221     		movs	r1, #18
 33515 0052 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33516 0054 A047     		blx	r4
 33517              	.LVL4115:
15839:Core/Src/bno055.c ****                     break;
 33518              		.loc 1 15839 21 is_stmt 1 view .LVU9338
15839:Core/Src/bno055.c ****                     break;
 33519              		.loc 1 15839 32 is_stmt 0 view .LVU9339
 33520 0056 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33521 005a C3F34013 		ubfx	r3, r3, #5, #1
15839:Core/Src/bno055.c ****                     break;
 33522              		.loc 1 15839 30 view .LVU9340
ARM GAS  /tmp/ccWoU29M.s 			page 937


 33523 005e 2B70     		strb	r3, [r5]
15840:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_Y_AXIS:
 33524              		.loc 1 15840 21 is_stmt 1 view .LVU9341
 33525 0060 E8E7     		b	.L2325
 33526              	.LVL4116:
 33527              	.L2328:
15844:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Y_AXIS_REG,
 33528              		.loc 1 15844 21 view .LVU9342
15844:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Y_AXIS_REG,
 33529              		.loc 1 15844 40 is_stmt 0 view .LVU9343
 33530 0062 114B     		ldr	r3, .L2336
 33531 0064 1868     		ldr	r0, [r3]
 33532 0066 0469     		ldr	r4, [r0, #16]
15844:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Y_AXIS_REG,
 33533              		.loc 1 15844 32 view .LVU9344
 33534 0068 0123     		movs	r3, #1
 33535 006a 0DF10702 		add	r2, sp, #7
 33536 006e 1221     		movs	r1, #18
 33537 0070 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33538 0072 A047     		blx	r4
 33539              	.LVL4117:
15848:Core/Src/bno055.c ****                     break;
 33540              		.loc 1 15848 21 is_stmt 1 view .LVU9345
15848:Core/Src/bno055.c ****                     break;
 33541              		.loc 1 15848 32 is_stmt 0 view .LVU9346
 33542 0074 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33543 0078 C3F38013 		ubfx	r3, r3, #6, #1
15848:Core/Src/bno055.c ****                     break;
 33544              		.loc 1 15848 30 view .LVU9347
 33545 007c 2B70     		strb	r3, [r5]
15849:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_Z_AXIS:
 33546              		.loc 1 15849 21 is_stmt 1 view .LVU9348
 33547 007e D9E7     		b	.L2325
 33548              	.LVL4118:
 33549              	.L2329:
15853:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Z_AXIS_REG,
 33550              		.loc 1 15853 21 view .LVU9349
15853:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Z_AXIS_REG,
 33551              		.loc 1 15853 40 is_stmt 0 view .LVU9350
 33552 0080 094B     		ldr	r3, .L2336
 33553 0082 1868     		ldr	r0, [r3]
 33554 0084 0469     		ldr	r4, [r0, #16]
15853:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Z_AXIS_REG,
 33555              		.loc 1 15853 32 view .LVU9351
 33556 0086 0123     		movs	r3, #1
 33557 0088 0DF10702 		add	r2, sp, #7
 33558 008c 1221     		movs	r1, #18
 33559 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33560 0090 A047     		blx	r4
 33561              	.LVL4119:
15857:Core/Src/bno055.c ****                     break;
 33562              		.loc 1 15857 21 is_stmt 1 view .LVU9352
15857:Core/Src/bno055.c ****                     break;
 33563              		.loc 1 15857 32 is_stmt 0 view .LVU9353
 33564 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33565 0096 DB09     		lsrs	r3, r3, #7
15857:Core/Src/bno055.c ****                     break;
ARM GAS  /tmp/ccWoU29M.s 			page 938


 33566              		.loc 1 15857 30 view .LVU9354
 33567 0098 2B70     		strb	r3, [r5]
15858:Core/Src/bno055.c ****                 default:
 33568              		.loc 1 15858 21 is_stmt 1 view .LVU9355
 33569 009a CBE7     		b	.L2325
 33570              	.LVL4120:
 33571              	.L2330:
15817:Core/Src/bno055.c ****     }
 33572              		.loc 1 15817 16 is_stmt 0 view .LVU9356
 33573 009c 6FF07E00 		mvn	r0, #126
 33574              	.LVL4121:
15817:Core/Src/bno055.c ****     }
 33575              		.loc 1 15817 16 view .LVU9357
 33576 00a0 C8E7     		b	.L2325
 33577              	.LVL4122:
 33578              	.L2331:
15866:Core/Src/bno055.c ****         }
 33579              		.loc 1 15866 22 view .LVU9358
 33580 00a2 4FF0FF30 		mov	r0, #-1
 33581 00a6 C5E7     		b	.L2325
 33582              	.L2337:
 33583              		.align	2
 33584              	.L2336:
 33585 00a8 00000000 		.word	.LANCHOR0
 33586              		.cfi_endproc
 33587              	.LFE231:
 33589              		.section	.text.bno055_set_accel_high_g_axis_enable,"ax",%progbits
 33590              		.align	1
 33591              		.global	bno055_set_accel_high_g_axis_enable
 33592              		.syntax unified
 33593              		.thumb
 33594              		.thumb_func
 33595              		.fpu fpv4-sp-d16
 33597              	bno055_set_accel_high_g_axis_enable:
 33598              	.LVL4123:
 33599              	.LFB232:
15872:Core/Src/bno055.c **** 
15873:Core/Src/bno055.c **** /*!
15874:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg enable
15875:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 5 to 7
15876:Core/Src/bno055.c ****  *
15877:Core/Src/bno055.c ****  *  @param data_u8 : The value of accel highg enable
15878:Core/Src/bno055.c ****  *      data_u8| result
15879:Core/Src/bno055.c ****  *  ------------ | -------------
15880:Core/Src/bno055.c ****  *      0x01     | BNO055_BIT_ENABLE
15881:Core/Src/bno055.c ****  *      0x00     | BNO055_BIT_DISABLE
15882:Core/Src/bno055.c ****  *  @param channel_u8 : The value of accel highg axis selection
15883:Core/Src/bno055.c ****  *               channel_u8     | value
15884:Core/Src/bno055.c ****  *     -------------------------- | ----------
15885:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_X_AXIS |   0
15886:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_Y_AXIS |   1
15887:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_Z_AXIS |   2
15888:Core/Src/bno055.c ****  *
15889:Core/Src/bno055.c ****  *  @return results of bus communication function
15890:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15891:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15892:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 939


15893:Core/Src/bno055.c ****  *
15894:Core/Src/bno055.c ****  */
15895:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_high_g_axis_enable(u8 channel_u8, u8 data_u8)
15896:Core/Src/bno055.c **** {
 33600              		.loc 1 15896 1 is_stmt 1 view -0
 33601              		.cfi_startproc
 33602              		@ args = 0, pretend = 0, frame = 8
 33603              		@ frame_needed = 0, uses_anonymous_args = 0
 33604              		.loc 1 15896 1 is_stmt 0 view .LVU9360
 33605 0000 70B5     		push	{r4, r5, r6, lr}
 33606              	.LCFI921:
 33607              		.cfi_def_cfa_offset 16
 33608              		.cfi_offset 4, -16
 33609              		.cfi_offset 5, -12
 33610              		.cfi_offset 6, -8
 33611              		.cfi_offset 14, -4
 33612 0002 82B0     		sub	sp, sp, #8
 33613              	.LCFI922:
 33614              		.cfi_def_cfa_offset 24
15897:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33615              		.loc 1 15897 5 is_stmt 1 view .LVU9361
 33616              	.LVL4124:
15898:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33617              		.loc 1 15898 5 view .LVU9362
 33618              		.loc 1 15898 8 is_stmt 0 view .LVU9363
 33619 0004 0023     		movs	r3, #0
 33620 0006 8DF80730 		strb	r3, [sp, #7]
15899:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33621              		.loc 1 15899 5 is_stmt 1 view .LVU9364
 33622              	.LVL4125:
15900:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 33623              		.loc 1 15900 5 view .LVU9365
15901:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 33624              		.loc 1 15901 5 view .LVU9366
 33625              		.loc 1 15901 8 is_stmt 0 view .LVU9367
 33626 000a 8DF80630 		strb	r3, [sp, #6]
15902:Core/Src/bno055.c **** 
15903:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15904:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33627              		.loc 1 15904 5 is_stmt 1 view .LVU9368
 33628              		.loc 1 15904 18 is_stmt 0 view .LVU9369
 33629 000e 524B     		ldr	r3, .L2354
 33630 0010 1B68     		ldr	r3, [r3]
 33631              		.loc 1 15904 8 view .LVU9370
 33632 0012 002B     		cmp	r3, #0
 33633 0014 00F09D80 		beq	.L2344
 33634 0018 0446     		mov	r4, r0
 33635 001a 0D46     		mov	r5, r1
15905:Core/Src/bno055.c ****     {
15906:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15907:Core/Src/bno055.c ****     }
15908:Core/Src/bno055.c ****     else
15909:Core/Src/bno055.c ****     {
15910:Core/Src/bno055.c ****         /* The write operation effective only if the operation
15911:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
15912:Core/Src/bno055.c ****          * current operation mode and set the config mode */
15913:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
ARM GAS  /tmp/ccWoU29M.s 			page 940


 33636              		.loc 1 15913 9 is_stmt 1 view .LVU9371
 33637              		.loc 1 15913 19 is_stmt 0 view .LVU9372
 33638 001c 0DF10600 		add	r0, sp, #6
 33639              	.LVL4126:
 33640              		.loc 1 15913 19 view .LVU9373
 33641 0020 FFF7FEFF 		bl	bno055_get_operation_mode
 33642              	.LVL4127:
15914:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 33643              		.loc 1 15914 9 is_stmt 1 view .LVU9374
 33644              		.loc 1 15914 12 is_stmt 0 view .LVU9375
 33645 0024 0646     		mov	r6, r0
 33646 0026 0028     		cmp	r0, #0
 33647 0028 40F08280 		bne	.L2345
15915:Core/Src/bno055.c ****         {
15916:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33648              		.loc 1 15916 13 is_stmt 1 view .LVU9376
 33649              		.loc 1 15916 32 is_stmt 0 view .LVU9377
 33650 002c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 33651              		.loc 1 15916 16 view .LVU9378
 33652 0030 1BB9     		cbnz	r3, .L2350
 33653              	.LVL4128:
 33654              	.L2341:
15917:Core/Src/bno055.c ****             {
15918:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
15919:Core/Src/bno055.c ****             }
15920:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 33655              		.loc 1 15920 13 is_stmt 1 view .LVU9379
 33656              		.loc 1 15920 16 is_stmt 0 view .LVU9380
 33657 0032 46B1     		cbz	r6, .L2351
15921:Core/Src/bno055.c ****             {
15922:Core/Src/bno055.c ****                 /* Write page as one */
15923:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15924:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
15925:Core/Src/bno055.c ****                 {
15926:Core/Src/bno055.c ****                     switch (channel_u8)
15927:Core/Src/bno055.c ****                     {
15928:Core/Src/bno055.c ****                         case BNO055_ACCEL_HIGH_G_X_AXIS:
15929:Core/Src/bno055.c **** 
15930:Core/Src/bno055.c ****                             /* Write the value of
15931:Core/Src/bno055.c ****                              * accel x highg enable*/
15932:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15933:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
15934:Core/Src/bno055.c ****                                                                       &data_u8r,
15935:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15936:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15937:Core/Src/bno055.c ****                             {
15938:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_X_AXIS
15939:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15940:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
15941:Core/Src/bno055.c ****                                                                             &data_u8r,
15942:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15943:Core/Src/bno055.c ****                             }
15944:Core/Src/bno055.c ****                             break;
15945:Core/Src/bno055.c ****                         case BNO055_ACCEL_HIGH_G_Y_AXIS:
15946:Core/Src/bno055.c **** 
15947:Core/Src/bno055.c ****                             /* Write the value of
15948:Core/Src/bno055.c ****                              * accel y highg enable*/
ARM GAS  /tmp/ccWoU29M.s 			page 941


15949:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15950:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
15951:Core/Src/bno055.c ****                                                                       &data_u8r,
15952:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15953:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15954:Core/Src/bno055.c ****                             {
15955:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_Y_AXIS
15956:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15957:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
15958:Core/Src/bno055.c ****                                                                             &data_u8r,
15959:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15960:Core/Src/bno055.c ****                             }
15961:Core/Src/bno055.c ****                             break;
15962:Core/Src/bno055.c ****                         case BNO055_ACCEL_HIGH_G_Z_AXIS:
15963:Core/Src/bno055.c **** 
15964:Core/Src/bno055.c ****                             /* Write the value of
15965:Core/Src/bno055.c ****                              * accel z highg enable*/
15966:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15967:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
15968:Core/Src/bno055.c ****                                                                       &data_u8r,
15969:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15970:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15971:Core/Src/bno055.c ****                             {
15972:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_Z_AXIS
15973:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15974:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
15975:Core/Src/bno055.c ****                                                                             &data_u8r,
15976:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15977:Core/Src/bno055.c ****                             }
15978:Core/Src/bno055.c ****                             break;
15979:Core/Src/bno055.c ****                         default:
15980:Core/Src/bno055.c ****                             com_rslt = BNO055_OUT_OF_RANGE;
15981:Core/Src/bno055.c ****                             break;
15982:Core/Src/bno055.c ****                     }
15983:Core/Src/bno055.c ****                 }
15984:Core/Src/bno055.c ****                 else
15985:Core/Src/bno055.c ****                 {
15986:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
15987:Core/Src/bno055.c ****                 }
15988:Core/Src/bno055.c ****             }
15989:Core/Src/bno055.c ****             else
15990:Core/Src/bno055.c ****             {
15991:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 33658              		.loc 1 15991 26 view .LVU9381
 33659 0034 4FF0FF34 		mov	r4, #-1
 33660 0038 7CE0     		b	.L2340
 33661              	.LVL4129:
 33662              	.L2350:
15918:Core/Src/bno055.c ****             }
 33663              		.loc 1 15918 17 is_stmt 1 view .LVU9382
15918:Core/Src/bno055.c ****             }
 33664              		.loc 1 15918 28 is_stmt 0 view .LVU9383
 33665 003a FFF7FEFF 		bl	bno055_set_operation_mode
 33666              	.LVL4130:
15918:Core/Src/bno055.c ****             }
 33667              		.loc 1 15918 25 view .LVU9384
 33668 003e 56FA80F6 		uxtab	r6, r6, r0
ARM GAS  /tmp/ccWoU29M.s 			page 942


 33669 0042 76B2     		sxtb	r6, r6
 33670              	.LVL4131:
15918:Core/Src/bno055.c ****             }
 33671              		.loc 1 15918 25 view .LVU9385
 33672 0044 F5E7     		b	.L2341
 33673              	.L2351:
15923:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 33674              		.loc 1 15923 17 is_stmt 1 view .LVU9386
15923:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 33675              		.loc 1 15923 30 is_stmt 0 view .LVU9387
 33676 0046 0120     		movs	r0, #1
 33677 0048 FFF7FEFF 		bl	bno055_write_page_id
 33678              	.LVL4132:
15924:Core/Src/bno055.c ****                 {
 33679              		.loc 1 15924 17 is_stmt 1 view .LVU9388
15924:Core/Src/bno055.c ****                 {
 33680              		.loc 1 15924 20 is_stmt 0 view .LVU9389
 33681 004c 0028     		cmp	r0, #0
 33682 004e 77D1     		bne	.L2347
15926:Core/Src/bno055.c ****                     {
 33683              		.loc 1 15926 21 is_stmt 1 view .LVU9390
 33684 0050 012C     		cmp	r4, #1
 33685 0052 29D0     		beq	.L2342
 33686 0054 022C     		cmp	r4, #2
 33687 0056 4BD0     		beq	.L2343
 33688 0058 14B1     		cbz	r4, .L2352
 33689 005a 6FF00104 		mvn	r4, #1
 33690 005e 69E0     		b	.L2340
 33691              	.L2352:
15932:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
 33692              		.loc 1 15932 29 view .LVU9391
15932:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
 33693              		.loc 1 15932 48 is_stmt 0 view .LVU9392
 33694 0060 3D4B     		ldr	r3, .L2354
 33695 0062 1868     		ldr	r0, [r3]
 33696              	.LVL4133:
15932:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
 33697              		.loc 1 15932 48 view .LVU9393
 33698 0064 0469     		ldr	r4, [r0, #16]
15932:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
 33699              		.loc 1 15932 40 view .LVU9394
 33700 0066 0123     		movs	r3, #1
 33701 0068 0DF10702 		add	r2, sp, #7
 33702 006c 1221     		movs	r1, #18
 33703 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33704 0070 A047     		blx	r4
 33705              	.LVL4134:
15936:Core/Src/bno055.c ****                             {
 33706              		.loc 1 15936 29 is_stmt 1 view .LVU9395
15936:Core/Src/bno055.c ****                             {
 33707              		.loc 1 15936 32 is_stmt 0 view .LVU9396
 33708 0072 0446     		mov	r4, r0
 33709 0074 0028     		cmp	r0, #0
 33710 0076 5DD1     		bne	.L2340
15938:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33711              		.loc 1 15938 33 is_stmt 1 view .LVU9397
15938:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccWoU29M.s 			page 943


 33712              		.loc 1 15938 44 is_stmt 0 view .LVU9398
 33713 0078 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33714 007c 23F02003 		bic	r3, r3, #32
 33715 0080 5AB2     		sxtb	r2, r3
 33716 0082 6B01     		lsls	r3, r5, #5
 33717 0084 03F02003 		and	r3, r3, #32
 33718 0088 1343     		orrs	r3, r3, r2
15938:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33719              		.loc 1 15938 42 view .LVU9399
 33720 008a 8DF80730 		strb	r3, [sp, #7]
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 33721              		.loc 1 15939 33 is_stmt 1 view .LVU9400
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 33722              		.loc 1 15939 53 is_stmt 0 view .LVU9401
 33723 008e 324B     		ldr	r3, .L2354
 33724 0090 1868     		ldr	r0, [r3]
 33725              	.LVL4135:
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 33726              		.loc 1 15939 53 view .LVU9402
 33727 0092 C568     		ldr	r5, [r0, #12]
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 33728              		.loc 1 15939 45 view .LVU9403
 33729 0094 0123     		movs	r3, #1
 33730 0096 0DF10702 		add	r2, sp, #7
 33731 009a 1221     		movs	r1, #18
 33732 009c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33733 009e A847     		blx	r5
 33734              	.LVL4136:
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 33735              		.loc 1 15939 42 view .LVU9404
 33736 00a0 54FA80F4 		uxtab	r4, r4, r0
 33737 00a4 64B2     		sxtb	r4, r4
 33738              	.LVL4137:
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 33739              		.loc 1 15939 42 view .LVU9405
 33740 00a6 45E0     		b	.L2340
 33741              	.LVL4138:
 33742              	.L2342:
15949:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
 33743              		.loc 1 15949 29 is_stmt 1 view .LVU9406
15949:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
 33744              		.loc 1 15949 48 is_stmt 0 view .LVU9407
 33745 00a8 2B4B     		ldr	r3, .L2354
 33746 00aa 1868     		ldr	r0, [r3]
 33747              	.LVL4139:
15949:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
 33748              		.loc 1 15949 48 view .LVU9408
 33749 00ac 0469     		ldr	r4, [r0, #16]
15949:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
 33750              		.loc 1 15949 40 view .LVU9409
 33751 00ae 0123     		movs	r3, #1
 33752 00b0 0DF10702 		add	r2, sp, #7
 33753 00b4 1221     		movs	r1, #18
 33754 00b6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33755 00b8 A047     		blx	r4
 33756              	.LVL4140:
15953:Core/Src/bno055.c ****                             {
ARM GAS  /tmp/ccWoU29M.s 			page 944


 33757              		.loc 1 15953 29 is_stmt 1 view .LVU9410
15953:Core/Src/bno055.c ****                             {
 33758              		.loc 1 15953 32 is_stmt 0 view .LVU9411
 33759 00ba 0446     		mov	r4, r0
 33760 00bc 0028     		cmp	r0, #0
 33761 00be 39D1     		bne	.L2340
15955:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33762              		.loc 1 15955 33 is_stmt 1 view .LVU9412
15955:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33763              		.loc 1 15955 44 is_stmt 0 view .LVU9413
 33764 00c0 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33765 00c4 23F04003 		bic	r3, r3, #64
 33766 00c8 5AB2     		sxtb	r2, r3
 33767 00ca AB01     		lsls	r3, r5, #6
 33768 00cc 03F04003 		and	r3, r3, #64
 33769 00d0 1343     		orrs	r3, r3, r2
15955:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33770              		.loc 1 15955 42 view .LVU9414
 33771 00d2 8DF80730 		strb	r3, [sp, #7]
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 33772              		.loc 1 15956 33 is_stmt 1 view .LVU9415
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 33773              		.loc 1 15956 53 is_stmt 0 view .LVU9416
 33774 00d6 204B     		ldr	r3, .L2354
 33775 00d8 1868     		ldr	r0, [r3]
 33776              	.LVL4141:
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 33777              		.loc 1 15956 53 view .LVU9417
 33778 00da C568     		ldr	r5, [r0, #12]
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 33779              		.loc 1 15956 45 view .LVU9418
 33780 00dc 0123     		movs	r3, #1
 33781 00de 0DF10702 		add	r2, sp, #7
 33782 00e2 1221     		movs	r1, #18
 33783 00e4 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33784 00e6 A847     		blx	r5
 33785              	.LVL4142:
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 33786              		.loc 1 15956 42 view .LVU9419
 33787 00e8 54FA80F4 		uxtab	r4, r4, r0
 33788 00ec 64B2     		sxtb	r4, r4
 33789              	.LVL4143:
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 33790              		.loc 1 15956 42 view .LVU9420
 33791 00ee 21E0     		b	.L2340
 33792              	.LVL4144:
 33793              	.L2343:
15966:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
 33794              		.loc 1 15966 29 is_stmt 1 view .LVU9421
15966:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
 33795              		.loc 1 15966 48 is_stmt 0 view .LVU9422
 33796 00f0 194B     		ldr	r3, .L2354
 33797 00f2 1868     		ldr	r0, [r3]
 33798              	.LVL4145:
15966:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
 33799              		.loc 1 15966 48 view .LVU9423
 33800 00f4 0469     		ldr	r4, [r0, #16]
ARM GAS  /tmp/ccWoU29M.s 			page 945


15966:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
 33801              		.loc 1 15966 40 view .LVU9424
 33802 00f6 0123     		movs	r3, #1
 33803 00f8 0DF10702 		add	r2, sp, #7
 33804 00fc 1221     		movs	r1, #18
 33805 00fe 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33806 0100 A047     		blx	r4
 33807              	.LVL4146:
15970:Core/Src/bno055.c ****                             {
 33808              		.loc 1 15970 29 is_stmt 1 view .LVU9425
15970:Core/Src/bno055.c ****                             {
 33809              		.loc 1 15970 32 is_stmt 0 view .LVU9426
 33810 0102 0446     		mov	r4, r0
 33811 0104 B0B9     		cbnz	r0, .L2340
15972:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33812              		.loc 1 15972 33 is_stmt 1 view .LVU9427
15972:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33813              		.loc 1 15972 44 is_stmt 0 view .LVU9428
 33814 0106 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33815 010a 03F07F03 		and	r3, r3, #127
 33816 010e 43EAC515 		orr	r5, r3, r5, lsl #7
15972:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33817              		.loc 1 15972 42 view .LVU9429
 33818 0112 8DF80750 		strb	r5, [sp, #7]
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 33819              		.loc 1 15973 33 is_stmt 1 view .LVU9430
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 33820              		.loc 1 15973 53 is_stmt 0 view .LVU9431
 33821 0116 104B     		ldr	r3, .L2354
 33822 0118 1868     		ldr	r0, [r3]
 33823              	.LVL4147:
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 33824              		.loc 1 15973 53 view .LVU9432
 33825 011a C568     		ldr	r5, [r0, #12]
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 33826              		.loc 1 15973 45 view .LVU9433
 33827 011c 0123     		movs	r3, #1
 33828 011e 0DF10702 		add	r2, sp, #7
 33829 0122 1221     		movs	r1, #18
 33830 0124 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33831 0126 A847     		blx	r5
 33832              	.LVL4148:
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 33833              		.loc 1 15973 42 view .LVU9434
 33834 0128 54FA80F4 		uxtab	r4, r4, r0
 33835 012c 64B2     		sxtb	r4, r4
 33836              	.LVL4149:
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 33837              		.loc 1 15973 42 view .LVU9435
 33838 012e 01E0     		b	.L2340
 33839              	.LVL4150:
 33840              	.L2345:
15992:Core/Src/bno055.c ****             }
15993:Core/Src/bno055.c ****         }
15994:Core/Src/bno055.c ****         else
15995:Core/Src/bno055.c ****         {
15996:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 946


 33841              		.loc 1 15996 22 view .LVU9436
 33842 0130 4FF0FF34 		mov	r4, #-1
 33843              	.LVL4151:
 33844              	.L2340:
15997:Core/Src/bno055.c ****         }
15998:Core/Src/bno055.c ****     }
15999:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33845              		.loc 1 15999 5 is_stmt 1 view .LVU9437
 33846              		.loc 1 15999 24 is_stmt 0 view .LVU9438
 33847 0134 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 33848              		.loc 1 15999 8 view .LVU9439
 33849 0138 28B9     		cbnz	r0, .L2353
 33850              	.LVL4152:
 33851              	.L2339:
16000:Core/Src/bno055.c ****     {
16001:Core/Src/bno055.c ****         /* set the operation mode of
16002:Core/Src/bno055.c ****          * previous operation mode*/
16003:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16004:Core/Src/bno055.c ****     }
16005:Core/Src/bno055.c **** 
16006:Core/Src/bno055.c ****     return com_rslt;
16007:Core/Src/bno055.c **** }
 33852              		.loc 1 16007 1 view .LVU9440
 33853 013a 2046     		mov	r0, r4
 33854 013c 02B0     		add	sp, sp, #8
 33855              	.LCFI923:
 33856              		.cfi_remember_state
 33857              		.cfi_def_cfa_offset 16
 33858              		@ sp needed
 33859 013e 70BD     		pop	{r4, r5, r6, pc}
 33860              	.LVL4153:
 33861              	.L2347:
 33862              	.LCFI924:
 33863              		.cfi_restore_state
15986:Core/Src/bno055.c ****                 }
 33864              		.loc 1 15986 30 view .LVU9441
 33865 0140 4FF0FF34 		mov	r4, #-1
 33866 0144 F6E7     		b	.L2340
 33867              	.LVL4154:
 33868              	.L2353:
16003:Core/Src/bno055.c ****     }
 33869              		.loc 1 16003 9 is_stmt 1 view .LVU9442
16003:Core/Src/bno055.c ****     }
 33870              		.loc 1 16003 21 is_stmt 0 view .LVU9443
 33871 0146 FFF7FEFF 		bl	bno055_set_operation_mode
 33872              	.LVL4155:
16003:Core/Src/bno055.c ****     }
 33873              		.loc 1 16003 18 view .LVU9444
 33874 014a 54FA80F4 		uxtab	r4, r4, r0
 33875              	.LVL4156:
16003:Core/Src/bno055.c ****     }
 33876              		.loc 1 16003 18 view .LVU9445
 33877 014e 64B2     		sxtb	r4, r4
 33878              	.LVL4157:
16003:Core/Src/bno055.c ****     }
 33879              		.loc 1 16003 18 view .LVU9446
 33880 0150 F3E7     		b	.L2339
ARM GAS  /tmp/ccWoU29M.s 			page 947


 33881              	.LVL4158:
 33882              	.L2344:
15906:Core/Src/bno055.c ****     }
 33883              		.loc 1 15906 16 view .LVU9447
 33884 0152 6FF07E04 		mvn	r4, #126
 33885 0156 F0E7     		b	.L2339
 33886              	.L2355:
 33887              		.align	2
 33888              	.L2354:
 33889 0158 00000000 		.word	.LANCHOR0
 33890              		.cfi_endproc
 33891              	.LFE232:
 33893              		.section	.text.bno055_get_accel_high_g_durn,"ax",%progbits
 33894              		.align	1
 33895              		.global	bno055_get_accel_high_g_durn
 33896              		.syntax unified
 33897              		.thumb
 33898              		.thumb_func
 33899              		.fpu fpv4-sp-d16
 33901              	bno055_get_accel_high_g_durn:
 33902              	.LVL4159:
 33903              	.LFB233:
16008:Core/Src/bno055.c **** 
16009:Core/Src/bno055.c **** /*!
16010:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg duration
16011:Core/Src/bno055.c ****  *  from page one register from 0x13 bit 0 to 7
16012:Core/Src/bno055.c ****  *
16013:Core/Src/bno055.c ****  *  @param accel_high_g_durn_u8 : The value of accel highg duration
16014:Core/Src/bno055.c ****  *
16015:Core/Src/bno055.c ****  *  @return results of bus communication function
16016:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16017:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16018:Core/Src/bno055.c ****  *
16019:Core/Src/bno055.c ****  *  @note The high-g interrupt trigger delay according
16020:Core/Src/bno055.c ****  *  to [highg duration  + 1] * 2 ms
16021:Core/Src/bno055.c ****  *
16022:Core/Src/bno055.c ****  *  in a range from 2 ms to 512 ms
16023:Core/Src/bno055.c ****  *
16024:Core/Src/bno055.c ****  */
16025:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_high_g_durn(u8 *accel_high_g_durn_u8)
16026:Core/Src/bno055.c **** {
 33904              		.loc 1 16026 1 is_stmt 1 view -0
 33905              		.cfi_startproc
 33906              		@ args = 0, pretend = 0, frame = 8
 33907              		@ frame_needed = 0, uses_anonymous_args = 0
 33908              		.loc 1 16026 1 is_stmt 0 view .LVU9449
 33909 0000 70B5     		push	{r4, r5, r6, lr}
 33910              	.LCFI925:
 33911              		.cfi_def_cfa_offset 16
 33912              		.cfi_offset 4, -16
 33913              		.cfi_offset 5, -12
 33914              		.cfi_offset 6, -8
 33915              		.cfi_offset 14, -4
 33916 0002 82B0     		sub	sp, sp, #8
 33917              	.LCFI926:
 33918              		.cfi_def_cfa_offset 24
16027:Core/Src/bno055.c ****     /* Variable used to return value of
ARM GAS  /tmp/ccWoU29M.s 			page 948


16028:Core/Src/bno055.c ****      * communication routine*/
16029:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33919              		.loc 1 16029 5 is_stmt 1 view .LVU9450
 33920              	.LVL4160:
16030:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33921              		.loc 1 16030 5 view .LVU9451
 33922              		.loc 1 16030 8 is_stmt 0 view .LVU9452
 33923 0004 0023     		movs	r3, #0
 33924 0006 8DF80730 		strb	r3, [sp, #7]
16031:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33925              		.loc 1 16031 5 is_stmt 1 view .LVU9453
 33926              	.LVL4161:
16032:Core/Src/bno055.c **** 
16033:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16034:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33927              		.loc 1 16034 5 view .LVU9454
 33928              		.loc 1 16034 18 is_stmt 0 view .LVU9455
 33929 000a 134B     		ldr	r3, .L2364
 33930 000c 1B68     		ldr	r3, [r3]
 33931              		.loc 1 16034 8 view .LVU9456
 33932 000e E3B1     		cbz	r3, .L2360
 33933 0010 0546     		mov	r5, r0
16035:Core/Src/bno055.c ****     {
16036:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16037:Core/Src/bno055.c ****     }
16038:Core/Src/bno055.c ****     else
16039:Core/Src/bno055.c ****     {
16040:Core/Src/bno055.c ****         /*condition check for page, accel highg duration is
16041:Core/Src/bno055.c ****          * available in the page one*/
16042:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 33934              		.loc 1 16042 9 is_stmt 1 view .LVU9457
 33935              		.loc 1 16042 21 is_stmt 0 view .LVU9458
 33936 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33937              		.loc 1 16042 12 view .LVU9459
 33938 0014 012B     		cmp	r3, #1
 33939 0016 12D1     		bne	.L2363
 33940              	.LVL4162:
 33941              	.L2358:
16043:Core/Src/bno055.c ****         {
16044:Core/Src/bno055.c ****             /* Write page as one */
16045:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16046:Core/Src/bno055.c ****         }
16047:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 33942              		.loc 1 16047 53 discriminator 1 view .LVU9460
 33943 0018 0F4B     		ldr	r3, .L2364
 33944 001a 1B68     		ldr	r3, [r3]
 33945 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33946              		.loc 1 16047 41 discriminator 1 view .LVU9461
 33947 001e 012B     		cmp	r3, #1
 33948 0020 16D1     		bne	.L2361
 33949              	.L2359:
16048:Core/Src/bno055.c ****         {
16049:Core/Src/bno055.c ****             /* Read the value of accel highg duration*/
16050:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 33950              		.loc 1 16050 13 is_stmt 1 view .LVU9462
 33951              		.loc 1 16050 32 is_stmt 0 view .LVU9463
 33952 0022 0D4B     		ldr	r3, .L2364
ARM GAS  /tmp/ccWoU29M.s 			page 949


 33953 0024 1C68     		ldr	r4, [r3]
 33954 0026 2669     		ldr	r6, [r4, #16]
 33955              		.loc 1 16050 24 view .LVU9464
 33956 0028 0123     		movs	r3, #1
 33957 002a 0DF10702 		add	r2, sp, #7
 33958 002e 1321     		movs	r1, #19
 33959 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 33960 0032 B047     		blx	r6
 33961              	.LVL4163:
16051:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_DURN_REG,
16052:Core/Src/bno055.c ****                                                       &data_u8r,
16053:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16054:Core/Src/bno055.c ****             *accel_high_g_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_DURN);
 33962              		.loc 1 16054 13 is_stmt 1 view .LVU9465
 33963              		.loc 1 16054 35 is_stmt 0 view .LVU9466
 33964 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33965 0038 2B70     		strb	r3, [r5]
 33966              	.LVL4164:
 33967              	.L2357:
16055:Core/Src/bno055.c ****         }
16056:Core/Src/bno055.c ****         else
16057:Core/Src/bno055.c ****         {
16058:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16059:Core/Src/bno055.c ****         }
16060:Core/Src/bno055.c ****     }
16061:Core/Src/bno055.c **** 
16062:Core/Src/bno055.c ****     return com_rslt;
16063:Core/Src/bno055.c **** }
 33968              		.loc 1 16063 1 view .LVU9467
 33969 003a 02B0     		add	sp, sp, #8
 33970              	.LCFI927:
 33971              		.cfi_remember_state
 33972              		.cfi_def_cfa_offset 16
 33973              		@ sp needed
 33974 003c 70BD     		pop	{r4, r5, r6, pc}
 33975              	.LVL4165:
 33976              	.L2363:
 33977              	.LCFI928:
 33978              		.cfi_restore_state
16045:Core/Src/bno055.c ****         }
 33979              		.loc 1 16045 13 is_stmt 1 view .LVU9468
16045:Core/Src/bno055.c ****         }
 33980              		.loc 1 16045 23 is_stmt 0 view .LVU9469
 33981 003e 0120     		movs	r0, #1
 33982              	.LVL4166:
16045:Core/Src/bno055.c ****         }
 33983              		.loc 1 16045 23 view .LVU9470
 33984 0040 FFF7FEFF 		bl	bno055_write_page_id
 33985              	.LVL4167:
16047:Core/Src/bno055.c ****         {
 33986              		.loc 1 16047 9 is_stmt 1 view .LVU9471
16047:Core/Src/bno055.c ****         {
 33987              		.loc 1 16047 12 is_stmt 0 view .LVU9472
 33988 0044 0028     		cmp	r0, #0
 33989 0046 ECD0     		beq	.L2359
 33990 0048 E6E7     		b	.L2358
 33991              	.LVL4168:
ARM GAS  /tmp/ccWoU29M.s 			page 950


 33992              	.L2360:
16036:Core/Src/bno055.c ****     }
 33993              		.loc 1 16036 16 view .LVU9473
 33994 004a 6FF07E00 		mvn	r0, #126
 33995              	.LVL4169:
16036:Core/Src/bno055.c ****     }
 33996              		.loc 1 16036 16 view .LVU9474
 33997 004e F4E7     		b	.L2357
 33998              	.LVL4170:
 33999              	.L2361:
16058:Core/Src/bno055.c ****         }
 34000              		.loc 1 16058 22 view .LVU9475
 34001 0050 4FF0FF30 		mov	r0, #-1
 34002 0054 F1E7     		b	.L2357
 34003              	.L2365:
 34004 0056 00BF     		.align	2
 34005              	.L2364:
 34006 0058 00000000 		.word	.LANCHOR0
 34007              		.cfi_endproc
 34008              	.LFE233:
 34010              		.section	.text.bno055_set_accel_high_g_durn,"ax",%progbits
 34011              		.align	1
 34012              		.global	bno055_set_accel_high_g_durn
 34013              		.syntax unified
 34014              		.thumb
 34015              		.thumb_func
 34016              		.fpu fpv4-sp-d16
 34018              	bno055_set_accel_high_g_durn:
 34019              	.LVL4171:
 34020              	.LFB234:
16064:Core/Src/bno055.c **** 
16065:Core/Src/bno055.c **** /*!
16066:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg duration
16067:Core/Src/bno055.c ****  *  from page one register from 0x13 bit 0 to 7
16068:Core/Src/bno055.c ****  *
16069:Core/Src/bno055.c ****  *  @param accel_high_g_durn_u8 : The value of accel highg duration
16070:Core/Src/bno055.c ****  *
16071:Core/Src/bno055.c ****  *  @return results of bus communication function
16072:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16073:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16074:Core/Src/bno055.c ****  *
16075:Core/Src/bno055.c ****  *  @note The high-g interrupt trigger delay according
16076:Core/Src/bno055.c ****  *  to [highg duration  + 1] * 2 ms
16077:Core/Src/bno055.c ****  *
16078:Core/Src/bno055.c ****  *  in a range from 2 ms to 512 ms
16079:Core/Src/bno055.c ****  *
16080:Core/Src/bno055.c ****  */
16081:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_high_g_durn(u8 accel_high_g_durn_u8)
16082:Core/Src/bno055.c **** {
 34021              		.loc 1 16082 1 is_stmt 1 view -0
 34022              		.cfi_startproc
 34023              		@ args = 0, pretend = 0, frame = 8
 34024              		@ frame_needed = 0, uses_anonymous_args = 0
 34025              		.loc 1 16082 1 is_stmt 0 view .LVU9477
 34026 0000 30B5     		push	{r4, r5, lr}
 34027              	.LCFI929:
 34028              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccWoU29M.s 			page 951


 34029              		.cfi_offset 4, -12
 34030              		.cfi_offset 5, -8
 34031              		.cfi_offset 14, -4
 34032 0002 83B0     		sub	sp, sp, #12
 34033              	.LCFI930:
 34034              		.cfi_def_cfa_offset 24
16083:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34035              		.loc 1 16083 5 is_stmt 1 view .LVU9478
 34036              	.LVL4172:
16084:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34037              		.loc 1 16084 5 view .LVU9479
 34038              		.loc 1 16084 8 is_stmt 0 view .LVU9480
 34039 0004 0023     		movs	r3, #0
 34040 0006 8DF80730 		strb	r3, [sp, #7]
16085:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34041              		.loc 1 16085 5 is_stmt 1 view .LVU9481
 34042              	.LVL4173:
16086:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 34043              		.loc 1 16086 5 view .LVU9482
 34044              		.loc 1 16086 8 is_stmt 0 view .LVU9483
 34045 000a 8DF80630 		strb	r3, [sp, #6]
16087:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 34046              		.loc 1 16087 5 is_stmt 1 view .LVU9484
 34047              	.LVL4174:
16088:Core/Src/bno055.c **** 
16089:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16090:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34048              		.loc 1 16090 5 view .LVU9485
 34049              		.loc 1 16090 18 is_stmt 0 view .LVU9486
 34050 000e 254B     		ldr	r3, .L2378
 34051 0010 1B68     		ldr	r3, [r3]
 34052              		.loc 1 16090 8 view .LVU9487
 34053 0012 002B     		cmp	r3, #0
 34054 0014 42D0     		beq	.L2370
 34055 0016 0546     		mov	r5, r0
16091:Core/Src/bno055.c ****     {
16092:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16093:Core/Src/bno055.c ****     }
16094:Core/Src/bno055.c ****     else
16095:Core/Src/bno055.c ****     {
16096:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16097:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16098:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16099:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 34056              		.loc 1 16099 9 is_stmt 1 view .LVU9488
 34057              		.loc 1 16099 19 is_stmt 0 view .LVU9489
 34058 0018 0DF10600 		add	r0, sp, #6
 34059              	.LVL4175:
 34060              		.loc 1 16099 19 view .LVU9490
 34061 001c FFF7FEFF 		bl	bno055_get_operation_mode
 34062              	.LVL4176:
16100:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 34063              		.loc 1 16100 9 is_stmt 1 view .LVU9491
 34064              		.loc 1 16100 12 is_stmt 0 view .LVU9492
 34065 0020 0446     		mov	r4, r0
 34066 0022 50BB     		cbnz	r0, .L2371
16101:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 952


16102:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34067              		.loc 1 16102 13 is_stmt 1 view .LVU9493
 34068              		.loc 1 16102 32 is_stmt 0 view .LVU9494
 34069 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 34070              		.loc 1 16102 16 view .LVU9495
 34071 0028 1BB9     		cbnz	r3, .L2375
 34072              	.LVL4177:
 34073              	.L2369:
16103:Core/Src/bno055.c ****             {
16104:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16105:Core/Src/bno055.c ****             }
16106:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 34074              		.loc 1 16106 13 is_stmt 1 view .LVU9496
 34075              		.loc 1 16106 16 is_stmt 0 view .LVU9497
 34076 002a 44B1     		cbz	r4, .L2376
16107:Core/Src/bno055.c ****             {
16108:Core/Src/bno055.c ****                 /* Write page as one */
16109:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16110:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16111:Core/Src/bno055.c ****                 {
16112:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16113:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
16114:Core/Src/bno055.c ****                                                               &data_u8r,
16115:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16116:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16117:Core/Src/bno055.c ****                     {
16118:Core/Src/bno055.c ****                         /* Write the value of
16119:Core/Src/bno055.c ****                          * accel highg duration*/
16120:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_DURN, accel_hi
16121:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16122:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
16123:Core/Src/bno055.c ****                                                                     &data_u8r,
16124:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16125:Core/Src/bno055.c ****                     }
16126:Core/Src/bno055.c ****                 }
16127:Core/Src/bno055.c ****                 else
16128:Core/Src/bno055.c ****                 {
16129:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16130:Core/Src/bno055.c ****                 }
16131:Core/Src/bno055.c ****             }
16132:Core/Src/bno055.c ****             else
16133:Core/Src/bno055.c ****             {
16134:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 34077              		.loc 1 16134 26 view .LVU9498
 34078 002c 4FF0FF34 		mov	r4, #-1
 34079              	.LVL4178:
 34080              		.loc 1 16134 26 view .LVU9499
 34081 0030 25E0     		b	.L2368
 34082              	.LVL4179:
 34083              	.L2375:
16104:Core/Src/bno055.c ****             }
 34084              		.loc 1 16104 17 is_stmt 1 view .LVU9500
16104:Core/Src/bno055.c ****             }
 34085              		.loc 1 16104 28 is_stmt 0 view .LVU9501
 34086 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 34087              	.LVL4180:
16104:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccWoU29M.s 			page 953


 34088              		.loc 1 16104 25 view .LVU9502
 34089 0036 54FA80F4 		uxtab	r4, r4, r0
 34090 003a 64B2     		sxtb	r4, r4
 34091              	.LVL4181:
16104:Core/Src/bno055.c ****             }
 34092              		.loc 1 16104 25 view .LVU9503
 34093 003c F5E7     		b	.L2369
 34094              	.L2376:
16109:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34095              		.loc 1 16109 17 is_stmt 1 view .LVU9504
16109:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34096              		.loc 1 16109 30 is_stmt 0 view .LVU9505
 34097 003e 0120     		movs	r0, #1
 34098 0040 FFF7FEFF 		bl	bno055_write_page_id
 34099              	.LVL4182:
16110:Core/Src/bno055.c ****                 {
 34100              		.loc 1 16110 17 is_stmt 1 view .LVU9506
16110:Core/Src/bno055.c ****                 {
 34101              		.loc 1 16110 20 is_stmt 0 view .LVU9507
 34102 0044 08BB     		cbnz	r0, .L2373
16112:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
 34103              		.loc 1 16112 21 is_stmt 1 view .LVU9508
16112:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
 34104              		.loc 1 16112 40 is_stmt 0 view .LVU9509
 34105 0046 174B     		ldr	r3, .L2378
 34106 0048 1868     		ldr	r0, [r3]
 34107              	.LVL4183:
16112:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
 34108              		.loc 1 16112 40 view .LVU9510
 34109 004a 0469     		ldr	r4, [r0, #16]
 34110              	.LVL4184:
16112:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
 34111              		.loc 1 16112 32 view .LVU9511
 34112 004c 0123     		movs	r3, #1
 34113 004e 0DF10702 		add	r2, sp, #7
 34114 0052 1321     		movs	r1, #19
 34115 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34116 0056 A047     		blx	r4
 34117              	.LVL4185:
16116:Core/Src/bno055.c ****                     {
 34118              		.loc 1 16116 21 is_stmt 1 view .LVU9512
16116:Core/Src/bno055.c ****                     {
 34119              		.loc 1 16116 24 is_stmt 0 view .LVU9513
 34120 0058 0446     		mov	r4, r0
 34121 005a 80B9     		cbnz	r0, .L2368
16120:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34122              		.loc 1 16120 25 is_stmt 1 view .LVU9514
16120:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34123              		.loc 1 16120 34 is_stmt 0 view .LVU9515
 34124 005c 8DF80750 		strb	r5, [sp, #7]
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 34125              		.loc 1 16121 25 is_stmt 1 view .LVU9516
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 34126              		.loc 1 16121 45 is_stmt 0 view .LVU9517
 34127 0060 104B     		ldr	r3, .L2378
 34128 0062 1868     		ldr	r0, [r3]
 34129              	.LVL4186:
ARM GAS  /tmp/ccWoU29M.s 			page 954


16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 34130              		.loc 1 16121 45 view .LVU9518
 34131 0064 C568     		ldr	r5, [r0, #12]
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 34132              		.loc 1 16121 37 view .LVU9519
 34133 0066 0123     		movs	r3, #1
 34134 0068 0DF10702 		add	r2, sp, #7
 34135 006c 1321     		movs	r1, #19
 34136 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34137 0070 A847     		blx	r5
 34138              	.LVL4187:
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 34139              		.loc 1 16121 34 view .LVU9520
 34140 0072 54FA80F4 		uxtab	r4, r4, r0
 34141 0076 64B2     		sxtb	r4, r4
 34142              	.LVL4188:
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 34143              		.loc 1 16121 34 view .LVU9521
 34144 0078 01E0     		b	.L2368
 34145              	.LVL4189:
 34146              	.L2371:
16135:Core/Src/bno055.c ****             }
16136:Core/Src/bno055.c ****         }
16137:Core/Src/bno055.c ****         else
16138:Core/Src/bno055.c ****         {
16139:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 34147              		.loc 1 16139 22 view .LVU9522
 34148 007a 4FF0FF34 		mov	r4, #-1
 34149              	.LVL4190:
 34150              	.L2368:
16140:Core/Src/bno055.c ****         }
16141:Core/Src/bno055.c ****     }
16142:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34151              		.loc 1 16142 5 is_stmt 1 view .LVU9523
 34152              		.loc 1 16142 24 is_stmt 0 view .LVU9524
 34153 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 34154              		.loc 1 16142 8 view .LVU9525
 34155 0082 28B9     		cbnz	r0, .L2377
 34156              	.LVL4191:
 34157              	.L2367:
16143:Core/Src/bno055.c ****     {
16144:Core/Src/bno055.c ****         /* set the operation mode of
16145:Core/Src/bno055.c ****          * previous operation mode*/
16146:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16147:Core/Src/bno055.c ****     }
16148:Core/Src/bno055.c **** 
16149:Core/Src/bno055.c ****     return com_rslt;
16150:Core/Src/bno055.c **** }
 34158              		.loc 1 16150 1 view .LVU9526
 34159 0084 2046     		mov	r0, r4
 34160 0086 03B0     		add	sp, sp, #12
 34161              	.LCFI931:
 34162              		.cfi_remember_state
 34163              		.cfi_def_cfa_offset 12
 34164              		@ sp needed
 34165 0088 30BD     		pop	{r4, r5, pc}
 34166              	.LVL4192:
ARM GAS  /tmp/ccWoU29M.s 			page 955


 34167              	.L2373:
 34168              	.LCFI932:
 34169              		.cfi_restore_state
16129:Core/Src/bno055.c ****                 }
 34170              		.loc 1 16129 30 view .LVU9527
 34171 008a 4FF0FF34 		mov	r4, #-1
 34172              	.LVL4193:
16129:Core/Src/bno055.c ****                 }
 34173              		.loc 1 16129 30 view .LVU9528
 34174 008e F6E7     		b	.L2368
 34175              	.LVL4194:
 34176              	.L2377:
16146:Core/Src/bno055.c ****     }
 34177              		.loc 1 16146 9 is_stmt 1 view .LVU9529
16146:Core/Src/bno055.c ****     }
 34178              		.loc 1 16146 21 is_stmt 0 view .LVU9530
 34179 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 34180              	.LVL4195:
16146:Core/Src/bno055.c ****     }
 34181              		.loc 1 16146 18 view .LVU9531
 34182 0094 54FA80F4 		uxtab	r4, r4, r0
 34183              	.LVL4196:
16146:Core/Src/bno055.c ****     }
 34184              		.loc 1 16146 18 view .LVU9532
 34185 0098 64B2     		sxtb	r4, r4
 34186              	.LVL4197:
16146:Core/Src/bno055.c ****     }
 34187              		.loc 1 16146 18 view .LVU9533
 34188 009a F3E7     		b	.L2367
 34189              	.LVL4198:
 34190              	.L2370:
16092:Core/Src/bno055.c ****     }
 34191              		.loc 1 16092 16 view .LVU9534
 34192 009c 6FF07E04 		mvn	r4, #126
 34193 00a0 F0E7     		b	.L2367
 34194              	.L2379:
 34195 00a2 00BF     		.align	2
 34196              	.L2378:
 34197 00a4 00000000 		.word	.LANCHOR0
 34198              		.cfi_endproc
 34199              	.LFE234:
 34201              		.section	.text.bno055_get_accel_high_g_thres,"ax",%progbits
 34202              		.align	1
 34203              		.global	bno055_get_accel_high_g_thres
 34204              		.syntax unified
 34205              		.thumb
 34206              		.thumb_func
 34207              		.fpu fpv4-sp-d16
 34209              	bno055_get_accel_high_g_thres:
 34210              	.LVL4199:
 34211              	.LFB235:
16151:Core/Src/bno055.c **** 
16152:Core/Src/bno055.c **** /*!
16153:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg threshold
16154:Core/Src/bno055.c ****  *  from page one register from 0x14 bit 0 to 7
16155:Core/Src/bno055.c ****  *
16156:Core/Src/bno055.c ****  *  @param accel_high_g_thres_u8 : The value of accel highg threshold
ARM GAS  /tmp/ccWoU29M.s 			page 956


16157:Core/Src/bno055.c ****  *
16158:Core/Src/bno055.c ****  *  @return results of bus communication function
16159:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16160:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16161:Core/Src/bno055.c ****  *
16162:Core/Src/bno055.c ****  *  @note Accel highg interrupt threshold dependent
16163:Core/Src/bno055.c ****  *  for accel g range
16164:Core/Src/bno055.c ****  *
16165:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
16166:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
16167:Core/Src/bno055.c ****  *     2g        |    7.81mg     |   1LSB
16168:Core/Src/bno055.c ****  *     4g        |    15.63mg    |   1LSB
16169:Core/Src/bno055.c ****  *     8g        |    31.25mg    |   1LSB
16170:Core/Src/bno055.c ****  *     16g       |    62.5mg     |   1LSB
16171:Core/Src/bno055.c ****  *
16172:Core/Src/bno055.c ****  */
16173:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_high_g_thres(u8 *accel_high_g_thres_u8)
16174:Core/Src/bno055.c **** {
 34212              		.loc 1 16174 1 is_stmt 1 view -0
 34213              		.cfi_startproc
 34214              		@ args = 0, pretend = 0, frame = 8
 34215              		@ frame_needed = 0, uses_anonymous_args = 0
 34216              		.loc 1 16174 1 is_stmt 0 view .LVU9536
 34217 0000 70B5     		push	{r4, r5, r6, lr}
 34218              	.LCFI933:
 34219              		.cfi_def_cfa_offset 16
 34220              		.cfi_offset 4, -16
 34221              		.cfi_offset 5, -12
 34222              		.cfi_offset 6, -8
 34223              		.cfi_offset 14, -4
 34224 0002 82B0     		sub	sp, sp, #8
 34225              	.LCFI934:
 34226              		.cfi_def_cfa_offset 24
16175:Core/Src/bno055.c ****     /* Variable used to return value of
16176:Core/Src/bno055.c ****      * communication routine*/
16177:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34227              		.loc 1 16177 5 is_stmt 1 view .LVU9537
 34228              	.LVL4200:
16178:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34229              		.loc 1 16178 5 view .LVU9538
 34230              		.loc 1 16178 8 is_stmt 0 view .LVU9539
 34231 0004 0023     		movs	r3, #0
 34232 0006 8DF80730 		strb	r3, [sp, #7]
16179:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34233              		.loc 1 16179 5 is_stmt 1 view .LVU9540
 34234              	.LVL4201:
16180:Core/Src/bno055.c **** 
16181:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16182:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34235              		.loc 1 16182 5 view .LVU9541
 34236              		.loc 1 16182 18 is_stmt 0 view .LVU9542
 34237 000a 134B     		ldr	r3, .L2388
 34238 000c 1B68     		ldr	r3, [r3]
 34239              		.loc 1 16182 8 view .LVU9543
 34240 000e E3B1     		cbz	r3, .L2384
 34241 0010 0546     		mov	r5, r0
16183:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccWoU29M.s 			page 957


16184:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16185:Core/Src/bno055.c ****     }
16186:Core/Src/bno055.c ****     else
16187:Core/Src/bno055.c ****     {
16188:Core/Src/bno055.c ****         /*condition check for page, highg threshold is
16189:Core/Src/bno055.c ****          * available in the page one*/
16190:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 34242              		.loc 1 16190 9 is_stmt 1 view .LVU9544
 34243              		.loc 1 16190 21 is_stmt 0 view .LVU9545
 34244 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34245              		.loc 1 16190 12 view .LVU9546
 34246 0014 012B     		cmp	r3, #1
 34247 0016 12D1     		bne	.L2387
 34248              	.LVL4202:
 34249              	.L2382:
16191:Core/Src/bno055.c ****         {
16192:Core/Src/bno055.c ****             /* Write page as one */
16193:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16194:Core/Src/bno055.c ****         }
16195:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 34250              		.loc 1 16195 53 discriminator 1 view .LVU9547
 34251 0018 0F4B     		ldr	r3, .L2388
 34252 001a 1B68     		ldr	r3, [r3]
 34253 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34254              		.loc 1 16195 41 discriminator 1 view .LVU9548
 34255 001e 012B     		cmp	r3, #1
 34256 0020 16D1     		bne	.L2385
 34257              	.L2383:
16196:Core/Src/bno055.c ****         {
16197:Core/Src/bno055.c ****             /* Read the value of highg threshold */
16198:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 34258              		.loc 1 16198 13 is_stmt 1 view .LVU9549
 34259              		.loc 1 16198 32 is_stmt 0 view .LVU9550
 34260 0022 0D4B     		ldr	r3, .L2388
 34261 0024 1C68     		ldr	r4, [r3]
 34262 0026 2669     		ldr	r6, [r4, #16]
 34263              		.loc 1 16198 24 view .LVU9551
 34264 0028 0123     		movs	r3, #1
 34265 002a 0DF10702 		add	r2, sp, #7
 34266 002e 1421     		movs	r1, #20
 34267 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 34268 0032 B047     		blx	r6
 34269              	.LVL4203:
16199:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_THRES_REG,
16200:Core/Src/bno055.c ****                                                       &data_u8r,
16201:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16202:Core/Src/bno055.c ****             *accel_high_g_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_THRES);
 34270              		.loc 1 16202 13 is_stmt 1 view .LVU9552
 34271              		.loc 1 16202 36 is_stmt 0 view .LVU9553
 34272 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34273 0038 2B70     		strb	r3, [r5]
 34274              	.LVL4204:
 34275              	.L2381:
16203:Core/Src/bno055.c ****         }
16204:Core/Src/bno055.c ****         else
16205:Core/Src/bno055.c ****         {
16206:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 958


16207:Core/Src/bno055.c ****         }
16208:Core/Src/bno055.c ****     }
16209:Core/Src/bno055.c **** 
16210:Core/Src/bno055.c ****     return com_rslt;
16211:Core/Src/bno055.c **** }
 34276              		.loc 1 16211 1 view .LVU9554
 34277 003a 02B0     		add	sp, sp, #8
 34278              	.LCFI935:
 34279              		.cfi_remember_state
 34280              		.cfi_def_cfa_offset 16
 34281              		@ sp needed
 34282 003c 70BD     		pop	{r4, r5, r6, pc}
 34283              	.LVL4205:
 34284              	.L2387:
 34285              	.LCFI936:
 34286              		.cfi_restore_state
16193:Core/Src/bno055.c ****         }
 34287              		.loc 1 16193 13 is_stmt 1 view .LVU9555
16193:Core/Src/bno055.c ****         }
 34288              		.loc 1 16193 23 is_stmt 0 view .LVU9556
 34289 003e 0120     		movs	r0, #1
 34290              	.LVL4206:
16193:Core/Src/bno055.c ****         }
 34291              		.loc 1 16193 23 view .LVU9557
 34292 0040 FFF7FEFF 		bl	bno055_write_page_id
 34293              	.LVL4207:
16195:Core/Src/bno055.c ****         {
 34294              		.loc 1 16195 9 is_stmt 1 view .LVU9558
16195:Core/Src/bno055.c ****         {
 34295              		.loc 1 16195 12 is_stmt 0 view .LVU9559
 34296 0044 0028     		cmp	r0, #0
 34297 0046 ECD0     		beq	.L2383
 34298 0048 E6E7     		b	.L2382
 34299              	.LVL4208:
 34300              	.L2384:
16184:Core/Src/bno055.c ****     }
 34301              		.loc 1 16184 16 view .LVU9560
 34302 004a 6FF07E00 		mvn	r0, #126
 34303              	.LVL4209:
16184:Core/Src/bno055.c ****     }
 34304              		.loc 1 16184 16 view .LVU9561
 34305 004e F4E7     		b	.L2381
 34306              	.LVL4210:
 34307              	.L2385:
16206:Core/Src/bno055.c ****         }
 34308              		.loc 1 16206 22 view .LVU9562
 34309 0050 4FF0FF30 		mov	r0, #-1
 34310 0054 F1E7     		b	.L2381
 34311              	.L2389:
 34312 0056 00BF     		.align	2
 34313              	.L2388:
 34314 0058 00000000 		.word	.LANCHOR0
 34315              		.cfi_endproc
 34316              	.LFE235:
 34318              		.section	.text.bno055_set_accel_high_g_thres,"ax",%progbits
 34319              		.align	1
 34320              		.global	bno055_set_accel_high_g_thres
ARM GAS  /tmp/ccWoU29M.s 			page 959


 34321              		.syntax unified
 34322              		.thumb
 34323              		.thumb_func
 34324              		.fpu fpv4-sp-d16
 34326              	bno055_set_accel_high_g_thres:
 34327              	.LVL4211:
 34328              	.LFB236:
16212:Core/Src/bno055.c **** 
16213:Core/Src/bno055.c **** /*!
16214:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg threshold
16215:Core/Src/bno055.c ****  *  from page one register from 0x14 bit 0 to 7
16216:Core/Src/bno055.c ****  *
16217:Core/Src/bno055.c ****  *  @param accel_high_g_thres_u8 : The value of accel highg threshold
16218:Core/Src/bno055.c ****  *
16219:Core/Src/bno055.c ****  *  @return results of bus communication function
16220:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16221:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16222:Core/Src/bno055.c ****  *
16223:Core/Src/bno055.c ****  *  @note Accel highg interrupt threshold dependent
16224:Core/Src/bno055.c ****  *  for accel g range
16225:Core/Src/bno055.c ****  *
16226:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
16227:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
16228:Core/Src/bno055.c ****  *     2g        |    7.81mg     |   1LSB
16229:Core/Src/bno055.c ****  *     4g        |    15.63mg    |   1LSB
16230:Core/Src/bno055.c ****  *     8g        |    31.25mg    |   1LSB
16231:Core/Src/bno055.c ****  *     16g       |    62.5mg     |   1LSB
16232:Core/Src/bno055.c ****  *
16233:Core/Src/bno055.c ****  */
16234:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_high_g_thres(u8 accel_high_g_thres_u8)
16235:Core/Src/bno055.c **** {
 34329              		.loc 1 16235 1 is_stmt 1 view -0
 34330              		.cfi_startproc
 34331              		@ args = 0, pretend = 0, frame = 8
 34332              		@ frame_needed = 0, uses_anonymous_args = 0
 34333              		.loc 1 16235 1 is_stmt 0 view .LVU9564
 34334 0000 30B5     		push	{r4, r5, lr}
 34335              	.LCFI937:
 34336              		.cfi_def_cfa_offset 12
 34337              		.cfi_offset 4, -12
 34338              		.cfi_offset 5, -8
 34339              		.cfi_offset 14, -4
 34340 0002 83B0     		sub	sp, sp, #12
 34341              	.LCFI938:
 34342              		.cfi_def_cfa_offset 24
16236:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34343              		.loc 1 16236 5 is_stmt 1 view .LVU9565
 34344              	.LVL4212:
16237:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34345              		.loc 1 16237 5 view .LVU9566
 34346              		.loc 1 16237 8 is_stmt 0 view .LVU9567
 34347 0004 0023     		movs	r3, #0
 34348 0006 8DF80730 		strb	r3, [sp, #7]
16238:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34349              		.loc 1 16238 5 is_stmt 1 view .LVU9568
 34350              	.LVL4213:
16239:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
ARM GAS  /tmp/ccWoU29M.s 			page 960


 34351              		.loc 1 16239 5 view .LVU9569
 34352              		.loc 1 16239 8 is_stmt 0 view .LVU9570
 34353 000a 8DF80630 		strb	r3, [sp, #6]
16240:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 34354              		.loc 1 16240 5 is_stmt 1 view .LVU9571
 34355              	.LVL4214:
16241:Core/Src/bno055.c **** 
16242:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16243:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34356              		.loc 1 16243 5 view .LVU9572
 34357              		.loc 1 16243 18 is_stmt 0 view .LVU9573
 34358 000e 254B     		ldr	r3, .L2402
 34359 0010 1B68     		ldr	r3, [r3]
 34360              		.loc 1 16243 8 view .LVU9574
 34361 0012 002B     		cmp	r3, #0
 34362 0014 42D0     		beq	.L2394
 34363 0016 0546     		mov	r5, r0
16244:Core/Src/bno055.c ****     {
16245:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16246:Core/Src/bno055.c ****     }
16247:Core/Src/bno055.c ****     else
16248:Core/Src/bno055.c ****     {
16249:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16250:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16251:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16252:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 34364              		.loc 1 16252 9 is_stmt 1 view .LVU9575
 34365              		.loc 1 16252 19 is_stmt 0 view .LVU9576
 34366 0018 0DF10600 		add	r0, sp, #6
 34367              	.LVL4215:
 34368              		.loc 1 16252 19 view .LVU9577
 34369 001c FFF7FEFF 		bl	bno055_get_operation_mode
 34370              	.LVL4216:
16253:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 34371              		.loc 1 16253 9 is_stmt 1 view .LVU9578
 34372              		.loc 1 16253 12 is_stmt 0 view .LVU9579
 34373 0020 0446     		mov	r4, r0
 34374 0022 50BB     		cbnz	r0, .L2395
16254:Core/Src/bno055.c ****         {
16255:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34375              		.loc 1 16255 13 is_stmt 1 view .LVU9580
 34376              		.loc 1 16255 32 is_stmt 0 view .LVU9581
 34377 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 34378              		.loc 1 16255 16 view .LVU9582
 34379 0028 1BB9     		cbnz	r3, .L2399
 34380              	.LVL4217:
 34381              	.L2393:
16256:Core/Src/bno055.c ****             {
16257:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16258:Core/Src/bno055.c ****             }
16259:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 34382              		.loc 1 16259 13 is_stmt 1 view .LVU9583
 34383              		.loc 1 16259 16 is_stmt 0 view .LVU9584
 34384 002a 44B1     		cbz	r4, .L2400
16260:Core/Src/bno055.c ****             {
16261:Core/Src/bno055.c ****                 /* Write page as one */
16262:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
ARM GAS  /tmp/ccWoU29M.s 			page 961


16263:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16264:Core/Src/bno055.c ****                 {
16265:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16266:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
16267:Core/Src/bno055.c ****                                                               &data_u8r,
16268:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16269:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16270:Core/Src/bno055.c ****                     {
16271:Core/Src/bno055.c ****                         /* Write the value of
16272:Core/Src/bno055.c ****                          * accel highg threshold */
16273:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_THRES, accel_h
16274:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16275:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
16276:Core/Src/bno055.c ****                                                                     &data_u8r,
16277:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16278:Core/Src/bno055.c ****                     }
16279:Core/Src/bno055.c ****                 }
16280:Core/Src/bno055.c ****                 else
16281:Core/Src/bno055.c ****                 {
16282:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16283:Core/Src/bno055.c ****                 }
16284:Core/Src/bno055.c ****             }
16285:Core/Src/bno055.c ****             else
16286:Core/Src/bno055.c ****             {
16287:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 34385              		.loc 1 16287 26 view .LVU9585
 34386 002c 4FF0FF34 		mov	r4, #-1
 34387              	.LVL4218:
 34388              		.loc 1 16287 26 view .LVU9586
 34389 0030 25E0     		b	.L2392
 34390              	.LVL4219:
 34391              	.L2399:
16257:Core/Src/bno055.c ****             }
 34392              		.loc 1 16257 17 is_stmt 1 view .LVU9587
16257:Core/Src/bno055.c ****             }
 34393              		.loc 1 16257 28 is_stmt 0 view .LVU9588
 34394 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 34395              	.LVL4220:
16257:Core/Src/bno055.c ****             }
 34396              		.loc 1 16257 25 view .LVU9589
 34397 0036 54FA80F4 		uxtab	r4, r4, r0
 34398 003a 64B2     		sxtb	r4, r4
 34399              	.LVL4221:
16257:Core/Src/bno055.c ****             }
 34400              		.loc 1 16257 25 view .LVU9590
 34401 003c F5E7     		b	.L2393
 34402              	.L2400:
16262:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34403              		.loc 1 16262 17 is_stmt 1 view .LVU9591
16262:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34404              		.loc 1 16262 30 is_stmt 0 view .LVU9592
 34405 003e 0120     		movs	r0, #1
 34406 0040 FFF7FEFF 		bl	bno055_write_page_id
 34407              	.LVL4222:
16263:Core/Src/bno055.c ****                 {
 34408              		.loc 1 16263 17 is_stmt 1 view .LVU9593
16263:Core/Src/bno055.c ****                 {
ARM GAS  /tmp/ccWoU29M.s 			page 962


 34409              		.loc 1 16263 20 is_stmt 0 view .LVU9594
 34410 0044 08BB     		cbnz	r0, .L2397
16265:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
 34411              		.loc 1 16265 21 is_stmt 1 view .LVU9595
16265:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
 34412              		.loc 1 16265 40 is_stmt 0 view .LVU9596
 34413 0046 174B     		ldr	r3, .L2402
 34414 0048 1868     		ldr	r0, [r3]
 34415              	.LVL4223:
16265:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
 34416              		.loc 1 16265 40 view .LVU9597
 34417 004a 0469     		ldr	r4, [r0, #16]
 34418              	.LVL4224:
16265:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
 34419              		.loc 1 16265 32 view .LVU9598
 34420 004c 0123     		movs	r3, #1
 34421 004e 0DF10702 		add	r2, sp, #7
 34422 0052 1421     		movs	r1, #20
 34423 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34424 0056 A047     		blx	r4
 34425              	.LVL4225:
16269:Core/Src/bno055.c ****                     {
 34426              		.loc 1 16269 21 is_stmt 1 view .LVU9599
16269:Core/Src/bno055.c ****                     {
 34427              		.loc 1 16269 24 is_stmt 0 view .LVU9600
 34428 0058 0446     		mov	r4, r0
 34429 005a 80B9     		cbnz	r0, .L2392
16273:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34430              		.loc 1 16273 25 is_stmt 1 view .LVU9601
16273:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34431              		.loc 1 16273 34 is_stmt 0 view .LVU9602
 34432 005c 8DF80750 		strb	r5, [sp, #7]
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 34433              		.loc 1 16274 25 is_stmt 1 view .LVU9603
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 34434              		.loc 1 16274 45 is_stmt 0 view .LVU9604
 34435 0060 104B     		ldr	r3, .L2402
 34436 0062 1868     		ldr	r0, [r3]
 34437              	.LVL4226:
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 34438              		.loc 1 16274 45 view .LVU9605
 34439 0064 C568     		ldr	r5, [r0, #12]
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 34440              		.loc 1 16274 37 view .LVU9606
 34441 0066 0123     		movs	r3, #1
 34442 0068 0DF10702 		add	r2, sp, #7
 34443 006c 1421     		movs	r1, #20
 34444 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34445 0070 A847     		blx	r5
 34446              	.LVL4227:
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 34447              		.loc 1 16274 34 view .LVU9607
 34448 0072 54FA80F4 		uxtab	r4, r4, r0
 34449 0076 64B2     		sxtb	r4, r4
 34450              	.LVL4228:
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 34451              		.loc 1 16274 34 view .LVU9608
ARM GAS  /tmp/ccWoU29M.s 			page 963


 34452 0078 01E0     		b	.L2392
 34453              	.LVL4229:
 34454              	.L2395:
16288:Core/Src/bno055.c ****             }
16289:Core/Src/bno055.c ****         }
16290:Core/Src/bno055.c ****         else
16291:Core/Src/bno055.c ****         {
16292:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 34455              		.loc 1 16292 22 view .LVU9609
 34456 007a 4FF0FF34 		mov	r4, #-1
 34457              	.LVL4230:
 34458              	.L2392:
16293:Core/Src/bno055.c ****         }
16294:Core/Src/bno055.c ****     }
16295:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34459              		.loc 1 16295 5 is_stmt 1 view .LVU9610
 34460              		.loc 1 16295 24 is_stmt 0 view .LVU9611
 34461 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 34462              		.loc 1 16295 8 view .LVU9612
 34463 0082 28B9     		cbnz	r0, .L2401
 34464              	.LVL4231:
 34465              	.L2391:
16296:Core/Src/bno055.c ****     {
16297:Core/Src/bno055.c ****         /* set the operation mode of
16298:Core/Src/bno055.c ****          * previous operation mode*/
16299:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16300:Core/Src/bno055.c ****     }
16301:Core/Src/bno055.c **** 
16302:Core/Src/bno055.c ****     return com_rslt;
16303:Core/Src/bno055.c **** }
 34466              		.loc 1 16303 1 view .LVU9613
 34467 0084 2046     		mov	r0, r4
 34468 0086 03B0     		add	sp, sp, #12
 34469              	.LCFI939:
 34470              		.cfi_remember_state
 34471              		.cfi_def_cfa_offset 12
 34472              		@ sp needed
 34473 0088 30BD     		pop	{r4, r5, pc}
 34474              	.LVL4232:
 34475              	.L2397:
 34476              	.LCFI940:
 34477              		.cfi_restore_state
16282:Core/Src/bno055.c ****                 }
 34478              		.loc 1 16282 30 view .LVU9614
 34479 008a 4FF0FF34 		mov	r4, #-1
 34480              	.LVL4233:
16282:Core/Src/bno055.c ****                 }
 34481              		.loc 1 16282 30 view .LVU9615
 34482 008e F6E7     		b	.L2392
 34483              	.LVL4234:
 34484              	.L2401:
16299:Core/Src/bno055.c ****     }
 34485              		.loc 1 16299 9 is_stmt 1 view .LVU9616
16299:Core/Src/bno055.c ****     }
 34486              		.loc 1 16299 21 is_stmt 0 view .LVU9617
 34487 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 34488              	.LVL4235:
ARM GAS  /tmp/ccWoU29M.s 			page 964


16299:Core/Src/bno055.c ****     }
 34489              		.loc 1 16299 18 view .LVU9618
 34490 0094 54FA80F4 		uxtab	r4, r4, r0
 34491              	.LVL4236:
16299:Core/Src/bno055.c ****     }
 34492              		.loc 1 16299 18 view .LVU9619
 34493 0098 64B2     		sxtb	r4, r4
 34494              	.LVL4237:
16299:Core/Src/bno055.c ****     }
 34495              		.loc 1 16299 18 view .LVU9620
 34496 009a F3E7     		b	.L2391
 34497              	.LVL4238:
 34498              	.L2394:
16245:Core/Src/bno055.c ****     }
 34499              		.loc 1 16245 16 view .LVU9621
 34500 009c 6FF07E04 		mvn	r4, #126
 34501 00a0 F0E7     		b	.L2391
 34502              	.L2403:
 34503 00a2 00BF     		.align	2
 34504              	.L2402:
 34505 00a4 00000000 		.word	.LANCHOR0
 34506              		.cfi_endproc
 34507              	.LFE236:
 34509              		.section	.text.bno055_get_accel_slow_no_motion_thres,"ax",%progbits
 34510              		.align	1
 34511              		.global	bno055_get_accel_slow_no_motion_thres
 34512              		.syntax unified
 34513              		.thumb
 34514              		.thumb_func
 34515              		.fpu fpv4-sp-d16
 34517              	bno055_get_accel_slow_no_motion_thres:
 34518              	.LVL4239:
 34519              	.LFB237:
16304:Core/Src/bno055.c **** 
16305:Core/Src/bno055.c **** /*!
16306:Core/Src/bno055.c ****  *  @brief This API used to read the accel slownomotion threshold
16307:Core/Src/bno055.c ****  *  from page one register from 0x15 bit 0 to 7
16308:Core/Src/bno055.c ****  *
16309:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_thres_u8 :
16310:Core/Src/bno055.c ****  *  The value of accel slownomotion threshold
16311:Core/Src/bno055.c ****  *
16312:Core/Src/bno055.c ****  *  @return results of bus communication function
16313:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16314:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16315:Core/Src/bno055.c ****  *
16316:Core/Src/bno055.c ****  *  @note Accel slow no motion interrupt threshold dependent
16317:Core/Src/bno055.c ****  *  for accel g range
16318:Core/Src/bno055.c ****  *
16319:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
16320:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
16321:Core/Src/bno055.c ****  *     2g        |    3.19mg     |   1LSB
16322:Core/Src/bno055.c ****  *     4g        |    7.81mg     |   1LSB
16323:Core/Src/bno055.c ****  *     8g        |    15.63mg    |   1LSB
16324:Core/Src/bno055.c ****  *     16g       |    31.25mg    |   1LSB
16325:Core/Src/bno055.c ****  */
16326:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_slow_no_motion_thres(u8 *accel_slow_no_motion_thres_u8
16327:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccWoU29M.s 			page 965


 34520              		.loc 1 16327 1 is_stmt 1 view -0
 34521              		.cfi_startproc
 34522              		@ args = 0, pretend = 0, frame = 8
 34523              		@ frame_needed = 0, uses_anonymous_args = 0
 34524              		.loc 1 16327 1 is_stmt 0 view .LVU9623
 34525 0000 70B5     		push	{r4, r5, r6, lr}
 34526              	.LCFI941:
 34527              		.cfi_def_cfa_offset 16
 34528              		.cfi_offset 4, -16
 34529              		.cfi_offset 5, -12
 34530              		.cfi_offset 6, -8
 34531              		.cfi_offset 14, -4
 34532 0002 82B0     		sub	sp, sp, #8
 34533              	.LCFI942:
 34534              		.cfi_def_cfa_offset 24
16328:Core/Src/bno055.c ****     /* Variable used to return value of
16329:Core/Src/bno055.c ****      * communication routine*/
16330:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34535              		.loc 1 16330 5 is_stmt 1 view .LVU9624
 34536              	.LVL4240:
16331:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34537              		.loc 1 16331 5 view .LVU9625
 34538              		.loc 1 16331 8 is_stmt 0 view .LVU9626
 34539 0004 0023     		movs	r3, #0
 34540 0006 8DF80730 		strb	r3, [sp, #7]
16332:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34541              		.loc 1 16332 5 is_stmt 1 view .LVU9627
 34542              	.LVL4241:
16333:Core/Src/bno055.c **** 
16334:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16335:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34543              		.loc 1 16335 5 view .LVU9628
 34544              		.loc 1 16335 18 is_stmt 0 view .LVU9629
 34545 000a 134B     		ldr	r3, .L2412
 34546 000c 1B68     		ldr	r3, [r3]
 34547              		.loc 1 16335 8 view .LVU9630
 34548 000e E3B1     		cbz	r3, .L2408
 34549 0010 0546     		mov	r5, r0
16336:Core/Src/bno055.c ****     {
16337:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16338:Core/Src/bno055.c ****     }
16339:Core/Src/bno055.c ****     else
16340:Core/Src/bno055.c ****     {
16341:Core/Src/bno055.c ****         /*condition check for page, accel slownomotion threshold is
16342:Core/Src/bno055.c ****          * available in the page one*/
16343:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 34550              		.loc 1 16343 9 is_stmt 1 view .LVU9631
 34551              		.loc 1 16343 21 is_stmt 0 view .LVU9632
 34552 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34553              		.loc 1 16343 12 view .LVU9633
 34554 0014 012B     		cmp	r3, #1
 34555 0016 12D1     		bne	.L2411
 34556              	.LVL4242:
 34557              	.L2406:
16344:Core/Src/bno055.c ****         {
16345:Core/Src/bno055.c ****             /* Write page as one */
16346:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
ARM GAS  /tmp/ccWoU29M.s 			page 966


16347:Core/Src/bno055.c ****         }
16348:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 34558              		.loc 1 16348 53 discriminator 1 view .LVU9634
 34559 0018 0F4B     		ldr	r3, .L2412
 34560 001a 1B68     		ldr	r3, [r3]
 34561 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34562              		.loc 1 16348 41 discriminator 1 view .LVU9635
 34563 001e 012B     		cmp	r3, #1
 34564 0020 16D1     		bne	.L2409
 34565              	.L2407:
16349:Core/Src/bno055.c ****         {
16350:Core/Src/bno055.c ****             /* Read the value of slownomotion threshold */
16351:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 34566              		.loc 1 16351 13 is_stmt 1 view .LVU9636
 34567              		.loc 1 16351 32 is_stmt 0 view .LVU9637
 34568 0022 0D4B     		ldr	r3, .L2412
 34569 0024 1C68     		ldr	r4, [r3]
 34570 0026 2669     		ldr	r6, [r4, #16]
 34571              		.loc 1 16351 24 view .LVU9638
 34572 0028 0123     		movs	r3, #1
 34573 002a 0DF10702 		add	r2, sp, #7
 34574 002e 1521     		movs	r1, #21
 34575 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 34576 0032 B047     		blx	r6
 34577              	.LVL4243:
16352:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG,
16353:Core/Src/bno055.c ****                                                       &data_u8r,
16354:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16355:Core/Src/bno055.c ****             *accel_slow_no_motion_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLOW_NO_MOT
 34578              		.loc 1 16355 13 is_stmt 1 view .LVU9639
 34579              		.loc 1 16355 44 is_stmt 0 view .LVU9640
 34580 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34581 0038 2B70     		strb	r3, [r5]
 34582              	.LVL4244:
 34583              	.L2405:
16356:Core/Src/bno055.c ****         }
16357:Core/Src/bno055.c ****         else
16358:Core/Src/bno055.c ****         {
16359:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16360:Core/Src/bno055.c ****         }
16361:Core/Src/bno055.c ****     }
16362:Core/Src/bno055.c **** 
16363:Core/Src/bno055.c ****     return com_rslt;
16364:Core/Src/bno055.c **** }
 34584              		.loc 1 16364 1 view .LVU9641
 34585 003a 02B0     		add	sp, sp, #8
 34586              	.LCFI943:
 34587              		.cfi_remember_state
 34588              		.cfi_def_cfa_offset 16
 34589              		@ sp needed
 34590 003c 70BD     		pop	{r4, r5, r6, pc}
 34591              	.LVL4245:
 34592              	.L2411:
 34593              	.LCFI944:
 34594              		.cfi_restore_state
16346:Core/Src/bno055.c ****         }
 34595              		.loc 1 16346 13 is_stmt 1 view .LVU9642
ARM GAS  /tmp/ccWoU29M.s 			page 967


16346:Core/Src/bno055.c ****         }
 34596              		.loc 1 16346 23 is_stmt 0 view .LVU9643
 34597 003e 0120     		movs	r0, #1
 34598              	.LVL4246:
16346:Core/Src/bno055.c ****         }
 34599              		.loc 1 16346 23 view .LVU9644
 34600 0040 FFF7FEFF 		bl	bno055_write_page_id
 34601              	.LVL4247:
16348:Core/Src/bno055.c ****         {
 34602              		.loc 1 16348 9 is_stmt 1 view .LVU9645
16348:Core/Src/bno055.c ****         {
 34603              		.loc 1 16348 12 is_stmt 0 view .LVU9646
 34604 0044 0028     		cmp	r0, #0
 34605 0046 ECD0     		beq	.L2407
 34606 0048 E6E7     		b	.L2406
 34607              	.LVL4248:
 34608              	.L2408:
16337:Core/Src/bno055.c ****     }
 34609              		.loc 1 16337 16 view .LVU9647
 34610 004a 6FF07E00 		mvn	r0, #126
 34611              	.LVL4249:
16337:Core/Src/bno055.c ****     }
 34612              		.loc 1 16337 16 view .LVU9648
 34613 004e F4E7     		b	.L2405
 34614              	.LVL4250:
 34615              	.L2409:
16359:Core/Src/bno055.c ****         }
 34616              		.loc 1 16359 22 view .LVU9649
 34617 0050 4FF0FF30 		mov	r0, #-1
 34618 0054 F1E7     		b	.L2405
 34619              	.L2413:
 34620 0056 00BF     		.align	2
 34621              	.L2412:
 34622 0058 00000000 		.word	.LANCHOR0
 34623              		.cfi_endproc
 34624              	.LFE237:
 34626              		.section	.text.bno055_set_accel_slow_no_motion_thres,"ax",%progbits
 34627              		.align	1
 34628              		.global	bno055_set_accel_slow_no_motion_thres
 34629              		.syntax unified
 34630              		.thumb
 34631              		.thumb_func
 34632              		.fpu fpv4-sp-d16
 34634              	bno055_set_accel_slow_no_motion_thres:
 34635              	.LVL4251:
 34636              	.LFB238:
16365:Core/Src/bno055.c **** 
16366:Core/Src/bno055.c **** /*!
16367:Core/Src/bno055.c ****  *  @brief This API used to write the accel slownomotion threshold
16368:Core/Src/bno055.c ****  *  from page one register from 0x15 bit 0 to 7
16369:Core/Src/bno055.c ****  *
16370:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_thres_u8 :
16371:Core/Src/bno055.c ****  *  The value of accel slownomotion threshold
16372:Core/Src/bno055.c ****  *
16373:Core/Src/bno055.c ****  *  @return results of bus communication function
16374:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16375:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
ARM GAS  /tmp/ccWoU29M.s 			page 968


16376:Core/Src/bno055.c ****  *
16377:Core/Src/bno055.c ****  *  @note Accel slow no motion interrupt threshold dependent
16378:Core/Src/bno055.c ****  *  for accel g range
16379:Core/Src/bno055.c ****  *
16380:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
16381:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
16382:Core/Src/bno055.c ****  *     2g        |    3.19mg     |   1LSB
16383:Core/Src/bno055.c ****  *     4g        |    7.81mg     |   1LSB
16384:Core/Src/bno055.c ****  *     8g        |    15.63mg    |   1LSB
16385:Core/Src/bno055.c ****  *     16g       |    31.25mg    |   1LSB
16386:Core/Src/bno055.c ****  */
16387:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_slow_no_motion_thres(u8 accel_slow_no_motion_thres_u8)
16388:Core/Src/bno055.c **** {
 34637              		.loc 1 16388 1 is_stmt 1 view -0
 34638              		.cfi_startproc
 34639              		@ args = 0, pretend = 0, frame = 8
 34640              		@ frame_needed = 0, uses_anonymous_args = 0
 34641              		.loc 1 16388 1 is_stmt 0 view .LVU9651
 34642 0000 30B5     		push	{r4, r5, lr}
 34643              	.LCFI945:
 34644              		.cfi_def_cfa_offset 12
 34645              		.cfi_offset 4, -12
 34646              		.cfi_offset 5, -8
 34647              		.cfi_offset 14, -4
 34648 0002 83B0     		sub	sp, sp, #12
 34649              	.LCFI946:
 34650              		.cfi_def_cfa_offset 24
16389:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34651              		.loc 1 16389 5 is_stmt 1 view .LVU9652
 34652              	.LVL4252:
16390:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34653              		.loc 1 16390 5 view .LVU9653
 34654              		.loc 1 16390 8 is_stmt 0 view .LVU9654
 34655 0004 0023     		movs	r3, #0
 34656 0006 8DF80730 		strb	r3, [sp, #7]
16391:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34657              		.loc 1 16391 5 is_stmt 1 view .LVU9655
 34658              	.LVL4253:
16392:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 34659              		.loc 1 16392 5 view .LVU9656
 34660              		.loc 1 16392 8 is_stmt 0 view .LVU9657
 34661 000a 8DF80630 		strb	r3, [sp, #6]
16393:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 34662              		.loc 1 16393 5 is_stmt 1 view .LVU9658
 34663              	.LVL4254:
16394:Core/Src/bno055.c **** 
16395:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16396:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34664              		.loc 1 16396 5 view .LVU9659
 34665              		.loc 1 16396 18 is_stmt 0 view .LVU9660
 34666 000e 254B     		ldr	r3, .L2426
 34667 0010 1B68     		ldr	r3, [r3]
 34668              		.loc 1 16396 8 view .LVU9661
 34669 0012 002B     		cmp	r3, #0
 34670 0014 42D0     		beq	.L2418
 34671 0016 0546     		mov	r5, r0
16397:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccWoU29M.s 			page 969


16398:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16399:Core/Src/bno055.c ****     }
16400:Core/Src/bno055.c ****     else
16401:Core/Src/bno055.c ****     {
16402:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16403:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16404:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16405:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 34672              		.loc 1 16405 9 is_stmt 1 view .LVU9662
 34673              		.loc 1 16405 19 is_stmt 0 view .LVU9663
 34674 0018 0DF10600 		add	r0, sp, #6
 34675              	.LVL4255:
 34676              		.loc 1 16405 19 view .LVU9664
 34677 001c FFF7FEFF 		bl	bno055_get_operation_mode
 34678              	.LVL4256:
16406:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 34679              		.loc 1 16406 9 is_stmt 1 view .LVU9665
 34680              		.loc 1 16406 12 is_stmt 0 view .LVU9666
 34681 0020 0446     		mov	r4, r0
 34682 0022 50BB     		cbnz	r0, .L2419
16407:Core/Src/bno055.c ****         {
16408:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34683              		.loc 1 16408 13 is_stmt 1 view .LVU9667
 34684              		.loc 1 16408 32 is_stmt 0 view .LVU9668
 34685 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 34686              		.loc 1 16408 16 view .LVU9669
 34687 0028 1BB9     		cbnz	r3, .L2423
 34688              	.LVL4257:
 34689              	.L2417:
16409:Core/Src/bno055.c ****             {
16410:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16411:Core/Src/bno055.c ****             }
16412:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 34690              		.loc 1 16412 13 is_stmt 1 view .LVU9670
 34691              		.loc 1 16412 16 is_stmt 0 view .LVU9671
 34692 002a 44B1     		cbz	r4, .L2424
16413:Core/Src/bno055.c ****             {
16414:Core/Src/bno055.c ****                 /* Write page as one */
16415:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16416:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16417:Core/Src/bno055.c ****                 {
16418:Core/Src/bno055.c ****                     /* Write the value of
16419:Core/Src/bno055.c ****                      * slownomotion threshold */
16420:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16421:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
16422:Core/Src/bno055.c ****                                                               &data_u8r,
16423:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16424:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16425:Core/Src/bno055.c ****                     {
16426:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
16427:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_THRES,
16428:Core/Src/bno055.c ****                                                        accel_slow_no_motion_thres_u8);
16429:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16430:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
16431:Core/Src/bno055.c ****                                                                     &data_u8r,
16432:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16433:Core/Src/bno055.c ****                     }
ARM GAS  /tmp/ccWoU29M.s 			page 970


16434:Core/Src/bno055.c ****                 }
16435:Core/Src/bno055.c ****                 else
16436:Core/Src/bno055.c ****                 {
16437:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16438:Core/Src/bno055.c ****                 }
16439:Core/Src/bno055.c ****             }
16440:Core/Src/bno055.c ****             else
16441:Core/Src/bno055.c ****             {
16442:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 34693              		.loc 1 16442 26 view .LVU9672
 34694 002c 4FF0FF34 		mov	r4, #-1
 34695              	.LVL4258:
 34696              		.loc 1 16442 26 view .LVU9673
 34697 0030 25E0     		b	.L2416
 34698              	.LVL4259:
 34699              	.L2423:
16410:Core/Src/bno055.c ****             }
 34700              		.loc 1 16410 17 is_stmt 1 view .LVU9674
16410:Core/Src/bno055.c ****             }
 34701              		.loc 1 16410 28 is_stmt 0 view .LVU9675
 34702 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 34703              	.LVL4260:
16410:Core/Src/bno055.c ****             }
 34704              		.loc 1 16410 25 view .LVU9676
 34705 0036 54FA80F4 		uxtab	r4, r4, r0
 34706 003a 64B2     		sxtb	r4, r4
 34707              	.LVL4261:
16410:Core/Src/bno055.c ****             }
 34708              		.loc 1 16410 25 view .LVU9677
 34709 003c F5E7     		b	.L2417
 34710              	.L2424:
16415:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34711              		.loc 1 16415 17 is_stmt 1 view .LVU9678
16415:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34712              		.loc 1 16415 30 is_stmt 0 view .LVU9679
 34713 003e 0120     		movs	r0, #1
 34714 0040 FFF7FEFF 		bl	bno055_write_page_id
 34715              	.LVL4262:
16416:Core/Src/bno055.c ****                 {
 34716              		.loc 1 16416 17 is_stmt 1 view .LVU9680
16416:Core/Src/bno055.c ****                 {
 34717              		.loc 1 16416 20 is_stmt 0 view .LVU9681
 34718 0044 08BB     		cbnz	r0, .L2421
16420:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
 34719              		.loc 1 16420 21 is_stmt 1 view .LVU9682
16420:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
 34720              		.loc 1 16420 40 is_stmt 0 view .LVU9683
 34721 0046 174B     		ldr	r3, .L2426
 34722 0048 1868     		ldr	r0, [r3]
 34723              	.LVL4263:
16420:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
 34724              		.loc 1 16420 40 view .LVU9684
 34725 004a 0469     		ldr	r4, [r0, #16]
 34726              	.LVL4264:
16420:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
 34727              		.loc 1 16420 32 view .LVU9685
 34728 004c 0123     		movs	r3, #1
ARM GAS  /tmp/ccWoU29M.s 			page 971


 34729 004e 0DF10702 		add	r2, sp, #7
 34730 0052 1521     		movs	r1, #21
 34731 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34732 0056 A047     		blx	r4
 34733              	.LVL4265:
16424:Core/Src/bno055.c ****                     {
 34734              		.loc 1 16424 21 is_stmt 1 view .LVU9686
16424:Core/Src/bno055.c ****                     {
 34735              		.loc 1 16424 24 is_stmt 0 view .LVU9687
 34736 0058 0446     		mov	r4, r0
 34737 005a 80B9     		cbnz	r0, .L2416
16426:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_THRES,
 34738              		.loc 1 16426 25 is_stmt 1 view .LVU9688
16426:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_THRES,
 34739              		.loc 1 16426 34 is_stmt 0 view .LVU9689
 34740 005c 8DF80750 		strb	r5, [sp, #7]
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 34741              		.loc 1 16429 25 is_stmt 1 view .LVU9690
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 34742              		.loc 1 16429 45 is_stmt 0 view .LVU9691
 34743 0060 104B     		ldr	r3, .L2426
 34744 0062 1868     		ldr	r0, [r3]
 34745              	.LVL4266:
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 34746              		.loc 1 16429 45 view .LVU9692
 34747 0064 C568     		ldr	r5, [r0, #12]
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 34748              		.loc 1 16429 37 view .LVU9693
 34749 0066 0123     		movs	r3, #1
 34750 0068 0DF10702 		add	r2, sp, #7
 34751 006c 1521     		movs	r1, #21
 34752 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34753 0070 A847     		blx	r5
 34754              	.LVL4267:
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 34755              		.loc 1 16429 34 view .LVU9694
 34756 0072 54FA80F4 		uxtab	r4, r4, r0
 34757 0076 64B2     		sxtb	r4, r4
 34758              	.LVL4268:
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 34759              		.loc 1 16429 34 view .LVU9695
 34760 0078 01E0     		b	.L2416
 34761              	.LVL4269:
 34762              	.L2419:
16443:Core/Src/bno055.c ****             }
16444:Core/Src/bno055.c ****         }
16445:Core/Src/bno055.c ****         else
16446:Core/Src/bno055.c ****         {
16447:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 34763              		.loc 1 16447 22 view .LVU9696
 34764 007a 4FF0FF34 		mov	r4, #-1
 34765              	.LVL4270:
 34766              	.L2416:
16448:Core/Src/bno055.c ****         }
16449:Core/Src/bno055.c ****     }
16450:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34767              		.loc 1 16450 5 is_stmt 1 view .LVU9697
ARM GAS  /tmp/ccWoU29M.s 			page 972


 34768              		.loc 1 16450 24 is_stmt 0 view .LVU9698
 34769 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 34770              		.loc 1 16450 8 view .LVU9699
 34771 0082 28B9     		cbnz	r0, .L2425
 34772              	.LVL4271:
 34773              	.L2415:
16451:Core/Src/bno055.c ****     {
16452:Core/Src/bno055.c ****         /* set the operation mode of
16453:Core/Src/bno055.c ****          * previous operation mode*/
16454:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16455:Core/Src/bno055.c ****     }
16456:Core/Src/bno055.c **** 
16457:Core/Src/bno055.c ****     return com_rslt;
16458:Core/Src/bno055.c **** }
 34774              		.loc 1 16458 1 view .LVU9700
 34775 0084 2046     		mov	r0, r4
 34776 0086 03B0     		add	sp, sp, #12
 34777              	.LCFI947:
 34778              		.cfi_remember_state
 34779              		.cfi_def_cfa_offset 12
 34780              		@ sp needed
 34781 0088 30BD     		pop	{r4, r5, pc}
 34782              	.LVL4272:
 34783              	.L2421:
 34784              	.LCFI948:
 34785              		.cfi_restore_state
16437:Core/Src/bno055.c ****                 }
 34786              		.loc 1 16437 30 view .LVU9701
 34787 008a 4FF0FF34 		mov	r4, #-1
 34788              	.LVL4273:
16437:Core/Src/bno055.c ****                 }
 34789              		.loc 1 16437 30 view .LVU9702
 34790 008e F6E7     		b	.L2416
 34791              	.LVL4274:
 34792              	.L2425:
16454:Core/Src/bno055.c ****     }
 34793              		.loc 1 16454 9 is_stmt 1 view .LVU9703
16454:Core/Src/bno055.c ****     }
 34794              		.loc 1 16454 21 is_stmt 0 view .LVU9704
 34795 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 34796              	.LVL4275:
16454:Core/Src/bno055.c ****     }
 34797              		.loc 1 16454 18 view .LVU9705
 34798 0094 54FA80F4 		uxtab	r4, r4, r0
 34799              	.LVL4276:
16454:Core/Src/bno055.c ****     }
 34800              		.loc 1 16454 18 view .LVU9706
 34801 0098 64B2     		sxtb	r4, r4
 34802              	.LVL4277:
16454:Core/Src/bno055.c ****     }
 34803              		.loc 1 16454 18 view .LVU9707
 34804 009a F3E7     		b	.L2415
 34805              	.LVL4278:
 34806              	.L2418:
16398:Core/Src/bno055.c ****     }
 34807              		.loc 1 16398 16 view .LVU9708
 34808 009c 6FF07E04 		mvn	r4, #126
ARM GAS  /tmp/ccWoU29M.s 			page 973


 34809 00a0 F0E7     		b	.L2415
 34810              	.L2427:
 34811 00a2 00BF     		.align	2
 34812              	.L2426:
 34813 00a4 00000000 		.word	.LANCHOR0
 34814              		.cfi_endproc
 34815              	.LFE238:
 34817              		.section	.text.bno055_get_accel_slow_no_motion_enable,"ax",%progbits
 34818              		.align	1
 34819              		.global	bno055_get_accel_slow_no_motion_enable
 34820              		.syntax unified
 34821              		.thumb
 34822              		.thumb_func
 34823              		.fpu fpv4-sp-d16
 34825              	bno055_get_accel_slow_no_motion_enable:
 34826              	.LVL4279:
 34827              	.LFB239:
16459:Core/Src/bno055.c **** 
16460:Core/Src/bno055.c **** /*!
16461:Core/Src/bno055.c ****  *  @brief This API used to read accel slownomotion enable
16462:Core/Src/bno055.c ****  *  from page one register from 0x16 bit 0
16463:Core/Src/bno055.c ****  *
16464:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_en_u8 : The value of accel slownomotion enable
16465:Core/Src/bno055.c ****  *    accel_slow_no_motion_en_u8   | result
16466:Core/Src/bno055.c ****  *     ------------------------      | --------
16467:Core/Src/bno055.c ****  *              0x01                 | Slow motion
16468:Core/Src/bno055.c ****  *              0x00                 | No motion
16469:Core/Src/bno055.c ****  *
16470:Core/Src/bno055.c ****  *  @return results of bus communication function
16471:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16472:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16473:Core/Src/bno055.c ****  *
16474:Core/Src/bno055.c ****  */
16475:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_slow_no_motion_enable(u8 *accel_slow_no_motion_en_u8)
16476:Core/Src/bno055.c **** {
 34828              		.loc 1 16476 1 is_stmt 1 view -0
 34829              		.cfi_startproc
 34830              		@ args = 0, pretend = 0, frame = 8
 34831              		@ frame_needed = 0, uses_anonymous_args = 0
 34832              		.loc 1 16476 1 is_stmt 0 view .LVU9710
 34833 0000 30B5     		push	{r4, r5, lr}
 34834              	.LCFI949:
 34835              		.cfi_def_cfa_offset 12
 34836              		.cfi_offset 4, -12
 34837              		.cfi_offset 5, -8
 34838              		.cfi_offset 14, -4
 34839 0002 83B0     		sub	sp, sp, #12
 34840              	.LCFI950:
 34841              		.cfi_def_cfa_offset 24
16477:Core/Src/bno055.c ****     /* Variable used to return value of
16478:Core/Src/bno055.c ****      * communication routine*/
16479:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34842              		.loc 1 16479 5 is_stmt 1 view .LVU9711
 34843              	.LVL4280:
16480:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34844              		.loc 1 16480 5 view .LVU9712
 34845              		.loc 1 16480 8 is_stmt 0 view .LVU9713
ARM GAS  /tmp/ccWoU29M.s 			page 974


 34846 0004 0023     		movs	r3, #0
 34847 0006 8DF80730 		strb	r3, [sp, #7]
16481:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34848              		.loc 1 16481 5 is_stmt 1 view .LVU9714
 34849              	.LVL4281:
16482:Core/Src/bno055.c **** 
16483:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16484:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34850              		.loc 1 16484 5 view .LVU9715
 34851              		.loc 1 16484 18 is_stmt 0 view .LVU9716
 34852 000a 144B     		ldr	r3, .L2436
 34853 000c 1B68     		ldr	r3, [r3]
 34854              		.loc 1 16484 8 view .LVU9717
 34855 000e F3B1     		cbz	r3, .L2432
 34856 0010 0446     		mov	r4, r0
16485:Core/Src/bno055.c ****     {
16486:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16487:Core/Src/bno055.c ****     }
16488:Core/Src/bno055.c ****     else
16489:Core/Src/bno055.c ****     {
16490:Core/Src/bno055.c ****         /*condition check for page, accel slownomotion enable is
16491:Core/Src/bno055.c ****          * available in the page one*/
16492:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 34857              		.loc 1 16492 9 is_stmt 1 view .LVU9718
 34858              		.loc 1 16492 21 is_stmt 0 view .LVU9719
 34859 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34860              		.loc 1 16492 12 view .LVU9720
 34861 0014 012B     		cmp	r3, #1
 34862 0016 14D1     		bne	.L2435
 34863              	.LVL4282:
 34864              	.L2430:
16493:Core/Src/bno055.c ****         {
16494:Core/Src/bno055.c ****             /* Write page as one */
16495:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16496:Core/Src/bno055.c ****         }
16497:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 34865              		.loc 1 16497 53 discriminator 1 view .LVU9721
 34866 0018 104B     		ldr	r3, .L2436
 34867 001a 1B68     		ldr	r3, [r3]
 34868 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34869              		.loc 1 16497 41 discriminator 1 view .LVU9722
 34870 001e 012B     		cmp	r3, #1
 34871 0020 18D1     		bne	.L2433
 34872              	.L2431:
16498:Core/Src/bno055.c ****         {
16499:Core/Src/bno055.c ****             /* Read the value of accel slownomotion enable */
16500:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 34873              		.loc 1 16500 13 is_stmt 1 view .LVU9723
 34874              		.loc 1 16500 32 is_stmt 0 view .LVU9724
 34875 0022 0E4B     		ldr	r3, .L2436
 34876 0024 1868     		ldr	r0, [r3]
 34877 0026 0569     		ldr	r5, [r0, #16]
 34878              		.loc 1 16500 24 view .LVU9725
 34879 0028 0123     		movs	r3, #1
 34880 002a 0DF10702 		add	r2, sp, #7
 34881 002e 1621     		movs	r1, #22
 34882 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 975


 34883 0032 A847     		blx	r5
 34884              	.LVL4283:
16501:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_REG,
16502:Core/Src/bno055.c ****                                                       &data_u8r,
16503:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16504:Core/Src/bno055.c ****             *accel_slow_no_motion_en_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLOW_NO_MOTION
 34885              		.loc 1 16504 13 is_stmt 1 view .LVU9726
 34886              		.loc 1 16504 43 is_stmt 0 view .LVU9727
 34887 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34888 0038 03F00103 		and	r3, r3, #1
 34889              		.loc 1 16504 41 view .LVU9728
 34890 003c 2370     		strb	r3, [r4]
 34891              	.LVL4284:
 34892              	.L2429:
16505:Core/Src/bno055.c ****         }
16506:Core/Src/bno055.c ****         else
16507:Core/Src/bno055.c ****         {
16508:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16509:Core/Src/bno055.c ****         }
16510:Core/Src/bno055.c ****     }
16511:Core/Src/bno055.c **** 
16512:Core/Src/bno055.c ****     return com_rslt;
16513:Core/Src/bno055.c **** }
 34893              		.loc 1 16513 1 view .LVU9729
 34894 003e 03B0     		add	sp, sp, #12
 34895              	.LCFI951:
 34896              		.cfi_remember_state
 34897              		.cfi_def_cfa_offset 12
 34898              		@ sp needed
 34899 0040 30BD     		pop	{r4, r5, pc}
 34900              	.LVL4285:
 34901              	.L2435:
 34902              	.LCFI952:
 34903              		.cfi_restore_state
16495:Core/Src/bno055.c ****         }
 34904              		.loc 1 16495 13 is_stmt 1 view .LVU9730
16495:Core/Src/bno055.c ****         }
 34905              		.loc 1 16495 23 is_stmt 0 view .LVU9731
 34906 0042 0120     		movs	r0, #1
 34907              	.LVL4286:
16495:Core/Src/bno055.c ****         }
 34908              		.loc 1 16495 23 view .LVU9732
 34909 0044 FFF7FEFF 		bl	bno055_write_page_id
 34910              	.LVL4287:
16497:Core/Src/bno055.c ****         {
 34911              		.loc 1 16497 9 is_stmt 1 view .LVU9733
16497:Core/Src/bno055.c ****         {
 34912              		.loc 1 16497 12 is_stmt 0 view .LVU9734
 34913 0048 0028     		cmp	r0, #0
 34914 004a EAD0     		beq	.L2431
 34915 004c E4E7     		b	.L2430
 34916              	.LVL4288:
 34917              	.L2432:
16486:Core/Src/bno055.c ****     }
 34918              		.loc 1 16486 16 view .LVU9735
 34919 004e 6FF07E00 		mvn	r0, #126
 34920              	.LVL4289:
ARM GAS  /tmp/ccWoU29M.s 			page 976


16486:Core/Src/bno055.c ****     }
 34921              		.loc 1 16486 16 view .LVU9736
 34922 0052 F4E7     		b	.L2429
 34923              	.LVL4290:
 34924              	.L2433:
16508:Core/Src/bno055.c ****         }
 34925              		.loc 1 16508 22 view .LVU9737
 34926 0054 4FF0FF30 		mov	r0, #-1
 34927 0058 F1E7     		b	.L2429
 34928              	.L2437:
 34929 005a 00BF     		.align	2
 34930              	.L2436:
 34931 005c 00000000 		.word	.LANCHOR0
 34932              		.cfi_endproc
 34933              	.LFE239:
 34935              		.section	.text.bno055_set_accel_slow_no_motion_enable,"ax",%progbits
 34936              		.align	1
 34937              		.global	bno055_set_accel_slow_no_motion_enable
 34938              		.syntax unified
 34939              		.thumb
 34940              		.thumb_func
 34941              		.fpu fpv4-sp-d16
 34943              	bno055_set_accel_slow_no_motion_enable:
 34944              	.LVL4291:
 34945              	.LFB240:
16514:Core/Src/bno055.c **** 
16515:Core/Src/bno055.c **** /*!
16516:Core/Src/bno055.c ****  *  @brief This API used to write accel slownomotion enable
16517:Core/Src/bno055.c ****  *  from page one register from 0x16 bit 0
16518:Core/Src/bno055.c ****  *
16519:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_en_u8 : The value of accel slownomotion enable
16520:Core/Src/bno055.c ****  *    accel_slow_no_motion_en_u8   | result
16521:Core/Src/bno055.c ****  *     ------------------------      | --------
16522:Core/Src/bno055.c ****  *              0x01                 | Slow motion
16523:Core/Src/bno055.c ****  *              0x00                 | No motion
16524:Core/Src/bno055.c ****  *
16525:Core/Src/bno055.c ****  *  @return results of bus communication function
16526:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16527:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16528:Core/Src/bno055.c ****  *
16529:Core/Src/bno055.c ****  */
16530:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_slow_no_motion_enable(u8 accel_slow_no_motion_en_u8)
16531:Core/Src/bno055.c **** {
 34946              		.loc 1 16531 1 is_stmt 1 view -0
 34947              		.cfi_startproc
 34948              		@ args = 0, pretend = 0, frame = 8
 34949              		@ frame_needed = 0, uses_anonymous_args = 0
 34950              		.loc 1 16531 1 is_stmt 0 view .LVU9739
 34951 0000 30B5     		push	{r4, r5, lr}
 34952              	.LCFI953:
 34953              		.cfi_def_cfa_offset 12
 34954              		.cfi_offset 4, -12
 34955              		.cfi_offset 5, -8
 34956              		.cfi_offset 14, -4
 34957 0002 83B0     		sub	sp, sp, #12
 34958              	.LCFI954:
 34959              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccWoU29M.s 			page 977


16532:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34960              		.loc 1 16532 5 is_stmt 1 view .LVU9740
 34961              	.LVL4292:
16533:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34962              		.loc 1 16533 5 view .LVU9741
 34963              		.loc 1 16533 8 is_stmt 0 view .LVU9742
 34964 0004 0023     		movs	r3, #0
 34965 0006 8DF80730 		strb	r3, [sp, #7]
16534:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34966              		.loc 1 16534 5 is_stmt 1 view .LVU9743
 34967              	.LVL4293:
16535:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 34968              		.loc 1 16535 5 view .LVU9744
 34969              		.loc 1 16535 8 is_stmt 0 view .LVU9745
 34970 000a 8DF80630 		strb	r3, [sp, #6]
16536:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 34971              		.loc 1 16536 5 is_stmt 1 view .LVU9746
 34972              	.LVL4294:
16537:Core/Src/bno055.c **** 
16538:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16539:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34973              		.loc 1 16539 5 view .LVU9747
 34974              		.loc 1 16539 18 is_stmt 0 view .LVU9748
 34975 000e 294B     		ldr	r3, .L2450
 34976 0010 1B68     		ldr	r3, [r3]
 34977              		.loc 1 16539 8 view .LVU9749
 34978 0012 002B     		cmp	r3, #0
 34979 0014 4AD0     		beq	.L2442
 34980 0016 0546     		mov	r5, r0
16540:Core/Src/bno055.c ****     {
16541:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16542:Core/Src/bno055.c ****     }
16543:Core/Src/bno055.c ****     else
16544:Core/Src/bno055.c ****     {
16545:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16546:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16547:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16548:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 34981              		.loc 1 16548 9 is_stmt 1 view .LVU9750
 34982              		.loc 1 16548 19 is_stmt 0 view .LVU9751
 34983 0018 0DF10600 		add	r0, sp, #6
 34984              	.LVL4295:
 34985              		.loc 1 16548 19 view .LVU9752
 34986 001c FFF7FEFF 		bl	bno055_get_operation_mode
 34987              	.LVL4296:
16549:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 34988              		.loc 1 16549 9 is_stmt 1 view .LVU9753
 34989              		.loc 1 16549 12 is_stmt 0 view .LVU9754
 34990 0020 0446     		mov	r4, r0
 34991 0022 90BB     		cbnz	r0, .L2443
16550:Core/Src/bno055.c ****         {
16551:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34992              		.loc 1 16551 13 is_stmt 1 view .LVU9755
 34993              		.loc 1 16551 32 is_stmt 0 view .LVU9756
 34994 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 34995              		.loc 1 16551 16 view .LVU9757
 34996 0028 1BB9     		cbnz	r3, .L2447
ARM GAS  /tmp/ccWoU29M.s 			page 978


 34997              	.LVL4297:
 34998              	.L2441:
16552:Core/Src/bno055.c ****             {
16553:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16554:Core/Src/bno055.c ****             }
16555:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 34999              		.loc 1 16555 13 is_stmt 1 view .LVU9758
 35000              		.loc 1 16555 16 is_stmt 0 view .LVU9759
 35001 002a 44B1     		cbz	r4, .L2448
16556:Core/Src/bno055.c ****             {
16557:Core/Src/bno055.c ****                 /* Write page as one */
16558:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16559:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16560:Core/Src/bno055.c ****                 {
16561:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16562:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
16563:Core/Src/bno055.c ****                                                               &data_u8r,
16564:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16565:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16566:Core/Src/bno055.c ****                     {
16567:Core/Src/bno055.c ****                         /* Read the value of
16568:Core/Src/bno055.c ****                          * accel slownomotion enable */
16569:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
16570:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
16571:Core/Src/bno055.c ****                                                        accel_slow_no_motion_en_u8);
16572:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16573:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
16574:Core/Src/bno055.c ****                                                                     &data_u8r,
16575:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16576:Core/Src/bno055.c ****                     }
16577:Core/Src/bno055.c ****                 }
16578:Core/Src/bno055.c ****                 else
16579:Core/Src/bno055.c ****                 {
16580:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16581:Core/Src/bno055.c ****                 }
16582:Core/Src/bno055.c ****             }
16583:Core/Src/bno055.c ****             else
16584:Core/Src/bno055.c ****             {
16585:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 35002              		.loc 1 16585 26 view .LVU9760
 35003 002c 4FF0FF34 		mov	r4, #-1
 35004              	.LVL4298:
 35005              		.loc 1 16585 26 view .LVU9761
 35006 0030 2DE0     		b	.L2440
 35007              	.LVL4299:
 35008              	.L2447:
16553:Core/Src/bno055.c ****             }
 35009              		.loc 1 16553 17 is_stmt 1 view .LVU9762
16553:Core/Src/bno055.c ****             }
 35010              		.loc 1 16553 28 is_stmt 0 view .LVU9763
 35011 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 35012              	.LVL4300:
16553:Core/Src/bno055.c ****             }
 35013              		.loc 1 16553 25 view .LVU9764
 35014 0036 54FA80F4 		uxtab	r4, r4, r0
 35015 003a 64B2     		sxtb	r4, r4
 35016              	.LVL4301:
ARM GAS  /tmp/ccWoU29M.s 			page 979


16553:Core/Src/bno055.c ****             }
 35017              		.loc 1 16553 25 view .LVU9765
 35018 003c F5E7     		b	.L2441
 35019              	.L2448:
16558:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35020              		.loc 1 16558 17 is_stmt 1 view .LVU9766
16558:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35021              		.loc 1 16558 30 is_stmt 0 view .LVU9767
 35022 003e 0120     		movs	r0, #1
 35023 0040 FFF7FEFF 		bl	bno055_write_page_id
 35024              	.LVL4302:
16559:Core/Src/bno055.c ****                 {
 35025              		.loc 1 16559 17 is_stmt 1 view .LVU9768
16559:Core/Src/bno055.c ****                 {
 35026              		.loc 1 16559 20 is_stmt 0 view .LVU9769
 35027 0044 48BB     		cbnz	r0, .L2445
16561:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
 35028              		.loc 1 16561 21 is_stmt 1 view .LVU9770
16561:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
 35029              		.loc 1 16561 40 is_stmt 0 view .LVU9771
 35030 0046 1B4B     		ldr	r3, .L2450
 35031 0048 1868     		ldr	r0, [r3]
 35032              	.LVL4303:
16561:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
 35033              		.loc 1 16561 40 view .LVU9772
 35034 004a 0469     		ldr	r4, [r0, #16]
 35035              	.LVL4304:
16561:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
 35036              		.loc 1 16561 32 view .LVU9773
 35037 004c 0123     		movs	r3, #1
 35038 004e 0DF10702 		add	r2, sp, #7
 35039 0052 1621     		movs	r1, #22
 35040 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35041 0056 A047     		blx	r4
 35042              	.LVL4305:
16565:Core/Src/bno055.c ****                     {
 35043              		.loc 1 16565 21 is_stmt 1 view .LVU9774
16565:Core/Src/bno055.c ****                     {
 35044              		.loc 1 16565 24 is_stmt 0 view .LVU9775
 35045 0058 0446     		mov	r4, r0
 35046 005a C0B9     		cbnz	r0, .L2440
16569:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
 35047              		.loc 1 16569 25 is_stmt 1 view .LVU9776
16569:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
 35048              		.loc 1 16569 36 is_stmt 0 view .LVU9777
 35049 005c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 35050              	.LVL4306:
16569:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
 35051              		.loc 1 16569 36 view .LVU9778
 35052 0060 20F00100 		bic	r0, r0, #1
 35053 0064 43B2     		sxtb	r3, r0
 35054 0066 05F00100 		and	r0, r5, #1
 35055 006a 1843     		orrs	r0, r0, r3
16569:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
 35056              		.loc 1 16569 34 view .LVU9779
 35057 006c 8DF80700 		strb	r0, [sp, #7]
16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
ARM GAS  /tmp/ccWoU29M.s 			page 980


 35058              		.loc 1 16572 25 is_stmt 1 view .LVU9780
16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
 35059              		.loc 1 16572 45 is_stmt 0 view .LVU9781
 35060 0070 104B     		ldr	r3, .L2450
 35061 0072 1868     		ldr	r0, [r3]
 35062 0074 C568     		ldr	r5, [r0, #12]
16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
 35063              		.loc 1 16572 37 view .LVU9782
 35064 0076 0123     		movs	r3, #1
 35065 0078 0DF10702 		add	r2, sp, #7
 35066 007c 1621     		movs	r1, #22
 35067 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35068 0080 A847     		blx	r5
 35069              	.LVL4307:
16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
 35070              		.loc 1 16572 34 view .LVU9783
 35071 0082 54FA80F4 		uxtab	r4, r4, r0
 35072 0086 64B2     		sxtb	r4, r4
 35073              	.LVL4308:
16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
 35074              		.loc 1 16572 34 view .LVU9784
 35075 0088 01E0     		b	.L2440
 35076              	.LVL4309:
 35077              	.L2443:
16586:Core/Src/bno055.c ****             }
16587:Core/Src/bno055.c ****         }
16588:Core/Src/bno055.c ****         else
16589:Core/Src/bno055.c ****         {
16590:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 35078              		.loc 1 16590 22 view .LVU9785
 35079 008a 4FF0FF34 		mov	r4, #-1
 35080              	.LVL4310:
 35081              	.L2440:
16591:Core/Src/bno055.c ****         }
16592:Core/Src/bno055.c ****     }
16593:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35082              		.loc 1 16593 5 is_stmt 1 view .LVU9786
 35083              		.loc 1 16593 24 is_stmt 0 view .LVU9787
 35084 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 35085              		.loc 1 16593 8 view .LVU9788
 35086 0092 28B9     		cbnz	r0, .L2449
 35087              	.LVL4311:
 35088              	.L2439:
16594:Core/Src/bno055.c ****     {
16595:Core/Src/bno055.c ****         /* set the operation mode of
16596:Core/Src/bno055.c ****          * previous operation mode*/
16597:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16598:Core/Src/bno055.c ****     }
16599:Core/Src/bno055.c **** 
16600:Core/Src/bno055.c ****     return com_rslt;
16601:Core/Src/bno055.c **** }
 35089              		.loc 1 16601 1 view .LVU9789
 35090 0094 2046     		mov	r0, r4
 35091 0096 03B0     		add	sp, sp, #12
 35092              	.LCFI955:
 35093              		.cfi_remember_state
 35094              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccWoU29M.s 			page 981


 35095              		@ sp needed
 35096 0098 30BD     		pop	{r4, r5, pc}
 35097              	.LVL4312:
 35098              	.L2445:
 35099              	.LCFI956:
 35100              		.cfi_restore_state
16580:Core/Src/bno055.c ****                 }
 35101              		.loc 1 16580 30 view .LVU9790
 35102 009a 4FF0FF34 		mov	r4, #-1
 35103              	.LVL4313:
16580:Core/Src/bno055.c ****                 }
 35104              		.loc 1 16580 30 view .LVU9791
 35105 009e F6E7     		b	.L2440
 35106              	.LVL4314:
 35107              	.L2449:
16597:Core/Src/bno055.c ****     }
 35108              		.loc 1 16597 9 is_stmt 1 view .LVU9792
16597:Core/Src/bno055.c ****     }
 35109              		.loc 1 16597 21 is_stmt 0 view .LVU9793
 35110 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 35111              	.LVL4315:
16597:Core/Src/bno055.c ****     }
 35112              		.loc 1 16597 18 view .LVU9794
 35113 00a4 54FA80F4 		uxtab	r4, r4, r0
 35114              	.LVL4316:
16597:Core/Src/bno055.c ****     }
 35115              		.loc 1 16597 18 view .LVU9795
 35116 00a8 64B2     		sxtb	r4, r4
 35117              	.LVL4317:
16597:Core/Src/bno055.c ****     }
 35118              		.loc 1 16597 18 view .LVU9796
 35119 00aa F3E7     		b	.L2439
 35120              	.LVL4318:
 35121              	.L2442:
16541:Core/Src/bno055.c ****     }
 35122              		.loc 1 16541 16 view .LVU9797
 35123 00ac 6FF07E04 		mvn	r4, #126
 35124 00b0 F0E7     		b	.L2439
 35125              	.L2451:
 35126 00b2 00BF     		.align	2
 35127              	.L2450:
 35128 00b4 00000000 		.word	.LANCHOR0
 35129              		.cfi_endproc
 35130              	.LFE240:
 35132              		.section	.text.bno055_get_accel_slow_no_motion_durn,"ax",%progbits
 35133              		.align	1
 35134              		.global	bno055_get_accel_slow_no_motion_durn
 35135              		.syntax unified
 35136              		.thumb
 35137              		.thumb_func
 35138              		.fpu fpv4-sp-d16
 35140              	bno055_get_accel_slow_no_motion_durn:
 35141              	.LVL4319:
 35142              	.LFB241:
16602:Core/Src/bno055.c **** 
16603:Core/Src/bno055.c **** /*!
16604:Core/Src/bno055.c ****  *  @brief This API used to read accel slownomotion duration
ARM GAS  /tmp/ccWoU29M.s 			page 982


16605:Core/Src/bno055.c ****  *  from page one register from 0x16 bit 1 to 6
16606:Core/Src/bno055.c ****  *
16607:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_durn_u8 :
16608:Core/Src/bno055.c ****  *  The value of accel slownomotion duration
16609:Core/Src/bno055.c ****  *
16610:Core/Src/bno055.c ****  *  @return results of bus communication function
16611:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16612:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16613:Core/Src/bno055.c ****  *
16614:Core/Src/bno055.c ****  */
16615:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_slow_no_motion_durn(u8 *accel_slow_no_motion_durn_u8)
16616:Core/Src/bno055.c **** {
 35143              		.loc 1 16616 1 is_stmt 1 view -0
 35144              		.cfi_startproc
 35145              		@ args = 0, pretend = 0, frame = 8
 35146              		@ frame_needed = 0, uses_anonymous_args = 0
 35147              		.loc 1 16616 1 is_stmt 0 view .LVU9799
 35148 0000 30B5     		push	{r4, r5, lr}
 35149              	.LCFI957:
 35150              		.cfi_def_cfa_offset 12
 35151              		.cfi_offset 4, -12
 35152              		.cfi_offset 5, -8
 35153              		.cfi_offset 14, -4
 35154 0002 83B0     		sub	sp, sp, #12
 35155              	.LCFI958:
 35156              		.cfi_def_cfa_offset 24
16617:Core/Src/bno055.c ****     /* Variable used to return value of
16618:Core/Src/bno055.c ****      * communication routine*/
16619:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35157              		.loc 1 16619 5 is_stmt 1 view .LVU9800
 35158              	.LVL4320:
16620:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 35159              		.loc 1 16620 5 view .LVU9801
 35160              		.loc 1 16620 8 is_stmt 0 view .LVU9802
 35161 0004 0023     		movs	r3, #0
 35162 0006 8DF80730 		strb	r3, [sp, #7]
16621:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35163              		.loc 1 16621 5 is_stmt 1 view .LVU9803
 35164              	.LVL4321:
16622:Core/Src/bno055.c **** 
16623:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16624:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35165              		.loc 1 16624 5 view .LVU9804
 35166              		.loc 1 16624 18 is_stmt 0 view .LVU9805
 35167 000a 144B     		ldr	r3, .L2460
 35168 000c 1B68     		ldr	r3, [r3]
 35169              		.loc 1 16624 8 view .LVU9806
 35170 000e F3B1     		cbz	r3, .L2456
 35171 0010 0446     		mov	r4, r0
16625:Core/Src/bno055.c ****     {
16626:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16627:Core/Src/bno055.c ****     }
16628:Core/Src/bno055.c ****     else
16629:Core/Src/bno055.c ****     {
16630:Core/Src/bno055.c ****         /*condition check for page, accel slownomotion duration is
16631:Core/Src/bno055.c ****          * available in the page one*/
16632:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
ARM GAS  /tmp/ccWoU29M.s 			page 983


 35172              		.loc 1 16632 9 is_stmt 1 view .LVU9807
 35173              		.loc 1 16632 21 is_stmt 0 view .LVU9808
 35174 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35175              		.loc 1 16632 12 view .LVU9809
 35176 0014 012B     		cmp	r3, #1
 35177 0016 14D1     		bne	.L2459
 35178              	.LVL4322:
 35179              	.L2454:
16633:Core/Src/bno055.c ****         {
16634:Core/Src/bno055.c ****             /* Write page as one */
16635:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16636:Core/Src/bno055.c ****         }
16637:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 35180              		.loc 1 16637 53 discriminator 1 view .LVU9810
 35181 0018 104B     		ldr	r3, .L2460
 35182 001a 1B68     		ldr	r3, [r3]
 35183 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35184              		.loc 1 16637 41 discriminator 1 view .LVU9811
 35185 001e 012B     		cmp	r3, #1
 35186 0020 18D1     		bne	.L2457
 35187              	.L2455:
16638:Core/Src/bno055.c ****         {
16639:Core/Src/bno055.c ****             /*read value of accel slownomotion duration*/
16640:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 35188              		.loc 1 16640 13 is_stmt 1 view .LVU9812
 35189              		.loc 1 16640 32 is_stmt 0 view .LVU9813
 35190 0022 0E4B     		ldr	r3, .L2460
 35191 0024 1868     		ldr	r0, [r3]
 35192 0026 0569     		ldr	r5, [r0, #16]
 35193              		.loc 1 16640 24 view .LVU9814
 35194 0028 0123     		movs	r3, #1
 35195 002a 0DF10702 		add	r2, sp, #7
 35196 002e 1621     		movs	r1, #22
 35197 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35198 0032 A847     		blx	r5
 35199              	.LVL4323:
16641:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
16642:Core/Src/bno055.c ****                                                       &data_u8r,
16643:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16644:Core/Src/bno055.c ****             *accel_slow_no_motion_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLOW_NO_MOTI
 35200              		.loc 1 16644 13 is_stmt 1 view .LVU9815
 35201              		.loc 1 16644 45 is_stmt 0 view .LVU9816
 35202 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35203 0038 C3F34503 		ubfx	r3, r3, #1, #6
 35204              		.loc 1 16644 43 view .LVU9817
 35205 003c 2370     		strb	r3, [r4]
 35206              	.LVL4324:
 35207              	.L2453:
16645:Core/Src/bno055.c ****         }
16646:Core/Src/bno055.c ****         else
16647:Core/Src/bno055.c ****         {
16648:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16649:Core/Src/bno055.c ****         }
16650:Core/Src/bno055.c ****     }
16651:Core/Src/bno055.c **** 
16652:Core/Src/bno055.c ****     return com_rslt;
16653:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccWoU29M.s 			page 984


 35208              		.loc 1 16653 1 view .LVU9818
 35209 003e 03B0     		add	sp, sp, #12
 35210              	.LCFI959:
 35211              		.cfi_remember_state
 35212              		.cfi_def_cfa_offset 12
 35213              		@ sp needed
 35214 0040 30BD     		pop	{r4, r5, pc}
 35215              	.LVL4325:
 35216              	.L2459:
 35217              	.LCFI960:
 35218              		.cfi_restore_state
16635:Core/Src/bno055.c ****         }
 35219              		.loc 1 16635 13 is_stmt 1 view .LVU9819
16635:Core/Src/bno055.c ****         }
 35220              		.loc 1 16635 23 is_stmt 0 view .LVU9820
 35221 0042 0120     		movs	r0, #1
 35222              	.LVL4326:
16635:Core/Src/bno055.c ****         }
 35223              		.loc 1 16635 23 view .LVU9821
 35224 0044 FFF7FEFF 		bl	bno055_write_page_id
 35225              	.LVL4327:
16637:Core/Src/bno055.c ****         {
 35226              		.loc 1 16637 9 is_stmt 1 view .LVU9822
16637:Core/Src/bno055.c ****         {
 35227              		.loc 1 16637 12 is_stmt 0 view .LVU9823
 35228 0048 0028     		cmp	r0, #0
 35229 004a EAD0     		beq	.L2455
 35230 004c E4E7     		b	.L2454
 35231              	.LVL4328:
 35232              	.L2456:
16626:Core/Src/bno055.c ****     }
 35233              		.loc 1 16626 16 view .LVU9824
 35234 004e 6FF07E00 		mvn	r0, #126
 35235              	.LVL4329:
16626:Core/Src/bno055.c ****     }
 35236              		.loc 1 16626 16 view .LVU9825
 35237 0052 F4E7     		b	.L2453
 35238              	.LVL4330:
 35239              	.L2457:
16648:Core/Src/bno055.c ****         }
 35240              		.loc 1 16648 22 view .LVU9826
 35241 0054 4FF0FF30 		mov	r0, #-1
 35242 0058 F1E7     		b	.L2453
 35243              	.L2461:
 35244 005a 00BF     		.align	2
 35245              	.L2460:
 35246 005c 00000000 		.word	.LANCHOR0
 35247              		.cfi_endproc
 35248              	.LFE241:
 35250              		.section	.text.bno055_set_accel_slow_no_motion_durn,"ax",%progbits
 35251              		.align	1
 35252              		.global	bno055_set_accel_slow_no_motion_durn
 35253              		.syntax unified
 35254              		.thumb
 35255              		.thumb_func
 35256              		.fpu fpv4-sp-d16
 35258              	bno055_set_accel_slow_no_motion_durn:
ARM GAS  /tmp/ccWoU29M.s 			page 985


 35259              	.LVL4331:
 35260              	.LFB242:
16654:Core/Src/bno055.c **** 
16655:Core/Src/bno055.c **** /*!
16656:Core/Src/bno055.c ****  *  @brief This API used to write accel slownomotion duration
16657:Core/Src/bno055.c ****  *  from page one register from 0x16 bit 1 to 6
16658:Core/Src/bno055.c ****  *
16659:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_durn_u8 :
16660:Core/Src/bno055.c ****  *  The value of accel slownomotion duration
16661:Core/Src/bno055.c ****  *
16662:Core/Src/bno055.c ****  *  @return results of bus communication function
16663:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16664:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16665:Core/Src/bno055.c ****  *
16666:Core/Src/bno055.c ****  */
16667:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_slow_no_motion_durn(u8 accel_slow_no_motion_durn_u8)
16668:Core/Src/bno055.c **** {
 35261              		.loc 1 16668 1 is_stmt 1 view -0
 35262              		.cfi_startproc
 35263              		@ args = 0, pretend = 0, frame = 8
 35264              		@ frame_needed = 0, uses_anonymous_args = 0
 35265              		.loc 1 16668 1 is_stmt 0 view .LVU9828
 35266 0000 30B5     		push	{r4, r5, lr}
 35267              	.LCFI961:
 35268              		.cfi_def_cfa_offset 12
 35269              		.cfi_offset 4, -12
 35270              		.cfi_offset 5, -8
 35271              		.cfi_offset 14, -4
 35272 0002 83B0     		sub	sp, sp, #12
 35273              	.LCFI962:
 35274              		.cfi_def_cfa_offset 24
16669:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35275              		.loc 1 16669 5 is_stmt 1 view .LVU9829
 35276              	.LVL4332:
16670:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 35277              		.loc 1 16670 5 view .LVU9830
 35278              		.loc 1 16670 8 is_stmt 0 view .LVU9831
 35279 0004 0023     		movs	r3, #0
 35280 0006 8DF80730 		strb	r3, [sp, #7]
16671:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35281              		.loc 1 16671 5 is_stmt 1 view .LVU9832
 35282              	.LVL4333:
16672:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 35283              		.loc 1 16672 5 view .LVU9833
 35284              		.loc 1 16672 8 is_stmt 0 view .LVU9834
 35285 000a 8DF80630 		strb	r3, [sp, #6]
16673:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 35286              		.loc 1 16673 5 is_stmt 1 view .LVU9835
 35287              	.LVL4334:
16674:Core/Src/bno055.c **** 
16675:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16676:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35288              		.loc 1 16676 5 view .LVU9836
 35289              		.loc 1 16676 18 is_stmt 0 view .LVU9837
 35290 000e 2A4B     		ldr	r3, .L2474
 35291 0010 1B68     		ldr	r3, [r3]
 35292              		.loc 1 16676 8 view .LVU9838
ARM GAS  /tmp/ccWoU29M.s 			page 986


 35293 0012 002B     		cmp	r3, #0
 35294 0014 4CD0     		beq	.L2466
 35295 0016 0546     		mov	r5, r0
16677:Core/Src/bno055.c ****     {
16678:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16679:Core/Src/bno055.c ****     }
16680:Core/Src/bno055.c ****     else
16681:Core/Src/bno055.c ****     {
16682:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16683:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16684:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16685:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 35296              		.loc 1 16685 9 is_stmt 1 view .LVU9839
 35297              		.loc 1 16685 19 is_stmt 0 view .LVU9840
 35298 0018 0DF10600 		add	r0, sp, #6
 35299              	.LVL4335:
 35300              		.loc 1 16685 19 view .LVU9841
 35301 001c FFF7FEFF 		bl	bno055_get_operation_mode
 35302              	.LVL4336:
16686:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 35303              		.loc 1 16686 9 is_stmt 1 view .LVU9842
 35304              		.loc 1 16686 12 is_stmt 0 view .LVU9843
 35305 0020 0446     		mov	r4, r0
 35306 0022 0028     		cmp	r0, #0
 35307 0024 33D1     		bne	.L2467
16687:Core/Src/bno055.c ****         {
16688:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35308              		.loc 1 16688 13 is_stmt 1 view .LVU9844
 35309              		.loc 1 16688 32 is_stmt 0 view .LVU9845
 35310 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 35311              		.loc 1 16688 16 view .LVU9846
 35312 002a 1BB9     		cbnz	r3, .L2471
 35313              	.LVL4337:
 35314              	.L2465:
16689:Core/Src/bno055.c ****             {
16690:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16691:Core/Src/bno055.c ****             }
16692:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 35315              		.loc 1 16692 13 is_stmt 1 view .LVU9847
 35316              		.loc 1 16692 16 is_stmt 0 view .LVU9848
 35317 002c 44B1     		cbz	r4, .L2472
16693:Core/Src/bno055.c ****             {
16694:Core/Src/bno055.c ****                 /* Write page as one */
16695:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16696:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16697:Core/Src/bno055.c ****                 {
16698:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16699:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
16700:Core/Src/bno055.c ****                                                               &data_u8r,
16701:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16702:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16703:Core/Src/bno055.c ****                     {
16704:Core/Src/bno055.c ****                         /*Write the value of accel
16705:Core/Src/bno055.c ****                          * slownomotion duration*/
16706:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
16707:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
16708:Core/Src/bno055.c ****                                                        accel_slow_no_motion_durn_u8);
ARM GAS  /tmp/ccWoU29M.s 			page 987


16709:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16710:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
16711:Core/Src/bno055.c ****                                                                     &data_u8r,
16712:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16713:Core/Src/bno055.c ****                     }
16714:Core/Src/bno055.c ****                 }
16715:Core/Src/bno055.c ****                 else
16716:Core/Src/bno055.c ****                 {
16717:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16718:Core/Src/bno055.c ****                 }
16719:Core/Src/bno055.c ****             }
16720:Core/Src/bno055.c ****             else
16721:Core/Src/bno055.c ****             {
16722:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 35318              		.loc 1 16722 26 view .LVU9849
 35319 002e 4FF0FF34 		mov	r4, #-1
 35320              	.LVL4338:
 35321              		.loc 1 16722 26 view .LVU9850
 35322 0032 2EE0     		b	.L2464
 35323              	.LVL4339:
 35324              	.L2471:
16690:Core/Src/bno055.c ****             }
 35325              		.loc 1 16690 17 is_stmt 1 view .LVU9851
16690:Core/Src/bno055.c ****             }
 35326              		.loc 1 16690 28 is_stmt 0 view .LVU9852
 35327 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 35328              	.LVL4340:
16690:Core/Src/bno055.c ****             }
 35329              		.loc 1 16690 25 view .LVU9853
 35330 0038 54FA80F4 		uxtab	r4, r4, r0
 35331 003c 64B2     		sxtb	r4, r4
 35332              	.LVL4341:
16690:Core/Src/bno055.c ****             }
 35333              		.loc 1 16690 25 view .LVU9854
 35334 003e F5E7     		b	.L2465
 35335              	.L2472:
16695:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35336              		.loc 1 16695 17 is_stmt 1 view .LVU9855
16695:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35337              		.loc 1 16695 30 is_stmt 0 view .LVU9856
 35338 0040 0120     		movs	r0, #1
 35339 0042 FFF7FEFF 		bl	bno055_write_page_id
 35340              	.LVL4342:
16696:Core/Src/bno055.c ****                 {
 35341              		.loc 1 16696 17 is_stmt 1 view .LVU9857
16696:Core/Src/bno055.c ****                 {
 35342              		.loc 1 16696 20 is_stmt 0 view .LVU9858
 35343 0046 50BB     		cbnz	r0, .L2469
16698:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
 35344              		.loc 1 16698 21 is_stmt 1 view .LVU9859
16698:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
 35345              		.loc 1 16698 40 is_stmt 0 view .LVU9860
 35346 0048 1B4B     		ldr	r3, .L2474
 35347 004a 1868     		ldr	r0, [r3]
 35348              	.LVL4343:
16698:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
 35349              		.loc 1 16698 40 view .LVU9861
ARM GAS  /tmp/ccWoU29M.s 			page 988


 35350 004c 0469     		ldr	r4, [r0, #16]
 35351              	.LVL4344:
16698:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
 35352              		.loc 1 16698 32 view .LVU9862
 35353 004e 0123     		movs	r3, #1
 35354 0050 0DF10702 		add	r2, sp, #7
 35355 0054 1621     		movs	r1, #22
 35356 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35357 0058 A047     		blx	r4
 35358              	.LVL4345:
16702:Core/Src/bno055.c ****                     {
 35359              		.loc 1 16702 21 is_stmt 1 view .LVU9863
16702:Core/Src/bno055.c ****                     {
 35360              		.loc 1 16702 24 is_stmt 0 view .LVU9864
 35361 005a 0446     		mov	r4, r0
 35362 005c C8B9     		cbnz	r0, .L2464
16706:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
 35363              		.loc 1 16706 25 is_stmt 1 view .LVU9865
16706:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
 35364              		.loc 1 16706 36 is_stmt 0 view .LVU9866
 35365 005e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 35366              	.LVL4346:
16706:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
 35367              		.loc 1 16706 36 view .LVU9867
 35368 0062 20F07E00 		bic	r0, r0, #126
 35369 0066 43B2     		sxtb	r3, r0
 35370 0068 6800     		lsls	r0, r5, #1
 35371 006a 00F07E00 		and	r0, r0, #126
 35372 006e 1843     		orrs	r0, r0, r3
16706:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
 35373              		.loc 1 16706 34 view .LVU9868
 35374 0070 8DF80700 		strb	r0, [sp, #7]
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 35375              		.loc 1 16709 25 is_stmt 1 view .LVU9869
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 35376              		.loc 1 16709 45 is_stmt 0 view .LVU9870
 35377 0074 104B     		ldr	r3, .L2474
 35378 0076 1868     		ldr	r0, [r3]
 35379 0078 C568     		ldr	r5, [r0, #12]
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 35380              		.loc 1 16709 37 view .LVU9871
 35381 007a 0123     		movs	r3, #1
 35382 007c 0DF10702 		add	r2, sp, #7
 35383 0080 1621     		movs	r1, #22
 35384 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35385 0084 A847     		blx	r5
 35386              	.LVL4347:
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 35387              		.loc 1 16709 34 view .LVU9872
 35388 0086 54FA80F4 		uxtab	r4, r4, r0
 35389 008a 64B2     		sxtb	r4, r4
 35390              	.LVL4348:
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 35391              		.loc 1 16709 34 view .LVU9873
 35392 008c 01E0     		b	.L2464
 35393              	.LVL4349:
 35394              	.L2467:
ARM GAS  /tmp/ccWoU29M.s 			page 989


16723:Core/Src/bno055.c ****             }
16724:Core/Src/bno055.c ****         }
16725:Core/Src/bno055.c ****         else
16726:Core/Src/bno055.c ****         {
16727:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 35395              		.loc 1 16727 22 view .LVU9874
 35396 008e 4FF0FF34 		mov	r4, #-1
 35397              	.LVL4350:
 35398              	.L2464:
16728:Core/Src/bno055.c ****         }
16729:Core/Src/bno055.c ****     }
16730:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35399              		.loc 1 16730 5 is_stmt 1 view .LVU9875
 35400              		.loc 1 16730 24 is_stmt 0 view .LVU9876
 35401 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 35402              		.loc 1 16730 8 view .LVU9877
 35403 0096 28B9     		cbnz	r0, .L2473
 35404              	.LVL4351:
 35405              	.L2463:
16731:Core/Src/bno055.c ****     {
16732:Core/Src/bno055.c ****         /* set the operation mode of
16733:Core/Src/bno055.c ****          * previous operation mode*/
16734:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16735:Core/Src/bno055.c ****     }
16736:Core/Src/bno055.c **** 
16737:Core/Src/bno055.c ****     return com_rslt;
16738:Core/Src/bno055.c **** }
 35406              		.loc 1 16738 1 view .LVU9878
 35407 0098 2046     		mov	r0, r4
 35408 009a 03B0     		add	sp, sp, #12
 35409              	.LCFI963:
 35410              		.cfi_remember_state
 35411              		.cfi_def_cfa_offset 12
 35412              		@ sp needed
 35413 009c 30BD     		pop	{r4, r5, pc}
 35414              	.LVL4352:
 35415              	.L2469:
 35416              	.LCFI964:
 35417              		.cfi_restore_state
16717:Core/Src/bno055.c ****                 }
 35418              		.loc 1 16717 30 view .LVU9879
 35419 009e 4FF0FF34 		mov	r4, #-1
 35420              	.LVL4353:
16717:Core/Src/bno055.c ****                 }
 35421              		.loc 1 16717 30 view .LVU9880
 35422 00a2 F6E7     		b	.L2464
 35423              	.LVL4354:
 35424              	.L2473:
16734:Core/Src/bno055.c ****     }
 35425              		.loc 1 16734 9 is_stmt 1 view .LVU9881
16734:Core/Src/bno055.c ****     }
 35426              		.loc 1 16734 21 is_stmt 0 view .LVU9882
 35427 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 35428              	.LVL4355:
16734:Core/Src/bno055.c ****     }
 35429              		.loc 1 16734 18 view .LVU9883
 35430 00a8 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/ccWoU29M.s 			page 990


 35431              	.LVL4356:
16734:Core/Src/bno055.c ****     }
 35432              		.loc 1 16734 18 view .LVU9884
 35433 00ac 64B2     		sxtb	r4, r4
 35434              	.LVL4357:
16734:Core/Src/bno055.c ****     }
 35435              		.loc 1 16734 18 view .LVU9885
 35436 00ae F3E7     		b	.L2463
 35437              	.LVL4358:
 35438              	.L2466:
16678:Core/Src/bno055.c ****     }
 35439              		.loc 1 16678 16 view .LVU9886
 35440 00b0 6FF07E04 		mvn	r4, #126
 35441 00b4 F0E7     		b	.L2463
 35442              	.L2475:
 35443 00b6 00BF     		.align	2
 35444              	.L2474:
 35445 00b8 00000000 		.word	.LANCHOR0
 35446              		.cfi_endproc
 35447              	.LFE242:
 35449              		.section	.text.bno055_get_gyro_any_motion_axis_enable,"ax",%progbits
 35450              		.align	1
 35451              		.global	bno055_get_gyro_any_motion_axis_enable
 35452              		.syntax unified
 35453              		.thumb
 35454              		.thumb_func
 35455              		.fpu fpv4-sp-d16
 35457              	bno055_get_gyro_any_motion_axis_enable:
 35458              	.LVL4359:
 35459              	.LFB243:
16739:Core/Src/bno055.c **** 
16740:Core/Src/bno055.c **** /*!
16741:Core/Src/bno055.c ****  *  @brief This API used to read the gyro anymotion enable
16742:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 0 to 2
16743:Core/Src/bno055.c ****  *
16744:Core/Src/bno055.c ****  *  @param data_u8 : The value of gyro anymotion enable
16745:Core/Src/bno055.c ****  *      data_u8     | result
16746:Core/Src/bno055.c ****  *  ----------------- |-------------
16747:Core/Src/bno055.c ****  *      0x01          | BNO055_BIT_ENABLE
16748:Core/Src/bno055.c ****  *      0x00          | BNO055_BIT_DISABLE
16749:Core/Src/bno055.c ****  *  @param channel_u8 : The value of gyro anymotion axis selection
16750:Core/Src/bno055.c ****  *               channel_u8         | value
16751:Core/Src/bno055.c ****  *     ---------------------------    | ----------
16752:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONX_AXIS   |   0
16753:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONY_AXIS   |   1
16754:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONZ_AXIS   |   2
16755:Core/Src/bno055.c ****  *
16756:Core/Src/bno055.c ****  *
16757:Core/Src/bno055.c ****  *  @return results of bus communication function
16758:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16759:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16760:Core/Src/bno055.c ****  *
16761:Core/Src/bno055.c ****  *
16762:Core/Src/bno055.c ****  */
16763:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_axis_enable(u8 channel_u8, u8 *data_u8)
16764:Core/Src/bno055.c **** {
 35460              		.loc 1 16764 1 is_stmt 1 view -0
ARM GAS  /tmp/ccWoU29M.s 			page 991


 35461              		.cfi_startproc
 35462              		@ args = 0, pretend = 0, frame = 8
 35463              		@ frame_needed = 0, uses_anonymous_args = 0
 35464              		.loc 1 16764 1 is_stmt 0 view .LVU9888
 35465 0000 30B5     		push	{r4, r5, lr}
 35466              	.LCFI965:
 35467              		.cfi_def_cfa_offset 12
 35468              		.cfi_offset 4, -12
 35469              		.cfi_offset 5, -8
 35470              		.cfi_offset 14, -4
 35471 0002 83B0     		sub	sp, sp, #12
 35472              	.LCFI966:
 35473              		.cfi_def_cfa_offset 24
16765:Core/Src/bno055.c ****     /* Variable used to return value of
16766:Core/Src/bno055.c ****      * communication routine*/
16767:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35474              		.loc 1 16767 5 is_stmt 1 view .LVU9889
 35475              	.LVL4360:
16768:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 35476              		.loc 1 16768 5 view .LVU9890
 35477              		.loc 1 16768 8 is_stmt 0 view .LVU9891
 35478 0004 0023     		movs	r3, #0
 35479 0006 8DF80730 		strb	r3, [sp, #7]
16769:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35480              		.loc 1 16769 5 is_stmt 1 view .LVU9892
 35481              	.LVL4361:
16770:Core/Src/bno055.c **** 
16771:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16772:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35482              		.loc 1 16772 5 view .LVU9893
 35483              		.loc 1 16772 18 is_stmt 0 view .LVU9894
 35484 000a 284B     		ldr	r3, .L2488
 35485 000c 1B68     		ldr	r3, [r3]
 35486              		.loc 1 16772 8 view .LVU9895
 35487 000e 002B     		cmp	r3, #0
 35488 0010 45D0     		beq	.L2482
 35489 0012 0446     		mov	r4, r0
 35490 0014 0D46     		mov	r5, r1
16773:Core/Src/bno055.c ****     {
16774:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16775:Core/Src/bno055.c ****     }
16776:Core/Src/bno055.c ****     else
16777:Core/Src/bno055.c ****     {
16778:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion axis is
16779:Core/Src/bno055.c ****          * available in the page one*/
16780:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 35491              		.loc 1 16780 9 is_stmt 1 view .LVU9896
 35492              		.loc 1 16780 21 is_stmt 0 view .LVU9897
 35493 0016 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35494              		.loc 1 16780 12 view .LVU9898
 35495 0018 012B     		cmp	r3, #1
 35496 001a 0DD1     		bne	.L2486
 35497              	.LVL4362:
 35498              	.L2478:
16781:Core/Src/bno055.c ****         {
16782:Core/Src/bno055.c ****             /* Write page as one */
16783:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
ARM GAS  /tmp/ccWoU29M.s 			page 992


16784:Core/Src/bno055.c ****         }
16785:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 35499              		.loc 1 16785 53 discriminator 1 view .LVU9899
 35500 001c 234B     		ldr	r3, .L2488
 35501 001e 1B68     		ldr	r3, [r3]
 35502 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35503              		.loc 1 16785 41 discriminator 1 view .LVU9900
 35504 0022 012B     		cmp	r3, #1
 35505 0024 3ED1     		bne	.L2483
 35506              	.L2479:
16786:Core/Src/bno055.c ****         {
16787:Core/Src/bno055.c ****             switch (channel_u8)
 35507              		.loc 1 16787 13 is_stmt 1 view .LVU9901
 35508 0026 012C     		cmp	r4, #1
 35509 0028 1BD0     		beq	.L2480
 35510 002a 022C     		cmp	r4, #2
 35511 002c 28D0     		beq	.L2481
 35512 002e 4CB1     		cbz	r4, .L2487
 35513 0030 6FF00100 		mvn	r0, #1
 35514              	.LVL4363:
 35515              	.L2477:
16788:Core/Src/bno055.c ****             {
16789:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_X_AXIS:
16790:Core/Src/bno055.c **** 
16791:Core/Src/bno055.c ****                     /* Read the gyro anymotion x enable*/
16792:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16793:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_X_AXIS_REG,
16794:Core/Src/bno055.c ****                                                               &data_u8r,
16795:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16796:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_X_AXIS);
16797:Core/Src/bno055.c ****                     break;
16798:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_Y_AXIS:
16799:Core/Src/bno055.c **** 
16800:Core/Src/bno055.c ****                     /* Read the gyro anymotion y enable*/
16801:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16802:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Y_AXIS_REG,
16803:Core/Src/bno055.c ****                                                               &data_u8r,
16804:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16805:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_Y_AXIS);
16806:Core/Src/bno055.c ****                     break;
16807:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_Z_AXIS:
16808:Core/Src/bno055.c **** 
16809:Core/Src/bno055.c ****                     /* Read the gyro anymotion z enable*/
16810:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16811:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Z_AXIS_REG,
16812:Core/Src/bno055.c ****                                                               &data_u8r,
16813:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16814:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_Z_AXIS);
16815:Core/Src/bno055.c ****                     break;
16816:Core/Src/bno055.c ****                 default:
16817:Core/Src/bno055.c ****                     com_rslt = BNO055_OUT_OF_RANGE;
16818:Core/Src/bno055.c ****                     break;
16819:Core/Src/bno055.c ****             }
16820:Core/Src/bno055.c ****         }
16821:Core/Src/bno055.c ****         else
16822:Core/Src/bno055.c ****         {
16823:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 993


16824:Core/Src/bno055.c ****         }
16825:Core/Src/bno055.c ****     }
16826:Core/Src/bno055.c **** 
16827:Core/Src/bno055.c ****     return com_rslt;
16828:Core/Src/bno055.c **** }
 35516              		.loc 1 16828 1 is_stmt 0 view .LVU9902
 35517 0034 03B0     		add	sp, sp, #12
 35518              	.LCFI967:
 35519              		.cfi_remember_state
 35520              		.cfi_def_cfa_offset 12
 35521              		@ sp needed
 35522 0036 30BD     		pop	{r4, r5, pc}
 35523              	.LVL4364:
 35524              	.L2486:
 35525              	.LCFI968:
 35526              		.cfi_restore_state
16783:Core/Src/bno055.c ****         }
 35527              		.loc 1 16783 13 is_stmt 1 view .LVU9903
16783:Core/Src/bno055.c ****         }
 35528              		.loc 1 16783 23 is_stmt 0 view .LVU9904
 35529 0038 0120     		movs	r0, #1
 35530              	.LVL4365:
16783:Core/Src/bno055.c ****         }
 35531              		.loc 1 16783 23 view .LVU9905
 35532 003a FFF7FEFF 		bl	bno055_write_page_id
 35533              	.LVL4366:
16785:Core/Src/bno055.c ****         {
 35534              		.loc 1 16785 9 is_stmt 1 view .LVU9906
16785:Core/Src/bno055.c ****         {
 35535              		.loc 1 16785 12 is_stmt 0 view .LVU9907
 35536 003e 0028     		cmp	r0, #0
 35537 0040 F1D0     		beq	.L2479
 35538 0042 EBE7     		b	.L2478
 35539              	.LVL4367:
 35540              	.L2487:
16792:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_X_AXIS_REG,
 35541              		.loc 1 16792 21 is_stmt 1 view .LVU9908
16792:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_X_AXIS_REG,
 35542              		.loc 1 16792 40 is_stmt 0 view .LVU9909
 35543 0044 194B     		ldr	r3, .L2488
 35544 0046 1868     		ldr	r0, [r3]
 35545 0048 0469     		ldr	r4, [r0, #16]
16792:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_X_AXIS_REG,
 35546              		.loc 1 16792 32 view .LVU9910
 35547 004a 0123     		movs	r3, #1
 35548 004c 0DF10702 		add	r2, sp, #7
 35549 0050 1721     		movs	r1, #23
 35550 0052 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35551 0054 A047     		blx	r4
 35552              	.LVL4368:
16796:Core/Src/bno055.c ****                     break;
 35553              		.loc 1 16796 21 is_stmt 1 view .LVU9911
16796:Core/Src/bno055.c ****                     break;
 35554              		.loc 1 16796 32 is_stmt 0 view .LVU9912
 35555 0056 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35556 005a 03F00103 		and	r3, r3, #1
16796:Core/Src/bno055.c ****                     break;
ARM GAS  /tmp/ccWoU29M.s 			page 994


 35557              		.loc 1 16796 30 view .LVU9913
 35558 005e 2B70     		strb	r3, [r5]
16797:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_Y_AXIS:
 35559              		.loc 1 16797 21 is_stmt 1 view .LVU9914
 35560 0060 E8E7     		b	.L2477
 35561              	.LVL4369:
 35562              	.L2480:
16801:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Y_AXIS_REG,
 35563              		.loc 1 16801 21 view .LVU9915
16801:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Y_AXIS_REG,
 35564              		.loc 1 16801 40 is_stmt 0 view .LVU9916
 35565 0062 124B     		ldr	r3, .L2488
 35566 0064 1868     		ldr	r0, [r3]
 35567 0066 0469     		ldr	r4, [r0, #16]
16801:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Y_AXIS_REG,
 35568              		.loc 1 16801 32 view .LVU9917
 35569 0068 0123     		movs	r3, #1
 35570 006a 0DF10702 		add	r2, sp, #7
 35571 006e 1721     		movs	r1, #23
 35572 0070 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35573 0072 A047     		blx	r4
 35574              	.LVL4370:
16805:Core/Src/bno055.c ****                     break;
 35575              		.loc 1 16805 21 is_stmt 1 view .LVU9918
16805:Core/Src/bno055.c ****                     break;
 35576              		.loc 1 16805 32 is_stmt 0 view .LVU9919
 35577 0074 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35578 0078 C3F34003 		ubfx	r3, r3, #1, #1
16805:Core/Src/bno055.c ****                     break;
 35579              		.loc 1 16805 30 view .LVU9920
 35580 007c 2B70     		strb	r3, [r5]
16806:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_Z_AXIS:
 35581              		.loc 1 16806 21 is_stmt 1 view .LVU9921
 35582 007e D9E7     		b	.L2477
 35583              	.LVL4371:
 35584              	.L2481:
16810:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Z_AXIS_REG,
 35585              		.loc 1 16810 21 view .LVU9922
16810:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Z_AXIS_REG,
 35586              		.loc 1 16810 40 is_stmt 0 view .LVU9923
 35587 0080 0A4B     		ldr	r3, .L2488
 35588 0082 1868     		ldr	r0, [r3]
 35589 0084 0469     		ldr	r4, [r0, #16]
16810:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Z_AXIS_REG,
 35590              		.loc 1 16810 32 view .LVU9924
 35591 0086 0123     		movs	r3, #1
 35592 0088 0DF10702 		add	r2, sp, #7
 35593 008c 1721     		movs	r1, #23
 35594 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35595 0090 A047     		blx	r4
 35596              	.LVL4372:
16814:Core/Src/bno055.c ****                     break;
 35597              		.loc 1 16814 21 is_stmt 1 view .LVU9925
16814:Core/Src/bno055.c ****                     break;
 35598              		.loc 1 16814 32 is_stmt 0 view .LVU9926
 35599 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35600 0096 C3F38003 		ubfx	r3, r3, #2, #1
ARM GAS  /tmp/ccWoU29M.s 			page 995


16814:Core/Src/bno055.c ****                     break;
 35601              		.loc 1 16814 30 view .LVU9927
 35602 009a 2B70     		strb	r3, [r5]
16815:Core/Src/bno055.c ****                 default:
 35603              		.loc 1 16815 21 is_stmt 1 view .LVU9928
 35604 009c CAE7     		b	.L2477
 35605              	.LVL4373:
 35606              	.L2482:
16774:Core/Src/bno055.c ****     }
 35607              		.loc 1 16774 16 is_stmt 0 view .LVU9929
 35608 009e 6FF07E00 		mvn	r0, #126
 35609              	.LVL4374:
16774:Core/Src/bno055.c ****     }
 35610              		.loc 1 16774 16 view .LVU9930
 35611 00a2 C7E7     		b	.L2477
 35612              	.LVL4375:
 35613              	.L2483:
16823:Core/Src/bno055.c ****         }
 35614              		.loc 1 16823 22 view .LVU9931
 35615 00a4 4FF0FF30 		mov	r0, #-1
 35616 00a8 C4E7     		b	.L2477
 35617              	.L2489:
 35618 00aa 00BF     		.align	2
 35619              	.L2488:
 35620 00ac 00000000 		.word	.LANCHOR0
 35621              		.cfi_endproc
 35622              	.LFE243:
 35624              		.section	.text.bno055_set_gyro_any_motion_axis_enable,"ax",%progbits
 35625              		.align	1
 35626              		.global	bno055_set_gyro_any_motion_axis_enable
 35627              		.syntax unified
 35628              		.thumb
 35629              		.thumb_func
 35630              		.fpu fpv4-sp-d16
 35632              	bno055_set_gyro_any_motion_axis_enable:
 35633              	.LVL4376:
 35634              	.LFB244:
16829:Core/Src/bno055.c **** 
16830:Core/Src/bno055.c **** /*!
16831:Core/Src/bno055.c ****  *  @brief This API used to write the gyro anymotion enable
16832:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 0 to 2
16833:Core/Src/bno055.c ****  *
16834:Core/Src/bno055.c ****  *  @param data_u8 : The value of gyro anymotion enable
16835:Core/Src/bno055.c ****  *      data_u8     | result
16836:Core/Src/bno055.c ****  *  ----------------- |-------------
16837:Core/Src/bno055.c ****  *      0x01          | BNO055_BIT_ENABLE
16838:Core/Src/bno055.c ****  *      0x00          | BNO055_BIT_DISABLE
16839:Core/Src/bno055.c ****  *  @param channel_u8 : The value of gyro anymotion axis selection
16840:Core/Src/bno055.c ****  *               channel_u8         | value
16841:Core/Src/bno055.c ****  *     ---------------------------    | ----------
16842:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONX_AXIS   |   0
16843:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONY_AXIS   |   1
16844:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONZ_AXIS   |   2
16845:Core/Src/bno055.c ****  *
16846:Core/Src/bno055.c ****  *  @return results of bus communication function
16847:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16848:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
ARM GAS  /tmp/ccWoU29M.s 			page 996


16849:Core/Src/bno055.c ****  *
16850:Core/Src/bno055.c ****  *
16851:Core/Src/bno055.c ****  */
16852:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_axis_enable(u8 channel_u8, u8 data_u8)
16853:Core/Src/bno055.c **** {
 35635              		.loc 1 16853 1 is_stmt 1 view -0
 35636              		.cfi_startproc
 35637              		@ args = 0, pretend = 0, frame = 8
 35638              		@ frame_needed = 0, uses_anonymous_args = 0
 35639              		.loc 1 16853 1 is_stmt 0 view .LVU9933
 35640 0000 70B5     		push	{r4, r5, r6, lr}
 35641              	.LCFI969:
 35642              		.cfi_def_cfa_offset 16
 35643              		.cfi_offset 4, -16
 35644              		.cfi_offset 5, -12
 35645              		.cfi_offset 6, -8
 35646              		.cfi_offset 14, -4
 35647 0002 82B0     		sub	sp, sp, #8
 35648              	.LCFI970:
 35649              		.cfi_def_cfa_offset 24
16854:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35650              		.loc 1 16854 5 is_stmt 1 view .LVU9934
 35651              	.LVL4377:
16855:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 35652              		.loc 1 16855 5 view .LVU9935
 35653              		.loc 1 16855 8 is_stmt 0 view .LVU9936
 35654 0004 0023     		movs	r3, #0
 35655 0006 8DF80730 		strb	r3, [sp, #7]
16856:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35656              		.loc 1 16856 5 is_stmt 1 view .LVU9937
 35657              	.LVL4378:
16857:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 35658              		.loc 1 16857 5 view .LVU9938
 35659              		.loc 1 16857 8 is_stmt 0 view .LVU9939
 35660 000a 8DF80630 		strb	r3, [sp, #6]
16858:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 35661              		.loc 1 16858 5 is_stmt 1 view .LVU9940
 35662              	.LVL4379:
16859:Core/Src/bno055.c **** 
16860:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16861:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35663              		.loc 1 16861 5 view .LVU9941
 35664              		.loc 1 16861 18 is_stmt 0 view .LVU9942
 35665 000e 534B     		ldr	r3, .L2506
 35666 0010 1B68     		ldr	r3, [r3]
 35667              		.loc 1 16861 8 view .LVU9943
 35668 0012 002B     		cmp	r3, #0
 35669 0014 00F09F80 		beq	.L2496
 35670 0018 0446     		mov	r4, r0
 35671 001a 0D46     		mov	r5, r1
16862:Core/Src/bno055.c ****     {
16863:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16864:Core/Src/bno055.c ****     }
16865:Core/Src/bno055.c ****     else
16866:Core/Src/bno055.c ****     {
16867:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16868:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
ARM GAS  /tmp/ccWoU29M.s 			page 997


16869:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16870:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 35672              		.loc 1 16870 9 is_stmt 1 view .LVU9944
 35673              		.loc 1 16870 19 is_stmt 0 view .LVU9945
 35674 001c 0DF10600 		add	r0, sp, #6
 35675              	.LVL4380:
 35676              		.loc 1 16870 19 view .LVU9946
 35677 0020 FFF7FEFF 		bl	bno055_get_operation_mode
 35678              	.LVL4381:
16871:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 35679              		.loc 1 16871 9 is_stmt 1 view .LVU9947
 35680              		.loc 1 16871 12 is_stmt 0 view .LVU9948
 35681 0024 0646     		mov	r6, r0
 35682 0026 0028     		cmp	r0, #0
 35683 0028 40F08480 		bne	.L2497
16872:Core/Src/bno055.c ****         {
16873:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35684              		.loc 1 16873 13 is_stmt 1 view .LVU9949
 35685              		.loc 1 16873 32 is_stmt 0 view .LVU9950
 35686 002c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 35687              		.loc 1 16873 16 view .LVU9951
 35688 0030 1BB9     		cbnz	r3, .L2502
 35689              	.LVL4382:
 35690              	.L2493:
16874:Core/Src/bno055.c ****             {
16875:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16876:Core/Src/bno055.c ****             }
16877:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 35691              		.loc 1 16877 13 is_stmt 1 view .LVU9952
 35692              		.loc 1 16877 16 is_stmt 0 view .LVU9953
 35693 0032 46B1     		cbz	r6, .L2503
16878:Core/Src/bno055.c ****             {
16879:Core/Src/bno055.c ****                 /* Write page as one */
16880:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16881:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16882:Core/Src/bno055.c ****                 {
16883:Core/Src/bno055.c ****                     switch (channel_u8)
16884:Core/Src/bno055.c ****                     {
16885:Core/Src/bno055.c ****                         case BNO055_GYRO_ANY_MOTION_X_AXIS:
16886:Core/Src/bno055.c **** 
16887:Core/Src/bno055.c ****                             /* Write the gyro
16888:Core/Src/bno055.c ****                              * anymotion x enable*/
16889:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16890:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
16891:Core/Src/bno055.c ****                                                                       &data_u8r,
16892:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
16893:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
16894:Core/Src/bno055.c ****                             {
16895:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_X_A
16896:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16897:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
16898:Core/Src/bno055.c ****                                                                             &data_u8r,
16899:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
16900:Core/Src/bno055.c ****                             }
16901:Core/Src/bno055.c ****                             break;
16902:Core/Src/bno055.c ****                         case BNO055_GYRO_ANY_MOTION_Y_AXIS:
16903:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 998


16904:Core/Src/bno055.c ****                             /* Write the gyro
16905:Core/Src/bno055.c ****                              * anymotion y enable*/
16906:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16907:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
16908:Core/Src/bno055.c ****                                                                       &data_u8r,
16909:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
16910:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
16911:Core/Src/bno055.c ****                             {
16912:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_Y_A
16913:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16914:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
16915:Core/Src/bno055.c ****                                                                             &data_u8r,
16916:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
16917:Core/Src/bno055.c ****                             }
16918:Core/Src/bno055.c ****                             break;
16919:Core/Src/bno055.c ****                         case BNO055_GYRO_ANY_MOTION_Z_AXIS:
16920:Core/Src/bno055.c **** 
16921:Core/Src/bno055.c ****                             /* Write the gyro
16922:Core/Src/bno055.c ****                              * anymotion z enable*/
16923:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16924:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
16925:Core/Src/bno055.c ****                                                                       &data_u8r,
16926:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
16927:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
16928:Core/Src/bno055.c ****                             {
16929:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_Z_A
16930:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16931:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
16932:Core/Src/bno055.c ****                                                                             &data_u8r,
16933:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
16934:Core/Src/bno055.c ****                             }
16935:Core/Src/bno055.c ****                             break;
16936:Core/Src/bno055.c ****                         default:
16937:Core/Src/bno055.c ****                             com_rslt = BNO055_OUT_OF_RANGE;
16938:Core/Src/bno055.c ****                             break;
16939:Core/Src/bno055.c ****                     }
16940:Core/Src/bno055.c ****                 }
16941:Core/Src/bno055.c ****                 else
16942:Core/Src/bno055.c ****                 {
16943:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16944:Core/Src/bno055.c ****                 }
16945:Core/Src/bno055.c ****             }
16946:Core/Src/bno055.c ****             else
16947:Core/Src/bno055.c ****             {
16948:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 35694              		.loc 1 16948 26 view .LVU9954
 35695 0034 4FF0FF34 		mov	r4, #-1
 35696 0038 7EE0     		b	.L2492
 35697              	.LVL4383:
 35698              	.L2502:
16875:Core/Src/bno055.c ****             }
 35699              		.loc 1 16875 17 is_stmt 1 view .LVU9955
16875:Core/Src/bno055.c ****             }
 35700              		.loc 1 16875 28 is_stmt 0 view .LVU9956
 35701 003a FFF7FEFF 		bl	bno055_set_operation_mode
 35702              	.LVL4384:
16875:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccWoU29M.s 			page 999


 35703              		.loc 1 16875 25 view .LVU9957
 35704 003e 56FA80F6 		uxtab	r6, r6, r0
 35705 0042 76B2     		sxtb	r6, r6
 35706              	.LVL4385:
16875:Core/Src/bno055.c ****             }
 35707              		.loc 1 16875 25 view .LVU9958
 35708 0044 F5E7     		b	.L2493
 35709              	.L2503:
16880:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35710              		.loc 1 16880 17 is_stmt 1 view .LVU9959
16880:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35711              		.loc 1 16880 30 is_stmt 0 view .LVU9960
 35712 0046 0120     		movs	r0, #1
 35713 0048 FFF7FEFF 		bl	bno055_write_page_id
 35714              	.LVL4386:
16881:Core/Src/bno055.c ****                 {
 35715              		.loc 1 16881 17 is_stmt 1 view .LVU9961
16881:Core/Src/bno055.c ****                 {
 35716              		.loc 1 16881 20 is_stmt 0 view .LVU9962
 35717 004c 0028     		cmp	r0, #0
 35718 004e 79D1     		bne	.L2499
16883:Core/Src/bno055.c ****                     {
 35719              		.loc 1 16883 21 is_stmt 1 view .LVU9963
 35720 0050 012C     		cmp	r4, #1
 35721 0052 28D0     		beq	.L2494
 35722 0054 022C     		cmp	r4, #2
 35723 0056 4AD0     		beq	.L2495
 35724 0058 14B1     		cbz	r4, .L2504
 35725 005a 6FF00104 		mvn	r4, #1
 35726 005e 6BE0     		b	.L2492
 35727              	.L2504:
16889:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
 35728              		.loc 1 16889 29 view .LVU9964
16889:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
 35729              		.loc 1 16889 48 is_stmt 0 view .LVU9965
 35730 0060 3E4B     		ldr	r3, .L2506
 35731 0062 1868     		ldr	r0, [r3]
 35732              	.LVL4387:
16889:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
 35733              		.loc 1 16889 48 view .LVU9966
 35734 0064 0469     		ldr	r4, [r0, #16]
16889:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
 35735              		.loc 1 16889 40 view .LVU9967
 35736 0066 0123     		movs	r3, #1
 35737 0068 0DF10702 		add	r2, sp, #7
 35738 006c 1721     		movs	r1, #23
 35739 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35740 0070 A047     		blx	r4
 35741              	.LVL4388:
16893:Core/Src/bno055.c ****                             {
 35742              		.loc 1 16893 29 is_stmt 1 view .LVU9968
16893:Core/Src/bno055.c ****                             {
 35743              		.loc 1 16893 32 is_stmt 0 view .LVU9969
 35744 0072 0446     		mov	r4, r0
 35745 0074 0028     		cmp	r0, #0
 35746 0076 5FD1     		bne	.L2492
16895:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccWoU29M.s 			page 1000


 35747              		.loc 1 16895 33 is_stmt 1 view .LVU9970
16895:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35748              		.loc 1 16895 44 is_stmt 0 view .LVU9971
 35749 0078 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35750 007c 23F00103 		bic	r3, r3, #1
 35751 0080 5BB2     		sxtb	r3, r3
 35752 0082 05F00105 		and	r5, r5, #1
 35753 0086 2B43     		orrs	r3, r3, r5
16895:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35754              		.loc 1 16895 42 view .LVU9972
 35755 0088 8DF80730 		strb	r3, [sp, #7]
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35756              		.loc 1 16896 33 is_stmt 1 view .LVU9973
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35757              		.loc 1 16896 53 is_stmt 0 view .LVU9974
 35758 008c 334B     		ldr	r3, .L2506
 35759 008e 1868     		ldr	r0, [r3]
 35760              	.LVL4389:
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35761              		.loc 1 16896 53 view .LVU9975
 35762 0090 C568     		ldr	r5, [r0, #12]
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35763              		.loc 1 16896 45 view .LVU9976
 35764 0092 0123     		movs	r3, #1
 35765 0094 0DF10702 		add	r2, sp, #7
 35766 0098 1721     		movs	r1, #23
 35767 009a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35768 009c A847     		blx	r5
 35769              	.LVL4390:
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35770              		.loc 1 16896 42 view .LVU9977
 35771 009e 54FA80F4 		uxtab	r4, r4, r0
 35772 00a2 64B2     		sxtb	r4, r4
 35773              	.LVL4391:
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35774              		.loc 1 16896 42 view .LVU9978
 35775 00a4 48E0     		b	.L2492
 35776              	.LVL4392:
 35777              	.L2494:
16906:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
 35778              		.loc 1 16906 29 is_stmt 1 view .LVU9979
16906:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
 35779              		.loc 1 16906 48 is_stmt 0 view .LVU9980
 35780 00a6 2D4B     		ldr	r3, .L2506
 35781 00a8 1868     		ldr	r0, [r3]
 35782              	.LVL4393:
16906:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
 35783              		.loc 1 16906 48 view .LVU9981
 35784 00aa 0469     		ldr	r4, [r0, #16]
16906:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
 35785              		.loc 1 16906 40 view .LVU9982
 35786 00ac 0123     		movs	r3, #1
 35787 00ae 0DF10702 		add	r2, sp, #7
 35788 00b2 1721     		movs	r1, #23
 35789 00b4 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35790 00b6 A047     		blx	r4
 35791              	.LVL4394:
ARM GAS  /tmp/ccWoU29M.s 			page 1001


16910:Core/Src/bno055.c ****                             {
 35792              		.loc 1 16910 29 is_stmt 1 view .LVU9983
16910:Core/Src/bno055.c ****                             {
 35793              		.loc 1 16910 32 is_stmt 0 view .LVU9984
 35794 00b8 0446     		mov	r4, r0
 35795 00ba 0028     		cmp	r0, #0
 35796 00bc 3CD1     		bne	.L2492
16912:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35797              		.loc 1 16912 33 is_stmt 1 view .LVU9985
16912:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35798              		.loc 1 16912 44 is_stmt 0 view .LVU9986
 35799 00be 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35800 00c2 23F00203 		bic	r3, r3, #2
 35801 00c6 5AB2     		sxtb	r2, r3
 35802 00c8 6B00     		lsls	r3, r5, #1
 35803 00ca 03F00203 		and	r3, r3, #2
 35804 00ce 1343     		orrs	r3, r3, r2
16912:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35805              		.loc 1 16912 42 view .LVU9987
 35806 00d0 8DF80730 		strb	r3, [sp, #7]
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35807              		.loc 1 16913 33 is_stmt 1 view .LVU9988
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35808              		.loc 1 16913 53 is_stmt 0 view .LVU9989
 35809 00d4 214B     		ldr	r3, .L2506
 35810 00d6 1868     		ldr	r0, [r3]
 35811              	.LVL4395:
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35812              		.loc 1 16913 53 view .LVU9990
 35813 00d8 C568     		ldr	r5, [r0, #12]
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35814              		.loc 1 16913 45 view .LVU9991
 35815 00da 0123     		movs	r3, #1
 35816 00dc 0DF10702 		add	r2, sp, #7
 35817 00e0 1721     		movs	r1, #23
 35818 00e2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35819 00e4 A847     		blx	r5
 35820              	.LVL4396:
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35821              		.loc 1 16913 42 view .LVU9992
 35822 00e6 54FA80F4 		uxtab	r4, r4, r0
 35823 00ea 64B2     		sxtb	r4, r4
 35824              	.LVL4397:
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35825              		.loc 1 16913 42 view .LVU9993
 35826 00ec 24E0     		b	.L2492
 35827              	.LVL4398:
 35828              	.L2495:
16923:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
 35829              		.loc 1 16923 29 is_stmt 1 view .LVU9994
16923:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
 35830              		.loc 1 16923 48 is_stmt 0 view .LVU9995
 35831 00ee 1B4B     		ldr	r3, .L2506
 35832 00f0 1868     		ldr	r0, [r3]
 35833              	.LVL4399:
16923:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
 35834              		.loc 1 16923 48 view .LVU9996
ARM GAS  /tmp/ccWoU29M.s 			page 1002


 35835 00f2 0469     		ldr	r4, [r0, #16]
16923:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
 35836              		.loc 1 16923 40 view .LVU9997
 35837 00f4 0123     		movs	r3, #1
 35838 00f6 0DF10702 		add	r2, sp, #7
 35839 00fa 1721     		movs	r1, #23
 35840 00fc 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35841 00fe A047     		blx	r4
 35842              	.LVL4400:
16927:Core/Src/bno055.c ****                             {
 35843              		.loc 1 16927 29 is_stmt 1 view .LVU9998
16927:Core/Src/bno055.c ****                             {
 35844              		.loc 1 16927 32 is_stmt 0 view .LVU9999
 35845 0100 0446     		mov	r4, r0
 35846 0102 C8B9     		cbnz	r0, .L2492
16929:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35847              		.loc 1 16929 33 is_stmt 1 view .LVU10000
16929:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35848              		.loc 1 16929 44 is_stmt 0 view .LVU10001
 35849 0104 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35850 0108 23F00403 		bic	r3, r3, #4
 35851 010c 5AB2     		sxtb	r2, r3
 35852 010e AB00     		lsls	r3, r5, #2
 35853 0110 03F00403 		and	r3, r3, #4
 35854 0114 1343     		orrs	r3, r3, r2
16929:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35855              		.loc 1 16929 42 view .LVU10002
 35856 0116 8DF80730 		strb	r3, [sp, #7]
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35857              		.loc 1 16930 33 is_stmt 1 view .LVU10003
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35858              		.loc 1 16930 53 is_stmt 0 view .LVU10004
 35859 011a 104B     		ldr	r3, .L2506
 35860 011c 1868     		ldr	r0, [r3]
 35861              	.LVL4401:
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35862              		.loc 1 16930 53 view .LVU10005
 35863 011e C568     		ldr	r5, [r0, #12]
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35864              		.loc 1 16930 45 view .LVU10006
 35865 0120 0123     		movs	r3, #1
 35866 0122 0DF10702 		add	r2, sp, #7
 35867 0126 1721     		movs	r1, #23
 35868 0128 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35869 012a A847     		blx	r5
 35870              	.LVL4402:
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35871              		.loc 1 16930 42 view .LVU10007
 35872 012c 54FA80F4 		uxtab	r4, r4, r0
 35873 0130 64B2     		sxtb	r4, r4
 35874              	.LVL4403:
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35875              		.loc 1 16930 42 view .LVU10008
 35876 0132 01E0     		b	.L2492
 35877              	.LVL4404:
 35878              	.L2497:
16949:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccWoU29M.s 			page 1003


16950:Core/Src/bno055.c ****         }
16951:Core/Src/bno055.c ****         else
16952:Core/Src/bno055.c ****         {
16953:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 35879              		.loc 1 16953 22 view .LVU10009
 35880 0134 4FF0FF34 		mov	r4, #-1
 35881              	.LVL4405:
 35882              	.L2492:
16954:Core/Src/bno055.c ****         }
16955:Core/Src/bno055.c ****     }
16956:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35883              		.loc 1 16956 5 is_stmt 1 view .LVU10010
 35884              		.loc 1 16956 24 is_stmt 0 view .LVU10011
 35885 0138 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 35886              		.loc 1 16956 8 view .LVU10012
 35887 013c 28B9     		cbnz	r0, .L2505
 35888              	.LVL4406:
 35889              	.L2491:
16957:Core/Src/bno055.c ****     {
16958:Core/Src/bno055.c ****         /* set the operation mode of
16959:Core/Src/bno055.c ****          * previous operation mode*/
16960:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16961:Core/Src/bno055.c ****     }
16962:Core/Src/bno055.c **** 
16963:Core/Src/bno055.c ****     return com_rslt;
16964:Core/Src/bno055.c **** }
 35890              		.loc 1 16964 1 view .LVU10013
 35891 013e 2046     		mov	r0, r4
 35892 0140 02B0     		add	sp, sp, #8
 35893              	.LCFI971:
 35894              		.cfi_remember_state
 35895              		.cfi_def_cfa_offset 16
 35896              		@ sp needed
 35897 0142 70BD     		pop	{r4, r5, r6, pc}
 35898              	.LVL4407:
 35899              	.L2499:
 35900              	.LCFI972:
 35901              		.cfi_restore_state
16943:Core/Src/bno055.c ****                 }
 35902              		.loc 1 16943 30 view .LVU10014
 35903 0144 4FF0FF34 		mov	r4, #-1
 35904 0148 F6E7     		b	.L2492
 35905              	.LVL4408:
 35906              	.L2505:
16960:Core/Src/bno055.c ****     }
 35907              		.loc 1 16960 9 is_stmt 1 view .LVU10015
16960:Core/Src/bno055.c ****     }
 35908              		.loc 1 16960 21 is_stmt 0 view .LVU10016
 35909 014a FFF7FEFF 		bl	bno055_set_operation_mode
 35910              	.LVL4409:
16960:Core/Src/bno055.c ****     }
 35911              		.loc 1 16960 18 view .LVU10017
 35912 014e 54FA80F4 		uxtab	r4, r4, r0
 35913              	.LVL4410:
16960:Core/Src/bno055.c ****     }
 35914              		.loc 1 16960 18 view .LVU10018
 35915 0152 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccWoU29M.s 			page 1004


 35916              	.LVL4411:
16960:Core/Src/bno055.c ****     }
 35917              		.loc 1 16960 18 view .LVU10019
 35918 0154 F3E7     		b	.L2491
 35919              	.LVL4412:
 35920              	.L2496:
16863:Core/Src/bno055.c ****     }
 35921              		.loc 1 16863 16 view .LVU10020
 35922 0156 6FF07E04 		mvn	r4, #126
 35923 015a F0E7     		b	.L2491
 35924              	.L2507:
 35925              		.align	2
 35926              	.L2506:
 35927 015c 00000000 		.word	.LANCHOR0
 35928              		.cfi_endproc
 35929              	.LFE244:
 35931              		.section	.text.bno055_get_gyro_highrate_axis_enable,"ax",%progbits
 35932              		.align	1
 35933              		.global	bno055_get_gyro_highrate_axis_enable
 35934              		.syntax unified
 35935              		.thumb
 35936              		.thumb_func
 35937              		.fpu fpv4-sp-d16
 35939              	bno055_get_gyro_highrate_axis_enable:
 35940              	.LVL4413:
 35941              	.LFB245:
16965:Core/Src/bno055.c **** 
16966:Core/Src/bno055.c **** /*!
16967:Core/Src/bno055.c ****  *  @brief This API used to read the gyro highrate enable
16968:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 3 to 5
16969:Core/Src/bno055.c ****  *
16970:Core/Src/bno055.c ****  *  @param data_u8 : The value of gyro highrate enable
16971:Core/Src/bno055.c ****  *      data_u8     | result
16972:Core/Src/bno055.c ****  *  ----------------  |-------------
16973:Core/Src/bno055.c ****  *      0x01          | BNO055_BIT_ENABLE
16974:Core/Src/bno055.c ****  *      0x00          | BNO055_BIT_DISABLE
16975:Core/Src/bno055.c ****  *  @param channel_u8 : The value of gyro highrate axis selection
16976:Core/Src/bno055.c ****  *               channel_u8         | value
16977:Core/Src/bno055.c ****  *     ------------------------       | ----------
16978:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_X_AXIS    |   0
16979:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_Y_AXIS    |   1
16980:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_Z_AXIS    |   2
16981:Core/Src/bno055.c ****  *
16982:Core/Src/bno055.c ****  *
16983:Core/Src/bno055.c ****  *  @return results of bus communication function
16984:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16985:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16986:Core/Src/bno055.c ****  *
16987:Core/Src/bno055.c ****  *
16988:Core/Src/bno055.c ****  */
16989:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_axis_enable(u8 channel_u8, u8 *data_u8)
16990:Core/Src/bno055.c **** {
 35942              		.loc 1 16990 1 is_stmt 1 view -0
 35943              		.cfi_startproc
 35944              		@ args = 0, pretend = 0, frame = 8
 35945              		@ frame_needed = 0, uses_anonymous_args = 0
 35946              		.loc 1 16990 1 is_stmt 0 view .LVU10022
ARM GAS  /tmp/ccWoU29M.s 			page 1005


 35947 0000 30B5     		push	{r4, r5, lr}
 35948              	.LCFI973:
 35949              		.cfi_def_cfa_offset 12
 35950              		.cfi_offset 4, -12
 35951              		.cfi_offset 5, -8
 35952              		.cfi_offset 14, -4
 35953 0002 83B0     		sub	sp, sp, #12
 35954              	.LCFI974:
 35955              		.cfi_def_cfa_offset 24
16991:Core/Src/bno055.c ****     /* Variable used to return value of
16992:Core/Src/bno055.c ****      * communication routine*/
16993:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35956              		.loc 1 16993 5 is_stmt 1 view .LVU10023
 35957              	.LVL4414:
16994:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 35958              		.loc 1 16994 5 view .LVU10024
 35959              		.loc 1 16994 8 is_stmt 0 view .LVU10025
 35960 0004 0023     		movs	r3, #0
 35961 0006 8DF80730 		strb	r3, [sp, #7]
16995:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35962              		.loc 1 16995 5 is_stmt 1 view .LVU10026
 35963              	.LVL4415:
16996:Core/Src/bno055.c **** 
16997:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16998:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35964              		.loc 1 16998 5 view .LVU10027
 35965              		.loc 1 16998 18 is_stmt 0 view .LVU10028
 35966 000a 284B     		ldr	r3, .L2520
 35967 000c 1B68     		ldr	r3, [r3]
 35968              		.loc 1 16998 8 view .LVU10029
 35969 000e 002B     		cmp	r3, #0
 35970 0010 45D0     		beq	.L2514
 35971 0012 0446     		mov	r4, r0
 35972 0014 0D46     		mov	r5, r1
16999:Core/Src/bno055.c ****     {
17000:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17001:Core/Src/bno055.c ****     }
17002:Core/Src/bno055.c ****     else
17003:Core/Src/bno055.c ****     {
17004:Core/Src/bno055.c ****         /*condition check for page, gyro highrate enable is
17005:Core/Src/bno055.c ****          * available in the page one*/
17006:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 35973              		.loc 1 17006 9 is_stmt 1 view .LVU10030
 35974              		.loc 1 17006 21 is_stmt 0 view .LVU10031
 35975 0016 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35976              		.loc 1 17006 12 view .LVU10032
 35977 0018 012B     		cmp	r3, #1
 35978 001a 0DD1     		bne	.L2518
 35979              	.LVL4416:
 35980              	.L2510:
17007:Core/Src/bno055.c ****         {
17008:Core/Src/bno055.c ****             /* Write page as one */
17009:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17010:Core/Src/bno055.c ****         }
17011:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 35981              		.loc 1 17011 53 discriminator 1 view .LVU10033
 35982 001c 234B     		ldr	r3, .L2520
ARM GAS  /tmp/ccWoU29M.s 			page 1006


 35983 001e 1B68     		ldr	r3, [r3]
 35984 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35985              		.loc 1 17011 41 discriminator 1 view .LVU10034
 35986 0022 012B     		cmp	r3, #1
 35987 0024 3ED1     		bne	.L2515
 35988              	.L2511:
17012:Core/Src/bno055.c ****         {
17013:Core/Src/bno055.c ****             switch (channel_u8)
 35989              		.loc 1 17013 13 is_stmt 1 view .LVU10035
 35990 0026 012C     		cmp	r4, #1
 35991 0028 1BD0     		beq	.L2512
 35992 002a 022C     		cmp	r4, #2
 35993 002c 28D0     		beq	.L2513
 35994 002e 4CB1     		cbz	r4, .L2519
 35995 0030 6FF00100 		mvn	r0, #1
 35996              	.LVL4417:
 35997              	.L2509:
17014:Core/Src/bno055.c ****             {
17015:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_X_AXIS:
17016:Core/Src/bno055.c **** 
17017:Core/Src/bno055.c ****                     /* Read the gyro highrate x enable */
17018:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17019:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_AXIS_REG,
17020:Core/Src/bno055.c ****                                                               &data_u8r,
17021:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17022:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_AXIS);
17023:Core/Src/bno055.c ****                     break;
17024:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_Y_AXIS:
17025:Core/Src/bno055.c **** 
17026:Core/Src/bno055.c ****                     /* Read the gyro highrate y enable */
17027:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17028:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_AXIS_REG,
17029:Core/Src/bno055.c ****                                                               &data_u8r,
17030:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17031:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_AXIS);
17032:Core/Src/bno055.c ****                     break;
17033:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_Z_AXIS:
17034:Core/Src/bno055.c **** 
17035:Core/Src/bno055.c ****                     /* Read the gyro highrate z enable */
17036:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17037:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_AXIS_REG,
17038:Core/Src/bno055.c ****                                                               &data_u8r,
17039:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17040:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_AXIS);
17041:Core/Src/bno055.c ****                     break;
17042:Core/Src/bno055.c ****                 default:
17043:Core/Src/bno055.c ****                     com_rslt = BNO055_OUT_OF_RANGE;
17044:Core/Src/bno055.c ****                     break;
17045:Core/Src/bno055.c ****             }
17046:Core/Src/bno055.c ****         }
17047:Core/Src/bno055.c ****         else
17048:Core/Src/bno055.c ****         {
17049:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17050:Core/Src/bno055.c ****         }
17051:Core/Src/bno055.c ****     }
17052:Core/Src/bno055.c **** 
17053:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/ccWoU29M.s 			page 1007


17054:Core/Src/bno055.c **** }
 35998              		.loc 1 17054 1 is_stmt 0 view .LVU10036
 35999 0034 03B0     		add	sp, sp, #12
 36000              	.LCFI975:
 36001              		.cfi_remember_state
 36002              		.cfi_def_cfa_offset 12
 36003              		@ sp needed
 36004 0036 30BD     		pop	{r4, r5, pc}
 36005              	.LVL4418:
 36006              	.L2518:
 36007              	.LCFI976:
 36008              		.cfi_restore_state
17009:Core/Src/bno055.c ****         }
 36009              		.loc 1 17009 13 is_stmt 1 view .LVU10037
17009:Core/Src/bno055.c ****         }
 36010              		.loc 1 17009 23 is_stmt 0 view .LVU10038
 36011 0038 0120     		movs	r0, #1
 36012              	.LVL4419:
17009:Core/Src/bno055.c ****         }
 36013              		.loc 1 17009 23 view .LVU10039
 36014 003a FFF7FEFF 		bl	bno055_write_page_id
 36015              	.LVL4420:
17011:Core/Src/bno055.c ****         {
 36016              		.loc 1 17011 9 is_stmt 1 view .LVU10040
17011:Core/Src/bno055.c ****         {
 36017              		.loc 1 17011 12 is_stmt 0 view .LVU10041
 36018 003e 0028     		cmp	r0, #0
 36019 0040 F1D0     		beq	.L2511
 36020 0042 EBE7     		b	.L2510
 36021              	.LVL4421:
 36022              	.L2519:
17018:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_AXIS_REG,
 36023              		.loc 1 17018 21 is_stmt 1 view .LVU10042
17018:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_AXIS_REG,
 36024              		.loc 1 17018 40 is_stmt 0 view .LVU10043
 36025 0044 194B     		ldr	r3, .L2520
 36026 0046 1868     		ldr	r0, [r3]
 36027 0048 0469     		ldr	r4, [r0, #16]
17018:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_AXIS_REG,
 36028              		.loc 1 17018 32 view .LVU10044
 36029 004a 0123     		movs	r3, #1
 36030 004c 0DF10702 		add	r2, sp, #7
 36031 0050 1721     		movs	r1, #23
 36032 0052 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36033 0054 A047     		blx	r4
 36034              	.LVL4422:
17022:Core/Src/bno055.c ****                     break;
 36035              		.loc 1 17022 21 is_stmt 1 view .LVU10045
17022:Core/Src/bno055.c ****                     break;
 36036              		.loc 1 17022 32 is_stmt 0 view .LVU10046
 36037 0056 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36038 005a C3F3C003 		ubfx	r3, r3, #3, #1
17022:Core/Src/bno055.c ****                     break;
 36039              		.loc 1 17022 30 view .LVU10047
 36040 005e 2B70     		strb	r3, [r5]
17023:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_Y_AXIS:
 36041              		.loc 1 17023 21 is_stmt 1 view .LVU10048
ARM GAS  /tmp/ccWoU29M.s 			page 1008


 36042 0060 E8E7     		b	.L2509
 36043              	.LVL4423:
 36044              	.L2512:
17027:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_AXIS_REG,
 36045              		.loc 1 17027 21 view .LVU10049
17027:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_AXIS_REG,
 36046              		.loc 1 17027 40 is_stmt 0 view .LVU10050
 36047 0062 124B     		ldr	r3, .L2520
 36048 0064 1868     		ldr	r0, [r3]
 36049 0066 0469     		ldr	r4, [r0, #16]
17027:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_AXIS_REG,
 36050              		.loc 1 17027 32 view .LVU10051
 36051 0068 0123     		movs	r3, #1
 36052 006a 0DF10702 		add	r2, sp, #7
 36053 006e 1721     		movs	r1, #23
 36054 0070 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36055 0072 A047     		blx	r4
 36056              	.LVL4424:
17031:Core/Src/bno055.c ****                     break;
 36057              		.loc 1 17031 21 is_stmt 1 view .LVU10052
17031:Core/Src/bno055.c ****                     break;
 36058              		.loc 1 17031 32 is_stmt 0 view .LVU10053
 36059 0074 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36060 0078 C3F30013 		ubfx	r3, r3, #4, #1
17031:Core/Src/bno055.c ****                     break;
 36061              		.loc 1 17031 30 view .LVU10054
 36062 007c 2B70     		strb	r3, [r5]
17032:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_Z_AXIS:
 36063              		.loc 1 17032 21 is_stmt 1 view .LVU10055
 36064 007e D9E7     		b	.L2509
 36065              	.LVL4425:
 36066              	.L2513:
17036:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_AXIS_REG,
 36067              		.loc 1 17036 21 view .LVU10056
17036:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_AXIS_REG,
 36068              		.loc 1 17036 40 is_stmt 0 view .LVU10057
 36069 0080 0A4B     		ldr	r3, .L2520
 36070 0082 1868     		ldr	r0, [r3]
 36071 0084 0469     		ldr	r4, [r0, #16]
17036:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_AXIS_REG,
 36072              		.loc 1 17036 32 view .LVU10058
 36073 0086 0123     		movs	r3, #1
 36074 0088 0DF10702 		add	r2, sp, #7
 36075 008c 1721     		movs	r1, #23
 36076 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36077 0090 A047     		blx	r4
 36078              	.LVL4426:
17040:Core/Src/bno055.c ****                     break;
 36079              		.loc 1 17040 21 is_stmt 1 view .LVU10059
17040:Core/Src/bno055.c ****                     break;
 36080              		.loc 1 17040 32 is_stmt 0 view .LVU10060
 36081 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36082 0096 C3F34013 		ubfx	r3, r3, #5, #1
17040:Core/Src/bno055.c ****                     break;
 36083              		.loc 1 17040 30 view .LVU10061
 36084 009a 2B70     		strb	r3, [r5]
17041:Core/Src/bno055.c ****                 default:
ARM GAS  /tmp/ccWoU29M.s 			page 1009


 36085              		.loc 1 17041 21 is_stmt 1 view .LVU10062
 36086 009c CAE7     		b	.L2509
 36087              	.LVL4427:
 36088              	.L2514:
17000:Core/Src/bno055.c ****     }
 36089              		.loc 1 17000 16 is_stmt 0 view .LVU10063
 36090 009e 6FF07E00 		mvn	r0, #126
 36091              	.LVL4428:
17000:Core/Src/bno055.c ****     }
 36092              		.loc 1 17000 16 view .LVU10064
 36093 00a2 C7E7     		b	.L2509
 36094              	.LVL4429:
 36095              	.L2515:
17049:Core/Src/bno055.c ****         }
 36096              		.loc 1 17049 22 view .LVU10065
 36097 00a4 4FF0FF30 		mov	r0, #-1
 36098 00a8 C4E7     		b	.L2509
 36099              	.L2521:
 36100 00aa 00BF     		.align	2
 36101              	.L2520:
 36102 00ac 00000000 		.word	.LANCHOR0
 36103              		.cfi_endproc
 36104              	.LFE245:
 36106              		.section	.text.bno055_set_gyro_highrate_axis_enable,"ax",%progbits
 36107              		.align	1
 36108              		.global	bno055_set_gyro_highrate_axis_enable
 36109              		.syntax unified
 36110              		.thumb
 36111              		.thumb_func
 36112              		.fpu fpv4-sp-d16
 36114              	bno055_set_gyro_highrate_axis_enable:
 36115              	.LVL4430:
 36116              	.LFB246:
17055:Core/Src/bno055.c **** 
17056:Core/Src/bno055.c **** /*!
17057:Core/Src/bno055.c ****  *  @brief This API used to write the gyro highrate enable
17058:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 3 to 5
17059:Core/Src/bno055.c ****  *
17060:Core/Src/bno055.c ****  *  @param data_u8 : The value of gyro highrate enable
17061:Core/Src/bno055.c ****  *      data_u8     | result
17062:Core/Src/bno055.c ****  *  ----------------  |-------------
17063:Core/Src/bno055.c ****  *      0x01          | BNO055_BIT_ENABLE
17064:Core/Src/bno055.c ****  *      0x00          | BNO055_BIT_DISABLE
17065:Core/Src/bno055.c ****  *  @param channel_u8 : The value of gyro highrate axis selection
17066:Core/Src/bno055.c ****  *               channel_u8         | value
17067:Core/Src/bno055.c ****  *     ------------------------       | ----------
17068:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_X_AXIS    |   0
17069:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_Y_AXIS    |   1
17070:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_Z_AXIS    |   2
17071:Core/Src/bno055.c ****  *
17072:Core/Src/bno055.c ****  *  @return results of bus communication function
17073:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17074:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17075:Core/Src/bno055.c ****  *
17076:Core/Src/bno055.c ****  *
17077:Core/Src/bno055.c ****  */
17078:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_axis_enable(u8 channel_u8, u8 data_u8)
ARM GAS  /tmp/ccWoU29M.s 			page 1010


17079:Core/Src/bno055.c **** {
 36117              		.loc 1 17079 1 is_stmt 1 view -0
 36118              		.cfi_startproc
 36119              		@ args = 0, pretend = 0, frame = 8
 36120              		@ frame_needed = 0, uses_anonymous_args = 0
 36121              		.loc 1 17079 1 is_stmt 0 view .LVU10067
 36122 0000 70B5     		push	{r4, r5, r6, lr}
 36123              	.LCFI977:
 36124              		.cfi_def_cfa_offset 16
 36125              		.cfi_offset 4, -16
 36126              		.cfi_offset 5, -12
 36127              		.cfi_offset 6, -8
 36128              		.cfi_offset 14, -4
 36129 0002 82B0     		sub	sp, sp, #8
 36130              	.LCFI978:
 36131              		.cfi_def_cfa_offset 24
17080:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36132              		.loc 1 17080 5 is_stmt 1 view .LVU10068
 36133              	.LVL4431:
17081:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36134              		.loc 1 17081 5 view .LVU10069
 36135              		.loc 1 17081 8 is_stmt 0 view .LVU10070
 36136 0004 0023     		movs	r3, #0
 36137 0006 8DF80730 		strb	r3, [sp, #7]
17082:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36138              		.loc 1 17082 5 is_stmt 1 view .LVU10071
 36139              	.LVL4432:
17083:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 36140              		.loc 1 17083 5 view .LVU10072
 36141              		.loc 1 17083 8 is_stmt 0 view .LVU10073
 36142 000a 8DF80630 		strb	r3, [sp, #6]
17084:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 36143              		.loc 1 17084 5 is_stmt 1 view .LVU10074
 36144              	.LVL4433:
17085:Core/Src/bno055.c **** 
17086:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17087:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36145              		.loc 1 17087 5 view .LVU10075
 36146              		.loc 1 17087 18 is_stmt 0 view .LVU10076
 36147 000e 544B     		ldr	r3, .L2538
 36148 0010 1B68     		ldr	r3, [r3]
 36149              		.loc 1 17087 8 view .LVU10077
 36150 0012 002B     		cmp	r3, #0
 36151 0014 00F0A080 		beq	.L2528
 36152 0018 0446     		mov	r4, r0
 36153 001a 0D46     		mov	r5, r1
17088:Core/Src/bno055.c ****     {
17089:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17090:Core/Src/bno055.c ****     }
17091:Core/Src/bno055.c ****     else
17092:Core/Src/bno055.c ****     {
17093:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17094:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17095:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17096:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 36154              		.loc 1 17096 9 is_stmt 1 view .LVU10078
 36155              		.loc 1 17096 19 is_stmt 0 view .LVU10079
ARM GAS  /tmp/ccWoU29M.s 			page 1011


 36156 001c 0DF10600 		add	r0, sp, #6
 36157              	.LVL4434:
 36158              		.loc 1 17096 19 view .LVU10080
 36159 0020 FFF7FEFF 		bl	bno055_get_operation_mode
 36160              	.LVL4435:
17097:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 36161              		.loc 1 17097 9 is_stmt 1 view .LVU10081
 36162              		.loc 1 17097 12 is_stmt 0 view .LVU10082
 36163 0024 0646     		mov	r6, r0
 36164 0026 0028     		cmp	r0, #0
 36165 0028 40F08580 		bne	.L2529
17098:Core/Src/bno055.c ****         {
17099:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36166              		.loc 1 17099 13 is_stmt 1 view .LVU10083
 36167              		.loc 1 17099 32 is_stmt 0 view .LVU10084
 36168 002c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 36169              		.loc 1 17099 16 view .LVU10085
 36170 0030 1BB9     		cbnz	r3, .L2534
 36171              	.LVL4436:
 36172              	.L2525:
17100:Core/Src/bno055.c ****             {
17101:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17102:Core/Src/bno055.c ****             }
17103:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 36173              		.loc 1 17103 13 is_stmt 1 view .LVU10086
 36174              		.loc 1 17103 16 is_stmt 0 view .LVU10087
 36175 0032 46B1     		cbz	r6, .L2535
17104:Core/Src/bno055.c ****             {
17105:Core/Src/bno055.c ****                 /* Write page as one */
17106:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17107:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17108:Core/Src/bno055.c ****                 {
17109:Core/Src/bno055.c ****                     switch (channel_u8)
17110:Core/Src/bno055.c ****                     {
17111:Core/Src/bno055.c ****                         case BNO055_GYRO_HIGHRATE_X_AXIS:
17112:Core/Src/bno055.c **** 
17113:Core/Src/bno055.c ****                             /* Write the value of
17114:Core/Src/bno055.c ****                              * gyro highrate x enable*/
17115:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17116:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
17117:Core/Src/bno055.c ****                                                                       &data_u8r,
17118:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
17119:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
17120:Core/Src/bno055.c ****                             {
17121:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_AXI
17122:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17123:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
17124:Core/Src/bno055.c ****                                                                             &data_u8r,
17125:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
17126:Core/Src/bno055.c ****                             }
17127:Core/Src/bno055.c ****                             break;
17128:Core/Src/bno055.c ****                         case BNO055_GYRO_HIGHRATE_Y_AXIS:
17129:Core/Src/bno055.c **** 
17130:Core/Src/bno055.c ****                             /* Write the value of
17131:Core/Src/bno055.c ****                              * gyro highrate y enable*/
17132:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17133:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
ARM GAS  /tmp/ccWoU29M.s 			page 1012


17134:Core/Src/bno055.c ****                                                                       &data_u8r,
17135:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
17136:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
17137:Core/Src/bno055.c ****                             {
17138:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_AXI
17139:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17140:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
17141:Core/Src/bno055.c ****                                                                             &data_u8r,
17142:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
17143:Core/Src/bno055.c ****                             }
17144:Core/Src/bno055.c ****                             break;
17145:Core/Src/bno055.c ****                         case BNO055_GYRO_HIGHRATE_Z_AXIS:
17146:Core/Src/bno055.c **** 
17147:Core/Src/bno055.c ****                             /* Write the value of
17148:Core/Src/bno055.c ****                              * gyro highrate z enable*/
17149:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17150:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
17151:Core/Src/bno055.c ****                                                                       &data_u8r,
17152:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
17153:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
17154:Core/Src/bno055.c ****                             {
17155:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_AXI
17156:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17157:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
17158:Core/Src/bno055.c ****                                                                             &data_u8r,
17159:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
17160:Core/Src/bno055.c ****                             }
17161:Core/Src/bno055.c ****                             break;
17162:Core/Src/bno055.c ****                         default:
17163:Core/Src/bno055.c ****                             com_rslt = BNO055_OUT_OF_RANGE;
17164:Core/Src/bno055.c ****                             break;
17165:Core/Src/bno055.c ****                     }
17166:Core/Src/bno055.c ****                 }
17167:Core/Src/bno055.c ****                 else
17168:Core/Src/bno055.c ****                 {
17169:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17170:Core/Src/bno055.c ****                 }
17171:Core/Src/bno055.c ****             }
17172:Core/Src/bno055.c ****             else
17173:Core/Src/bno055.c ****             {
17174:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 36176              		.loc 1 17174 26 view .LVU10088
 36177 0034 4FF0FF34 		mov	r4, #-1
 36178 0038 7FE0     		b	.L2524
 36179              	.LVL4437:
 36180              	.L2534:
17101:Core/Src/bno055.c ****             }
 36181              		.loc 1 17101 17 is_stmt 1 view .LVU10089
17101:Core/Src/bno055.c ****             }
 36182              		.loc 1 17101 28 is_stmt 0 view .LVU10090
 36183 003a FFF7FEFF 		bl	bno055_set_operation_mode
 36184              	.LVL4438:
17101:Core/Src/bno055.c ****             }
 36185              		.loc 1 17101 25 view .LVU10091
 36186 003e 56FA80F6 		uxtab	r6, r6, r0
 36187 0042 76B2     		sxtb	r6, r6
 36188              	.LVL4439:
ARM GAS  /tmp/ccWoU29M.s 			page 1013


17101:Core/Src/bno055.c ****             }
 36189              		.loc 1 17101 25 view .LVU10092
 36190 0044 F5E7     		b	.L2525
 36191              	.L2535:
17106:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36192              		.loc 1 17106 17 is_stmt 1 view .LVU10093
17106:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36193              		.loc 1 17106 30 is_stmt 0 view .LVU10094
 36194 0046 0120     		movs	r0, #1
 36195 0048 FFF7FEFF 		bl	bno055_write_page_id
 36196              	.LVL4440:
17107:Core/Src/bno055.c ****                 {
 36197              		.loc 1 17107 17 is_stmt 1 view .LVU10095
17107:Core/Src/bno055.c ****                 {
 36198              		.loc 1 17107 20 is_stmt 0 view .LVU10096
 36199 004c 0028     		cmp	r0, #0
 36200 004e 7AD1     		bne	.L2531
17109:Core/Src/bno055.c ****                     {
 36201              		.loc 1 17109 21 is_stmt 1 view .LVU10097
 36202 0050 012C     		cmp	r4, #1
 36203 0052 29D0     		beq	.L2526
 36204 0054 022C     		cmp	r4, #2
 36205 0056 4BD0     		beq	.L2527
 36206 0058 14B1     		cbz	r4, .L2536
 36207 005a 6FF00104 		mvn	r4, #1
 36208 005e 6CE0     		b	.L2524
 36209              	.L2536:
17115:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
 36210              		.loc 1 17115 29 view .LVU10098
17115:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
 36211              		.loc 1 17115 48 is_stmt 0 view .LVU10099
 36212 0060 3F4B     		ldr	r3, .L2538
 36213 0062 1868     		ldr	r0, [r3]
 36214              	.LVL4441:
17115:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
 36215              		.loc 1 17115 48 view .LVU10100
 36216 0064 0469     		ldr	r4, [r0, #16]
17115:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
 36217              		.loc 1 17115 40 view .LVU10101
 36218 0066 0123     		movs	r3, #1
 36219 0068 0DF10702 		add	r2, sp, #7
 36220 006c 1721     		movs	r1, #23
 36221 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36222 0070 A047     		blx	r4
 36223              	.LVL4442:
17119:Core/Src/bno055.c ****                             {
 36224              		.loc 1 17119 29 is_stmt 1 view .LVU10102
17119:Core/Src/bno055.c ****                             {
 36225              		.loc 1 17119 32 is_stmt 0 view .LVU10103
 36226 0072 0446     		mov	r4, r0
 36227 0074 0028     		cmp	r0, #0
 36228 0076 60D1     		bne	.L2524
17121:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36229              		.loc 1 17121 33 is_stmt 1 view .LVU10104
17121:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36230              		.loc 1 17121 44 is_stmt 0 view .LVU10105
 36231 0078 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 1014


 36232 007c 23F00803 		bic	r3, r3, #8
 36233 0080 5AB2     		sxtb	r2, r3
 36234 0082 EB00     		lsls	r3, r5, #3
 36235 0084 03F00803 		and	r3, r3, #8
 36236 0088 1343     		orrs	r3, r3, r2
17121:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36237              		.loc 1 17121 42 view .LVU10106
 36238 008a 8DF80730 		strb	r3, [sp, #7]
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 36239              		.loc 1 17122 33 is_stmt 1 view .LVU10107
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 36240              		.loc 1 17122 53 is_stmt 0 view .LVU10108
 36241 008e 344B     		ldr	r3, .L2538
 36242 0090 1868     		ldr	r0, [r3]
 36243              	.LVL4443:
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 36244              		.loc 1 17122 53 view .LVU10109
 36245 0092 C568     		ldr	r5, [r0, #12]
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 36246              		.loc 1 17122 45 view .LVU10110
 36247 0094 0123     		movs	r3, #1
 36248 0096 0DF10702 		add	r2, sp, #7
 36249 009a 1721     		movs	r1, #23
 36250 009c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36251 009e A847     		blx	r5
 36252              	.LVL4444:
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 36253              		.loc 1 17122 42 view .LVU10111
 36254 00a0 54FA80F4 		uxtab	r4, r4, r0
 36255 00a4 64B2     		sxtb	r4, r4
 36256              	.LVL4445:
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 36257              		.loc 1 17122 42 view .LVU10112
 36258 00a6 48E0     		b	.L2524
 36259              	.LVL4446:
 36260              	.L2526:
17132:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
 36261              		.loc 1 17132 29 is_stmt 1 view .LVU10113
17132:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
 36262              		.loc 1 17132 48 is_stmt 0 view .LVU10114
 36263 00a8 2D4B     		ldr	r3, .L2538
 36264 00aa 1868     		ldr	r0, [r3]
 36265              	.LVL4447:
17132:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
 36266              		.loc 1 17132 48 view .LVU10115
 36267 00ac 0469     		ldr	r4, [r0, #16]
17132:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
 36268              		.loc 1 17132 40 view .LVU10116
 36269 00ae 0123     		movs	r3, #1
 36270 00b0 0DF10702 		add	r2, sp, #7
 36271 00b4 1721     		movs	r1, #23
 36272 00b6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36273 00b8 A047     		blx	r4
 36274              	.LVL4448:
17136:Core/Src/bno055.c ****                             {
 36275              		.loc 1 17136 29 is_stmt 1 view .LVU10117
17136:Core/Src/bno055.c ****                             {
ARM GAS  /tmp/ccWoU29M.s 			page 1015


 36276              		.loc 1 17136 32 is_stmt 0 view .LVU10118
 36277 00ba 0446     		mov	r4, r0
 36278 00bc 0028     		cmp	r0, #0
 36279 00be 3CD1     		bne	.L2524
17138:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36280              		.loc 1 17138 33 is_stmt 1 view .LVU10119
17138:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36281              		.loc 1 17138 44 is_stmt 0 view .LVU10120
 36282 00c0 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36283 00c4 23F01003 		bic	r3, r3, #16
 36284 00c8 5AB2     		sxtb	r2, r3
 36285 00ca 2B01     		lsls	r3, r5, #4
 36286 00cc 03F01003 		and	r3, r3, #16
 36287 00d0 1343     		orrs	r3, r3, r2
17138:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36288              		.loc 1 17138 42 view .LVU10121
 36289 00d2 8DF80730 		strb	r3, [sp, #7]
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 36290              		.loc 1 17139 33 is_stmt 1 view .LVU10122
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 36291              		.loc 1 17139 53 is_stmt 0 view .LVU10123
 36292 00d6 224B     		ldr	r3, .L2538
 36293 00d8 1868     		ldr	r0, [r3]
 36294              	.LVL4449:
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 36295              		.loc 1 17139 53 view .LVU10124
 36296 00da C568     		ldr	r5, [r0, #12]
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 36297              		.loc 1 17139 45 view .LVU10125
 36298 00dc 0123     		movs	r3, #1
 36299 00de 0DF10702 		add	r2, sp, #7
 36300 00e2 1721     		movs	r1, #23
 36301 00e4 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36302 00e6 A847     		blx	r5
 36303              	.LVL4450:
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 36304              		.loc 1 17139 42 view .LVU10126
 36305 00e8 54FA80F4 		uxtab	r4, r4, r0
 36306 00ec 64B2     		sxtb	r4, r4
 36307              	.LVL4451:
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 36308              		.loc 1 17139 42 view .LVU10127
 36309 00ee 24E0     		b	.L2524
 36310              	.LVL4452:
 36311              	.L2527:
17149:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
 36312              		.loc 1 17149 29 is_stmt 1 view .LVU10128
17149:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
 36313              		.loc 1 17149 48 is_stmt 0 view .LVU10129
 36314 00f0 1B4B     		ldr	r3, .L2538
 36315 00f2 1868     		ldr	r0, [r3]
 36316              	.LVL4453:
17149:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
 36317              		.loc 1 17149 48 view .LVU10130
 36318 00f4 0469     		ldr	r4, [r0, #16]
17149:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
 36319              		.loc 1 17149 40 view .LVU10131
ARM GAS  /tmp/ccWoU29M.s 			page 1016


 36320 00f6 0123     		movs	r3, #1
 36321 00f8 0DF10702 		add	r2, sp, #7
 36322 00fc 1721     		movs	r1, #23
 36323 00fe 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36324 0100 A047     		blx	r4
 36325              	.LVL4454:
17153:Core/Src/bno055.c ****                             {
 36326              		.loc 1 17153 29 is_stmt 1 view .LVU10132
17153:Core/Src/bno055.c ****                             {
 36327              		.loc 1 17153 32 is_stmt 0 view .LVU10133
 36328 0102 0446     		mov	r4, r0
 36329 0104 C8B9     		cbnz	r0, .L2524
17155:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36330              		.loc 1 17155 33 is_stmt 1 view .LVU10134
17155:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36331              		.loc 1 17155 44 is_stmt 0 view .LVU10135
 36332 0106 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36333 010a 23F02003 		bic	r3, r3, #32
 36334 010e 5AB2     		sxtb	r2, r3
 36335 0110 6B01     		lsls	r3, r5, #5
 36336 0112 03F02003 		and	r3, r3, #32
 36337 0116 1343     		orrs	r3, r3, r2
17155:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36338              		.loc 1 17155 42 view .LVU10136
 36339 0118 8DF80730 		strb	r3, [sp, #7]
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 36340              		.loc 1 17156 33 is_stmt 1 view .LVU10137
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 36341              		.loc 1 17156 53 is_stmt 0 view .LVU10138
 36342 011c 104B     		ldr	r3, .L2538
 36343 011e 1868     		ldr	r0, [r3]
 36344              	.LVL4455:
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 36345              		.loc 1 17156 53 view .LVU10139
 36346 0120 C568     		ldr	r5, [r0, #12]
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 36347              		.loc 1 17156 45 view .LVU10140
 36348 0122 0123     		movs	r3, #1
 36349 0124 0DF10702 		add	r2, sp, #7
 36350 0128 1721     		movs	r1, #23
 36351 012a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36352 012c A847     		blx	r5
 36353              	.LVL4456:
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 36354              		.loc 1 17156 42 view .LVU10141
 36355 012e 54FA80F4 		uxtab	r4, r4, r0
 36356 0132 64B2     		sxtb	r4, r4
 36357              	.LVL4457:
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 36358              		.loc 1 17156 42 view .LVU10142
 36359 0134 01E0     		b	.L2524
 36360              	.LVL4458:
 36361              	.L2529:
17175:Core/Src/bno055.c ****             }
17176:Core/Src/bno055.c ****         }
17177:Core/Src/bno055.c ****         else
17178:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccWoU29M.s 			page 1017


17179:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 36362              		.loc 1 17179 22 view .LVU10143
 36363 0136 4FF0FF34 		mov	r4, #-1
 36364              	.LVL4459:
 36365              	.L2524:
17180:Core/Src/bno055.c ****         }
17181:Core/Src/bno055.c ****     }
17182:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36366              		.loc 1 17182 5 is_stmt 1 view .LVU10144
 36367              		.loc 1 17182 24 is_stmt 0 view .LVU10145
 36368 013a 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 36369              		.loc 1 17182 8 view .LVU10146
 36370 013e 28B9     		cbnz	r0, .L2537
 36371              	.LVL4460:
 36372              	.L2523:
17183:Core/Src/bno055.c ****     {
17184:Core/Src/bno055.c ****         /* set the operation mode of
17185:Core/Src/bno055.c ****          * previous operation mode*/
17186:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17187:Core/Src/bno055.c ****     }
17188:Core/Src/bno055.c **** 
17189:Core/Src/bno055.c ****     return com_rslt;
17190:Core/Src/bno055.c **** }
 36373              		.loc 1 17190 1 view .LVU10147
 36374 0140 2046     		mov	r0, r4
 36375 0142 02B0     		add	sp, sp, #8
 36376              	.LCFI979:
 36377              		.cfi_remember_state
 36378              		.cfi_def_cfa_offset 16
 36379              		@ sp needed
 36380 0144 70BD     		pop	{r4, r5, r6, pc}
 36381              	.LVL4461:
 36382              	.L2531:
 36383              	.LCFI980:
 36384              		.cfi_restore_state
17169:Core/Src/bno055.c ****                 }
 36385              		.loc 1 17169 30 view .LVU10148
 36386 0146 4FF0FF34 		mov	r4, #-1
 36387 014a F6E7     		b	.L2524
 36388              	.LVL4462:
 36389              	.L2537:
17186:Core/Src/bno055.c ****     }
 36390              		.loc 1 17186 9 is_stmt 1 view .LVU10149
17186:Core/Src/bno055.c ****     }
 36391              		.loc 1 17186 21 is_stmt 0 view .LVU10150
 36392 014c FFF7FEFF 		bl	bno055_set_operation_mode
 36393              	.LVL4463:
17186:Core/Src/bno055.c ****     }
 36394              		.loc 1 17186 18 view .LVU10151
 36395 0150 54FA80F4 		uxtab	r4, r4, r0
 36396              	.LVL4464:
17186:Core/Src/bno055.c ****     }
 36397              		.loc 1 17186 18 view .LVU10152
 36398 0154 64B2     		sxtb	r4, r4
 36399              	.LVL4465:
17186:Core/Src/bno055.c ****     }
 36400              		.loc 1 17186 18 view .LVU10153
ARM GAS  /tmp/ccWoU29M.s 			page 1018


 36401 0156 F3E7     		b	.L2523
 36402              	.LVL4466:
 36403              	.L2528:
17089:Core/Src/bno055.c ****     }
 36404              		.loc 1 17089 16 view .LVU10154
 36405 0158 6FF07E04 		mvn	r4, #126
 36406 015c F0E7     		b	.L2523
 36407              	.L2539:
 36408 015e 00BF     		.align	2
 36409              	.L2538:
 36410 0160 00000000 		.word	.LANCHOR0
 36411              		.cfi_endproc
 36412              	.LFE246:
 36414              		.section	.text.bno055_get_gyro_any_motion_filter,"ax",%progbits
 36415              		.align	1
 36416              		.global	bno055_get_gyro_any_motion_filter
 36417              		.syntax unified
 36418              		.thumb
 36419              		.thumb_func
 36420              		.fpu fpv4-sp-d16
 36422              	bno055_get_gyro_any_motion_filter:
 36423              	.LVL4467:
 36424              	.LFB247:
17191:Core/Src/bno055.c **** 
17192:Core/Src/bno055.c **** /*!
17193:Core/Src/bno055.c ****  *  @brief This API used to read gyro anymotion filter
17194:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 6
17195:Core/Src/bno055.c ****  *
17196:Core/Src/bno055.c ****  *  @param gyro_any_motion_filter_u8 : The value of gyro anymotion filter
17197:Core/Src/bno055.c ****  *   gyro_any_motion_filter_u8  | result
17198:Core/Src/bno055.c ****  *  ---------------------------   |------------
17199:Core/Src/bno055.c ****  *      0x00                      | BNO055_GYRO_FILTERED_CONFIG
17200:Core/Src/bno055.c ****  *      0x01                      | BNO055_GYRO_UNFILTERED_CONFIG
17201:Core/Src/bno055.c ****  *
17202:Core/Src/bno055.c ****  *  @return results of bus communication function
17203:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17204:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17205:Core/Src/bno055.c ****  *
17206:Core/Src/bno055.c ****  */
17207:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_filter(u8 *gyro_any_motion_filter_u8)
17208:Core/Src/bno055.c **** {
 36425              		.loc 1 17208 1 is_stmt 1 view -0
 36426              		.cfi_startproc
 36427              		@ args = 0, pretend = 0, frame = 8
 36428              		@ frame_needed = 0, uses_anonymous_args = 0
 36429              		.loc 1 17208 1 is_stmt 0 view .LVU10156
 36430 0000 30B5     		push	{r4, r5, lr}
 36431              	.LCFI981:
 36432              		.cfi_def_cfa_offset 12
 36433              		.cfi_offset 4, -12
 36434              		.cfi_offset 5, -8
 36435              		.cfi_offset 14, -4
 36436 0002 83B0     		sub	sp, sp, #12
 36437              	.LCFI982:
 36438              		.cfi_def_cfa_offset 24
17209:Core/Src/bno055.c ****     /* Variable used to return value of
17210:Core/Src/bno055.c ****      * communication routine*/
ARM GAS  /tmp/ccWoU29M.s 			page 1019


17211:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36439              		.loc 1 17211 5 is_stmt 1 view .LVU10157
 36440              	.LVL4468:
17212:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36441              		.loc 1 17212 5 view .LVU10158
 36442              		.loc 1 17212 8 is_stmt 0 view .LVU10159
 36443 0004 0023     		movs	r3, #0
 36444 0006 8DF80730 		strb	r3, [sp, #7]
17213:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36445              		.loc 1 17213 5 is_stmt 1 view .LVU10160
 36446              	.LVL4469:
17214:Core/Src/bno055.c **** 
17215:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17216:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36447              		.loc 1 17216 5 view .LVU10161
 36448              		.loc 1 17216 18 is_stmt 0 view .LVU10162
 36449 000a 144B     		ldr	r3, .L2548
 36450 000c 1B68     		ldr	r3, [r3]
 36451              		.loc 1 17216 8 view .LVU10163
 36452 000e F3B1     		cbz	r3, .L2544
 36453 0010 0446     		mov	r4, r0
17217:Core/Src/bno055.c ****     {
17218:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17219:Core/Src/bno055.c ****     }
17220:Core/Src/bno055.c ****     else
17221:Core/Src/bno055.c ****     {
17222:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion filter is
17223:Core/Src/bno055.c ****          * available in the page one*/
17224:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 36454              		.loc 1 17224 9 is_stmt 1 view .LVU10164
 36455              		.loc 1 17224 21 is_stmt 0 view .LVU10165
 36456 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36457              		.loc 1 17224 12 view .LVU10166
 36458 0014 012B     		cmp	r3, #1
 36459 0016 14D1     		bne	.L2547
 36460              	.LVL4470:
 36461              	.L2542:
17225:Core/Src/bno055.c ****         {
17226:Core/Src/bno055.c ****             /* Write page as one */
17227:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17228:Core/Src/bno055.c ****         }
17229:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 36462              		.loc 1 17229 53 discriminator 1 view .LVU10167
 36463 0018 104B     		ldr	r3, .L2548
 36464 001a 1B68     		ldr	r3, [r3]
 36465 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36466              		.loc 1 17229 41 discriminator 1 view .LVU10168
 36467 001e 012B     		cmp	r3, #1
 36468 0020 18D1     		bne	.L2545
 36469              	.L2543:
17230:Core/Src/bno055.c ****         {
17231:Core/Src/bno055.c ****             /* Read the value of gyro anymotion filter*/
17232:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 36470              		.loc 1 17232 13 is_stmt 1 view .LVU10169
 36471              		.loc 1 17232 32 is_stmt 0 view .LVU10170
 36472 0022 0E4B     		ldr	r3, .L2548
 36473 0024 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccWoU29M.s 			page 1020


 36474 0026 0569     		ldr	r5, [r0, #16]
 36475              		.loc 1 17232 24 view .LVU10171
 36476 0028 0123     		movs	r3, #1
 36477 002a 0DF10702 		add	r2, sp, #7
 36478 002e 1721     		movs	r1, #23
 36479 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36480 0032 A847     		blx	r5
 36481              	.LVL4471:
17233:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_FILTER_REG,
17234:Core/Src/bno055.c ****                                                       &data_u8r,
17235:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17236:Core/Src/bno055.c ****             *gyro_any_motion_filter_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_FILTE
 36482              		.loc 1 17236 13 is_stmt 1 view .LVU10172
 36483              		.loc 1 17236 42 is_stmt 0 view .LVU10173
 36484 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36485 0038 C3F38013 		ubfx	r3, r3, #6, #1
 36486              		.loc 1 17236 40 view .LVU10174
 36487 003c 2370     		strb	r3, [r4]
 36488              	.LVL4472:
 36489              	.L2541:
17237:Core/Src/bno055.c ****         }
17238:Core/Src/bno055.c ****         else
17239:Core/Src/bno055.c ****         {
17240:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17241:Core/Src/bno055.c ****         }
17242:Core/Src/bno055.c ****     }
17243:Core/Src/bno055.c **** 
17244:Core/Src/bno055.c ****     return com_rslt;
17245:Core/Src/bno055.c **** }
 36490              		.loc 1 17245 1 view .LVU10175
 36491 003e 03B0     		add	sp, sp, #12
 36492              	.LCFI983:
 36493              		.cfi_remember_state
 36494              		.cfi_def_cfa_offset 12
 36495              		@ sp needed
 36496 0040 30BD     		pop	{r4, r5, pc}
 36497              	.LVL4473:
 36498              	.L2547:
 36499              	.LCFI984:
 36500              		.cfi_restore_state
17227:Core/Src/bno055.c ****         }
 36501              		.loc 1 17227 13 is_stmt 1 view .LVU10176
17227:Core/Src/bno055.c ****         }
 36502              		.loc 1 17227 23 is_stmt 0 view .LVU10177
 36503 0042 0120     		movs	r0, #1
 36504              	.LVL4474:
17227:Core/Src/bno055.c ****         }
 36505              		.loc 1 17227 23 view .LVU10178
 36506 0044 FFF7FEFF 		bl	bno055_write_page_id
 36507              	.LVL4475:
17229:Core/Src/bno055.c ****         {
 36508              		.loc 1 17229 9 is_stmt 1 view .LVU10179
17229:Core/Src/bno055.c ****         {
 36509              		.loc 1 17229 12 is_stmt 0 view .LVU10180
 36510 0048 0028     		cmp	r0, #0
 36511 004a EAD0     		beq	.L2543
 36512 004c E4E7     		b	.L2542
ARM GAS  /tmp/ccWoU29M.s 			page 1021


 36513              	.LVL4476:
 36514              	.L2544:
17218:Core/Src/bno055.c ****     }
 36515              		.loc 1 17218 16 view .LVU10181
 36516 004e 6FF07E00 		mvn	r0, #126
 36517              	.LVL4477:
17218:Core/Src/bno055.c ****     }
 36518              		.loc 1 17218 16 view .LVU10182
 36519 0052 F4E7     		b	.L2541
 36520              	.LVL4478:
 36521              	.L2545:
17240:Core/Src/bno055.c ****         }
 36522              		.loc 1 17240 22 view .LVU10183
 36523 0054 4FF0FF30 		mov	r0, #-1
 36524 0058 F1E7     		b	.L2541
 36525              	.L2549:
 36526 005a 00BF     		.align	2
 36527              	.L2548:
 36528 005c 00000000 		.word	.LANCHOR0
 36529              		.cfi_endproc
 36530              	.LFE247:
 36532              		.section	.text.bno055_set_gyro_any_motion_filter,"ax",%progbits
 36533              		.align	1
 36534              		.global	bno055_set_gyro_any_motion_filter
 36535              		.syntax unified
 36536              		.thumb
 36537              		.thumb_func
 36538              		.fpu fpv4-sp-d16
 36540              	bno055_set_gyro_any_motion_filter:
 36541              	.LVL4479:
 36542              	.LFB248:
17246:Core/Src/bno055.c **** 
17247:Core/Src/bno055.c **** /*!
17248:Core/Src/bno055.c ****  *  @brief This API used to write gyro anymotion filter
17249:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 6
17250:Core/Src/bno055.c ****  *
17251:Core/Src/bno055.c ****  *  @param gyro_any_motion_filter_u8 : The value of gyro anymotion filter
17252:Core/Src/bno055.c ****  *   gyro_any_motion_filter_u8  | result
17253:Core/Src/bno055.c ****  *  ---------------------------   |------------
17254:Core/Src/bno055.c ****  *      0x00                      | BNO055_GYRO_FILTERED_CONFIG
17255:Core/Src/bno055.c ****  *      0x01                      | BNO055_GYRO_UNFILTERED_CONFIG
17256:Core/Src/bno055.c ****  *
17257:Core/Src/bno055.c ****  *  @return results of bus communication function
17258:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17259:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17260:Core/Src/bno055.c ****  *
17261:Core/Src/bno055.c ****  */
17262:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_filter(u8 gyro_any_motion_filter_u8)
17263:Core/Src/bno055.c **** {
 36543              		.loc 1 17263 1 is_stmt 1 view -0
 36544              		.cfi_startproc
 36545              		@ args = 0, pretend = 0, frame = 8
 36546              		@ frame_needed = 0, uses_anonymous_args = 0
 36547              		.loc 1 17263 1 is_stmt 0 view .LVU10185
 36548 0000 30B5     		push	{r4, r5, lr}
 36549              	.LCFI985:
 36550              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccWoU29M.s 			page 1022


 36551              		.cfi_offset 4, -12
 36552              		.cfi_offset 5, -8
 36553              		.cfi_offset 14, -4
 36554 0002 83B0     		sub	sp, sp, #12
 36555              	.LCFI986:
 36556              		.cfi_def_cfa_offset 24
17264:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36557              		.loc 1 17264 5 is_stmt 1 view .LVU10186
 36558              	.LVL4480:
17265:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36559              		.loc 1 17265 5 view .LVU10187
 36560              		.loc 1 17265 8 is_stmt 0 view .LVU10188
 36561 0004 0023     		movs	r3, #0
 36562 0006 8DF80730 		strb	r3, [sp, #7]
17266:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36563              		.loc 1 17266 5 is_stmt 1 view .LVU10189
 36564              	.LVL4481:
17267:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 36565              		.loc 1 17267 5 view .LVU10190
 36566              		.loc 1 17267 8 is_stmt 0 view .LVU10191
 36567 000a 8DF80630 		strb	r3, [sp, #6]
17268:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 36568              		.loc 1 17268 5 is_stmt 1 view .LVU10192
 36569              	.LVL4482:
17269:Core/Src/bno055.c **** 
17270:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17271:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36570              		.loc 1 17271 5 view .LVU10193
 36571              		.loc 1 17271 18 is_stmt 0 view .LVU10194
 36572 000e 2A4B     		ldr	r3, .L2562
 36573 0010 1B68     		ldr	r3, [r3]
 36574              		.loc 1 17271 8 view .LVU10195
 36575 0012 002B     		cmp	r3, #0
 36576 0014 4CD0     		beq	.L2554
 36577 0016 0546     		mov	r5, r0
17272:Core/Src/bno055.c ****     {
17273:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17274:Core/Src/bno055.c ****     }
17275:Core/Src/bno055.c ****     else
17276:Core/Src/bno055.c ****     {
17277:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17278:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17279:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17280:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 36578              		.loc 1 17280 9 is_stmt 1 view .LVU10196
 36579              		.loc 1 17280 19 is_stmt 0 view .LVU10197
 36580 0018 0DF10600 		add	r0, sp, #6
 36581              	.LVL4483:
 36582              		.loc 1 17280 19 view .LVU10198
 36583 001c FFF7FEFF 		bl	bno055_get_operation_mode
 36584              	.LVL4484:
17281:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 36585              		.loc 1 17281 9 is_stmt 1 view .LVU10199
 36586              		.loc 1 17281 12 is_stmt 0 view .LVU10200
 36587 0020 0446     		mov	r4, r0
 36588 0022 0028     		cmp	r0, #0
 36589 0024 33D1     		bne	.L2555
ARM GAS  /tmp/ccWoU29M.s 			page 1023


17282:Core/Src/bno055.c ****         {
17283:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36590              		.loc 1 17283 13 is_stmt 1 view .LVU10201
 36591              		.loc 1 17283 32 is_stmt 0 view .LVU10202
 36592 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 36593              		.loc 1 17283 16 view .LVU10203
 36594 002a 1BB9     		cbnz	r3, .L2559
 36595              	.LVL4485:
 36596              	.L2553:
17284:Core/Src/bno055.c ****             {
17285:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17286:Core/Src/bno055.c ****             }
17287:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 36597              		.loc 1 17287 13 is_stmt 1 view .LVU10204
 36598              		.loc 1 17287 16 is_stmt 0 view .LVU10205
 36599 002c 44B1     		cbz	r4, .L2560
17288:Core/Src/bno055.c ****             {
17289:Core/Src/bno055.c ****                 /* Write page as one */
17290:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17291:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17292:Core/Src/bno055.c ****                 {
17293:Core/Src/bno055.c ****                     /* Write the value of
17294:Core/Src/bno055.c ****                      * gyro anymotion filter*/
17295:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17296:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
17297:Core/Src/bno055.c ****                                                               &data_u8r,
17298:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17299:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17300:Core/Src/bno055.c ****                     {
17301:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
17302:Core/Src/bno055.c ****                                                        BNO055_GYRO_ANY_MOTION_FILTER,
17303:Core/Src/bno055.c ****                                                        gyro_any_motion_filter_u8);
17304:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17305:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
17306:Core/Src/bno055.c ****                                                                     &data_u8r,
17307:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
17308:Core/Src/bno055.c ****                     }
17309:Core/Src/bno055.c ****                 }
17310:Core/Src/bno055.c ****                 else
17311:Core/Src/bno055.c ****                 {
17312:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17313:Core/Src/bno055.c ****                 }
17314:Core/Src/bno055.c ****             }
17315:Core/Src/bno055.c ****             else
17316:Core/Src/bno055.c ****             {
17317:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 36600              		.loc 1 17317 26 view .LVU10206
 36601 002e 4FF0FF34 		mov	r4, #-1
 36602              	.LVL4486:
 36603              		.loc 1 17317 26 view .LVU10207
 36604 0032 2EE0     		b	.L2552
 36605              	.LVL4487:
 36606              	.L2559:
17285:Core/Src/bno055.c ****             }
 36607              		.loc 1 17285 17 is_stmt 1 view .LVU10208
17285:Core/Src/bno055.c ****             }
 36608              		.loc 1 17285 28 is_stmt 0 view .LVU10209
ARM GAS  /tmp/ccWoU29M.s 			page 1024


 36609 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 36610              	.LVL4488:
17285:Core/Src/bno055.c ****             }
 36611              		.loc 1 17285 25 view .LVU10210
 36612 0038 54FA80F4 		uxtab	r4, r4, r0
 36613 003c 64B2     		sxtb	r4, r4
 36614              	.LVL4489:
17285:Core/Src/bno055.c ****             }
 36615              		.loc 1 17285 25 view .LVU10211
 36616 003e F5E7     		b	.L2553
 36617              	.L2560:
17290:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36618              		.loc 1 17290 17 is_stmt 1 view .LVU10212
17290:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36619              		.loc 1 17290 30 is_stmt 0 view .LVU10213
 36620 0040 0120     		movs	r0, #1
 36621 0042 FFF7FEFF 		bl	bno055_write_page_id
 36622              	.LVL4490:
17291:Core/Src/bno055.c ****                 {
 36623              		.loc 1 17291 17 is_stmt 1 view .LVU10214
17291:Core/Src/bno055.c ****                 {
 36624              		.loc 1 17291 20 is_stmt 0 view .LVU10215
 36625 0046 50BB     		cbnz	r0, .L2557
17295:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
 36626              		.loc 1 17295 21 is_stmt 1 view .LVU10216
17295:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
 36627              		.loc 1 17295 40 is_stmt 0 view .LVU10217
 36628 0048 1B4B     		ldr	r3, .L2562
 36629 004a 1868     		ldr	r0, [r3]
 36630              	.LVL4491:
17295:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
 36631              		.loc 1 17295 40 view .LVU10218
 36632 004c 0469     		ldr	r4, [r0, #16]
 36633              	.LVL4492:
17295:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
 36634              		.loc 1 17295 32 view .LVU10219
 36635 004e 0123     		movs	r3, #1
 36636 0050 0DF10702 		add	r2, sp, #7
 36637 0054 1721     		movs	r1, #23
 36638 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36639 0058 A047     		blx	r4
 36640              	.LVL4493:
17299:Core/Src/bno055.c ****                     {
 36641              		.loc 1 17299 21 is_stmt 1 view .LVU10220
17299:Core/Src/bno055.c ****                     {
 36642              		.loc 1 17299 24 is_stmt 0 view .LVU10221
 36643 005a 0446     		mov	r4, r0
 36644 005c C8B9     		cbnz	r0, .L2552
17301:Core/Src/bno055.c ****                                                        BNO055_GYRO_ANY_MOTION_FILTER,
 36645              		.loc 1 17301 25 is_stmt 1 view .LVU10222
17301:Core/Src/bno055.c ****                                                        BNO055_GYRO_ANY_MOTION_FILTER,
 36646              		.loc 1 17301 36 is_stmt 0 view .LVU10223
 36647 005e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36648 0062 23F04003 		bic	r3, r3, #64
 36649 0066 5AB2     		sxtb	r2, r3
 36650 0068 AB01     		lsls	r3, r5, #6
 36651 006a 03F04003 		and	r3, r3, #64
ARM GAS  /tmp/ccWoU29M.s 			page 1025


 36652 006e 1343     		orrs	r3, r3, r2
17301:Core/Src/bno055.c ****                                                        BNO055_GYRO_ANY_MOTION_FILTER,
 36653              		.loc 1 17301 34 view .LVU10224
 36654 0070 8DF80730 		strb	r3, [sp, #7]
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 36655              		.loc 1 17304 25 is_stmt 1 view .LVU10225
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 36656              		.loc 1 17304 45 is_stmt 0 view .LVU10226
 36657 0074 104B     		ldr	r3, .L2562
 36658 0076 1868     		ldr	r0, [r3]
 36659              	.LVL4494:
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 36660              		.loc 1 17304 45 view .LVU10227
 36661 0078 C568     		ldr	r5, [r0, #12]
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 36662              		.loc 1 17304 37 view .LVU10228
 36663 007a 0123     		movs	r3, #1
 36664 007c 0DF10702 		add	r2, sp, #7
 36665 0080 1721     		movs	r1, #23
 36666 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36667 0084 A847     		blx	r5
 36668              	.LVL4495:
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 36669              		.loc 1 17304 34 view .LVU10229
 36670 0086 54FA80F4 		uxtab	r4, r4, r0
 36671 008a 64B2     		sxtb	r4, r4
 36672              	.LVL4496:
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 36673              		.loc 1 17304 34 view .LVU10230
 36674 008c 01E0     		b	.L2552
 36675              	.LVL4497:
 36676              	.L2555:
17318:Core/Src/bno055.c ****             }
17319:Core/Src/bno055.c ****         }
17320:Core/Src/bno055.c ****         else
17321:Core/Src/bno055.c ****         {
17322:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 36677              		.loc 1 17322 22 view .LVU10231
 36678 008e 4FF0FF34 		mov	r4, #-1
 36679              	.LVL4498:
 36680              	.L2552:
17323:Core/Src/bno055.c ****         }
17324:Core/Src/bno055.c ****     }
17325:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36681              		.loc 1 17325 5 is_stmt 1 view .LVU10232
 36682              		.loc 1 17325 24 is_stmt 0 view .LVU10233
 36683 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 36684              		.loc 1 17325 8 view .LVU10234
 36685 0096 28B9     		cbnz	r0, .L2561
 36686              	.LVL4499:
 36687              	.L2551:
17326:Core/Src/bno055.c ****     {
17327:Core/Src/bno055.c ****         /* set the operation mode of
17328:Core/Src/bno055.c ****          * previous operation mode*/
17329:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17330:Core/Src/bno055.c ****     }
17331:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 1026


17332:Core/Src/bno055.c ****     return com_rslt;
17333:Core/Src/bno055.c **** }
 36688              		.loc 1 17333 1 view .LVU10235
 36689 0098 2046     		mov	r0, r4
 36690 009a 03B0     		add	sp, sp, #12
 36691              	.LCFI987:
 36692              		.cfi_remember_state
 36693              		.cfi_def_cfa_offset 12
 36694              		@ sp needed
 36695 009c 30BD     		pop	{r4, r5, pc}
 36696              	.LVL4500:
 36697              	.L2557:
 36698              	.LCFI988:
 36699              		.cfi_restore_state
17312:Core/Src/bno055.c ****                 }
 36700              		.loc 1 17312 30 view .LVU10236
 36701 009e 4FF0FF34 		mov	r4, #-1
 36702              	.LVL4501:
17312:Core/Src/bno055.c ****                 }
 36703              		.loc 1 17312 30 view .LVU10237
 36704 00a2 F6E7     		b	.L2552
 36705              	.LVL4502:
 36706              	.L2561:
17329:Core/Src/bno055.c ****     }
 36707              		.loc 1 17329 9 is_stmt 1 view .LVU10238
17329:Core/Src/bno055.c ****     }
 36708              		.loc 1 17329 21 is_stmt 0 view .LVU10239
 36709 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 36710              	.LVL4503:
17329:Core/Src/bno055.c ****     }
 36711              		.loc 1 17329 18 view .LVU10240
 36712 00a8 54FA80F4 		uxtab	r4, r4, r0
 36713              	.LVL4504:
17329:Core/Src/bno055.c ****     }
 36714              		.loc 1 17329 18 view .LVU10241
 36715 00ac 64B2     		sxtb	r4, r4
 36716              	.LVL4505:
17329:Core/Src/bno055.c ****     }
 36717              		.loc 1 17329 18 view .LVU10242
 36718 00ae F3E7     		b	.L2551
 36719              	.LVL4506:
 36720              	.L2554:
17273:Core/Src/bno055.c ****     }
 36721              		.loc 1 17273 16 view .LVU10243
 36722 00b0 6FF07E04 		mvn	r4, #126
 36723 00b4 F0E7     		b	.L2551
 36724              	.L2563:
 36725 00b6 00BF     		.align	2
 36726              	.L2562:
 36727 00b8 00000000 		.word	.LANCHOR0
 36728              		.cfi_endproc
 36729              	.LFE248:
 36731              		.section	.text.bno055_get_gyro_highrate_filter,"ax",%progbits
 36732              		.align	1
 36733              		.global	bno055_get_gyro_highrate_filter
 36734              		.syntax unified
 36735              		.thumb
ARM GAS  /tmp/ccWoU29M.s 			page 1027


 36736              		.thumb_func
 36737              		.fpu fpv4-sp-d16
 36739              	bno055_get_gyro_highrate_filter:
 36740              	.LVL4507:
 36741              	.LFB249:
17334:Core/Src/bno055.c **** 
17335:Core/Src/bno055.c **** /*!
17336:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate filter
17337:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 7
17338:Core/Src/bno055.c ****  *
17339:Core/Src/bno055.c ****  *  @param gyro_highrate_filter_u8 : The value of gyro highrate filter
17340:Core/Src/bno055.c ****  *   gyro_highrate_filter_u8  | result
17341:Core/Src/bno055.c ****  *  --------------------------- |------------
17342:Core/Src/bno055.c ****  *         0x00                 | BNO055_GYRO_FILTERED_CONFIG
17343:Core/Src/bno055.c ****  *         0x01                 | BNO055_GYRO_UNFILTERED_CONFIG
17344:Core/Src/bno055.c ****  *
17345:Core/Src/bno055.c ****  *  @return results of bus communication function
17346:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17347:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17348:Core/Src/bno055.c ****  *
17349:Core/Src/bno055.c ****  */
17350:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_filter(u8 *gyro_highrate_filter_u8)
17351:Core/Src/bno055.c **** {
 36742              		.loc 1 17351 1 is_stmt 1 view -0
 36743              		.cfi_startproc
 36744              		@ args = 0, pretend = 0, frame = 8
 36745              		@ frame_needed = 0, uses_anonymous_args = 0
 36746              		.loc 1 17351 1 is_stmt 0 view .LVU10245
 36747 0000 30B5     		push	{r4, r5, lr}
 36748              	.LCFI989:
 36749              		.cfi_def_cfa_offset 12
 36750              		.cfi_offset 4, -12
 36751              		.cfi_offset 5, -8
 36752              		.cfi_offset 14, -4
 36753 0002 83B0     		sub	sp, sp, #12
 36754              	.LCFI990:
 36755              		.cfi_def_cfa_offset 24
17352:Core/Src/bno055.c ****     /* Variable used to return value of
17353:Core/Src/bno055.c ****      * communication routine*/
17354:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36756              		.loc 1 17354 5 is_stmt 1 view .LVU10246
 36757              	.LVL4508:
17355:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36758              		.loc 1 17355 5 view .LVU10247
 36759              		.loc 1 17355 8 is_stmt 0 view .LVU10248
 36760 0004 0023     		movs	r3, #0
 36761 0006 8DF80730 		strb	r3, [sp, #7]
17356:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36762              		.loc 1 17356 5 is_stmt 1 view .LVU10249
 36763              	.LVL4509:
17357:Core/Src/bno055.c **** 
17358:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17359:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36764              		.loc 1 17359 5 view .LVU10250
 36765              		.loc 1 17359 18 is_stmt 0 view .LVU10251
 36766 000a 134B     		ldr	r3, .L2572
 36767 000c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccWoU29M.s 			page 1028


 36768              		.loc 1 17359 8 view .LVU10252
 36769 000e EBB1     		cbz	r3, .L2568
 36770 0010 0446     		mov	r4, r0
17360:Core/Src/bno055.c ****     {
17361:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17362:Core/Src/bno055.c ****     }
17363:Core/Src/bno055.c ****     else
17364:Core/Src/bno055.c ****     {
17365:Core/Src/bno055.c ****         /*condition check for page, gyro highrate filter is
17366:Core/Src/bno055.c ****          * available in the page one*/
17367:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 36771              		.loc 1 17367 9 is_stmt 1 view .LVU10253
 36772              		.loc 1 17367 21 is_stmt 0 view .LVU10254
 36773 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36774              		.loc 1 17367 12 view .LVU10255
 36775 0014 012B     		cmp	r3, #1
 36776 0016 13D1     		bne	.L2571
 36777              	.LVL4510:
 36778              	.L2566:
17368:Core/Src/bno055.c ****         {
17369:Core/Src/bno055.c ****             /* Write page as one */
17370:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17371:Core/Src/bno055.c ****         }
17372:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 36779              		.loc 1 17372 53 discriminator 1 view .LVU10256
 36780 0018 0F4B     		ldr	r3, .L2572
 36781 001a 1B68     		ldr	r3, [r3]
 36782 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36783              		.loc 1 17372 41 discriminator 1 view .LVU10257
 36784 001e 012B     		cmp	r3, #1
 36785 0020 17D1     		bne	.L2569
 36786              	.L2567:
17373:Core/Src/bno055.c ****         {
17374:Core/Src/bno055.c ****             /* Read the value of gyro highrate filter */
17375:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 36787              		.loc 1 17375 13 is_stmt 1 view .LVU10258
 36788              		.loc 1 17375 32 is_stmt 0 view .LVU10259
 36789 0022 0D4B     		ldr	r3, .L2572
 36790 0024 1868     		ldr	r0, [r3]
 36791 0026 0569     		ldr	r5, [r0, #16]
 36792              		.loc 1 17375 24 view .LVU10260
 36793 0028 0123     		movs	r3, #1
 36794 002a 0DF10702 		add	r2, sp, #7
 36795 002e 1721     		movs	r1, #23
 36796 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36797 0032 A847     		blx	r5
 36798              	.LVL4511:
17376:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_FILTER_REG,
17377:Core/Src/bno055.c ****                                                       &data_u8r,
17378:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17379:Core/Src/bno055.c ****             *gyro_highrate_filter_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_FILTER);
 36799              		.loc 1 17379 13 is_stmt 1 view .LVU10261
 36800              		.loc 1 17379 40 is_stmt 0 view .LVU10262
 36801 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36802 0038 DB09     		lsrs	r3, r3, #7
 36803              		.loc 1 17379 38 view .LVU10263
 36804 003a 2370     		strb	r3, [r4]
ARM GAS  /tmp/ccWoU29M.s 			page 1029


 36805              	.LVL4512:
 36806              	.L2565:
17380:Core/Src/bno055.c ****         }
17381:Core/Src/bno055.c ****         else
17382:Core/Src/bno055.c ****         {
17383:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17384:Core/Src/bno055.c ****         }
17385:Core/Src/bno055.c ****     }
17386:Core/Src/bno055.c **** 
17387:Core/Src/bno055.c ****     return com_rslt;
17388:Core/Src/bno055.c **** }
 36807              		.loc 1 17388 1 view .LVU10264
 36808 003c 03B0     		add	sp, sp, #12
 36809              	.LCFI991:
 36810              		.cfi_remember_state
 36811              		.cfi_def_cfa_offset 12
 36812              		@ sp needed
 36813 003e 30BD     		pop	{r4, r5, pc}
 36814              	.LVL4513:
 36815              	.L2571:
 36816              	.LCFI992:
 36817              		.cfi_restore_state
17370:Core/Src/bno055.c ****         }
 36818              		.loc 1 17370 13 is_stmt 1 view .LVU10265
17370:Core/Src/bno055.c ****         }
 36819              		.loc 1 17370 23 is_stmt 0 view .LVU10266
 36820 0040 0120     		movs	r0, #1
 36821              	.LVL4514:
17370:Core/Src/bno055.c ****         }
 36822              		.loc 1 17370 23 view .LVU10267
 36823 0042 FFF7FEFF 		bl	bno055_write_page_id
 36824              	.LVL4515:
17372:Core/Src/bno055.c ****         {
 36825              		.loc 1 17372 9 is_stmt 1 view .LVU10268
17372:Core/Src/bno055.c ****         {
 36826              		.loc 1 17372 12 is_stmt 0 view .LVU10269
 36827 0046 0028     		cmp	r0, #0
 36828 0048 EBD0     		beq	.L2567
 36829 004a E5E7     		b	.L2566
 36830              	.LVL4516:
 36831              	.L2568:
17361:Core/Src/bno055.c ****     }
 36832              		.loc 1 17361 16 view .LVU10270
 36833 004c 6FF07E00 		mvn	r0, #126
 36834              	.LVL4517:
17361:Core/Src/bno055.c ****     }
 36835              		.loc 1 17361 16 view .LVU10271
 36836 0050 F4E7     		b	.L2565
 36837              	.LVL4518:
 36838              	.L2569:
17383:Core/Src/bno055.c ****         }
 36839              		.loc 1 17383 22 view .LVU10272
 36840 0052 4FF0FF30 		mov	r0, #-1
 36841 0056 F1E7     		b	.L2565
 36842              	.L2573:
 36843              		.align	2
 36844              	.L2572:
ARM GAS  /tmp/ccWoU29M.s 			page 1030


 36845 0058 00000000 		.word	.LANCHOR0
 36846              		.cfi_endproc
 36847              	.LFE249:
 36849              		.section	.text.bno055_set_gyro_highrate_filter,"ax",%progbits
 36850              		.align	1
 36851              		.global	bno055_set_gyro_highrate_filter
 36852              		.syntax unified
 36853              		.thumb
 36854              		.thumb_func
 36855              		.fpu fpv4-sp-d16
 36857              	bno055_set_gyro_highrate_filter:
 36858              	.LVL4519:
 36859              	.LFB250:
17389:Core/Src/bno055.c **** 
17390:Core/Src/bno055.c **** /*!
17391:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate filter
17392:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 7
17393:Core/Src/bno055.c ****  *
17394:Core/Src/bno055.c ****  *  @param gyro_highrate_filter_u8 : The value of gyro highrate filter
17395:Core/Src/bno055.c ****  *   gyro_highrate_filter_u8  | result
17396:Core/Src/bno055.c ****  *  --------------------------- |------------
17397:Core/Src/bno055.c ****  *         0x00                 | BNO055_GYRO_FILTERED_CONFIG
17398:Core/Src/bno055.c ****  *         0x01                 | BNO055_GYRO_UNFILTERED_CONFIG
17399:Core/Src/bno055.c ****  *
17400:Core/Src/bno055.c ****  *  @return results of bus communication function
17401:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17402:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17403:Core/Src/bno055.c ****  *
17404:Core/Src/bno055.c ****  */
17405:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_filter(u8 gyro_highrate_filter_u8)
17406:Core/Src/bno055.c **** {
 36860              		.loc 1 17406 1 is_stmt 1 view -0
 36861              		.cfi_startproc
 36862              		@ args = 0, pretend = 0, frame = 8
 36863              		@ frame_needed = 0, uses_anonymous_args = 0
 36864              		.loc 1 17406 1 is_stmt 0 view .LVU10274
 36865 0000 30B5     		push	{r4, r5, lr}
 36866              	.LCFI993:
 36867              		.cfi_def_cfa_offset 12
 36868              		.cfi_offset 4, -12
 36869              		.cfi_offset 5, -8
 36870              		.cfi_offset 14, -4
 36871 0002 83B0     		sub	sp, sp, #12
 36872              	.LCFI994:
 36873              		.cfi_def_cfa_offset 24
17407:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36874              		.loc 1 17407 5 is_stmt 1 view .LVU10275
 36875              	.LVL4520:
17408:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36876              		.loc 1 17408 5 view .LVU10276
 36877              		.loc 1 17408 8 is_stmt 0 view .LVU10277
 36878 0004 0023     		movs	r3, #0
 36879 0006 8DF80730 		strb	r3, [sp, #7]
17409:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36880              		.loc 1 17409 5 is_stmt 1 view .LVU10278
 36881              	.LVL4521:
17410:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 1031


 36882              		.loc 1 17410 5 view .LVU10279
17411:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 36883              		.loc 1 17411 5 view .LVU10280
 36884              		.loc 1 17411 8 is_stmt 0 view .LVU10281
 36885 000a 8DF80630 		strb	r3, [sp, #6]
17412:Core/Src/bno055.c **** 
17413:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17414:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36886              		.loc 1 17414 5 is_stmt 1 view .LVU10282
 36887              		.loc 1 17414 18 is_stmt 0 view .LVU10283
 36888 000e 284B     		ldr	r3, .L2586
 36889 0010 1B68     		ldr	r3, [r3]
 36890              		.loc 1 17414 8 view .LVU10284
 36891 0012 002B     		cmp	r3, #0
 36892 0014 48D0     		beq	.L2578
 36893 0016 0546     		mov	r5, r0
17415:Core/Src/bno055.c ****     {
17416:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17417:Core/Src/bno055.c ****     }
17418:Core/Src/bno055.c ****     else
17419:Core/Src/bno055.c ****     {
17420:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17421:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17422:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17423:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 36894              		.loc 1 17423 9 is_stmt 1 view .LVU10285
 36895              		.loc 1 17423 19 is_stmt 0 view .LVU10286
 36896 0018 0DF10600 		add	r0, sp, #6
 36897              	.LVL4522:
 36898              		.loc 1 17423 19 view .LVU10287
 36899 001c FFF7FEFF 		bl	bno055_get_operation_mode
 36900              	.LVL4523:
17424:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 36901              		.loc 1 17424 9 is_stmt 1 view .LVU10288
 36902              		.loc 1 17424 12 is_stmt 0 view .LVU10289
 36903 0020 0446     		mov	r4, r0
 36904 0022 80BB     		cbnz	r0, .L2579
17425:Core/Src/bno055.c ****         {
17426:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36905              		.loc 1 17426 13 is_stmt 1 view .LVU10290
 36906              		.loc 1 17426 32 is_stmt 0 view .LVU10291
 36907 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 36908              		.loc 1 17426 16 view .LVU10292
 36909 0028 1BB9     		cbnz	r3, .L2583
 36910              	.LVL4524:
 36911              	.L2577:
17427:Core/Src/bno055.c ****             {
17428:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17429:Core/Src/bno055.c ****             }
17430:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 36912              		.loc 1 17430 13 is_stmt 1 view .LVU10293
 36913              		.loc 1 17430 16 is_stmt 0 view .LVU10294
 36914 002a 44B1     		cbz	r4, .L2584
17431:Core/Src/bno055.c ****             {
17432:Core/Src/bno055.c ****                 /* Write page as one */
17433:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17434:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
ARM GAS  /tmp/ccWoU29M.s 			page 1032


17435:Core/Src/bno055.c ****                 {
17436:Core/Src/bno055.c ****                     /* Write the value of
17437:Core/Src/bno055.c ****                      * gyro highrate filter*/
17438:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17439:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
17440:Core/Src/bno055.c ****                                                               &data_u8r,
17441:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17442:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17443:Core/Src/bno055.c ****                     {
17444:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_FILTER, gyro_
17445:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17446:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
17447:Core/Src/bno055.c ****                                                                     &data_u8r,
17448:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
17449:Core/Src/bno055.c ****                     }
17450:Core/Src/bno055.c ****                 }
17451:Core/Src/bno055.c ****                 else
17452:Core/Src/bno055.c ****                 {
17453:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17454:Core/Src/bno055.c ****                 }
17455:Core/Src/bno055.c ****             }
17456:Core/Src/bno055.c ****             else
17457:Core/Src/bno055.c ****             {
17458:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 36915              		.loc 1 17458 26 view .LVU10295
 36916 002c 4FF0FF34 		mov	r4, #-1
 36917              	.LVL4525:
 36918              		.loc 1 17458 26 view .LVU10296
 36919 0030 2BE0     		b	.L2576
 36920              	.LVL4526:
 36921              	.L2583:
17428:Core/Src/bno055.c ****             }
 36922              		.loc 1 17428 17 is_stmt 1 view .LVU10297
17428:Core/Src/bno055.c ****             }
 36923              		.loc 1 17428 28 is_stmt 0 view .LVU10298
 36924 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 36925              	.LVL4527:
17428:Core/Src/bno055.c ****             }
 36926              		.loc 1 17428 25 view .LVU10299
 36927 0036 54FA80F4 		uxtab	r4, r4, r0
 36928 003a 64B2     		sxtb	r4, r4
 36929              	.LVL4528:
17428:Core/Src/bno055.c ****             }
 36930              		.loc 1 17428 25 view .LVU10300
 36931 003c F5E7     		b	.L2577
 36932              	.L2584:
17433:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36933              		.loc 1 17433 17 is_stmt 1 view .LVU10301
17433:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36934              		.loc 1 17433 30 is_stmt 0 view .LVU10302
 36935 003e 0120     		movs	r0, #1
 36936 0040 FFF7FEFF 		bl	bno055_write_page_id
 36937              	.LVL4529:
17434:Core/Src/bno055.c ****                 {
 36938              		.loc 1 17434 17 is_stmt 1 view .LVU10303
17434:Core/Src/bno055.c ****                 {
 36939              		.loc 1 17434 20 is_stmt 0 view .LVU10304
ARM GAS  /tmp/ccWoU29M.s 			page 1033


 36940 0044 38BB     		cbnz	r0, .L2581
17438:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
 36941              		.loc 1 17438 21 is_stmt 1 view .LVU10305
17438:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
 36942              		.loc 1 17438 40 is_stmt 0 view .LVU10306
 36943 0046 1A4B     		ldr	r3, .L2586
 36944 0048 1868     		ldr	r0, [r3]
 36945              	.LVL4530:
17438:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
 36946              		.loc 1 17438 40 view .LVU10307
 36947 004a 0469     		ldr	r4, [r0, #16]
 36948              	.LVL4531:
17438:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
 36949              		.loc 1 17438 32 view .LVU10308
 36950 004c 0123     		movs	r3, #1
 36951 004e 0DF10702 		add	r2, sp, #7
 36952 0052 1721     		movs	r1, #23
 36953 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36954 0056 A047     		blx	r4
 36955              	.LVL4532:
17442:Core/Src/bno055.c ****                     {
 36956              		.loc 1 17442 21 is_stmt 1 view .LVU10309
17442:Core/Src/bno055.c ****                     {
 36957              		.loc 1 17442 24 is_stmt 0 view .LVU10310
 36958 0058 0446     		mov	r4, r0
 36959 005a B0B9     		cbnz	r0, .L2576
17444:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36960              		.loc 1 17444 25 is_stmt 1 view .LVU10311
17444:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36961              		.loc 1 17444 36 is_stmt 0 view .LVU10312
 36962 005c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 36963              	.LVL4533:
17444:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36964              		.loc 1 17444 36 view .LVU10313
 36965 0060 00F07F00 		and	r0, r0, #127
 36966 0064 40EAC510 		orr	r0, r0, r5, lsl #7
17444:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36967              		.loc 1 17444 34 view .LVU10314
 36968 0068 8DF80700 		strb	r0, [sp, #7]
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 36969              		.loc 1 17445 25 is_stmt 1 view .LVU10315
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 36970              		.loc 1 17445 45 is_stmt 0 view .LVU10316
 36971 006c 104B     		ldr	r3, .L2586
 36972 006e 1868     		ldr	r0, [r3]
 36973 0070 C568     		ldr	r5, [r0, #12]
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 36974              		.loc 1 17445 37 view .LVU10317
 36975 0072 0123     		movs	r3, #1
 36976 0074 0DF10702 		add	r2, sp, #7
 36977 0078 1721     		movs	r1, #23
 36978 007a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36979 007c A847     		blx	r5
 36980              	.LVL4534:
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 36981              		.loc 1 17445 34 view .LVU10318
 36982 007e 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/ccWoU29M.s 			page 1034


 36983 0082 64B2     		sxtb	r4, r4
 36984              	.LVL4535:
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 36985              		.loc 1 17445 34 view .LVU10319
 36986 0084 01E0     		b	.L2576
 36987              	.LVL4536:
 36988              	.L2579:
17459:Core/Src/bno055.c ****             }
17460:Core/Src/bno055.c ****         }
17461:Core/Src/bno055.c ****         else
17462:Core/Src/bno055.c ****         {
17463:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 36989              		.loc 1 17463 22 view .LVU10320
 36990 0086 4FF0FF34 		mov	r4, #-1
 36991              	.LVL4537:
 36992              	.L2576:
17464:Core/Src/bno055.c ****         }
17465:Core/Src/bno055.c ****     }
17466:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36993              		.loc 1 17466 5 is_stmt 1 view .LVU10321
 36994              		.loc 1 17466 24 is_stmt 0 view .LVU10322
 36995 008a 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 36996              		.loc 1 17466 8 view .LVU10323
 36997 008e 28B9     		cbnz	r0, .L2585
 36998              	.LVL4538:
 36999              	.L2575:
17467:Core/Src/bno055.c ****     {
17468:Core/Src/bno055.c ****         /* set the operation mode of
17469:Core/Src/bno055.c ****          * previous operation mode*/
17470:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17471:Core/Src/bno055.c ****     }
17472:Core/Src/bno055.c **** 
17473:Core/Src/bno055.c ****     return com_rslt;
17474:Core/Src/bno055.c **** }
 37000              		.loc 1 17474 1 view .LVU10324
 37001 0090 2046     		mov	r0, r4
 37002 0092 03B0     		add	sp, sp, #12
 37003              	.LCFI995:
 37004              		.cfi_remember_state
 37005              		.cfi_def_cfa_offset 12
 37006              		@ sp needed
 37007 0094 30BD     		pop	{r4, r5, pc}
 37008              	.LVL4539:
 37009              	.L2581:
 37010              	.LCFI996:
 37011              		.cfi_restore_state
17453:Core/Src/bno055.c ****                 }
 37012              		.loc 1 17453 30 view .LVU10325
 37013 0096 4FF0FF34 		mov	r4, #-1
 37014              	.LVL4540:
17453:Core/Src/bno055.c ****                 }
 37015              		.loc 1 17453 30 view .LVU10326
 37016 009a F6E7     		b	.L2576
 37017              	.LVL4541:
 37018              	.L2585:
17470:Core/Src/bno055.c ****     }
 37019              		.loc 1 17470 9 is_stmt 1 view .LVU10327
ARM GAS  /tmp/ccWoU29M.s 			page 1035


17470:Core/Src/bno055.c ****     }
 37020              		.loc 1 17470 21 is_stmt 0 view .LVU10328
 37021 009c FFF7FEFF 		bl	bno055_set_operation_mode
 37022              	.LVL4542:
17470:Core/Src/bno055.c ****     }
 37023              		.loc 1 17470 18 view .LVU10329
 37024 00a0 54FA80F4 		uxtab	r4, r4, r0
 37025              	.LVL4543:
17470:Core/Src/bno055.c ****     }
 37026              		.loc 1 17470 18 view .LVU10330
 37027 00a4 64B2     		sxtb	r4, r4
 37028              	.LVL4544:
17470:Core/Src/bno055.c ****     }
 37029              		.loc 1 17470 18 view .LVU10331
 37030 00a6 F3E7     		b	.L2575
 37031              	.LVL4545:
 37032              	.L2578:
17416:Core/Src/bno055.c ****     }
 37033              		.loc 1 17416 16 view .LVU10332
 37034 00a8 6FF07E04 		mvn	r4, #126
 37035 00ac F0E7     		b	.L2575
 37036              	.L2587:
 37037 00ae 00BF     		.align	2
 37038              	.L2586:
 37039 00b0 00000000 		.word	.LANCHOR0
 37040              		.cfi_endproc
 37041              	.LFE250:
 37043              		.section	.text.bno055_get_gyro_highrate_x_thres,"ax",%progbits
 37044              		.align	1
 37045              		.global	bno055_get_gyro_highrate_x_thres
 37046              		.syntax unified
 37047              		.thumb
 37048              		.thumb_func
 37049              		.fpu fpv4-sp-d16
 37051              	bno055_get_gyro_highrate_x_thres:
 37052              	.LVL4546:
 37053              	.LFB251:
17475:Core/Src/bno055.c **** 
17476:Core/Src/bno055.c **** /*!
17477:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate x threshold
17478:Core/Src/bno055.c ****  *  from page one register from 0x18 bit 0 to 4
17479:Core/Src/bno055.c ****  *
17480:Core/Src/bno055.c ****  *  @param gyro_highrate_x_thres_u8 : The value of gyro x highrate threshold
17481:Core/Src/bno055.c ****  *
17482:Core/Src/bno055.c ****  *  @return results of bus communication function
17483:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17484:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17485:Core/Src/bno055.c ****  *
17486:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
17487:Core/Src/bno055.c ****  *  selection of gyro range
17488:Core/Src/bno055.c ****  *
17489:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
17490:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17491:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
17492:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
17493:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
17494:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
ARM GAS  /tmp/ccWoU29M.s 			page 1036


17495:Core/Src/bno055.c ****  *
17496:Core/Src/bno055.c ****  */
17497:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_x_thres(u8 *gyro_highrate_x_thres_u8)
17498:Core/Src/bno055.c **** {
 37054              		.loc 1 17498 1 is_stmt 1 view -0
 37055              		.cfi_startproc
 37056              		@ args = 0, pretend = 0, frame = 8
 37057              		@ frame_needed = 0, uses_anonymous_args = 0
 37058              		.loc 1 17498 1 is_stmt 0 view .LVU10334
 37059 0000 30B5     		push	{r4, r5, lr}
 37060              	.LCFI997:
 37061              		.cfi_def_cfa_offset 12
 37062              		.cfi_offset 4, -12
 37063              		.cfi_offset 5, -8
 37064              		.cfi_offset 14, -4
 37065 0002 83B0     		sub	sp, sp, #12
 37066              	.LCFI998:
 37067              		.cfi_def_cfa_offset 24
17499:Core/Src/bno055.c ****     /* Variable used to return value of
17500:Core/Src/bno055.c ****      * communication routine*/
17501:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37068              		.loc 1 17501 5 is_stmt 1 view .LVU10335
 37069              	.LVL4547:
17502:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37070              		.loc 1 17502 5 view .LVU10336
 37071              		.loc 1 17502 8 is_stmt 0 view .LVU10337
 37072 0004 0023     		movs	r3, #0
 37073 0006 8DF80730 		strb	r3, [sp, #7]
17503:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37074              		.loc 1 17503 5 is_stmt 1 view .LVU10338
 37075              	.LVL4548:
17504:Core/Src/bno055.c **** 
17505:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17506:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37076              		.loc 1 17506 5 view .LVU10339
 37077              		.loc 1 17506 18 is_stmt 0 view .LVU10340
 37078 000a 144B     		ldr	r3, .L2596
 37079 000c 1B68     		ldr	r3, [r3]
 37080              		.loc 1 17506 8 view .LVU10341
 37081 000e F3B1     		cbz	r3, .L2592
 37082 0010 0446     		mov	r4, r0
17507:Core/Src/bno055.c ****     {
17508:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17509:Core/Src/bno055.c ****     }
17510:Core/Src/bno055.c ****     else
17511:Core/Src/bno055.c ****     {
17512:Core/Src/bno055.c ****         /*condition check for page, gyro highrate x threshold is
17513:Core/Src/bno055.c ****          * available in the page one*/
17514:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 37083              		.loc 1 17514 9 is_stmt 1 view .LVU10342
 37084              		.loc 1 17514 21 is_stmt 0 view .LVU10343
 37085 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37086              		.loc 1 17514 12 view .LVU10344
 37087 0014 012B     		cmp	r3, #1
 37088 0016 14D1     		bne	.L2595
 37089              	.LVL4549:
 37090              	.L2590:
ARM GAS  /tmp/ccWoU29M.s 			page 1037


17515:Core/Src/bno055.c ****         {
17516:Core/Src/bno055.c ****             /* Write page as one */
17517:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17518:Core/Src/bno055.c ****         }
17519:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 37091              		.loc 1 17519 53 discriminator 1 view .LVU10345
 37092 0018 104B     		ldr	r3, .L2596
 37093 001a 1B68     		ldr	r3, [r3]
 37094 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37095              		.loc 1 17519 41 discriminator 1 view .LVU10346
 37096 001e 012B     		cmp	r3, #1
 37097 0020 18D1     		bne	.L2593
 37098              	.L2591:
17520:Core/Src/bno055.c ****         {
17521:Core/Src/bno055.c ****             /* Read the value of gyro highrate threshold*/
17522:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 37099              		.loc 1 17522 13 is_stmt 1 view .LVU10347
 37100              		.loc 1 17522 32 is_stmt 0 view .LVU10348
 37101 0022 0E4B     		ldr	r3, .L2596
 37102 0024 1868     		ldr	r0, [r3]
 37103 0026 0569     		ldr	r5, [r0, #16]
 37104              		.loc 1 17522 24 view .LVU10349
 37105 0028 0123     		movs	r3, #1
 37106 002a 0DF10702 		add	r2, sp, #7
 37107 002e 1821     		movs	r1, #24
 37108 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37109 0032 A847     		blx	r5
 37110              	.LVL4550:
17523:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_X_THRES_REG,
17524:Core/Src/bno055.c ****                                                       &data_u8r,
17525:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17526:Core/Src/bno055.c ****             *gyro_highrate_x_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_THRES)
 37111              		.loc 1 17526 13 is_stmt 1 view .LVU10350
 37112              		.loc 1 17526 41 is_stmt 0 view .LVU10351
 37113 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 37114 0038 03F01F03 		and	r3, r3, #31
 37115              		.loc 1 17526 39 view .LVU10352
 37116 003c 2370     		strb	r3, [r4]
 37117              	.LVL4551:
 37118              	.L2589:
17527:Core/Src/bno055.c ****         }
17528:Core/Src/bno055.c ****         else
17529:Core/Src/bno055.c ****         {
17530:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17531:Core/Src/bno055.c ****         }
17532:Core/Src/bno055.c ****     }
17533:Core/Src/bno055.c **** 
17534:Core/Src/bno055.c ****     return com_rslt;
17535:Core/Src/bno055.c **** }
 37119              		.loc 1 17535 1 view .LVU10353
 37120 003e 03B0     		add	sp, sp, #12
 37121              	.LCFI999:
 37122              		.cfi_remember_state
 37123              		.cfi_def_cfa_offset 12
 37124              		@ sp needed
 37125 0040 30BD     		pop	{r4, r5, pc}
 37126              	.LVL4552:
ARM GAS  /tmp/ccWoU29M.s 			page 1038


 37127              	.L2595:
 37128              	.LCFI1000:
 37129              		.cfi_restore_state
17517:Core/Src/bno055.c ****         }
 37130              		.loc 1 17517 13 is_stmt 1 view .LVU10354
17517:Core/Src/bno055.c ****         }
 37131              		.loc 1 17517 23 is_stmt 0 view .LVU10355
 37132 0042 0120     		movs	r0, #1
 37133              	.LVL4553:
17517:Core/Src/bno055.c ****         }
 37134              		.loc 1 17517 23 view .LVU10356
 37135 0044 FFF7FEFF 		bl	bno055_write_page_id
 37136              	.LVL4554:
17519:Core/Src/bno055.c ****         {
 37137              		.loc 1 17519 9 is_stmt 1 view .LVU10357
17519:Core/Src/bno055.c ****         {
 37138              		.loc 1 17519 12 is_stmt 0 view .LVU10358
 37139 0048 0028     		cmp	r0, #0
 37140 004a EAD0     		beq	.L2591
 37141 004c E4E7     		b	.L2590
 37142              	.LVL4555:
 37143              	.L2592:
17508:Core/Src/bno055.c ****     }
 37144              		.loc 1 17508 16 view .LVU10359
 37145 004e 6FF07E00 		mvn	r0, #126
 37146              	.LVL4556:
17508:Core/Src/bno055.c ****     }
 37147              		.loc 1 17508 16 view .LVU10360
 37148 0052 F4E7     		b	.L2589
 37149              	.LVL4557:
 37150              	.L2593:
17530:Core/Src/bno055.c ****         }
 37151              		.loc 1 17530 22 view .LVU10361
 37152 0054 4FF0FF30 		mov	r0, #-1
 37153 0058 F1E7     		b	.L2589
 37154              	.L2597:
 37155 005a 00BF     		.align	2
 37156              	.L2596:
 37157 005c 00000000 		.word	.LANCHOR0
 37158              		.cfi_endproc
 37159              	.LFE251:
 37161              		.section	.text.bno055_set_gyro_highrate_x_thres,"ax",%progbits
 37162              		.align	1
 37163              		.global	bno055_set_gyro_highrate_x_thres
 37164              		.syntax unified
 37165              		.thumb
 37166              		.thumb_func
 37167              		.fpu fpv4-sp-d16
 37169              	bno055_set_gyro_highrate_x_thres:
 37170              	.LVL4558:
 37171              	.LFB252:
17536:Core/Src/bno055.c **** 
17537:Core/Src/bno055.c **** /*!
17538:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate x threshold
17539:Core/Src/bno055.c ****  *  from page one register from 0x18 bit 0 to 4
17540:Core/Src/bno055.c ****  *
17541:Core/Src/bno055.c ****  *  @param gyro_highrate_x_thres_u8 : The value of gyro x highrate threshold
ARM GAS  /tmp/ccWoU29M.s 			page 1039


17542:Core/Src/bno055.c ****  *
17543:Core/Src/bno055.c ****  *  @return results of bus communication function
17544:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17545:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17546:Core/Src/bno055.c ****  *
17547:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
17548:Core/Src/bno055.c ****  *  selection of gyro range
17549:Core/Src/bno055.c ****  *
17550:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
17551:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17552:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
17553:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
17554:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
17555:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
17556:Core/Src/bno055.c ****  *
17557:Core/Src/bno055.c ****  */
17558:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_x_thres(u8 gyro_highrate_x_thres_u8)
17559:Core/Src/bno055.c **** {
 37172              		.loc 1 17559 1 is_stmt 1 view -0
 37173              		.cfi_startproc
 37174              		@ args = 0, pretend = 0, frame = 8
 37175              		@ frame_needed = 0, uses_anonymous_args = 0
 37176              		.loc 1 17559 1 is_stmt 0 view .LVU10363
 37177 0000 30B5     		push	{r4, r5, lr}
 37178              	.LCFI1001:
 37179              		.cfi_def_cfa_offset 12
 37180              		.cfi_offset 4, -12
 37181              		.cfi_offset 5, -8
 37182              		.cfi_offset 14, -4
 37183 0002 83B0     		sub	sp, sp, #12
 37184              	.LCFI1002:
 37185              		.cfi_def_cfa_offset 24
17560:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37186              		.loc 1 17560 5 is_stmt 1 view .LVU10364
 37187              	.LVL4559:
17561:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37188              		.loc 1 17561 5 view .LVU10365
 37189              		.loc 1 17561 8 is_stmt 0 view .LVU10366
 37190 0004 0023     		movs	r3, #0
 37191 0006 8DF80730 		strb	r3, [sp, #7]
17562:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37192              		.loc 1 17562 5 is_stmt 1 view .LVU10367
 37193              	.LVL4560:
17563:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 37194              		.loc 1 17563 5 view .LVU10368
 37195              		.loc 1 17563 8 is_stmt 0 view .LVU10369
 37196 000a 8DF80630 		strb	r3, [sp, #6]
17564:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 37197              		.loc 1 17564 5 is_stmt 1 view .LVU10370
 37198              	.LVL4561:
17565:Core/Src/bno055.c **** 
17566:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17567:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37199              		.loc 1 17567 5 view .LVU10371
 37200              		.loc 1 17567 18 is_stmt 0 view .LVU10372
 37201 000e 294B     		ldr	r3, .L2610
 37202 0010 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccWoU29M.s 			page 1040


 37203              		.loc 1 17567 8 view .LVU10373
 37204 0012 002B     		cmp	r3, #0
 37205 0014 4AD0     		beq	.L2602
 37206 0016 0546     		mov	r5, r0
17568:Core/Src/bno055.c ****     {
17569:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17570:Core/Src/bno055.c ****     }
17571:Core/Src/bno055.c ****     else
17572:Core/Src/bno055.c ****     {
17573:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17574:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17575:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17576:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 37207              		.loc 1 17576 9 is_stmt 1 view .LVU10374
 37208              		.loc 1 17576 19 is_stmt 0 view .LVU10375
 37209 0018 0DF10600 		add	r0, sp, #6
 37210              	.LVL4562:
 37211              		.loc 1 17576 19 view .LVU10376
 37212 001c FFF7FEFF 		bl	bno055_get_operation_mode
 37213              	.LVL4563:
17577:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 37214              		.loc 1 17577 9 is_stmt 1 view .LVU10377
 37215              		.loc 1 17577 12 is_stmt 0 view .LVU10378
 37216 0020 0446     		mov	r4, r0
 37217 0022 90BB     		cbnz	r0, .L2603
17578:Core/Src/bno055.c ****         {
17579:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37218              		.loc 1 17579 13 is_stmt 1 view .LVU10379
 37219              		.loc 1 17579 32 is_stmt 0 view .LVU10380
 37220 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 37221              		.loc 1 17579 16 view .LVU10381
 37222 0028 1BB9     		cbnz	r3, .L2607
 37223              	.LVL4564:
 37224              	.L2601:
17580:Core/Src/bno055.c ****             {
17581:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17582:Core/Src/bno055.c ****             }
17583:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 37225              		.loc 1 17583 13 is_stmt 1 view .LVU10382
 37226              		.loc 1 17583 16 is_stmt 0 view .LVU10383
 37227 002a 44B1     		cbz	r4, .L2608
17584:Core/Src/bno055.c ****             {
17585:Core/Src/bno055.c ****                 /* Write page as one */
17586:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17587:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17588:Core/Src/bno055.c ****                 {
17589:Core/Src/bno055.c ****                     /* Write the value of
17590:Core/Src/bno055.c ****                      * gyro highrate x threshold*/
17591:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17592:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
17593:Core/Src/bno055.c ****                                                               &data_u8r,
17594:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17595:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17596:Core/Src/bno055.c ****                     {
17597:Core/Src/bno055.c ****                         data_u8r =
17598:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_THRES, gyro_highra
17599:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccWoU29M.s 			page 1041


17600:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
17601:Core/Src/bno055.c ****                                                                     &data_u8r,
17602:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
17603:Core/Src/bno055.c ****                     }
17604:Core/Src/bno055.c ****                 }
17605:Core/Src/bno055.c ****                 else
17606:Core/Src/bno055.c ****                 {
17607:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17608:Core/Src/bno055.c ****                 }
17609:Core/Src/bno055.c ****             }
17610:Core/Src/bno055.c ****             else
17611:Core/Src/bno055.c ****             {
17612:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 37228              		.loc 1 17612 26 view .LVU10384
 37229 002c 4FF0FF34 		mov	r4, #-1
 37230              	.LVL4565:
 37231              		.loc 1 17612 26 view .LVU10385
 37232 0030 2DE0     		b	.L2600
 37233              	.LVL4566:
 37234              	.L2607:
17581:Core/Src/bno055.c ****             }
 37235              		.loc 1 17581 17 is_stmt 1 view .LVU10386
17581:Core/Src/bno055.c ****             }
 37236              		.loc 1 17581 28 is_stmt 0 view .LVU10387
 37237 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 37238              	.LVL4567:
17581:Core/Src/bno055.c ****             }
 37239              		.loc 1 17581 25 view .LVU10388
 37240 0036 54FA80F4 		uxtab	r4, r4, r0
 37241 003a 64B2     		sxtb	r4, r4
 37242              	.LVL4568:
17581:Core/Src/bno055.c ****             }
 37243              		.loc 1 17581 25 view .LVU10389
 37244 003c F5E7     		b	.L2601
 37245              	.L2608:
17586:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37246              		.loc 1 17586 17 is_stmt 1 view .LVU10390
17586:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37247              		.loc 1 17586 30 is_stmt 0 view .LVU10391
 37248 003e 0120     		movs	r0, #1
 37249 0040 FFF7FEFF 		bl	bno055_write_page_id
 37250              	.LVL4569:
17587:Core/Src/bno055.c ****                 {
 37251              		.loc 1 17587 17 is_stmt 1 view .LVU10392
17587:Core/Src/bno055.c ****                 {
 37252              		.loc 1 17587 20 is_stmt 0 view .LVU10393
 37253 0044 48BB     		cbnz	r0, .L2605
17591:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
 37254              		.loc 1 17591 21 is_stmt 1 view .LVU10394
17591:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
 37255              		.loc 1 17591 40 is_stmt 0 view .LVU10395
 37256 0046 1B4B     		ldr	r3, .L2610
 37257 0048 1868     		ldr	r0, [r3]
 37258              	.LVL4570:
17591:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
 37259              		.loc 1 17591 40 view .LVU10396
 37260 004a 0469     		ldr	r4, [r0, #16]
ARM GAS  /tmp/ccWoU29M.s 			page 1042


 37261              	.LVL4571:
17591:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
 37262              		.loc 1 17591 32 view .LVU10397
 37263 004c 0123     		movs	r3, #1
 37264 004e 0DF10702 		add	r2, sp, #7
 37265 0052 1821     		movs	r1, #24
 37266 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37267 0056 A047     		blx	r4
 37268              	.LVL4572:
17595:Core/Src/bno055.c ****                     {
 37269              		.loc 1 17595 21 is_stmt 1 view .LVU10398
17595:Core/Src/bno055.c ****                     {
 37270              		.loc 1 17595 24 is_stmt 0 view .LVU10399
 37271 0058 0446     		mov	r4, r0
 37272 005a C0B9     		cbnz	r0, .L2600
17597:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_THRES, gyro_highra
 37273              		.loc 1 17597 25 is_stmt 1 view .LVU10400
17598:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37274              		.loc 1 17598 29 is_stmt 0 view .LVU10401
 37275 005c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 37276              	.LVL4573:
17598:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37277              		.loc 1 17598 29 view .LVU10402
 37278 0060 20F01F00 		bic	r0, r0, #31
 37279 0064 43B2     		sxtb	r3, r0
 37280 0066 05F01F00 		and	r0, r5, #31
 37281 006a 1843     		orrs	r0, r0, r3
17597:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_THRES, gyro_highra
 37282              		.loc 1 17597 34 view .LVU10403
 37283 006c 8DF80700 		strb	r0, [sp, #7]
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
 37284              		.loc 1 17599 25 is_stmt 1 view .LVU10404
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
 37285              		.loc 1 17599 45 is_stmt 0 view .LVU10405
 37286 0070 104B     		ldr	r3, .L2610
 37287 0072 1868     		ldr	r0, [r3]
 37288 0074 C568     		ldr	r5, [r0, #12]
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
 37289              		.loc 1 17599 37 view .LVU10406
 37290 0076 0123     		movs	r3, #1
 37291 0078 0DF10702 		add	r2, sp, #7
 37292 007c 1821     		movs	r1, #24
 37293 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37294 0080 A847     		blx	r5
 37295              	.LVL4574:
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
 37296              		.loc 1 17599 34 view .LVU10407
 37297 0082 54FA80F4 		uxtab	r4, r4, r0
 37298 0086 64B2     		sxtb	r4, r4
 37299              	.LVL4575:
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
 37300              		.loc 1 17599 34 view .LVU10408
 37301 0088 01E0     		b	.L2600
 37302              	.LVL4576:
 37303              	.L2603:
17613:Core/Src/bno055.c ****             }
17614:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 1043


17615:Core/Src/bno055.c ****         else
17616:Core/Src/bno055.c ****         {
17617:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 37304              		.loc 1 17617 22 view .LVU10409
 37305 008a 4FF0FF34 		mov	r4, #-1
 37306              	.LVL4577:
 37307              	.L2600:
17618:Core/Src/bno055.c ****         }
17619:Core/Src/bno055.c ****     }
17620:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37308              		.loc 1 17620 5 is_stmt 1 view .LVU10410
 37309              		.loc 1 17620 24 is_stmt 0 view .LVU10411
 37310 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 37311              		.loc 1 17620 8 view .LVU10412
 37312 0092 28B9     		cbnz	r0, .L2609
 37313              	.LVL4578:
 37314              	.L2599:
17621:Core/Src/bno055.c ****     {
17622:Core/Src/bno055.c ****         /* set the operation mode of
17623:Core/Src/bno055.c ****          * previous operation mode*/
17624:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17625:Core/Src/bno055.c ****     }
17626:Core/Src/bno055.c **** 
17627:Core/Src/bno055.c ****     return com_rslt;
17628:Core/Src/bno055.c **** }
 37315              		.loc 1 17628 1 view .LVU10413
 37316 0094 2046     		mov	r0, r4
 37317 0096 03B0     		add	sp, sp, #12
 37318              	.LCFI1003:
 37319              		.cfi_remember_state
 37320              		.cfi_def_cfa_offset 12
 37321              		@ sp needed
 37322 0098 30BD     		pop	{r4, r5, pc}
 37323              	.LVL4579:
 37324              	.L2605:
 37325              	.LCFI1004:
 37326              		.cfi_restore_state
17607:Core/Src/bno055.c ****                 }
 37327              		.loc 1 17607 30 view .LVU10414
 37328 009a 4FF0FF34 		mov	r4, #-1
 37329              	.LVL4580:
17607:Core/Src/bno055.c ****                 }
 37330              		.loc 1 17607 30 view .LVU10415
 37331 009e F6E7     		b	.L2600
 37332              	.LVL4581:
 37333              	.L2609:
17624:Core/Src/bno055.c ****     }
 37334              		.loc 1 17624 9 is_stmt 1 view .LVU10416
17624:Core/Src/bno055.c ****     }
 37335              		.loc 1 17624 21 is_stmt 0 view .LVU10417
 37336 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 37337              	.LVL4582:
17624:Core/Src/bno055.c ****     }
 37338              		.loc 1 17624 18 view .LVU10418
 37339 00a4 54FA80F4 		uxtab	r4, r4, r0
 37340              	.LVL4583:
17624:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 1044


 37341              		.loc 1 17624 18 view .LVU10419
 37342 00a8 64B2     		sxtb	r4, r4
 37343              	.LVL4584:
17624:Core/Src/bno055.c ****     }
 37344              		.loc 1 17624 18 view .LVU10420
 37345 00aa F3E7     		b	.L2599
 37346              	.LVL4585:
 37347              	.L2602:
17569:Core/Src/bno055.c ****     }
 37348              		.loc 1 17569 16 view .LVU10421
 37349 00ac 6FF07E04 		mvn	r4, #126
 37350 00b0 F0E7     		b	.L2599
 37351              	.L2611:
 37352 00b2 00BF     		.align	2
 37353              	.L2610:
 37354 00b4 00000000 		.word	.LANCHOR0
 37355              		.cfi_endproc
 37356              	.LFE252:
 37358              		.section	.text.bno055_get_gyro_highrate_x_hyst,"ax",%progbits
 37359              		.align	1
 37360              		.global	bno055_get_gyro_highrate_x_hyst
 37361              		.syntax unified
 37362              		.thumb
 37363              		.thumb_func
 37364              		.fpu fpv4-sp-d16
 37366              	bno055_get_gyro_highrate_x_hyst:
 37367              	.LVL4586:
 37368              	.LFB253:
17629:Core/Src/bno055.c **** 
17630:Core/Src/bno055.c **** /*!
17631:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate x hysteresis
17632:Core/Src/bno055.c ****  *  from page one register from 0x18 bit 5 to 6
17633:Core/Src/bno055.c ****  *
17634:Core/Src/bno055.c ****  *  @param gyro_highrate_x_hyst_u8 : The value of gyro highrate x hysteresis
17635:Core/Src/bno055.c ****  *
17636:Core/Src/bno055.c ****  *  @return results of bus communication function
17637:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17638:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17639:Core/Src/bno055.c ****  *
17640:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
17641:Core/Src/bno055.c ****  *
17642:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_x_hyst_u8) *4 LSB
17643:Core/Src/bno055.c ****  *
17644:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
17645:Core/Src/bno055.c ****  *
17646:Core/Src/bno055.c ****  *  gyro_range_u8     | hysteresis      |     LSB
17647:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17648:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
17649:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
17650:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
17651:Core/Src/bno055.c ****  *
17652:Core/Src/bno055.c ****  */
17653:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_x_hyst(u8 *gyro_highrate_x_hyst_u8)
17654:Core/Src/bno055.c **** {
 37369              		.loc 1 17654 1 is_stmt 1 view -0
 37370              		.cfi_startproc
 37371              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccWoU29M.s 			page 1045


 37372              		@ frame_needed = 0, uses_anonymous_args = 0
 37373              		.loc 1 17654 1 is_stmt 0 view .LVU10423
 37374 0000 30B5     		push	{r4, r5, lr}
 37375              	.LCFI1005:
 37376              		.cfi_def_cfa_offset 12
 37377              		.cfi_offset 4, -12
 37378              		.cfi_offset 5, -8
 37379              		.cfi_offset 14, -4
 37380 0002 83B0     		sub	sp, sp, #12
 37381              	.LCFI1006:
 37382              		.cfi_def_cfa_offset 24
17655:Core/Src/bno055.c ****     /* Variable used to return value of
17656:Core/Src/bno055.c ****      * communication routine*/
17657:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37383              		.loc 1 17657 5 is_stmt 1 view .LVU10424
 37384              	.LVL4587:
17658:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37385              		.loc 1 17658 5 view .LVU10425
 37386              		.loc 1 17658 8 is_stmt 0 view .LVU10426
 37387 0004 0023     		movs	r3, #0
 37388 0006 8DF80730 		strb	r3, [sp, #7]
17659:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37389              		.loc 1 17659 5 is_stmt 1 view .LVU10427
 37390              	.LVL4588:
17660:Core/Src/bno055.c **** 
17661:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17662:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37391              		.loc 1 17662 5 view .LVU10428
 37392              		.loc 1 17662 18 is_stmt 0 view .LVU10429
 37393 000a 144B     		ldr	r3, .L2620
 37394 000c 1B68     		ldr	r3, [r3]
 37395              		.loc 1 17662 8 view .LVU10430
 37396 000e F3B1     		cbz	r3, .L2616
 37397 0010 0446     		mov	r4, r0
17663:Core/Src/bno055.c ****     {
17664:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17665:Core/Src/bno055.c ****     }
17666:Core/Src/bno055.c ****     else
17667:Core/Src/bno055.c ****     {
17668:Core/Src/bno055.c ****         /*condition check for page,gyro highrate x hysteresis is
17669:Core/Src/bno055.c ****          * available in the page one*/
17670:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 37398              		.loc 1 17670 9 is_stmt 1 view .LVU10431
 37399              		.loc 1 17670 21 is_stmt 0 view .LVU10432
 37400 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37401              		.loc 1 17670 12 view .LVU10433
 37402 0014 012B     		cmp	r3, #1
 37403 0016 14D1     		bne	.L2619
 37404              	.LVL4589:
 37405              	.L2614:
17671:Core/Src/bno055.c ****         {
17672:Core/Src/bno055.c ****             /* Write page as one */
17673:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17674:Core/Src/bno055.c ****         }
17675:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 37406              		.loc 1 17675 53 discriminator 1 view .LVU10434
 37407 0018 104B     		ldr	r3, .L2620
ARM GAS  /tmp/ccWoU29M.s 			page 1046


 37408 001a 1B68     		ldr	r3, [r3]
 37409 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37410              		.loc 1 17675 41 discriminator 1 view .LVU10435
 37411 001e 012B     		cmp	r3, #1
 37412 0020 18D1     		bne	.L2617
 37413              	.L2615:
17676:Core/Src/bno055.c ****         {
17677:Core/Src/bno055.c ****             /* Read the value of gyro highrate x hysteresis*/
17678:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 37414              		.loc 1 17678 13 is_stmt 1 view .LVU10436
 37415              		.loc 1 17678 32 is_stmt 0 view .LVU10437
 37416 0022 0E4B     		ldr	r3, .L2620
 37417 0024 1868     		ldr	r0, [r3]
 37418 0026 0569     		ldr	r5, [r0, #16]
 37419              		.loc 1 17678 24 view .LVU10438
 37420 0028 0123     		movs	r3, #1
 37421 002a 0DF10702 		add	r2, sp, #7
 37422 002e 1821     		movs	r1, #24
 37423 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37424 0032 A847     		blx	r5
 37425              	.LVL4590:
17679:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_X_HYST_REG,
17680:Core/Src/bno055.c ****                                                       &data_u8r,
17681:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17682:Core/Src/bno055.c ****             *gyro_highrate_x_hyst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_HYST);
 37426              		.loc 1 17682 13 is_stmt 1 view .LVU10439
 37427              		.loc 1 17682 40 is_stmt 0 view .LVU10440
 37428 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 37429 0038 C3F34113 		ubfx	r3, r3, #5, #2
 37430              		.loc 1 17682 38 view .LVU10441
 37431 003c 2370     		strb	r3, [r4]
 37432              	.LVL4591:
 37433              	.L2613:
17683:Core/Src/bno055.c ****         }
17684:Core/Src/bno055.c ****         else
17685:Core/Src/bno055.c ****         {
17686:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17687:Core/Src/bno055.c ****         }
17688:Core/Src/bno055.c ****     }
17689:Core/Src/bno055.c **** 
17690:Core/Src/bno055.c ****     return com_rslt;
17691:Core/Src/bno055.c **** }
 37434              		.loc 1 17691 1 view .LVU10442
 37435 003e 03B0     		add	sp, sp, #12
 37436              	.LCFI1007:
 37437              		.cfi_remember_state
 37438              		.cfi_def_cfa_offset 12
 37439              		@ sp needed
 37440 0040 30BD     		pop	{r4, r5, pc}
 37441              	.LVL4592:
 37442              	.L2619:
 37443              	.LCFI1008:
 37444              		.cfi_restore_state
17673:Core/Src/bno055.c ****         }
 37445              		.loc 1 17673 13 is_stmt 1 view .LVU10443
17673:Core/Src/bno055.c ****         }
 37446              		.loc 1 17673 23 is_stmt 0 view .LVU10444
ARM GAS  /tmp/ccWoU29M.s 			page 1047


 37447 0042 0120     		movs	r0, #1
 37448              	.LVL4593:
17673:Core/Src/bno055.c ****         }
 37449              		.loc 1 17673 23 view .LVU10445
 37450 0044 FFF7FEFF 		bl	bno055_write_page_id
 37451              	.LVL4594:
17675:Core/Src/bno055.c ****         {
 37452              		.loc 1 17675 9 is_stmt 1 view .LVU10446
17675:Core/Src/bno055.c ****         {
 37453              		.loc 1 17675 12 is_stmt 0 view .LVU10447
 37454 0048 0028     		cmp	r0, #0
 37455 004a EAD0     		beq	.L2615
 37456 004c E4E7     		b	.L2614
 37457              	.LVL4595:
 37458              	.L2616:
17664:Core/Src/bno055.c ****     }
 37459              		.loc 1 17664 16 view .LVU10448
 37460 004e 6FF07E00 		mvn	r0, #126
 37461              	.LVL4596:
17664:Core/Src/bno055.c ****     }
 37462              		.loc 1 17664 16 view .LVU10449
 37463 0052 F4E7     		b	.L2613
 37464              	.LVL4597:
 37465              	.L2617:
17686:Core/Src/bno055.c ****         }
 37466              		.loc 1 17686 22 view .LVU10450
 37467 0054 4FF0FF30 		mov	r0, #-1
 37468 0058 F1E7     		b	.L2613
 37469              	.L2621:
 37470 005a 00BF     		.align	2
 37471              	.L2620:
 37472 005c 00000000 		.word	.LANCHOR0
 37473              		.cfi_endproc
 37474              	.LFE253:
 37476              		.section	.text.bno055_set_gyro_highrate_x_hyst,"ax",%progbits
 37477              		.align	1
 37478              		.global	bno055_set_gyro_highrate_x_hyst
 37479              		.syntax unified
 37480              		.thumb
 37481              		.thumb_func
 37482              		.fpu fpv4-sp-d16
 37484              	bno055_set_gyro_highrate_x_hyst:
 37485              	.LVL4598:
 37486              	.LFB254:
17692:Core/Src/bno055.c **** 
17693:Core/Src/bno055.c **** /*!
17694:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate x hysteresis
17695:Core/Src/bno055.c ****  *  from page one register from 0x18 bit 5 to 6
17696:Core/Src/bno055.c ****  *
17697:Core/Src/bno055.c ****  *  @param gyro_highrate_x_hyst_u8 : The value of gyro highrate x hysteresis
17698:Core/Src/bno055.c ****  *
17699:Core/Src/bno055.c ****  *  @return results of bus communication function
17700:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17701:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17702:Core/Src/bno055.c ****  *
17703:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
17704:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 1048


17705:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_x_hyst_u8) *4 LSB
17706:Core/Src/bno055.c ****  *
17707:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
17708:Core/Src/bno055.c ****  *
17709:Core/Src/bno055.c ****  *  gyro_range_u8     | hysteresis      |     LSB
17710:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17711:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
17712:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
17713:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
17714:Core/Src/bno055.c ****  *
17715:Core/Src/bno055.c ****  */
17716:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_x_hyst(u8 gyro_highrate_x_hyst_u8)
17717:Core/Src/bno055.c **** {
 37487              		.loc 1 17717 1 is_stmt 1 view -0
 37488              		.cfi_startproc
 37489              		@ args = 0, pretend = 0, frame = 8
 37490              		@ frame_needed = 0, uses_anonymous_args = 0
 37491              		.loc 1 17717 1 is_stmt 0 view .LVU10452
 37492 0000 30B5     		push	{r4, r5, lr}
 37493              	.LCFI1009:
 37494              		.cfi_def_cfa_offset 12
 37495              		.cfi_offset 4, -12
 37496              		.cfi_offset 5, -8
 37497              		.cfi_offset 14, -4
 37498 0002 83B0     		sub	sp, sp, #12
 37499              	.LCFI1010:
 37500              		.cfi_def_cfa_offset 24
17718:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37501              		.loc 1 17718 5 is_stmt 1 view .LVU10453
 37502              	.LVL4599:
17719:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37503              		.loc 1 17719 5 view .LVU10454
 37504              		.loc 1 17719 8 is_stmt 0 view .LVU10455
 37505 0004 0023     		movs	r3, #0
 37506 0006 8DF80730 		strb	r3, [sp, #7]
17720:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37507              		.loc 1 17720 5 is_stmt 1 view .LVU10456
 37508              	.LVL4600:
17721:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 37509              		.loc 1 17721 5 view .LVU10457
 37510              		.loc 1 17721 8 is_stmt 0 view .LVU10458
 37511 000a 8DF80630 		strb	r3, [sp, #6]
17722:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 37512              		.loc 1 17722 5 is_stmt 1 view .LVU10459
 37513              	.LVL4601:
17723:Core/Src/bno055.c **** 
17724:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17725:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37514              		.loc 1 17725 5 view .LVU10460
 37515              		.loc 1 17725 18 is_stmt 0 view .LVU10461
 37516 000e 2A4B     		ldr	r3, .L2634
 37517 0010 1B68     		ldr	r3, [r3]
 37518              		.loc 1 17725 8 view .LVU10462
 37519 0012 002B     		cmp	r3, #0
 37520 0014 4CD0     		beq	.L2626
 37521 0016 0546     		mov	r5, r0
17726:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccWoU29M.s 			page 1049


17727:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17728:Core/Src/bno055.c ****     }
17729:Core/Src/bno055.c ****     else
17730:Core/Src/bno055.c ****     {
17731:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17732:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17733:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17734:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 37522              		.loc 1 17734 9 is_stmt 1 view .LVU10463
 37523              		.loc 1 17734 19 is_stmt 0 view .LVU10464
 37524 0018 0DF10600 		add	r0, sp, #6
 37525              	.LVL4602:
 37526              		.loc 1 17734 19 view .LVU10465
 37527 001c FFF7FEFF 		bl	bno055_get_operation_mode
 37528              	.LVL4603:
17735:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 37529              		.loc 1 17735 9 is_stmt 1 view .LVU10466
 37530              		.loc 1 17735 12 is_stmt 0 view .LVU10467
 37531 0020 0446     		mov	r4, r0
 37532 0022 0028     		cmp	r0, #0
 37533 0024 33D1     		bne	.L2627
17736:Core/Src/bno055.c ****         {
17737:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37534              		.loc 1 17737 13 is_stmt 1 view .LVU10468
 37535              		.loc 1 17737 32 is_stmt 0 view .LVU10469
 37536 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 37537              		.loc 1 17737 16 view .LVU10470
 37538 002a 1BB9     		cbnz	r3, .L2631
 37539              	.LVL4604:
 37540              	.L2625:
17738:Core/Src/bno055.c ****             {
17739:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17740:Core/Src/bno055.c ****             }
17741:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 37541              		.loc 1 17741 13 is_stmt 1 view .LVU10471
 37542              		.loc 1 17741 16 is_stmt 0 view .LVU10472
 37543 002c 44B1     		cbz	r4, .L2632
17742:Core/Src/bno055.c ****             {
17743:Core/Src/bno055.c ****                 /* Write page as one */
17744:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17745:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17746:Core/Src/bno055.c ****                 {
17747:Core/Src/bno055.c ****                     /*Write the value of
17748:Core/Src/bno055.c ****                      * gyro highrate x hysteresis*/
17749:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17750:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
17751:Core/Src/bno055.c ****                                                               &data_u8r,
17752:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17753:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17754:Core/Src/bno055.c ****                     {
17755:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_HYST, gyro_
17756:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17757:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
17758:Core/Src/bno055.c ****                                                                     &data_u8r,
17759:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
17760:Core/Src/bno055.c ****                     }
17761:Core/Src/bno055.c ****                 }
ARM GAS  /tmp/ccWoU29M.s 			page 1050


17762:Core/Src/bno055.c ****                 else
17763:Core/Src/bno055.c ****                 {
17764:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17765:Core/Src/bno055.c ****                 }
17766:Core/Src/bno055.c ****             }
17767:Core/Src/bno055.c ****             else
17768:Core/Src/bno055.c ****             {
17769:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 37544              		.loc 1 17769 26 view .LVU10473
 37545 002e 4FF0FF34 		mov	r4, #-1
 37546              	.LVL4605:
 37547              		.loc 1 17769 26 view .LVU10474
 37548 0032 2EE0     		b	.L2624
 37549              	.LVL4606:
 37550              	.L2631:
17739:Core/Src/bno055.c ****             }
 37551              		.loc 1 17739 17 is_stmt 1 view .LVU10475
17739:Core/Src/bno055.c ****             }
 37552              		.loc 1 17739 28 is_stmt 0 view .LVU10476
 37553 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 37554              	.LVL4607:
17739:Core/Src/bno055.c ****             }
 37555              		.loc 1 17739 25 view .LVU10477
 37556 0038 54FA80F4 		uxtab	r4, r4, r0
 37557 003c 64B2     		sxtb	r4, r4
 37558              	.LVL4608:
17739:Core/Src/bno055.c ****             }
 37559              		.loc 1 17739 25 view .LVU10478
 37560 003e F5E7     		b	.L2625
 37561              	.L2632:
17744:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37562              		.loc 1 17744 17 is_stmt 1 view .LVU10479
17744:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37563              		.loc 1 17744 30 is_stmt 0 view .LVU10480
 37564 0040 0120     		movs	r0, #1
 37565 0042 FFF7FEFF 		bl	bno055_write_page_id
 37566              	.LVL4609:
17745:Core/Src/bno055.c ****                 {
 37567              		.loc 1 17745 17 is_stmt 1 view .LVU10481
17745:Core/Src/bno055.c ****                 {
 37568              		.loc 1 17745 20 is_stmt 0 view .LVU10482
 37569 0046 50BB     		cbnz	r0, .L2629
17749:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
 37570              		.loc 1 17749 21 is_stmt 1 view .LVU10483
17749:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
 37571              		.loc 1 17749 40 is_stmt 0 view .LVU10484
 37572 0048 1B4B     		ldr	r3, .L2634
 37573 004a 1868     		ldr	r0, [r3]
 37574              	.LVL4610:
17749:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
 37575              		.loc 1 17749 40 view .LVU10485
 37576 004c 0469     		ldr	r4, [r0, #16]
 37577              	.LVL4611:
17749:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
 37578              		.loc 1 17749 32 view .LVU10486
 37579 004e 0123     		movs	r3, #1
 37580 0050 0DF10702 		add	r2, sp, #7
ARM GAS  /tmp/ccWoU29M.s 			page 1051


 37581 0054 1821     		movs	r1, #24
 37582 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37583 0058 A047     		blx	r4
 37584              	.LVL4612:
17753:Core/Src/bno055.c ****                     {
 37585              		.loc 1 17753 21 is_stmt 1 view .LVU10487
17753:Core/Src/bno055.c ****                     {
 37586              		.loc 1 17753 24 is_stmt 0 view .LVU10488
 37587 005a 0446     		mov	r4, r0
 37588 005c C8B9     		cbnz	r0, .L2624
17755:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37589              		.loc 1 17755 25 is_stmt 1 view .LVU10489
17755:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37590              		.loc 1 17755 36 is_stmt 0 view .LVU10490
 37591 005e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 37592              	.LVL4613:
17755:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37593              		.loc 1 17755 36 view .LVU10491
 37594 0062 20F06000 		bic	r0, r0, #96
 37595 0066 43B2     		sxtb	r3, r0
 37596 0068 6801     		lsls	r0, r5, #5
 37597 006a 00F06000 		and	r0, r0, #96
 37598 006e 1843     		orrs	r0, r0, r3
17755:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37599              		.loc 1 17755 34 view .LVU10492
 37600 0070 8DF80700 		strb	r0, [sp, #7]
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 37601              		.loc 1 17756 25 is_stmt 1 view .LVU10493
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 37602              		.loc 1 17756 45 is_stmt 0 view .LVU10494
 37603 0074 104B     		ldr	r3, .L2634
 37604 0076 1868     		ldr	r0, [r3]
 37605 0078 C568     		ldr	r5, [r0, #12]
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 37606              		.loc 1 17756 37 view .LVU10495
 37607 007a 0123     		movs	r3, #1
 37608 007c 0DF10702 		add	r2, sp, #7
 37609 0080 1821     		movs	r1, #24
 37610 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37611 0084 A847     		blx	r5
 37612              	.LVL4614:
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 37613              		.loc 1 17756 34 view .LVU10496
 37614 0086 54FA80F4 		uxtab	r4, r4, r0
 37615 008a 64B2     		sxtb	r4, r4
 37616              	.LVL4615:
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 37617              		.loc 1 17756 34 view .LVU10497
 37618 008c 01E0     		b	.L2624
 37619              	.LVL4616:
 37620              	.L2627:
17770:Core/Src/bno055.c ****             }
17771:Core/Src/bno055.c ****         }
17772:Core/Src/bno055.c ****         else
17773:Core/Src/bno055.c ****         {
17774:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 37621              		.loc 1 17774 22 view .LVU10498
ARM GAS  /tmp/ccWoU29M.s 			page 1052


 37622 008e 4FF0FF34 		mov	r4, #-1
 37623              	.LVL4617:
 37624              	.L2624:
17775:Core/Src/bno055.c ****         }
17776:Core/Src/bno055.c ****     }
17777:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37625              		.loc 1 17777 5 is_stmt 1 view .LVU10499
 37626              		.loc 1 17777 24 is_stmt 0 view .LVU10500
 37627 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 37628              		.loc 1 17777 8 view .LVU10501
 37629 0096 28B9     		cbnz	r0, .L2633
 37630              	.LVL4618:
 37631              	.L2623:
17778:Core/Src/bno055.c ****     {
17779:Core/Src/bno055.c ****         /* set the operation mode of
17780:Core/Src/bno055.c ****          * previous operation mode*/
17781:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17782:Core/Src/bno055.c ****     }
17783:Core/Src/bno055.c **** 
17784:Core/Src/bno055.c ****     return com_rslt;
17785:Core/Src/bno055.c **** }
 37632              		.loc 1 17785 1 view .LVU10502
 37633 0098 2046     		mov	r0, r4
 37634 009a 03B0     		add	sp, sp, #12
 37635              	.LCFI1011:
 37636              		.cfi_remember_state
 37637              		.cfi_def_cfa_offset 12
 37638              		@ sp needed
 37639 009c 30BD     		pop	{r4, r5, pc}
 37640              	.LVL4619:
 37641              	.L2629:
 37642              	.LCFI1012:
 37643              		.cfi_restore_state
17764:Core/Src/bno055.c ****                 }
 37644              		.loc 1 17764 30 view .LVU10503
 37645 009e 4FF0FF34 		mov	r4, #-1
 37646              	.LVL4620:
17764:Core/Src/bno055.c ****                 }
 37647              		.loc 1 17764 30 view .LVU10504
 37648 00a2 F6E7     		b	.L2624
 37649              	.LVL4621:
 37650              	.L2633:
17781:Core/Src/bno055.c ****     }
 37651              		.loc 1 17781 9 is_stmt 1 view .LVU10505
17781:Core/Src/bno055.c ****     }
 37652              		.loc 1 17781 21 is_stmt 0 view .LVU10506
 37653 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 37654              	.LVL4622:
17781:Core/Src/bno055.c ****     }
 37655              		.loc 1 17781 18 view .LVU10507
 37656 00a8 54FA80F4 		uxtab	r4, r4, r0
 37657              	.LVL4623:
17781:Core/Src/bno055.c ****     }
 37658              		.loc 1 17781 18 view .LVU10508
 37659 00ac 64B2     		sxtb	r4, r4
 37660              	.LVL4624:
17781:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 1053


 37661              		.loc 1 17781 18 view .LVU10509
 37662 00ae F3E7     		b	.L2623
 37663              	.LVL4625:
 37664              	.L2626:
17727:Core/Src/bno055.c ****     }
 37665              		.loc 1 17727 16 view .LVU10510
 37666 00b0 6FF07E04 		mvn	r4, #126
 37667 00b4 F0E7     		b	.L2623
 37668              	.L2635:
 37669 00b6 00BF     		.align	2
 37670              	.L2634:
 37671 00b8 00000000 		.word	.LANCHOR0
 37672              		.cfi_endproc
 37673              	.LFE254:
 37675              		.section	.text.bno055_get_gyro_highrate_x_durn,"ax",%progbits
 37676              		.align	1
 37677              		.global	bno055_get_gyro_highrate_x_durn
 37678              		.syntax unified
 37679              		.thumb
 37680              		.thumb_func
 37681              		.fpu fpv4-sp-d16
 37683              	bno055_get_gyro_highrate_x_durn:
 37684              	.LVL4626:
 37685              	.LFB255:
17786:Core/Src/bno055.c **** 
17787:Core/Src/bno055.c **** /*!
17788:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate x duration
17789:Core/Src/bno055.c ****  *  from page one register from 0x19 bit 0 to 7
17790:Core/Src/bno055.c ****  *
17791:Core/Src/bno055.c ****  *  @param gyro_highrate_x_durn_u8 : The value of gyro highrate x duration
17792:Core/Src/bno055.c ****  *
17793:Core/Src/bno055.c ****  *  @return results of bus communication function
17794:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17795:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17796:Core/Src/bno055.c ****  *
17797:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
17798:Core/Src/bno055.c ****  *
17799:Core/Src/bno055.c ****  *  (1 + gyro_highrate_x_durn_u8)*2.5ms
17800:Core/Src/bno055.c ****  *
17801:Core/Src/bno055.c ****  */
17802:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_x_durn(u8 *gyro_highrate_x_durn_u8)
17803:Core/Src/bno055.c **** {
 37686              		.loc 1 17803 1 is_stmt 1 view -0
 37687              		.cfi_startproc
 37688              		@ args = 0, pretend = 0, frame = 8
 37689              		@ frame_needed = 0, uses_anonymous_args = 0
 37690              		.loc 1 17803 1 is_stmt 0 view .LVU10512
 37691 0000 70B5     		push	{r4, r5, r6, lr}
 37692              	.LCFI1013:
 37693              		.cfi_def_cfa_offset 16
 37694              		.cfi_offset 4, -16
 37695              		.cfi_offset 5, -12
 37696              		.cfi_offset 6, -8
 37697              		.cfi_offset 14, -4
 37698 0002 82B0     		sub	sp, sp, #8
 37699              	.LCFI1014:
 37700              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccWoU29M.s 			page 1054


17804:Core/Src/bno055.c ****     /* Variable used to return value of
17805:Core/Src/bno055.c ****      * communication routine*/
17806:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37701              		.loc 1 17806 5 is_stmt 1 view .LVU10513
 37702              	.LVL4627:
17807:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37703              		.loc 1 17807 5 view .LVU10514
 37704              		.loc 1 17807 8 is_stmt 0 view .LVU10515
 37705 0004 0023     		movs	r3, #0
 37706 0006 8DF80730 		strb	r3, [sp, #7]
17808:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37707              		.loc 1 17808 5 is_stmt 1 view .LVU10516
 37708              	.LVL4628:
17809:Core/Src/bno055.c **** 
17810:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17811:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37709              		.loc 1 17811 5 view .LVU10517
 37710              		.loc 1 17811 18 is_stmt 0 view .LVU10518
 37711 000a 134B     		ldr	r3, .L2644
 37712 000c 1B68     		ldr	r3, [r3]
 37713              		.loc 1 17811 8 view .LVU10519
 37714 000e E3B1     		cbz	r3, .L2640
 37715 0010 0546     		mov	r5, r0
17812:Core/Src/bno055.c ****     {
17813:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17814:Core/Src/bno055.c ****     }
17815:Core/Src/bno055.c ****     else
17816:Core/Src/bno055.c ****     {
17817:Core/Src/bno055.c ****         /*condition check for page, gyro highrate x duration is
17818:Core/Src/bno055.c ****          * available in the page one*/
17819:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 37716              		.loc 1 17819 9 is_stmt 1 view .LVU10520
 37717              		.loc 1 17819 21 is_stmt 0 view .LVU10521
 37718 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37719              		.loc 1 17819 12 view .LVU10522
 37720 0014 012B     		cmp	r3, #1
 37721 0016 12D1     		bne	.L2643
 37722              	.LVL4629:
 37723              	.L2638:
17820:Core/Src/bno055.c ****         {
17821:Core/Src/bno055.c ****             /* Write page as one */
17822:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17823:Core/Src/bno055.c ****         }
17824:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 37724              		.loc 1 17824 53 discriminator 1 view .LVU10523
 37725 0018 0F4B     		ldr	r3, .L2644
 37726 001a 1B68     		ldr	r3, [r3]
 37727 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37728              		.loc 1 17824 41 discriminator 1 view .LVU10524
 37729 001e 012B     		cmp	r3, #1
 37730 0020 16D1     		bne	.L2641
 37731              	.L2639:
17825:Core/Src/bno055.c ****         {
17826:Core/Src/bno055.c ****             /* Read the value of gyro highrate x duration*/
17827:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 37732              		.loc 1 17827 13 is_stmt 1 view .LVU10525
 37733              		.loc 1 17827 32 is_stmt 0 view .LVU10526
ARM GAS  /tmp/ccWoU29M.s 			page 1055


 37734 0022 0D4B     		ldr	r3, .L2644
 37735 0024 1C68     		ldr	r4, [r3]
 37736 0026 2669     		ldr	r6, [r4, #16]
 37737              		.loc 1 17827 24 view .LVU10527
 37738 0028 0123     		movs	r3, #1
 37739 002a 0DF10702 		add	r2, sp, #7
 37740 002e 1921     		movs	r1, #25
 37741 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 37742 0032 B047     		blx	r6
 37743              	.LVL4630:
17828:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_X_DURN_REG,
17829:Core/Src/bno055.c ****                                                       &data_u8r,
17830:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17831:Core/Src/bno055.c ****             *gyro_highrate_x_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_DURN);
 37744              		.loc 1 17831 13 is_stmt 1 view .LVU10528
 37745              		.loc 1 17831 38 is_stmt 0 view .LVU10529
 37746 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 37747 0038 2B70     		strb	r3, [r5]
 37748              	.LVL4631:
 37749              	.L2637:
17832:Core/Src/bno055.c ****         }
17833:Core/Src/bno055.c ****         else
17834:Core/Src/bno055.c ****         {
17835:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17836:Core/Src/bno055.c ****         }
17837:Core/Src/bno055.c ****     }
17838:Core/Src/bno055.c **** 
17839:Core/Src/bno055.c ****     return com_rslt;
17840:Core/Src/bno055.c **** }
 37750              		.loc 1 17840 1 view .LVU10530
 37751 003a 02B0     		add	sp, sp, #8
 37752              	.LCFI1015:
 37753              		.cfi_remember_state
 37754              		.cfi_def_cfa_offset 16
 37755              		@ sp needed
 37756 003c 70BD     		pop	{r4, r5, r6, pc}
 37757              	.LVL4632:
 37758              	.L2643:
 37759              	.LCFI1016:
 37760              		.cfi_restore_state
17822:Core/Src/bno055.c ****         }
 37761              		.loc 1 17822 13 is_stmt 1 view .LVU10531
17822:Core/Src/bno055.c ****         }
 37762              		.loc 1 17822 23 is_stmt 0 view .LVU10532
 37763 003e 0120     		movs	r0, #1
 37764              	.LVL4633:
17822:Core/Src/bno055.c ****         }
 37765              		.loc 1 17822 23 view .LVU10533
 37766 0040 FFF7FEFF 		bl	bno055_write_page_id
 37767              	.LVL4634:
17824:Core/Src/bno055.c ****         {
 37768              		.loc 1 17824 9 is_stmt 1 view .LVU10534
17824:Core/Src/bno055.c ****         {
 37769              		.loc 1 17824 12 is_stmt 0 view .LVU10535
 37770 0044 0028     		cmp	r0, #0
 37771 0046 ECD0     		beq	.L2639
 37772 0048 E6E7     		b	.L2638
ARM GAS  /tmp/ccWoU29M.s 			page 1056


 37773              	.LVL4635:
 37774              	.L2640:
17813:Core/Src/bno055.c ****     }
 37775              		.loc 1 17813 16 view .LVU10536
 37776 004a 6FF07E00 		mvn	r0, #126
 37777              	.LVL4636:
17813:Core/Src/bno055.c ****     }
 37778              		.loc 1 17813 16 view .LVU10537
 37779 004e F4E7     		b	.L2637
 37780              	.LVL4637:
 37781              	.L2641:
17835:Core/Src/bno055.c ****         }
 37782              		.loc 1 17835 22 view .LVU10538
 37783 0050 4FF0FF30 		mov	r0, #-1
 37784 0054 F1E7     		b	.L2637
 37785              	.L2645:
 37786 0056 00BF     		.align	2
 37787              	.L2644:
 37788 0058 00000000 		.word	.LANCHOR0
 37789              		.cfi_endproc
 37790              	.LFE255:
 37792              		.section	.text.bno055_set_gyro_highrate_x_durn,"ax",%progbits
 37793              		.align	1
 37794              		.global	bno055_set_gyro_highrate_x_durn
 37795              		.syntax unified
 37796              		.thumb
 37797              		.thumb_func
 37798              		.fpu fpv4-sp-d16
 37800              	bno055_set_gyro_highrate_x_durn:
 37801              	.LVL4638:
 37802              	.LFB256:
17841:Core/Src/bno055.c **** 
17842:Core/Src/bno055.c **** /*!
17843:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate x duration
17844:Core/Src/bno055.c ****  *  from page one register from 0x19 bit 0 to 7
17845:Core/Src/bno055.c ****  *
17846:Core/Src/bno055.c ****  *  @param gyro_highrate_x_durn_u8 : The value of gyro highrate x duration
17847:Core/Src/bno055.c ****  *
17848:Core/Src/bno055.c ****  *  @return results of bus communication function
17849:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17850:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17851:Core/Src/bno055.c ****  *
17852:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
17853:Core/Src/bno055.c ****  *
17854:Core/Src/bno055.c ****  *  (1 + gyro_highrate_x_durn_u8)*2.5ms
17855:Core/Src/bno055.c ****  */
17856:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_x_durn(u8 gyro_highrate_x_durn_u8)
17857:Core/Src/bno055.c **** {
 37803              		.loc 1 17857 1 is_stmt 1 view -0
 37804              		.cfi_startproc
 37805              		@ args = 0, pretend = 0, frame = 8
 37806              		@ frame_needed = 0, uses_anonymous_args = 0
 37807              		.loc 1 17857 1 is_stmt 0 view .LVU10540
 37808 0000 30B5     		push	{r4, r5, lr}
 37809              	.LCFI1017:
 37810              		.cfi_def_cfa_offset 12
 37811              		.cfi_offset 4, -12
ARM GAS  /tmp/ccWoU29M.s 			page 1057


 37812              		.cfi_offset 5, -8
 37813              		.cfi_offset 14, -4
 37814 0002 83B0     		sub	sp, sp, #12
 37815              	.LCFI1018:
 37816              		.cfi_def_cfa_offset 24
17858:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37817              		.loc 1 17858 5 is_stmt 1 view .LVU10541
 37818              	.LVL4639:
17859:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37819              		.loc 1 17859 5 view .LVU10542
 37820              		.loc 1 17859 8 is_stmt 0 view .LVU10543
 37821 0004 0023     		movs	r3, #0
 37822 0006 8DF80730 		strb	r3, [sp, #7]
17860:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37823              		.loc 1 17860 5 is_stmt 1 view .LVU10544
 37824              	.LVL4640:
17861:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 37825              		.loc 1 17861 5 view .LVU10545
 37826              		.loc 1 17861 8 is_stmt 0 view .LVU10546
 37827 000a 8DF80630 		strb	r3, [sp, #6]
17862:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 37828              		.loc 1 17862 5 is_stmt 1 view .LVU10547
 37829              	.LVL4641:
17863:Core/Src/bno055.c **** 
17864:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17865:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37830              		.loc 1 17865 5 view .LVU10548
 37831              		.loc 1 17865 18 is_stmt 0 view .LVU10549
 37832 000e 254B     		ldr	r3, .L2658
 37833 0010 1B68     		ldr	r3, [r3]
 37834              		.loc 1 17865 8 view .LVU10550
 37835 0012 002B     		cmp	r3, #0
 37836 0014 42D0     		beq	.L2650
 37837 0016 0546     		mov	r5, r0
17866:Core/Src/bno055.c ****     {
17867:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17868:Core/Src/bno055.c ****     }
17869:Core/Src/bno055.c ****     else
17870:Core/Src/bno055.c ****     {
17871:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17872:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17873:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17874:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 37838              		.loc 1 17874 9 is_stmt 1 view .LVU10551
 37839              		.loc 1 17874 19 is_stmt 0 view .LVU10552
 37840 0018 0DF10600 		add	r0, sp, #6
 37841              	.LVL4642:
 37842              		.loc 1 17874 19 view .LVU10553
 37843 001c FFF7FEFF 		bl	bno055_get_operation_mode
 37844              	.LVL4643:
17875:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 37845              		.loc 1 17875 9 is_stmt 1 view .LVU10554
 37846              		.loc 1 17875 12 is_stmt 0 view .LVU10555
 37847 0020 0446     		mov	r4, r0
 37848 0022 50BB     		cbnz	r0, .L2651
17876:Core/Src/bno055.c ****         {
17877:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
ARM GAS  /tmp/ccWoU29M.s 			page 1058


 37849              		.loc 1 17877 13 is_stmt 1 view .LVU10556
 37850              		.loc 1 17877 32 is_stmt 0 view .LVU10557
 37851 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 37852              		.loc 1 17877 16 view .LVU10558
 37853 0028 1BB9     		cbnz	r3, .L2655
 37854              	.LVL4644:
 37855              	.L2649:
17878:Core/Src/bno055.c ****             {
17879:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17880:Core/Src/bno055.c ****             }
17881:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 37856              		.loc 1 17881 13 is_stmt 1 view .LVU10559
 37857              		.loc 1 17881 16 is_stmt 0 view .LVU10560
 37858 002a 44B1     		cbz	r4, .L2656
17882:Core/Src/bno055.c ****             {
17883:Core/Src/bno055.c ****                 /* Write page as one */
17884:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17885:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17886:Core/Src/bno055.c ****                 {
17887:Core/Src/bno055.c ****                     /* Write the value
17888:Core/Src/bno055.c ****                      * of gyro highrate x duration*/
17889:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17890:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
17891:Core/Src/bno055.c ****                                                               &data_u8r,
17892:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17893:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17894:Core/Src/bno055.c ****                     {
17895:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_DURN, gyro_
17896:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17897:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
17898:Core/Src/bno055.c ****                                                                     &data_u8r,
17899:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
17900:Core/Src/bno055.c ****                     }
17901:Core/Src/bno055.c ****                 }
17902:Core/Src/bno055.c ****                 else
17903:Core/Src/bno055.c ****                 {
17904:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17905:Core/Src/bno055.c ****                 }
17906:Core/Src/bno055.c ****             }
17907:Core/Src/bno055.c ****             else
17908:Core/Src/bno055.c ****             {
17909:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 37859              		.loc 1 17909 26 view .LVU10561
 37860 002c 4FF0FF34 		mov	r4, #-1
 37861              	.LVL4645:
 37862              		.loc 1 17909 26 view .LVU10562
 37863 0030 25E0     		b	.L2648
 37864              	.LVL4646:
 37865              	.L2655:
17879:Core/Src/bno055.c ****             }
 37866              		.loc 1 17879 17 is_stmt 1 view .LVU10563
17879:Core/Src/bno055.c ****             }
 37867              		.loc 1 17879 28 is_stmt 0 view .LVU10564
 37868 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 37869              	.LVL4647:
17879:Core/Src/bno055.c ****             }
 37870              		.loc 1 17879 25 view .LVU10565
ARM GAS  /tmp/ccWoU29M.s 			page 1059


 37871 0036 54FA80F4 		uxtab	r4, r4, r0
 37872 003a 64B2     		sxtb	r4, r4
 37873              	.LVL4648:
17879:Core/Src/bno055.c ****             }
 37874              		.loc 1 17879 25 view .LVU10566
 37875 003c F5E7     		b	.L2649
 37876              	.L2656:
17884:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37877              		.loc 1 17884 17 is_stmt 1 view .LVU10567
17884:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37878              		.loc 1 17884 30 is_stmt 0 view .LVU10568
 37879 003e 0120     		movs	r0, #1
 37880 0040 FFF7FEFF 		bl	bno055_write_page_id
 37881              	.LVL4649:
17885:Core/Src/bno055.c ****                 {
 37882              		.loc 1 17885 17 is_stmt 1 view .LVU10569
17885:Core/Src/bno055.c ****                 {
 37883              		.loc 1 17885 20 is_stmt 0 view .LVU10570
 37884 0044 08BB     		cbnz	r0, .L2653
17889:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
 37885              		.loc 1 17889 21 is_stmt 1 view .LVU10571
17889:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
 37886              		.loc 1 17889 40 is_stmt 0 view .LVU10572
 37887 0046 174B     		ldr	r3, .L2658
 37888 0048 1868     		ldr	r0, [r3]
 37889              	.LVL4650:
17889:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
 37890              		.loc 1 17889 40 view .LVU10573
 37891 004a 0469     		ldr	r4, [r0, #16]
 37892              	.LVL4651:
17889:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
 37893              		.loc 1 17889 32 view .LVU10574
 37894 004c 0123     		movs	r3, #1
 37895 004e 0DF10702 		add	r2, sp, #7
 37896 0052 1921     		movs	r1, #25
 37897 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37898 0056 A047     		blx	r4
 37899              	.LVL4652:
17893:Core/Src/bno055.c ****                     {
 37900              		.loc 1 17893 21 is_stmt 1 view .LVU10575
17893:Core/Src/bno055.c ****                     {
 37901              		.loc 1 17893 24 is_stmt 0 view .LVU10576
 37902 0058 0446     		mov	r4, r0
 37903 005a 80B9     		cbnz	r0, .L2648
17895:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37904              		.loc 1 17895 25 is_stmt 1 view .LVU10577
17895:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37905              		.loc 1 17895 34 is_stmt 0 view .LVU10578
 37906 005c 8DF80750 		strb	r5, [sp, #7]
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 37907              		.loc 1 17896 25 is_stmt 1 view .LVU10579
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 37908              		.loc 1 17896 45 is_stmt 0 view .LVU10580
 37909 0060 104B     		ldr	r3, .L2658
 37910 0062 1868     		ldr	r0, [r3]
 37911              	.LVL4653:
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
ARM GAS  /tmp/ccWoU29M.s 			page 1060


 37912              		.loc 1 17896 45 view .LVU10581
 37913 0064 C568     		ldr	r5, [r0, #12]
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 37914              		.loc 1 17896 37 view .LVU10582
 37915 0066 0123     		movs	r3, #1
 37916 0068 0DF10702 		add	r2, sp, #7
 37917 006c 1921     		movs	r1, #25
 37918 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37919 0070 A847     		blx	r5
 37920              	.LVL4654:
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 37921              		.loc 1 17896 34 view .LVU10583
 37922 0072 54FA80F4 		uxtab	r4, r4, r0
 37923 0076 64B2     		sxtb	r4, r4
 37924              	.LVL4655:
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 37925              		.loc 1 17896 34 view .LVU10584
 37926 0078 01E0     		b	.L2648
 37927              	.LVL4656:
 37928              	.L2651:
17910:Core/Src/bno055.c ****             }
17911:Core/Src/bno055.c ****         }
17912:Core/Src/bno055.c ****         else
17913:Core/Src/bno055.c ****         {
17914:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 37929              		.loc 1 17914 22 view .LVU10585
 37930 007a 4FF0FF34 		mov	r4, #-1
 37931              	.LVL4657:
 37932              	.L2648:
17915:Core/Src/bno055.c ****         }
17916:Core/Src/bno055.c ****     }
17917:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37933              		.loc 1 17917 5 is_stmt 1 view .LVU10586
 37934              		.loc 1 17917 24 is_stmt 0 view .LVU10587
 37935 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 37936              		.loc 1 17917 8 view .LVU10588
 37937 0082 28B9     		cbnz	r0, .L2657
 37938              	.LVL4658:
 37939              	.L2647:
17918:Core/Src/bno055.c ****     {
17919:Core/Src/bno055.c ****         /* set the operation mode of
17920:Core/Src/bno055.c ****          * previous operation mode*/
17921:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17922:Core/Src/bno055.c ****     }
17923:Core/Src/bno055.c **** 
17924:Core/Src/bno055.c ****     return com_rslt;
17925:Core/Src/bno055.c **** }
 37940              		.loc 1 17925 1 view .LVU10589
 37941 0084 2046     		mov	r0, r4
 37942 0086 03B0     		add	sp, sp, #12
 37943              	.LCFI1019:
 37944              		.cfi_remember_state
 37945              		.cfi_def_cfa_offset 12
 37946              		@ sp needed
 37947 0088 30BD     		pop	{r4, r5, pc}
 37948              	.LVL4659:
 37949              	.L2653:
ARM GAS  /tmp/ccWoU29M.s 			page 1061


 37950              	.LCFI1020:
 37951              		.cfi_restore_state
17904:Core/Src/bno055.c ****                 }
 37952              		.loc 1 17904 30 view .LVU10590
 37953 008a 4FF0FF34 		mov	r4, #-1
 37954              	.LVL4660:
17904:Core/Src/bno055.c ****                 }
 37955              		.loc 1 17904 30 view .LVU10591
 37956 008e F6E7     		b	.L2648
 37957              	.LVL4661:
 37958              	.L2657:
17921:Core/Src/bno055.c ****     }
 37959              		.loc 1 17921 9 is_stmt 1 view .LVU10592
17921:Core/Src/bno055.c ****     }
 37960              		.loc 1 17921 21 is_stmt 0 view .LVU10593
 37961 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 37962              	.LVL4662:
17921:Core/Src/bno055.c ****     }
 37963              		.loc 1 17921 18 view .LVU10594
 37964 0094 54FA80F4 		uxtab	r4, r4, r0
 37965              	.LVL4663:
17921:Core/Src/bno055.c ****     }
 37966              		.loc 1 17921 18 view .LVU10595
 37967 0098 64B2     		sxtb	r4, r4
 37968              	.LVL4664:
17921:Core/Src/bno055.c ****     }
 37969              		.loc 1 17921 18 view .LVU10596
 37970 009a F3E7     		b	.L2647
 37971              	.LVL4665:
 37972              	.L2650:
17867:Core/Src/bno055.c ****     }
 37973              		.loc 1 17867 16 view .LVU10597
 37974 009c 6FF07E04 		mvn	r4, #126
 37975 00a0 F0E7     		b	.L2647
 37976              	.L2659:
 37977 00a2 00BF     		.align	2
 37978              	.L2658:
 37979 00a4 00000000 		.word	.LANCHOR0
 37980              		.cfi_endproc
 37981              	.LFE256:
 37983              		.section	.text.bno055_get_gyro_highrate_y_thres,"ax",%progbits
 37984              		.align	1
 37985              		.global	bno055_get_gyro_highrate_y_thres
 37986              		.syntax unified
 37987              		.thumb
 37988              		.thumb_func
 37989              		.fpu fpv4-sp-d16
 37991              	bno055_get_gyro_highrate_y_thres:
 37992              	.LVL4666:
 37993              	.LFB257:
17926:Core/Src/bno055.c **** 
17927:Core/Src/bno055.c **** /*!
17928:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate y threshold
17929:Core/Src/bno055.c ****  *  from page one register from 0x1A bit 0 to 4
17930:Core/Src/bno055.c ****  *
17931:Core/Src/bno055.c ****  *  @param gyro_highrate_y_thres_u8 : The value of gyro highrate y threshold
17932:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccWoU29M.s 			page 1062


17933:Core/Src/bno055.c ****  *  @return results of bus communication function
17934:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17935:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17936:Core/Src/bno055.c ****  *
17937:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
17938:Core/Src/bno055.c ****  *  selection of gyro range
17939:Core/Src/bno055.c ****  *
17940:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
17941:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17942:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
17943:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
17944:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
17945:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
17946:Core/Src/bno055.c ****  *
17947:Core/Src/bno055.c ****  */
17948:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_y_thres(u8 *gyro_highrate_y_thres_u8)
17949:Core/Src/bno055.c **** {
 37994              		.loc 1 17949 1 is_stmt 1 view -0
 37995              		.cfi_startproc
 37996              		@ args = 0, pretend = 0, frame = 8
 37997              		@ frame_needed = 0, uses_anonymous_args = 0
 37998              		.loc 1 17949 1 is_stmt 0 view .LVU10599
 37999 0000 30B5     		push	{r4, r5, lr}
 38000              	.LCFI1021:
 38001              		.cfi_def_cfa_offset 12
 38002              		.cfi_offset 4, -12
 38003              		.cfi_offset 5, -8
 38004              		.cfi_offset 14, -4
 38005 0002 83B0     		sub	sp, sp, #12
 38006              	.LCFI1022:
 38007              		.cfi_def_cfa_offset 24
17950:Core/Src/bno055.c ****     /* Variable used to return value of
17951:Core/Src/bno055.c ****      * communication routine*/
17952:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38008              		.loc 1 17952 5 is_stmt 1 view .LVU10600
 38009              	.LVL4667:
17953:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38010              		.loc 1 17953 5 view .LVU10601
 38011              		.loc 1 17953 8 is_stmt 0 view .LVU10602
 38012 0004 0023     		movs	r3, #0
 38013 0006 8DF80730 		strb	r3, [sp, #7]
17954:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38014              		.loc 1 17954 5 is_stmt 1 view .LVU10603
 38015              	.LVL4668:
17955:Core/Src/bno055.c **** 
17956:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17957:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38016              		.loc 1 17957 5 view .LVU10604
 38017              		.loc 1 17957 18 is_stmt 0 view .LVU10605
 38018 000a 144B     		ldr	r3, .L2668
 38019 000c 1B68     		ldr	r3, [r3]
 38020              		.loc 1 17957 8 view .LVU10606
 38021 000e F3B1     		cbz	r3, .L2664
 38022 0010 0446     		mov	r4, r0
17958:Core/Src/bno055.c ****     {
17959:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17960:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccWoU29M.s 			page 1063


17961:Core/Src/bno055.c ****     else
17962:Core/Src/bno055.c ****     {
17963:Core/Src/bno055.c ****         /*condition check for page, gyro highrate y threshold is
17964:Core/Src/bno055.c ****          * available in the page one*/
17965:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 38023              		.loc 1 17965 9 is_stmt 1 view .LVU10607
 38024              		.loc 1 17965 21 is_stmt 0 view .LVU10608
 38025 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38026              		.loc 1 17965 12 view .LVU10609
 38027 0014 012B     		cmp	r3, #1
 38028 0016 14D1     		bne	.L2667
 38029              	.LVL4669:
 38030              	.L2662:
17966:Core/Src/bno055.c ****         {
17967:Core/Src/bno055.c ****             /* Write page as one */
17968:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17969:Core/Src/bno055.c ****         }
17970:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 38031              		.loc 1 17970 53 discriminator 1 view .LVU10610
 38032 0018 104B     		ldr	r3, .L2668
 38033 001a 1B68     		ldr	r3, [r3]
 38034 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38035              		.loc 1 17970 41 discriminator 1 view .LVU10611
 38036 001e 012B     		cmp	r3, #1
 38037 0020 18D1     		bne	.L2665
 38038              	.L2663:
17971:Core/Src/bno055.c ****         {
17972:Core/Src/bno055.c ****             /* Read the value of gyro highrate y threshold*/
17973:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 38039              		.loc 1 17973 13 is_stmt 1 view .LVU10612
 38040              		.loc 1 17973 32 is_stmt 0 view .LVU10613
 38041 0022 0E4B     		ldr	r3, .L2668
 38042 0024 1868     		ldr	r0, [r3]
 38043 0026 0569     		ldr	r5, [r0, #16]
 38044              		.loc 1 17973 24 view .LVU10614
 38045 0028 0123     		movs	r3, #1
 38046 002a 0DF10702 		add	r2, sp, #7
 38047 002e 1A21     		movs	r1, #26
 38048 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38049 0032 A847     		blx	r5
 38050              	.LVL4670:
17974:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Y_THRES_REG,
17975:Core/Src/bno055.c ****                                                       &data_u8r,
17976:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17977:Core/Src/bno055.c ****             *gyro_highrate_y_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_THRES)
 38051              		.loc 1 17977 13 is_stmt 1 view .LVU10615
 38052              		.loc 1 17977 41 is_stmt 0 view .LVU10616
 38053 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 38054 0038 03F01F03 		and	r3, r3, #31
 38055              		.loc 1 17977 39 view .LVU10617
 38056 003c 2370     		strb	r3, [r4]
 38057              	.LVL4671:
 38058              	.L2661:
17978:Core/Src/bno055.c ****         }
17979:Core/Src/bno055.c ****         else
17980:Core/Src/bno055.c ****         {
17981:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 1064


17982:Core/Src/bno055.c ****         }
17983:Core/Src/bno055.c ****     }
17984:Core/Src/bno055.c **** 
17985:Core/Src/bno055.c ****     return com_rslt;
17986:Core/Src/bno055.c **** }
 38059              		.loc 1 17986 1 view .LVU10618
 38060 003e 03B0     		add	sp, sp, #12
 38061              	.LCFI1023:
 38062              		.cfi_remember_state
 38063              		.cfi_def_cfa_offset 12
 38064              		@ sp needed
 38065 0040 30BD     		pop	{r4, r5, pc}
 38066              	.LVL4672:
 38067              	.L2667:
 38068              	.LCFI1024:
 38069              		.cfi_restore_state
17968:Core/Src/bno055.c ****         }
 38070              		.loc 1 17968 13 is_stmt 1 view .LVU10619
17968:Core/Src/bno055.c ****         }
 38071              		.loc 1 17968 23 is_stmt 0 view .LVU10620
 38072 0042 0120     		movs	r0, #1
 38073              	.LVL4673:
17968:Core/Src/bno055.c ****         }
 38074              		.loc 1 17968 23 view .LVU10621
 38075 0044 FFF7FEFF 		bl	bno055_write_page_id
 38076              	.LVL4674:
17970:Core/Src/bno055.c ****         {
 38077              		.loc 1 17970 9 is_stmt 1 view .LVU10622
17970:Core/Src/bno055.c ****         {
 38078              		.loc 1 17970 12 is_stmt 0 view .LVU10623
 38079 0048 0028     		cmp	r0, #0
 38080 004a EAD0     		beq	.L2663
 38081 004c E4E7     		b	.L2662
 38082              	.LVL4675:
 38083              	.L2664:
17959:Core/Src/bno055.c ****     }
 38084              		.loc 1 17959 16 view .LVU10624
 38085 004e 6FF07E00 		mvn	r0, #126
 38086              	.LVL4676:
17959:Core/Src/bno055.c ****     }
 38087              		.loc 1 17959 16 view .LVU10625
 38088 0052 F4E7     		b	.L2661
 38089              	.LVL4677:
 38090              	.L2665:
17981:Core/Src/bno055.c ****         }
 38091              		.loc 1 17981 22 view .LVU10626
 38092 0054 4FF0FF30 		mov	r0, #-1
 38093 0058 F1E7     		b	.L2661
 38094              	.L2669:
 38095 005a 00BF     		.align	2
 38096              	.L2668:
 38097 005c 00000000 		.word	.LANCHOR0
 38098              		.cfi_endproc
 38099              	.LFE257:
 38101              		.section	.text.bno055_set_gyro_highrate_y_thres,"ax",%progbits
 38102              		.align	1
 38103              		.global	bno055_set_gyro_highrate_y_thres
ARM GAS  /tmp/ccWoU29M.s 			page 1065


 38104              		.syntax unified
 38105              		.thumb
 38106              		.thumb_func
 38107              		.fpu fpv4-sp-d16
 38109              	bno055_set_gyro_highrate_y_thres:
 38110              	.LVL4678:
 38111              	.LFB258:
17987:Core/Src/bno055.c **** 
17988:Core/Src/bno055.c **** /*!
17989:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate y threshold
17990:Core/Src/bno055.c ****  *  from page one register from 0x1A bit 0 to 4
17991:Core/Src/bno055.c ****  *
17992:Core/Src/bno055.c ****  *  @param gyro_highrate_y_thres_u8 : The value of gyro highrate y threshold
17993:Core/Src/bno055.c ****  *
17994:Core/Src/bno055.c ****  *  @return results of bus communication function
17995:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17996:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17997:Core/Src/bno055.c ****  *
17998:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
17999:Core/Src/bno055.c ****  *  selection of gyro range
18000:Core/Src/bno055.c ****  *
18001:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
18002:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18003:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
18004:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
18005:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
18006:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
18007:Core/Src/bno055.c ****  *
18008:Core/Src/bno055.c ****  */
18009:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_y_thres(u8 gyro_highrate_y_thres_u8)
18010:Core/Src/bno055.c **** {
 38112              		.loc 1 18010 1 is_stmt 1 view -0
 38113              		.cfi_startproc
 38114              		@ args = 0, pretend = 0, frame = 8
 38115              		@ frame_needed = 0, uses_anonymous_args = 0
 38116              		.loc 1 18010 1 is_stmt 0 view .LVU10628
 38117 0000 30B5     		push	{r4, r5, lr}
 38118              	.LCFI1025:
 38119              		.cfi_def_cfa_offset 12
 38120              		.cfi_offset 4, -12
 38121              		.cfi_offset 5, -8
 38122              		.cfi_offset 14, -4
 38123 0002 83B0     		sub	sp, sp, #12
 38124              	.LCFI1026:
 38125              		.cfi_def_cfa_offset 24
18011:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38126              		.loc 1 18011 5 is_stmt 1 view .LVU10629
 38127              	.LVL4679:
18012:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38128              		.loc 1 18012 5 view .LVU10630
 38129              		.loc 1 18012 8 is_stmt 0 view .LVU10631
 38130 0004 0023     		movs	r3, #0
 38131 0006 8DF80730 		strb	r3, [sp, #7]
18013:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38132              		.loc 1 18013 5 is_stmt 1 view .LVU10632
 38133              	.LVL4680:
18014:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
ARM GAS  /tmp/ccWoU29M.s 			page 1066


 38134              		.loc 1 18014 5 view .LVU10633
 38135              		.loc 1 18014 8 is_stmt 0 view .LVU10634
 38136 000a 8DF80630 		strb	r3, [sp, #6]
18015:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 38137              		.loc 1 18015 5 is_stmt 1 view .LVU10635
 38138              	.LVL4681:
18016:Core/Src/bno055.c **** 
18017:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18018:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38139              		.loc 1 18018 5 view .LVU10636
 38140              		.loc 1 18018 18 is_stmt 0 view .LVU10637
 38141 000e 294B     		ldr	r3, .L2682
 38142 0010 1B68     		ldr	r3, [r3]
 38143              		.loc 1 18018 8 view .LVU10638
 38144 0012 002B     		cmp	r3, #0
 38145 0014 4AD0     		beq	.L2674
 38146 0016 0546     		mov	r5, r0
18019:Core/Src/bno055.c ****     {
18020:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18021:Core/Src/bno055.c ****     }
18022:Core/Src/bno055.c ****     else
18023:Core/Src/bno055.c ****     {
18024:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18025:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18026:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18027:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 38147              		.loc 1 18027 9 is_stmt 1 view .LVU10639
 38148              		.loc 1 18027 19 is_stmt 0 view .LVU10640
 38149 0018 0DF10600 		add	r0, sp, #6
 38150              	.LVL4682:
 38151              		.loc 1 18027 19 view .LVU10641
 38152 001c FFF7FEFF 		bl	bno055_get_operation_mode
 38153              	.LVL4683:
18028:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 38154              		.loc 1 18028 9 is_stmt 1 view .LVU10642
 38155              		.loc 1 18028 12 is_stmt 0 view .LVU10643
 38156 0020 0446     		mov	r4, r0
 38157 0022 90BB     		cbnz	r0, .L2675
18029:Core/Src/bno055.c ****         {
18030:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38158              		.loc 1 18030 13 is_stmt 1 view .LVU10644
 38159              		.loc 1 18030 32 is_stmt 0 view .LVU10645
 38160 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 38161              		.loc 1 18030 16 view .LVU10646
 38162 0028 1BB9     		cbnz	r3, .L2679
 38163              	.LVL4684:
 38164              	.L2673:
18031:Core/Src/bno055.c ****             {
18032:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18033:Core/Src/bno055.c ****             }
18034:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 38165              		.loc 1 18034 13 is_stmt 1 view .LVU10647
 38166              		.loc 1 18034 16 is_stmt 0 view .LVU10648
 38167 002a 44B1     		cbz	r4, .L2680
18035:Core/Src/bno055.c ****             {
18036:Core/Src/bno055.c ****                 /* Write page as one */
18037:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
ARM GAS  /tmp/ccWoU29M.s 			page 1067


18038:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18039:Core/Src/bno055.c ****                 {
18040:Core/Src/bno055.c ****                     /* Write the value
18041:Core/Src/bno055.c ****                      * of gyro highrate y threshold*/
18042:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18043:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
18044:Core/Src/bno055.c ****                                                               &data_u8r,
18045:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18046:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18047:Core/Src/bno055.c ****                     {
18048:Core/Src/bno055.c ****                         data_u8r =
18049:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_THRES, gyro_highra
18050:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18051:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
18052:Core/Src/bno055.c ****                                                                     &data_u8r,
18053:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18054:Core/Src/bno055.c ****                     }
18055:Core/Src/bno055.c ****                 }
18056:Core/Src/bno055.c ****                 else
18057:Core/Src/bno055.c ****                 {
18058:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18059:Core/Src/bno055.c ****                 }
18060:Core/Src/bno055.c ****             }
18061:Core/Src/bno055.c ****             else
18062:Core/Src/bno055.c ****             {
18063:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 38168              		.loc 1 18063 26 view .LVU10649
 38169 002c 4FF0FF34 		mov	r4, #-1
 38170              	.LVL4685:
 38171              		.loc 1 18063 26 view .LVU10650
 38172 0030 2DE0     		b	.L2672
 38173              	.LVL4686:
 38174              	.L2679:
18032:Core/Src/bno055.c ****             }
 38175              		.loc 1 18032 17 is_stmt 1 view .LVU10651
18032:Core/Src/bno055.c ****             }
 38176              		.loc 1 18032 28 is_stmt 0 view .LVU10652
 38177 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 38178              	.LVL4687:
18032:Core/Src/bno055.c ****             }
 38179              		.loc 1 18032 25 view .LVU10653
 38180 0036 54FA80F4 		uxtab	r4, r4, r0
 38181 003a 64B2     		sxtb	r4, r4
 38182              	.LVL4688:
18032:Core/Src/bno055.c ****             }
 38183              		.loc 1 18032 25 view .LVU10654
 38184 003c F5E7     		b	.L2673
 38185              	.L2680:
18037:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38186              		.loc 1 18037 17 is_stmt 1 view .LVU10655
18037:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38187              		.loc 1 18037 30 is_stmt 0 view .LVU10656
 38188 003e 0120     		movs	r0, #1
 38189 0040 FFF7FEFF 		bl	bno055_write_page_id
 38190              	.LVL4689:
18038:Core/Src/bno055.c ****                 {
 38191              		.loc 1 18038 17 is_stmt 1 view .LVU10657
ARM GAS  /tmp/ccWoU29M.s 			page 1068


18038:Core/Src/bno055.c ****                 {
 38192              		.loc 1 18038 20 is_stmt 0 view .LVU10658
 38193 0044 48BB     		cbnz	r0, .L2677
18042:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
 38194              		.loc 1 18042 21 is_stmt 1 view .LVU10659
18042:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
 38195              		.loc 1 18042 40 is_stmt 0 view .LVU10660
 38196 0046 1B4B     		ldr	r3, .L2682
 38197 0048 1868     		ldr	r0, [r3]
 38198              	.LVL4690:
18042:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
 38199              		.loc 1 18042 40 view .LVU10661
 38200 004a 0469     		ldr	r4, [r0, #16]
 38201              	.LVL4691:
18042:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
 38202              		.loc 1 18042 32 view .LVU10662
 38203 004c 0123     		movs	r3, #1
 38204 004e 0DF10702 		add	r2, sp, #7
 38205 0052 1A21     		movs	r1, #26
 38206 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38207 0056 A047     		blx	r4
 38208              	.LVL4692:
18046:Core/Src/bno055.c ****                     {
 38209              		.loc 1 18046 21 is_stmt 1 view .LVU10663
18046:Core/Src/bno055.c ****                     {
 38210              		.loc 1 18046 24 is_stmt 0 view .LVU10664
 38211 0058 0446     		mov	r4, r0
 38212 005a C0B9     		cbnz	r0, .L2672
18048:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_THRES, gyro_highra
 38213              		.loc 1 18048 25 is_stmt 1 view .LVU10665
18049:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38214              		.loc 1 18049 29 is_stmt 0 view .LVU10666
 38215 005c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 38216              	.LVL4693:
18049:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38217              		.loc 1 18049 29 view .LVU10667
 38218 0060 20F01F00 		bic	r0, r0, #31
 38219 0064 43B2     		sxtb	r3, r0
 38220 0066 05F01F00 		and	r0, r5, #31
 38221 006a 1843     		orrs	r0, r0, r3
18048:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_THRES, gyro_highra
 38222              		.loc 1 18048 34 view .LVU10668
 38223 006c 8DF80700 		strb	r0, [sp, #7]
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 38224              		.loc 1 18050 25 is_stmt 1 view .LVU10669
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 38225              		.loc 1 18050 45 is_stmt 0 view .LVU10670
 38226 0070 104B     		ldr	r3, .L2682
 38227 0072 1868     		ldr	r0, [r3]
 38228 0074 C568     		ldr	r5, [r0, #12]
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 38229              		.loc 1 18050 37 view .LVU10671
 38230 0076 0123     		movs	r3, #1
 38231 0078 0DF10702 		add	r2, sp, #7
 38232 007c 1A21     		movs	r1, #26
 38233 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38234 0080 A847     		blx	r5
ARM GAS  /tmp/ccWoU29M.s 			page 1069


 38235              	.LVL4694:
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 38236              		.loc 1 18050 34 view .LVU10672
 38237 0082 54FA80F4 		uxtab	r4, r4, r0
 38238 0086 64B2     		sxtb	r4, r4
 38239              	.LVL4695:
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 38240              		.loc 1 18050 34 view .LVU10673
 38241 0088 01E0     		b	.L2672
 38242              	.LVL4696:
 38243              	.L2675:
18064:Core/Src/bno055.c ****             }
18065:Core/Src/bno055.c ****         }
18066:Core/Src/bno055.c ****         else
18067:Core/Src/bno055.c ****         {
18068:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 38244              		.loc 1 18068 22 view .LVU10674
 38245 008a 4FF0FF34 		mov	r4, #-1
 38246              	.LVL4697:
 38247              	.L2672:
18069:Core/Src/bno055.c ****         }
18070:Core/Src/bno055.c ****     }
18071:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38248              		.loc 1 18071 5 is_stmt 1 view .LVU10675
 38249              		.loc 1 18071 24 is_stmt 0 view .LVU10676
 38250 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 38251              		.loc 1 18071 8 view .LVU10677
 38252 0092 28B9     		cbnz	r0, .L2681
 38253              	.LVL4698:
 38254              	.L2671:
18072:Core/Src/bno055.c ****     {
18073:Core/Src/bno055.c ****         /* set the operation mode of
18074:Core/Src/bno055.c ****          * previous operation mode*/
18075:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18076:Core/Src/bno055.c ****     }
18077:Core/Src/bno055.c **** 
18078:Core/Src/bno055.c ****     return com_rslt;
18079:Core/Src/bno055.c **** }
 38255              		.loc 1 18079 1 view .LVU10678
 38256 0094 2046     		mov	r0, r4
 38257 0096 03B0     		add	sp, sp, #12
 38258              	.LCFI1027:
 38259              		.cfi_remember_state
 38260              		.cfi_def_cfa_offset 12
 38261              		@ sp needed
 38262 0098 30BD     		pop	{r4, r5, pc}
 38263              	.LVL4699:
 38264              	.L2677:
 38265              	.LCFI1028:
 38266              		.cfi_restore_state
18058:Core/Src/bno055.c ****                 }
 38267              		.loc 1 18058 30 view .LVU10679
 38268 009a 4FF0FF34 		mov	r4, #-1
 38269              	.LVL4700:
18058:Core/Src/bno055.c ****                 }
 38270              		.loc 1 18058 30 view .LVU10680
 38271 009e F6E7     		b	.L2672
ARM GAS  /tmp/ccWoU29M.s 			page 1070


 38272              	.LVL4701:
 38273              	.L2681:
18075:Core/Src/bno055.c ****     }
 38274              		.loc 1 18075 9 is_stmt 1 view .LVU10681
18075:Core/Src/bno055.c ****     }
 38275              		.loc 1 18075 21 is_stmt 0 view .LVU10682
 38276 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 38277              	.LVL4702:
18075:Core/Src/bno055.c ****     }
 38278              		.loc 1 18075 18 view .LVU10683
 38279 00a4 54FA80F4 		uxtab	r4, r4, r0
 38280              	.LVL4703:
18075:Core/Src/bno055.c ****     }
 38281              		.loc 1 18075 18 view .LVU10684
 38282 00a8 64B2     		sxtb	r4, r4
 38283              	.LVL4704:
18075:Core/Src/bno055.c ****     }
 38284              		.loc 1 18075 18 view .LVU10685
 38285 00aa F3E7     		b	.L2671
 38286              	.LVL4705:
 38287              	.L2674:
18020:Core/Src/bno055.c ****     }
 38288              		.loc 1 18020 16 view .LVU10686
 38289 00ac 6FF07E04 		mvn	r4, #126
 38290 00b0 F0E7     		b	.L2671
 38291              	.L2683:
 38292 00b2 00BF     		.align	2
 38293              	.L2682:
 38294 00b4 00000000 		.word	.LANCHOR0
 38295              		.cfi_endproc
 38296              	.LFE258:
 38298              		.section	.text.bno055_get_gyro_highrate_y_hyst,"ax",%progbits
 38299              		.align	1
 38300              		.global	bno055_get_gyro_highrate_y_hyst
 38301              		.syntax unified
 38302              		.thumb
 38303              		.thumb_func
 38304              		.fpu fpv4-sp-d16
 38306              	bno055_get_gyro_highrate_y_hyst:
 38307              	.LVL4706:
 38308              	.LFB259:
18080:Core/Src/bno055.c **** 
18081:Core/Src/bno055.c **** /*!
18082:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate y hysteresis
18083:Core/Src/bno055.c ****  *  from page one register from 0x1A bit 5 to 6
18084:Core/Src/bno055.c ****  *
18085:Core/Src/bno055.c ****  *  @param gyro_highrate_y_hyst_u8 : The value of gyro highrate y hysteresis
18086:Core/Src/bno055.c ****  *
18087:Core/Src/bno055.c ****  *  @return results of bus communication function
18088:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18089:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18090:Core/Src/bno055.c ****  *
18091:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
18092:Core/Src/bno055.c ****  *
18093:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_y_hyst_u8) *4 LSB
18094:Core/Src/bno055.c ****  *
18095:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
ARM GAS  /tmp/ccWoU29M.s 			page 1071


18096:Core/Src/bno055.c ****  *
18097:Core/Src/bno055.c ****  *  gyro_range_u8     | hysteresis      |     LSB
18098:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18099:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
18100:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
18101:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
18102:Core/Src/bno055.c ****  */
18103:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_y_hyst(u8 *gyro_highrate_y_hyst_u8)
18104:Core/Src/bno055.c **** {
 38309              		.loc 1 18104 1 is_stmt 1 view -0
 38310              		.cfi_startproc
 38311              		@ args = 0, pretend = 0, frame = 8
 38312              		@ frame_needed = 0, uses_anonymous_args = 0
 38313              		.loc 1 18104 1 is_stmt 0 view .LVU10688
 38314 0000 30B5     		push	{r4, r5, lr}
 38315              	.LCFI1029:
 38316              		.cfi_def_cfa_offset 12
 38317              		.cfi_offset 4, -12
 38318              		.cfi_offset 5, -8
 38319              		.cfi_offset 14, -4
 38320 0002 83B0     		sub	sp, sp, #12
 38321              	.LCFI1030:
 38322              		.cfi_def_cfa_offset 24
18105:Core/Src/bno055.c ****     /* Variable used to return value of
18106:Core/Src/bno055.c ****      * communication routine*/
18107:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38323              		.loc 1 18107 5 is_stmt 1 view .LVU10689
 38324              	.LVL4707:
18108:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38325              		.loc 1 18108 5 view .LVU10690
 38326              		.loc 1 18108 8 is_stmt 0 view .LVU10691
 38327 0004 0023     		movs	r3, #0
 38328 0006 8DF80730 		strb	r3, [sp, #7]
18109:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38329              		.loc 1 18109 5 is_stmt 1 view .LVU10692
 38330              	.LVL4708:
18110:Core/Src/bno055.c **** 
18111:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18112:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38331              		.loc 1 18112 5 view .LVU10693
 38332              		.loc 1 18112 18 is_stmt 0 view .LVU10694
 38333 000a 144B     		ldr	r3, .L2692
 38334 000c 1B68     		ldr	r3, [r3]
 38335              		.loc 1 18112 8 view .LVU10695
 38336 000e F3B1     		cbz	r3, .L2688
 38337 0010 0446     		mov	r4, r0
18113:Core/Src/bno055.c ****     {
18114:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18115:Core/Src/bno055.c ****     }
18116:Core/Src/bno055.c ****     else
18117:Core/Src/bno055.c ****     {
18118:Core/Src/bno055.c ****         /*condition check for page, gyro highrate y hysteresis is
18119:Core/Src/bno055.c ****          * available in the page one*/
18120:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 38338              		.loc 1 18120 9 is_stmt 1 view .LVU10696
 38339              		.loc 1 18120 21 is_stmt 0 view .LVU10697
 38340 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 1072


 38341              		.loc 1 18120 12 view .LVU10698
 38342 0014 012B     		cmp	r3, #1
 38343 0016 14D1     		bne	.L2691
 38344              	.LVL4709:
 38345              	.L2686:
18121:Core/Src/bno055.c ****         {
18122:Core/Src/bno055.c ****             /* Write page as one */
18123:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18124:Core/Src/bno055.c ****         }
18125:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 38346              		.loc 1 18125 53 discriminator 1 view .LVU10699
 38347 0018 104B     		ldr	r3, .L2692
 38348 001a 1B68     		ldr	r3, [r3]
 38349 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38350              		.loc 1 18125 41 discriminator 1 view .LVU10700
 38351 001e 012B     		cmp	r3, #1
 38352 0020 18D1     		bne	.L2689
 38353              	.L2687:
18126:Core/Src/bno055.c ****         {
18127:Core/Src/bno055.c ****             /* Read the value of gyro highrate y hysteresis*/
18128:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 38354              		.loc 1 18128 13 is_stmt 1 view .LVU10701
 38355              		.loc 1 18128 32 is_stmt 0 view .LVU10702
 38356 0022 0E4B     		ldr	r3, .L2692
 38357 0024 1868     		ldr	r0, [r3]
 38358 0026 0569     		ldr	r5, [r0, #16]
 38359              		.loc 1 18128 24 view .LVU10703
 38360 0028 0123     		movs	r3, #1
 38361 002a 0DF10702 		add	r2, sp, #7
 38362 002e 1A21     		movs	r1, #26
 38363 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38364 0032 A847     		blx	r5
 38365              	.LVL4710:
18129:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Y_HYST_REG,
18130:Core/Src/bno055.c ****                                                       &data_u8r,
18131:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18132:Core/Src/bno055.c ****             *gyro_highrate_y_hyst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_HYST);
 38366              		.loc 1 18132 13 is_stmt 1 view .LVU10704
 38367              		.loc 1 18132 40 is_stmt 0 view .LVU10705
 38368 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 38369 0038 C3F34113 		ubfx	r3, r3, #5, #2
 38370              		.loc 1 18132 38 view .LVU10706
 38371 003c 2370     		strb	r3, [r4]
 38372              	.LVL4711:
 38373              	.L2685:
18133:Core/Src/bno055.c ****         }
18134:Core/Src/bno055.c ****         else
18135:Core/Src/bno055.c ****         {
18136:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18137:Core/Src/bno055.c ****         }
18138:Core/Src/bno055.c ****     }
18139:Core/Src/bno055.c **** 
18140:Core/Src/bno055.c ****     return com_rslt;
18141:Core/Src/bno055.c **** }
 38374              		.loc 1 18141 1 view .LVU10707
 38375 003e 03B0     		add	sp, sp, #12
 38376              	.LCFI1031:
ARM GAS  /tmp/ccWoU29M.s 			page 1073


 38377              		.cfi_remember_state
 38378              		.cfi_def_cfa_offset 12
 38379              		@ sp needed
 38380 0040 30BD     		pop	{r4, r5, pc}
 38381              	.LVL4712:
 38382              	.L2691:
 38383              	.LCFI1032:
 38384              		.cfi_restore_state
18123:Core/Src/bno055.c ****         }
 38385              		.loc 1 18123 13 is_stmt 1 view .LVU10708
18123:Core/Src/bno055.c ****         }
 38386              		.loc 1 18123 23 is_stmt 0 view .LVU10709
 38387 0042 0120     		movs	r0, #1
 38388              	.LVL4713:
18123:Core/Src/bno055.c ****         }
 38389              		.loc 1 18123 23 view .LVU10710
 38390 0044 FFF7FEFF 		bl	bno055_write_page_id
 38391              	.LVL4714:
18125:Core/Src/bno055.c ****         {
 38392              		.loc 1 18125 9 is_stmt 1 view .LVU10711
18125:Core/Src/bno055.c ****         {
 38393              		.loc 1 18125 12 is_stmt 0 view .LVU10712
 38394 0048 0028     		cmp	r0, #0
 38395 004a EAD0     		beq	.L2687
 38396 004c E4E7     		b	.L2686
 38397              	.LVL4715:
 38398              	.L2688:
18114:Core/Src/bno055.c ****     }
 38399              		.loc 1 18114 16 view .LVU10713
 38400 004e 6FF07E00 		mvn	r0, #126
 38401              	.LVL4716:
18114:Core/Src/bno055.c ****     }
 38402              		.loc 1 18114 16 view .LVU10714
 38403 0052 F4E7     		b	.L2685
 38404              	.LVL4717:
 38405              	.L2689:
18136:Core/Src/bno055.c ****         }
 38406              		.loc 1 18136 22 view .LVU10715
 38407 0054 4FF0FF30 		mov	r0, #-1
 38408 0058 F1E7     		b	.L2685
 38409              	.L2693:
 38410 005a 00BF     		.align	2
 38411              	.L2692:
 38412 005c 00000000 		.word	.LANCHOR0
 38413              		.cfi_endproc
 38414              	.LFE259:
 38416              		.section	.text.bno055_set_gyro_highrate_y_hyst,"ax",%progbits
 38417              		.align	1
 38418              		.global	bno055_set_gyro_highrate_y_hyst
 38419              		.syntax unified
 38420              		.thumb
 38421              		.thumb_func
 38422              		.fpu fpv4-sp-d16
 38424              	bno055_set_gyro_highrate_y_hyst:
 38425              	.LVL4718:
 38426              	.LFB260:
18142:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 1074


18143:Core/Src/bno055.c **** /*!
18144:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate y hysteresis
18145:Core/Src/bno055.c ****  *  from page one register from 0x1A bit 5 to 6
18146:Core/Src/bno055.c ****  *
18147:Core/Src/bno055.c ****  *  @param gyro_highrate_y_hyst_u8 : The value of gyro highrate y hysteresis
18148:Core/Src/bno055.c ****  *
18149:Core/Src/bno055.c ****  *  @return results of bus communication function
18150:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18151:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18152:Core/Src/bno055.c ****  *
18153:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
18154:Core/Src/bno055.c ****  *
18155:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_y_hyst_u8) *4 LSB
18156:Core/Src/bno055.c ****  *
18157:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
18158:Core/Src/bno055.c ****  *
18159:Core/Src/bno055.c ****  *  gyro_range_u8     | hysteresis      |     LSB
18160:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18161:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
18162:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
18163:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
18164:Core/Src/bno055.c ****  */
18165:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_y_hyst(u8 gyro_highrate_y_hyst_u8)
18166:Core/Src/bno055.c **** {
 38427              		.loc 1 18166 1 is_stmt 1 view -0
 38428              		.cfi_startproc
 38429              		@ args = 0, pretend = 0, frame = 8
 38430              		@ frame_needed = 0, uses_anonymous_args = 0
 38431              		.loc 1 18166 1 is_stmt 0 view .LVU10717
 38432 0000 30B5     		push	{r4, r5, lr}
 38433              	.LCFI1033:
 38434              		.cfi_def_cfa_offset 12
 38435              		.cfi_offset 4, -12
 38436              		.cfi_offset 5, -8
 38437              		.cfi_offset 14, -4
 38438 0002 83B0     		sub	sp, sp, #12
 38439              	.LCFI1034:
 38440              		.cfi_def_cfa_offset 24
18167:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38441              		.loc 1 18167 5 is_stmt 1 view .LVU10718
 38442              	.LVL4719:
18168:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38443              		.loc 1 18168 5 view .LVU10719
 38444              		.loc 1 18168 8 is_stmt 0 view .LVU10720
 38445 0004 0023     		movs	r3, #0
 38446 0006 8DF80730 		strb	r3, [sp, #7]
18169:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38447              		.loc 1 18169 5 is_stmt 1 view .LVU10721
 38448              	.LVL4720:
18170:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 38449              		.loc 1 18170 5 view .LVU10722
 38450              		.loc 1 18170 8 is_stmt 0 view .LVU10723
 38451 000a 8DF80630 		strb	r3, [sp, #6]
18171:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 38452              		.loc 1 18171 5 is_stmt 1 view .LVU10724
 38453              	.LVL4721:
18172:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccWoU29M.s 			page 1075


18173:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18174:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38454              		.loc 1 18174 5 view .LVU10725
 38455              		.loc 1 18174 18 is_stmt 0 view .LVU10726
 38456 000e 2A4B     		ldr	r3, .L2706
 38457 0010 1B68     		ldr	r3, [r3]
 38458              		.loc 1 18174 8 view .LVU10727
 38459 0012 002B     		cmp	r3, #0
 38460 0014 4CD0     		beq	.L2698
 38461 0016 0546     		mov	r5, r0
18175:Core/Src/bno055.c ****     {
18176:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18177:Core/Src/bno055.c ****     }
18178:Core/Src/bno055.c ****     else
18179:Core/Src/bno055.c ****     {
18180:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18181:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18182:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18183:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 38462              		.loc 1 18183 9 is_stmt 1 view .LVU10728
 38463              		.loc 1 18183 19 is_stmt 0 view .LVU10729
 38464 0018 0DF10600 		add	r0, sp, #6
 38465              	.LVL4722:
 38466              		.loc 1 18183 19 view .LVU10730
 38467 001c FFF7FEFF 		bl	bno055_get_operation_mode
 38468              	.LVL4723:
18184:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 38469              		.loc 1 18184 9 is_stmt 1 view .LVU10731
 38470              		.loc 1 18184 12 is_stmt 0 view .LVU10732
 38471 0020 0446     		mov	r4, r0
 38472 0022 0028     		cmp	r0, #0
 38473 0024 33D1     		bne	.L2699
18185:Core/Src/bno055.c ****         {
18186:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38474              		.loc 1 18186 13 is_stmt 1 view .LVU10733
 38475              		.loc 1 18186 32 is_stmt 0 view .LVU10734
 38476 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 38477              		.loc 1 18186 16 view .LVU10735
 38478 002a 1BB9     		cbnz	r3, .L2703
 38479              	.LVL4724:
 38480              	.L2697:
18187:Core/Src/bno055.c ****             {
18188:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18189:Core/Src/bno055.c ****             }
18190:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 38481              		.loc 1 18190 13 is_stmt 1 view .LVU10736
 38482              		.loc 1 18190 16 is_stmt 0 view .LVU10737
 38483 002c 44B1     		cbz	r4, .L2704
18191:Core/Src/bno055.c ****             {
18192:Core/Src/bno055.c ****                 /* Write page as one */
18193:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18194:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18195:Core/Src/bno055.c ****                 {
18196:Core/Src/bno055.c ****                     /* Write the value of
18197:Core/Src/bno055.c ****                      * gyro highrate y hysteresis*/
18198:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18199:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
ARM GAS  /tmp/ccWoU29M.s 			page 1076


18200:Core/Src/bno055.c ****                                                               &data_u8r,
18201:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18202:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18203:Core/Src/bno055.c ****                     {
18204:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_HYST, gyro_
18205:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18206:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
18207:Core/Src/bno055.c ****                                                                     &data_u8r,
18208:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18209:Core/Src/bno055.c ****                     }
18210:Core/Src/bno055.c ****                 }
18211:Core/Src/bno055.c ****                 else
18212:Core/Src/bno055.c ****                 {
18213:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18214:Core/Src/bno055.c ****                 }
18215:Core/Src/bno055.c ****             }
18216:Core/Src/bno055.c ****             else
18217:Core/Src/bno055.c ****             {
18218:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 38484              		.loc 1 18218 26 view .LVU10738
 38485 002e 4FF0FF34 		mov	r4, #-1
 38486              	.LVL4725:
 38487              		.loc 1 18218 26 view .LVU10739
 38488 0032 2EE0     		b	.L2696
 38489              	.LVL4726:
 38490              	.L2703:
18188:Core/Src/bno055.c ****             }
 38491              		.loc 1 18188 17 is_stmt 1 view .LVU10740
18188:Core/Src/bno055.c ****             }
 38492              		.loc 1 18188 28 is_stmt 0 view .LVU10741
 38493 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 38494              	.LVL4727:
18188:Core/Src/bno055.c ****             }
 38495              		.loc 1 18188 25 view .LVU10742
 38496 0038 54FA80F4 		uxtab	r4, r4, r0
 38497 003c 64B2     		sxtb	r4, r4
 38498              	.LVL4728:
18188:Core/Src/bno055.c ****             }
 38499              		.loc 1 18188 25 view .LVU10743
 38500 003e F5E7     		b	.L2697
 38501              	.L2704:
18193:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38502              		.loc 1 18193 17 is_stmt 1 view .LVU10744
18193:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38503              		.loc 1 18193 30 is_stmt 0 view .LVU10745
 38504 0040 0120     		movs	r0, #1
 38505 0042 FFF7FEFF 		bl	bno055_write_page_id
 38506              	.LVL4729:
18194:Core/Src/bno055.c ****                 {
 38507              		.loc 1 18194 17 is_stmt 1 view .LVU10746
18194:Core/Src/bno055.c ****                 {
 38508              		.loc 1 18194 20 is_stmt 0 view .LVU10747
 38509 0046 50BB     		cbnz	r0, .L2701
18198:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
 38510              		.loc 1 18198 21 is_stmt 1 view .LVU10748
18198:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
 38511              		.loc 1 18198 40 is_stmt 0 view .LVU10749
ARM GAS  /tmp/ccWoU29M.s 			page 1077


 38512 0048 1B4B     		ldr	r3, .L2706
 38513 004a 1868     		ldr	r0, [r3]
 38514              	.LVL4730:
18198:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
 38515              		.loc 1 18198 40 view .LVU10750
 38516 004c 0469     		ldr	r4, [r0, #16]
 38517              	.LVL4731:
18198:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
 38518              		.loc 1 18198 32 view .LVU10751
 38519 004e 0123     		movs	r3, #1
 38520 0050 0DF10702 		add	r2, sp, #7
 38521 0054 1A21     		movs	r1, #26
 38522 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38523 0058 A047     		blx	r4
 38524              	.LVL4732:
18202:Core/Src/bno055.c ****                     {
 38525              		.loc 1 18202 21 is_stmt 1 view .LVU10752
18202:Core/Src/bno055.c ****                     {
 38526              		.loc 1 18202 24 is_stmt 0 view .LVU10753
 38527 005a 0446     		mov	r4, r0
 38528 005c C8B9     		cbnz	r0, .L2696
18204:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38529              		.loc 1 18204 25 is_stmt 1 view .LVU10754
18204:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38530              		.loc 1 18204 36 is_stmt 0 view .LVU10755
 38531 005e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 38532              	.LVL4733:
18204:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38533              		.loc 1 18204 36 view .LVU10756
 38534 0062 20F06000 		bic	r0, r0, #96
 38535 0066 43B2     		sxtb	r3, r0
 38536 0068 6801     		lsls	r0, r5, #5
 38537 006a 00F06000 		and	r0, r0, #96
 38538 006e 1843     		orrs	r0, r0, r3
18204:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38539              		.loc 1 18204 34 view .LVU10757
 38540 0070 8DF80700 		strb	r0, [sp, #7]
18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
 38541              		.loc 1 18205 25 is_stmt 1 view .LVU10758
18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
 38542              		.loc 1 18205 45 is_stmt 0 view .LVU10759
 38543 0074 104B     		ldr	r3, .L2706
 38544 0076 1868     		ldr	r0, [r3]
 38545 0078 C568     		ldr	r5, [r0, #12]
18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
 38546              		.loc 1 18205 37 view .LVU10760
 38547 007a 0123     		movs	r3, #1
 38548 007c 0DF10702 		add	r2, sp, #7
 38549 0080 1A21     		movs	r1, #26
 38550 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38551 0084 A847     		blx	r5
 38552              	.LVL4734:
18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
 38553              		.loc 1 18205 34 view .LVU10761
 38554 0086 54FA80F4 		uxtab	r4, r4, r0
 38555 008a 64B2     		sxtb	r4, r4
 38556              	.LVL4735:
ARM GAS  /tmp/ccWoU29M.s 			page 1078


18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
 38557              		.loc 1 18205 34 view .LVU10762
 38558 008c 01E0     		b	.L2696
 38559              	.LVL4736:
 38560              	.L2699:
18219:Core/Src/bno055.c ****             }
18220:Core/Src/bno055.c ****         }
18221:Core/Src/bno055.c ****         else
18222:Core/Src/bno055.c ****         {
18223:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 38561              		.loc 1 18223 22 view .LVU10763
 38562 008e 4FF0FF34 		mov	r4, #-1
 38563              	.LVL4737:
 38564              	.L2696:
18224:Core/Src/bno055.c ****         }
18225:Core/Src/bno055.c ****     }
18226:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38565              		.loc 1 18226 5 is_stmt 1 view .LVU10764
 38566              		.loc 1 18226 24 is_stmt 0 view .LVU10765
 38567 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 38568              		.loc 1 18226 8 view .LVU10766
 38569 0096 28B9     		cbnz	r0, .L2705
 38570              	.LVL4738:
 38571              	.L2695:
18227:Core/Src/bno055.c ****     {
18228:Core/Src/bno055.c ****         /* set the operation mode of
18229:Core/Src/bno055.c ****          * previous operation mode*/
18230:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18231:Core/Src/bno055.c ****     }
18232:Core/Src/bno055.c **** 
18233:Core/Src/bno055.c ****     return com_rslt;
18234:Core/Src/bno055.c **** }
 38572              		.loc 1 18234 1 view .LVU10767
 38573 0098 2046     		mov	r0, r4
 38574 009a 03B0     		add	sp, sp, #12
 38575              	.LCFI1035:
 38576              		.cfi_remember_state
 38577              		.cfi_def_cfa_offset 12
 38578              		@ sp needed
 38579 009c 30BD     		pop	{r4, r5, pc}
 38580              	.LVL4739:
 38581              	.L2701:
 38582              	.LCFI1036:
 38583              		.cfi_restore_state
18213:Core/Src/bno055.c ****                 }
 38584              		.loc 1 18213 30 view .LVU10768
 38585 009e 4FF0FF34 		mov	r4, #-1
 38586              	.LVL4740:
18213:Core/Src/bno055.c ****                 }
 38587              		.loc 1 18213 30 view .LVU10769
 38588 00a2 F6E7     		b	.L2696
 38589              	.LVL4741:
 38590              	.L2705:
18230:Core/Src/bno055.c ****     }
 38591              		.loc 1 18230 9 is_stmt 1 view .LVU10770
18230:Core/Src/bno055.c ****     }
 38592              		.loc 1 18230 21 is_stmt 0 view .LVU10771
ARM GAS  /tmp/ccWoU29M.s 			page 1079


 38593 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 38594              	.LVL4742:
18230:Core/Src/bno055.c ****     }
 38595              		.loc 1 18230 18 view .LVU10772
 38596 00a8 54FA80F4 		uxtab	r4, r4, r0
 38597              	.LVL4743:
18230:Core/Src/bno055.c ****     }
 38598              		.loc 1 18230 18 view .LVU10773
 38599 00ac 64B2     		sxtb	r4, r4
 38600              	.LVL4744:
18230:Core/Src/bno055.c ****     }
 38601              		.loc 1 18230 18 view .LVU10774
 38602 00ae F3E7     		b	.L2695
 38603              	.LVL4745:
 38604              	.L2698:
18176:Core/Src/bno055.c ****     }
 38605              		.loc 1 18176 16 view .LVU10775
 38606 00b0 6FF07E04 		mvn	r4, #126
 38607 00b4 F0E7     		b	.L2695
 38608              	.L2707:
 38609 00b6 00BF     		.align	2
 38610              	.L2706:
 38611 00b8 00000000 		.word	.LANCHOR0
 38612              		.cfi_endproc
 38613              	.LFE260:
 38615              		.section	.text.bno055_get_gyro_highrate_y_durn,"ax",%progbits
 38616              		.align	1
 38617              		.global	bno055_get_gyro_highrate_y_durn
 38618              		.syntax unified
 38619              		.thumb
 38620              		.thumb_func
 38621              		.fpu fpv4-sp-d16
 38623              	bno055_get_gyro_highrate_y_durn:
 38624              	.LVL4746:
 38625              	.LFB261:
18235:Core/Src/bno055.c **** 
18236:Core/Src/bno055.c **** /*!
18237:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate y duration
18238:Core/Src/bno055.c ****  *  from page one register from 0x1B bit 0 to 7
18239:Core/Src/bno055.c ****  *
18240:Core/Src/bno055.c ****  *  @param gyro_highrate_y_durn_u8 : The value of gyro highrate y duration
18241:Core/Src/bno055.c ****  *
18242:Core/Src/bno055.c ****  *  @return results of bus communication function
18243:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18244:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18245:Core/Src/bno055.c ****  *
18246:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
18247:Core/Src/bno055.c ****  *
18248:Core/Src/bno055.c ****  *  (1 + gyro_highrate_y_durn_u8)*2.5ms
18249:Core/Src/bno055.c ****  */
18250:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_y_durn(u8 *gyro_highrate_y_durn_u8)
18251:Core/Src/bno055.c **** {
 38626              		.loc 1 18251 1 is_stmt 1 view -0
 38627              		.cfi_startproc
 38628              		@ args = 0, pretend = 0, frame = 8
 38629              		@ frame_needed = 0, uses_anonymous_args = 0
 38630              		.loc 1 18251 1 is_stmt 0 view .LVU10777
ARM GAS  /tmp/ccWoU29M.s 			page 1080


 38631 0000 70B5     		push	{r4, r5, r6, lr}
 38632              	.LCFI1037:
 38633              		.cfi_def_cfa_offset 16
 38634              		.cfi_offset 4, -16
 38635              		.cfi_offset 5, -12
 38636              		.cfi_offset 6, -8
 38637              		.cfi_offset 14, -4
 38638 0002 82B0     		sub	sp, sp, #8
 38639              	.LCFI1038:
 38640              		.cfi_def_cfa_offset 24
18252:Core/Src/bno055.c ****     /* Variable used to return value of
18253:Core/Src/bno055.c ****      * communication routine*/
18254:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38641              		.loc 1 18254 5 is_stmt 1 view .LVU10778
 38642              	.LVL4747:
18255:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38643              		.loc 1 18255 5 view .LVU10779
 38644              		.loc 1 18255 8 is_stmt 0 view .LVU10780
 38645 0004 0023     		movs	r3, #0
 38646 0006 8DF80730 		strb	r3, [sp, #7]
18256:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38647              		.loc 1 18256 5 is_stmt 1 view .LVU10781
 38648              	.LVL4748:
18257:Core/Src/bno055.c **** 
18258:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18259:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38649              		.loc 1 18259 5 view .LVU10782
 38650              		.loc 1 18259 18 is_stmt 0 view .LVU10783
 38651 000a 134B     		ldr	r3, .L2716
 38652 000c 1B68     		ldr	r3, [r3]
 38653              		.loc 1 18259 8 view .LVU10784
 38654 000e E3B1     		cbz	r3, .L2712
 38655 0010 0546     		mov	r5, r0
18260:Core/Src/bno055.c ****     {
18261:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18262:Core/Src/bno055.c ****     }
18263:Core/Src/bno055.c ****     else
18264:Core/Src/bno055.c ****     {
18265:Core/Src/bno055.c ****         /*condition check for page, gyro highrate y duration is
18266:Core/Src/bno055.c ****          * available in the page one*/
18267:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 38656              		.loc 1 18267 9 is_stmt 1 view .LVU10785
 38657              		.loc 1 18267 21 is_stmt 0 view .LVU10786
 38658 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38659              		.loc 1 18267 12 view .LVU10787
 38660 0014 012B     		cmp	r3, #1
 38661 0016 12D1     		bne	.L2715
 38662              	.LVL4749:
 38663              	.L2710:
18268:Core/Src/bno055.c ****         {
18269:Core/Src/bno055.c ****             /* Write page as one */
18270:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18271:Core/Src/bno055.c ****         }
18272:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 38664              		.loc 1 18272 53 discriminator 1 view .LVU10788
 38665 0018 0F4B     		ldr	r3, .L2716
 38666 001a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccWoU29M.s 			page 1081


 38667 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38668              		.loc 1 18272 41 discriminator 1 view .LVU10789
 38669 001e 012B     		cmp	r3, #1
 38670 0020 16D1     		bne	.L2713
 38671              	.L2711:
18273:Core/Src/bno055.c ****         {
18274:Core/Src/bno055.c ****             /* Read the value of gyro highrate y duration*/
18275:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 38672              		.loc 1 18275 13 is_stmt 1 view .LVU10790
 38673              		.loc 1 18275 32 is_stmt 0 view .LVU10791
 38674 0022 0D4B     		ldr	r3, .L2716
 38675 0024 1C68     		ldr	r4, [r3]
 38676 0026 2669     		ldr	r6, [r4, #16]
 38677              		.loc 1 18275 24 view .LVU10792
 38678 0028 0123     		movs	r3, #1
 38679 002a 0DF10702 		add	r2, sp, #7
 38680 002e 1B21     		movs	r1, #27
 38681 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 38682 0032 B047     		blx	r6
 38683              	.LVL4750:
18276:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Y_DURN_REG,
18277:Core/Src/bno055.c ****                                                       &data_u8r,
18278:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18279:Core/Src/bno055.c ****             *gyro_highrate_y_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_DURN);
 38684              		.loc 1 18279 13 is_stmt 1 view .LVU10793
 38685              		.loc 1 18279 38 is_stmt 0 view .LVU10794
 38686 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 38687 0038 2B70     		strb	r3, [r5]
 38688              	.LVL4751:
 38689              	.L2709:
18280:Core/Src/bno055.c ****         }
18281:Core/Src/bno055.c ****         else
18282:Core/Src/bno055.c ****         {
18283:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18284:Core/Src/bno055.c ****         }
18285:Core/Src/bno055.c ****     }
18286:Core/Src/bno055.c **** 
18287:Core/Src/bno055.c ****     return com_rslt;
18288:Core/Src/bno055.c **** }
 38690              		.loc 1 18288 1 view .LVU10795
 38691 003a 02B0     		add	sp, sp, #8
 38692              	.LCFI1039:
 38693              		.cfi_remember_state
 38694              		.cfi_def_cfa_offset 16
 38695              		@ sp needed
 38696 003c 70BD     		pop	{r4, r5, r6, pc}
 38697              	.LVL4752:
 38698              	.L2715:
 38699              	.LCFI1040:
 38700              		.cfi_restore_state
18270:Core/Src/bno055.c ****         }
 38701              		.loc 1 18270 13 is_stmt 1 view .LVU10796
18270:Core/Src/bno055.c ****         }
 38702              		.loc 1 18270 23 is_stmt 0 view .LVU10797
 38703 003e 0120     		movs	r0, #1
 38704              	.LVL4753:
18270:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 1082


 38705              		.loc 1 18270 23 view .LVU10798
 38706 0040 FFF7FEFF 		bl	bno055_write_page_id
 38707              	.LVL4754:
18272:Core/Src/bno055.c ****         {
 38708              		.loc 1 18272 9 is_stmt 1 view .LVU10799
18272:Core/Src/bno055.c ****         {
 38709              		.loc 1 18272 12 is_stmt 0 view .LVU10800
 38710 0044 0028     		cmp	r0, #0
 38711 0046 ECD0     		beq	.L2711
 38712 0048 E6E7     		b	.L2710
 38713              	.LVL4755:
 38714              	.L2712:
18261:Core/Src/bno055.c ****     }
 38715              		.loc 1 18261 16 view .LVU10801
 38716 004a 6FF07E00 		mvn	r0, #126
 38717              	.LVL4756:
18261:Core/Src/bno055.c ****     }
 38718              		.loc 1 18261 16 view .LVU10802
 38719 004e F4E7     		b	.L2709
 38720              	.LVL4757:
 38721              	.L2713:
18283:Core/Src/bno055.c ****         }
 38722              		.loc 1 18283 22 view .LVU10803
 38723 0050 4FF0FF30 		mov	r0, #-1
 38724 0054 F1E7     		b	.L2709
 38725              	.L2717:
 38726 0056 00BF     		.align	2
 38727              	.L2716:
 38728 0058 00000000 		.word	.LANCHOR0
 38729              		.cfi_endproc
 38730              	.LFE261:
 38732              		.section	.text.bno055_set_gyro_highrate_y_durn,"ax",%progbits
 38733              		.align	1
 38734              		.global	bno055_set_gyro_highrate_y_durn
 38735              		.syntax unified
 38736              		.thumb
 38737              		.thumb_func
 38738              		.fpu fpv4-sp-d16
 38740              	bno055_set_gyro_highrate_y_durn:
 38741              	.LVL4758:
 38742              	.LFB262:
18289:Core/Src/bno055.c **** 
18290:Core/Src/bno055.c **** /*!
18291:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate y duration
18292:Core/Src/bno055.c ****  *  from page one register from 0x1B bit 0 to 7
18293:Core/Src/bno055.c ****  *
18294:Core/Src/bno055.c ****  *  @param gyro_highrate_y_durn_u8 : The value of gyro highrate y duration
18295:Core/Src/bno055.c ****  *
18296:Core/Src/bno055.c ****  *  @return results of bus communication function
18297:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18298:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18299:Core/Src/bno055.c ****  *
18300:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
18301:Core/Src/bno055.c ****  *
18302:Core/Src/bno055.c ****  *  (1 + gyro_highrate_y_durn_u8)*2.5ms
18303:Core/Src/bno055.c ****  */
18304:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_y_durn(u8 gyro_highrate_y_durn_u8)
ARM GAS  /tmp/ccWoU29M.s 			page 1083


18305:Core/Src/bno055.c **** {
 38743              		.loc 1 18305 1 is_stmt 1 view -0
 38744              		.cfi_startproc
 38745              		@ args = 0, pretend = 0, frame = 8
 38746              		@ frame_needed = 0, uses_anonymous_args = 0
 38747              		.loc 1 18305 1 is_stmt 0 view .LVU10805
 38748 0000 30B5     		push	{r4, r5, lr}
 38749              	.LCFI1041:
 38750              		.cfi_def_cfa_offset 12
 38751              		.cfi_offset 4, -12
 38752              		.cfi_offset 5, -8
 38753              		.cfi_offset 14, -4
 38754 0002 83B0     		sub	sp, sp, #12
 38755              	.LCFI1042:
 38756              		.cfi_def_cfa_offset 24
18306:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38757              		.loc 1 18306 5 is_stmt 1 view .LVU10806
 38758              	.LVL4759:
18307:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38759              		.loc 1 18307 5 view .LVU10807
 38760              		.loc 1 18307 8 is_stmt 0 view .LVU10808
 38761 0004 0023     		movs	r3, #0
 38762 0006 8DF80730 		strb	r3, [sp, #7]
18308:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38763              		.loc 1 18308 5 is_stmt 1 view .LVU10809
 38764              	.LVL4760:
18309:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 38765              		.loc 1 18309 5 view .LVU10810
 38766              		.loc 1 18309 8 is_stmt 0 view .LVU10811
 38767 000a 8DF80630 		strb	r3, [sp, #6]
18310:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 38768              		.loc 1 18310 5 is_stmt 1 view .LVU10812
 38769              	.LVL4761:
18311:Core/Src/bno055.c **** 
18312:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18313:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38770              		.loc 1 18313 5 view .LVU10813
 38771              		.loc 1 18313 18 is_stmt 0 view .LVU10814
 38772 000e 254B     		ldr	r3, .L2730
 38773 0010 1B68     		ldr	r3, [r3]
 38774              		.loc 1 18313 8 view .LVU10815
 38775 0012 002B     		cmp	r3, #0
 38776 0014 42D0     		beq	.L2722
 38777 0016 0546     		mov	r5, r0
18314:Core/Src/bno055.c ****     {
18315:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18316:Core/Src/bno055.c ****     }
18317:Core/Src/bno055.c ****     else
18318:Core/Src/bno055.c ****     {
18319:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18320:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18321:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18322:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 38778              		.loc 1 18322 9 is_stmt 1 view .LVU10816
 38779              		.loc 1 18322 19 is_stmt 0 view .LVU10817
 38780 0018 0DF10600 		add	r0, sp, #6
 38781              	.LVL4762:
ARM GAS  /tmp/ccWoU29M.s 			page 1084


 38782              		.loc 1 18322 19 view .LVU10818
 38783 001c FFF7FEFF 		bl	bno055_get_operation_mode
 38784              	.LVL4763:
18323:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 38785              		.loc 1 18323 9 is_stmt 1 view .LVU10819
 38786              		.loc 1 18323 12 is_stmt 0 view .LVU10820
 38787 0020 0446     		mov	r4, r0
 38788 0022 50BB     		cbnz	r0, .L2723
18324:Core/Src/bno055.c ****         {
18325:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38789              		.loc 1 18325 13 is_stmt 1 view .LVU10821
 38790              		.loc 1 18325 32 is_stmt 0 view .LVU10822
 38791 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 38792              		.loc 1 18325 16 view .LVU10823
 38793 0028 1BB9     		cbnz	r3, .L2727
 38794              	.LVL4764:
 38795              	.L2721:
18326:Core/Src/bno055.c ****             {
18327:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18328:Core/Src/bno055.c ****             }
18329:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 38796              		.loc 1 18329 13 is_stmt 1 view .LVU10824
 38797              		.loc 1 18329 16 is_stmt 0 view .LVU10825
 38798 002a 44B1     		cbz	r4, .L2728
18330:Core/Src/bno055.c ****             {
18331:Core/Src/bno055.c ****                 /* Write page as one */
18332:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18333:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18334:Core/Src/bno055.c ****                 {
18335:Core/Src/bno055.c ****                     /* Write the value
18336:Core/Src/bno055.c ****                      * of gyro highrate y duration*/
18337:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18338:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
18339:Core/Src/bno055.c ****                                                               &data_u8r,
18340:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18341:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18342:Core/Src/bno055.c ****                     {
18343:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_DURN, gyro_
18344:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18345:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
18346:Core/Src/bno055.c ****                                                                     &data_u8r,
18347:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18348:Core/Src/bno055.c ****                     }
18349:Core/Src/bno055.c ****                 }
18350:Core/Src/bno055.c ****                 else
18351:Core/Src/bno055.c ****                 {
18352:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18353:Core/Src/bno055.c ****                 }
18354:Core/Src/bno055.c ****             }
18355:Core/Src/bno055.c ****             else
18356:Core/Src/bno055.c ****             {
18357:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 38799              		.loc 1 18357 26 view .LVU10826
 38800 002c 4FF0FF34 		mov	r4, #-1
 38801              	.LVL4765:
 38802              		.loc 1 18357 26 view .LVU10827
 38803 0030 25E0     		b	.L2720
ARM GAS  /tmp/ccWoU29M.s 			page 1085


 38804              	.LVL4766:
 38805              	.L2727:
18327:Core/Src/bno055.c ****             }
 38806              		.loc 1 18327 17 is_stmt 1 view .LVU10828
18327:Core/Src/bno055.c ****             }
 38807              		.loc 1 18327 28 is_stmt 0 view .LVU10829
 38808 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 38809              	.LVL4767:
18327:Core/Src/bno055.c ****             }
 38810              		.loc 1 18327 25 view .LVU10830
 38811 0036 54FA80F4 		uxtab	r4, r4, r0
 38812 003a 64B2     		sxtb	r4, r4
 38813              	.LVL4768:
18327:Core/Src/bno055.c ****             }
 38814              		.loc 1 18327 25 view .LVU10831
 38815 003c F5E7     		b	.L2721
 38816              	.L2728:
18332:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38817              		.loc 1 18332 17 is_stmt 1 view .LVU10832
18332:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38818              		.loc 1 18332 30 is_stmt 0 view .LVU10833
 38819 003e 0120     		movs	r0, #1
 38820 0040 FFF7FEFF 		bl	bno055_write_page_id
 38821              	.LVL4769:
18333:Core/Src/bno055.c ****                 {
 38822              		.loc 1 18333 17 is_stmt 1 view .LVU10834
18333:Core/Src/bno055.c ****                 {
 38823              		.loc 1 18333 20 is_stmt 0 view .LVU10835
 38824 0044 08BB     		cbnz	r0, .L2725
18337:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
 38825              		.loc 1 18337 21 is_stmt 1 view .LVU10836
18337:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
 38826              		.loc 1 18337 40 is_stmt 0 view .LVU10837
 38827 0046 174B     		ldr	r3, .L2730
 38828 0048 1868     		ldr	r0, [r3]
 38829              	.LVL4770:
18337:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
 38830              		.loc 1 18337 40 view .LVU10838
 38831 004a 0469     		ldr	r4, [r0, #16]
 38832              	.LVL4771:
18337:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
 38833              		.loc 1 18337 32 view .LVU10839
 38834 004c 0123     		movs	r3, #1
 38835 004e 0DF10702 		add	r2, sp, #7
 38836 0052 1B21     		movs	r1, #27
 38837 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38838 0056 A047     		blx	r4
 38839              	.LVL4772:
18341:Core/Src/bno055.c ****                     {
 38840              		.loc 1 18341 21 is_stmt 1 view .LVU10840
18341:Core/Src/bno055.c ****                     {
 38841              		.loc 1 18341 24 is_stmt 0 view .LVU10841
 38842 0058 0446     		mov	r4, r0
 38843 005a 80B9     		cbnz	r0, .L2720
18343:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38844              		.loc 1 18343 25 is_stmt 1 view .LVU10842
18343:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccWoU29M.s 			page 1086


 38845              		.loc 1 18343 34 is_stmt 0 view .LVU10843
 38846 005c 8DF80750 		strb	r5, [sp, #7]
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 38847              		.loc 1 18344 25 is_stmt 1 view .LVU10844
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 38848              		.loc 1 18344 45 is_stmt 0 view .LVU10845
 38849 0060 104B     		ldr	r3, .L2730
 38850 0062 1868     		ldr	r0, [r3]
 38851              	.LVL4773:
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 38852              		.loc 1 18344 45 view .LVU10846
 38853 0064 C568     		ldr	r5, [r0, #12]
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 38854              		.loc 1 18344 37 view .LVU10847
 38855 0066 0123     		movs	r3, #1
 38856 0068 0DF10702 		add	r2, sp, #7
 38857 006c 1B21     		movs	r1, #27
 38858 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38859 0070 A847     		blx	r5
 38860              	.LVL4774:
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 38861              		.loc 1 18344 34 view .LVU10848
 38862 0072 54FA80F4 		uxtab	r4, r4, r0
 38863 0076 64B2     		sxtb	r4, r4
 38864              	.LVL4775:
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 38865              		.loc 1 18344 34 view .LVU10849
 38866 0078 01E0     		b	.L2720
 38867              	.LVL4776:
 38868              	.L2723:
18358:Core/Src/bno055.c ****             }
18359:Core/Src/bno055.c ****         }
18360:Core/Src/bno055.c ****         else
18361:Core/Src/bno055.c ****         {
18362:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 38869              		.loc 1 18362 22 view .LVU10850
 38870 007a 4FF0FF34 		mov	r4, #-1
 38871              	.LVL4777:
 38872              	.L2720:
18363:Core/Src/bno055.c ****         }
18364:Core/Src/bno055.c ****     }
18365:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38873              		.loc 1 18365 5 is_stmt 1 view .LVU10851
 38874              		.loc 1 18365 24 is_stmt 0 view .LVU10852
 38875 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 38876              		.loc 1 18365 8 view .LVU10853
 38877 0082 28B9     		cbnz	r0, .L2729
 38878              	.LVL4778:
 38879              	.L2719:
18366:Core/Src/bno055.c ****     {
18367:Core/Src/bno055.c ****         /* set the operation mode of
18368:Core/Src/bno055.c ****          * previous operation mode*/
18369:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18370:Core/Src/bno055.c ****     }
18371:Core/Src/bno055.c **** 
18372:Core/Src/bno055.c ****     return com_rslt;
18373:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccWoU29M.s 			page 1087


 38880              		.loc 1 18373 1 view .LVU10854
 38881 0084 2046     		mov	r0, r4
 38882 0086 03B0     		add	sp, sp, #12
 38883              	.LCFI1043:
 38884              		.cfi_remember_state
 38885              		.cfi_def_cfa_offset 12
 38886              		@ sp needed
 38887 0088 30BD     		pop	{r4, r5, pc}
 38888              	.LVL4779:
 38889              	.L2725:
 38890              	.LCFI1044:
 38891              		.cfi_restore_state
18352:Core/Src/bno055.c ****                 }
 38892              		.loc 1 18352 30 view .LVU10855
 38893 008a 4FF0FF34 		mov	r4, #-1
 38894              	.LVL4780:
18352:Core/Src/bno055.c ****                 }
 38895              		.loc 1 18352 30 view .LVU10856
 38896 008e F6E7     		b	.L2720
 38897              	.LVL4781:
 38898              	.L2729:
18369:Core/Src/bno055.c ****     }
 38899              		.loc 1 18369 9 is_stmt 1 view .LVU10857
18369:Core/Src/bno055.c ****     }
 38900              		.loc 1 18369 21 is_stmt 0 view .LVU10858
 38901 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 38902              	.LVL4782:
18369:Core/Src/bno055.c ****     }
 38903              		.loc 1 18369 18 view .LVU10859
 38904 0094 54FA80F4 		uxtab	r4, r4, r0
 38905              	.LVL4783:
18369:Core/Src/bno055.c ****     }
 38906              		.loc 1 18369 18 view .LVU10860
 38907 0098 64B2     		sxtb	r4, r4
 38908              	.LVL4784:
18369:Core/Src/bno055.c ****     }
 38909              		.loc 1 18369 18 view .LVU10861
 38910 009a F3E7     		b	.L2719
 38911              	.LVL4785:
 38912              	.L2722:
18315:Core/Src/bno055.c ****     }
 38913              		.loc 1 18315 16 view .LVU10862
 38914 009c 6FF07E04 		mvn	r4, #126
 38915 00a0 F0E7     		b	.L2719
 38916              	.L2731:
 38917 00a2 00BF     		.align	2
 38918              	.L2730:
 38919 00a4 00000000 		.word	.LANCHOR0
 38920              		.cfi_endproc
 38921              	.LFE262:
 38923              		.section	.text.bno055_get_gyro_highrate_z_thres,"ax",%progbits
 38924              		.align	1
 38925              		.global	bno055_get_gyro_highrate_z_thres
 38926              		.syntax unified
 38927              		.thumb
 38928              		.thumb_func
 38929              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccWoU29M.s 			page 1088


 38931              	bno055_get_gyro_highrate_z_thres:
 38932              	.LVL4786:
 38933              	.LFB263:
18374:Core/Src/bno055.c **** 
18375:Core/Src/bno055.c **** /*!
18376:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate z threshold
18377:Core/Src/bno055.c ****  *  from page one register from 0x1C bit 0 to 4
18378:Core/Src/bno055.c ****  *
18379:Core/Src/bno055.c ****  *  @param gyro_highrate_z_thres_u8 : The value of gyro highrate z threshold
18380:Core/Src/bno055.c ****  *
18381:Core/Src/bno055.c ****  *  @return results of bus communication function
18382:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18383:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18384:Core/Src/bno055.c ****  *
18385:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
18386:Core/Src/bno055.c ****  *  selection of gyro range
18387:Core/Src/bno055.c ****  *
18388:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
18389:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18390:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
18391:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
18392:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
18393:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
18394:Core/Src/bno055.c ****  *
18395:Core/Src/bno055.c ****  */
18396:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_z_thres(u8 *gyro_highrate_z_thres_u8)
18397:Core/Src/bno055.c **** {
 38934              		.loc 1 18397 1 is_stmt 1 view -0
 38935              		.cfi_startproc
 38936              		@ args = 0, pretend = 0, frame = 8
 38937              		@ frame_needed = 0, uses_anonymous_args = 0
 38938              		.loc 1 18397 1 is_stmt 0 view .LVU10864
 38939 0000 30B5     		push	{r4, r5, lr}
 38940              	.LCFI1045:
 38941              		.cfi_def_cfa_offset 12
 38942              		.cfi_offset 4, -12
 38943              		.cfi_offset 5, -8
 38944              		.cfi_offset 14, -4
 38945 0002 83B0     		sub	sp, sp, #12
 38946              	.LCFI1046:
 38947              		.cfi_def_cfa_offset 24
18398:Core/Src/bno055.c ****     /* Variable used to return value of
18399:Core/Src/bno055.c ****      * communication routine*/
18400:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38948              		.loc 1 18400 5 is_stmt 1 view .LVU10865
 38949              	.LVL4787:
18401:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38950              		.loc 1 18401 5 view .LVU10866
 38951              		.loc 1 18401 8 is_stmt 0 view .LVU10867
 38952 0004 0023     		movs	r3, #0
 38953 0006 8DF80730 		strb	r3, [sp, #7]
18402:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38954              		.loc 1 18402 5 is_stmt 1 view .LVU10868
 38955              	.LVL4788:
18403:Core/Src/bno055.c **** 
18404:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18405:Core/Src/bno055.c ****     if (p_bno055 == NULL)
ARM GAS  /tmp/ccWoU29M.s 			page 1089


 38956              		.loc 1 18405 5 view .LVU10869
 38957              		.loc 1 18405 18 is_stmt 0 view .LVU10870
 38958 000a 144B     		ldr	r3, .L2740
 38959 000c 1B68     		ldr	r3, [r3]
 38960              		.loc 1 18405 8 view .LVU10871
 38961 000e F3B1     		cbz	r3, .L2736
 38962 0010 0446     		mov	r4, r0
18406:Core/Src/bno055.c ****     {
18407:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18408:Core/Src/bno055.c ****     }
18409:Core/Src/bno055.c ****     else
18410:Core/Src/bno055.c ****     {
18411:Core/Src/bno055.c ****         /*condition check for page, gyro highrate z threshold is
18412:Core/Src/bno055.c ****          * available in the page one*/
18413:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 38963              		.loc 1 18413 9 is_stmt 1 view .LVU10872
 38964              		.loc 1 18413 21 is_stmt 0 view .LVU10873
 38965 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38966              		.loc 1 18413 12 view .LVU10874
 38967 0014 012B     		cmp	r3, #1
 38968 0016 14D1     		bne	.L2739
 38969              	.LVL4789:
 38970              	.L2734:
18414:Core/Src/bno055.c ****         {
18415:Core/Src/bno055.c ****             /* Write page as one */
18416:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18417:Core/Src/bno055.c ****         }
18418:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 38971              		.loc 1 18418 53 discriminator 1 view .LVU10875
 38972 0018 104B     		ldr	r3, .L2740
 38973 001a 1B68     		ldr	r3, [r3]
 38974 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38975              		.loc 1 18418 41 discriminator 1 view .LVU10876
 38976 001e 012B     		cmp	r3, #1
 38977 0020 18D1     		bne	.L2737
 38978              	.L2735:
18419:Core/Src/bno055.c ****         {
18420:Core/Src/bno055.c ****             /* Read the value of gyro highrate z threshold*/
18421:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 38979              		.loc 1 18421 13 is_stmt 1 view .LVU10877
 38980              		.loc 1 18421 32 is_stmt 0 view .LVU10878
 38981 0022 0E4B     		ldr	r3, .L2740
 38982 0024 1868     		ldr	r0, [r3]
 38983 0026 0569     		ldr	r5, [r0, #16]
 38984              		.loc 1 18421 24 view .LVU10879
 38985 0028 0123     		movs	r3, #1
 38986 002a 0DF10702 		add	r2, sp, #7
 38987 002e 1C21     		movs	r1, #28
 38988 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38989 0032 A847     		blx	r5
 38990              	.LVL4790:
18422:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Z_THRES_REG,
18423:Core/Src/bno055.c ****                                                       &data_u8r,
18424:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18425:Core/Src/bno055.c ****             *gyro_highrate_z_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_THRES)
 38991              		.loc 1 18425 13 is_stmt 1 view .LVU10880
 38992              		.loc 1 18425 41 is_stmt 0 view .LVU10881
ARM GAS  /tmp/ccWoU29M.s 			page 1090


 38993 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 38994 0038 03F01F03 		and	r3, r3, #31
 38995              		.loc 1 18425 39 view .LVU10882
 38996 003c 2370     		strb	r3, [r4]
 38997              	.LVL4791:
 38998              	.L2733:
18426:Core/Src/bno055.c ****         }
18427:Core/Src/bno055.c ****         else
18428:Core/Src/bno055.c ****         {
18429:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18430:Core/Src/bno055.c ****         }
18431:Core/Src/bno055.c ****     }
18432:Core/Src/bno055.c **** 
18433:Core/Src/bno055.c ****     return com_rslt;
18434:Core/Src/bno055.c **** }
 38999              		.loc 1 18434 1 view .LVU10883
 39000 003e 03B0     		add	sp, sp, #12
 39001              	.LCFI1047:
 39002              		.cfi_remember_state
 39003              		.cfi_def_cfa_offset 12
 39004              		@ sp needed
 39005 0040 30BD     		pop	{r4, r5, pc}
 39006              	.LVL4792:
 39007              	.L2739:
 39008              	.LCFI1048:
 39009              		.cfi_restore_state
18416:Core/Src/bno055.c ****         }
 39010              		.loc 1 18416 13 is_stmt 1 view .LVU10884
18416:Core/Src/bno055.c ****         }
 39011              		.loc 1 18416 23 is_stmt 0 view .LVU10885
 39012 0042 0120     		movs	r0, #1
 39013              	.LVL4793:
18416:Core/Src/bno055.c ****         }
 39014              		.loc 1 18416 23 view .LVU10886
 39015 0044 FFF7FEFF 		bl	bno055_write_page_id
 39016              	.LVL4794:
18418:Core/Src/bno055.c ****         {
 39017              		.loc 1 18418 9 is_stmt 1 view .LVU10887
18418:Core/Src/bno055.c ****         {
 39018              		.loc 1 18418 12 is_stmt 0 view .LVU10888
 39019 0048 0028     		cmp	r0, #0
 39020 004a EAD0     		beq	.L2735
 39021 004c E4E7     		b	.L2734
 39022              	.LVL4795:
 39023              	.L2736:
18407:Core/Src/bno055.c ****     }
 39024              		.loc 1 18407 16 view .LVU10889
 39025 004e 6FF07E00 		mvn	r0, #126
 39026              	.LVL4796:
18407:Core/Src/bno055.c ****     }
 39027              		.loc 1 18407 16 view .LVU10890
 39028 0052 F4E7     		b	.L2733
 39029              	.LVL4797:
 39030              	.L2737:
18429:Core/Src/bno055.c ****         }
 39031              		.loc 1 18429 22 view .LVU10891
 39032 0054 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccWoU29M.s 			page 1091


 39033 0058 F1E7     		b	.L2733
 39034              	.L2741:
 39035 005a 00BF     		.align	2
 39036              	.L2740:
 39037 005c 00000000 		.word	.LANCHOR0
 39038              		.cfi_endproc
 39039              	.LFE263:
 39041              		.section	.text.bno055_set_gyro_highrate_z_thres,"ax",%progbits
 39042              		.align	1
 39043              		.global	bno055_set_gyro_highrate_z_thres
 39044              		.syntax unified
 39045              		.thumb
 39046              		.thumb_func
 39047              		.fpu fpv4-sp-d16
 39049              	bno055_set_gyro_highrate_z_thres:
 39050              	.LVL4798:
 39051              	.LFB264:
18435:Core/Src/bno055.c **** 
18436:Core/Src/bno055.c **** /*!
18437:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate z threshold
18438:Core/Src/bno055.c ****  *  from page one register from 0x1C bit 0 to 4
18439:Core/Src/bno055.c ****  *
18440:Core/Src/bno055.c ****  *  @param gyro_highrate_z_thres_u8 : The value of gyro highrate z threshold
18441:Core/Src/bno055.c ****  *
18442:Core/Src/bno055.c ****  *  @return results of bus communication function
18443:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18444:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18445:Core/Src/bno055.c ****  *
18446:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
18447:Core/Src/bno055.c ****  *  selection of gyro range
18448:Core/Src/bno055.c ****  *
18449:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
18450:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18451:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
18452:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
18453:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
18454:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
18455:Core/Src/bno055.c ****  *
18456:Core/Src/bno055.c ****  */
18457:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_z_thres(u8 gyro_highrate_z_thres_u8)
18458:Core/Src/bno055.c **** {
 39052              		.loc 1 18458 1 is_stmt 1 view -0
 39053              		.cfi_startproc
 39054              		@ args = 0, pretend = 0, frame = 8
 39055              		@ frame_needed = 0, uses_anonymous_args = 0
 39056              		.loc 1 18458 1 is_stmt 0 view .LVU10893
 39057 0000 30B5     		push	{r4, r5, lr}
 39058              	.LCFI1049:
 39059              		.cfi_def_cfa_offset 12
 39060              		.cfi_offset 4, -12
 39061              		.cfi_offset 5, -8
 39062              		.cfi_offset 14, -4
 39063 0002 83B0     		sub	sp, sp, #12
 39064              	.LCFI1050:
 39065              		.cfi_def_cfa_offset 24
18459:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 39066              		.loc 1 18459 5 is_stmt 1 view .LVU10894
ARM GAS  /tmp/ccWoU29M.s 			page 1092


 39067              	.LVL4799:
18460:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 39068              		.loc 1 18460 5 view .LVU10895
 39069              		.loc 1 18460 8 is_stmt 0 view .LVU10896
 39070 0004 0023     		movs	r3, #0
 39071 0006 8DF80730 		strb	r3, [sp, #7]
18461:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 39072              		.loc 1 18461 5 is_stmt 1 view .LVU10897
 39073              	.LVL4800:
18462:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 39074              		.loc 1 18462 5 view .LVU10898
 39075              		.loc 1 18462 8 is_stmt 0 view .LVU10899
 39076 000a 8DF80630 		strb	r3, [sp, #6]
18463:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 39077              		.loc 1 18463 5 is_stmt 1 view .LVU10900
 39078              	.LVL4801:
18464:Core/Src/bno055.c **** 
18465:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18466:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39079              		.loc 1 18466 5 view .LVU10901
 39080              		.loc 1 18466 18 is_stmt 0 view .LVU10902
 39081 000e 294B     		ldr	r3, .L2754
 39082 0010 1B68     		ldr	r3, [r3]
 39083              		.loc 1 18466 8 view .LVU10903
 39084 0012 002B     		cmp	r3, #0
 39085 0014 4AD0     		beq	.L2746
 39086 0016 0546     		mov	r5, r0
18467:Core/Src/bno055.c ****     {
18468:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18469:Core/Src/bno055.c ****     }
18470:Core/Src/bno055.c ****     else
18471:Core/Src/bno055.c ****     {
18472:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18473:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18474:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18475:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 39087              		.loc 1 18475 9 is_stmt 1 view .LVU10904
 39088              		.loc 1 18475 19 is_stmt 0 view .LVU10905
 39089 0018 0DF10600 		add	r0, sp, #6
 39090              	.LVL4802:
 39091              		.loc 1 18475 19 view .LVU10906
 39092 001c FFF7FEFF 		bl	bno055_get_operation_mode
 39093              	.LVL4803:
18476:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 39094              		.loc 1 18476 9 is_stmt 1 view .LVU10907
 39095              		.loc 1 18476 12 is_stmt 0 view .LVU10908
 39096 0020 0446     		mov	r4, r0
 39097 0022 90BB     		cbnz	r0, .L2747
18477:Core/Src/bno055.c ****         {
18478:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39098              		.loc 1 18478 13 is_stmt 1 view .LVU10909
 39099              		.loc 1 18478 32 is_stmt 0 view .LVU10910
 39100 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 39101              		.loc 1 18478 16 view .LVU10911
 39102 0028 1BB9     		cbnz	r3, .L2751
 39103              	.LVL4804:
 39104              	.L2745:
ARM GAS  /tmp/ccWoU29M.s 			page 1093


18479:Core/Src/bno055.c ****             {
18480:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18481:Core/Src/bno055.c ****             }
18482:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 39105              		.loc 1 18482 13 is_stmt 1 view .LVU10912
 39106              		.loc 1 18482 16 is_stmt 0 view .LVU10913
 39107 002a 44B1     		cbz	r4, .L2752
18483:Core/Src/bno055.c ****             {
18484:Core/Src/bno055.c ****                 /* Write page as one */
18485:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18486:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18487:Core/Src/bno055.c ****                 {
18488:Core/Src/bno055.c ****                     /* Write the value
18489:Core/Src/bno055.c ****                      * of gyro highrate z threshold*/
18490:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18491:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
18492:Core/Src/bno055.c ****                                                               &data_u8r,
18493:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18494:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18495:Core/Src/bno055.c ****                     {
18496:Core/Src/bno055.c ****                         data_u8r =
18497:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_THRES, gyro_highra
18498:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18499:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
18500:Core/Src/bno055.c ****                                                                     &data_u8r,
18501:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18502:Core/Src/bno055.c ****                     }
18503:Core/Src/bno055.c ****                 }
18504:Core/Src/bno055.c ****                 else
18505:Core/Src/bno055.c ****                 {
18506:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18507:Core/Src/bno055.c ****                 }
18508:Core/Src/bno055.c ****             }
18509:Core/Src/bno055.c ****             else
18510:Core/Src/bno055.c ****             {
18511:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 39108              		.loc 1 18511 26 view .LVU10914
 39109 002c 4FF0FF34 		mov	r4, #-1
 39110              	.LVL4805:
 39111              		.loc 1 18511 26 view .LVU10915
 39112 0030 2DE0     		b	.L2744
 39113              	.LVL4806:
 39114              	.L2751:
18480:Core/Src/bno055.c ****             }
 39115              		.loc 1 18480 17 is_stmt 1 view .LVU10916
18480:Core/Src/bno055.c ****             }
 39116              		.loc 1 18480 28 is_stmt 0 view .LVU10917
 39117 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 39118              	.LVL4807:
18480:Core/Src/bno055.c ****             }
 39119              		.loc 1 18480 25 view .LVU10918
 39120 0036 54FA80F4 		uxtab	r4, r4, r0
 39121 003a 64B2     		sxtb	r4, r4
 39122              	.LVL4808:
18480:Core/Src/bno055.c ****             }
 39123              		.loc 1 18480 25 view .LVU10919
 39124 003c F5E7     		b	.L2745
ARM GAS  /tmp/ccWoU29M.s 			page 1094


 39125              	.L2752:
18485:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39126              		.loc 1 18485 17 is_stmt 1 view .LVU10920
18485:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39127              		.loc 1 18485 30 is_stmt 0 view .LVU10921
 39128 003e 0120     		movs	r0, #1
 39129 0040 FFF7FEFF 		bl	bno055_write_page_id
 39130              	.LVL4809:
18486:Core/Src/bno055.c ****                 {
 39131              		.loc 1 18486 17 is_stmt 1 view .LVU10922
18486:Core/Src/bno055.c ****                 {
 39132              		.loc 1 18486 20 is_stmt 0 view .LVU10923
 39133 0044 48BB     		cbnz	r0, .L2749
18490:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
 39134              		.loc 1 18490 21 is_stmt 1 view .LVU10924
18490:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
 39135              		.loc 1 18490 40 is_stmt 0 view .LVU10925
 39136 0046 1B4B     		ldr	r3, .L2754
 39137 0048 1868     		ldr	r0, [r3]
 39138              	.LVL4810:
18490:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
 39139              		.loc 1 18490 40 view .LVU10926
 39140 004a 0469     		ldr	r4, [r0, #16]
 39141              	.LVL4811:
18490:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
 39142              		.loc 1 18490 32 view .LVU10927
 39143 004c 0123     		movs	r3, #1
 39144 004e 0DF10702 		add	r2, sp, #7
 39145 0052 1C21     		movs	r1, #28
 39146 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39147 0056 A047     		blx	r4
 39148              	.LVL4812:
18494:Core/Src/bno055.c ****                     {
 39149              		.loc 1 18494 21 is_stmt 1 view .LVU10928
18494:Core/Src/bno055.c ****                     {
 39150              		.loc 1 18494 24 is_stmt 0 view .LVU10929
 39151 0058 0446     		mov	r4, r0
 39152 005a C0B9     		cbnz	r0, .L2744
18496:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_THRES, gyro_highra
 39153              		.loc 1 18496 25 is_stmt 1 view .LVU10930
18497:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39154              		.loc 1 18497 29 is_stmt 0 view .LVU10931
 39155 005c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 39156              	.LVL4813:
18497:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39157              		.loc 1 18497 29 view .LVU10932
 39158 0060 20F01F00 		bic	r0, r0, #31
 39159 0064 43B2     		sxtb	r3, r0
 39160 0066 05F01F00 		and	r0, r5, #31
 39161 006a 1843     		orrs	r0, r0, r3
18496:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_THRES, gyro_highra
 39162              		.loc 1 18496 34 view .LVU10933
 39163 006c 8DF80700 		strb	r0, [sp, #7]
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 39164              		.loc 1 18498 25 is_stmt 1 view .LVU10934
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 39165              		.loc 1 18498 45 is_stmt 0 view .LVU10935
ARM GAS  /tmp/ccWoU29M.s 			page 1095


 39166 0070 104B     		ldr	r3, .L2754
 39167 0072 1868     		ldr	r0, [r3]
 39168 0074 C568     		ldr	r5, [r0, #12]
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 39169              		.loc 1 18498 37 view .LVU10936
 39170 0076 0123     		movs	r3, #1
 39171 0078 0DF10702 		add	r2, sp, #7
 39172 007c 1C21     		movs	r1, #28
 39173 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39174 0080 A847     		blx	r5
 39175              	.LVL4814:
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 39176              		.loc 1 18498 34 view .LVU10937
 39177 0082 54FA80F4 		uxtab	r4, r4, r0
 39178 0086 64B2     		sxtb	r4, r4
 39179              	.LVL4815:
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 39180              		.loc 1 18498 34 view .LVU10938
 39181 0088 01E0     		b	.L2744
 39182              	.LVL4816:
 39183              	.L2747:
18512:Core/Src/bno055.c ****             }
18513:Core/Src/bno055.c ****         }
18514:Core/Src/bno055.c ****         else
18515:Core/Src/bno055.c ****         {
18516:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 39184              		.loc 1 18516 22 view .LVU10939
 39185 008a 4FF0FF34 		mov	r4, #-1
 39186              	.LVL4817:
 39187              	.L2744:
18517:Core/Src/bno055.c ****         }
18518:Core/Src/bno055.c ****     }
18519:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39188              		.loc 1 18519 5 is_stmt 1 view .LVU10940
 39189              		.loc 1 18519 24 is_stmt 0 view .LVU10941
 39190 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 39191              		.loc 1 18519 8 view .LVU10942
 39192 0092 28B9     		cbnz	r0, .L2753
 39193              	.LVL4818:
 39194              	.L2743:
18520:Core/Src/bno055.c ****     {
18521:Core/Src/bno055.c ****         /* set the operation mode of
18522:Core/Src/bno055.c ****          * previous operation mode*/
18523:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18524:Core/Src/bno055.c ****     }
18525:Core/Src/bno055.c **** 
18526:Core/Src/bno055.c ****     return com_rslt;
18527:Core/Src/bno055.c **** }
 39195              		.loc 1 18527 1 view .LVU10943
 39196 0094 2046     		mov	r0, r4
 39197 0096 03B0     		add	sp, sp, #12
 39198              	.LCFI1051:
 39199              		.cfi_remember_state
 39200              		.cfi_def_cfa_offset 12
 39201              		@ sp needed
 39202 0098 30BD     		pop	{r4, r5, pc}
 39203              	.LVL4819:
ARM GAS  /tmp/ccWoU29M.s 			page 1096


 39204              	.L2749:
 39205              	.LCFI1052:
 39206              		.cfi_restore_state
18506:Core/Src/bno055.c ****                 }
 39207              		.loc 1 18506 30 view .LVU10944
 39208 009a 4FF0FF34 		mov	r4, #-1
 39209              	.LVL4820:
18506:Core/Src/bno055.c ****                 }
 39210              		.loc 1 18506 30 view .LVU10945
 39211 009e F6E7     		b	.L2744
 39212              	.LVL4821:
 39213              	.L2753:
18523:Core/Src/bno055.c ****     }
 39214              		.loc 1 18523 9 is_stmt 1 view .LVU10946
18523:Core/Src/bno055.c ****     }
 39215              		.loc 1 18523 21 is_stmt 0 view .LVU10947
 39216 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 39217              	.LVL4822:
18523:Core/Src/bno055.c ****     }
 39218              		.loc 1 18523 18 view .LVU10948
 39219 00a4 54FA80F4 		uxtab	r4, r4, r0
 39220              	.LVL4823:
18523:Core/Src/bno055.c ****     }
 39221              		.loc 1 18523 18 view .LVU10949
 39222 00a8 64B2     		sxtb	r4, r4
 39223              	.LVL4824:
18523:Core/Src/bno055.c ****     }
 39224              		.loc 1 18523 18 view .LVU10950
 39225 00aa F3E7     		b	.L2743
 39226              	.LVL4825:
 39227              	.L2746:
18468:Core/Src/bno055.c ****     }
 39228              		.loc 1 18468 16 view .LVU10951
 39229 00ac 6FF07E04 		mvn	r4, #126
 39230 00b0 F0E7     		b	.L2743
 39231              	.L2755:
 39232 00b2 00BF     		.align	2
 39233              	.L2754:
 39234 00b4 00000000 		.word	.LANCHOR0
 39235              		.cfi_endproc
 39236              	.LFE264:
 39238              		.section	.text.bno055_get_gyro_highrate_z_hyst,"ax",%progbits
 39239              		.align	1
 39240              		.global	bno055_get_gyro_highrate_z_hyst
 39241              		.syntax unified
 39242              		.thumb
 39243              		.thumb_func
 39244              		.fpu fpv4-sp-d16
 39246              	bno055_get_gyro_highrate_z_hyst:
 39247              	.LVL4826:
 39248              	.LFB265:
18528:Core/Src/bno055.c **** 
18529:Core/Src/bno055.c **** /*!
18530:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate z hysteresis
18531:Core/Src/bno055.c ****  *  from page one register from 0x1C bit 5 to 6
18532:Core/Src/bno055.c ****  *
18533:Core/Src/bno055.c ****  *  @param gyro_highrate_z_hyst_u8 : The value of gyro highrate z hysteresis
ARM GAS  /tmp/ccWoU29M.s 			page 1097


18534:Core/Src/bno055.c ****  *
18535:Core/Src/bno055.c ****  *  @return results of bus communication function
18536:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18537:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18538:Core/Src/bno055.c ****  *
18539:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
18540:Core/Src/bno055.c ****  *
18541:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_z_hyst_u8) *4 LSB
18542:Core/Src/bno055.c ****  *
18543:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
18544:Core/Src/bno055.c ****  *
18545:Core/Src/bno055.c ****  *  gyro_range_u8     |  hysteresis     |     LSB
18546:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18547:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
18548:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
18549:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
18550:Core/Src/bno055.c ****  */
18551:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_z_hyst(u8 *gyro_highrate_z_hyst_u8)
18552:Core/Src/bno055.c **** {
 39249              		.loc 1 18552 1 is_stmt 1 view -0
 39250              		.cfi_startproc
 39251              		@ args = 0, pretend = 0, frame = 8
 39252              		@ frame_needed = 0, uses_anonymous_args = 0
 39253              		.loc 1 18552 1 is_stmt 0 view .LVU10953
 39254 0000 30B5     		push	{r4, r5, lr}
 39255              	.LCFI1053:
 39256              		.cfi_def_cfa_offset 12
 39257              		.cfi_offset 4, -12
 39258              		.cfi_offset 5, -8
 39259              		.cfi_offset 14, -4
 39260 0002 83B0     		sub	sp, sp, #12
 39261              	.LCFI1054:
 39262              		.cfi_def_cfa_offset 24
18553:Core/Src/bno055.c ****     /* Variable used to return value of
18554:Core/Src/bno055.c ****      * communication routine*/
18555:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 39263              		.loc 1 18555 5 is_stmt 1 view .LVU10954
 39264              	.LVL4827:
18556:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 39265              		.loc 1 18556 5 view .LVU10955
 39266              		.loc 1 18556 8 is_stmt 0 view .LVU10956
 39267 0004 0023     		movs	r3, #0
 39268 0006 8DF80730 		strb	r3, [sp, #7]
18557:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 39269              		.loc 1 18557 5 is_stmt 1 view .LVU10957
 39270              	.LVL4828:
18558:Core/Src/bno055.c **** 
18559:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18560:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39271              		.loc 1 18560 5 view .LVU10958
 39272              		.loc 1 18560 18 is_stmt 0 view .LVU10959
 39273 000a 144B     		ldr	r3, .L2764
 39274 000c 1B68     		ldr	r3, [r3]
 39275              		.loc 1 18560 8 view .LVU10960
 39276 000e F3B1     		cbz	r3, .L2760
 39277 0010 0446     		mov	r4, r0
18561:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccWoU29M.s 			page 1098


18562:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18563:Core/Src/bno055.c ****     }
18564:Core/Src/bno055.c ****     else
18565:Core/Src/bno055.c ****     {
18566:Core/Src/bno055.c ****         /*condition check for page, gyro highrate z hysteresis is
18567:Core/Src/bno055.c ****          * available in the page one*/
18568:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 39278              		.loc 1 18568 9 is_stmt 1 view .LVU10961
 39279              		.loc 1 18568 21 is_stmt 0 view .LVU10962
 39280 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39281              		.loc 1 18568 12 view .LVU10963
 39282 0014 012B     		cmp	r3, #1
 39283 0016 14D1     		bne	.L2763
 39284              	.LVL4829:
 39285              	.L2758:
18569:Core/Src/bno055.c ****         {
18570:Core/Src/bno055.c ****             /* Write page as one */
18571:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18572:Core/Src/bno055.c ****         }
18573:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 39286              		.loc 1 18573 53 discriminator 1 view .LVU10964
 39287 0018 104B     		ldr	r3, .L2764
 39288 001a 1B68     		ldr	r3, [r3]
 39289 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39290              		.loc 1 18573 41 discriminator 1 view .LVU10965
 39291 001e 012B     		cmp	r3, #1
 39292 0020 18D1     		bne	.L2761
 39293              	.L2759:
18574:Core/Src/bno055.c ****         {
18575:Core/Src/bno055.c ****             /* Read the value of gyro highrate z hysteresis*/
18576:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 39294              		.loc 1 18576 13 is_stmt 1 view .LVU10966
 39295              		.loc 1 18576 32 is_stmt 0 view .LVU10967
 39296 0022 0E4B     		ldr	r3, .L2764
 39297 0024 1868     		ldr	r0, [r3]
 39298 0026 0569     		ldr	r5, [r0, #16]
 39299              		.loc 1 18576 24 view .LVU10968
 39300 0028 0123     		movs	r3, #1
 39301 002a 0DF10702 		add	r2, sp, #7
 39302 002e 1C21     		movs	r1, #28
 39303 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39304 0032 A847     		blx	r5
 39305              	.LVL4830:
18577:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Z_HYST_REG,
18578:Core/Src/bno055.c ****                                                       &data_u8r,
18579:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18580:Core/Src/bno055.c ****             *gyro_highrate_z_hyst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_HYST);
 39306              		.loc 1 18580 13 is_stmt 1 view .LVU10969
 39307              		.loc 1 18580 40 is_stmt 0 view .LVU10970
 39308 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 39309 0038 C3F34113 		ubfx	r3, r3, #5, #2
 39310              		.loc 1 18580 38 view .LVU10971
 39311 003c 2370     		strb	r3, [r4]
 39312              	.LVL4831:
 39313              	.L2757:
18581:Core/Src/bno055.c ****         }
18582:Core/Src/bno055.c ****         else
ARM GAS  /tmp/ccWoU29M.s 			page 1099


18583:Core/Src/bno055.c ****         {
18584:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18585:Core/Src/bno055.c ****         }
18586:Core/Src/bno055.c ****     }
18587:Core/Src/bno055.c **** 
18588:Core/Src/bno055.c ****     return com_rslt;
18589:Core/Src/bno055.c **** }
 39314              		.loc 1 18589 1 view .LVU10972
 39315 003e 03B0     		add	sp, sp, #12
 39316              	.LCFI1055:
 39317              		.cfi_remember_state
 39318              		.cfi_def_cfa_offset 12
 39319              		@ sp needed
 39320 0040 30BD     		pop	{r4, r5, pc}
 39321              	.LVL4832:
 39322              	.L2763:
 39323              	.LCFI1056:
 39324              		.cfi_restore_state
18571:Core/Src/bno055.c ****         }
 39325              		.loc 1 18571 13 is_stmt 1 view .LVU10973
18571:Core/Src/bno055.c ****         }
 39326              		.loc 1 18571 23 is_stmt 0 view .LVU10974
 39327 0042 0120     		movs	r0, #1
 39328              	.LVL4833:
18571:Core/Src/bno055.c ****         }
 39329              		.loc 1 18571 23 view .LVU10975
 39330 0044 FFF7FEFF 		bl	bno055_write_page_id
 39331              	.LVL4834:
18573:Core/Src/bno055.c ****         {
 39332              		.loc 1 18573 9 is_stmt 1 view .LVU10976
18573:Core/Src/bno055.c ****         {
 39333              		.loc 1 18573 12 is_stmt 0 view .LVU10977
 39334 0048 0028     		cmp	r0, #0
 39335 004a EAD0     		beq	.L2759
 39336 004c E4E7     		b	.L2758
 39337              	.LVL4835:
 39338              	.L2760:
18562:Core/Src/bno055.c ****     }
 39339              		.loc 1 18562 16 view .LVU10978
 39340 004e 6FF07E00 		mvn	r0, #126
 39341              	.LVL4836:
18562:Core/Src/bno055.c ****     }
 39342              		.loc 1 18562 16 view .LVU10979
 39343 0052 F4E7     		b	.L2757
 39344              	.LVL4837:
 39345              	.L2761:
18584:Core/Src/bno055.c ****         }
 39346              		.loc 1 18584 22 view .LVU10980
 39347 0054 4FF0FF30 		mov	r0, #-1
 39348 0058 F1E7     		b	.L2757
 39349              	.L2765:
 39350 005a 00BF     		.align	2
 39351              	.L2764:
 39352 005c 00000000 		.word	.LANCHOR0
 39353              		.cfi_endproc
 39354              	.LFE265:
 39356              		.section	.text.bno055_set_gyro_highrate_z_hyst,"ax",%progbits
ARM GAS  /tmp/ccWoU29M.s 			page 1100


 39357              		.align	1
 39358              		.global	bno055_set_gyro_highrate_z_hyst
 39359              		.syntax unified
 39360              		.thumb
 39361              		.thumb_func
 39362              		.fpu fpv4-sp-d16
 39364              	bno055_set_gyro_highrate_z_hyst:
 39365              	.LVL4838:
 39366              	.LFB266:
18590:Core/Src/bno055.c **** 
18591:Core/Src/bno055.c **** /*!
18592:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate z hysteresis
18593:Core/Src/bno055.c ****  *  from page one register from 0x1C bit 5 to 6
18594:Core/Src/bno055.c ****  *
18595:Core/Src/bno055.c ****  *  @param gyro_highrate_z_hyst_u8 : The value of gyro highrate z hysteresis
18596:Core/Src/bno055.c ****  *
18597:Core/Src/bno055.c ****  *  @return results of bus communication function
18598:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18599:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18600:Core/Src/bno055.c ****  *
18601:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
18602:Core/Src/bno055.c ****  *
18603:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_z_hyst_u8) *4 LSB
18604:Core/Src/bno055.c ****  *
18605:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
18606:Core/Src/bno055.c ****  *
18607:Core/Src/bno055.c ****  *  gyro_range_u8     |  hysteresis     |     LSB
18608:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18609:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
18610:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
18611:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
18612:Core/Src/bno055.c ****  */
18613:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_z_hyst(u8 gyro_highrate_z_hyst_u8)
18614:Core/Src/bno055.c **** {
 39367              		.loc 1 18614 1 is_stmt 1 view -0
 39368              		.cfi_startproc
 39369              		@ args = 0, pretend = 0, frame = 8
 39370              		@ frame_needed = 0, uses_anonymous_args = 0
 39371              		.loc 1 18614 1 is_stmt 0 view .LVU10982
 39372 0000 30B5     		push	{r4, r5, lr}
 39373              	.LCFI1057:
 39374              		.cfi_def_cfa_offset 12
 39375              		.cfi_offset 4, -12
 39376              		.cfi_offset 5, -8
 39377              		.cfi_offset 14, -4
 39378 0002 83B0     		sub	sp, sp, #12
 39379              	.LCFI1058:
 39380              		.cfi_def_cfa_offset 24
18615:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 39381              		.loc 1 18615 5 is_stmt 1 view .LVU10983
 39382              	.LVL4839:
18616:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 39383              		.loc 1 18616 5 view .LVU10984
 39384              		.loc 1 18616 8 is_stmt 0 view .LVU10985
 39385 0004 0023     		movs	r3, #0
 39386 0006 8DF80730 		strb	r3, [sp, #7]
18617:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/ccWoU29M.s 			page 1101


 39387              		.loc 1 18617 5 is_stmt 1 view .LVU10986
 39388              	.LVL4840:
18618:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 39389              		.loc 1 18618 5 view .LVU10987
 39390              		.loc 1 18618 8 is_stmt 0 view .LVU10988
 39391 000a 8DF80630 		strb	r3, [sp, #6]
18619:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 39392              		.loc 1 18619 5 is_stmt 1 view .LVU10989
 39393              	.LVL4841:
18620:Core/Src/bno055.c **** 
18621:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18622:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39394              		.loc 1 18622 5 view .LVU10990
 39395              		.loc 1 18622 18 is_stmt 0 view .LVU10991
 39396 000e 2A4B     		ldr	r3, .L2778
 39397 0010 1B68     		ldr	r3, [r3]
 39398              		.loc 1 18622 8 view .LVU10992
 39399 0012 002B     		cmp	r3, #0
 39400 0014 4CD0     		beq	.L2770
 39401 0016 0546     		mov	r5, r0
18623:Core/Src/bno055.c ****     {
18624:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18625:Core/Src/bno055.c ****     }
18626:Core/Src/bno055.c ****     else
18627:Core/Src/bno055.c ****     {
18628:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18629:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18630:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18631:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 39402              		.loc 1 18631 9 is_stmt 1 view .LVU10993
 39403              		.loc 1 18631 19 is_stmt 0 view .LVU10994
 39404 0018 0DF10600 		add	r0, sp, #6
 39405              	.LVL4842:
 39406              		.loc 1 18631 19 view .LVU10995
 39407 001c FFF7FEFF 		bl	bno055_get_operation_mode
 39408              	.LVL4843:
18632:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 39409              		.loc 1 18632 9 is_stmt 1 view .LVU10996
 39410              		.loc 1 18632 12 is_stmt 0 view .LVU10997
 39411 0020 0446     		mov	r4, r0
 39412 0022 0028     		cmp	r0, #0
 39413 0024 33D1     		bne	.L2771
18633:Core/Src/bno055.c ****         {
18634:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39414              		.loc 1 18634 13 is_stmt 1 view .LVU10998
 39415              		.loc 1 18634 32 is_stmt 0 view .LVU10999
 39416 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 39417              		.loc 1 18634 16 view .LVU11000
 39418 002a 1BB9     		cbnz	r3, .L2775
 39419              	.LVL4844:
 39420              	.L2769:
18635:Core/Src/bno055.c ****             {
18636:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18637:Core/Src/bno055.c ****             }
18638:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 39421              		.loc 1 18638 13 is_stmt 1 view .LVU11001
 39422              		.loc 1 18638 16 is_stmt 0 view .LVU11002
ARM GAS  /tmp/ccWoU29M.s 			page 1102


 39423 002c 44B1     		cbz	r4, .L2776
18639:Core/Src/bno055.c ****             {
18640:Core/Src/bno055.c ****                 /* Write page as one */
18641:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18642:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18643:Core/Src/bno055.c ****                 {
18644:Core/Src/bno055.c ****                     /* Write the value
18645:Core/Src/bno055.c ****                      * of gyro highrate z hysteresis*/
18646:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18647:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
18648:Core/Src/bno055.c ****                                                               &data_u8r,
18649:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18650:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18651:Core/Src/bno055.c ****                     {
18652:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_HYST, gyro_
18653:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18654:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
18655:Core/Src/bno055.c ****                                                                     &data_u8r,
18656:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18657:Core/Src/bno055.c ****                     }
18658:Core/Src/bno055.c ****                 }
18659:Core/Src/bno055.c ****                 else
18660:Core/Src/bno055.c ****                 {
18661:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18662:Core/Src/bno055.c ****                 }
18663:Core/Src/bno055.c ****             }
18664:Core/Src/bno055.c ****             else
18665:Core/Src/bno055.c ****             {
18666:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 39424              		.loc 1 18666 26 view .LVU11003
 39425 002e 4FF0FF34 		mov	r4, #-1
 39426              	.LVL4845:
 39427              		.loc 1 18666 26 view .LVU11004
 39428 0032 2EE0     		b	.L2768
 39429              	.LVL4846:
 39430              	.L2775:
18636:Core/Src/bno055.c ****             }
 39431              		.loc 1 18636 17 is_stmt 1 view .LVU11005
18636:Core/Src/bno055.c ****             }
 39432              		.loc 1 18636 28 is_stmt 0 view .LVU11006
 39433 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 39434              	.LVL4847:
18636:Core/Src/bno055.c ****             }
 39435              		.loc 1 18636 25 view .LVU11007
 39436 0038 54FA80F4 		uxtab	r4, r4, r0
 39437 003c 64B2     		sxtb	r4, r4
 39438              	.LVL4848:
18636:Core/Src/bno055.c ****             }
 39439              		.loc 1 18636 25 view .LVU11008
 39440 003e F5E7     		b	.L2769
 39441              	.L2776:
18641:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39442              		.loc 1 18641 17 is_stmt 1 view .LVU11009
18641:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39443              		.loc 1 18641 30 is_stmt 0 view .LVU11010
 39444 0040 0120     		movs	r0, #1
 39445 0042 FFF7FEFF 		bl	bno055_write_page_id
ARM GAS  /tmp/ccWoU29M.s 			page 1103


 39446              	.LVL4849:
18642:Core/Src/bno055.c ****                 {
 39447              		.loc 1 18642 17 is_stmt 1 view .LVU11011
18642:Core/Src/bno055.c ****                 {
 39448              		.loc 1 18642 20 is_stmt 0 view .LVU11012
 39449 0046 50BB     		cbnz	r0, .L2773
18646:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
 39450              		.loc 1 18646 21 is_stmt 1 view .LVU11013
18646:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
 39451              		.loc 1 18646 40 is_stmt 0 view .LVU11014
 39452 0048 1B4B     		ldr	r3, .L2778
 39453 004a 1868     		ldr	r0, [r3]
 39454              	.LVL4850:
18646:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
 39455              		.loc 1 18646 40 view .LVU11015
 39456 004c 0469     		ldr	r4, [r0, #16]
 39457              	.LVL4851:
18646:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
 39458              		.loc 1 18646 32 view .LVU11016
 39459 004e 0123     		movs	r3, #1
 39460 0050 0DF10702 		add	r2, sp, #7
 39461 0054 1C21     		movs	r1, #28
 39462 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39463 0058 A047     		blx	r4
 39464              	.LVL4852:
18650:Core/Src/bno055.c ****                     {
 39465              		.loc 1 18650 21 is_stmt 1 view .LVU11017
18650:Core/Src/bno055.c ****                     {
 39466              		.loc 1 18650 24 is_stmt 0 view .LVU11018
 39467 005a 0446     		mov	r4, r0
 39468 005c C8B9     		cbnz	r0, .L2768
18652:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39469              		.loc 1 18652 25 is_stmt 1 view .LVU11019
18652:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39470              		.loc 1 18652 36 is_stmt 0 view .LVU11020
 39471 005e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 39472              	.LVL4853:
18652:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39473              		.loc 1 18652 36 view .LVU11021
 39474 0062 20F06000 		bic	r0, r0, #96
 39475 0066 43B2     		sxtb	r3, r0
 39476 0068 6801     		lsls	r0, r5, #5
 39477 006a 00F06000 		and	r0, r0, #96
 39478 006e 1843     		orrs	r0, r0, r3
18652:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39479              		.loc 1 18652 34 view .LVU11022
 39480 0070 8DF80700 		strb	r0, [sp, #7]
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 39481              		.loc 1 18653 25 is_stmt 1 view .LVU11023
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 39482              		.loc 1 18653 45 is_stmt 0 view .LVU11024
 39483 0074 104B     		ldr	r3, .L2778
 39484 0076 1868     		ldr	r0, [r3]
 39485 0078 C568     		ldr	r5, [r0, #12]
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 39486              		.loc 1 18653 37 view .LVU11025
 39487 007a 0123     		movs	r3, #1
ARM GAS  /tmp/ccWoU29M.s 			page 1104


 39488 007c 0DF10702 		add	r2, sp, #7
 39489 0080 1C21     		movs	r1, #28
 39490 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39491 0084 A847     		blx	r5
 39492              	.LVL4854:
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 39493              		.loc 1 18653 34 view .LVU11026
 39494 0086 54FA80F4 		uxtab	r4, r4, r0
 39495 008a 64B2     		sxtb	r4, r4
 39496              	.LVL4855:
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 39497              		.loc 1 18653 34 view .LVU11027
 39498 008c 01E0     		b	.L2768
 39499              	.LVL4856:
 39500              	.L2771:
18667:Core/Src/bno055.c ****             }
18668:Core/Src/bno055.c ****         }
18669:Core/Src/bno055.c ****         else
18670:Core/Src/bno055.c ****         {
18671:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 39501              		.loc 1 18671 22 view .LVU11028
 39502 008e 4FF0FF34 		mov	r4, #-1
 39503              	.LVL4857:
 39504              	.L2768:
18672:Core/Src/bno055.c ****         }
18673:Core/Src/bno055.c ****     }
18674:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39505              		.loc 1 18674 5 is_stmt 1 view .LVU11029
 39506              		.loc 1 18674 24 is_stmt 0 view .LVU11030
 39507 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 39508              		.loc 1 18674 8 view .LVU11031
 39509 0096 28B9     		cbnz	r0, .L2777
 39510              	.LVL4858:
 39511              	.L2767:
18675:Core/Src/bno055.c ****     {
18676:Core/Src/bno055.c ****         /* set the operation mode of
18677:Core/Src/bno055.c ****          * previous operation mode*/
18678:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18679:Core/Src/bno055.c ****     }
18680:Core/Src/bno055.c **** 
18681:Core/Src/bno055.c ****     return com_rslt;
18682:Core/Src/bno055.c **** }
 39512              		.loc 1 18682 1 view .LVU11032
 39513 0098 2046     		mov	r0, r4
 39514 009a 03B0     		add	sp, sp, #12
 39515              	.LCFI1059:
 39516              		.cfi_remember_state
 39517              		.cfi_def_cfa_offset 12
 39518              		@ sp needed
 39519 009c 30BD     		pop	{r4, r5, pc}
 39520              	.LVL4859:
 39521              	.L2773:
 39522              	.LCFI1060:
 39523              		.cfi_restore_state
18661:Core/Src/bno055.c ****                 }
 39524              		.loc 1 18661 30 view .LVU11033
 39525 009e 4FF0FF34 		mov	r4, #-1
ARM GAS  /tmp/ccWoU29M.s 			page 1105


 39526              	.LVL4860:
18661:Core/Src/bno055.c ****                 }
 39527              		.loc 1 18661 30 view .LVU11034
 39528 00a2 F6E7     		b	.L2768
 39529              	.LVL4861:
 39530              	.L2777:
18678:Core/Src/bno055.c ****     }
 39531              		.loc 1 18678 9 is_stmt 1 view .LVU11035
18678:Core/Src/bno055.c ****     }
 39532              		.loc 1 18678 21 is_stmt 0 view .LVU11036
 39533 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 39534              	.LVL4862:
18678:Core/Src/bno055.c ****     }
 39535              		.loc 1 18678 18 view .LVU11037
 39536 00a8 54FA80F4 		uxtab	r4, r4, r0
 39537              	.LVL4863:
18678:Core/Src/bno055.c ****     }
 39538              		.loc 1 18678 18 view .LVU11038
 39539 00ac 64B2     		sxtb	r4, r4
 39540              	.LVL4864:
18678:Core/Src/bno055.c ****     }
 39541              		.loc 1 18678 18 view .LVU11039
 39542 00ae F3E7     		b	.L2767
 39543              	.LVL4865:
 39544              	.L2770:
18624:Core/Src/bno055.c ****     }
 39545              		.loc 1 18624 16 view .LVU11040
 39546 00b0 6FF07E04 		mvn	r4, #126
 39547 00b4 F0E7     		b	.L2767
 39548              	.L2779:
 39549 00b6 00BF     		.align	2
 39550              	.L2778:
 39551 00b8 00000000 		.word	.LANCHOR0
 39552              		.cfi_endproc
 39553              	.LFE266:
 39555              		.section	.text.bno055_get_gyro_highrate_z_durn,"ax",%progbits
 39556              		.align	1
 39557              		.global	bno055_get_gyro_highrate_z_durn
 39558              		.syntax unified
 39559              		.thumb
 39560              		.thumb_func
 39561              		.fpu fpv4-sp-d16
 39563              	bno055_get_gyro_highrate_z_durn:
 39564              	.LVL4866:
 39565              	.LFB267:
18683:Core/Src/bno055.c **** 
18684:Core/Src/bno055.c **** /*!
18685:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate z duration
18686:Core/Src/bno055.c ****  *  from page one register from 0x1D bit 0 to 7
18687:Core/Src/bno055.c ****  *
18688:Core/Src/bno055.c ****  *  @param gyro_highrate_z_durn_u8 : The value of gyro highrate z duration
18689:Core/Src/bno055.c ****  *
18690:Core/Src/bno055.c ****  *  @return results of bus communication function
18691:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18692:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18693:Core/Src/bno055.c ****  *
18694:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
ARM GAS  /tmp/ccWoU29M.s 			page 1106


18695:Core/Src/bno055.c ****  *
18696:Core/Src/bno055.c ****  *  (1 + gyro_highrate_z_durn_u8)*2.5ms
18697:Core/Src/bno055.c ****  */
18698:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_z_durn(u8 *gyro_highrate_z_durn_u8)
18699:Core/Src/bno055.c **** {
 39566              		.loc 1 18699 1 is_stmt 1 view -0
 39567              		.cfi_startproc
 39568              		@ args = 0, pretend = 0, frame = 8
 39569              		@ frame_needed = 0, uses_anonymous_args = 0
 39570              		.loc 1 18699 1 is_stmt 0 view .LVU11042
 39571 0000 70B5     		push	{r4, r5, r6, lr}
 39572              	.LCFI1061:
 39573              		.cfi_def_cfa_offset 16
 39574              		.cfi_offset 4, -16
 39575              		.cfi_offset 5, -12
 39576              		.cfi_offset 6, -8
 39577              		.cfi_offset 14, -4
 39578 0002 82B0     		sub	sp, sp, #8
 39579              	.LCFI1062:
 39580              		.cfi_def_cfa_offset 24
18700:Core/Src/bno055.c ****     /* Variable used to return value of
18701:Core/Src/bno055.c ****      * communication routine*/
18702:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 39581              		.loc 1 18702 5 is_stmt 1 view .LVU11043
 39582              	.LVL4867:
18703:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 39583              		.loc 1 18703 5 view .LVU11044
 39584              		.loc 1 18703 8 is_stmt 0 view .LVU11045
 39585 0004 0023     		movs	r3, #0
 39586 0006 8DF80730 		strb	r3, [sp, #7]
18704:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 39587              		.loc 1 18704 5 is_stmt 1 view .LVU11046
 39588              	.LVL4868:
18705:Core/Src/bno055.c **** 
18706:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18707:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39589              		.loc 1 18707 5 view .LVU11047
 39590              		.loc 1 18707 18 is_stmt 0 view .LVU11048
 39591 000a 134B     		ldr	r3, .L2788
 39592 000c 1B68     		ldr	r3, [r3]
 39593              		.loc 1 18707 8 view .LVU11049
 39594 000e E3B1     		cbz	r3, .L2784
 39595 0010 0546     		mov	r5, r0
18708:Core/Src/bno055.c ****     {
18709:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18710:Core/Src/bno055.c ****     }
18711:Core/Src/bno055.c ****     else
18712:Core/Src/bno055.c ****     {
18713:Core/Src/bno055.c ****         /*condition check for page, gyro highrate z duration is
18714:Core/Src/bno055.c ****          * available in the page one*/
18715:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 39596              		.loc 1 18715 9 is_stmt 1 view .LVU11050
 39597              		.loc 1 18715 21 is_stmt 0 view .LVU11051
 39598 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39599              		.loc 1 18715 12 view .LVU11052
 39600 0014 012B     		cmp	r3, #1
 39601 0016 12D1     		bne	.L2787
ARM GAS  /tmp/ccWoU29M.s 			page 1107


 39602              	.LVL4869:
 39603              	.L2782:
18716:Core/Src/bno055.c ****         {
18717:Core/Src/bno055.c ****             /* Write page as one */
18718:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18719:Core/Src/bno055.c ****         }
18720:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 39604              		.loc 1 18720 53 discriminator 1 view .LVU11053
 39605 0018 0F4B     		ldr	r3, .L2788
 39606 001a 1B68     		ldr	r3, [r3]
 39607 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39608              		.loc 1 18720 41 discriminator 1 view .LVU11054
 39609 001e 012B     		cmp	r3, #1
 39610 0020 16D1     		bne	.L2785
 39611              	.L2783:
18721:Core/Src/bno055.c ****         {
18722:Core/Src/bno055.c ****             /* Read the value of gyro highrate z duration*/
18723:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 39612              		.loc 1 18723 13 is_stmt 1 view .LVU11055
 39613              		.loc 1 18723 32 is_stmt 0 view .LVU11056
 39614 0022 0D4B     		ldr	r3, .L2788
 39615 0024 1C68     		ldr	r4, [r3]
 39616 0026 2669     		ldr	r6, [r4, #16]
 39617              		.loc 1 18723 24 view .LVU11057
 39618 0028 0123     		movs	r3, #1
 39619 002a 0DF10702 		add	r2, sp, #7
 39620 002e 1D21     		movs	r1, #29
 39621 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 39622 0032 B047     		blx	r6
 39623              	.LVL4870:
18724:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Z_DURN_REG,
18725:Core/Src/bno055.c ****                                                       &data_u8r,
18726:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18727:Core/Src/bno055.c ****             *gyro_highrate_z_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_DURN);
 39624              		.loc 1 18727 13 is_stmt 1 view .LVU11058
 39625              		.loc 1 18727 38 is_stmt 0 view .LVU11059
 39626 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 39627 0038 2B70     		strb	r3, [r5]
 39628              	.LVL4871:
 39629              	.L2781:
18728:Core/Src/bno055.c ****         }
18729:Core/Src/bno055.c ****         else
18730:Core/Src/bno055.c ****         {
18731:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18732:Core/Src/bno055.c ****         }
18733:Core/Src/bno055.c ****     }
18734:Core/Src/bno055.c **** 
18735:Core/Src/bno055.c ****     return com_rslt;
18736:Core/Src/bno055.c **** }
 39630              		.loc 1 18736 1 view .LVU11060
 39631 003a 02B0     		add	sp, sp, #8
 39632              	.LCFI1063:
 39633              		.cfi_remember_state
 39634              		.cfi_def_cfa_offset 16
 39635              		@ sp needed
 39636 003c 70BD     		pop	{r4, r5, r6, pc}
 39637              	.LVL4872:
ARM GAS  /tmp/ccWoU29M.s 			page 1108


 39638              	.L2787:
 39639              	.LCFI1064:
 39640              		.cfi_restore_state
18718:Core/Src/bno055.c ****         }
 39641              		.loc 1 18718 13 is_stmt 1 view .LVU11061
18718:Core/Src/bno055.c ****         }
 39642              		.loc 1 18718 23 is_stmt 0 view .LVU11062
 39643 003e 0120     		movs	r0, #1
 39644              	.LVL4873:
18718:Core/Src/bno055.c ****         }
 39645              		.loc 1 18718 23 view .LVU11063
 39646 0040 FFF7FEFF 		bl	bno055_write_page_id
 39647              	.LVL4874:
18720:Core/Src/bno055.c ****         {
 39648              		.loc 1 18720 9 is_stmt 1 view .LVU11064
18720:Core/Src/bno055.c ****         {
 39649              		.loc 1 18720 12 is_stmt 0 view .LVU11065
 39650 0044 0028     		cmp	r0, #0
 39651 0046 ECD0     		beq	.L2783
 39652 0048 E6E7     		b	.L2782
 39653              	.LVL4875:
 39654              	.L2784:
18709:Core/Src/bno055.c ****     }
 39655              		.loc 1 18709 16 view .LVU11066
 39656 004a 6FF07E00 		mvn	r0, #126
 39657              	.LVL4876:
18709:Core/Src/bno055.c ****     }
 39658              		.loc 1 18709 16 view .LVU11067
 39659 004e F4E7     		b	.L2781
 39660              	.LVL4877:
 39661              	.L2785:
18731:Core/Src/bno055.c ****         }
 39662              		.loc 1 18731 22 view .LVU11068
 39663 0050 4FF0FF30 		mov	r0, #-1
 39664 0054 F1E7     		b	.L2781
 39665              	.L2789:
 39666 0056 00BF     		.align	2
 39667              	.L2788:
 39668 0058 00000000 		.word	.LANCHOR0
 39669              		.cfi_endproc
 39670              	.LFE267:
 39672              		.section	.text.bno055_set_gyro_highrate_z_durn,"ax",%progbits
 39673              		.align	1
 39674              		.global	bno055_set_gyro_highrate_z_durn
 39675              		.syntax unified
 39676              		.thumb
 39677              		.thumb_func
 39678              		.fpu fpv4-sp-d16
 39680              	bno055_set_gyro_highrate_z_durn:
 39681              	.LVL4878:
 39682              	.LFB268:
18737:Core/Src/bno055.c **** 
18738:Core/Src/bno055.c **** /*!
18739:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate z duration
18740:Core/Src/bno055.c ****  *  from page one register from 0x1D bit 0 to 7
18741:Core/Src/bno055.c ****  *
18742:Core/Src/bno055.c ****  *  @param gyro_highrate_z_durn_u8 : The value of gyro highrate z duration
ARM GAS  /tmp/ccWoU29M.s 			page 1109


18743:Core/Src/bno055.c ****  *
18744:Core/Src/bno055.c ****  *  @return results of bus communication function
18745:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18746:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18747:Core/Src/bno055.c ****  *
18748:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
18749:Core/Src/bno055.c ****  *
18750:Core/Src/bno055.c ****  *  (1 + gyro_highrate_z_durn_u8)*2.5ms
18751:Core/Src/bno055.c ****  */
18752:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_z_durn(u8 gyro_highrate_z_durn_u8)
18753:Core/Src/bno055.c **** {
 39683              		.loc 1 18753 1 is_stmt 1 view -0
 39684              		.cfi_startproc
 39685              		@ args = 0, pretend = 0, frame = 8
 39686              		@ frame_needed = 0, uses_anonymous_args = 0
 39687              		.loc 1 18753 1 is_stmt 0 view .LVU11070
 39688 0000 30B5     		push	{r4, r5, lr}
 39689              	.LCFI1065:
 39690              		.cfi_def_cfa_offset 12
 39691              		.cfi_offset 4, -12
 39692              		.cfi_offset 5, -8
 39693              		.cfi_offset 14, -4
 39694 0002 83B0     		sub	sp, sp, #12
 39695              	.LCFI1066:
 39696              		.cfi_def_cfa_offset 24
18754:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 39697              		.loc 1 18754 5 is_stmt 1 view .LVU11071
 39698              	.LVL4879:
18755:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 39699              		.loc 1 18755 5 view .LVU11072
 39700              		.loc 1 18755 8 is_stmt 0 view .LVU11073
 39701 0004 0023     		movs	r3, #0
 39702 0006 8DF80730 		strb	r3, [sp, #7]
18756:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 39703              		.loc 1 18756 5 is_stmt 1 view .LVU11074
 39704              	.LVL4880:
18757:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 39705              		.loc 1 18757 5 view .LVU11075
18758:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 39706              		.loc 1 18758 5 view .LVU11076
 39707              		.loc 1 18758 8 is_stmt 0 view .LVU11077
 39708 000a 8DF80630 		strb	r3, [sp, #6]
18759:Core/Src/bno055.c **** 
18760:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18761:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39709              		.loc 1 18761 5 is_stmt 1 view .LVU11078
 39710              		.loc 1 18761 18 is_stmt 0 view .LVU11079
 39711 000e 254B     		ldr	r3, .L2802
 39712 0010 1B68     		ldr	r3, [r3]
 39713              		.loc 1 18761 8 view .LVU11080
 39714 0012 002B     		cmp	r3, #0
 39715 0014 42D0     		beq	.L2794
 39716 0016 0546     		mov	r5, r0
18762:Core/Src/bno055.c ****     {
18763:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18764:Core/Src/bno055.c ****     }
18765:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccWoU29M.s 			page 1110


18766:Core/Src/bno055.c ****     {
18767:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18768:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18769:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18770:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 39717              		.loc 1 18770 9 is_stmt 1 view .LVU11081
 39718              		.loc 1 18770 19 is_stmt 0 view .LVU11082
 39719 0018 0DF10600 		add	r0, sp, #6
 39720              	.LVL4881:
 39721              		.loc 1 18770 19 view .LVU11083
 39722 001c FFF7FEFF 		bl	bno055_get_operation_mode
 39723              	.LVL4882:
18771:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 39724              		.loc 1 18771 9 is_stmt 1 view .LVU11084
 39725              		.loc 1 18771 12 is_stmt 0 view .LVU11085
 39726 0020 0446     		mov	r4, r0
 39727 0022 50BB     		cbnz	r0, .L2795
18772:Core/Src/bno055.c ****         {
18773:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39728              		.loc 1 18773 13 is_stmt 1 view .LVU11086
 39729              		.loc 1 18773 32 is_stmt 0 view .LVU11087
 39730 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 39731              		.loc 1 18773 16 view .LVU11088
 39732 0028 1BB9     		cbnz	r3, .L2799
 39733              	.LVL4883:
 39734              	.L2793:
18774:Core/Src/bno055.c ****             {
18775:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18776:Core/Src/bno055.c ****             }
18777:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 39735              		.loc 1 18777 13 is_stmt 1 view .LVU11089
 39736              		.loc 1 18777 16 is_stmt 0 view .LVU11090
 39737 002a 44B1     		cbz	r4, .L2800
18778:Core/Src/bno055.c ****             {
18779:Core/Src/bno055.c ****                 /* Write page as one */
18780:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18781:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18782:Core/Src/bno055.c ****                 {
18783:Core/Src/bno055.c ****                     /* Write the value of
18784:Core/Src/bno055.c ****                      * gyro highrate z duration*/
18785:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18786:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
18787:Core/Src/bno055.c ****                                                               &data_u8r,
18788:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18789:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18790:Core/Src/bno055.c ****                     {
18791:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_DURN, gyro_
18792:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18793:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
18794:Core/Src/bno055.c ****                                                                     &data_u8r,
18795:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18796:Core/Src/bno055.c ****                     }
18797:Core/Src/bno055.c ****                 }
18798:Core/Src/bno055.c ****                 else
18799:Core/Src/bno055.c ****                 {
18800:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18801:Core/Src/bno055.c ****                 }
ARM GAS  /tmp/ccWoU29M.s 			page 1111


18802:Core/Src/bno055.c ****             }
18803:Core/Src/bno055.c ****             else
18804:Core/Src/bno055.c ****             {
18805:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 39738              		.loc 1 18805 26 view .LVU11091
 39739 002c 4FF0FF34 		mov	r4, #-1
 39740              	.LVL4884:
 39741              		.loc 1 18805 26 view .LVU11092
 39742 0030 25E0     		b	.L2792
 39743              	.LVL4885:
 39744              	.L2799:
18775:Core/Src/bno055.c ****             }
 39745              		.loc 1 18775 17 is_stmt 1 view .LVU11093
18775:Core/Src/bno055.c ****             }
 39746              		.loc 1 18775 28 is_stmt 0 view .LVU11094
 39747 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 39748              	.LVL4886:
18775:Core/Src/bno055.c ****             }
 39749              		.loc 1 18775 25 view .LVU11095
 39750 0036 54FA80F4 		uxtab	r4, r4, r0
 39751 003a 64B2     		sxtb	r4, r4
 39752              	.LVL4887:
18775:Core/Src/bno055.c ****             }
 39753              		.loc 1 18775 25 view .LVU11096
 39754 003c F5E7     		b	.L2793
 39755              	.L2800:
18780:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39756              		.loc 1 18780 17 is_stmt 1 view .LVU11097
18780:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39757              		.loc 1 18780 30 is_stmt 0 view .LVU11098
 39758 003e 0120     		movs	r0, #1
 39759 0040 FFF7FEFF 		bl	bno055_write_page_id
 39760              	.LVL4888:
18781:Core/Src/bno055.c ****                 {
 39761              		.loc 1 18781 17 is_stmt 1 view .LVU11099
18781:Core/Src/bno055.c ****                 {
 39762              		.loc 1 18781 20 is_stmt 0 view .LVU11100
 39763 0044 08BB     		cbnz	r0, .L2797
18785:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
 39764              		.loc 1 18785 21 is_stmt 1 view .LVU11101
18785:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
 39765              		.loc 1 18785 40 is_stmt 0 view .LVU11102
 39766 0046 174B     		ldr	r3, .L2802
 39767 0048 1868     		ldr	r0, [r3]
 39768              	.LVL4889:
18785:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
 39769              		.loc 1 18785 40 view .LVU11103
 39770 004a 0469     		ldr	r4, [r0, #16]
 39771              	.LVL4890:
18785:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
 39772              		.loc 1 18785 32 view .LVU11104
 39773 004c 0123     		movs	r3, #1
 39774 004e 0DF10702 		add	r2, sp, #7
 39775 0052 1D21     		movs	r1, #29
 39776 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39777 0056 A047     		blx	r4
 39778              	.LVL4891:
ARM GAS  /tmp/ccWoU29M.s 			page 1112


18789:Core/Src/bno055.c ****                     {
 39779              		.loc 1 18789 21 is_stmt 1 view .LVU11105
18789:Core/Src/bno055.c ****                     {
 39780              		.loc 1 18789 24 is_stmt 0 view .LVU11106
 39781 0058 0446     		mov	r4, r0
 39782 005a 80B9     		cbnz	r0, .L2792
18791:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39783              		.loc 1 18791 25 is_stmt 1 view .LVU11107
18791:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39784              		.loc 1 18791 34 is_stmt 0 view .LVU11108
 39785 005c 8DF80750 		strb	r5, [sp, #7]
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 39786              		.loc 1 18792 25 is_stmt 1 view .LVU11109
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 39787              		.loc 1 18792 45 is_stmt 0 view .LVU11110
 39788 0060 104B     		ldr	r3, .L2802
 39789 0062 1868     		ldr	r0, [r3]
 39790              	.LVL4892:
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 39791              		.loc 1 18792 45 view .LVU11111
 39792 0064 C568     		ldr	r5, [r0, #12]
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 39793              		.loc 1 18792 37 view .LVU11112
 39794 0066 0123     		movs	r3, #1
 39795 0068 0DF10702 		add	r2, sp, #7
 39796 006c 1D21     		movs	r1, #29
 39797 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39798 0070 A847     		blx	r5
 39799              	.LVL4893:
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 39800              		.loc 1 18792 34 view .LVU11113
 39801 0072 54FA80F4 		uxtab	r4, r4, r0
 39802 0076 64B2     		sxtb	r4, r4
 39803              	.LVL4894:
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 39804              		.loc 1 18792 34 view .LVU11114
 39805 0078 01E0     		b	.L2792
 39806              	.LVL4895:
 39807              	.L2795:
18806:Core/Src/bno055.c ****             }
18807:Core/Src/bno055.c ****         }
18808:Core/Src/bno055.c ****         else
18809:Core/Src/bno055.c ****         {
18810:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 39808              		.loc 1 18810 22 view .LVU11115
 39809 007a 4FF0FF34 		mov	r4, #-1
 39810              	.LVL4896:
 39811              	.L2792:
18811:Core/Src/bno055.c ****         }
18812:Core/Src/bno055.c ****     }
18813:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39812              		.loc 1 18813 5 is_stmt 1 view .LVU11116
 39813              		.loc 1 18813 24 is_stmt 0 view .LVU11117
 39814 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 39815              		.loc 1 18813 8 view .LVU11118
 39816 0082 28B9     		cbnz	r0, .L2801
 39817              	.LVL4897:
ARM GAS  /tmp/ccWoU29M.s 			page 1113


 39818              	.L2791:
18814:Core/Src/bno055.c ****     {
18815:Core/Src/bno055.c ****         /* set the operation mode of
18816:Core/Src/bno055.c ****          * previous operation mode*/
18817:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18818:Core/Src/bno055.c ****     }
18819:Core/Src/bno055.c **** 
18820:Core/Src/bno055.c ****     return com_rslt;
18821:Core/Src/bno055.c **** }
 39819              		.loc 1 18821 1 view .LVU11119
 39820 0084 2046     		mov	r0, r4
 39821 0086 03B0     		add	sp, sp, #12
 39822              	.LCFI1067:
 39823              		.cfi_remember_state
 39824              		.cfi_def_cfa_offset 12
 39825              		@ sp needed
 39826 0088 30BD     		pop	{r4, r5, pc}
 39827              	.LVL4898:
 39828              	.L2797:
 39829              	.LCFI1068:
 39830              		.cfi_restore_state
18800:Core/Src/bno055.c ****                 }
 39831              		.loc 1 18800 30 view .LVU11120
 39832 008a 4FF0FF34 		mov	r4, #-1
 39833              	.LVL4899:
18800:Core/Src/bno055.c ****                 }
 39834              		.loc 1 18800 30 view .LVU11121
 39835 008e F6E7     		b	.L2792
 39836              	.LVL4900:
 39837              	.L2801:
18817:Core/Src/bno055.c ****     }
 39838              		.loc 1 18817 9 is_stmt 1 view .LVU11122
18817:Core/Src/bno055.c ****     }
 39839              		.loc 1 18817 21 is_stmt 0 view .LVU11123
 39840 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 39841              	.LVL4901:
18817:Core/Src/bno055.c ****     }
 39842              		.loc 1 18817 18 view .LVU11124
 39843 0094 54FA80F4 		uxtab	r4, r4, r0
 39844              	.LVL4902:
18817:Core/Src/bno055.c ****     }
 39845              		.loc 1 18817 18 view .LVU11125
 39846 0098 64B2     		sxtb	r4, r4
 39847              	.LVL4903:
18817:Core/Src/bno055.c ****     }
 39848              		.loc 1 18817 18 view .LVU11126
 39849 009a F3E7     		b	.L2791
 39850              	.LVL4904:
 39851              	.L2794:
18763:Core/Src/bno055.c ****     }
 39852              		.loc 1 18763 16 view .LVU11127
 39853 009c 6FF07E04 		mvn	r4, #126
 39854 00a0 F0E7     		b	.L2791
 39855              	.L2803:
 39856 00a2 00BF     		.align	2
 39857              	.L2802:
 39858 00a4 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccWoU29M.s 			page 1114


 39859              		.cfi_endproc
 39860              	.LFE268:
 39862              		.section	.text.bno055_get_gyro_any_motion_thres,"ax",%progbits
 39863              		.align	1
 39864              		.global	bno055_get_gyro_any_motion_thres
 39865              		.syntax unified
 39866              		.thumb
 39867              		.thumb_func
 39868              		.fpu fpv4-sp-d16
 39870              	bno055_get_gyro_any_motion_thres:
 39871              	.LVL4905:
 39872              	.LFB269:
18822:Core/Src/bno055.c **** 
18823:Core/Src/bno055.c **** /*!
18824:Core/Src/bno055.c ****  *  @brief This API used to read gyro anymotion threshold
18825:Core/Src/bno055.c ****  *  from page one register from 0x1E bit 0 to 6
18826:Core/Src/bno055.c ****  *
18827:Core/Src/bno055.c ****  *  @param gyro_any_motion_thres_u8 : The value of gyro anymotion threshold
18828:Core/Src/bno055.c ****  *
18829:Core/Src/bno055.c ****  *  @return results of bus communication function
18830:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18831:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18832:Core/Src/bno055.c ****  *
18833:Core/Src/bno055.c ****  *  @note Gyro anymotion interrupt threshold dependent
18834:Core/Src/bno055.c ****  *  on the selection of gyro range
18835:Core/Src/bno055.c ****  *
18836:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold     |    LSB
18837:Core/Src/bno055.c ****  * -----------------  | ------------- | ---------
18838:Core/Src/bno055.c ****  *     2000           |    1dps       |   1LSB
18839:Core/Src/bno055.c ****  *     1000           |    0.5dps     |   1LSB
18840:Core/Src/bno055.c ****  *     500            |    0.25dps    |   1LSB
18841:Core/Src/bno055.c ****  *
18842:Core/Src/bno055.c ****  */
18843:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_thres(u8 *gyro_any_motion_thres_u8)
18844:Core/Src/bno055.c **** {
 39873              		.loc 1 18844 1 is_stmt 1 view -0
 39874              		.cfi_startproc
 39875              		@ args = 0, pretend = 0, frame = 8
 39876              		@ frame_needed = 0, uses_anonymous_args = 0
 39877              		.loc 1 18844 1 is_stmt 0 view .LVU11129
 39878 0000 30B5     		push	{r4, r5, lr}
 39879              	.LCFI1069:
 39880              		.cfi_def_cfa_offset 12
 39881              		.cfi_offset 4, -12
 39882              		.cfi_offset 5, -8
 39883              		.cfi_offset 14, -4
 39884 0002 83B0     		sub	sp, sp, #12
 39885              	.LCFI1070:
 39886              		.cfi_def_cfa_offset 24
18845:Core/Src/bno055.c ****     /* Variable used to return value of
18846:Core/Src/bno055.c ****      * communication routine*/
18847:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 39887              		.loc 1 18847 5 is_stmt 1 view .LVU11130
 39888              	.LVL4906:
18848:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 39889              		.loc 1 18848 5 view .LVU11131
 39890              		.loc 1 18848 8 is_stmt 0 view .LVU11132
ARM GAS  /tmp/ccWoU29M.s 			page 1115


 39891 0004 0023     		movs	r3, #0
 39892 0006 8DF80730 		strb	r3, [sp, #7]
18849:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 39893              		.loc 1 18849 5 is_stmt 1 view .LVU11133
 39894              	.LVL4907:
18850:Core/Src/bno055.c **** 
18851:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18852:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39895              		.loc 1 18852 5 view .LVU11134
 39896              		.loc 1 18852 18 is_stmt 0 view .LVU11135
 39897 000a 144B     		ldr	r3, .L2812
 39898 000c 1B68     		ldr	r3, [r3]
 39899              		.loc 1 18852 8 view .LVU11136
 39900 000e F3B1     		cbz	r3, .L2808
 39901 0010 0446     		mov	r4, r0
18853:Core/Src/bno055.c ****     {
18854:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18855:Core/Src/bno055.c ****     }
18856:Core/Src/bno055.c ****     else
18857:Core/Src/bno055.c ****     {
18858:Core/Src/bno055.c ****         /*condition check for page,gyro anymotion threshold is
18859:Core/Src/bno055.c ****          * available in the page one*/
18860:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 39902              		.loc 1 18860 9 is_stmt 1 view .LVU11137
 39903              		.loc 1 18860 21 is_stmt 0 view .LVU11138
 39904 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39905              		.loc 1 18860 12 view .LVU11139
 39906 0014 012B     		cmp	r3, #1
 39907 0016 14D1     		bne	.L2811
 39908              	.LVL4908:
 39909              	.L2806:
18861:Core/Src/bno055.c ****         {
18862:Core/Src/bno055.c ****             /* Write page as one */
18863:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18864:Core/Src/bno055.c ****         }
18865:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 39910              		.loc 1 18865 53 discriminator 1 view .LVU11140
 39911 0018 104B     		ldr	r3, .L2812
 39912 001a 1B68     		ldr	r3, [r3]
 39913 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39914              		.loc 1 18865 41 discriminator 1 view .LVU11141
 39915 001e 012B     		cmp	r3, #1
 39916 0020 18D1     		bne	.L2809
 39917              	.L2807:
18866:Core/Src/bno055.c ****         {
18867:Core/Src/bno055.c ****             /* Read the value of gyro anymotion threshold*/
18868:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 39918              		.loc 1 18868 13 is_stmt 1 view .LVU11142
 39919              		.loc 1 18868 32 is_stmt 0 view .LVU11143
 39920 0022 0E4B     		ldr	r3, .L2812
 39921 0024 1868     		ldr	r0, [r3]
 39922 0026 0569     		ldr	r5, [r0, #16]
 39923              		.loc 1 18868 24 view .LVU11144
 39924 0028 0123     		movs	r3, #1
 39925 002a 0DF10702 		add	r2, sp, #7
 39926 002e 1E21     		movs	r1, #30
 39927 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccWoU29M.s 			page 1116


 39928 0032 A847     		blx	r5
 39929              	.LVL4909:
18869:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_THRES_REG,
18870:Core/Src/bno055.c ****                                                       &data_u8r,
18871:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18872:Core/Src/bno055.c ****             *gyro_any_motion_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_THRES)
 39930              		.loc 1 18872 13 is_stmt 1 view .LVU11145
 39931              		.loc 1 18872 41 is_stmt 0 view .LVU11146
 39932 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 39933 0038 03F07F03 		and	r3, r3, #127
 39934              		.loc 1 18872 39 view .LVU11147
 39935 003c 2370     		strb	r3, [r4]
 39936              	.LVL4910:
 39937              	.L2805:
18873:Core/Src/bno055.c ****         }
18874:Core/Src/bno055.c ****         else
18875:Core/Src/bno055.c ****         {
18876:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18877:Core/Src/bno055.c ****         }
18878:Core/Src/bno055.c ****     }
18879:Core/Src/bno055.c **** 
18880:Core/Src/bno055.c ****     return com_rslt;
18881:Core/Src/bno055.c **** }
 39938              		.loc 1 18881 1 view .LVU11148
 39939 003e 03B0     		add	sp, sp, #12
 39940              	.LCFI1071:
 39941              		.cfi_remember_state
 39942              		.cfi_def_cfa_offset 12
 39943              		@ sp needed
 39944 0040 30BD     		pop	{r4, r5, pc}
 39945              	.LVL4911:
 39946              	.L2811:
 39947              	.LCFI1072:
 39948              		.cfi_restore_state
18863:Core/Src/bno055.c ****         }
 39949              		.loc 1 18863 13 is_stmt 1 view .LVU11149
18863:Core/Src/bno055.c ****         }
 39950              		.loc 1 18863 23 is_stmt 0 view .LVU11150
 39951 0042 0120     		movs	r0, #1
 39952              	.LVL4912:
18863:Core/Src/bno055.c ****         }
 39953              		.loc 1 18863 23 view .LVU11151
 39954 0044 FFF7FEFF 		bl	bno055_write_page_id
 39955              	.LVL4913:
18865:Core/Src/bno055.c ****         {
 39956              		.loc 1 18865 9 is_stmt 1 view .LVU11152
18865:Core/Src/bno055.c ****         {
 39957              		.loc 1 18865 12 is_stmt 0 view .LVU11153
 39958 0048 0028     		cmp	r0, #0
 39959 004a EAD0     		beq	.L2807
 39960 004c E4E7     		b	.L2806
 39961              	.LVL4914:
 39962              	.L2808:
18854:Core/Src/bno055.c ****     }
 39963              		.loc 1 18854 16 view .LVU11154
 39964 004e 6FF07E00 		mvn	r0, #126
 39965              	.LVL4915:
ARM GAS  /tmp/ccWoU29M.s 			page 1117


18854:Core/Src/bno055.c ****     }
 39966              		.loc 1 18854 16 view .LVU11155
 39967 0052 F4E7     		b	.L2805
 39968              	.LVL4916:
 39969              	.L2809:
18876:Core/Src/bno055.c ****         }
 39970              		.loc 1 18876 22 view .LVU11156
 39971 0054 4FF0FF30 		mov	r0, #-1
 39972 0058 F1E7     		b	.L2805
 39973              	.L2813:
 39974 005a 00BF     		.align	2
 39975              	.L2812:
 39976 005c 00000000 		.word	.LANCHOR0
 39977              		.cfi_endproc
 39978              	.LFE269:
 39980              		.section	.text.bno055_set_gyro_any_motion_thres,"ax",%progbits
 39981              		.align	1
 39982              		.global	bno055_set_gyro_any_motion_thres
 39983              		.syntax unified
 39984              		.thumb
 39985              		.thumb_func
 39986              		.fpu fpv4-sp-d16
 39988              	bno055_set_gyro_any_motion_thres:
 39989              	.LVL4917:
 39990              	.LFB270:
18882:Core/Src/bno055.c **** 
18883:Core/Src/bno055.c **** /*!
18884:Core/Src/bno055.c ****  *  @brief This API used to write gyro anymotion threshold
18885:Core/Src/bno055.c ****  *  from page one register from 0x1E bit 0 to 6
18886:Core/Src/bno055.c ****  *
18887:Core/Src/bno055.c ****  *  @param gyro_any_motion_thres_u8 : The value of gyro anymotion threshold
18888:Core/Src/bno055.c ****  *
18889:Core/Src/bno055.c ****  *  @return results of bus communication function
18890:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18891:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18892:Core/Src/bno055.c ****  *
18893:Core/Src/bno055.c ****  *  @note Gyro anymotion interrupt threshold dependent
18894:Core/Src/bno055.c ****  *  on the selection of gyro range
18895:Core/Src/bno055.c ****  *
18896:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold     |    LSB
18897:Core/Src/bno055.c ****  * -----------------  | ------------- | ---------
18898:Core/Src/bno055.c ****  *     2000           |    1dps       |   1LSB
18899:Core/Src/bno055.c ****  *     1000           |    0.5dps     |   1LSB
18900:Core/Src/bno055.c ****  *     500            |    0.25dps    |   1LSB
18901:Core/Src/bno055.c ****  *
18902:Core/Src/bno055.c ****  */
18903:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_thres(u8 gyro_any_motion_thres_u8)
18904:Core/Src/bno055.c **** {
 39991              		.loc 1 18904 1 is_stmt 1 view -0
 39992              		.cfi_startproc
 39993              		@ args = 0, pretend = 0, frame = 8
 39994              		@ frame_needed = 0, uses_anonymous_args = 0
 39995              		.loc 1 18904 1 is_stmt 0 view .LVU11158
 39996 0000 30B5     		push	{r4, r5, lr}
 39997              	.LCFI1073:
 39998              		.cfi_def_cfa_offset 12
 39999              		.cfi_offset 4, -12
ARM GAS  /tmp/ccWoU29M.s 			page 1118


 40000              		.cfi_offset 5, -8
 40001              		.cfi_offset 14, -4
 40002 0002 83B0     		sub	sp, sp, #12
 40003              	.LCFI1074:
 40004              		.cfi_def_cfa_offset 24
18905:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 40005              		.loc 1 18905 5 is_stmt 1 view .LVU11159
 40006              	.LVL4918:
18906:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 40007              		.loc 1 18906 5 view .LVU11160
 40008              		.loc 1 18906 8 is_stmt 0 view .LVU11161
 40009 0004 0023     		movs	r3, #0
 40010 0006 8DF80730 		strb	r3, [sp, #7]
18907:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 40011              		.loc 1 18907 5 is_stmt 1 view .LVU11162
 40012              	.LVL4919:
18908:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 40013              		.loc 1 18908 5 view .LVU11163
 40014              		.loc 1 18908 8 is_stmt 0 view .LVU11164
 40015 000a 8DF80630 		strb	r3, [sp, #6]
18909:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 40016              		.loc 1 18909 5 is_stmt 1 view .LVU11165
 40017              	.LVL4920:
18910:Core/Src/bno055.c **** 
18911:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18912:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 40018              		.loc 1 18912 5 view .LVU11166
 40019              		.loc 1 18912 18 is_stmt 0 view .LVU11167
 40020 000e 294B     		ldr	r3, .L2826
 40021 0010 1B68     		ldr	r3, [r3]
 40022              		.loc 1 18912 8 view .LVU11168
 40023 0012 002B     		cmp	r3, #0
 40024 0014 4AD0     		beq	.L2818
 40025 0016 0546     		mov	r5, r0
18913:Core/Src/bno055.c ****     {
18914:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18915:Core/Src/bno055.c ****     }
18916:Core/Src/bno055.c ****     else
18917:Core/Src/bno055.c ****     {
18918:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18919:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18920:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18921:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 40026              		.loc 1 18921 9 is_stmt 1 view .LVU11169
 40027              		.loc 1 18921 19 is_stmt 0 view .LVU11170
 40028 0018 0DF10600 		add	r0, sp, #6
 40029              	.LVL4921:
 40030              		.loc 1 18921 19 view .LVU11171
 40031 001c FFF7FEFF 		bl	bno055_get_operation_mode
 40032              	.LVL4922:
18922:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 40033              		.loc 1 18922 9 is_stmt 1 view .LVU11172
 40034              		.loc 1 18922 12 is_stmt 0 view .LVU11173
 40035 0020 0446     		mov	r4, r0
 40036 0022 90BB     		cbnz	r0, .L2819
18923:Core/Src/bno055.c ****         {
18924:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
ARM GAS  /tmp/ccWoU29M.s 			page 1119


 40037              		.loc 1 18924 13 is_stmt 1 view .LVU11174
 40038              		.loc 1 18924 32 is_stmt 0 view .LVU11175
 40039 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 40040              		.loc 1 18924 16 view .LVU11176
 40041 0028 1BB9     		cbnz	r3, .L2823
 40042              	.LVL4923:
 40043              	.L2817:
18925:Core/Src/bno055.c ****             {
18926:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18927:Core/Src/bno055.c ****             }
18928:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 40044              		.loc 1 18928 13 is_stmt 1 view .LVU11177
 40045              		.loc 1 18928 16 is_stmt 0 view .LVU11178
 40046 002a 44B1     		cbz	r4, .L2824
18929:Core/Src/bno055.c ****             {
18930:Core/Src/bno055.c ****                 /* Write page as one */
18931:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18932:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18933:Core/Src/bno055.c ****                 {
18934:Core/Src/bno055.c ****                     /* Write the value
18935:Core/Src/bno055.c ****                      * of gyro anymotion threshold*/
18936:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18937:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
18938:Core/Src/bno055.c ****                                                               &data_u8r,
18939:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18940:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18941:Core/Src/bno055.c ****                     {
18942:Core/Src/bno055.c ****                         data_u8r =
18943:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_THRES, gyro_any_mo
18944:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18945:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
18946:Core/Src/bno055.c ****                                                                     &data_u8r,
18947:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18948:Core/Src/bno055.c ****                     }
18949:Core/Src/bno055.c ****                 }
18950:Core/Src/bno055.c ****                 else
18951:Core/Src/bno055.c ****                 {
18952:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18953:Core/Src/bno055.c ****                 }
18954:Core/Src/bno055.c ****             }
18955:Core/Src/bno055.c ****             else
18956:Core/Src/bno055.c ****             {
18957:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 40047              		.loc 1 18957 26 view .LVU11179
 40048 002c 4FF0FF34 		mov	r4, #-1
 40049              	.LVL4924:
 40050              		.loc 1 18957 26 view .LVU11180
 40051 0030 2DE0     		b	.L2816
 40052              	.LVL4925:
 40053              	.L2823:
18926:Core/Src/bno055.c ****             }
 40054              		.loc 1 18926 17 is_stmt 1 view .LVU11181
18926:Core/Src/bno055.c ****             }
 40055              		.loc 1 18926 28 is_stmt 0 view .LVU11182
 40056 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 40057              	.LVL4926:
18926:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccWoU29M.s 			page 1120


 40058              		.loc 1 18926 25 view .LVU11183
 40059 0036 54FA80F4 		uxtab	r4, r4, r0
 40060 003a 64B2     		sxtb	r4, r4
 40061              	.LVL4927:
18926:Core/Src/bno055.c ****             }
 40062              		.loc 1 18926 25 view .LVU11184
 40063 003c F5E7     		b	.L2817
 40064              	.L2824:
18931:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 40065              		.loc 1 18931 17 is_stmt 1 view .LVU11185
18931:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 40066              		.loc 1 18931 30 is_stmt 0 view .LVU11186
 40067 003e 0120     		movs	r0, #1
 40068 0040 FFF7FEFF 		bl	bno055_write_page_id
 40069              	.LVL4928:
18932:Core/Src/bno055.c ****                 {
 40070              		.loc 1 18932 17 is_stmt 1 view .LVU11187
18932:Core/Src/bno055.c ****                 {
 40071              		.loc 1 18932 20 is_stmt 0 view .LVU11188
 40072 0044 48BB     		cbnz	r0, .L2821
18936:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
 40073              		.loc 1 18936 21 is_stmt 1 view .LVU11189
18936:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
 40074              		.loc 1 18936 40 is_stmt 0 view .LVU11190
 40075 0046 1B4B     		ldr	r3, .L2826
 40076 0048 1868     		ldr	r0, [r3]
 40077              	.LVL4929:
18936:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
 40078              		.loc 1 18936 40 view .LVU11191
 40079 004a 0469     		ldr	r4, [r0, #16]
 40080              	.LVL4930:
18936:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
 40081              		.loc 1 18936 32 view .LVU11192
 40082 004c 0123     		movs	r3, #1
 40083 004e 0DF10702 		add	r2, sp, #7
 40084 0052 1E21     		movs	r1, #30
 40085 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 40086 0056 A047     		blx	r4
 40087              	.LVL4931:
18940:Core/Src/bno055.c ****                     {
 40088              		.loc 1 18940 21 is_stmt 1 view .LVU11193
18940:Core/Src/bno055.c ****                     {
 40089              		.loc 1 18940 24 is_stmt 0 view .LVU11194
 40090 0058 0446     		mov	r4, r0
 40091 005a C0B9     		cbnz	r0, .L2816
18942:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_THRES, gyro_any_mo
 40092              		.loc 1 18942 25 is_stmt 1 view .LVU11195
18943:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 40093              		.loc 1 18943 29 is_stmt 0 view .LVU11196
 40094 005c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 40095              	.LVL4932:
18943:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 40096              		.loc 1 18943 29 view .LVU11197
 40097 0060 20F07F00 		bic	r0, r0, #127
 40098 0064 43B2     		sxtb	r3, r0
 40099 0066 05F07F00 		and	r0, r5, #127
 40100 006a 1843     		orrs	r0, r0, r3
ARM GAS  /tmp/ccWoU29M.s 			page 1121


18942:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_THRES, gyro_any_mo
 40101              		.loc 1 18942 34 view .LVU11198
 40102 006c 8DF80700 		strb	r0, [sp, #7]
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 40103              		.loc 1 18944 25 is_stmt 1 view .LVU11199
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 40104              		.loc 1 18944 45 is_stmt 0 view .LVU11200
 40105 0070 104B     		ldr	r3, .L2826
 40106 0072 1868     		ldr	r0, [r3]
 40107 0074 C568     		ldr	r5, [r0, #12]
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 40108              		.loc 1 18944 37 view .LVU11201
 40109 0076 0123     		movs	r3, #1
 40110 0078 0DF10702 		add	r2, sp, #7
 40111 007c 1E21     		movs	r1, #30
 40112 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 40113 0080 A847     		blx	r5
 40114              	.LVL4933:
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 40115              		.loc 1 18944 34 view .LVU11202
 40116 0082 54FA80F4 		uxtab	r4, r4, r0
 40117 0086 64B2     		sxtb	r4, r4
 40118              	.LVL4934:
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 40119              		.loc 1 18944 34 view .LVU11203
 40120 0088 01E0     		b	.L2816
 40121              	.LVL4935:
 40122              	.L2819:
18958:Core/Src/bno055.c ****             }
18959:Core/Src/bno055.c ****         }
18960:Core/Src/bno055.c ****         else
18961:Core/Src/bno055.c ****         {
18962:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 40123              		.loc 1 18962 22 view .LVU11204
 40124 008a 4FF0FF34 		mov	r4, #-1
 40125              	.LVL4936:
 40126              	.L2816:
18963:Core/Src/bno055.c ****         }
18964:Core/Src/bno055.c ****     }
18965:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 40127              		.loc 1 18965 5 is_stmt 1 view .LVU11205
 40128              		.loc 1 18965 24 is_stmt 0 view .LVU11206
 40129 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 40130              		.loc 1 18965 8 view .LVU11207
 40131 0092 28B9     		cbnz	r0, .L2825
 40132              	.LVL4937:
 40133              	.L2815:
18966:Core/Src/bno055.c ****     {
18967:Core/Src/bno055.c ****         /* set the operation mode of
18968:Core/Src/bno055.c ****          * previous operation mode*/
18969:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18970:Core/Src/bno055.c ****     }
18971:Core/Src/bno055.c **** 
18972:Core/Src/bno055.c ****     return com_rslt;
18973:Core/Src/bno055.c **** }
 40134              		.loc 1 18973 1 view .LVU11208
 40135 0094 2046     		mov	r0, r4
ARM GAS  /tmp/ccWoU29M.s 			page 1122


 40136 0096 03B0     		add	sp, sp, #12
 40137              	.LCFI1075:
 40138              		.cfi_remember_state
 40139              		.cfi_def_cfa_offset 12
 40140              		@ sp needed
 40141 0098 30BD     		pop	{r4, r5, pc}
 40142              	.LVL4938:
 40143              	.L2821:
 40144              	.LCFI1076:
 40145              		.cfi_restore_state
18952:Core/Src/bno055.c ****                 }
 40146              		.loc 1 18952 30 view .LVU11209
 40147 009a 4FF0FF34 		mov	r4, #-1
 40148              	.LVL4939:
18952:Core/Src/bno055.c ****                 }
 40149              		.loc 1 18952 30 view .LVU11210
 40150 009e F6E7     		b	.L2816
 40151              	.LVL4940:
 40152              	.L2825:
18969:Core/Src/bno055.c ****     }
 40153              		.loc 1 18969 9 is_stmt 1 view .LVU11211
18969:Core/Src/bno055.c ****     }
 40154              		.loc 1 18969 21 is_stmt 0 view .LVU11212
 40155 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 40156              	.LVL4941:
18969:Core/Src/bno055.c ****     }
 40157              		.loc 1 18969 18 view .LVU11213
 40158 00a4 54FA80F4 		uxtab	r4, r4, r0
 40159              	.LVL4942:
18969:Core/Src/bno055.c ****     }
 40160              		.loc 1 18969 18 view .LVU11214
 40161 00a8 64B2     		sxtb	r4, r4
 40162              	.LVL4943:
18969:Core/Src/bno055.c ****     }
 40163              		.loc 1 18969 18 view .LVU11215
 40164 00aa F3E7     		b	.L2815
 40165              	.LVL4944:
 40166              	.L2818:
18914:Core/Src/bno055.c ****     }
 40167              		.loc 1 18914 16 view .LVU11216
 40168 00ac 6FF07E04 		mvn	r4, #126
 40169 00b0 F0E7     		b	.L2815
 40170              	.L2827:
 40171 00b2 00BF     		.align	2
 40172              	.L2826:
 40173 00b4 00000000 		.word	.LANCHOR0
 40174              		.cfi_endproc
 40175              	.LFE270:
 40177              		.section	.text.bno055_get_gyro_any_motion_slope_samples,"ax",%progbits
 40178              		.align	1
 40179              		.global	bno055_get_gyro_any_motion_slope_samples
 40180              		.syntax unified
 40181              		.thumb
 40182              		.thumb_func
 40183              		.fpu fpv4-sp-d16
 40185              	bno055_get_gyro_any_motion_slope_samples:
 40186              	.LVL4945:
ARM GAS  /tmp/ccWoU29M.s 			page 1123


 40187              	.LFB271:
18974:Core/Src/bno055.c **** 
18975:Core/Src/bno055.c **** /*!
18976:Core/Src/bno055.c ****  *  @brief This API used to read gyro anymotion slope samples
18977:Core/Src/bno055.c ****  *  from page one register from 0x1F bit 0 to 1
18978:Core/Src/bno055.c ****  *
18979:Core/Src/bno055.c ****  *  @param gyro_any_motion_slope_samples_u8 :
18980:Core/Src/bno055.c ****  *  The value of gyro anymotion slope samples
18981:Core/Src/bno055.c ****  *  gyro_any_motion_slope_samples_u8   |   result
18982:Core/Src/bno055.c ****  *  ----------------------------------   | -----------
18983:Core/Src/bno055.c ****  *            0                          |    8 samples
18984:Core/Src/bno055.c ****  *            1                          |    16 samples
18985:Core/Src/bno055.c ****  *            2                          |    32 samples
18986:Core/Src/bno055.c ****  *            3                          |    64 samples
18987:Core/Src/bno055.c ****  *
18988:Core/Src/bno055.c ****  *  @return results of bus communication function
18989:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18990:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18991:Core/Src/bno055.c ****  *
18992:Core/Src/bno055.c ****  */
18993:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_slope_samples(u8 *gyro_any_motion_slope_samp
18994:Core/Src/bno055.c **** {
 40188              		.loc 1 18994 1 is_stmt 1 view -0
 40189              		.cfi_startproc
 40190              		@ args = 0, pretend = 0, frame = 8
 40191              		@ frame_needed = 0, uses_anonymous_args = 0
 40192              		.loc 1 18994 1 is_stmt 0 view .LVU11218
 40193 0000 30B5     		push	{r4, r5, lr}
 40194              	.LCFI1077:
 40195              		.cfi_def_cfa_offset 12
 40196              		.cfi_offset 4, -12
 40197              		.cfi_offset 5, -8
 40198              		.cfi_offset 14, -4
 40199 0002 83B0     		sub	sp, sp, #12
 40200              	.LCFI1078:
 40201              		.cfi_def_cfa_offset 24
18995:Core/Src/bno055.c ****     /* Variable used to return value of
18996:Core/Src/bno055.c ****      * communication routine*/
18997:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 40202              		.loc 1 18997 5 is_stmt 1 view .LVU11219
 40203              	.LVL4946:
18998:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 40204              		.loc 1 18998 5 view .LVU11220
 40205              		.loc 1 18998 8 is_stmt 0 view .LVU11221
 40206 0004 0023     		movs	r3, #0
 40207 0006 8DF80730 		strb	r3, [sp, #7]
18999:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 40208              		.loc 1 18999 5 is_stmt 1 view .LVU11222
 40209              	.LVL4947:
19000:Core/Src/bno055.c **** 
19001:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
19002:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 40210              		.loc 1 19002 5 view .LVU11223
 40211              		.loc 1 19002 18 is_stmt 0 view .LVU11224
 40212 000a 144B     		ldr	r3, .L2836
 40213 000c 1B68     		ldr	r3, [r3]
 40214              		.loc 1 19002 8 view .LVU11225
ARM GAS  /tmp/ccWoU29M.s 			page 1124


 40215 000e F3B1     		cbz	r3, .L2832
 40216 0010 0446     		mov	r4, r0
19003:Core/Src/bno055.c ****     {
19004:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
19005:Core/Src/bno055.c ****     }
19006:Core/Src/bno055.c ****     else
19007:Core/Src/bno055.c ****     {
19008:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion slope samples is
19009:Core/Src/bno055.c ****          * available in the page one*/
19010:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 40217              		.loc 1 19010 9 is_stmt 1 view .LVU11226
 40218              		.loc 1 19010 21 is_stmt 0 view .LVU11227
 40219 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 40220              		.loc 1 19010 12 view .LVU11228
 40221 0014 012B     		cmp	r3, #1
 40222 0016 14D1     		bne	.L2835
 40223              	.LVL4948:
 40224              	.L2830:
19011:Core/Src/bno055.c ****         {
19012:Core/Src/bno055.c ****             /* Write page as one */
19013:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
19014:Core/Src/bno055.c ****         }
19015:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 40225              		.loc 1 19015 53 discriminator 1 view .LVU11229
 40226 0018 104B     		ldr	r3, .L2836
 40227 001a 1B68     		ldr	r3, [r3]
 40228 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 40229              		.loc 1 19015 41 discriminator 1 view .LVU11230
 40230 001e 012B     		cmp	r3, #1
 40231 0020 18D1     		bne	.L2833
 40232              	.L2831:
19016:Core/Src/bno055.c ****         {
19017:Core/Src/bno055.c ****             /*Read the value of gyro anymotion slope samples*/
19018:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 40233              		.loc 1 19018 13 is_stmt 1 view .LVU11231
 40234              		.loc 1 19018 32 is_stmt 0 view .LVU11232
 40235 0022 0E4B     		ldr	r3, .L2836
 40236 0024 1868     		ldr	r0, [r3]
 40237 0026 0569     		ldr	r5, [r0, #16]
 40238              		.loc 1 19018 24 view .LVU11233
 40239 0028 0123     		movs	r3, #1
 40240 002a 0DF10702 		add	r2, sp, #7
 40241 002e 1F21     		movs	r1, #31
 40242 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 40243 0032 A847     		blx	r5
 40244              	.LVL4949:
19019:Core/Src/bno055.c ****                                                       BNO055_GYRO_SLOPE_SAMPLES_REG,
19020:Core/Src/bno055.c ****                                                       &data_u8r,
19021:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
19022:Core/Src/bno055.c ****             *gyro_any_motion_slope_samples_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_SLOPE_SAM
 40245              		.loc 1 19022 13 is_stmt 1 view .LVU11234
 40246              		.loc 1 19022 49 is_stmt 0 view .LVU11235
 40247 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 40248 0038 03F00303 		and	r3, r3, #3
 40249              		.loc 1 19022 47 view .LVU11236
 40250 003c 2370     		strb	r3, [r4]
 40251              	.LVL4950:
ARM GAS  /tmp/ccWoU29M.s 			page 1125


 40252              	.L2829:
19023:Core/Src/bno055.c ****         }
19024:Core/Src/bno055.c ****         else
19025:Core/Src/bno055.c ****         {
19026:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
19027:Core/Src/bno055.c ****         }
19028:Core/Src/bno055.c ****     }
19029:Core/Src/bno055.c **** 
19030:Core/Src/bno055.c ****     return com_rslt;
19031:Core/Src/bno055.c **** }
 40253              		.loc 1 19031 1 view .LVU11237
 40254 003e 03B0     		add	sp, sp, #12
 40255              	.LCFI1079:
 40256              		.cfi_remember_state
 40257              		.cfi_def_cfa_offset 12
 40258              		@ sp needed
 40259 0040 30BD     		pop	{r4, r5, pc}
 40260              	.LVL4951:
 40261              	.L2835:
 40262              	.LCFI1080:
 40263              		.cfi_restore_state
19013:Core/Src/bno055.c ****         }
 40264              		.loc 1 19013 13 is_stmt 1 view .LVU11238
19013:Core/Src/bno055.c ****         }
 40265              		.loc 1 19013 23 is_stmt 0 view .LVU11239
 40266 0042 0120     		movs	r0, #1
 40267              	.LVL4952:
19013:Core/Src/bno055.c ****         }
 40268              		.loc 1 19013 23 view .LVU11240
 40269 0044 FFF7FEFF 		bl	bno055_write_page_id
 40270              	.LVL4953:
19015:Core/Src/bno055.c ****         {
 40271              		.loc 1 19015 9 is_stmt 1 view .LVU11241
19015:Core/Src/bno055.c ****         {
 40272              		.loc 1 19015 12 is_stmt 0 view .LVU11242
 40273 0048 0028     		cmp	r0, #0
 40274 004a EAD0     		beq	.L2831
 40275 004c E4E7     		b	.L2830
 40276              	.LVL4954:
 40277              	.L2832:
19004:Core/Src/bno055.c ****     }
 40278              		.loc 1 19004 16 view .LVU11243
 40279 004e 6FF07E00 		mvn	r0, #126
 40280              	.LVL4955:
19004:Core/Src/bno055.c ****     }
 40281              		.loc 1 19004 16 view .LVU11244
 40282 0052 F4E7     		b	.L2829
 40283              	.LVL4956:
 40284              	.L2833:
19026:Core/Src/bno055.c ****         }
 40285              		.loc 1 19026 22 view .LVU11245
 40286 0054 4FF0FF30 		mov	r0, #-1
 40287 0058 F1E7     		b	.L2829
 40288              	.L2837:
 40289 005a 00BF     		.align	2
 40290              	.L2836:
 40291 005c 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccWoU29M.s 			page 1126


 40292              		.cfi_endproc
 40293              	.LFE271:
 40295              		.section	.text.bno055_set_gyro_any_motion_slope_samples,"ax",%progbits
 40296              		.align	1
 40297              		.global	bno055_set_gyro_any_motion_slope_samples
 40298              		.syntax unified
 40299              		.thumb
 40300              		.thumb_func
 40301              		.fpu fpv4-sp-d16
 40303              	bno055_set_gyro_any_motion_slope_samples:
 40304              	.LVL4957:
 40305              	.LFB272:
19032:Core/Src/bno055.c **** 
19033:Core/Src/bno055.c **** /*!
19034:Core/Src/bno055.c ****  *  @brief This API used to write gyro anymotion slope samples
19035:Core/Src/bno055.c ****  *  from page one register from 0x1F bit 0 to 1
19036:Core/Src/bno055.c ****  *
19037:Core/Src/bno055.c ****  *  @param gyro_any_motion_slope_samples_u8 :
19038:Core/Src/bno055.c ****  *  The value of gyro anymotion slope samples
19039:Core/Src/bno055.c ****  *  gyro_any_motion_slope_samples_u8   |   result
19040:Core/Src/bno055.c ****  *  ----------------------------------   | -----------
19041:Core/Src/bno055.c ****  *            0                          |    8 samples
19042:Core/Src/bno055.c ****  *            1                          |    16 samples
19043:Core/Src/bno055.c ****  *            2                          |    32 samples
19044:Core/Src/bno055.c ****  *            3                          |    64 samples
19045:Core/Src/bno055.c ****  *
19046:Core/Src/bno055.c ****  *  @return results of bus communication function
19047:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
19048:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
19049:Core/Src/bno055.c ****  *
19050:Core/Src/bno055.c ****  */
19051:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_slope_samples(u8 gyro_any_motion_slope_sampl
19052:Core/Src/bno055.c **** {
 40306              		.loc 1 19052 1 is_stmt 1 view -0
 40307              		.cfi_startproc
 40308              		@ args = 0, pretend = 0, frame = 8
 40309              		@ frame_needed = 0, uses_anonymous_args = 0
 40310              		.loc 1 19052 1 is_stmt 0 view .LVU11247
 40311 0000 30B5     		push	{r4, r5, lr}
 40312              	.LCFI1081:
 40313              		.cfi_def_cfa_offset 12
 40314              		.cfi_offset 4, -12
 40315              		.cfi_offset 5, -8
 40316              		.cfi_offset 14, -4
 40317 0002 83B0     		sub	sp, sp, #12
 40318              	.LCFI1082:
 40319              		.cfi_def_cfa_offset 24
19053:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 40320              		.loc 1 19053 5 is_stmt 1 view .LVU11248
 40321              	.LVL4958:
19054:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 40322              		.loc 1 19054 5 view .LVU11249
 40323              		.loc 1 19054 8 is_stmt 0 view .LVU11250
 40324 0004 0023     		movs	r3, #0
 40325 0006 8DF80730 		strb	r3, [sp, #7]
19055:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 40326              		.loc 1 19055 5 is_stmt 1 view .LVU11251
ARM GAS  /tmp/ccWoU29M.s 			page 1127


 40327              	.LVL4959:
19056:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 40328              		.loc 1 19056 5 view .LVU11252
19057:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 40329              		.loc 1 19057 5 view .LVU11253
 40330              		.loc 1 19057 8 is_stmt 0 view .LVU11254
 40331 000a 8DF80630 		strb	r3, [sp, #6]
19058:Core/Src/bno055.c **** 
19059:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
19060:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 40332              		.loc 1 19060 5 is_stmt 1 view .LVU11255
 40333              		.loc 1 19060 18 is_stmt 0 view .LVU11256
 40334 000e 294B     		ldr	r3, .L2850
 40335 0010 1B68     		ldr	r3, [r3]
 40336              		.loc 1 19060 8 view .LVU11257
 40337 0012 002B     		cmp	r3, #0
 40338 0014 4AD0     		beq	.L2842
 40339 0016 0546     		mov	r5, r0
19061:Core/Src/bno055.c ****     {
19062:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
19063:Core/Src/bno055.c ****     }
19064:Core/Src/bno055.c ****     else
19065:Core/Src/bno055.c ****     {
19066:Core/Src/bno055.c ****         /* The write operation effective only if the operation
19067:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
19068:Core/Src/bno055.c ****          * current operation mode and set the config mode */
19069:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 40340              		.loc 1 19069 9 is_stmt 1 view .LVU11258
 40341              		.loc 1 19069 19 is_stmt 0 view .LVU11259
 40342 0018 0DF10600 		add	r0, sp, #6
 40343              	.LVL4960:
 40344              		.loc 1 19069 19 view .LVU11260
 40345 001c FFF7FEFF 		bl	bno055_get_operation_mode
 40346              	.LVL4961:
19070:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 40347              		.loc 1 19070 9 is_stmt 1 view .LVU11261
 40348              		.loc 1 19070 12 is_stmt 0 view .LVU11262
 40349 0020 0446     		mov	r4, r0
 40350 0022 90BB     		cbnz	r0, .L2843
19071:Core/Src/bno055.c ****         {
19072:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 40351              		.loc 1 19072 13 is_stmt 1 view .LVU11263
 40352              		.loc 1 19072 32 is_stmt 0 view .LVU11264
 40353 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 40354              		.loc 1 19072 16 view .LVU11265
 40355 0028 1BB9     		cbnz	r3, .L2847
 40356              	.LVL4962:
 40357              	.L2841:
19073:Core/Src/bno055.c ****             {
19074:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
19075:Core/Src/bno055.c ****             }
19076:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 40358              		.loc 1 19076 13 is_stmt 1 view .LVU11266
 40359              		.loc 1 19076 16 is_stmt 0 view .LVU11267
 40360 002a 44B1     		cbz	r4, .L2848
19077:Core/Src/bno055.c ****             {
19078:Core/Src/bno055.c ****                 /* Write page as one */
ARM GAS  /tmp/ccWoU29M.s 			page 1128


19079:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
19080:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
19081:Core/Src/bno055.c ****                 {
19082:Core/Src/bno055.c ****                     /* Write the value of
19083:Core/Src/bno055.c ****                      * gyro anymotion slope samples*/
19084:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
19085:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
19086:Core/Src/bno055.c ****                                                               &data_u8r,
19087:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
19088:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
19089:Core/Src/bno055.c ****                     {
19090:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
19091:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
19092:Core/Src/bno055.c ****                                                        gyro_any_motion_slope_samples_u8);
19093:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
19094:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
19095:Core/Src/bno055.c ****                                                                     &data_u8r,
19096:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
19097:Core/Src/bno055.c ****                     }
19098:Core/Src/bno055.c ****                 }
19099:Core/Src/bno055.c ****                 else
19100:Core/Src/bno055.c ****                 {
19101:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
19102:Core/Src/bno055.c ****                 }
19103:Core/Src/bno055.c ****             }
19104:Core/Src/bno055.c ****             else
19105:Core/Src/bno055.c ****             {
19106:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 40361              		.loc 1 19106 26 view .LVU11268
 40362 002c 4FF0FF34 		mov	r4, #-1
 40363              	.LVL4963:
 40364              		.loc 1 19106 26 view .LVU11269
 40365 0030 2DE0     		b	.L2840
 40366              	.LVL4964:
 40367              	.L2847:
19074:Core/Src/bno055.c ****             }
 40368              		.loc 1 19074 17 is_stmt 1 view .LVU11270
19074:Core/Src/bno055.c ****             }
 40369              		.loc 1 19074 28 is_stmt 0 view .LVU11271
 40370 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 40371              	.LVL4965:
19074:Core/Src/bno055.c ****             }
 40372              		.loc 1 19074 25 view .LVU11272
 40373 0036 54FA80F4 		uxtab	r4, r4, r0
 40374 003a 64B2     		sxtb	r4, r4
 40375              	.LVL4966:
19074:Core/Src/bno055.c ****             }
 40376              		.loc 1 19074 25 view .LVU11273
 40377 003c F5E7     		b	.L2841
 40378              	.L2848:
19079:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 40379              		.loc 1 19079 17 is_stmt 1 view .LVU11274
19079:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 40380              		.loc 1 19079 30 is_stmt 0 view .LVU11275
 40381 003e 0120     		movs	r0, #1
 40382 0040 FFF7FEFF 		bl	bno055_write_page_id
 40383              	.LVL4967:
ARM GAS  /tmp/ccWoU29M.s 			page 1129


19080:Core/Src/bno055.c ****                 {
 40384              		.loc 1 19080 17 is_stmt 1 view .LVU11276
19080:Core/Src/bno055.c ****                 {
 40385              		.loc 1 19080 20 is_stmt 0 view .LVU11277
 40386 0044 48BB     		cbnz	r0, .L2845
19084:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
 40387              		.loc 1 19084 21 is_stmt 1 view .LVU11278
19084:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
 40388              		.loc 1 19084 40 is_stmt 0 view .LVU11279
 40389 0046 1B4B     		ldr	r3, .L2850
 40390 0048 1868     		ldr	r0, [r3]
 40391              	.LVL4968:
19084:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
 40392              		.loc 1 19084 40 view .LVU11280
 40393 004a 0469     		ldr	r4, [r0, #16]
 40394              	.LVL4969:
19084:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
 40395              		.loc 1 19084 32 view .LVU11281
 40396 004c 0123     		movs	r3, #1
 40397 004e 0DF10702 		add	r2, sp, #7
 40398 0052 1F21     		movs	r1, #31
 40399 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 40400 0056 A047     		blx	r4
 40401              	.LVL4970:
19088:Core/Src/bno055.c ****                     {
 40402              		.loc 1 19088 21 is_stmt 1 view .LVU11282
19088:Core/Src/bno055.c ****                     {
 40403              		.loc 1 19088 24 is_stmt 0 view .LVU11283
 40404 0058 0446     		mov	r4, r0
 40405 005a C0B9     		cbnz	r0, .L2840
19090:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
 40406              		.loc 1 19090 25 is_stmt 1 view .LVU11284
19090:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
 40407              		.loc 1 19090 36 is_stmt 0 view .LVU11285
 40408 005c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 40409              	.LVL4971:
19090:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
 40410              		.loc 1 19090 36 view .LVU11286
 40411 0060 20F00300 		bic	r0, r0, #3
 40412 0064 43B2     		sxtb	r3, r0
 40413 0066 05F00300 		and	r0, r5, #3
 40414 006a 1843     		orrs	r0, r0, r3
19090:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
 40415              		.loc 1 19090 34 view .LVU11287
 40416 006c 8DF80700 		strb	r0, [sp, #7]
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
 40417              		.loc 1 19093 25 is_stmt 1 view .LVU11288
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
 40418              		.loc 1 19093 45 is_stmt 0 view .LVU11289
 40419 0070 104B     		ldr	r3, .L2850
 40420 0072 1868     		ldr	r0, [r3]
 40421 0074 C568     		ldr	r5, [r0, #12]
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
 40422              		.loc 1 19093 37 view .LVU11290
 40423 0076 0123     		movs	r3, #1
 40424 0078 0DF10702 		add	r2, sp, #7
 40425 007c 1F21     		movs	r1, #31
ARM GAS  /tmp/ccWoU29M.s 			page 1130


 40426 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 40427 0080 A847     		blx	r5
 40428              	.LVL4972:
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
 40429              		.loc 1 19093 34 view .LVU11291
 40430 0082 54FA80F4 		uxtab	r4, r4, r0
 40431 0086 64B2     		sxtb	r4, r4
 40432              	.LVL4973:
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
 40433              		.loc 1 19093 34 view .LVU11292
 40434 0088 01E0     		b	.L2840
 40435              	.LVL4974:
 40436              	.L2843:
19107:Core/Src/bno055.c ****             }
19108:Core/Src/bno055.c ****         }
19109:Core/Src/bno055.c ****         else
19110:Core/Src/bno055.c ****         {
19111:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 40437              		.loc 1 19111 22 view .LVU11293
 40438 008a 4FF0FF34 		mov	r4, #-1
 40439              	.LVL4975:
 40440              	.L2840:
19112:Core/Src/bno055.c ****         }
19113:Core/Src/bno055.c ****     }
19114:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 40441              		.loc 1 19114 5 is_stmt 1 view .LVU11294
 40442              		.loc 1 19114 24 is_stmt 0 view .LVU11295
 40443 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 40444              		.loc 1 19114 8 view .LVU11296
 40445 0092 28B9     		cbnz	r0, .L2849
 40446              	.LVL4976:
 40447              	.L2839:
19115:Core/Src/bno055.c ****     {
19116:Core/Src/bno055.c ****         /* set the operation mode of
19117:Core/Src/bno055.c ****          * previous operation mode*/
19118:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
19119:Core/Src/bno055.c ****     }
19120:Core/Src/bno055.c **** 
19121:Core/Src/bno055.c ****     return com_rslt;
19122:Core/Src/bno055.c **** }
 40448              		.loc 1 19122 1 view .LVU11297
 40449 0094 2046     		mov	r0, r4
 40450 0096 03B0     		add	sp, sp, #12
 40451              	.LCFI1083:
 40452              		.cfi_remember_state
 40453              		.cfi_def_cfa_offset 12
 40454              		@ sp needed
 40455 0098 30BD     		pop	{r4, r5, pc}
 40456              	.LVL4977:
 40457              	.L2845:
 40458              	.LCFI1084:
 40459              		.cfi_restore_state
19101:Core/Src/bno055.c ****                 }
 40460              		.loc 1 19101 30 view .LVU11298
 40461 009a 4FF0FF34 		mov	r4, #-1
 40462              	.LVL4978:
19101:Core/Src/bno055.c ****                 }
ARM GAS  /tmp/ccWoU29M.s 			page 1131


 40463              		.loc 1 19101 30 view .LVU11299
 40464 009e F6E7     		b	.L2840
 40465              	.LVL4979:
 40466              	.L2849:
19118:Core/Src/bno055.c ****     }
 40467              		.loc 1 19118 9 is_stmt 1 view .LVU11300
19118:Core/Src/bno055.c ****     }
 40468              		.loc 1 19118 21 is_stmt 0 view .LVU11301
 40469 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 40470              	.LVL4980:
19118:Core/Src/bno055.c ****     }
 40471              		.loc 1 19118 18 view .LVU11302
 40472 00a4 54FA80F4 		uxtab	r4, r4, r0
 40473              	.LVL4981:
19118:Core/Src/bno055.c ****     }
 40474              		.loc 1 19118 18 view .LVU11303
 40475 00a8 64B2     		sxtb	r4, r4
 40476              	.LVL4982:
19118:Core/Src/bno055.c ****     }
 40477              		.loc 1 19118 18 view .LVU11304
 40478 00aa F3E7     		b	.L2839
 40479              	.LVL4983:
 40480              	.L2842:
19062:Core/Src/bno055.c ****     }
 40481              		.loc 1 19062 16 view .LVU11305
 40482 00ac 6FF07E04 		mvn	r4, #126
 40483 00b0 F0E7     		b	.L2839
 40484              	.L2851:
 40485 00b2 00BF     		.align	2
 40486              	.L2850:
 40487 00b4 00000000 		.word	.LANCHOR0
 40488              		.cfi_endproc
 40489              	.LFE272:
 40491              		.section	.text.bno055_get_gyro_any_motion_awake_durn,"ax",%progbits
 40492              		.align	1
 40493              		.global	bno055_get_gyro_any_motion_awake_durn
 40494              		.syntax unified
 40495              		.thumb
 40496              		.thumb_func
 40497              		.fpu fpv4-sp-d16
 40499              	bno055_get_gyro_any_motion_awake_durn:
 40500              	.LVL4984:
 40501              	.LFB273:
19123:Core/Src/bno055.c **** 
19124:Core/Src/bno055.c **** /*!
19125:Core/Src/bno055.c ****  *  @brief This API used to read gyro anymotion awake duration
19126:Core/Src/bno055.c ****  *  from page one register from 0x1F bit 2 to 3
19127:Core/Src/bno055.c ****  *
19128:Core/Src/bno055.c ****  *  @param gyro_awake_durn_u8 : The value of gyro anymotion awake duration
19129:Core/Src/bno055.c ****  *
19130:Core/Src/bno055.c ****  *  @return results of bus communication function
19131:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
19132:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
19133:Core/Src/bno055.c ****  *
19134:Core/Src/bno055.c ****  */
19135:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_awake_durn(u8 *gyro_awake_durn_u8)
19136:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccWoU29M.s 			page 1132


 40502              		.loc 1 19136 1 is_stmt 1 view -0
 40503              		.cfi_startproc
 40504              		@ args = 0, pretend = 0, frame = 8
 40505              		@ frame_needed = 0, uses_anonymous_args = 0
 40506              		.loc 1 19136 1 is_stmt 0 view .LVU11307
 40507 0000 30B5     		push	{r4, r5, lr}
 40508              	.LCFI1085:
 40509              		.cfi_def_cfa_offset 12
 40510              		.cfi_offset 4, -12
 40511              		.cfi_offset 5, -8
 40512              		.cfi_offset 14, -4
 40513 0002 83B0     		sub	sp, sp, #12
 40514              	.LCFI1086:
 40515              		.cfi_def_cfa_offset 24
19137:Core/Src/bno055.c ****     /* Variable used to return value of
19138:Core/Src/bno055.c ****      * communication routine*/
19139:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 40516              		.loc 1 19139 5 is_stmt 1 view .LVU11308
 40517              	.LVL4985:
19140:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 40518              		.loc 1 19140 5 view .LVU11309
 40519              		.loc 1 19140 8 is_stmt 0 view .LVU11310
 40520 0004 0023     		movs	r3, #0
 40521 0006 8DF80730 		strb	r3, [sp, #7]
19141:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 40522              		.loc 1 19141 5 is_stmt 1 view .LVU11311
 40523              	.LVL4986:
19142:Core/Src/bno055.c **** 
19143:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
19144:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 40524              		.loc 1 19144 5 view .LVU11312
 40525              		.loc 1 19144 18 is_stmt 0 view .LVU11313
 40526 000a 144B     		ldr	r3, .L2860
 40527 000c 1B68     		ldr	r3, [r3]
 40528              		.loc 1 19144 8 view .LVU11314
 40529 000e F3B1     		cbz	r3, .L2856
 40530 0010 0446     		mov	r4, r0
19145:Core/Src/bno055.c ****     {
19146:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
19147:Core/Src/bno055.c ****     }
19148:Core/Src/bno055.c ****     else
19149:Core/Src/bno055.c ****     {
19150:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion awake duration is
19151:Core/Src/bno055.c ****          * available in the page one*/
19152:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 40531              		.loc 1 19152 9 is_stmt 1 view .LVU11315
 40532              		.loc 1 19152 21 is_stmt 0 view .LVU11316
 40533 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 40534              		.loc 1 19152 12 view .LVU11317
 40535 0014 012B     		cmp	r3, #1
 40536 0016 14D1     		bne	.L2859
 40537              	.LVL4987:
 40538              	.L2854:
19153:Core/Src/bno055.c ****         {
19154:Core/Src/bno055.c ****             /* Write page as one */
19155:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
19156:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 1133


19157:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 40539              		.loc 1 19157 53 discriminator 1 view .LVU11318
 40540 0018 104B     		ldr	r3, .L2860
 40541 001a 1B68     		ldr	r3, [r3]
 40542 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 40543              		.loc 1 19157 41 discriminator 1 view .LVU11319
 40544 001e 012B     		cmp	r3, #1
 40545 0020 18D1     		bne	.L2857
 40546              	.L2855:
19158:Core/Src/bno055.c ****         {
19159:Core/Src/bno055.c ****             /* Read the value of gyro anymotion awake duration*/
19160:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 40547              		.loc 1 19160 13 is_stmt 1 view .LVU11320
 40548              		.loc 1 19160 32 is_stmt 0 view .LVU11321
 40549 0022 0E4B     		ldr	r3, .L2860
 40550 0024 1868     		ldr	r0, [r3]
 40551 0026 0569     		ldr	r5, [r0, #16]
 40552              		.loc 1 19160 24 view .LVU11322
 40553 0028 0123     		movs	r3, #1
 40554 002a 0DF10702 		add	r2, sp, #7
 40555 002e 1F21     		movs	r1, #31
 40556 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 40557 0032 A847     		blx	r5
 40558              	.LVL4988:
19161:Core/Src/bno055.c ****                                                       BNO055_GYRO_AWAKE_DURN_REG,
19162:Core/Src/bno055.c ****                                                       &data_u8r,
19163:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
19164:Core/Src/bno055.c ****             *gyro_awake_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_AWAKE_DURN);
 40559              		.loc 1 19164 13 is_stmt 1 view .LVU11323
 40560              		.loc 1 19164 35 is_stmt 0 view .LVU11324
 40561 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 40562 0038 C3F38103 		ubfx	r3, r3, #2, #2
 40563              		.loc 1 19164 33 view .LVU11325
 40564 003c 2370     		strb	r3, [r4]
 40565              	.LVL4989:
 40566              	.L2853:
19165:Core/Src/bno055.c ****         }
19166:Core/Src/bno055.c ****         else
19167:Core/Src/bno055.c ****         {
19168:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
19169:Core/Src/bno055.c ****         }
19170:Core/Src/bno055.c ****     }
19171:Core/Src/bno055.c **** 
19172:Core/Src/bno055.c ****     return com_rslt;
19173:Core/Src/bno055.c **** }
 40567              		.loc 1 19173 1 view .LVU11326
 40568 003e 03B0     		add	sp, sp, #12
 40569              	.LCFI1087:
 40570              		.cfi_remember_state
 40571              		.cfi_def_cfa_offset 12
 40572              		@ sp needed
 40573 0040 30BD     		pop	{r4, r5, pc}
 40574              	.LVL4990:
 40575              	.L2859:
 40576              	.LCFI1088:
 40577              		.cfi_restore_state
19155:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccWoU29M.s 			page 1134


 40578              		.loc 1 19155 13 is_stmt 1 view .LVU11327
19155:Core/Src/bno055.c ****         }
 40579              		.loc 1 19155 23 is_stmt 0 view .LVU11328
 40580 0042 0120     		movs	r0, #1
 40581              	.LVL4991:
19155:Core/Src/bno055.c ****         }
 40582              		.loc 1 19155 23 view .LVU11329
 40583 0044 FFF7FEFF 		bl	bno055_write_page_id
 40584              	.LVL4992:
19157:Core/Src/bno055.c ****         {
 40585              		.loc 1 19157 9 is_stmt 1 view .LVU11330
19157:Core/Src/bno055.c ****         {
 40586              		.loc 1 19157 12 is_stmt 0 view .LVU11331
 40587 0048 0028     		cmp	r0, #0
 40588 004a EAD0     		beq	.L2855
 40589 004c E4E7     		b	.L2854
 40590              	.LVL4993:
 40591              	.L2856:
19146:Core/Src/bno055.c ****     }
 40592              		.loc 1 19146 16 view .LVU11332
 40593 004e 6FF07E00 		mvn	r0, #126
 40594              	.LVL4994:
19146:Core/Src/bno055.c ****     }
 40595              		.loc 1 19146 16 view .LVU11333
 40596 0052 F4E7     		b	.L2853
 40597              	.LVL4995:
 40598              	.L2857:
19168:Core/Src/bno055.c ****         }
 40599              		.loc 1 19168 22 view .LVU11334
 40600 0054 4FF0FF30 		mov	r0, #-1
 40601 0058 F1E7     		b	.L2853
 40602              	.L2861:
 40603 005a 00BF     		.align	2
 40604              	.L2860:
 40605 005c 00000000 		.word	.LANCHOR0
 40606              		.cfi_endproc
 40607              	.LFE273:
 40609              		.section	.text.bno055_set_gyro_any_motion_awake_durn,"ax",%progbits
 40610              		.align	1
 40611              		.global	bno055_set_gyro_any_motion_awake_durn
 40612              		.syntax unified
 40613              		.thumb
 40614              		.thumb_func
 40615              		.fpu fpv4-sp-d16
 40617              	bno055_set_gyro_any_motion_awake_durn:
 40618              	.LVL4996:
 40619              	.LFB274:
19174:Core/Src/bno055.c **** 
19175:Core/Src/bno055.c **** /*!
19176:Core/Src/bno055.c ****  *  @brief This API used to write gyro anymotion awake duration
19177:Core/Src/bno055.c ****  *  from page one register from 0x1F bit 2 to 3
19178:Core/Src/bno055.c ****  *
19179:Core/Src/bno055.c ****  *  @param gyro_awake_durn_u8 : The value of gyro anymotion awake duration
19180:Core/Src/bno055.c ****  *
19181:Core/Src/bno055.c ****  *  @return results of bus communication function
19182:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
19183:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
ARM GAS  /tmp/ccWoU29M.s 			page 1135


19184:Core/Src/bno055.c ****  *
19185:Core/Src/bno055.c ****  */
19186:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_awake_durn(u8 gyro_awake_durn_u8)
19187:Core/Src/bno055.c **** {
 40620              		.loc 1 19187 1 is_stmt 1 view -0
 40621              		.cfi_startproc
 40622              		@ args = 0, pretend = 0, frame = 8
 40623              		@ frame_needed = 0, uses_anonymous_args = 0
 40624              		.loc 1 19187 1 is_stmt 0 view .LVU11336
 40625 0000 30B5     		push	{r4, r5, lr}
 40626              	.LCFI1089:
 40627              		.cfi_def_cfa_offset 12
 40628              		.cfi_offset 4, -12
 40629              		.cfi_offset 5, -8
 40630              		.cfi_offset 14, -4
 40631 0002 83B0     		sub	sp, sp, #12
 40632              	.LCFI1090:
 40633              		.cfi_def_cfa_offset 24
19188:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 40634              		.loc 1 19188 5 is_stmt 1 view .LVU11337
 40635              	.LVL4997:
19189:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 40636              		.loc 1 19189 5 view .LVU11338
 40637              		.loc 1 19189 8 is_stmt 0 view .LVU11339
 40638 0004 0023     		movs	r3, #0
 40639 0006 8DF80730 		strb	r3, [sp, #7]
19190:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 40640              		.loc 1 19190 5 is_stmt 1 view .LVU11340
 40641              	.LVL4998:
19191:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 40642              		.loc 1 19191 5 view .LVU11341
19192:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 40643              		.loc 1 19192 5 view .LVU11342
 40644              		.loc 1 19192 8 is_stmt 0 view .LVU11343
 40645 000a 8DF80630 		strb	r3, [sp, #6]
19193:Core/Src/bno055.c **** 
19194:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
19195:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 40646              		.loc 1 19195 5 is_stmt 1 view .LVU11344
 40647              		.loc 1 19195 18 is_stmt 0 view .LVU11345
 40648 000e 2A4B     		ldr	r3, .L2874
 40649 0010 1B68     		ldr	r3, [r3]
 40650              		.loc 1 19195 8 view .LVU11346
 40651 0012 002B     		cmp	r3, #0
 40652 0014 4CD0     		beq	.L2866
 40653 0016 0546     		mov	r5, r0
19196:Core/Src/bno055.c ****     {
19197:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
19198:Core/Src/bno055.c ****     }
19199:Core/Src/bno055.c ****     else
19200:Core/Src/bno055.c ****     {
19201:Core/Src/bno055.c ****         /* The write operation effective only if the operation
19202:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
19203:Core/Src/bno055.c ****          * current operation mode and set the config mode */
19204:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 40654              		.loc 1 19204 9 is_stmt 1 view .LVU11347
 40655              		.loc 1 19204 19 is_stmt 0 view .LVU11348
ARM GAS  /tmp/ccWoU29M.s 			page 1136


 40656 0018 0DF10600 		add	r0, sp, #6
 40657              	.LVL4999:
 40658              		.loc 1 19204 19 view .LVU11349
 40659 001c FFF7FEFF 		bl	bno055_get_operation_mode
 40660              	.LVL5000:
19205:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 40661              		.loc 1 19205 9 is_stmt 1 view .LVU11350
 40662              		.loc 1 19205 12 is_stmt 0 view .LVU11351
 40663 0020 0446     		mov	r4, r0
 40664 0022 0028     		cmp	r0, #0
 40665 0024 33D1     		bne	.L2867
19206:Core/Src/bno055.c ****         {
19207:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 40666              		.loc 1 19207 13 is_stmt 1 view .LVU11352
 40667              		.loc 1 19207 32 is_stmt 0 view .LVU11353
 40668 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 40669              		.loc 1 19207 16 view .LVU11354
 40670 002a 1BB9     		cbnz	r3, .L2871
 40671              	.LVL5001:
 40672              	.L2865:
19208:Core/Src/bno055.c ****             {
19209:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
19210:Core/Src/bno055.c ****             }
19211:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 40673              		.loc 1 19211 13 is_stmt 1 view .LVU11355
 40674              		.loc 1 19211 16 is_stmt 0 view .LVU11356
 40675 002c 44B1     		cbz	r4, .L2872
19212:Core/Src/bno055.c ****             {
19213:Core/Src/bno055.c ****                 /* Write page as one */
19214:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
19215:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
19216:Core/Src/bno055.c ****                 {
19217:Core/Src/bno055.c ****                     /* Write the value of gyro
19218:Core/Src/bno055.c ****                      *  anymotion awake duration*/
19219:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
19220:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
19221:Core/Src/bno055.c ****                                                               &data_u8r,
19222:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
19223:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
19224:Core/Src/bno055.c ****                     {
19225:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_AWAKE_DURN, gyro_awake
19226:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
19227:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
19228:Core/Src/bno055.c ****                                                                     &data_u8r,
19229:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
19230:Core/Src/bno055.c ****                     }
19231:Core/Src/bno055.c ****                 }
19232:Core/Src/bno055.c ****                 else
19233:Core/Src/bno055.c ****                 {
19234:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
19235:Core/Src/bno055.c ****                 }
19236:Core/Src/bno055.c ****             }
19237:Core/Src/bno055.c ****             else
19238:Core/Src/bno055.c ****             {
19239:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 40676              		.loc 1 19239 26 view .LVU11357
 40677 002e 4FF0FF34 		mov	r4, #-1
ARM GAS  /tmp/ccWoU29M.s 			page 1137


 40678              	.LVL5002:
 40679              		.loc 1 19239 26 view .LVU11358
 40680 0032 2EE0     		b	.L2864
 40681              	.LVL5003:
 40682              	.L2871:
19209:Core/Src/bno055.c ****             }
 40683              		.loc 1 19209 17 is_stmt 1 view .LVU11359
19209:Core/Src/bno055.c ****             }
 40684              		.loc 1 19209 28 is_stmt 0 view .LVU11360
 40685 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 40686              	.LVL5004:
19209:Core/Src/bno055.c ****             }
 40687              		.loc 1 19209 25 view .LVU11361
 40688 0038 54FA80F4 		uxtab	r4, r4, r0
 40689 003c 64B2     		sxtb	r4, r4
 40690              	.LVL5005:
19209:Core/Src/bno055.c ****             }
 40691              		.loc 1 19209 25 view .LVU11362
 40692 003e F5E7     		b	.L2865
 40693              	.L2872:
19214:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 40694              		.loc 1 19214 17 is_stmt 1 view .LVU11363
19214:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 40695              		.loc 1 19214 30 is_stmt 0 view .LVU11364
 40696 0040 0120     		movs	r0, #1
 40697 0042 FFF7FEFF 		bl	bno055_write_page_id
 40698              	.LVL5006:
19215:Core/Src/bno055.c ****                 {
 40699              		.loc 1 19215 17 is_stmt 1 view .LVU11365
19215:Core/Src/bno055.c ****                 {
 40700              		.loc 1 19215 20 is_stmt 0 view .LVU11366
 40701 0046 50BB     		cbnz	r0, .L2869
19219:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
 40702              		.loc 1 19219 21 is_stmt 1 view .LVU11367
19219:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
 40703              		.loc 1 19219 40 is_stmt 0 view .LVU11368
 40704 0048 1B4B     		ldr	r3, .L2874
 40705 004a 1868     		ldr	r0, [r3]
 40706              	.LVL5007:
19219:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
 40707              		.loc 1 19219 40 view .LVU11369
 40708 004c 0469     		ldr	r4, [r0, #16]
 40709              	.LVL5008:
19219:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
 40710              		.loc 1 19219 32 view .LVU11370
 40711 004e 0123     		movs	r3, #1
 40712 0050 0DF10702 		add	r2, sp, #7
 40713 0054 1F21     		movs	r1, #31
 40714 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 40715 0058 A047     		blx	r4
 40716              	.LVL5009:
19223:Core/Src/bno055.c ****                     {
 40717              		.loc 1 19223 21 is_stmt 1 view .LVU11371
19223:Core/Src/bno055.c ****                     {
 40718              		.loc 1 19223 24 is_stmt 0 view .LVU11372
 40719 005a 0446     		mov	r4, r0
 40720 005c C8B9     		cbnz	r0, .L2864
ARM GAS  /tmp/ccWoU29M.s 			page 1138


19225:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 40721              		.loc 1 19225 25 is_stmt 1 view .LVU11373
19225:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 40722              		.loc 1 19225 36 is_stmt 0 view .LVU11374
 40723 005e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 40724              	.LVL5010:
19225:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 40725              		.loc 1 19225 36 view .LVU11375
 40726 0062 20F00C00 		bic	r0, r0, #12
 40727 0066 43B2     		sxtb	r3, r0
 40728 0068 A800     		lsls	r0, r5, #2
 40729 006a 00F00C00 		and	r0, r0, #12
 40730 006e 1843     		orrs	r0, r0, r3
19225:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 40731              		.loc 1 19225 34 view .LVU11376
 40732 0070 8DF80700 		strb	r0, [sp, #7]
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 40733              		.loc 1 19226 25 is_stmt 1 view .LVU11377
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 40734              		.loc 1 19226 45 is_stmt 0 view .LVU11378
 40735 0074 104B     		ldr	r3, .L2874
 40736 0076 1868     		ldr	r0, [r3]
 40737 0078 C568     		ldr	r5, [r0, #12]
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 40738              		.loc 1 19226 37 view .LVU11379
 40739 007a 0123     		movs	r3, #1
 40740 007c 0DF10702 		add	r2, sp, #7
 40741 0080 1F21     		movs	r1, #31
 40742 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 40743 0084 A847     		blx	r5
 40744              	.LVL5011:
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 40745              		.loc 1 19226 34 view .LVU11380
 40746 0086 54FA80F4 		uxtab	r4, r4, r0
 40747 008a 64B2     		sxtb	r4, r4
 40748              	.LVL5012:
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 40749              		.loc 1 19226 34 view .LVU11381
 40750 008c 01E0     		b	.L2864
 40751              	.LVL5013:
 40752              	.L2867:
19240:Core/Src/bno055.c ****             }
19241:Core/Src/bno055.c ****         }
19242:Core/Src/bno055.c ****         else
19243:Core/Src/bno055.c ****         {
19244:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 40753              		.loc 1 19244 22 view .LVU11382
 40754 008e 4FF0FF34 		mov	r4, #-1
 40755              	.LVL5014:
 40756              	.L2864:
19245:Core/Src/bno055.c ****         }
19246:Core/Src/bno055.c ****     }
19247:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 40757              		.loc 1 19247 5 is_stmt 1 view .LVU11383
 40758              		.loc 1 19247 24 is_stmt 0 view .LVU11384
 40759 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 40760              		.loc 1 19247 8 view .LVU11385
ARM GAS  /tmp/ccWoU29M.s 			page 1139


 40761 0096 28B9     		cbnz	r0, .L2873
 40762              	.LVL5015:
 40763              	.L2863:
19248:Core/Src/bno055.c ****     {
19249:Core/Src/bno055.c ****         /* set the operation mode
19250:Core/Src/bno055.c ****          * of previous operation mode*/
19251:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
19252:Core/Src/bno055.c ****     }
19253:Core/Src/bno055.c **** 
19254:Core/Src/bno055.c ****     return com_rslt;
19255:Core/Src/bno055.c **** }
 40764              		.loc 1 19255 1 view .LVU11386
 40765 0098 2046     		mov	r0, r4
 40766 009a 03B0     		add	sp, sp, #12
 40767              	.LCFI1091:
 40768              		.cfi_remember_state
 40769              		.cfi_def_cfa_offset 12
 40770              		@ sp needed
 40771 009c 30BD     		pop	{r4, r5, pc}
 40772              	.LVL5016:
 40773              	.L2869:
 40774              	.LCFI1092:
 40775              		.cfi_restore_state
19234:Core/Src/bno055.c ****                 }
 40776              		.loc 1 19234 30 view .LVU11387
 40777 009e 4FF0FF34 		mov	r4, #-1
 40778              	.LVL5017:
19234:Core/Src/bno055.c ****                 }
 40779              		.loc 1 19234 30 view .LVU11388
 40780 00a2 F6E7     		b	.L2864
 40781              	.LVL5018:
 40782              	.L2873:
19251:Core/Src/bno055.c ****     }
 40783              		.loc 1 19251 9 is_stmt 1 view .LVU11389
19251:Core/Src/bno055.c ****     }
 40784              		.loc 1 19251 21 is_stmt 0 view .LVU11390
 40785 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 40786              	.LVL5019:
19251:Core/Src/bno055.c ****     }
 40787              		.loc 1 19251 18 view .LVU11391
 40788 00a8 54FA80F4 		uxtab	r4, r4, r0
 40789              	.LVL5020:
19251:Core/Src/bno055.c ****     }
 40790              		.loc 1 19251 18 view .LVU11392
 40791 00ac 64B2     		sxtb	r4, r4
 40792              	.LVL5021:
19251:Core/Src/bno055.c ****     }
 40793              		.loc 1 19251 18 view .LVU11393
 40794 00ae F3E7     		b	.L2863
 40795              	.LVL5022:
 40796              	.L2866:
19197:Core/Src/bno055.c ****     }
 40797              		.loc 1 19197 16 view .LVU11394
 40798 00b0 6FF07E04 		mvn	r4, #126
 40799 00b4 F0E7     		b	.L2863
 40800              	.L2875:
 40801 00b6 00BF     		.align	2
ARM GAS  /tmp/ccWoU29M.s 			page 1140


 40802              	.L2874:
 40803 00b8 00000000 		.word	.LANCHOR0
 40804              		.cfi_endproc
 40805              	.LFE274:
 40807              		.section	.rodata
 40808              		.align	2
 40809              		.set	.LANCHOR1,. + 0
 40810              	.LC0:
 40811 0000 00000000 		.ascii	"\000\000\000\000\000\000"
 40811      0000
 40812 0006 0000     		.space	2
 40813              	.LC1:
 40814 0008 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 40814      00000000 
 40815              	.LC2:
 40816 0010 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 40816      00000000 
 40816      00000000 
 40816      00
 40817 001d 00000000 		.ascii	"\000\000\000\000\000"
 40817      00
 40818              		.section	.bss.p_bno055,"aw",%nobits
 40819              		.align	2
 40820              		.set	.LANCHOR0,. + 0
 40823              	p_bno055:
 40824 0000 00000000 		.space	4
 40825              		.text
 40826              	.Letext0:
 40827              		.file 2 "Core/Inc/bno055.h"
ARM GAS  /tmp/ccWoU29M.s 			page 1141


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bno055.c
     /tmp/ccWoU29M.s:18     .text.bno055_init:0000000000000000 $t
     /tmp/ccWoU29M.s:26     .text.bno055_init:0000000000000000 bno055_init
     /tmp/ccWoU29M.s:247    .text.bno055_init:00000000000000f8 $d
     /tmp/ccWoU29M.s:252    .text.bno055_write_register:0000000000000000 $t
     /tmp/ccWoU29M.s:259    .text.bno055_write_register:0000000000000000 bno055_write_register
     /tmp/ccWoU29M.s:312    .text.bno055_write_register:000000000000001c $d
     /tmp/ccWoU29M.s:317    .text.bno055_read_register:0000000000000000 $t
     /tmp/ccWoU29M.s:324    .text.bno055_read_register:0000000000000000 bno055_read_register
     /tmp/ccWoU29M.s:377    .text.bno055_read_register:000000000000001c $d
     /tmp/ccWoU29M.s:382    .text.bno055_read_page_id:0000000000000000 $t
     /tmp/ccWoU29M.s:389    .text.bno055_read_page_id:0000000000000000 bno055_read_page_id
     /tmp/ccWoU29M.s:475    .text.bno055_read_page_id:0000000000000040 $d
     /tmp/ccWoU29M.s:480    .text.bno055_write_page_id:0000000000000000 $t
     /tmp/ccWoU29M.s:487    .text.bno055_write_page_id:0000000000000000 bno055_write_page_id
     /tmp/ccWoU29M.s:589    .text.bno055_write_page_id:0000000000000058 $d
     /tmp/ccWoU29M.s:594    .text.bno055_read_chip_id:0000000000000000 $t
     /tmp/ccWoU29M.s:601    .text.bno055_read_chip_id:0000000000000000 bno055_read_chip_id
     /tmp/ccWoU29M.s:704    .text.bno055_read_chip_id:0000000000000054 $d
     /tmp/ccWoU29M.s:709    .text.bno055_read_sw_rev_id:0000000000000000 $t
     /tmp/ccWoU29M.s:716    .text.bno055_read_sw_rev_id:0000000000000000 bno055_read_sw_rev_id
     /tmp/ccWoU29M.s:824    .text.bno055_read_sw_rev_id:0000000000000058 $d
     /tmp/ccWoU29M.s:829    .text.bno055_read_accel_rev_id:0000000000000000 $t
     /tmp/ccWoU29M.s:836    .text.bno055_read_accel_rev_id:0000000000000000 bno055_read_accel_rev_id
     /tmp/ccWoU29M.s:939    .text.bno055_read_accel_rev_id:0000000000000054 $d
     /tmp/ccWoU29M.s:944    .text.bno055_read_mag_rev_id:0000000000000000 $t
     /tmp/ccWoU29M.s:951    .text.bno055_read_mag_rev_id:0000000000000000 bno055_read_mag_rev_id
     /tmp/ccWoU29M.s:1054   .text.bno055_read_mag_rev_id:0000000000000054 $d
     /tmp/ccWoU29M.s:1059   .text.bno055_read_gyro_rev_id:0000000000000000 $t
     /tmp/ccWoU29M.s:1066   .text.bno055_read_gyro_rev_id:0000000000000000 bno055_read_gyro_rev_id
     /tmp/ccWoU29M.s:1169   .text.bno055_read_gyro_rev_id:0000000000000054 $d
     /tmp/ccWoU29M.s:1174   .text.bno055_read_bl_rev_id:0000000000000000 $t
     /tmp/ccWoU29M.s:1181   .text.bno055_read_bl_rev_id:0000000000000000 bno055_read_bl_rev_id
     /tmp/ccWoU29M.s:1284   .text.bno055_read_bl_rev_id:0000000000000054 $d
     /tmp/ccWoU29M.s:1289   .text.bno055_read_accel_x:0000000000000000 $t
     /tmp/ccWoU29M.s:1296   .text.bno055_read_accel_x:0000000000000000 bno055_read_accel_x
     /tmp/ccWoU29M.s:1405   .text.bno055_read_accel_x:0000000000000058 $d
     /tmp/ccWoU29M.s:1410   .text.bno055_read_accel_y:0000000000000000 $t
     /tmp/ccWoU29M.s:1417   .text.bno055_read_accel_y:0000000000000000 bno055_read_accel_y
     /tmp/ccWoU29M.s:1526   .text.bno055_read_accel_y:0000000000000058 $d
     /tmp/ccWoU29M.s:1531   .text.bno055_read_accel_z:0000000000000000 $t
     /tmp/ccWoU29M.s:1538   .text.bno055_read_accel_z:0000000000000000 bno055_read_accel_z
     /tmp/ccWoU29M.s:1647   .text.bno055_read_accel_z:0000000000000058 $d
     /tmp/ccWoU29M.s:1652   .text.bno055_read_accel_xyz:0000000000000000 $t
     /tmp/ccWoU29M.s:1659   .text.bno055_read_accel_xyz:0000000000000000 bno055_read_accel_xyz
     /tmp/ccWoU29M.s:1790   .text.bno055_read_accel_xyz:000000000000007c $d
     /tmp/ccWoU29M.s:1796   .text.bno055_read_mag_x:0000000000000000 $t
     /tmp/ccWoU29M.s:1803   .text.bno055_read_mag_x:0000000000000000 bno055_read_mag_x
     /tmp/ccWoU29M.s:1912   .text.bno055_read_mag_x:0000000000000058 $d
     /tmp/ccWoU29M.s:1917   .text.bno055_read_mag_y:0000000000000000 $t
     /tmp/ccWoU29M.s:1924   .text.bno055_read_mag_y:0000000000000000 bno055_read_mag_y
     /tmp/ccWoU29M.s:2033   .text.bno055_read_mag_y:0000000000000058 $d
     /tmp/ccWoU29M.s:2038   .text.bno055_read_mag_z:0000000000000000 $t
     /tmp/ccWoU29M.s:2045   .text.bno055_read_mag_z:0000000000000000 bno055_read_mag_z
     /tmp/ccWoU29M.s:2154   .text.bno055_read_mag_z:0000000000000058 $d
     /tmp/ccWoU29M.s:2159   .text.bno055_read_mag_xyz:0000000000000000 $t
ARM GAS  /tmp/ccWoU29M.s 			page 1142


     /tmp/ccWoU29M.s:2166   .text.bno055_read_mag_xyz:0000000000000000 bno055_read_mag_xyz
     /tmp/ccWoU29M.s:2297   .text.bno055_read_mag_xyz:000000000000007c $d
     /tmp/ccWoU29M.s:2303   .text.bno055_read_gyro_x:0000000000000000 $t
     /tmp/ccWoU29M.s:2310   .text.bno055_read_gyro_x:0000000000000000 bno055_read_gyro_x
     /tmp/ccWoU29M.s:2419   .text.bno055_read_gyro_x:0000000000000058 $d
     /tmp/ccWoU29M.s:2424   .text.bno055_read_gyro_y:0000000000000000 $t
     /tmp/ccWoU29M.s:2431   .text.bno055_read_gyro_y:0000000000000000 bno055_read_gyro_y
     /tmp/ccWoU29M.s:2540   .text.bno055_read_gyro_y:0000000000000058 $d
     /tmp/ccWoU29M.s:2545   .text.bno055_read_gyro_z:0000000000000000 $t
     /tmp/ccWoU29M.s:2552   .text.bno055_read_gyro_z:0000000000000000 bno055_read_gyro_z
     /tmp/ccWoU29M.s:2661   .text.bno055_read_gyro_z:0000000000000058 $d
     /tmp/ccWoU29M.s:2666   .text.bno055_read_gyro_xyz:0000000000000000 $t
     /tmp/ccWoU29M.s:2673   .text.bno055_read_gyro_xyz:0000000000000000 bno055_read_gyro_xyz
     /tmp/ccWoU29M.s:2804   .text.bno055_read_gyro_xyz:000000000000007c $d
     /tmp/ccWoU29M.s:2810   .text.bno055_read_euler_h:0000000000000000 $t
     /tmp/ccWoU29M.s:2817   .text.bno055_read_euler_h:0000000000000000 bno055_read_euler_h
     /tmp/ccWoU29M.s:2926   .text.bno055_read_euler_h:0000000000000058 $d
     /tmp/ccWoU29M.s:2931   .text.bno055_read_euler_r:0000000000000000 $t
     /tmp/ccWoU29M.s:2938   .text.bno055_read_euler_r:0000000000000000 bno055_read_euler_r
     /tmp/ccWoU29M.s:3047   .text.bno055_read_euler_r:0000000000000058 $d
     /tmp/ccWoU29M.s:3052   .text.bno055_read_euler_p:0000000000000000 $t
     /tmp/ccWoU29M.s:3059   .text.bno055_read_euler_p:0000000000000000 bno055_read_euler_p
     /tmp/ccWoU29M.s:3168   .text.bno055_read_euler_p:0000000000000058 $d
     /tmp/ccWoU29M.s:3173   .text.bno055_read_euler_hrp:0000000000000000 $t
     /tmp/ccWoU29M.s:3180   .text.bno055_read_euler_hrp:0000000000000000 bno055_read_euler_hrp
     /tmp/ccWoU29M.s:3311   .text.bno055_read_euler_hrp:000000000000007c $d
     /tmp/ccWoU29M.s:3317   .text.bno055_read_quaternion_w:0000000000000000 $t
     /tmp/ccWoU29M.s:3324   .text.bno055_read_quaternion_w:0000000000000000 bno055_read_quaternion_w
     /tmp/ccWoU29M.s:3433   .text.bno055_read_quaternion_w:0000000000000058 $d
     /tmp/ccWoU29M.s:3438   .text.bno055_read_quaternion_x:0000000000000000 $t
     /tmp/ccWoU29M.s:3445   .text.bno055_read_quaternion_x:0000000000000000 bno055_read_quaternion_x
     /tmp/ccWoU29M.s:3554   .text.bno055_read_quaternion_x:0000000000000058 $d
     /tmp/ccWoU29M.s:3559   .text.bno055_read_quaternion_y:0000000000000000 $t
     /tmp/ccWoU29M.s:3566   .text.bno055_read_quaternion_y:0000000000000000 bno055_read_quaternion_y
     /tmp/ccWoU29M.s:3675   .text.bno055_read_quaternion_y:0000000000000058 $d
     /tmp/ccWoU29M.s:3680   .text.bno055_read_quaternion_z:0000000000000000 $t
     /tmp/ccWoU29M.s:3687   .text.bno055_read_quaternion_z:0000000000000000 bno055_read_quaternion_z
     /tmp/ccWoU29M.s:3796   .text.bno055_read_quaternion_z:0000000000000058 $d
     /tmp/ccWoU29M.s:3801   .text.bno055_read_quaternion_wxyz:0000000000000000 $t
     /tmp/ccWoU29M.s:3808   .text.bno055_read_quaternion_wxyz:0000000000000000 bno055_read_quaternion_wxyz
     /tmp/ccWoU29M.s:3951   .text.bno055_read_quaternion_wxyz:000000000000008c $d
     /tmp/ccWoU29M.s:3957   .text.bno055_read_linear_accel_x:0000000000000000 $t
     /tmp/ccWoU29M.s:3964   .text.bno055_read_linear_accel_x:0000000000000000 bno055_read_linear_accel_x
     /tmp/ccWoU29M.s:4073   .text.bno055_read_linear_accel_x:0000000000000058 $d
     /tmp/ccWoU29M.s:4078   .text.bno055_read_linear_accel_y:0000000000000000 $t
     /tmp/ccWoU29M.s:4085   .text.bno055_read_linear_accel_y:0000000000000000 bno055_read_linear_accel_y
     /tmp/ccWoU29M.s:4194   .text.bno055_read_linear_accel_y:0000000000000058 $d
     /tmp/ccWoU29M.s:4199   .text.bno055_read_linear_accel_z:0000000000000000 $t
     /tmp/ccWoU29M.s:4206   .text.bno055_read_linear_accel_z:0000000000000000 bno055_read_linear_accel_z
     /tmp/ccWoU29M.s:4315   .text.bno055_read_linear_accel_z:0000000000000058 $d
     /tmp/ccWoU29M.s:4320   .text.bno055_read_linear_accel_xyz:0000000000000000 $t
     /tmp/ccWoU29M.s:4327   .text.bno055_read_linear_accel_xyz:0000000000000000 bno055_read_linear_accel_xyz
     /tmp/ccWoU29M.s:4458   .text.bno055_read_linear_accel_xyz:000000000000007c $d
     /tmp/ccWoU29M.s:4464   .text.bno055_read_gravity_x:0000000000000000 $t
     /tmp/ccWoU29M.s:4471   .text.bno055_read_gravity_x:0000000000000000 bno055_read_gravity_x
     /tmp/ccWoU29M.s:4580   .text.bno055_read_gravity_x:0000000000000058 $d
     /tmp/ccWoU29M.s:4585   .text.bno055_read_gravity_y:0000000000000000 $t
ARM GAS  /tmp/ccWoU29M.s 			page 1143


     /tmp/ccWoU29M.s:4592   .text.bno055_read_gravity_y:0000000000000000 bno055_read_gravity_y
     /tmp/ccWoU29M.s:4701   .text.bno055_read_gravity_y:0000000000000058 $d
     /tmp/ccWoU29M.s:4706   .text.bno055_read_gravity_z:0000000000000000 $t
     /tmp/ccWoU29M.s:4713   .text.bno055_read_gravity_z:0000000000000000 bno055_read_gravity_z
     /tmp/ccWoU29M.s:4822   .text.bno055_read_gravity_z:0000000000000058 $d
     /tmp/ccWoU29M.s:4827   .text.bno055_read_gravity_xyz:0000000000000000 $t
     /tmp/ccWoU29M.s:4834   .text.bno055_read_gravity_xyz:0000000000000000 bno055_read_gravity_xyz
     /tmp/ccWoU29M.s:4965   .text.bno055_read_gravity_xyz:000000000000007c $d
     /tmp/ccWoU29M.s:4971   .text.bno055_read_temp_data:0000000000000000 $t
     /tmp/ccWoU29M.s:4978   .text.bno055_read_temp_data:0000000000000000 bno055_read_temp_data
     /tmp/ccWoU29M.s:5081   .text.bno055_read_temp_data:0000000000000054 $d
     /tmp/ccWoU29M.s:5089   .text.bno055_convert_float_mag_x_uT:0000000000000000 $t
     /tmp/ccWoU29M.s:5096   .text.bno055_convert_float_mag_x_uT:0000000000000000 bno055_convert_float_mag_x_uT
     /tmp/ccWoU29M.s:5171   .text.bno055_convert_float_mag_x_uT:000000000000003c $d
     /tmp/ccWoU29M.s:5176   .text.bno055_convert_float_mag_y_uT:0000000000000000 $t
     /tmp/ccWoU29M.s:5183   .text.bno055_convert_float_mag_y_uT:0000000000000000 bno055_convert_float_mag_y_uT
     /tmp/ccWoU29M.s:5258   .text.bno055_convert_float_mag_y_uT:000000000000003c $d
     /tmp/ccWoU29M.s:5263   .text.bno055_convert_float_mag_z_uT:0000000000000000 $t
     /tmp/ccWoU29M.s:5270   .text.bno055_convert_float_mag_z_uT:0000000000000000 bno055_convert_float_mag_z_uT
     /tmp/ccWoU29M.s:5345   .text.bno055_convert_float_mag_z_uT:000000000000003c $d
     /tmp/ccWoU29M.s:5350   .text.bno055_convert_float_mag_xyz_uT:0000000000000000 $t
     /tmp/ccWoU29M.s:5357   .text.bno055_convert_float_mag_xyz_uT:0000000000000000 bno055_convert_float_mag_xyz_uT
     /tmp/ccWoU29M.s:5459   .text.bno055_convert_float_mag_xyz_uT:000000000000006c $d
     /tmp/ccWoU29M.s:5465   .text.bno055_convert_float_linear_accel_x_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:5472   .text.bno055_convert_float_linear_accel_x_msq:0000000000000000 bno055_convert_float_linear_accel_x_msq
     /tmp/ccWoU29M.s:5547   .text.bno055_convert_float_linear_accel_x_msq:000000000000003c $d
     /tmp/ccWoU29M.s:5552   .text.bno055_convert_float_linear_accel_y_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:5559   .text.bno055_convert_float_linear_accel_y_msq:0000000000000000 bno055_convert_float_linear_accel_y_msq
     /tmp/ccWoU29M.s:5634   .text.bno055_convert_float_linear_accel_y_msq:000000000000003c $d
     /tmp/ccWoU29M.s:5639   .text.bno055_convert_float_linear_accel_z_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:5646   .text.bno055_convert_float_linear_accel_z_msq:0000000000000000 bno055_convert_float_linear_accel_z_msq
     /tmp/ccWoU29M.s:5721   .text.bno055_convert_float_linear_accel_z_msq:000000000000003c $d
     /tmp/ccWoU29M.s:5726   .text.bno055_convert_float_linear_accel_xyz_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:5733   .text.bno055_convert_float_linear_accel_xyz_msq:0000000000000000 bno055_convert_float_linear_accel_xyz_msq
     /tmp/ccWoU29M.s:5835   .text.bno055_convert_float_linear_accel_xyz_msq:000000000000006c $d
     /tmp/ccWoU29M.s:5840   .text.bno055_convert_gravity_float_x_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:5847   .text.bno055_convert_gravity_float_x_msq:0000000000000000 bno055_convert_gravity_float_x_msq
     /tmp/ccWoU29M.s:5922   .text.bno055_convert_gravity_float_x_msq:000000000000003c $d
     /tmp/ccWoU29M.s:5927   .text.bno055_convert_gravity_float_y_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:5934   .text.bno055_convert_gravity_float_y_msq:0000000000000000 bno055_convert_gravity_float_y_msq
     /tmp/ccWoU29M.s:6009   .text.bno055_convert_gravity_float_y_msq:000000000000003c $d
     /tmp/ccWoU29M.s:6014   .text.bno055_convert_gravity_float_z_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:6021   .text.bno055_convert_gravity_float_z_msq:0000000000000000 bno055_convert_gravity_float_z_msq
     /tmp/ccWoU29M.s:6096   .text.bno055_convert_gravity_float_z_msq:000000000000003c $d
     /tmp/ccWoU29M.s:6101   .text.bno055_convert_float_gravity_xyz_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:6108   .text.bno055_convert_float_gravity_xyz_msq:0000000000000000 bno055_convert_float_gravity_xyz_msq
     /tmp/ccWoU29M.s:6210   .text.bno055_convert_float_gravity_xyz_msq:000000000000006c $d
     /tmp/ccWoU29M.s:6215   .text.bno055_convert_double_mag_x_uT:0000000000000000 $t
     /tmp/ccWoU29M.s:6222   .text.bno055_convert_double_mag_x_uT:0000000000000000 bno055_convert_double_mag_x_uT
     /tmp/ccWoU29M.s:6295   .text.bno055_convert_double_mag_x_uT:0000000000000038 $d
     /tmp/ccWoU29M.s:6300   .text.bno055_convert_double_mag_y_uT:0000000000000000 $t
     /tmp/ccWoU29M.s:6307   .text.bno055_convert_double_mag_y_uT:0000000000000000 bno055_convert_double_mag_y_uT
     /tmp/ccWoU29M.s:6380   .text.bno055_convert_double_mag_y_uT:0000000000000038 $d
     /tmp/ccWoU29M.s:6385   .text.bno055_convert_double_mag_z_uT:0000000000000000 $t
     /tmp/ccWoU29M.s:6392   .text.bno055_convert_double_mag_z_uT:0000000000000000 bno055_convert_double_mag_z_uT
     /tmp/ccWoU29M.s:6465   .text.bno055_convert_double_mag_z_uT:0000000000000038 $d
     /tmp/ccWoU29M.s:6470   .text.bno055_convert_double_mag_xyz_uT:0000000000000000 $t
ARM GAS  /tmp/ccWoU29M.s 			page 1144


     /tmp/ccWoU29M.s:6477   .text.bno055_convert_double_mag_xyz_uT:0000000000000000 bno055_convert_double_mag_xyz_uT
     /tmp/ccWoU29M.s:6570   .text.bno055_convert_double_mag_xyz_uT:0000000000000068 $d
     /tmp/ccWoU29M.s:6575   .text.bno055_convert_double_linear_accel_x_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:6582   .text.bno055_convert_double_linear_accel_x_msq:0000000000000000 bno055_convert_double_linear_accel_x_msq
     /tmp/ccWoU29M.s:6655   .text.bno055_convert_double_linear_accel_x_msq:0000000000000038 $d
     /tmp/ccWoU29M.s:6660   .text.bno055_convert_double_linear_accel_y_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:6667   .text.bno055_convert_double_linear_accel_y_msq:0000000000000000 bno055_convert_double_linear_accel_y_msq
     /tmp/ccWoU29M.s:6740   .text.bno055_convert_double_linear_accel_y_msq:0000000000000038 $d
     /tmp/ccWoU29M.s:6745   .text.bno055_convert_double_linear_accel_z_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:6752   .text.bno055_convert_double_linear_accel_z_msq:0000000000000000 bno055_convert_double_linear_accel_z_msq
     /tmp/ccWoU29M.s:6825   .text.bno055_convert_double_linear_accel_z_msq:0000000000000038 $d
     /tmp/ccWoU29M.s:6830   .text.bno055_convert_double_linear_accel_xyz_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:6837   .text.bno055_convert_double_linear_accel_xyz_msq:0000000000000000 bno055_convert_double_linear_accel_xyz_msq
     /tmp/ccWoU29M.s:6930   .text.bno055_convert_double_linear_accel_xyz_msq:0000000000000068 $d
     /tmp/ccWoU29M.s:6935   .text.bno055_convert_gravity_double_x_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:6942   .text.bno055_convert_gravity_double_x_msq:0000000000000000 bno055_convert_gravity_double_x_msq
     /tmp/ccWoU29M.s:7015   .text.bno055_convert_gravity_double_x_msq:0000000000000038 $d
     /tmp/ccWoU29M.s:7020   .text.bno055_convert_gravity_double_y_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:7027   .text.bno055_convert_gravity_double_y_msq:0000000000000000 bno055_convert_gravity_double_y_msq
     /tmp/ccWoU29M.s:7104   .text.bno055_convert_gravity_double_y_msq:0000000000000038 $d
     /tmp/ccWoU29M.s:7109   .text.bno055_convert_gravity_double_z_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:7116   .text.bno055_convert_gravity_double_z_msq:0000000000000000 bno055_convert_gravity_double_z_msq
     /tmp/ccWoU29M.s:7193   .text.bno055_convert_gravity_double_z_msq:0000000000000038 $d
     /tmp/ccWoU29M.s:7198   .text.bno055_convert_double_gravity_xyz_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:7205   .text.bno055_convert_double_gravity_xyz_msq:0000000000000000 bno055_convert_double_gravity_xyz_msq
     /tmp/ccWoU29M.s:7302   .text.bno055_convert_double_gravity_xyz_msq:0000000000000068 $d
     /tmp/ccWoU29M.s:7307   .text.bno055_get_mag_calib_stat:0000000000000000 $t
     /tmp/ccWoU29M.s:7314   .text.bno055_get_mag_calib_stat:0000000000000000 bno055_get_mag_calib_stat
     /tmp/ccWoU29M.s:7418   .text.bno055_get_mag_calib_stat:0000000000000058 $d
     /tmp/ccWoU29M.s:7423   .text.bno055_get_accel_calib_stat:0000000000000000 $t
     /tmp/ccWoU29M.s:7430   .text.bno055_get_accel_calib_stat:0000000000000000 bno055_get_accel_calib_stat
     /tmp/ccWoU29M.s:7534   .text.bno055_get_accel_calib_stat:0000000000000058 $d
     /tmp/ccWoU29M.s:7539   .text.bno055_get_gyro_calib_stat:0000000000000000 $t
     /tmp/ccWoU29M.s:7546   .text.bno055_get_gyro_calib_stat:0000000000000000 bno055_get_gyro_calib_stat
     /tmp/ccWoU29M.s:7650   .text.bno055_get_gyro_calib_stat:0000000000000058 $d
     /tmp/ccWoU29M.s:7655   .text.bno055_get_sys_calib_stat:0000000000000000 $t
     /tmp/ccWoU29M.s:7662   .text.bno055_get_sys_calib_stat:0000000000000000 bno055_get_sys_calib_stat
     /tmp/ccWoU29M.s:7766   .text.bno055_get_sys_calib_stat:0000000000000054 $d
     /tmp/ccWoU29M.s:7771   .text.bno055_get_selftest_accel:0000000000000000 $t
     /tmp/ccWoU29M.s:7778   .text.bno055_get_selftest_accel:0000000000000000 bno055_get_selftest_accel
     /tmp/ccWoU29M.s:7882   .text.bno055_get_selftest_accel:0000000000000058 $d
     /tmp/ccWoU29M.s:7887   .text.bno055_get_selftest_mag:0000000000000000 $t
     /tmp/ccWoU29M.s:7894   .text.bno055_get_selftest_mag:0000000000000000 bno055_get_selftest_mag
     /tmp/ccWoU29M.s:7998   .text.bno055_get_selftest_mag:0000000000000058 $d
     /tmp/ccWoU29M.s:8003   .text.bno055_get_selftest_gyro:0000000000000000 $t
     /tmp/ccWoU29M.s:8010   .text.bno055_get_selftest_gyro:0000000000000000 bno055_get_selftest_gyro
     /tmp/ccWoU29M.s:8114   .text.bno055_get_selftest_gyro:0000000000000058 $d
     /tmp/ccWoU29M.s:8119   .text.bno055_get_selftest_mcu:0000000000000000 $t
     /tmp/ccWoU29M.s:8126   .text.bno055_get_selftest_mcu:0000000000000000 bno055_get_selftest_mcu
     /tmp/ccWoU29M.s:8230   .text.bno055_get_selftest_mcu:0000000000000058 $d
     /tmp/ccWoU29M.s:8235   .text.bno055_get_intr_stat_gyro_any_motion:0000000000000000 $t
     /tmp/ccWoU29M.s:8242   .text.bno055_get_intr_stat_gyro_any_motion:0000000000000000 bno055_get_intr_stat_gyro_any_motion
     /tmp/ccWoU29M.s:8346   .text.bno055_get_intr_stat_gyro_any_motion:0000000000000058 $d
     /tmp/ccWoU29M.s:8351   .text.bno055_get_intr_stat_gyro_highrate:0000000000000000 $t
     /tmp/ccWoU29M.s:8358   .text.bno055_get_intr_stat_gyro_highrate:0000000000000000 bno055_get_intr_stat_gyro_highrate
     /tmp/ccWoU29M.s:8462   .text.bno055_get_intr_stat_gyro_highrate:0000000000000058 $d
     /tmp/ccWoU29M.s:8467   .text.bno055_get_intr_stat_accel_high_g:0000000000000000 $t
ARM GAS  /tmp/ccWoU29M.s 			page 1145


     /tmp/ccWoU29M.s:8474   .text.bno055_get_intr_stat_accel_high_g:0000000000000000 bno055_get_intr_stat_accel_high_g
     /tmp/ccWoU29M.s:8578   .text.bno055_get_intr_stat_accel_high_g:0000000000000058 $d
     /tmp/ccWoU29M.s:8583   .text.bno055_get_intr_stat_accel_any_motion:0000000000000000 $t
     /tmp/ccWoU29M.s:8590   .text.bno055_get_intr_stat_accel_any_motion:0000000000000000 bno055_get_intr_stat_accel_any_motion
     /tmp/ccWoU29M.s:8694   .text.bno055_get_intr_stat_accel_any_motion:0000000000000058 $d
     /tmp/ccWoU29M.s:8699   .text.bno055_get_intr_stat_accel_no_motion:0000000000000000 $t
     /tmp/ccWoU29M.s:8706   .text.bno055_get_intr_stat_accel_no_motion:0000000000000000 bno055_get_intr_stat_accel_no_motion
     /tmp/ccWoU29M.s:8810   .text.bno055_get_intr_stat_accel_no_motion:0000000000000054 $d
     /tmp/ccWoU29M.s:8815   .text.bno055_get_stat_main_clk:0000000000000000 $t
     /tmp/ccWoU29M.s:8822   .text.bno055_get_stat_main_clk:0000000000000000 bno055_get_stat_main_clk
     /tmp/ccWoU29M.s:8926   .text.bno055_get_stat_main_clk:0000000000000058 $d
     /tmp/ccWoU29M.s:8931   .text.bno055_get_sys_stat_code:0000000000000000 $t
     /tmp/ccWoU29M.s:8938   .text.bno055_get_sys_stat_code:0000000000000000 bno055_get_sys_stat_code
     /tmp/ccWoU29M.s:9041   .text.bno055_get_sys_stat_code:0000000000000054 $d
     /tmp/ccWoU29M.s:9046   .text.bno055_get_sys_error_code:0000000000000000 $t
     /tmp/ccWoU29M.s:9053   .text.bno055_get_sys_error_code:0000000000000000 bno055_get_sys_error_code
     /tmp/ccWoU29M.s:9156   .text.bno055_get_sys_error_code:0000000000000054 $d
     /tmp/ccWoU29M.s:9161   .text.bno055_get_accel_unit:0000000000000000 $t
     /tmp/ccWoU29M.s:9168   .text.bno055_get_accel_unit:0000000000000000 bno055_get_accel_unit
     /tmp/ccWoU29M.s:9272   .text.bno055_get_accel_unit:0000000000000058 $d
     /tmp/ccWoU29M.s:9277   .text.bno055_get_gyro_unit:0000000000000000 $t
     /tmp/ccWoU29M.s:9284   .text.bno055_get_gyro_unit:0000000000000000 bno055_get_gyro_unit
     /tmp/ccWoU29M.s:9388   .text.bno055_get_gyro_unit:0000000000000058 $d
     /tmp/ccWoU29M.s:9393   .text.bno055_get_euler_unit:0000000000000000 $t
     /tmp/ccWoU29M.s:9400   .text.bno055_get_euler_unit:0000000000000000 bno055_get_euler_unit
     /tmp/ccWoU29M.s:9504   .text.bno055_get_euler_unit:0000000000000058 $d
     /tmp/ccWoU29M.s:9509   .text.bno055_get_tilt_unit:0000000000000000 $t
     /tmp/ccWoU29M.s:9516   .text.bno055_get_tilt_unit:0000000000000000 bno055_get_tilt_unit
     /tmp/ccWoU29M.s:9620   .text.bno055_get_tilt_unit:0000000000000058 $d
     /tmp/ccWoU29M.s:9625   .text.bno055_get_temp_unit:0000000000000000 $t
     /tmp/ccWoU29M.s:9632   .text.bno055_get_temp_unit:0000000000000000 bno055_get_temp_unit
     /tmp/ccWoU29M.s:9736   .text.bno055_get_temp_unit:0000000000000058 $d
     /tmp/ccWoU29M.s:9741   .text.bno055_get_data_output_format:0000000000000000 $t
     /tmp/ccWoU29M.s:9748   .text.bno055_get_data_output_format:0000000000000000 bno055_get_data_output_format
     /tmp/ccWoU29M.s:9852   .text.bno055_get_data_output_format:0000000000000054 $d
     /tmp/ccWoU29M.s:9857   .text.bno055_get_operation_mode:0000000000000000 $t
     /tmp/ccWoU29M.s:9864   .text.bno055_get_operation_mode:0000000000000000 bno055_get_operation_mode
     /tmp/ccWoU29M.s:9968   .text.bno055_get_operation_mode:0000000000000058 $d
     /tmp/ccWoU29M.s:9973   .text.bno055_set_operation_mode:0000000000000000 $t
     /tmp/ccWoU29M.s:9980   .text.bno055_set_operation_mode:0000000000000000 bno055_set_operation_mode
     /tmp/ccWoU29M.s:10221  .text.bno055_set_operation_mode:000000000000011c $d
     /tmp/ccWoU29M.s:10226  .text.bno055_set_accel_unit:0000000000000000 $t
     /tmp/ccWoU29M.s:10233  .text.bno055_set_accel_unit:0000000000000000 bno055_set_accel_unit
     /tmp/ccWoU29M.s:10400  .text.bno055_set_accel_unit:00000000000000a4 $d
     /tmp/ccWoU29M.s:10405  .text.bno055_convert_float_accel_x_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:10412  .text.bno055_convert_float_accel_x_msq:0000000000000000 bno055_convert_float_accel_x_msq
     /tmp/ccWoU29M.s:10541  .text.bno055_convert_float_accel_x_msq:0000000000000074 $d
     /tmp/ccWoU29M.s:10547  .text.bno055_convert_float_accel_x_mg:0000000000000000 $t
     /tmp/ccWoU29M.s:10554  .text.bno055_convert_float_accel_x_mg:0000000000000000 bno055_convert_float_accel_x_mg
     /tmp/ccWoU29M.s:10672  .text.bno055_convert_float_accel_y_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:10679  .text.bno055_convert_float_accel_y_msq:0000000000000000 bno055_convert_float_accel_y_msq
     /tmp/ccWoU29M.s:10808  .text.bno055_convert_float_accel_y_msq:0000000000000074 $d
     /tmp/ccWoU29M.s:10814  .text.bno055_convert_float_accel_y_mg:0000000000000000 $t
     /tmp/ccWoU29M.s:10821  .text.bno055_convert_float_accel_y_mg:0000000000000000 bno055_convert_float_accel_y_mg
     /tmp/ccWoU29M.s:10939  .text.bno055_convert_float_accel_z_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:10946  .text.bno055_convert_float_accel_z_msq:0000000000000000 bno055_convert_float_accel_z_msq
     /tmp/ccWoU29M.s:11075  .text.bno055_convert_float_accel_z_msq:0000000000000074 $d
ARM GAS  /tmp/ccWoU29M.s 			page 1146


     /tmp/ccWoU29M.s:11081  .text.bno055_convert_float_accel_z_mg:0000000000000000 $t
     /tmp/ccWoU29M.s:11088  .text.bno055_convert_float_accel_z_mg:0000000000000000 bno055_convert_float_accel_z_mg
     /tmp/ccWoU29M.s:11206  .text.bno055_convert_float_accel_xyz_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:11213  .text.bno055_convert_float_accel_xyz_msq:0000000000000000 bno055_convert_float_accel_xyz_msq
     /tmp/ccWoU29M.s:11360  .text.bno055_convert_float_accel_xyz_msq:000000000000009c $d
     /tmp/ccWoU29M.s:11365  .text.bno055_convert_float_accel_xyz_mg:0000000000000000 $t
     /tmp/ccWoU29M.s:11372  .text.bno055_convert_float_accel_xyz_mg:0000000000000000 bno055_convert_float_accel_xyz_mg
     /tmp/ccWoU29M.s:11509  .text.bno055_convert_double_accel_x_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:11516  .text.bno055_convert_double_accel_x_msq:0000000000000000 bno055_convert_double_accel_x_msq
     /tmp/ccWoU29M.s:11634  .text.bno055_convert_double_accel_x_msq:0000000000000068 $d
     /tmp/ccWoU29M.s:11639  .text.bno055_convert_double_accel_x_mg:0000000000000000 $t
     /tmp/ccWoU29M.s:11646  .text.bno055_convert_double_accel_x_mg:0000000000000000 bno055_convert_double_accel_x_mg
     /tmp/ccWoU29M.s:11761  .text.bno055_convert_double_accel_y_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:11768  .text.bno055_convert_double_accel_y_msq:0000000000000000 bno055_convert_double_accel_y_msq
     /tmp/ccWoU29M.s:11886  .text.bno055_convert_double_accel_y_msq:0000000000000068 $d
     /tmp/ccWoU29M.s:11891  .text.bno055_convert_double_accel_y_mg:0000000000000000 $t
     /tmp/ccWoU29M.s:11898  .text.bno055_convert_double_accel_y_mg:0000000000000000 bno055_convert_double_accel_y_mg
     /tmp/ccWoU29M.s:12013  .text.bno055_convert_double_accel_z_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:12020  .text.bno055_convert_double_accel_z_msq:0000000000000000 bno055_convert_double_accel_z_msq
     /tmp/ccWoU29M.s:12138  .text.bno055_convert_double_accel_z_msq:0000000000000068 $d
     /tmp/ccWoU29M.s:12143  .text.bno055_convert_double_accel_z_mg:0000000000000000 $t
     /tmp/ccWoU29M.s:12150  .text.bno055_convert_double_accel_z_mg:0000000000000000 bno055_convert_double_accel_z_mg
     /tmp/ccWoU29M.s:12265  .text.bno055_convert_double_accel_xyz_msq:0000000000000000 $t
     /tmp/ccWoU29M.s:12272  .text.bno055_convert_double_accel_xyz_msq:0000000000000000 bno055_convert_double_accel_xyz_msq
     /tmp/ccWoU29M.s:12410  .text.bno055_convert_double_accel_xyz_msq:0000000000000094 $d
     /tmp/ccWoU29M.s:12415  .text.bno055_convert_double_accel_xyz_mg:0000000000000000 $t
     /tmp/ccWoU29M.s:12422  .text.bno055_convert_double_accel_xyz_mg:0000000000000000 bno055_convert_double_accel_xyz_mg
     /tmp/ccWoU29M.s:12550  .text.bno055_set_gyro_unit:0000000000000000 $t
     /tmp/ccWoU29M.s:12557  .text.bno055_set_gyro_unit:0000000000000000 bno055_set_gyro_unit
     /tmp/ccWoU29M.s:12725  .text.bno055_set_gyro_unit:00000000000000a8 $d
     /tmp/ccWoU29M.s:12730  .text.bno055_convert_float_gyro_x_dps:0000000000000000 $t
     /tmp/ccWoU29M.s:12737  .text.bno055_convert_float_gyro_x_dps:0000000000000000 bno055_convert_float_gyro_x_dps
     /tmp/ccWoU29M.s:12857  .text.bno055_convert_float_gyro_x_dps:0000000000000068 $d
     /tmp/ccWoU29M.s:12862  .text.bno055_convert_float_gyro_x_rps:0000000000000000 $t
     /tmp/ccWoU29M.s:12869  .text.bno055_convert_float_gyro_x_rps:0000000000000000 bno055_convert_float_gyro_x_rps
     /tmp/ccWoU29M.s:12990  .text.bno055_convert_float_gyro_x_rps:000000000000006c $d
     /tmp/ccWoU29M.s:12995  .text.bno055_convert_float_gyro_y_dps:0000000000000000 $t
     /tmp/ccWoU29M.s:13002  .text.bno055_convert_float_gyro_y_dps:0000000000000000 bno055_convert_float_gyro_y_dps
     /tmp/ccWoU29M.s:13122  .text.bno055_convert_float_gyro_y_dps:0000000000000068 $d
     /tmp/ccWoU29M.s:13127  .text.bno055_convert_float_gyro_y_rps:0000000000000000 $t
     /tmp/ccWoU29M.s:13134  .text.bno055_convert_float_gyro_y_rps:0000000000000000 bno055_convert_float_gyro_y_rps
     /tmp/ccWoU29M.s:13255  .text.bno055_convert_float_gyro_y_rps:000000000000006c $d
     /tmp/ccWoU29M.s:13260  .text.bno055_convert_float_gyro_z_dps:0000000000000000 $t
     /tmp/ccWoU29M.s:13267  .text.bno055_convert_float_gyro_z_dps:0000000000000000 bno055_convert_float_gyro_z_dps
     /tmp/ccWoU29M.s:13387  .text.bno055_convert_float_gyro_z_dps:0000000000000068 $d
     /tmp/ccWoU29M.s:13392  .text.bno055_convert_float_gyro_z_rps:0000000000000000 $t
     /tmp/ccWoU29M.s:13399  .text.bno055_convert_float_gyro_z_rps:0000000000000000 bno055_convert_float_gyro_z_rps
     /tmp/ccWoU29M.s:13520  .text.bno055_convert_float_gyro_z_rps:000000000000006c $d
     /tmp/ccWoU29M.s:13525  .text.bno055_convert_float_gyro_xyz_dps:0000000000000000 $t
     /tmp/ccWoU29M.s:13532  .text.bno055_convert_float_gyro_xyz_dps:0000000000000000 bno055_convert_float_gyro_xyz_dps
     /tmp/ccWoU29M.s:13679  .text.bno055_convert_float_gyro_xyz_dps:000000000000009c $d
     /tmp/ccWoU29M.s:13684  .text.bno055_convert_float_gyro_xyz_rps:0000000000000000 $t
     /tmp/ccWoU29M.s:13691  .text.bno055_convert_float_gyro_xyz_rps:0000000000000000 bno055_convert_float_gyro_xyz_rps
     /tmp/ccWoU29M.s:13839  .text.bno055_convert_float_gyro_xyz_rps:000000000000009c $d
     /tmp/ccWoU29M.s:13844  .text.bno055_convert_double_gyro_x_dps:0000000000000000 $t
     /tmp/ccWoU29M.s:13851  .text.bno055_convert_double_gyro_x_dps:0000000000000000 bno055_convert_double_gyro_x_dps
     /tmp/ccWoU29M.s:13969  .text.bno055_convert_double_gyro_x_dps:0000000000000068 $d
ARM GAS  /tmp/ccWoU29M.s 			page 1147


     /tmp/ccWoU29M.s:13974  .text.bno055_convert_double_gyro_x_rps:0000000000000000 $t
     /tmp/ccWoU29M.s:13981  .text.bno055_convert_double_gyro_x_rps:0000000000000000 bno055_convert_double_gyro_x_rps
     /tmp/ccWoU29M.s:14100  .text.bno055_convert_double_gyro_x_rps:0000000000000068 $d
     /tmp/ccWoU29M.s:14105  .text.bno055_convert_double_gyro_y_dps:0000000000000000 $t
     /tmp/ccWoU29M.s:14112  .text.bno055_convert_double_gyro_y_dps:0000000000000000 bno055_convert_double_gyro_y_dps
     /tmp/ccWoU29M.s:14230  .text.bno055_convert_double_gyro_y_dps:0000000000000068 $d
     /tmp/ccWoU29M.s:14235  .text.bno055_convert_double_gyro_y_rps:0000000000000000 $t
     /tmp/ccWoU29M.s:14242  .text.bno055_convert_double_gyro_y_rps:0000000000000000 bno055_convert_double_gyro_y_rps
     /tmp/ccWoU29M.s:14361  .text.bno055_convert_double_gyro_y_rps:0000000000000068 $d
     /tmp/ccWoU29M.s:14366  .text.bno055_convert_double_gyro_z_dps:0000000000000000 $t
     /tmp/ccWoU29M.s:14373  .text.bno055_convert_double_gyro_z_dps:0000000000000000 bno055_convert_double_gyro_z_dps
     /tmp/ccWoU29M.s:14491  .text.bno055_convert_double_gyro_z_dps:0000000000000068 $d
     /tmp/ccWoU29M.s:14496  .text.bno055_convert_double_gyro_z_rps:0000000000000000 $t
     /tmp/ccWoU29M.s:14503  .text.bno055_convert_double_gyro_z_rps:0000000000000000 bno055_convert_double_gyro_z_rps
     /tmp/ccWoU29M.s:14622  .text.bno055_convert_double_gyro_z_rps:0000000000000068 $d
     /tmp/ccWoU29M.s:14627  .text.bno055_convert_double_gyro_xyz_dps:0000000000000000 $t
     /tmp/ccWoU29M.s:14634  .text.bno055_convert_double_gyro_xyz_dps:0000000000000000 bno055_convert_double_gyro_xyz_dps
     /tmp/ccWoU29M.s:14772  .text.bno055_convert_double_gyro_xyz_dps:0000000000000094 $d
     /tmp/ccWoU29M.s:14777  .text.bno055_convert_double_gyro_xyz_rps:0000000000000000 $t
     /tmp/ccWoU29M.s:14784  .text.bno055_convert_double_gyro_xyz_rps:0000000000000000 bno055_convert_double_gyro_xyz_rps
     /tmp/ccWoU29M.s:14923  .text.bno055_convert_double_gyro_xyz_rps:0000000000000098 $d
     /tmp/ccWoU29M.s:14928  .text.bno055_set_euler_unit:0000000000000000 $t
     /tmp/ccWoU29M.s:14935  .text.bno055_set_euler_unit:0000000000000000 bno055_set_euler_unit
     /tmp/ccWoU29M.s:15103  .text.bno055_set_euler_unit:00000000000000a8 $d
     /tmp/ccWoU29M.s:15108  .text.bno055_convert_float_euler_h_deg:0000000000000000 $t
     /tmp/ccWoU29M.s:15115  .text.bno055_convert_float_euler_h_deg:0000000000000000 bno055_convert_float_euler_h_deg
     /tmp/ccWoU29M.s:15235  .text.bno055_convert_float_euler_h_deg:0000000000000068 $d
     /tmp/ccWoU29M.s:15240  .text.bno055_convert_float_euler_h_rad:0000000000000000 $t
     /tmp/ccWoU29M.s:15247  .text.bno055_convert_float_euler_h_rad:0000000000000000 bno055_convert_float_euler_h_rad
     /tmp/ccWoU29M.s:15368  .text.bno055_convert_float_euler_h_rad:000000000000006c $d
     /tmp/ccWoU29M.s:15373  .text.bno055_convert_float_euler_r_deg:0000000000000000 $t
     /tmp/ccWoU29M.s:15380  .text.bno055_convert_float_euler_r_deg:0000000000000000 bno055_convert_float_euler_r_deg
     /tmp/ccWoU29M.s:15500  .text.bno055_convert_float_euler_r_deg:0000000000000068 $d
     /tmp/ccWoU29M.s:15505  .text.bno055_convert_float_euler_r_rad:0000000000000000 $t
     /tmp/ccWoU29M.s:15512  .text.bno055_convert_float_euler_r_rad:0000000000000000 bno055_convert_float_euler_r_rad
     /tmp/ccWoU29M.s:15633  .text.bno055_convert_float_euler_r_rad:000000000000006c $d
     /tmp/ccWoU29M.s:15638  .text.bno055_convert_float_euler_p_deg:0000000000000000 $t
     /tmp/ccWoU29M.s:15645  .text.bno055_convert_float_euler_p_deg:0000000000000000 bno055_convert_float_euler_p_deg
     /tmp/ccWoU29M.s:15765  .text.bno055_convert_float_euler_p_deg:0000000000000068 $d
     /tmp/ccWoU29M.s:15770  .text.bno055_convert_float_euler_p_rad:0000000000000000 $t
     /tmp/ccWoU29M.s:15777  .text.bno055_convert_float_euler_p_rad:0000000000000000 bno055_convert_float_euler_p_rad
     /tmp/ccWoU29M.s:15898  .text.bno055_convert_float_euler_p_rad:000000000000006c $d
     /tmp/ccWoU29M.s:15903  .text.bno055_convert_float_euler_hpr_deg:0000000000000000 $t
     /tmp/ccWoU29M.s:15910  .text.bno055_convert_float_euler_hpr_deg:0000000000000000 bno055_convert_float_euler_hpr_deg
     /tmp/ccWoU29M.s:16057  .text.bno055_convert_float_euler_hpr_deg:000000000000009c $d
     /tmp/ccWoU29M.s:16062  .text.bno055_convert_float_euler_hpr_rad:0000000000000000 $t
     /tmp/ccWoU29M.s:16069  .text.bno055_convert_float_euler_hpr_rad:0000000000000000 bno055_convert_float_euler_hpr_rad
     /tmp/ccWoU29M.s:16217  .text.bno055_convert_float_euler_hpr_rad:000000000000009c $d
     /tmp/ccWoU29M.s:16222  .text.bno055_convert_double_euler_h_deg:0000000000000000 $t
     /tmp/ccWoU29M.s:16229  .text.bno055_convert_double_euler_h_deg:0000000000000000 bno055_convert_double_euler_h_deg
     /tmp/ccWoU29M.s:16347  .text.bno055_convert_double_euler_h_deg:0000000000000068 $d
     /tmp/ccWoU29M.s:16352  .text.bno055_convert_double_euler_h_rad:0000000000000000 $t
     /tmp/ccWoU29M.s:16359  .text.bno055_convert_double_euler_h_rad:0000000000000000 bno055_convert_double_euler_h_rad
     /tmp/ccWoU29M.s:16478  .text.bno055_convert_double_euler_h_rad:0000000000000068 $d
     /tmp/ccWoU29M.s:16483  .text.bno055_convert_double_euler_r_deg:0000000000000000 $t
     /tmp/ccWoU29M.s:16490  .text.bno055_convert_double_euler_r_deg:0000000000000000 bno055_convert_double_euler_r_deg
     /tmp/ccWoU29M.s:16608  .text.bno055_convert_double_euler_r_deg:0000000000000068 $d
ARM GAS  /tmp/ccWoU29M.s 			page 1148


     /tmp/ccWoU29M.s:16613  .text.bno055_convert_double_euler_r_rad:0000000000000000 $t
     /tmp/ccWoU29M.s:16620  .text.bno055_convert_double_euler_r_rad:0000000000000000 bno055_convert_double_euler_r_rad
     /tmp/ccWoU29M.s:16739  .text.bno055_convert_double_euler_r_rad:0000000000000068 $d
     /tmp/ccWoU29M.s:16744  .text.bno055_convert_double_euler_p_deg:0000000000000000 $t
     /tmp/ccWoU29M.s:16751  .text.bno055_convert_double_euler_p_deg:0000000000000000 bno055_convert_double_euler_p_deg
     /tmp/ccWoU29M.s:16869  .text.bno055_convert_double_euler_p_deg:0000000000000068 $d
     /tmp/ccWoU29M.s:16874  .text.bno055_convert_double_euler_p_rad:0000000000000000 $t
     /tmp/ccWoU29M.s:16881  .text.bno055_convert_double_euler_p_rad:0000000000000000 bno055_convert_double_euler_p_rad
     /tmp/ccWoU29M.s:17000  .text.bno055_convert_double_euler_p_rad:0000000000000068 $d
     /tmp/ccWoU29M.s:17005  .text.bno055_convert_double_euler_hpr_deg:0000000000000000 $t
     /tmp/ccWoU29M.s:17012  .text.bno055_convert_double_euler_hpr_deg:0000000000000000 bno055_convert_double_euler_hpr_deg
     /tmp/ccWoU29M.s:17150  .text.bno055_convert_double_euler_hpr_deg:0000000000000094 $d
     /tmp/ccWoU29M.s:17155  .text.bno055_convert_double_euler_hpr_rad:0000000000000000 $t
     /tmp/ccWoU29M.s:17162  .text.bno055_convert_double_euler_hpr_rad:0000000000000000 bno055_convert_double_euler_hpr_rad
     /tmp/ccWoU29M.s:17289  .text.bno055_convert_double_euler_hpr_rad:000000000000008c $d
     /tmp/ccWoU29M.s:17294  .text.bno055_set_tilt_unit:0000000000000000 $t
     /tmp/ccWoU29M.s:17301  .text.bno055_set_tilt_unit:0000000000000000 bno055_set_tilt_unit
     /tmp/ccWoU29M.s:17469  .text.bno055_set_tilt_unit:00000000000000a8 $d
     /tmp/ccWoU29M.s:17474  .text.bno055_set_temp_unit:0000000000000000 $t
     /tmp/ccWoU29M.s:17481  .text.bno055_set_temp_unit:0000000000000000 bno055_set_temp_unit
     /tmp/ccWoU29M.s:17649  .text.bno055_set_temp_unit:00000000000000a8 $d
     /tmp/ccWoU29M.s:17655  .text.bno055_convert_float_temp_fahrenheit:0000000000000000 $t
     /tmp/ccWoU29M.s:17662  .text.bno055_convert_float_temp_fahrenheit:0000000000000000 bno055_convert_float_temp_fahrenheit
     /tmp/ccWoU29M.s:17784  .text.bno055_convert_float_temp_celsius:0000000000000000 $t
     /tmp/ccWoU29M.s:17791  .text.bno055_convert_float_temp_celsius:0000000000000000 bno055_convert_float_temp_celsius
     /tmp/ccWoU29M.s:17908  .text.bno055_convert_double_temp_fahrenheit:0000000000000000 $t
     /tmp/ccWoU29M.s:17915  .text.bno055_convert_double_temp_fahrenheit:0000000000000000 bno055_convert_double_temp_fahrenheit
     /tmp/ccWoU29M.s:18042  .text.bno055_convert_double_temp_celsius:0000000000000000 $t
     /tmp/ccWoU29M.s:18049  .text.bno055_convert_double_temp_celsius:0000000000000000 bno055_convert_double_temp_celsius
     /tmp/ccWoU29M.s:18170  .text.bno055_set_data_output_format:0000000000000000 $t
     /tmp/ccWoU29M.s:18177  .text.bno055_set_data_output_format:0000000000000000 bno055_set_data_output_format
     /tmp/ccWoU29M.s:18342  .text.bno055_set_data_output_format:00000000000000a0 $d
     /tmp/ccWoU29M.s:18347  .text.bno055_get_power_mode:0000000000000000 $t
     /tmp/ccWoU29M.s:18354  .text.bno055_get_power_mode:0000000000000000 bno055_get_power_mode
     /tmp/ccWoU29M.s:18458  .text.bno055_get_power_mode:0000000000000058 $d
     /tmp/ccWoU29M.s:18463  .text.bno055_set_power_mode:0000000000000000 $t
     /tmp/ccWoU29M.s:18470  .text.bno055_set_power_mode:0000000000000000 bno055_set_power_mode
     /tmp/ccWoU29M.s:18637  .text.bno055_set_power_mode:00000000000000a4 $d
     /tmp/ccWoU29M.s:18642  .text.bno055_get_intr_rst:0000000000000000 $t
     /tmp/ccWoU29M.s:18649  .text.bno055_get_intr_rst:0000000000000000 bno055_get_intr_rst
     /tmp/ccWoU29M.s:18753  .text.bno055_get_intr_rst:0000000000000058 $d
     /tmp/ccWoU29M.s:18758  .text.bno055_set_intr_rst:0000000000000000 $t
     /tmp/ccWoU29M.s:18765  .text.bno055_set_intr_rst:0000000000000000 bno055_set_intr_rst
     /tmp/ccWoU29M.s:18894  .text.bno055_set_intr_rst:0000000000000084 $d
     /tmp/ccWoU29M.s:18899  .text.bno055_get_clk_src:0000000000000000 $t
     /tmp/ccWoU29M.s:18906  .text.bno055_get_clk_src:0000000000000000 bno055_get_clk_src
     /tmp/ccWoU29M.s:19010  .text.bno055_get_clk_src:0000000000000054 $d
     /tmp/ccWoU29M.s:19015  .text.bno055_set_clk_src:0000000000000000 $t
     /tmp/ccWoU29M.s:19022  .text.bno055_set_clk_src:0000000000000000 bno055_set_clk_src
     /tmp/ccWoU29M.s:19148  .text.bno055_set_clk_src:000000000000007c $d
     /tmp/ccWoU29M.s:19153  .text.bno055_get_sys_rst:0000000000000000 $t
     /tmp/ccWoU29M.s:19160  .text.bno055_get_sys_rst:0000000000000000 bno055_get_sys_rst
     /tmp/ccWoU29M.s:19264  .text.bno055_get_sys_rst:0000000000000058 $d
     /tmp/ccWoU29M.s:19269  .text.bno055_set_sys_rst:0000000000000000 $t
     /tmp/ccWoU29M.s:19276  .text.bno055_set_sys_rst:0000000000000000 bno055_set_sys_rst
     /tmp/ccWoU29M.s:19400  .text.bno055_set_sys_rst:0000000000000078 $d
     /tmp/ccWoU29M.s:19405  .text.bno055_get_selftest:0000000000000000 $t
ARM GAS  /tmp/ccWoU29M.s 			page 1149


     /tmp/ccWoU29M.s:19412  .text.bno055_get_selftest:0000000000000000 bno055_get_selftest
     /tmp/ccWoU29M.s:19516  .text.bno055_get_selftest:0000000000000058 $d
     /tmp/ccWoU29M.s:19521  .text.bno055_set_selftest:0000000000000000 $t
     /tmp/ccWoU29M.s:19528  .text.bno055_set_selftest:0000000000000000 bno055_set_selftest
     /tmp/ccWoU29M.s:19695  .text.bno055_set_selftest:00000000000000a4 $d
     /tmp/ccWoU29M.s:19700  .text.bno055_get_temp_source:0000000000000000 $t
     /tmp/ccWoU29M.s:19707  .text.bno055_get_temp_source:0000000000000000 bno055_get_temp_source
     /tmp/ccWoU29M.s:19811  .text.bno055_get_temp_source:0000000000000058 $d
     /tmp/ccWoU29M.s:19816  .text.bno055_set_temp_source:0000000000000000 $t
     /tmp/ccWoU29M.s:19823  .text.bno055_set_temp_source:0000000000000000 bno055_set_temp_source
     /tmp/ccWoU29M.s:19990  .text.bno055_set_temp_source:00000000000000a4 $d
     /tmp/ccWoU29M.s:19995  .text.bno055_get_axis_remap_value:0000000000000000 $t
     /tmp/ccWoU29M.s:20002  .text.bno055_get_axis_remap_value:0000000000000000 bno055_get_axis_remap_value
     /tmp/ccWoU29M.s:20106  .text.bno055_get_axis_remap_value:0000000000000058 $d
     /tmp/ccWoU29M.s:20111  .text.bno055_set_axis_remap_value:0000000000000000 $t
     /tmp/ccWoU29M.s:20118  .text.bno055_set_axis_remap_value:0000000000000000 bno055_set_axis_remap_value
     /tmp/ccWoU29M.s:20183  .text.bno055_set_axis_remap_value:000000000000003a $d
     /tmp/ccWoU29M.s:20375  .text.bno055_set_axis_remap_value:0000000000000118 $d
     /tmp/ccWoU29M.s:20380  .text.bno055_get_remap_x_sign:0000000000000000 $t
     /tmp/ccWoU29M.s:20387  .text.bno055_get_remap_x_sign:0000000000000000 bno055_get_remap_x_sign
     /tmp/ccWoU29M.s:20491  .text.bno055_get_remap_x_sign:0000000000000058 $d
     /tmp/ccWoU29M.s:20496  .text.bno055_set_remap_x_sign:0000000000000000 $t
     /tmp/ccWoU29M.s:20503  .text.bno055_set_remap_x_sign:0000000000000000 bno055_set_remap_x_sign
     /tmp/ccWoU29M.s:20671  .text.bno055_set_remap_x_sign:00000000000000a8 $d
     /tmp/ccWoU29M.s:20676  .text.bno055_get_remap_y_sign:0000000000000000 $t
     /tmp/ccWoU29M.s:20683  .text.bno055_get_remap_y_sign:0000000000000000 bno055_get_remap_y_sign
     /tmp/ccWoU29M.s:20787  .text.bno055_get_remap_y_sign:0000000000000058 $d
     /tmp/ccWoU29M.s:20792  .text.bno055_set_remap_y_sign:0000000000000000 $t
     /tmp/ccWoU29M.s:20799  .text.bno055_set_remap_y_sign:0000000000000000 bno055_set_remap_y_sign
     /tmp/ccWoU29M.s:20967  .text.bno055_set_remap_y_sign:00000000000000a8 $d
     /tmp/ccWoU29M.s:20972  .text.bno055_get_remap_z_sign:0000000000000000 $t
     /tmp/ccWoU29M.s:20979  .text.bno055_get_remap_z_sign:0000000000000000 bno055_get_remap_z_sign
     /tmp/ccWoU29M.s:21083  .text.bno055_get_remap_z_sign:0000000000000058 $d
     /tmp/ccWoU29M.s:21088  .text.bno055_set_remap_z_sign:0000000000000000 $t
     /tmp/ccWoU29M.s:21095  .text.bno055_set_remap_z_sign:0000000000000000 bno055_set_remap_z_sign
     /tmp/ccWoU29M.s:21262  .text.bno055_set_remap_z_sign:00000000000000a4 $d
     /tmp/ccWoU29M.s:21267  .text.bno055_read_sic_matrix:0000000000000000 $t
     /tmp/ccWoU29M.s:21274  .text.bno055_read_sic_matrix:0000000000000000 bno055_read_sic_matrix
     /tmp/ccWoU29M.s:21488  .text.bno055_read_sic_matrix:00000000000000e0 $d
     /tmp/ccWoU29M.s:21494  .text.bno055_write_sic_matrix:0000000000000000 $t
     /tmp/ccWoU29M.s:21501  .text.bno055_write_sic_matrix:0000000000000000 bno055_write_sic_matrix
     /tmp/ccWoU29M.s:22095  .text.bno055_write_sic_matrix:00000000000002ac $d
     /tmp/ccWoU29M.s:22099  .text.bno055_write_sic_matrix:00000000000002b0 $t
     /tmp/ccWoU29M.s:22548  .text.bno055_write_sic_matrix:00000000000004ac $d
     /tmp/ccWoU29M.s:22553  .text.bno055_read_accel_offset:0000000000000000 $t
     /tmp/ccWoU29M.s:22560  .text.bno055_read_accel_offset:0000000000000000 bno055_read_accel_offset
     /tmp/ccWoU29M.s:22746  .text.bno055_read_accel_offset:00000000000000b8 $d
     /tmp/ccWoU29M.s:22752  .text.bno055_write_accel_offset:0000000000000000 $t
     /tmp/ccWoU29M.s:22759  .text.bno055_write_accel_offset:0000000000000000 bno055_write_accel_offset
     /tmp/ccWoU29M.s:23286  .text.bno055_write_accel_offset:0000000000000240 $d
     /tmp/ccWoU29M.s:23291  .text.bno055_read_mag_offset:0000000000000000 $t
     /tmp/ccWoU29M.s:23298  .text.bno055_read_mag_offset:0000000000000000 bno055_read_mag_offset
     /tmp/ccWoU29M.s:23484  .text.bno055_read_mag_offset:00000000000000b8 $d
     /tmp/ccWoU29M.s:23490  .text.bno055_write_mag_offset:0000000000000000 $t
     /tmp/ccWoU29M.s:23497  .text.bno055_write_mag_offset:0000000000000000 bno055_write_mag_offset
     /tmp/ccWoU29M.s:24028  .text.bno055_write_mag_offset:000000000000024c $d
     /tmp/ccWoU29M.s:24033  .text.bno055_read_gyro_offset:0000000000000000 $t
ARM GAS  /tmp/ccWoU29M.s 			page 1150


     /tmp/ccWoU29M.s:24040  .text.bno055_read_gyro_offset:0000000000000000 bno055_read_gyro_offset
     /tmp/ccWoU29M.s:24181  .text.bno055_read_gyro_offset:0000000000000084 $d
     /tmp/ccWoU29M.s:24187  .text.bno055_write_gyro_offset:0000000000000000 $t
     /tmp/ccWoU29M.s:24194  .text.bno055_write_gyro_offset:0000000000000000 bno055_write_gyro_offset
     /tmp/ccWoU29M.s:24623  .text.bno055_write_gyro_offset:00000000000001d4 $d
     /tmp/ccWoU29M.s:24628  .text.bno055_get_accel_range:0000000000000000 $t
     /tmp/ccWoU29M.s:24635  .text.bno055_get_accel_range:0000000000000000 bno055_get_accel_range
     /tmp/ccWoU29M.s:24741  .text.bno055_get_accel_range:000000000000005c $d
     /tmp/ccWoU29M.s:24746  .text.bno055_set_accel_range:0000000000000000 $t
     /tmp/ccWoU29M.s:24753  .text.bno055_set_accel_range:0000000000000000 bno055_set_accel_range
     /tmp/ccWoU29M.s:24950  .text.bno055_set_accel_range:00000000000000c0 $d
     /tmp/ccWoU29M.s:24955  .text.bno055_get_accel_bw:0000000000000000 $t
     /tmp/ccWoU29M.s:24962  .text.bno055_get_accel_bw:0000000000000000 bno055_get_accel_bw
     /tmp/ccWoU29M.s:25068  .text.bno055_get_accel_bw:000000000000005c $d
     /tmp/ccWoU29M.s:25073  .text.bno055_set_accel_bw:0000000000000000 $t
     /tmp/ccWoU29M.s:25080  .text.bno055_set_accel_bw:0000000000000000 bno055_set_accel_bw
     /tmp/ccWoU29M.s:25278  .text.bno055_set_accel_bw:00000000000000c0 $d
     /tmp/ccWoU29M.s:25283  .text.bno055_get_accel_power_mode:0000000000000000 $t
     /tmp/ccWoU29M.s:25290  .text.bno055_get_accel_power_mode:0000000000000000 bno055_get_accel_power_mode
     /tmp/ccWoU29M.s:25396  .text.bno055_get_accel_power_mode:0000000000000058 $d
     /tmp/ccWoU29M.s:25401  .text.bno055_set_accel_power_mode:0000000000000000 $t
     /tmp/ccWoU29M.s:25408  .text.bno055_set_accel_power_mode:0000000000000000 bno055_set_accel_power_mode
     /tmp/ccWoU29M.s:25602  .text.bno055_set_accel_power_mode:00000000000000b8 $d
     /tmp/ccWoU29M.s:25607  .text.bno055_get_mag_data_output_rate:0000000000000000 $t
     /tmp/ccWoU29M.s:25614  .text.bno055_get_mag_data_output_rate:0000000000000000 bno055_get_mag_data_output_rate
     /tmp/ccWoU29M.s:25720  .text.bno055_get_mag_data_output_rate:000000000000005c $d
     /tmp/ccWoU29M.s:25725  .text.bno055_set_mag_data_output_rate:0000000000000000 $t
     /tmp/ccWoU29M.s:25732  .text.bno055_set_mag_data_output_rate:0000000000000000 bno055_set_mag_data_output_rate
     /tmp/ccWoU29M.s:25928  .text.bno055_set_mag_data_output_rate:00000000000000c0 $d
     /tmp/ccWoU29M.s:25933  .text.bno055_get_mag_operation_mode:0000000000000000 $t
     /tmp/ccWoU29M.s:25940  .text.bno055_get_mag_operation_mode:0000000000000000 bno055_get_mag_operation_mode
     /tmp/ccWoU29M.s:26046  .text.bno055_get_mag_operation_mode:000000000000005c $d
     /tmp/ccWoU29M.s:26051  .text.bno055_set_mag_operation_mode:0000000000000000 $t
     /tmp/ccWoU29M.s:26058  .text.bno055_set_mag_operation_mode:0000000000000000 bno055_set_mag_operation_mode
     /tmp/ccWoU29M.s:26255  .text.bno055_set_mag_operation_mode:00000000000000c0 $d
     /tmp/ccWoU29M.s:26260  .text.bno055_get_mag_power_mode:0000000000000000 $t
     /tmp/ccWoU29M.s:26267  .text.bno055_get_mag_power_mode:0000000000000000 bno055_get_mag_power_mode
     /tmp/ccWoU29M.s:26373  .text.bno055_get_mag_power_mode:000000000000005c $d
     /tmp/ccWoU29M.s:26378  .text.bno055_set_mag_power_mode:0000000000000000 $t
     /tmp/ccWoU29M.s:26385  .text.bno055_set_mag_power_mode:0000000000000000 bno055_set_mag_power_mode
     /tmp/ccWoU29M.s:26582  .text.bno055_set_mag_power_mode:00000000000000c0 $d
     /tmp/ccWoU29M.s:26587  .text.bno055_get_gyro_range:0000000000000000 $t
     /tmp/ccWoU29M.s:26594  .text.bno055_get_gyro_range:0000000000000000 bno055_get_gyro_range
     /tmp/ccWoU29M.s:26700  .text.bno055_get_gyro_range:000000000000005c $d
     /tmp/ccWoU29M.s:26705  .text.bno055_set_gyro_range:0000000000000000 $t
     /tmp/ccWoU29M.s:26712  .text.bno055_set_gyro_range:0000000000000000 bno055_set_gyro_range
     /tmp/ccWoU29M.s:26908  .text.bno055_set_gyro_range:00000000000000c0 $d
     /tmp/ccWoU29M.s:26913  .text.bno055_get_gyro_bw:0000000000000000 $t
     /tmp/ccWoU29M.s:26920  .text.bno055_get_gyro_bw:0000000000000000 bno055_get_gyro_bw
     /tmp/ccWoU29M.s:27026  .text.bno055_get_gyro_bw:000000000000005c $d
     /tmp/ccWoU29M.s:27031  .text.bno055_get_gyro_power_mode:0000000000000000 $t
     /tmp/ccWoU29M.s:27038  .text.bno055_get_gyro_power_mode:0000000000000000 bno055_get_gyro_power_mode
     /tmp/ccWoU29M.s:27144  .text.bno055_get_gyro_power_mode:000000000000005c $d
     /tmp/ccWoU29M.s:27149  .text.bno055_get_accel_sleep_tmr_mode:0000000000000000 $t
     /tmp/ccWoU29M.s:27156  .text.bno055_get_accel_sleep_tmr_mode:0000000000000000 bno055_get_accel_sleep_tmr_mode
     /tmp/ccWoU29M.s:27262  .text.bno055_get_accel_sleep_tmr_mode:000000000000005c $d
     /tmp/ccWoU29M.s:27267  .text.bno055_set_accel_sleep_tmr_mode:0000000000000000 $t
ARM GAS  /tmp/ccWoU29M.s 			page 1151


     /tmp/ccWoU29M.s:27274  .text.bno055_set_accel_sleep_tmr_mode:0000000000000000 bno055_set_accel_sleep_tmr_mode
     /tmp/ccWoU29M.s:27471  .text.bno055_set_accel_sleep_tmr_mode:00000000000000c0 $d
     /tmp/ccWoU29M.s:27476  .text.bno055_get_accel_sleep_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:27483  .text.bno055_get_accel_sleep_durn:0000000000000000 bno055_get_accel_sleep_durn
     /tmp/ccWoU29M.s:27589  .text.bno055_get_accel_sleep_durn:000000000000005c $d
     /tmp/ccWoU29M.s:27594  .text.bno055_set_accel_sleep_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:27601  .text.bno055_set_accel_sleep_durn:0000000000000000 bno055_set_accel_sleep_durn
     /tmp/ccWoU29M.s:27799  .text.bno055_set_accel_sleep_durn:00000000000000c0 $d
     /tmp/ccWoU29M.s:27804  .text.bno055_get_gyro_sleep_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:27811  .text.bno055_get_gyro_sleep_durn:0000000000000000 bno055_get_gyro_sleep_durn
     /tmp/ccWoU29M.s:27917  .text.bno055_get_gyro_sleep_durn:000000000000005c $d
     /tmp/ccWoU29M.s:27922  .text.bno055_set_gyro_sleep_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:27929  .text.bno055_set_gyro_sleep_durn:0000000000000000 bno055_set_gyro_sleep_durn
     /tmp/ccWoU29M.s:28125  .text.bno055_set_gyro_sleep_durn:00000000000000c0 $d
     /tmp/ccWoU29M.s:28130  .text.bno055_get_gyro_auto_sleep_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:28137  .text.bno055_get_gyro_auto_sleep_durn:0000000000000000 bno055_get_gyro_auto_sleep_durn
     /tmp/ccWoU29M.s:28243  .text.bno055_get_gyro_auto_sleep_durn:000000000000005c $d
     /tmp/ccWoU29M.s:28248  .text.bno055_gyro_set_auto_sleep_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:28255  .text.bno055_gyro_set_auto_sleep_durn:0000000000000000 bno055_gyro_set_auto_sleep_durn
     /tmp/ccWoU29M.s:28371  .text.bno055_gyro_set_auto_sleep_durn:000000000000006e $d
     /tmp/ccWoU29M.s:28379  .text.bno055_gyro_set_auto_sleep_durn:0000000000000076 $t
     /tmp/ccWoU29M.s:28550  .text.bno055_gyro_set_auto_sleep_durn:0000000000000120 $d
     /tmp/ccWoU29M.s:28555  .text.bno055_set_gyro_bw:0000000000000000 $t
     /tmp/ccWoU29M.s:28562  .text.bno055_set_gyro_bw:0000000000000000 bno055_set_gyro_bw
     /tmp/ccWoU29M.s:28808  .text.bno055_set_gyro_bw:00000000000000f8 $d
     /tmp/ccWoU29M.s:28813  .text.bno055_set_gyro_power_mode:0000000000000000 $t
     /tmp/ccWoU29M.s:28820  .text.bno055_set_gyro_power_mode:0000000000000000 bno055_set_gyro_power_mode
     /tmp/ccWoU29M.s:28923  .text.bno055_set_gyro_power_mode:000000000000005e $d
     /tmp/ccWoU29M.s:29073  .text.bno055_set_gyro_power_mode:0000000000000100 $d
     /tmp/ccWoU29M.s:29078  .text.bno055_get_mag_sleep_mode:0000000000000000 $t
     /tmp/ccWoU29M.s:29085  .text.bno055_get_mag_sleep_mode:0000000000000000 bno055_get_mag_sleep_mode
     /tmp/ccWoU29M.s:29191  .text.bno055_get_mag_sleep_mode:000000000000005c $d
     /tmp/ccWoU29M.s:29196  .text.bno055_set_mag_sleep_mode:0000000000000000 $t
     /tmp/ccWoU29M.s:29203  .text.bno055_set_mag_sleep_mode:0000000000000000 bno055_set_mag_sleep_mode
     /tmp/ccWoU29M.s:29387  .text.bno055_set_mag_sleep_mode:00000000000000b4 $d
     /tmp/ccWoU29M.s:29392  .text.bno055_get_mag_sleep_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:29399  .text.bno055_get_mag_sleep_durn:0000000000000000 bno055_get_mag_sleep_durn
     /tmp/ccWoU29M.s:29505  .text.bno055_get_mag_sleep_durn:000000000000005c $d
     /tmp/ccWoU29M.s:29510  .text.bno055_set_mag_sleep_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:29517  .text.bno055_set_mag_sleep_durn:0000000000000000 bno055_set_mag_sleep_durn
     /tmp/ccWoU29M.s:29703  .text.bno055_set_mag_sleep_durn:00000000000000b8 $d
     /tmp/ccWoU29M.s:29708  .text.bno055_get_intr_mask_gyro_any_motion:0000000000000000 $t
     /tmp/ccWoU29M.s:29715  .text.bno055_get_intr_mask_gyro_any_motion:0000000000000000 bno055_get_intr_mask_gyro_any_motion
     /tmp/ccWoU29M.s:29821  .text.bno055_get_intr_mask_gyro_any_motion:000000000000005c $d
     /tmp/ccWoU29M.s:29826  .text.bno055_set_intr_mask_gyro_any_motion:0000000000000000 $t
     /tmp/ccWoU29M.s:29833  .text.bno055_set_intr_mask_gyro_any_motion:0000000000000000 bno055_set_intr_mask_gyro_any_motion
     /tmp/ccWoU29M.s:29964  .text.bno055_set_intr_mask_gyro_any_motion:0000000000000088 $d
     /tmp/ccWoU29M.s:29969  .text.bno055_get_intr_mask_gyro_highrate:0000000000000000 $t
     /tmp/ccWoU29M.s:29976  .text.bno055_get_intr_mask_gyro_highrate:0000000000000000 bno055_get_intr_mask_gyro_highrate
     /tmp/ccWoU29M.s:30082  .text.bno055_get_intr_mask_gyro_highrate:000000000000005c $d
     /tmp/ccWoU29M.s:30087  .text.bno055_set_intr_mask_gyro_highrate:0000000000000000 $t
     /tmp/ccWoU29M.s:30094  .text.bno055_set_intr_mask_gyro_highrate:0000000000000000 bno055_set_intr_mask_gyro_highrate
     /tmp/ccWoU29M.s:30225  .text.bno055_set_intr_mask_gyro_highrate:0000000000000088 $d
     /tmp/ccWoU29M.s:30230  .text.bno055_get_intr_mask_accel_high_g:0000000000000000 $t
     /tmp/ccWoU29M.s:30237  .text.bno055_get_intr_mask_accel_high_g:0000000000000000 bno055_get_intr_mask_accel_high_g
     /tmp/ccWoU29M.s:30343  .text.bno055_get_intr_mask_accel_high_g:000000000000005c $d
     /tmp/ccWoU29M.s:30348  .text.bno055_set_intr_mask_accel_high_g:0000000000000000 $t
ARM GAS  /tmp/ccWoU29M.s 			page 1152


     /tmp/ccWoU29M.s:30355  .text.bno055_set_intr_mask_accel_high_g:0000000000000000 bno055_set_intr_mask_accel_high_g
     /tmp/ccWoU29M.s:30486  .text.bno055_set_intr_mask_accel_high_g:0000000000000088 $d
     /tmp/ccWoU29M.s:30491  .text.bno055_get_intr_mask_accel_any_motion:0000000000000000 $t
     /tmp/ccWoU29M.s:30498  .text.bno055_get_intr_mask_accel_any_motion:0000000000000000 bno055_get_intr_mask_accel_any_motion
     /tmp/ccWoU29M.s:30604  .text.bno055_get_intr_mask_accel_any_motion:000000000000005c $d
     /tmp/ccWoU29M.s:30609  .text.bno055_set_intr_mask_accel_any_motion:0000000000000000 $t
     /tmp/ccWoU29M.s:30616  .text.bno055_set_intr_mask_accel_any_motion:0000000000000000 bno055_set_intr_mask_accel_any_motion
     /tmp/ccWoU29M.s:30747  .text.bno055_set_intr_mask_accel_any_motion:0000000000000088 $d
     /tmp/ccWoU29M.s:30752  .text.bno055_get_intr_mask_accel_no_motion:0000000000000000 $t
     /tmp/ccWoU29M.s:30759  .text.bno055_get_intr_mask_accel_no_motion:0000000000000000 bno055_get_intr_mask_accel_no_motion
     /tmp/ccWoU29M.s:30865  .text.bno055_get_intr_mask_accel_no_motion:0000000000000058 $d
     /tmp/ccWoU29M.s:30870  .text.bno055_set_intr_mask_accel_no_motion:0000000000000000 $t
     /tmp/ccWoU29M.s:30877  .text.bno055_set_intr_mask_accel_no_motion:0000000000000000 bno055_set_intr_mask_accel_no_motion
     /tmp/ccWoU29M.s:31005  .text.bno055_set_intr_mask_accel_no_motion:0000000000000080 $d
     /tmp/ccWoU29M.s:31010  .text.bno055_get_intr_gyro_any_motion:0000000000000000 $t
     /tmp/ccWoU29M.s:31017  .text.bno055_get_intr_gyro_any_motion:0000000000000000 bno055_get_intr_gyro_any_motion
     /tmp/ccWoU29M.s:31123  .text.bno055_get_intr_gyro_any_motion:000000000000005c $d
     /tmp/ccWoU29M.s:31128  .text.bno055_set_intr_gyro_any_motion:0000000000000000 $t
     /tmp/ccWoU29M.s:31135  .text.bno055_set_intr_gyro_any_motion:0000000000000000 bno055_set_intr_gyro_any_motion
     /tmp/ccWoU29M.s:31266  .text.bno055_set_intr_gyro_any_motion:0000000000000088 $d
     /tmp/ccWoU29M.s:31271  .text.bno055_get_intr_gyro_highrate:0000000000000000 $t
     /tmp/ccWoU29M.s:31278  .text.bno055_get_intr_gyro_highrate:0000000000000000 bno055_get_intr_gyro_highrate
     /tmp/ccWoU29M.s:31384  .text.bno055_get_intr_gyro_highrate:000000000000005c $d
     /tmp/ccWoU29M.s:31389  .text.bno055_set_intr_gyro_highrate:0000000000000000 $t
     /tmp/ccWoU29M.s:31396  .text.bno055_set_intr_gyro_highrate:0000000000000000 bno055_set_intr_gyro_highrate
     /tmp/ccWoU29M.s:31527  .text.bno055_set_intr_gyro_highrate:0000000000000088 $d
     /tmp/ccWoU29M.s:31532  .text.bno055_get_intr_accel_high_g:0000000000000000 $t
     /tmp/ccWoU29M.s:31539  .text.bno055_get_intr_accel_high_g:0000000000000000 bno055_get_intr_accel_high_g
     /tmp/ccWoU29M.s:31645  .text.bno055_get_intr_accel_high_g:000000000000005c $d
     /tmp/ccWoU29M.s:31650  .text.bno055_set_intr_accel_high_g:0000000000000000 $t
     /tmp/ccWoU29M.s:31657  .text.bno055_set_intr_accel_high_g:0000000000000000 bno055_set_intr_accel_high_g
     /tmp/ccWoU29M.s:31788  .text.bno055_set_intr_accel_high_g:0000000000000088 $d
     /tmp/ccWoU29M.s:31793  .text.bno055_get_intr_accel_any_motion:0000000000000000 $t
     /tmp/ccWoU29M.s:31800  .text.bno055_get_intr_accel_any_motion:0000000000000000 bno055_get_intr_accel_any_motion
     /tmp/ccWoU29M.s:31906  .text.bno055_get_intr_accel_any_motion:000000000000005c $d
     /tmp/ccWoU29M.s:31911  .text.bno055_set_intr_accel_any_motion:0000000000000000 $t
     /tmp/ccWoU29M.s:31918  .text.bno055_set_intr_accel_any_motion:0000000000000000 bno055_set_intr_accel_any_motion
     /tmp/ccWoU29M.s:32049  .text.bno055_set_intr_accel_any_motion:0000000000000088 $d
     /tmp/ccWoU29M.s:32054  .text.bno055_get_intr_accel_no_motion:0000000000000000 $t
     /tmp/ccWoU29M.s:32061  .text.bno055_get_intr_accel_no_motion:0000000000000000 bno055_get_intr_accel_no_motion
     /tmp/ccWoU29M.s:32167  .text.bno055_get_intr_accel_no_motion:0000000000000058 $d
     /tmp/ccWoU29M.s:32172  .text.bno055_set_intr_accel_no_motion:0000000000000000 $t
     /tmp/ccWoU29M.s:32179  .text.bno055_set_intr_accel_no_motion:0000000000000000 bno055_set_intr_accel_no_motion
     /tmp/ccWoU29M.s:32307  .text.bno055_set_intr_accel_no_motion:0000000000000080 $d
     /tmp/ccWoU29M.s:32312  .text.bno055_get_accel_any_motion_thres:0000000000000000 $t
     /tmp/ccWoU29M.s:32319  .text.bno055_get_accel_any_motion_thres:0000000000000000 bno055_get_accel_any_motion_thres
     /tmp/ccWoU29M.s:32424  .text.bno055_get_accel_any_motion_thres:0000000000000058 $d
     /tmp/ccWoU29M.s:32429  .text.bno055_set_accel_any_motion_thres:0000000000000000 $t
     /tmp/ccWoU29M.s:32436  .text.bno055_set_accel_any_motion_thres:0000000000000000 bno055_set_accel_any_motion_thres
     /tmp/ccWoU29M.s:32614  .text.bno055_set_accel_any_motion_thres:00000000000000a4 $d
     /tmp/ccWoU29M.s:32619  .text.bno055_get_accel_any_motion_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:32626  .text.bno055_get_accel_any_motion_durn:0000000000000000 bno055_get_accel_any_motion_durn
     /tmp/ccWoU29M.s:32732  .text.bno055_get_accel_any_motion_durn:000000000000005c $d
     /tmp/ccWoU29M.s:32737  .text.bno055_set_accel_any_motion_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:32744  .text.bno055_set_accel_any_motion_durn:0000000000000000 bno055_set_accel_any_motion_durn
     /tmp/ccWoU29M.s:32928  .text.bno055_set_accel_any_motion_durn:00000000000000b4 $d
     /tmp/ccWoU29M.s:32933  .text.bno055_get_accel_any_motion_no_motion_axis_enable:0000000000000000 $t
ARM GAS  /tmp/ccWoU29M.s 			page 1153


     /tmp/ccWoU29M.s:32940  .text.bno055_get_accel_any_motion_no_motion_axis_enable:0000000000000000 bno055_get_accel_any_motion_no_motion_axis_enable
     /tmp/ccWoU29M.s:33103  .text.bno055_get_accel_any_motion_no_motion_axis_enable:00000000000000ac $d
     /tmp/ccWoU29M.s:33108  .text.bno055_set_accel_any_motion_no_motion_axis_enable:0000000000000000 $t
     /tmp/ccWoU29M.s:33115  .text.bno055_set_accel_any_motion_no_motion_axis_enable:0000000000000000 bno055_set_accel_any_motion_no_motion_axis_enable
     /tmp/ccWoU29M.s:33410  .text.bno055_set_accel_any_motion_no_motion_axis_enable:0000000000000160 $d
     /tmp/ccWoU29M.s:33415  .text.bno055_get_accel_high_g_axis_enable:0000000000000000 $t
     /tmp/ccWoU29M.s:33422  .text.bno055_get_accel_high_g_axis_enable:0000000000000000 bno055_get_accel_high_g_axis_enable
     /tmp/ccWoU29M.s:33585  .text.bno055_get_accel_high_g_axis_enable:00000000000000a8 $d
     /tmp/ccWoU29M.s:33590  .text.bno055_set_accel_high_g_axis_enable:0000000000000000 $t
     /tmp/ccWoU29M.s:33597  .text.bno055_set_accel_high_g_axis_enable:0000000000000000 bno055_set_accel_high_g_axis_enable
     /tmp/ccWoU29M.s:33889  .text.bno055_set_accel_high_g_axis_enable:0000000000000158 $d
     /tmp/ccWoU29M.s:33894  .text.bno055_get_accel_high_g_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:33901  .text.bno055_get_accel_high_g_durn:0000000000000000 bno055_get_accel_high_g_durn
     /tmp/ccWoU29M.s:34006  .text.bno055_get_accel_high_g_durn:0000000000000058 $d
     /tmp/ccWoU29M.s:34011  .text.bno055_set_accel_high_g_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:34018  .text.bno055_set_accel_high_g_durn:0000000000000000 bno055_set_accel_high_g_durn
     /tmp/ccWoU29M.s:34197  .text.bno055_set_accel_high_g_durn:00000000000000a4 $d
     /tmp/ccWoU29M.s:34202  .text.bno055_get_accel_high_g_thres:0000000000000000 $t
     /tmp/ccWoU29M.s:34209  .text.bno055_get_accel_high_g_thres:0000000000000000 bno055_get_accel_high_g_thres
     /tmp/ccWoU29M.s:34314  .text.bno055_get_accel_high_g_thres:0000000000000058 $d
     /tmp/ccWoU29M.s:34319  .text.bno055_set_accel_high_g_thres:0000000000000000 $t
     /tmp/ccWoU29M.s:34326  .text.bno055_set_accel_high_g_thres:0000000000000000 bno055_set_accel_high_g_thres
     /tmp/ccWoU29M.s:34505  .text.bno055_set_accel_high_g_thres:00000000000000a4 $d
     /tmp/ccWoU29M.s:34510  .text.bno055_get_accel_slow_no_motion_thres:0000000000000000 $t
     /tmp/ccWoU29M.s:34517  .text.bno055_get_accel_slow_no_motion_thres:0000000000000000 bno055_get_accel_slow_no_motion_thres
     /tmp/ccWoU29M.s:34622  .text.bno055_get_accel_slow_no_motion_thres:0000000000000058 $d
     /tmp/ccWoU29M.s:34627  .text.bno055_set_accel_slow_no_motion_thres:0000000000000000 $t
     /tmp/ccWoU29M.s:34634  .text.bno055_set_accel_slow_no_motion_thres:0000000000000000 bno055_set_accel_slow_no_motion_thres
     /tmp/ccWoU29M.s:34813  .text.bno055_set_accel_slow_no_motion_thres:00000000000000a4 $d
     /tmp/ccWoU29M.s:34818  .text.bno055_get_accel_slow_no_motion_enable:0000000000000000 $t
     /tmp/ccWoU29M.s:34825  .text.bno055_get_accel_slow_no_motion_enable:0000000000000000 bno055_get_accel_slow_no_motion_enable
     /tmp/ccWoU29M.s:34931  .text.bno055_get_accel_slow_no_motion_enable:000000000000005c $d
     /tmp/ccWoU29M.s:34936  .text.bno055_set_accel_slow_no_motion_enable:0000000000000000 $t
     /tmp/ccWoU29M.s:34943  .text.bno055_set_accel_slow_no_motion_enable:0000000000000000 bno055_set_accel_slow_no_motion_enable
     /tmp/ccWoU29M.s:35128  .text.bno055_set_accel_slow_no_motion_enable:00000000000000b4 $d
     /tmp/ccWoU29M.s:35133  .text.bno055_get_accel_slow_no_motion_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:35140  .text.bno055_get_accel_slow_no_motion_durn:0000000000000000 bno055_get_accel_slow_no_motion_durn
     /tmp/ccWoU29M.s:35246  .text.bno055_get_accel_slow_no_motion_durn:000000000000005c $d
     /tmp/ccWoU29M.s:35251  .text.bno055_set_accel_slow_no_motion_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:35258  .text.bno055_set_accel_slow_no_motion_durn:0000000000000000 bno055_set_accel_slow_no_motion_durn
     /tmp/ccWoU29M.s:35445  .text.bno055_set_accel_slow_no_motion_durn:00000000000000b8 $d
     /tmp/ccWoU29M.s:35450  .text.bno055_get_gyro_any_motion_axis_enable:0000000000000000 $t
     /tmp/ccWoU29M.s:35457  .text.bno055_get_gyro_any_motion_axis_enable:0000000000000000 bno055_get_gyro_any_motion_axis_enable
     /tmp/ccWoU29M.s:35620  .text.bno055_get_gyro_any_motion_axis_enable:00000000000000ac $d
     /tmp/ccWoU29M.s:35625  .text.bno055_set_gyro_any_motion_axis_enable:0000000000000000 $t
     /tmp/ccWoU29M.s:35632  .text.bno055_set_gyro_any_motion_axis_enable:0000000000000000 bno055_set_gyro_any_motion_axis_enable
     /tmp/ccWoU29M.s:35927  .text.bno055_set_gyro_any_motion_axis_enable:000000000000015c $d
     /tmp/ccWoU29M.s:35932  .text.bno055_get_gyro_highrate_axis_enable:0000000000000000 $t
     /tmp/ccWoU29M.s:35939  .text.bno055_get_gyro_highrate_axis_enable:0000000000000000 bno055_get_gyro_highrate_axis_enable
     /tmp/ccWoU29M.s:36102  .text.bno055_get_gyro_highrate_axis_enable:00000000000000ac $d
     /tmp/ccWoU29M.s:36107  .text.bno055_set_gyro_highrate_axis_enable:0000000000000000 $t
     /tmp/ccWoU29M.s:36114  .text.bno055_set_gyro_highrate_axis_enable:0000000000000000 bno055_set_gyro_highrate_axis_enable
     /tmp/ccWoU29M.s:36410  .text.bno055_set_gyro_highrate_axis_enable:0000000000000160 $d
     /tmp/ccWoU29M.s:36415  .text.bno055_get_gyro_any_motion_filter:0000000000000000 $t
     /tmp/ccWoU29M.s:36422  .text.bno055_get_gyro_any_motion_filter:0000000000000000 bno055_get_gyro_any_motion_filter
     /tmp/ccWoU29M.s:36528  .text.bno055_get_gyro_any_motion_filter:000000000000005c $d
     /tmp/ccWoU29M.s:36533  .text.bno055_set_gyro_any_motion_filter:0000000000000000 $t
ARM GAS  /tmp/ccWoU29M.s 			page 1154


     /tmp/ccWoU29M.s:36540  .text.bno055_set_gyro_any_motion_filter:0000000000000000 bno055_set_gyro_any_motion_filter
     /tmp/ccWoU29M.s:36727  .text.bno055_set_gyro_any_motion_filter:00000000000000b8 $d
     /tmp/ccWoU29M.s:36732  .text.bno055_get_gyro_highrate_filter:0000000000000000 $t
     /tmp/ccWoU29M.s:36739  .text.bno055_get_gyro_highrate_filter:0000000000000000 bno055_get_gyro_highrate_filter
     /tmp/ccWoU29M.s:36845  .text.bno055_get_gyro_highrate_filter:0000000000000058 $d
     /tmp/ccWoU29M.s:36850  .text.bno055_set_gyro_highrate_filter:0000000000000000 $t
     /tmp/ccWoU29M.s:36857  .text.bno055_set_gyro_highrate_filter:0000000000000000 bno055_set_gyro_highrate_filter
     /tmp/ccWoU29M.s:37039  .text.bno055_set_gyro_highrate_filter:00000000000000b0 $d
     /tmp/ccWoU29M.s:37044  .text.bno055_get_gyro_highrate_x_thres:0000000000000000 $t
     /tmp/ccWoU29M.s:37051  .text.bno055_get_gyro_highrate_x_thres:0000000000000000 bno055_get_gyro_highrate_x_thres
     /tmp/ccWoU29M.s:37157  .text.bno055_get_gyro_highrate_x_thres:000000000000005c $d
     /tmp/ccWoU29M.s:37162  .text.bno055_set_gyro_highrate_x_thres:0000000000000000 $t
     /tmp/ccWoU29M.s:37169  .text.bno055_set_gyro_highrate_x_thres:0000000000000000 bno055_set_gyro_highrate_x_thres
     /tmp/ccWoU29M.s:37354  .text.bno055_set_gyro_highrate_x_thres:00000000000000b4 $d
     /tmp/ccWoU29M.s:37359  .text.bno055_get_gyro_highrate_x_hyst:0000000000000000 $t
     /tmp/ccWoU29M.s:37366  .text.bno055_get_gyro_highrate_x_hyst:0000000000000000 bno055_get_gyro_highrate_x_hyst
     /tmp/ccWoU29M.s:37472  .text.bno055_get_gyro_highrate_x_hyst:000000000000005c $d
     /tmp/ccWoU29M.s:37477  .text.bno055_set_gyro_highrate_x_hyst:0000000000000000 $t
     /tmp/ccWoU29M.s:37484  .text.bno055_set_gyro_highrate_x_hyst:0000000000000000 bno055_set_gyro_highrate_x_hyst
     /tmp/ccWoU29M.s:37671  .text.bno055_set_gyro_highrate_x_hyst:00000000000000b8 $d
     /tmp/ccWoU29M.s:37676  .text.bno055_get_gyro_highrate_x_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:37683  .text.bno055_get_gyro_highrate_x_durn:0000000000000000 bno055_get_gyro_highrate_x_durn
     /tmp/ccWoU29M.s:37788  .text.bno055_get_gyro_highrate_x_durn:0000000000000058 $d
     /tmp/ccWoU29M.s:37793  .text.bno055_set_gyro_highrate_x_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:37800  .text.bno055_set_gyro_highrate_x_durn:0000000000000000 bno055_set_gyro_highrate_x_durn
     /tmp/ccWoU29M.s:37979  .text.bno055_set_gyro_highrate_x_durn:00000000000000a4 $d
     /tmp/ccWoU29M.s:37984  .text.bno055_get_gyro_highrate_y_thres:0000000000000000 $t
     /tmp/ccWoU29M.s:37991  .text.bno055_get_gyro_highrate_y_thres:0000000000000000 bno055_get_gyro_highrate_y_thres
     /tmp/ccWoU29M.s:38097  .text.bno055_get_gyro_highrate_y_thres:000000000000005c $d
     /tmp/ccWoU29M.s:38102  .text.bno055_set_gyro_highrate_y_thres:0000000000000000 $t
     /tmp/ccWoU29M.s:38109  .text.bno055_set_gyro_highrate_y_thres:0000000000000000 bno055_set_gyro_highrate_y_thres
     /tmp/ccWoU29M.s:38294  .text.bno055_set_gyro_highrate_y_thres:00000000000000b4 $d
     /tmp/ccWoU29M.s:38299  .text.bno055_get_gyro_highrate_y_hyst:0000000000000000 $t
     /tmp/ccWoU29M.s:38306  .text.bno055_get_gyro_highrate_y_hyst:0000000000000000 bno055_get_gyro_highrate_y_hyst
     /tmp/ccWoU29M.s:38412  .text.bno055_get_gyro_highrate_y_hyst:000000000000005c $d
     /tmp/ccWoU29M.s:38417  .text.bno055_set_gyro_highrate_y_hyst:0000000000000000 $t
     /tmp/ccWoU29M.s:38424  .text.bno055_set_gyro_highrate_y_hyst:0000000000000000 bno055_set_gyro_highrate_y_hyst
     /tmp/ccWoU29M.s:38611  .text.bno055_set_gyro_highrate_y_hyst:00000000000000b8 $d
     /tmp/ccWoU29M.s:38616  .text.bno055_get_gyro_highrate_y_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:38623  .text.bno055_get_gyro_highrate_y_durn:0000000000000000 bno055_get_gyro_highrate_y_durn
     /tmp/ccWoU29M.s:38728  .text.bno055_get_gyro_highrate_y_durn:0000000000000058 $d
     /tmp/ccWoU29M.s:38733  .text.bno055_set_gyro_highrate_y_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:38740  .text.bno055_set_gyro_highrate_y_durn:0000000000000000 bno055_set_gyro_highrate_y_durn
     /tmp/ccWoU29M.s:38919  .text.bno055_set_gyro_highrate_y_durn:00000000000000a4 $d
     /tmp/ccWoU29M.s:38924  .text.bno055_get_gyro_highrate_z_thres:0000000000000000 $t
     /tmp/ccWoU29M.s:38931  .text.bno055_get_gyro_highrate_z_thres:0000000000000000 bno055_get_gyro_highrate_z_thres
     /tmp/ccWoU29M.s:39037  .text.bno055_get_gyro_highrate_z_thres:000000000000005c $d
     /tmp/ccWoU29M.s:39042  .text.bno055_set_gyro_highrate_z_thres:0000000000000000 $t
     /tmp/ccWoU29M.s:39049  .text.bno055_set_gyro_highrate_z_thres:0000000000000000 bno055_set_gyro_highrate_z_thres
     /tmp/ccWoU29M.s:39234  .text.bno055_set_gyro_highrate_z_thres:00000000000000b4 $d
     /tmp/ccWoU29M.s:39239  .text.bno055_get_gyro_highrate_z_hyst:0000000000000000 $t
     /tmp/ccWoU29M.s:39246  .text.bno055_get_gyro_highrate_z_hyst:0000000000000000 bno055_get_gyro_highrate_z_hyst
     /tmp/ccWoU29M.s:39352  .text.bno055_get_gyro_highrate_z_hyst:000000000000005c $d
     /tmp/ccWoU29M.s:39357  .text.bno055_set_gyro_highrate_z_hyst:0000000000000000 $t
     /tmp/ccWoU29M.s:39364  .text.bno055_set_gyro_highrate_z_hyst:0000000000000000 bno055_set_gyro_highrate_z_hyst
     /tmp/ccWoU29M.s:39551  .text.bno055_set_gyro_highrate_z_hyst:00000000000000b8 $d
     /tmp/ccWoU29M.s:39556  .text.bno055_get_gyro_highrate_z_durn:0000000000000000 $t
ARM GAS  /tmp/ccWoU29M.s 			page 1155


     /tmp/ccWoU29M.s:39563  .text.bno055_get_gyro_highrate_z_durn:0000000000000000 bno055_get_gyro_highrate_z_durn
     /tmp/ccWoU29M.s:39668  .text.bno055_get_gyro_highrate_z_durn:0000000000000058 $d
     /tmp/ccWoU29M.s:39673  .text.bno055_set_gyro_highrate_z_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:39680  .text.bno055_set_gyro_highrate_z_durn:0000000000000000 bno055_set_gyro_highrate_z_durn
     /tmp/ccWoU29M.s:39858  .text.bno055_set_gyro_highrate_z_durn:00000000000000a4 $d
     /tmp/ccWoU29M.s:39863  .text.bno055_get_gyro_any_motion_thres:0000000000000000 $t
     /tmp/ccWoU29M.s:39870  .text.bno055_get_gyro_any_motion_thres:0000000000000000 bno055_get_gyro_any_motion_thres
     /tmp/ccWoU29M.s:39976  .text.bno055_get_gyro_any_motion_thres:000000000000005c $d
     /tmp/ccWoU29M.s:39981  .text.bno055_set_gyro_any_motion_thres:0000000000000000 $t
     /tmp/ccWoU29M.s:39988  .text.bno055_set_gyro_any_motion_thres:0000000000000000 bno055_set_gyro_any_motion_thres
     /tmp/ccWoU29M.s:40173  .text.bno055_set_gyro_any_motion_thres:00000000000000b4 $d
     /tmp/ccWoU29M.s:40178  .text.bno055_get_gyro_any_motion_slope_samples:0000000000000000 $t
     /tmp/ccWoU29M.s:40185  .text.bno055_get_gyro_any_motion_slope_samples:0000000000000000 bno055_get_gyro_any_motion_slope_samples
     /tmp/ccWoU29M.s:40291  .text.bno055_get_gyro_any_motion_slope_samples:000000000000005c $d
     /tmp/ccWoU29M.s:40296  .text.bno055_set_gyro_any_motion_slope_samples:0000000000000000 $t
     /tmp/ccWoU29M.s:40303  .text.bno055_set_gyro_any_motion_slope_samples:0000000000000000 bno055_set_gyro_any_motion_slope_samples
     /tmp/ccWoU29M.s:40487  .text.bno055_set_gyro_any_motion_slope_samples:00000000000000b4 $d
     /tmp/ccWoU29M.s:40492  .text.bno055_get_gyro_any_motion_awake_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:40499  .text.bno055_get_gyro_any_motion_awake_durn:0000000000000000 bno055_get_gyro_any_motion_awake_durn
     /tmp/ccWoU29M.s:40605  .text.bno055_get_gyro_any_motion_awake_durn:000000000000005c $d
     /tmp/ccWoU29M.s:40610  .text.bno055_set_gyro_any_motion_awake_durn:0000000000000000 $t
     /tmp/ccWoU29M.s:40617  .text.bno055_set_gyro_any_motion_awake_durn:0000000000000000 bno055_set_gyro_any_motion_awake_durn
     /tmp/ccWoU29M.s:40803  .text.bno055_set_gyro_any_motion_awake_durn:00000000000000b8 $d
     /tmp/ccWoU29M.s:40808  .rodata:0000000000000000 $d
     /tmp/ccWoU29M.s:40819  .bss.p_bno055:0000000000000000 $d
     /tmp/ccWoU29M.s:40823  .bss.p_bno055:0000000000000000 p_bno055
     /tmp/ccWoU29M.s:20215  .text.bno055_set_axis_remap_value:0000000000000059 $d
     /tmp/ccWoU29M.s:20215  .text.bno055_set_axis_remap_value:000000000000005a $t
     /tmp/ccWoU29M.s:28924  .text.bno055_set_gyro_power_mode:000000000000005f $d
     /tmp/ccWoU29M.s:28924  .text.bno055_set_gyro_power_mode:0000000000000060 $t

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_dmul
__aeabi_d2f
__aeabi_ddiv
__aeabi_dadd
