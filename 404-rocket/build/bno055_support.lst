ARM GAS  /tmp/ccE3KnbY.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"bno055_support.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.BNO055_I2C_bus_write,"ax",%progbits
  20              		.align	1
  21              		.global	BNO055_I2C_bus_write
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	BNO055_I2C_bus_write:
  27              	.LVL0:
  28              	.LFB125:
  29              		.file 1 "Core/Src/bno055_support.c"
   1:Core/Src/bno055_support.c **** /**
   2:Core/Src/bno055_support.c **** * Copyright (c) 2020 Bosch Sensortec GmbH. All rights reserved.
   3:Core/Src/bno055_support.c **** *
   4:Core/Src/bno055_support.c **** * BSD-3-Clause
   5:Core/Src/bno055_support.c **** *
   6:Core/Src/bno055_support.c **** * Redistribution and use in source and binary forms, with or without
   7:Core/Src/bno055_support.c **** * modification, are permitted provided that the following conditions are met:
   8:Core/Src/bno055_support.c **** *
   9:Core/Src/bno055_support.c **** * 1. Redistributions of source code must retain the above copyright
  10:Core/Src/bno055_support.c **** *    notice, this list of conditions and the following disclaimer.
  11:Core/Src/bno055_support.c **** *
  12:Core/Src/bno055_support.c **** * 2. Redistributions in binary form must reproduce the above copyright
  13:Core/Src/bno055_support.c **** *    notice, this list of conditions and the following disclaimer in the
  14:Core/Src/bno055_support.c **** *    documentation and/or other materials provided with the distribution.
  15:Core/Src/bno055_support.c **** *
  16:Core/Src/bno055_support.c **** * 3. Neither the name of the copyright holder nor the names of its
  17:Core/Src/bno055_support.c **** *    contributors may be used to endorse or promote products derived from
  18:Core/Src/bno055_support.c **** *    this software without specific prior written permission.
  19:Core/Src/bno055_support.c **** *
  20:Core/Src/bno055_support.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  21:Core/Src/bno055_support.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  22:Core/Src/bno055_support.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  23:Core/Src/bno055_support.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  24:Core/Src/bno055_support.c **** * COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  25:Core/Src/bno055_support.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  26:Core/Src/bno055_support.c **** * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Core/Src/bno055_support.c **** * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  28:Core/Src/bno055_support.c **** * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  29:Core/Src/bno055_support.c **** * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
ARM GAS  /tmp/ccE3KnbY.s 			page 2


  30:Core/Src/bno055_support.c **** * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Core/Src/bno055_support.c **** * POSSIBILITY OF SUCH DAMAGE.
  32:Core/Src/bno055_support.c **** *
  33:Core/Src/bno055_support.c **** * @file bno055_support.c
  34:Core/Src/bno055_support.c **** * @date 10/01/2020
  35:Core/Src/bno055_support.c **** * @version  2.0.6
  36:Core/Src/bno055_support.c **** *
  37:Core/Src/bno055_support.c **** */
  38:Core/Src/bno055_support.c **** 
  39:Core/Src/bno055_support.c **** /*---------------------------------------------------------------------------*
  40:Core/Src/bno055_support.c **** *  Includes
  41:Core/Src/bno055_support.c **** *---------------------------------------------------------------------------*/
  42:Core/Src/bno055_support.c **** #include "bno055_support.h"
  43:Core/Src/bno055_support.c **** 
  44:Core/Src/bno055_support.c **** /*----------------------------------------------------------------------------*
  45:Core/Src/bno055_support.c **** *  The following APIs are used for reading and writing of
  46:Core/Src/bno055_support.c **** *   sensor data using I2C communication
  47:Core/Src/bno055_support.c **** *----------------------------------------------------------------------------*/
  48:Core/Src/bno055_support.c **** #ifdef  BNO055_API
  49:Core/Src/bno055_support.c **** #define BNO055_I2C_BUS_WRITE_ARRAY_INDEX ((u8)1)
  50:Core/Src/bno055_support.c **** 
  51:Core/Src/bno055_support.c **** /*  \Brief: The API is used as I2C bus read
  52:Core/Src/bno055_support.c ****  *  \Return : Status of the I2C read
  53:Core/Src/bno055_support.c ****  *  \param dev_addr : The device address of the sensor
  54:Core/Src/bno055_support.c ****  *  \param reg_addr : Address of the first register,
  55:Core/Src/bno055_support.c ****  *   will data is going to be read
  56:Core/Src/bno055_support.c ****  *  \param reg_data : This data read from the sensor,
  57:Core/Src/bno055_support.c ****  *   which is hold in an array
  58:Core/Src/bno055_support.c ****  *  \param cnt : The no of byte of data to be read
  59:Core/Src/bno055_support.c ****  */
  60:Core/Src/bno055_support.c **** s8 BNO055_I2C_bus_read(u8 dev_addr, u8 reg_addr, u8 *reg_data, u8 cnt);
  61:Core/Src/bno055_support.c **** 
  62:Core/Src/bno055_support.c **** /*  \Brief: The API is used as SPI bus write
  63:Core/Src/bno055_support.c ****  *  \Return : Status of the SPI write
  64:Core/Src/bno055_support.c ****  *  \param dev_addr : The device address of the sensor
  65:Core/Src/bno055_support.c ****  *  \param reg_addr : Address of the first register,
  66:Core/Src/bno055_support.c ****  *   will data is going to be written
  67:Core/Src/bno055_support.c ****  *  \param reg_data : It is a value hold in the array,
  68:Core/Src/bno055_support.c ****  *  will be used for write the value into the register
  69:Core/Src/bno055_support.c ****  *  \param cnt : The no of byte of data to be write
  70:Core/Src/bno055_support.c ****  */
  71:Core/Src/bno055_support.c **** s8 BNO055_I2C_bus_write(u8 dev_addr, u8 reg_addr, u8 *reg_data, u8 cnt);
  72:Core/Src/bno055_support.c **** 
  73:Core/Src/bno055_support.c **** /*
  74:Core/Src/bno055_support.c ****  * \Brief: I2C init routine
  75:Core/Src/bno055_support.c ****  */
  76:Core/Src/bno055_support.c **** s8 I2C_routine(void);
  77:Core/Src/bno055_support.c **** 
  78:Core/Src/bno055_support.c **** /*  Brief : The delay routine
  79:Core/Src/bno055_support.c ****  *  \param : delay in ms
  80:Core/Src/bno055_support.c ****  */
  81:Core/Src/bno055_support.c **** void BNO055_delay_msek(u32 msek);
  82:Core/Src/bno055_support.c **** 
  83:Core/Src/bno055_support.c **** #endif
  84:Core/Src/bno055_support.c **** 
  85:Core/Src/bno055_support.c **** /********************End of I2C APIs declarations***********************/
  86:Core/Src/bno055_support.c **** 
ARM GAS  /tmp/ccE3KnbY.s 			page 3


  87:Core/Src/bno055_support.c **** /* This API is an example for reading sensor data
  88:Core/Src/bno055_support.c ****  *  \param: None
  89:Core/Src/bno055_support.c ****  *  \return: communication result
  90:Core/Src/bno055_support.c ****  */
  91:Core/Src/bno055_support.c **** s32 bno055_data_readout_template(void);
  92:Core/Src/bno055_support.c **** 
  93:Core/Src/bno055_support.c **** /*----------------------------------------------------------------------------*
  94:Core/Src/bno055_support.c ****  *  struct bno055_t parameters can be accessed by using BNO055
  95:Core/Src/bno055_support.c ****  *  BNO055_t having the following parameters
  96:Core/Src/bno055_support.c ****  *  Bus write function pointer: BNO055_WR_FUNC_PTR
  97:Core/Src/bno055_support.c ****  *  Bus read function pointer: BNO055_RD_FUNC_PTR
  98:Core/Src/bno055_support.c ****  *  Burst read function pointer: BNO055_BRD_FUNC_PTR
  99:Core/Src/bno055_support.c ****  *  Delay function pointer: delay_msec
 100:Core/Src/bno055_support.c ****  *  I2C address: dev_addr
 101:Core/Src/bno055_support.c ****  *  Chip id of the sensor: chip_id
 102:Core/Src/bno055_support.c ****  *---------------------------------------------------------------------------*/
 103:Core/Src/bno055_support.c **** struct bno055_t bno055;
 104:Core/Src/bno055_support.c **** 
 105:Core/Src/bno055_support.c **** /* This API is an example for reading sensor data
 106:Core/Src/bno055_support.c ****  *  \param: None
 107:Core/Src/bno055_support.c ****  *  \return: communication result
 108:Core/Src/bno055_support.c ****  */
 109:Core/Src/bno055_support.c **** s32 bno055_data_readout_template(void)
 110:Core/Src/bno055_support.c **** {
 111:Core/Src/bno055_support.c ****     /* Variable used to return value of
 112:Core/Src/bno055_support.c ****      * communication routine*/
 113:Core/Src/bno055_support.c ****     s32 comres = BNO055_ERROR;
 114:Core/Src/bno055_support.c **** 
 115:Core/Src/bno055_support.c ****     /* variable used to set the power mode of the sensor*/
 116:Core/Src/bno055_support.c ****     u8 power_mode = BNO055_INIT_VALUE;
 117:Core/Src/bno055_support.c **** 
 118:Core/Src/bno055_support.c ****     /*********read raw accel data***********/
 119:Core/Src/bno055_support.c ****     /* variable used to read the accel x data */
 120:Core/Src/bno055_support.c ****     s16 accel_datax = BNO055_INIT_VALUE;
 121:Core/Src/bno055_support.c **** 
 122:Core/Src/bno055_support.c ****     /* variable used to read the accel y data */
 123:Core/Src/bno055_support.c ****     s16 accel_datay = BNO055_INIT_VALUE;
 124:Core/Src/bno055_support.c **** 
 125:Core/Src/bno055_support.c ****     /* variable used to read the accel z data */
 126:Core/Src/bno055_support.c ****     s16 accel_dataz = BNO055_INIT_VALUE;
 127:Core/Src/bno055_support.c **** 
 128:Core/Src/bno055_support.c ****     /* variable used to read the accel xyz data */
 129:Core/Src/bno055_support.c ****     struct bno055_accel_t accel_xyz;
 130:Core/Src/bno055_support.c **** 
 131:Core/Src/bno055_support.c ****     /*********read raw mag data***********/
 132:Core/Src/bno055_support.c ****     /* variable used to read the mag x data */
 133:Core/Src/bno055_support.c ****     s16 mag_datax = BNO055_INIT_VALUE;
 134:Core/Src/bno055_support.c **** 
 135:Core/Src/bno055_support.c ****     /* variable used to read the mag y data */
 136:Core/Src/bno055_support.c ****     s16 mag_datay = BNO055_INIT_VALUE;
 137:Core/Src/bno055_support.c **** 
 138:Core/Src/bno055_support.c ****     /* variable used to read the mag z data */
 139:Core/Src/bno055_support.c ****     s16 mag_dataz = BNO055_INIT_VALUE;
 140:Core/Src/bno055_support.c **** 
 141:Core/Src/bno055_support.c ****     /* structure used to read the mag xyz data */
 142:Core/Src/bno055_support.c ****     struct bno055_mag_t mag_xyz;
 143:Core/Src/bno055_support.c **** 
ARM GAS  /tmp/ccE3KnbY.s 			page 4


 144:Core/Src/bno055_support.c ****     /***********read raw gyro data***********/
 145:Core/Src/bno055_support.c ****     /* variable used to read the gyro x data */
 146:Core/Src/bno055_support.c ****     s16 gyro_datax = BNO055_INIT_VALUE;
 147:Core/Src/bno055_support.c **** 
 148:Core/Src/bno055_support.c ****     /* variable used to read the gyro y data */
 149:Core/Src/bno055_support.c ****     s16 gyro_datay = BNO055_INIT_VALUE;
 150:Core/Src/bno055_support.c **** 
 151:Core/Src/bno055_support.c ****     /* variable used to read the gyro z data */
 152:Core/Src/bno055_support.c ****     s16 gyro_dataz = BNO055_INIT_VALUE;
 153:Core/Src/bno055_support.c **** 
 154:Core/Src/bno055_support.c ****     /* structure used to read the gyro xyz data */
 155:Core/Src/bno055_support.c ****     struct bno055_gyro_t gyro_xyz;
 156:Core/Src/bno055_support.c **** 
 157:Core/Src/bno055_support.c ****     /*************read raw Euler data************/
 158:Core/Src/bno055_support.c ****     /* variable used to read the euler h data */
 159:Core/Src/bno055_support.c ****     s16 euler_data_h = BNO055_INIT_VALUE;
 160:Core/Src/bno055_support.c **** 
 161:Core/Src/bno055_support.c ****     /* variable used to read the euler r data */
 162:Core/Src/bno055_support.c ****     s16 euler_data_r = BNO055_INIT_VALUE;
 163:Core/Src/bno055_support.c **** 
 164:Core/Src/bno055_support.c ****     /* variable used to read the euler p data */
 165:Core/Src/bno055_support.c ****     s16 euler_data_p = BNO055_INIT_VALUE;
 166:Core/Src/bno055_support.c **** 
 167:Core/Src/bno055_support.c ****     /* structure used to read the euler hrp data */
 168:Core/Src/bno055_support.c ****     struct bno055_euler_t euler_hrp;
 169:Core/Src/bno055_support.c **** 
 170:Core/Src/bno055_support.c ****     /************read raw quaternion data**************/
 171:Core/Src/bno055_support.c ****     /* variable used to read the quaternion w data */
 172:Core/Src/bno055_support.c ****     s16 quaternion_data_w = BNO055_INIT_VALUE;
 173:Core/Src/bno055_support.c **** 
 174:Core/Src/bno055_support.c ****     /* variable used to read the quaternion x data */
 175:Core/Src/bno055_support.c ****     s16 quaternion_data_x = BNO055_INIT_VALUE;
 176:Core/Src/bno055_support.c **** 
 177:Core/Src/bno055_support.c ****     /* variable used to read the quaternion y data */
 178:Core/Src/bno055_support.c ****     s16 quaternion_data_y = BNO055_INIT_VALUE;
 179:Core/Src/bno055_support.c **** 
 180:Core/Src/bno055_support.c ****     /* variable used to read the quaternion z data */
 181:Core/Src/bno055_support.c ****     s16 quaternion_data_z = BNO055_INIT_VALUE;
 182:Core/Src/bno055_support.c **** 
 183:Core/Src/bno055_support.c ****     /* structure used to read the quaternion wxyz data */
 184:Core/Src/bno055_support.c ****     struct bno055_quaternion_t quaternion_wxyz;
 185:Core/Src/bno055_support.c **** 
 186:Core/Src/bno055_support.c ****     /************read raw linear acceleration data***********/
 187:Core/Src/bno055_support.c ****     /* variable used to read the linear accel x data */
 188:Core/Src/bno055_support.c ****     s16 linear_accel_data_x = BNO055_INIT_VALUE;
 189:Core/Src/bno055_support.c **** 
 190:Core/Src/bno055_support.c ****     /* variable used to read the linear accel y data */
 191:Core/Src/bno055_support.c ****     s16 linear_accel_data_y = BNO055_INIT_VALUE;
 192:Core/Src/bno055_support.c **** 
 193:Core/Src/bno055_support.c ****     /* variable used to read the linear accel z data */
 194:Core/Src/bno055_support.c ****     s16 linear_accel_data_z = BNO055_INIT_VALUE;
 195:Core/Src/bno055_support.c **** 
 196:Core/Src/bno055_support.c ****     /* structure used to read the linear accel xyz data */
 197:Core/Src/bno055_support.c ****     struct bno055_linear_accel_t linear_acce_xyz;
 198:Core/Src/bno055_support.c **** 
 199:Core/Src/bno055_support.c ****     /*****************read raw gravity sensor data****************/
 200:Core/Src/bno055_support.c ****     /* variable used to read the gravity x data */
ARM GAS  /tmp/ccE3KnbY.s 			page 5


 201:Core/Src/bno055_support.c ****     s16 gravity_data_x = BNO055_INIT_VALUE;
 202:Core/Src/bno055_support.c **** 
 203:Core/Src/bno055_support.c ****     /* variable used to read the gravity y data */
 204:Core/Src/bno055_support.c ****     s16 gravity_data_y = BNO055_INIT_VALUE;
 205:Core/Src/bno055_support.c **** 
 206:Core/Src/bno055_support.c ****     /* variable used to read the gravity z data */
 207:Core/Src/bno055_support.c ****     s16 gravity_data_z = BNO055_INIT_VALUE;
 208:Core/Src/bno055_support.c **** 
 209:Core/Src/bno055_support.c ****     /* structure used to read the gravity xyz data */
 210:Core/Src/bno055_support.c ****     struct bno055_gravity_t gravity_xyz;
 211:Core/Src/bno055_support.c **** 
 212:Core/Src/bno055_support.c ****     /*************read accel converted data***************/
 213:Core/Src/bno055_support.c ****     /* variable used to read the accel x data output as m/s2 or mg */
 214:Core/Src/bno055_support.c ****     double d_accel_datax = BNO055_INIT_VALUE;
 215:Core/Src/bno055_support.c **** 
 216:Core/Src/bno055_support.c ****     /* variable used to read the accel y data output as m/s2 or mg */
 217:Core/Src/bno055_support.c ****     double d_accel_datay = BNO055_INIT_VALUE;
 218:Core/Src/bno055_support.c **** 
 219:Core/Src/bno055_support.c ****     /* variable used to read the accel z data output as m/s2 or mg */
 220:Core/Src/bno055_support.c ****     double d_accel_dataz = BNO055_INIT_VALUE;
 221:Core/Src/bno055_support.c **** 
 222:Core/Src/bno055_support.c ****     /* structure used to read the accel xyz data output as m/s2 or mg */
 223:Core/Src/bno055_support.c ****     struct bno055_accel_double_t d_accel_xyz;
 224:Core/Src/bno055_support.c **** 
 225:Core/Src/bno055_support.c ****     /******************read mag converted data********************/
 226:Core/Src/bno055_support.c ****     /* variable used to read the mag x data output as uT*/
 227:Core/Src/bno055_support.c ****     double d_mag_datax = BNO055_INIT_VALUE;
 228:Core/Src/bno055_support.c **** 
 229:Core/Src/bno055_support.c ****     /* variable used to read the mag y data output as uT*/
 230:Core/Src/bno055_support.c ****     double d_mag_datay = BNO055_INIT_VALUE;
 231:Core/Src/bno055_support.c **** 
 232:Core/Src/bno055_support.c ****     /* variable used to read the mag z data output as uT*/
 233:Core/Src/bno055_support.c ****     double d_mag_dataz = BNO055_INIT_VALUE;
 234:Core/Src/bno055_support.c **** 
 235:Core/Src/bno055_support.c ****     /* structure used to read the mag xyz data output as uT*/
 236:Core/Src/bno055_support.c ****     struct bno055_mag_double_t d_mag_xyz;
 237:Core/Src/bno055_support.c **** 
 238:Core/Src/bno055_support.c ****     /*****************read gyro converted data************************/
 239:Core/Src/bno055_support.c ****     /* variable used to read the gyro x data output as dps or rps */
 240:Core/Src/bno055_support.c ****     double d_gyro_datax = BNO055_INIT_VALUE;
 241:Core/Src/bno055_support.c **** 
 242:Core/Src/bno055_support.c ****     /* variable used to read the gyro y data output as dps or rps */
 243:Core/Src/bno055_support.c ****     double d_gyro_datay = BNO055_INIT_VALUE;
 244:Core/Src/bno055_support.c **** 
 245:Core/Src/bno055_support.c ****     /* variable used to read the gyro z data output as dps or rps */
 246:Core/Src/bno055_support.c ****     double d_gyro_dataz = BNO055_INIT_VALUE;
 247:Core/Src/bno055_support.c **** 
 248:Core/Src/bno055_support.c ****     /* structure used to read the gyro xyz data output as dps or rps */
 249:Core/Src/bno055_support.c ****     struct bno055_gyro_double_t d_gyro_xyz;
 250:Core/Src/bno055_support.c **** 
 251:Core/Src/bno055_support.c ****     /*******************read euler converted data*******************/
 252:Core/Src/bno055_support.c **** 
 253:Core/Src/bno055_support.c ****     /* variable used to read the euler h data output
 254:Core/Src/bno055_support.c ****      * as degree or radians*/
 255:Core/Src/bno055_support.c ****     double d_euler_data_h = BNO055_INIT_VALUE;
 256:Core/Src/bno055_support.c **** 
 257:Core/Src/bno055_support.c ****     /* variable used to read the euler r data output
ARM GAS  /tmp/ccE3KnbY.s 			page 6


 258:Core/Src/bno055_support.c ****      * as degree or radians*/
 259:Core/Src/bno055_support.c ****     double d_euler_data_r = BNO055_INIT_VALUE;
 260:Core/Src/bno055_support.c **** 
 261:Core/Src/bno055_support.c ****     /* variable used to read the euler p data output
 262:Core/Src/bno055_support.c ****      * as degree or radians*/
 263:Core/Src/bno055_support.c ****     double d_euler_data_p = BNO055_INIT_VALUE;
 264:Core/Src/bno055_support.c **** 
 265:Core/Src/bno055_support.c ****     /* structure used to read the euler hrp data output
 266:Core/Src/bno055_support.c ****      * as as degree or radians */
 267:Core/Src/bno055_support.c ****     struct bno055_euler_double_t d_euler_hpr;
 268:Core/Src/bno055_support.c **** 
 269:Core/Src/bno055_support.c ****     /*********read linear acceleration converted data**********/
 270:Core/Src/bno055_support.c ****     /* variable used to read the linear accel x data output as m/s2*/
 271:Core/Src/bno055_support.c ****     double d_linear_accel_datax = BNO055_INIT_VALUE;
 272:Core/Src/bno055_support.c **** 
 273:Core/Src/bno055_support.c ****     /* variable used to read the linear accel y data output as m/s2*/
 274:Core/Src/bno055_support.c ****     double d_linear_accel_datay = BNO055_INIT_VALUE;
 275:Core/Src/bno055_support.c **** 
 276:Core/Src/bno055_support.c ****     /* variable used to read the linear accel z data output as m/s2*/
 277:Core/Src/bno055_support.c ****     double d_linear_accel_dataz = BNO055_INIT_VALUE;
 278:Core/Src/bno055_support.c **** 
 279:Core/Src/bno055_support.c ****     /* structure used to read the linear accel xyz data output as m/s2*/
 280:Core/Src/bno055_support.c ****     struct bno055_linear_accel_double_t d_linear_accel_xyz;
 281:Core/Src/bno055_support.c **** 
 282:Core/Src/bno055_support.c ****     /********************Gravity converted data**********************/
 283:Core/Src/bno055_support.c ****     /* variable used to read the gravity sensor x data output as m/s2*/
 284:Core/Src/bno055_support.c ****     double d_gravity_data_x = BNO055_INIT_VALUE;
 285:Core/Src/bno055_support.c **** 
 286:Core/Src/bno055_support.c ****     /* variable used to read the gravity sensor y data output as m/s2*/
 287:Core/Src/bno055_support.c ****     double d_gravity_data_y = BNO055_INIT_VALUE;
 288:Core/Src/bno055_support.c **** 
 289:Core/Src/bno055_support.c ****     /* variable used to read the gravity sensor z data output as m/s2*/
 290:Core/Src/bno055_support.c ****     double d_gravity_data_z = BNO055_INIT_VALUE;
 291:Core/Src/bno055_support.c **** 
 292:Core/Src/bno055_support.c ****     /* structure used to read the gravity xyz data output as m/s2*/
 293:Core/Src/bno055_support.c ****     struct bno055_gravity_double_t d_gravity_xyz;
 294:Core/Src/bno055_support.c **** 
 295:Core/Src/bno055_support.c ****     /*---------------------------------------------------------------------------*
 296:Core/Src/bno055_support.c ****      *********************** START INITIALIZATION ************************
 297:Core/Src/bno055_support.c ****      *--------------------------------------------------------------------------*/
 298:Core/Src/bno055_support.c **** #ifdef  BNO055_API
 299:Core/Src/bno055_support.c **** 
 300:Core/Src/bno055_support.c ****     /*  Based on the user need configure I2C interface.
 301:Core/Src/bno055_support.c ****      *  It is example code to explain how to use the bno055 API*/
 302:Core/Src/bno055_support.c ****     I2C_routine();
 303:Core/Src/bno055_support.c **** #endif
 304:Core/Src/bno055_support.c **** 
 305:Core/Src/bno055_support.c ****     /*--------------------------------------------------------------------------*
 306:Core/Src/bno055_support.c ****      *  This API used to assign the value/reference of
 307:Core/Src/bno055_support.c ****      *  the following parameters
 308:Core/Src/bno055_support.c ****      *  I2C address
 309:Core/Src/bno055_support.c ****      *  Bus Write
 310:Core/Src/bno055_support.c ****      *  Bus read
 311:Core/Src/bno055_support.c ****      *  Chip id
 312:Core/Src/bno055_support.c ****      *  Page id
 313:Core/Src/bno055_support.c ****      *  Accel revision id
 314:Core/Src/bno055_support.c ****      *  Mag revision id
ARM GAS  /tmp/ccE3KnbY.s 			page 7


 315:Core/Src/bno055_support.c ****      *  Gyro revision id
 316:Core/Src/bno055_support.c ****      *  Boot loader revision id
 317:Core/Src/bno055_support.c ****      *  Software revision id
 318:Core/Src/bno055_support.c ****      *-------------------------------------------------------------------------*/
 319:Core/Src/bno055_support.c ****     comres = bno055_init(&bno055);
 320:Core/Src/bno055_support.c **** 
 321:Core/Src/bno055_support.c ****     /*  For initializing the BNO sensor it is required to the operation mode
 322:Core/Src/bno055_support.c ****      * of the sensor as NORMAL
 323:Core/Src/bno055_support.c ****      * Normal mode can set from the register
 324:Core/Src/bno055_support.c ****      * Page - page0
 325:Core/Src/bno055_support.c ****      * register - 0x3E
 326:Core/Src/bno055_support.c ****      * bit positions - 0 and 1*/
 327:Core/Src/bno055_support.c ****     power_mode = BNO055_POWER_MODE_NORMAL;
 328:Core/Src/bno055_support.c **** 
 329:Core/Src/bno055_support.c ****     /* set the power mode as NORMAL*/
 330:Core/Src/bno055_support.c ****     comres += bno055_set_power_mode(power_mode);
 331:Core/Src/bno055_support.c **** 
 332:Core/Src/bno055_support.c ****     /*----------------------------------------------------------------*
 333:Core/Src/bno055_support.c ****      ************************* END INITIALIZATION *************************
 334:Core/Src/bno055_support.c ****      *-----------------------------------------------------------------*/
 335:Core/Src/bno055_support.c **** 
 336:Core/Src/bno055_support.c ****     /************************* START READ RAW SENSOR DATA****************/
 337:Core/Src/bno055_support.c **** 
 338:Core/Src/bno055_support.c ****     /*  Using BNO055 sensor we can read the following sensor data and
 339:Core/Src/bno055_support.c ****      * virtual sensor data
 340:Core/Src/bno055_support.c ****      * Sensor data:
 341:Core/Src/bno055_support.c ****      * Accel
 342:Core/Src/bno055_support.c ****      * Mag
 343:Core/Src/bno055_support.c ****      * Gyro
 344:Core/Src/bno055_support.c ****      * Virtual sensor data
 345:Core/Src/bno055_support.c ****      * Euler
 346:Core/Src/bno055_support.c ****      * Quaternion
 347:Core/Src/bno055_support.c ****      * Linear acceleration
 348:Core/Src/bno055_support.c ****      * Gravity sensor */
 349:Core/Src/bno055_support.c **** 
 350:Core/Src/bno055_support.c ****     /*  For reading sensor raw data it is required to set the
 351:Core/Src/bno055_support.c ****      * operation modes of the sensor
 352:Core/Src/bno055_support.c ****      * operation mode can set from the register
 353:Core/Src/bno055_support.c ****      * page - page0
 354:Core/Src/bno055_support.c ****      * register - 0x3D
 355:Core/Src/bno055_support.c ****      * bit - 0 to 3
 356:Core/Src/bno055_support.c ****      * for sensor data read following operation mode have to set
 357:Core/Src/bno055_support.c ****      * SENSOR MODE
 358:Core/Src/bno055_support.c ****      * 0x01 - BNO055_OPERATION_MODE_ACCONLY
 359:Core/Src/bno055_support.c ****      * 0x02 - BNO055_OPERATION_MODE_MAGONLY
 360:Core/Src/bno055_support.c ****      * 0x03 - BNO055_OPERATION_MODE_GYRONLY
 361:Core/Src/bno055_support.c ****      * 0x04 - BNO055_OPERATION_MODE_ACCMAG
 362:Core/Src/bno055_support.c ****      * 0x05 - BNO055_OPERATION_MODE_ACCGYRO
 363:Core/Src/bno055_support.c ****      * 0x06 - BNO055_OPERATION_MODE_MAGGYRO
 364:Core/Src/bno055_support.c ****      * 0x07 - BNO055_OPERATION_MODE_AMG
 365:Core/Src/bno055_support.c ****      * based on the user need configure the operation mode*/
 366:Core/Src/bno055_support.c ****     comres += bno055_set_operation_mode(BNO055_OPERATION_MODE_AMG);
 367:Core/Src/bno055_support.c **** 
 368:Core/Src/bno055_support.c ****     /*  Raw accel X, Y and Z data can read from the register
 369:Core/Src/bno055_support.c ****      * page - page 0
 370:Core/Src/bno055_support.c ****      * register - 0x08 to 0x0D*/
 371:Core/Src/bno055_support.c ****     comres += bno055_read_accel_x(&accel_datax);
ARM GAS  /tmp/ccE3KnbY.s 			page 8


 372:Core/Src/bno055_support.c ****     comres += bno055_read_accel_y(&accel_datay);
 373:Core/Src/bno055_support.c ****     comres += bno055_read_accel_z(&accel_dataz);
 374:Core/Src/bno055_support.c ****     comres += bno055_read_accel_xyz(&accel_xyz);
 375:Core/Src/bno055_support.c **** 
 376:Core/Src/bno055_support.c ****     /*  Raw mag X, Y and Z data can read from the register
 377:Core/Src/bno055_support.c ****      * page - page 0
 378:Core/Src/bno055_support.c ****      * register - 0x0E to 0x13*/
 379:Core/Src/bno055_support.c ****     comres += bno055_read_mag_x(&mag_datax);
 380:Core/Src/bno055_support.c ****     comres += bno055_read_mag_y(&mag_datay);
 381:Core/Src/bno055_support.c ****     comres += bno055_read_mag_z(&mag_dataz);
 382:Core/Src/bno055_support.c ****     comres += bno055_read_mag_xyz(&mag_xyz);
 383:Core/Src/bno055_support.c **** 
 384:Core/Src/bno055_support.c ****     /*  Raw gyro X, Y and Z data can read from the register
 385:Core/Src/bno055_support.c ****      * page - page 0
 386:Core/Src/bno055_support.c ****      * register - 0x14 to 0x19*/
 387:Core/Src/bno055_support.c ****     comres += bno055_read_gyro_x(&gyro_datax);
 388:Core/Src/bno055_support.c ****     comres += bno055_read_gyro_y(&gyro_datay);
 389:Core/Src/bno055_support.c ****     comres += bno055_read_gyro_z(&gyro_dataz);
 390:Core/Src/bno055_support.c ****     comres += bno055_read_gyro_xyz(&gyro_xyz);
 391:Core/Src/bno055_support.c **** 
 392:Core/Src/bno055_support.c ****     /************************* END READ RAW SENSOR DATA****************/
 393:Core/Src/bno055_support.c **** 
 394:Core/Src/bno055_support.c ****     /************************* START READ RAW FUSION DATA ********
 395:Core/Src/bno055_support.c ****      * For reading fusion data it is required to set the
 396:Core/Src/bno055_support.c ****      * operation modes of the sensor
 397:Core/Src/bno055_support.c ****      * operation mode can set from the register
 398:Core/Src/bno055_support.c ****      * page - page0
 399:Core/Src/bno055_support.c ****      * register - 0x3D
 400:Core/Src/bno055_support.c ****      * bit - 0 to 3
 401:Core/Src/bno055_support.c ****      * for sensor data read following operation mode have to set
 402:Core/Src/bno055_support.c ****      * FUSION MODE
 403:Core/Src/bno055_support.c ****      * 0x08 - BNO055_OPERATION_MODE_IMUPLUS
 404:Core/Src/bno055_support.c ****      * 0x09 - BNO055_OPERATION_MODE_COMPASS
 405:Core/Src/bno055_support.c ****      * 0x0A - BNO055_OPERATION_MODE_M4G
 406:Core/Src/bno055_support.c ****      * 0x0B - BNO055_OPERATION_MODE_NDOF_FMC_OFF
 407:Core/Src/bno055_support.c ****      * 0x0C - BNO055_OPERATION_MODE_NDOF
 408:Core/Src/bno055_support.c ****      * based on the user need configure the operation mode*/
 409:Core/Src/bno055_support.c ****     comres += bno055_set_operation_mode(BNO055_OPERATION_MODE_NDOF);
 410:Core/Src/bno055_support.c **** 
 411:Core/Src/bno055_support.c ****     /*  Raw Euler H, R and P data can read from the register
 412:Core/Src/bno055_support.c ****      * page - page 0
 413:Core/Src/bno055_support.c ****      * register - 0x1A to 0x1E */
 414:Core/Src/bno055_support.c ****     comres += bno055_read_euler_h(&euler_data_h);
 415:Core/Src/bno055_support.c ****     comres += bno055_read_euler_r(&euler_data_r);
 416:Core/Src/bno055_support.c ****     comres += bno055_read_euler_p(&euler_data_p);
 417:Core/Src/bno055_support.c ****     comres += bno055_read_euler_hrp(&euler_hrp);
 418:Core/Src/bno055_support.c **** 
 419:Core/Src/bno055_support.c ****     /*  Raw Quaternion W, X, Y and Z data can read from the register
 420:Core/Src/bno055_support.c ****      * page - page 0
 421:Core/Src/bno055_support.c ****      * register - 0x20 to 0x27 */
 422:Core/Src/bno055_support.c ****     comres += bno055_read_quaternion_w(&quaternion_data_w);
 423:Core/Src/bno055_support.c ****     comres += bno055_read_quaternion_x(&quaternion_data_x);
 424:Core/Src/bno055_support.c ****     comres += bno055_read_quaternion_y(&quaternion_data_y);
 425:Core/Src/bno055_support.c ****     comres += bno055_read_quaternion_z(&quaternion_data_z);
 426:Core/Src/bno055_support.c ****     comres += bno055_read_quaternion_wxyz(&quaternion_wxyz);
 427:Core/Src/bno055_support.c **** 
 428:Core/Src/bno055_support.c ****     /*  Raw Linear accel X, Y and Z data can read from the register
ARM GAS  /tmp/ccE3KnbY.s 			page 9


 429:Core/Src/bno055_support.c ****      * page - page 0
 430:Core/Src/bno055_support.c ****      * register - 0x28 to 0x2D */
 431:Core/Src/bno055_support.c ****     comres += bno055_read_linear_accel_x(&linear_accel_data_x);
 432:Core/Src/bno055_support.c ****     comres += bno055_read_linear_accel_y(&linear_accel_data_y);
 433:Core/Src/bno055_support.c ****     comres += bno055_read_linear_accel_z(&linear_accel_data_z);
 434:Core/Src/bno055_support.c ****     comres += bno055_read_linear_accel_xyz(&linear_acce_xyz);
 435:Core/Src/bno055_support.c **** 
 436:Core/Src/bno055_support.c ****     /*  Raw Gravity sensor X, Y and Z data can read from the register
 437:Core/Src/bno055_support.c ****      * page - page 0
 438:Core/Src/bno055_support.c ****      * register - 0x2E to 0x33 */
 439:Core/Src/bno055_support.c ****     comres += bno055_read_gravity_x(&gravity_data_x);
 440:Core/Src/bno055_support.c ****     comres += bno055_read_gravity_y(&gravity_data_y);
 441:Core/Src/bno055_support.c ****     comres += bno055_read_gravity_z(&gravity_data_z);
 442:Core/Src/bno055_support.c ****     comres += bno055_read_gravity_xyz(&gravity_xyz);
 443:Core/Src/bno055_support.c **** 
 444:Core/Src/bno055_support.c ****     /************************* END READ RAW FUSION DATA  ************/
 445:Core/Src/bno055_support.c ****     /******************START READ CONVERTED SENSOR DATA****************/
 446:Core/Src/bno055_support.c **** 
 447:Core/Src/bno055_support.c ****     /*  API used to read accel data output as double  - m/s2 and mg
 448:Core/Src/bno055_support.c ****      * float functions also available in the BNO055 API */
 449:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_x_msq(&d_accel_datax);
 450:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_x_mg(&d_accel_datax);
 451:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_y_msq(&d_accel_datay);
 452:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_y_mg(&d_accel_datay);
 453:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_z_msq(&d_accel_dataz);
 454:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_z_mg(&d_accel_dataz);
 455:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_xyz_msq(&d_accel_xyz);
 456:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_xyz_mg(&d_accel_xyz);
 457:Core/Src/bno055_support.c **** 
 458:Core/Src/bno055_support.c ****     /*  API used to read mag data output as double  - uT(micro Tesla)
 459:Core/Src/bno055_support.c ****      * float functions also available in the BNO055 API */
 460:Core/Src/bno055_support.c ****     comres += bno055_convert_double_mag_x_uT(&d_mag_datax);
 461:Core/Src/bno055_support.c ****     comres += bno055_convert_double_mag_y_uT(&d_mag_datay);
 462:Core/Src/bno055_support.c ****     comres += bno055_convert_double_mag_z_uT(&d_mag_dataz);
 463:Core/Src/bno055_support.c ****     comres += bno055_convert_double_mag_xyz_uT(&d_mag_xyz);
 464:Core/Src/bno055_support.c **** 
 465:Core/Src/bno055_support.c ****     /*  API used to read gyro data output as double  - dps and rps
 466:Core/Src/bno055_support.c ****      * float functions also available in the BNO055 API */
 467:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_x_dps(&d_gyro_datax);
 468:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_y_dps(&d_gyro_datay);
 469:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_z_dps(&d_gyro_dataz);
 470:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_x_rps(&d_gyro_datax);
 471:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_y_rps(&d_gyro_datay);
 472:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_z_rps(&d_gyro_dataz);
 473:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_xyz_dps(&d_gyro_xyz);
 474:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_xyz_rps(&d_gyro_xyz);
 475:Core/Src/bno055_support.c **** 
 476:Core/Src/bno055_support.c ****     /*  API used to read Euler data output as double  - degree and radians
 477:Core/Src/bno055_support.c ****      * float functions also available in the BNO055 API */
 478:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_h_deg(&d_euler_data_h);
 479:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_r_deg(&d_euler_data_r);
 480:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_p_deg(&d_euler_data_p);
 481:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_h_rad(&d_euler_data_h);
 482:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_r_rad(&d_euler_data_r);
 483:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_p_rad(&d_euler_data_p);
 484:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_hpr_deg(&d_euler_hpr);
 485:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_hpr_rad(&d_euler_hpr);
ARM GAS  /tmp/ccE3KnbY.s 			page 10


 486:Core/Src/bno055_support.c **** 
 487:Core/Src/bno055_support.c ****     /*  API used to read Linear acceleration data output as m/s2
 488:Core/Src/bno055_support.c ****      * float functions also available in the BNO055 API */
 489:Core/Src/bno055_support.c ****     comres += bno055_convert_double_linear_accel_x_msq(&d_linear_accel_datax);
 490:Core/Src/bno055_support.c ****     comres += bno055_convert_double_linear_accel_y_msq(&d_linear_accel_datay);
 491:Core/Src/bno055_support.c ****     comres += bno055_convert_double_linear_accel_z_msq(&d_linear_accel_dataz);
 492:Core/Src/bno055_support.c ****     comres += bno055_convert_double_linear_accel_xyz_msq(&d_linear_accel_xyz);
 493:Core/Src/bno055_support.c **** 
 494:Core/Src/bno055_support.c ****     /*  API used to read Gravity sensor data output as m/s2
 495:Core/Src/bno055_support.c ****      * float functions also available in the BNO055 API */
 496:Core/Src/bno055_support.c ****     comres += bno055_convert_gravity_double_x_msq(&d_gravity_data_x);
 497:Core/Src/bno055_support.c ****     comres += bno055_convert_gravity_double_y_msq(&d_gravity_data_y);
 498:Core/Src/bno055_support.c ****     comres += bno055_convert_gravity_double_z_msq(&d_gravity_data_z);
 499:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gravity_xyz_msq(&d_gravity_xyz);
 500:Core/Src/bno055_support.c **** 
 501:Core/Src/bno055_support.c ****     /*-----------------------------------------------------------------------*
 502:Core/Src/bno055_support.c ****      ************************* START DE-INITIALIZATION ***********************
 503:Core/Src/bno055_support.c ****      *-------------------------------------------------------------------------*/
 504:Core/Src/bno055_support.c **** 
 505:Core/Src/bno055_support.c ****     /*  For de - initializing the BNO sensor it is required
 506:Core/Src/bno055_support.c ****      * to the operation mode of the sensor as SUSPEND
 507:Core/Src/bno055_support.c ****      * Suspend mode can set from the register
 508:Core/Src/bno055_support.c ****      * Page - page0
 509:Core/Src/bno055_support.c ****      * register - 0x3E
 510:Core/Src/bno055_support.c ****      * bit positions - 0 and 1*/
 511:Core/Src/bno055_support.c ****     power_mode = BNO055_POWER_MODE_SUSPEND;
 512:Core/Src/bno055_support.c **** 
 513:Core/Src/bno055_support.c ****     /* set the power mode as SUSPEND*/
 514:Core/Src/bno055_support.c ****     comres += bno055_set_power_mode(power_mode);
 515:Core/Src/bno055_support.c **** 
 516:Core/Src/bno055_support.c ****     /*---------------------------------------------------------------------*
 517:Core/Src/bno055_support.c ****     ************************* END DE-INITIALIZATION **********************
 518:Core/Src/bno055_support.c ****     *---------------------------------------------------------------------*/
 519:Core/Src/bno055_support.c ****     return comres;
 520:Core/Src/bno055_support.c **** }
 521:Core/Src/bno055_support.c **** 
 522:Core/Src/bno055_support.c **** #ifdef  BNO055_API
 523:Core/Src/bno055_support.c **** 
 524:Core/Src/bno055_support.c **** /*--------------------------------------------------------------------------*
 525:Core/Src/bno055_support.c ****  *  The following API is used to map the I2C bus read, write, delay and
 526:Core/Src/bno055_support.c ****  *  device address with global structure bno055_t
 527:Core/Src/bno055_support.c ****  *-------------------------------------------------------------------------*/
 528:Core/Src/bno055_support.c **** 
 529:Core/Src/bno055_support.c **** /*-------------------------------------------------------------------------*
 530:Core/Src/bno055_support.c ****  *  By using bno055 the following structure parameter can be accessed
 531:Core/Src/bno055_support.c ****  *  Bus write function pointer: BNO055_WR_FUNC_PTR
 532:Core/Src/bno055_support.c ****  *  Bus read function pointer: BNO055_RD_FUNC_PTR
 533:Core/Src/bno055_support.c ****  *  Delay function pointer: delay_msec
 534:Core/Src/bno055_support.c ****  *  I2C address: dev_addr
 535:Core/Src/bno055_support.c ****  *--------------------------------------------------------------------------*/
 536:Core/Src/bno055_support.c **** s8 I2C_routine(void)
 537:Core/Src/bno055_support.c **** {
 538:Core/Src/bno055_support.c ****     bno055.bus_write = BNO055_I2C_bus_write;
 539:Core/Src/bno055_support.c ****     bno055.bus_read = BNO055_I2C_bus_read;
 540:Core/Src/bno055_support.c ****     bno055.delay_msec = BNO055_delay_msek;
 541:Core/Src/bno055_support.c ****     bno055.dev_addr = BNO055_I2C_ADDR1;
 542:Core/Src/bno055_support.c **** 
ARM GAS  /tmp/ccE3KnbY.s 			page 11


 543:Core/Src/bno055_support.c ****     return BNO055_INIT_VALUE;
 544:Core/Src/bno055_support.c **** }
 545:Core/Src/bno055_support.c **** 
 546:Core/Src/bno055_support.c **** /************** I2C buffer length******/
 547:Core/Src/bno055_support.c **** 
 548:Core/Src/bno055_support.c **** #define I2C_BUFFER_LEN 8
 549:Core/Src/bno055_support.c **** #define I2C0           5
 550:Core/Src/bno055_support.c **** 
 551:Core/Src/bno055_support.c **** /*-------------------------------------------------------------------*
 552:Core/Src/bno055_support.c ****  *
 553:Core/Src/bno055_support.c ****  *  This is a sample code for read and write the data by using I2C
 554:Core/Src/bno055_support.c ****  *  Use either I2C  based on your need
 555:Core/Src/bno055_support.c ****  *  The device address defined in the bno055.h file
 556:Core/Src/bno055_support.c ****  *
 557:Core/Src/bno055_support.c ****  *--------------------------------------------------------------------*/
 558:Core/Src/bno055_support.c **** 
 559:Core/Src/bno055_support.c **** /*  \Brief: The API is used as I2C bus write
 560:Core/Src/bno055_support.c ****  *  \Return : Status of the I2C write
 561:Core/Src/bno055_support.c ****  *  \param dev_addr : The device address of the sensor
 562:Core/Src/bno055_support.c ****  *  \param reg_addr : Address of the first register,
 563:Core/Src/bno055_support.c ****  *   will data is going to be written
 564:Core/Src/bno055_support.c ****  *  \param reg_data : It is a value hold in the array,
 565:Core/Src/bno055_support.c ****  *      will be used for write the value into the register
 566:Core/Src/bno055_support.c ****  *  \param cnt : The no of byte of data to be write
 567:Core/Src/bno055_support.c ****  */
 568:Core/Src/bno055_support.c **** s8 BNO055_I2C_bus_write(u8 dev_addr, u8 reg_addr, u8 *reg_data, u8 cnt)
 569:Core/Src/bno055_support.c **** {
  30              		.loc 1 569 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 569 1 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 85B0     		sub	sp, sp, #20
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 24
 570:Core/Src/bno055_support.c ****     s32 BNO055_iERROR = BNO055_INIT_VALUE;
  42              		.loc 1 570 5 is_stmt 1 view .LVU2
  43              	.LVL1:
 571:Core/Src/bno055_support.c ****     u8 array[I2C_BUFFER_LEN];
  44              		.loc 1 571 5 view .LVU3
 572:Core/Src/bno055_support.c ****     u8 stringpos = BNO055_INIT_VALUE;
  45              		.loc 1 572 5 view .LVU4
 573:Core/Src/bno055_support.c **** 
 574:Core/Src/bno055_support.c ****     array[BNO055_INIT_VALUE] = reg_addr;
  46              		.loc 1 574 5 view .LVU5
  47              		.loc 1 574 30 is_stmt 0 view .LVU6
  48 0004 8DF80810 		strb	r1, [sp, #8]
 575:Core/Src/bno055_support.c ****     for (stringpos = BNO055_INIT_VALUE; stringpos < cnt; stringpos++)
  49              		.loc 1 575 5 is_stmt 1 view .LVU7
  50              		.loc 1 575 20 is_stmt 0 view .LVU8
  51 0008 0021     		movs	r1, #0
  52              	.LVL2:
  53              		.loc 1 575 5 view .LVU9
ARM GAS  /tmp/ccE3KnbY.s 			page 12


  54 000a 09E0     		b	.L2
  55              	.LVL3:
  56              	.L3:
 576:Core/Src/bno055_support.c ****     {
 577:Core/Src/bno055_support.c ****         array[stringpos + BNO055_I2C_BUS_WRITE_ARRAY_INDEX] = *(reg_data + stringpos);
  57              		.loc 1 577 9 is_stmt 1 discriminator 3 view .LVU10
  58              		.loc 1 577 25 is_stmt 0 discriminator 3 view .LVU11
  59 000c 01F1010C 		add	ip, r1, #1
  60              		.loc 1 577 63 discriminator 3 view .LVU12
  61 0010 12F801E0 		ldrb	lr, [r2, r1]	@ zero_extendqisi2
  62              		.loc 1 577 61 discriminator 3 view .LVU13
  63 0014 1131     		adds	r1, r1, #17
  64              	.LVL4:
  65              		.loc 1 577 61 discriminator 3 view .LVU14
  66 0016 6944     		add	r1, sp, r1
  67 0018 01F808EC 		strb	lr, [r1, #-8]
 575:Core/Src/bno055_support.c ****     for (stringpos = BNO055_INIT_VALUE; stringpos < cnt; stringpos++)
  68              		.loc 1 575 67 is_stmt 1 discriminator 3 view .LVU15
  69 001c 5FFA8CF1 		uxtb	r1, ip
  70              	.LVL5:
  71              	.L2:
 575:Core/Src/bno055_support.c ****     for (stringpos = BNO055_INIT_VALUE; stringpos < cnt; stringpos++)
  72              		.loc 1 575 51 discriminator 1 view .LVU16
  73 0020 9942     		cmp	r1, r3
  74 0022 F3D3     		bcc	.L3
 578:Core/Src/bno055_support.c ****     }
 579:Core/Src/bno055_support.c **** 
 580:Core/Src/bno055_support.c **** /*
 581:Core/Src/bno055_support.c ****  * Please take the below APIs as your reference for
 582:Core/Src/bno055_support.c ****  * write the data using I2C communication
 583:Core/Src/bno055_support.c ****  * "BNO055_iERROR = I2C_WRITE_STRING(DEV_ADDR, ARRAY, CNT+1)"
 584:Core/Src/bno055_support.c ****  * add your I2C write APIs here
 585:Core/Src/bno055_support.c ****  * BNO055_iERROR is an return value of I2C read API
 586:Core/Src/bno055_support.c ****  * Please select your valid return value
 587:Core/Src/bno055_support.c ****  * In the driver BNO055_SUCCESS defined as 0
 588:Core/Src/bno055_support.c ****  * and FAILURE defined as -1
 589:Core/Src/bno055_support.c ****  * Note :
 590:Core/Src/bno055_support.c ****  * This is a full duplex operation,
 591:Core/Src/bno055_support.c ****  * The first read data is discarded, for that extra write operation
 592:Core/Src/bno055_support.c ****  * have to be initiated. For that cnt+1 operation done
 593:Core/Src/bno055_support.c ****  * in the I2C write string function
 594:Core/Src/bno055_support.c ****  * For more information please refer data sheet SPI communication:
 595:Core/Src/bno055_support.c ****  */
 596:Core/Src/bno055_support.c **** 
 597:Core/Src/bno055_support.c ****     BNO055_iERROR = HAL_I2C_Master_Transmit(&hi2c1, dev_addr << 1, array, cnt + 1, 10);
  75              		.loc 1 597 5 view .LVU17
  76              		.loc 1 597 21 is_stmt 0 view .LVU18
  77 0024 0A22     		movs	r2, #10
  78              	.LVL6:
  79              		.loc 1 597 21 view .LVU19
  80 0026 0092     		str	r2, [sp]
  81 0028 0133     		adds	r3, r3, #1
  82              	.LVL7:
  83              		.loc 1 597 21 view .LVU20
  84 002a 02AA     		add	r2, sp, #8
  85 002c 4100     		lsls	r1, r0, #1
  86              	.LVL8:
ARM GAS  /tmp/ccE3KnbY.s 			page 13


  87              		.loc 1 597 21 view .LVU21
  88 002e 0648     		ldr	r0, .L7
  89              	.LVL9:
  90              		.loc 1 597 21 view .LVU22
  91 0030 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
  92              	.LVL10:
  93              		.loc 1 597 19 view .LVU23
  94 0034 0346     		mov	r3, r0
  95              	.LVL11:
 598:Core/Src/bno055_support.c **** 
 599:Core/Src/bno055_support.c ****     if (BNO055_iERROR > 0) {
  96              		.loc 1 599 5 is_stmt 1 view .LVU24
  97              		.loc 1 599 8 is_stmt 0 view .LVU25
  98 0036 0028     		cmp	r0, #0
  99 0038 01DD     		ble	.L4
 600:Core/Src/bno055_support.c ****     	BNO055_iERROR = -1;
 100              		.loc 1 600 20 view .LVU26
 101 003a 4FF0FF33 		mov	r3, #-1
 102              	.L4:
 103              	.LVL12:
 601:Core/Src/bno055_support.c ****     }
 602:Core/Src/bno055_support.c **** 
 603:Core/Src/bno055_support.c **** 	return (s8)BNO055_iERROR;
 104              		.loc 1 603 2 is_stmt 1 view .LVU27
 604:Core/Src/bno055_support.c **** }
 105              		.loc 1 604 1 is_stmt 0 view .LVU28
 106 003e 58B2     		sxtb	r0, r3
 107 0040 05B0     		add	sp, sp, #20
 108              	.LCFI2:
 109              		.cfi_def_cfa_offset 4
 110              		@ sp needed
 111 0042 5DF804FB 		ldr	pc, [sp], #4
 112              	.L8:
 113 0046 00BF     		.align	2
 114              	.L7:
 115 0048 00000000 		.word	hi2c1
 116              		.cfi_endproc
 117              	.LFE125:
 119              		.section	.text.BNO055_I2C_bus_read,"ax",%progbits
 120              		.align	1
 121              		.global	BNO055_I2C_bus_read
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 126              	BNO055_I2C_bus_read:
 127              	.LVL13:
 128              	.LFB126:
 605:Core/Src/bno055_support.c **** 
 606:Core/Src/bno055_support.c **** /*  \Brief: The API is used as I2C bus read
 607:Core/Src/bno055_support.c ****  *  \Return : Status of the I2C read
 608:Core/Src/bno055_support.c ****  *  \param dev_addr : The device address of the sensor
 609:Core/Src/bno055_support.c ****  *  \param reg_addr : Address of the first register,
 610:Core/Src/bno055_support.c ****  *  will data is going to be read
 611:Core/Src/bno055_support.c ****  *  \param reg_data : This data read from the sensor,
 612:Core/Src/bno055_support.c ****  *   which is hold in an array
 613:Core/Src/bno055_support.c ****  *  \param cnt : The no of byte of data to be read
 614:Core/Src/bno055_support.c ****  */
ARM GAS  /tmp/ccE3KnbY.s 			page 14


 615:Core/Src/bno055_support.c **** s8 BNO055_I2C_bus_read(u8 dev_addr, u8 reg_addr, u8 *reg_data, u8 cnt)
 616:Core/Src/bno055_support.c **** {
 129              		.loc 1 616 1 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 8
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		.loc 1 616 1 is_stmt 0 view .LVU30
 134 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 135              	.LCFI3:
 136              		.cfi_def_cfa_offset 24
 137              		.cfi_offset 4, -24
 138              		.cfi_offset 5, -20
 139              		.cfi_offset 6, -16
 140              		.cfi_offset 7, -12
 141              		.cfi_offset 8, -8
 142              		.cfi_offset 14, -4
 143 0004 84B0     		sub	sp, sp, #16
 144              	.LCFI4:
 145              		.cfi_def_cfa_offset 40
 146 0006 0646     		mov	r6, r0
 147 0008 1546     		mov	r5, r2
 148 000a 1C46     		mov	r4, r3
 617:Core/Src/bno055_support.c ****     s32 BNO055_iERROR = BNO055_INIT_VALUE;
 149              		.loc 1 617 5 is_stmt 1 view .LVU31
 150              	.LVL14:
 618:Core/Src/bno055_support.c ****     u8 array[I2C_BUFFER_LEN] = { BNO055_INIT_VALUE };
 151              		.loc 1 618 5 view .LVU32
 152              		.loc 1 618 8 is_stmt 0 view .LVU33
 153 000c 0023     		movs	r3, #0
 154              	.LVL15:
 155              		.loc 1 618 8 view .LVU34
 156 000e 0293     		str	r3, [sp, #8]
 157 0010 0393     		str	r3, [sp, #12]
 619:Core/Src/bno055_support.c ****     u8 stringpos = BNO055_INIT_VALUE;
 158              		.loc 1 619 5 is_stmt 1 view .LVU35
 159              	.LVL16:
 620:Core/Src/bno055_support.c **** 
 621:Core/Src/bno055_support.c ****     array[BNO055_INIT_VALUE] = reg_addr;
 160              		.loc 1 621 5 view .LVU36
 161              		.loc 1 621 30 is_stmt 0 view .LVU37
 162 0012 8DF80810 		strb	r1, [sp, #8]
 622:Core/Src/bno055_support.c **** 
 623:Core/Src/bno055_support.c ****     /* Please take the below API as your reference
 624:Core/Src/bno055_support.c ****      * for read the data using I2C communication
 625:Core/Src/bno055_support.c ****      * add your I2C read API here.
 626:Core/Src/bno055_support.c ****      * "BNO055_iERROR = I2C_WRITE_READ_STRING(DEV_ADDR,
 627:Core/Src/bno055_support.c ****      * ARRAY, ARRAY, 1, CNT)"
 628:Core/Src/bno055_support.c ****      * BNO055_iERROR is an return value of SPI write API
 629:Core/Src/bno055_support.c ****      * Please select your valid return value
 630:Core/Src/bno055_support.c ****      * In the driver BNO055_SUCCESS defined as 0
 631:Core/Src/bno055_support.c ****      * and FAILURE defined as -1
 632:Core/Src/bno055_support.c ****      */
 633:Core/Src/bno055_support.c ****     BNO055_iERROR = HAL_I2C_Master_Transmit(&hi2c1, dev_addr << 1, array, 1, 100);
 163              		.loc 1 633 5 is_stmt 1 view .LVU38
 164              		.loc 1 633 21 is_stmt 0 view .LVU39
 165 0016 164F     		ldr	r7, .L15
 166 0018 4FF06408 		mov	r8, #100
ARM GAS  /tmp/ccE3KnbY.s 			page 15


 167 001c CDF80080 		str	r8, [sp]
 168 0020 0123     		movs	r3, #1
 169 0022 02AA     		add	r2, sp, #8
 170              	.LVL17:
 171              		.loc 1 633 21 view .LVU40
 172 0024 00FA03F1 		lsl	r1, r0, r3
 173              	.LVL18:
 174              		.loc 1 633 21 view .LVU41
 175 0028 3846     		mov	r0, r7
 176              	.LVL19:
 177              		.loc 1 633 21 view .LVU42
 178 002a FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 179              	.LVL20:
 634:Core/Src/bno055_support.c **** 
 635:Core/Src/bno055_support.c ****     BNO055_iERROR = HAL_I2C_Master_Receive(&hi2c1, (dev_addr << 1) | 1, array, cnt, 100);
 180              		.loc 1 635 5 is_stmt 1 view .LVU43
 181              		.loc 1 635 62 is_stmt 0 view .LVU44
 182 002e 7100     		lsls	r1, r6, #1
 183              		.loc 1 635 21 view .LVU45
 184 0030 CDF80080 		str	r8, [sp]
 185 0034 2346     		mov	r3, r4
 186 0036 02AA     		add	r2, sp, #8
 187 0038 41F00101 		orr	r1, r1, #1
 188 003c 3846     		mov	r0, r7
 189 003e FFF7FEFF 		bl	HAL_I2C_Master_Receive
 190              	.LVL21:
 191              		.loc 1 635 19 view .LVU46
 192 0042 0346     		mov	r3, r0
 193              	.LVL22:
 636:Core/Src/bno055_support.c **** 
 637:Core/Src/bno055_support.c ****     if (BNO055_iERROR > 0) {
 194              		.loc 1 637 5 is_stmt 1 view .LVU47
 195              		.loc 1 637 8 is_stmt 0 view .LVU48
 196 0044 0028     		cmp	r0, #0
 197 0046 01DD     		ble	.L10
 638:Core/Src/bno055_support.c ****     	BNO055_iERROR = -1;
 198              		.loc 1 638 20 view .LVU49
 199 0048 4FF0FF33 		mov	r3, #-1
 200              	.L10:
 201              	.LVL23:
 639:Core/Src/bno055_support.c ****     }
 640:Core/Src/bno055_support.c **** 
 641:Core/Src/bno055_support.c ****     for (stringpos = BNO055_INIT_VALUE; stringpos < cnt; stringpos++)
 202              		.loc 1 641 5 is_stmt 1 view .LVU50
 203              		.loc 1 641 20 is_stmt 0 view .LVU51
 204 004c 0021     		movs	r1, #0
 205              		.loc 1 641 5 view .LVU52
 206 004e 09E0     		b	.L11
 207              	.LVL24:
 208              	.L12:
 642:Core/Src/bno055_support.c ****     {
 643:Core/Src/bno055_support.c ****         *(reg_data + stringpos) = array[stringpos];
 209              		.loc 1 643 9 is_stmt 1 discriminator 3 view .LVU53
 210              		.loc 1 643 40 is_stmt 0 discriminator 3 view .LVU54
 211 0050 01F11002 		add	r2, r1, #16
 212 0054 0DEB020C 		add	ip, sp, r2
 213 0058 1CF808CC 		ldrb	ip, [ip, #-8]	@ zero_extendqisi2
ARM GAS  /tmp/ccE3KnbY.s 			page 16


 214              		.loc 1 643 33 discriminator 3 view .LVU55
 215 005c 05F801C0 		strb	ip, [r5, r1]
 641:Core/Src/bno055_support.c ****     {
 216              		.loc 1 641 67 is_stmt 1 discriminator 3 view .LVU56
 217 0060 0131     		adds	r1, r1, #1
 218              	.LVL25:
 641:Core/Src/bno055_support.c ****     {
 219              		.loc 1 641 67 is_stmt 0 discriminator 3 view .LVU57
 220 0062 C9B2     		uxtb	r1, r1
 221              	.LVL26:
 222              	.L11:
 641:Core/Src/bno055_support.c ****     {
 223              		.loc 1 641 51 is_stmt 1 discriminator 1 view .LVU58
 224 0064 A142     		cmp	r1, r4
 225 0066 F3D3     		bcc	.L12
 644:Core/Src/bno055_support.c ****     }
 645:Core/Src/bno055_support.c **** 
 646:Core/Src/bno055_support.c ****     return (s8)BNO055_iERROR;
 226              		.loc 1 646 5 view .LVU59
 647:Core/Src/bno055_support.c **** }
 227              		.loc 1 647 1 is_stmt 0 view .LVU60
 228 0068 58B2     		sxtb	r0, r3
 229 006a 04B0     		add	sp, sp, #16
 230              	.LCFI5:
 231              		.cfi_def_cfa_offset 24
 232              		@ sp needed
 233 006c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 234              	.LVL27:
 235              	.L16:
 236              		.loc 1 647 1 view .LVU61
 237              		.align	2
 238              	.L15:
 239 0070 00000000 		.word	hi2c1
 240              		.cfi_endproc
 241              	.LFE126:
 243              		.section	.text.BNO055_delay_msek,"ax",%progbits
 244              		.align	1
 245              		.global	BNO055_delay_msek
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 250              	BNO055_delay_msek:
 251              	.LVL28:
 252              	.LFB127:
 648:Core/Src/bno055_support.c **** 
 649:Core/Src/bno055_support.c **** /*  Brief : The delay routine
 650:Core/Src/bno055_support.c ****  *  \param : delay in ms
 651:Core/Src/bno055_support.c ****  */
 652:Core/Src/bno055_support.c **** void BNO055_delay_msek(u32 msek)
 653:Core/Src/bno055_support.c **** {
 253              		.loc 1 653 1 is_stmt 1 view -0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		.loc 1 653 1 is_stmt 0 view .LVU63
 258 0000 08B5     		push	{r3, lr}
 259              	.LCFI6:
ARM GAS  /tmp/ccE3KnbY.s 			page 17


 260              		.cfi_def_cfa_offset 8
 261              		.cfi_offset 3, -8
 262              		.cfi_offset 14, -4
 654:Core/Src/bno055_support.c **** 	HAL_Delay(msek);
 263              		.loc 1 654 2 is_stmt 1 view .LVU64
 264 0002 FFF7FEFF 		bl	HAL_Delay
 265              	.LVL29:
 655:Core/Src/bno055_support.c **** }
 266              		.loc 1 655 1 is_stmt 0 view .LVU65
 267 0006 08BD     		pop	{r3, pc}
 268              		.cfi_endproc
 269              	.LFE127:
 271              		.section	.text.I2C_routine,"ax",%progbits
 272              		.align	1
 273              		.global	I2C_routine
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 278              	I2C_routine:
 279              	.LFB124:
 537:Core/Src/bno055_support.c ****     bno055.bus_write = BNO055_I2C_bus_write;
 280              		.loc 1 537 1 is_stmt 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 538:Core/Src/bno055_support.c ****     bno055.bus_read = BNO055_I2C_bus_read;
 285              		.loc 1 538 5 view .LVU67
 538:Core/Src/bno055_support.c ****     bno055.bus_read = BNO055_I2C_bus_read;
 286              		.loc 1 538 22 is_stmt 0 view .LVU68
 287 0000 054B     		ldr	r3, .L20
 288 0002 064A     		ldr	r2, .L20+4
 289 0004 DA60     		str	r2, [r3, #12]
 539:Core/Src/bno055_support.c ****     bno055.delay_msec = BNO055_delay_msek;
 290              		.loc 1 539 5 is_stmt 1 view .LVU69
 539:Core/Src/bno055_support.c ****     bno055.delay_msec = BNO055_delay_msek;
 291              		.loc 1 539 21 is_stmt 0 view .LVU70
 292 0006 064A     		ldr	r2, .L20+8
 293 0008 1A61     		str	r2, [r3, #16]
 540:Core/Src/bno055_support.c ****     bno055.dev_addr = BNO055_I2C_ADDR1;
 294              		.loc 1 540 5 is_stmt 1 view .LVU71
 540:Core/Src/bno055_support.c ****     bno055.dev_addr = BNO055_I2C_ADDR1;
 295              		.loc 1 540 23 is_stmt 0 view .LVU72
 296 000a 064A     		ldr	r2, .L20+12
 297 000c 5A61     		str	r2, [r3, #20]
 541:Core/Src/bno055_support.c **** 
 298              		.loc 1 541 5 is_stmt 1 view .LVU73
 541:Core/Src/bno055_support.c **** 
 299              		.loc 1 541 21 is_stmt 0 view .LVU74
 300 000e 2822     		movs	r2, #40
 301 0010 5A72     		strb	r2, [r3, #9]
 543:Core/Src/bno055_support.c **** }
 302              		.loc 1 543 5 is_stmt 1 view .LVU75
 544:Core/Src/bno055_support.c **** 
 303              		.loc 1 544 1 is_stmt 0 view .LVU76
 304 0012 0020     		movs	r0, #0
 305 0014 7047     		bx	lr
ARM GAS  /tmp/ccE3KnbY.s 			page 18


 306              	.L21:
 307 0016 00BF     		.align	2
 308              	.L20:
 309 0018 00000000 		.word	.LANCHOR0
 310 001c 00000000 		.word	BNO055_I2C_bus_write
 311 0020 00000000 		.word	BNO055_I2C_bus_read
 312 0024 00000000 		.word	BNO055_delay_msek
 313              		.cfi_endproc
 314              	.LFE124:
 316              		.section	.text.bno055_data_readout_template,"ax",%progbits
 317              		.align	1
 318              		.global	bno055_data_readout_template
 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
 323              	bno055_data_readout_template:
 324              	.LFB123:
 110:Core/Src/bno055_support.c ****     /* Variable used to return value of
 325              		.loc 1 110 1 is_stmt 1 view -0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 376
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329 0000 30B5     		push	{r4, r5, lr}
 330              	.LCFI7:
 331              		.cfi_def_cfa_offset 12
 332              		.cfi_offset 4, -12
 333              		.cfi_offset 5, -8
 334              		.cfi_offset 14, -4
 335 0002 DFB0     		sub	sp, sp, #380
 336              	.LCFI8:
 337              		.cfi_def_cfa_offset 392
 113:Core/Src/bno055_support.c **** 
 338              		.loc 1 113 5 view .LVU78
 339              	.LVL30:
 116:Core/Src/bno055_support.c **** 
 340              		.loc 1 116 5 view .LVU79
 120:Core/Src/bno055_support.c **** 
 341              		.loc 1 120 5 view .LVU80
 120:Core/Src/bno055_support.c **** 
 342              		.loc 1 120 9 is_stmt 0 view .LVU81
 343 0004 0024     		movs	r4, #0
 344 0006 ADF87641 		strh	r4, [sp, #374]	@ movhi
 123:Core/Src/bno055_support.c **** 
 345              		.loc 1 123 5 is_stmt 1 view .LVU82
 123:Core/Src/bno055_support.c **** 
 346              		.loc 1 123 9 is_stmt 0 view .LVU83
 347 000a ADF87441 		strh	r4, [sp, #372]	@ movhi
 126:Core/Src/bno055_support.c **** 
 348              		.loc 1 126 5 is_stmt 1 view .LVU84
 126:Core/Src/bno055_support.c **** 
 349              		.loc 1 126 9 is_stmt 0 view .LVU85
 350 000e ADF87241 		strh	r4, [sp, #370]	@ movhi
 129:Core/Src/bno055_support.c **** 
 351              		.loc 1 129 5 is_stmt 1 view .LVU86
 133:Core/Src/bno055_support.c **** 
 352              		.loc 1 133 5 view .LVU87
 133:Core/Src/bno055_support.c **** 
ARM GAS  /tmp/ccE3KnbY.s 			page 19


 353              		.loc 1 133 9 is_stmt 0 view .LVU88
 354 0012 ADF86A41 		strh	r4, [sp, #362]	@ movhi
 136:Core/Src/bno055_support.c **** 
 355              		.loc 1 136 5 is_stmt 1 view .LVU89
 136:Core/Src/bno055_support.c **** 
 356              		.loc 1 136 9 is_stmt 0 view .LVU90
 357 0016 ADF86841 		strh	r4, [sp, #360]	@ movhi
 139:Core/Src/bno055_support.c **** 
 358              		.loc 1 139 5 is_stmt 1 view .LVU91
 139:Core/Src/bno055_support.c **** 
 359              		.loc 1 139 9 is_stmt 0 view .LVU92
 360 001a ADF86641 		strh	r4, [sp, #358]	@ movhi
 142:Core/Src/bno055_support.c **** 
 361              		.loc 1 142 5 is_stmt 1 view .LVU93
 146:Core/Src/bno055_support.c **** 
 362              		.loc 1 146 5 view .LVU94
 146:Core/Src/bno055_support.c **** 
 363              		.loc 1 146 9 is_stmt 0 view .LVU95
 364 001e ADF85E41 		strh	r4, [sp, #350]	@ movhi
 149:Core/Src/bno055_support.c **** 
 365              		.loc 1 149 5 is_stmt 1 view .LVU96
 149:Core/Src/bno055_support.c **** 
 366              		.loc 1 149 9 is_stmt 0 view .LVU97
 367 0022 ADF85C41 		strh	r4, [sp, #348]	@ movhi
 152:Core/Src/bno055_support.c **** 
 368              		.loc 1 152 5 is_stmt 1 view .LVU98
 152:Core/Src/bno055_support.c **** 
 369              		.loc 1 152 9 is_stmt 0 view .LVU99
 370 0026 ADF85A41 		strh	r4, [sp, #346]	@ movhi
 155:Core/Src/bno055_support.c **** 
 371              		.loc 1 155 5 is_stmt 1 view .LVU100
 159:Core/Src/bno055_support.c **** 
 372              		.loc 1 159 5 view .LVU101
 159:Core/Src/bno055_support.c **** 
 373              		.loc 1 159 9 is_stmt 0 view .LVU102
 374 002a ADF85241 		strh	r4, [sp, #338]	@ movhi
 162:Core/Src/bno055_support.c **** 
 375              		.loc 1 162 5 is_stmt 1 view .LVU103
 162:Core/Src/bno055_support.c **** 
 376              		.loc 1 162 9 is_stmt 0 view .LVU104
 377 002e ADF85041 		strh	r4, [sp, #336]	@ movhi
 165:Core/Src/bno055_support.c **** 
 378              		.loc 1 165 5 is_stmt 1 view .LVU105
 165:Core/Src/bno055_support.c **** 
 379              		.loc 1 165 9 is_stmt 0 view .LVU106
 380 0032 ADF84E41 		strh	r4, [sp, #334]	@ movhi
 168:Core/Src/bno055_support.c **** 
 381              		.loc 1 168 5 is_stmt 1 view .LVU107
 172:Core/Src/bno055_support.c **** 
 382              		.loc 1 172 5 view .LVU108
 172:Core/Src/bno055_support.c **** 
 383              		.loc 1 172 9 is_stmt 0 view .LVU109
 384 0036 ADF84641 		strh	r4, [sp, #326]	@ movhi
 175:Core/Src/bno055_support.c **** 
 385              		.loc 1 175 5 is_stmt 1 view .LVU110
 175:Core/Src/bno055_support.c **** 
 386              		.loc 1 175 9 is_stmt 0 view .LVU111
ARM GAS  /tmp/ccE3KnbY.s 			page 20


 387 003a ADF84441 		strh	r4, [sp, #324]	@ movhi
 178:Core/Src/bno055_support.c **** 
 388              		.loc 1 178 5 is_stmt 1 view .LVU112
 178:Core/Src/bno055_support.c **** 
 389              		.loc 1 178 9 is_stmt 0 view .LVU113
 390 003e ADF84241 		strh	r4, [sp, #322]	@ movhi
 181:Core/Src/bno055_support.c **** 
 391              		.loc 1 181 5 is_stmt 1 view .LVU114
 181:Core/Src/bno055_support.c **** 
 392              		.loc 1 181 9 is_stmt 0 view .LVU115
 393 0042 ADF84041 		strh	r4, [sp, #320]	@ movhi
 184:Core/Src/bno055_support.c **** 
 394              		.loc 1 184 5 is_stmt 1 view .LVU116
 188:Core/Src/bno055_support.c **** 
 395              		.loc 1 188 5 view .LVU117
 188:Core/Src/bno055_support.c **** 
 396              		.loc 1 188 9 is_stmt 0 view .LVU118
 397 0046 ADF83641 		strh	r4, [sp, #310]	@ movhi
 191:Core/Src/bno055_support.c **** 
 398              		.loc 1 191 5 is_stmt 1 view .LVU119
 191:Core/Src/bno055_support.c **** 
 399              		.loc 1 191 9 is_stmt 0 view .LVU120
 400 004a ADF83441 		strh	r4, [sp, #308]	@ movhi
 194:Core/Src/bno055_support.c **** 
 401              		.loc 1 194 5 is_stmt 1 view .LVU121
 194:Core/Src/bno055_support.c **** 
 402              		.loc 1 194 9 is_stmt 0 view .LVU122
 403 004e ADF83241 		strh	r4, [sp, #306]	@ movhi
 197:Core/Src/bno055_support.c **** 
 404              		.loc 1 197 5 is_stmt 1 view .LVU123
 201:Core/Src/bno055_support.c **** 
 405              		.loc 1 201 5 view .LVU124
 201:Core/Src/bno055_support.c **** 
 406              		.loc 1 201 9 is_stmt 0 view .LVU125
 407 0052 ADF82A41 		strh	r4, [sp, #298]	@ movhi
 204:Core/Src/bno055_support.c **** 
 408              		.loc 1 204 5 is_stmt 1 view .LVU126
 204:Core/Src/bno055_support.c **** 
 409              		.loc 1 204 9 is_stmt 0 view .LVU127
 410 0056 ADF82841 		strh	r4, [sp, #296]	@ movhi
 207:Core/Src/bno055_support.c **** 
 411              		.loc 1 207 5 is_stmt 1 view .LVU128
 207:Core/Src/bno055_support.c **** 
 412              		.loc 1 207 9 is_stmt 0 view .LVU129
 413 005a ADF82641 		strh	r4, [sp, #294]	@ movhi
 210:Core/Src/bno055_support.c **** 
 414              		.loc 1 210 5 is_stmt 1 view .LVU130
 214:Core/Src/bno055_support.c **** 
 415              		.loc 1 214 5 view .LVU131
 214:Core/Src/bno055_support.c **** 
 416              		.loc 1 214 12 is_stmt 0 view .LVU132
 417 005e 0022     		movs	r2, #0
 418 0060 0023     		movs	r3, #0
 419 0062 CDE94623 		strd	r2, [sp, #280]
 217:Core/Src/bno055_support.c **** 
 420              		.loc 1 217 5 is_stmt 1 view .LVU133
 217:Core/Src/bno055_support.c **** 
ARM GAS  /tmp/ccE3KnbY.s 			page 21


 421              		.loc 1 217 12 is_stmt 0 view .LVU134
 422 0066 CDE94423 		strd	r2, [sp, #272]
 220:Core/Src/bno055_support.c **** 
 423              		.loc 1 220 5 is_stmt 1 view .LVU135
 220:Core/Src/bno055_support.c **** 
 424              		.loc 1 220 12 is_stmt 0 view .LVU136
 425 006a CDE94223 		strd	r2, [sp, #264]
 223:Core/Src/bno055_support.c **** 
 426              		.loc 1 223 5 is_stmt 1 view .LVU137
 227:Core/Src/bno055_support.c **** 
 427              		.loc 1 227 5 view .LVU138
 227:Core/Src/bno055_support.c **** 
 428              		.loc 1 227 12 is_stmt 0 view .LVU139
 429 006e CDE93A23 		strd	r2, [sp, #232]
 230:Core/Src/bno055_support.c **** 
 430              		.loc 1 230 5 is_stmt 1 view .LVU140
 230:Core/Src/bno055_support.c **** 
 431              		.loc 1 230 12 is_stmt 0 view .LVU141
 432 0072 CDE93823 		strd	r2, [sp, #224]
 233:Core/Src/bno055_support.c **** 
 433              		.loc 1 233 5 is_stmt 1 view .LVU142
 233:Core/Src/bno055_support.c **** 
 434              		.loc 1 233 12 is_stmt 0 view .LVU143
 435 0076 CDE93623 		strd	r2, [sp, #216]
 236:Core/Src/bno055_support.c **** 
 436              		.loc 1 236 5 is_stmt 1 view .LVU144
 240:Core/Src/bno055_support.c **** 
 437              		.loc 1 240 5 view .LVU145
 240:Core/Src/bno055_support.c **** 
 438              		.loc 1 240 12 is_stmt 0 view .LVU146
 439 007a CDE92E23 		strd	r2, [sp, #184]
 243:Core/Src/bno055_support.c **** 
 440              		.loc 1 243 5 is_stmt 1 view .LVU147
 243:Core/Src/bno055_support.c **** 
 441              		.loc 1 243 12 is_stmt 0 view .LVU148
 442 007e CDE92C23 		strd	r2, [sp, #176]
 246:Core/Src/bno055_support.c **** 
 443              		.loc 1 246 5 is_stmt 1 view .LVU149
 246:Core/Src/bno055_support.c **** 
 444              		.loc 1 246 12 is_stmt 0 view .LVU150
 445 0082 CDE92A23 		strd	r2, [sp, #168]
 249:Core/Src/bno055_support.c **** 
 446              		.loc 1 249 5 is_stmt 1 view .LVU151
 255:Core/Src/bno055_support.c **** 
 447              		.loc 1 255 5 view .LVU152
 255:Core/Src/bno055_support.c **** 
 448              		.loc 1 255 12 is_stmt 0 view .LVU153
 449 0086 CDE92223 		strd	r2, [sp, #136]
 259:Core/Src/bno055_support.c **** 
 450              		.loc 1 259 5 is_stmt 1 view .LVU154
 259:Core/Src/bno055_support.c **** 
 451              		.loc 1 259 12 is_stmt 0 view .LVU155
 452 008a CDE92023 		strd	r2, [sp, #128]
 263:Core/Src/bno055_support.c **** 
 453              		.loc 1 263 5 is_stmt 1 view .LVU156
 263:Core/Src/bno055_support.c **** 
 454              		.loc 1 263 12 is_stmt 0 view .LVU157
ARM GAS  /tmp/ccE3KnbY.s 			page 22


 455 008e CDE91E23 		strd	r2, [sp, #120]
 267:Core/Src/bno055_support.c **** 
 456              		.loc 1 267 5 is_stmt 1 view .LVU158
 271:Core/Src/bno055_support.c **** 
 457              		.loc 1 271 5 view .LVU159
 271:Core/Src/bno055_support.c **** 
 458              		.loc 1 271 12 is_stmt 0 view .LVU160
 459 0092 CDE91623 		strd	r2, [sp, #88]
 274:Core/Src/bno055_support.c **** 
 460              		.loc 1 274 5 is_stmt 1 view .LVU161
 274:Core/Src/bno055_support.c **** 
 461              		.loc 1 274 12 is_stmt 0 view .LVU162
 462 0096 CDE91423 		strd	r2, [sp, #80]
 277:Core/Src/bno055_support.c **** 
 463              		.loc 1 277 5 is_stmt 1 view .LVU163
 277:Core/Src/bno055_support.c **** 
 464              		.loc 1 277 12 is_stmt 0 view .LVU164
 465 009a CDE91223 		strd	r2, [sp, #72]
 280:Core/Src/bno055_support.c **** 
 466              		.loc 1 280 5 is_stmt 1 view .LVU165
 284:Core/Src/bno055_support.c **** 
 467              		.loc 1 284 5 view .LVU166
 284:Core/Src/bno055_support.c **** 
 468              		.loc 1 284 12 is_stmt 0 view .LVU167
 469 009e CDE90A23 		strd	r2, [sp, #40]
 287:Core/Src/bno055_support.c **** 
 470              		.loc 1 287 5 is_stmt 1 view .LVU168
 287:Core/Src/bno055_support.c **** 
 471              		.loc 1 287 12 is_stmt 0 view .LVU169
 472 00a2 CDE90823 		strd	r2, [sp, #32]
 290:Core/Src/bno055_support.c **** 
 473              		.loc 1 290 5 is_stmt 1 view .LVU170
 290:Core/Src/bno055_support.c **** 
 474              		.loc 1 290 12 is_stmt 0 view .LVU171
 475 00a6 CDE90623 		strd	r2, [sp, #24]
 293:Core/Src/bno055_support.c **** 
 476              		.loc 1 293 5 is_stmt 1 view .LVU172
 302:Core/Src/bno055_support.c **** #endif
 477              		.loc 1 302 5 view .LVU173
 478 00aa FFF7FEFF 		bl	I2C_routine
 479              	.LVL31:
 319:Core/Src/bno055_support.c **** 
 480              		.loc 1 319 5 view .LVU174
 319:Core/Src/bno055_support.c **** 
 481              		.loc 1 319 14 is_stmt 0 view .LVU175
 482 00ae 9448     		ldr	r0, .L24
 483 00b0 FFF7FEFF 		bl	bno055_init
 484              	.LVL32:
 485 00b4 0546     		mov	r5, r0
 486              	.LVL33:
 327:Core/Src/bno055_support.c **** 
 487              		.loc 1 327 5 is_stmt 1 view .LVU176
 330:Core/Src/bno055_support.c **** 
 488              		.loc 1 330 5 view .LVU177
 330:Core/Src/bno055_support.c **** 
 489              		.loc 1 330 15 is_stmt 0 view .LVU178
 490 00b6 2046     		mov	r0, r4
ARM GAS  /tmp/ccE3KnbY.s 			page 23


 491              	.LVL34:
 330:Core/Src/bno055_support.c **** 
 492              		.loc 1 330 15 view .LVU179
 493 00b8 FFF7FEFF 		bl	bno055_set_power_mode
 494              	.LVL35:
 330:Core/Src/bno055_support.c **** 
 495              		.loc 1 330 12 view .LVU180
 496 00bc 4419     		adds	r4, r0, r5
 497              	.LVL36:
 366:Core/Src/bno055_support.c **** 
 498              		.loc 1 366 5 is_stmt 1 view .LVU181
 366:Core/Src/bno055_support.c **** 
 499              		.loc 1 366 15 is_stmt 0 view .LVU182
 500 00be 0720     		movs	r0, #7
 501 00c0 FFF7FEFF 		bl	bno055_set_operation_mode
 502              	.LVL37:
 366:Core/Src/bno055_support.c **** 
 503              		.loc 1 366 12 view .LVU183
 504 00c4 0444     		add	r4, r4, r0
 505              	.LVL38:
 371:Core/Src/bno055_support.c ****     comres += bno055_read_accel_y(&accel_datay);
 506              		.loc 1 371 5 is_stmt 1 view .LVU184
 371:Core/Src/bno055_support.c ****     comres += bno055_read_accel_y(&accel_datay);
 507              		.loc 1 371 15 is_stmt 0 view .LVU185
 508 00c6 0DF5BB70 		add	r0, sp, #374
 509 00ca FFF7FEFF 		bl	bno055_read_accel_x
 510              	.LVL39:
 371:Core/Src/bno055_support.c ****     comres += bno055_read_accel_y(&accel_datay);
 511              		.loc 1 371 12 view .LVU186
 512 00ce 0444     		add	r4, r4, r0
 513              	.LVL40:
 372:Core/Src/bno055_support.c ****     comres += bno055_read_accel_z(&accel_dataz);
 514              		.loc 1 372 5 is_stmt 1 view .LVU187
 372:Core/Src/bno055_support.c ****     comres += bno055_read_accel_z(&accel_dataz);
 515              		.loc 1 372 15 is_stmt 0 view .LVU188
 516 00d0 5DA8     		add	r0, sp, #372
 517 00d2 FFF7FEFF 		bl	bno055_read_accel_y
 518              	.LVL41:
 372:Core/Src/bno055_support.c ****     comres += bno055_read_accel_z(&accel_dataz);
 519              		.loc 1 372 12 view .LVU189
 520 00d6 0444     		add	r4, r4, r0
 521              	.LVL42:
 373:Core/Src/bno055_support.c ****     comres += bno055_read_accel_xyz(&accel_xyz);
 522              		.loc 1 373 5 is_stmt 1 view .LVU190
 373:Core/Src/bno055_support.c ****     comres += bno055_read_accel_xyz(&accel_xyz);
 523              		.loc 1 373 15 is_stmt 0 view .LVU191
 524 00d8 0DF5B970 		add	r0, sp, #370
 525 00dc FFF7FEFF 		bl	bno055_read_accel_z
 526              	.LVL43:
 373:Core/Src/bno055_support.c ****     comres += bno055_read_accel_xyz(&accel_xyz);
 527              		.loc 1 373 12 view .LVU192
 528 00e0 0444     		add	r4, r4, r0
 529              	.LVL44:
 374:Core/Src/bno055_support.c **** 
 530              		.loc 1 374 5 is_stmt 1 view .LVU193
 374:Core/Src/bno055_support.c **** 
 531              		.loc 1 374 15 is_stmt 0 view .LVU194
ARM GAS  /tmp/ccE3KnbY.s 			page 24


 532 00e2 5BA8     		add	r0, sp, #364
 533 00e4 FFF7FEFF 		bl	bno055_read_accel_xyz
 534              	.LVL45:
 374:Core/Src/bno055_support.c **** 
 535              		.loc 1 374 12 view .LVU195
 536 00e8 0444     		add	r4, r4, r0
 537              	.LVL46:
 379:Core/Src/bno055_support.c ****     comres += bno055_read_mag_y(&mag_datay);
 538              		.loc 1 379 5 is_stmt 1 view .LVU196
 379:Core/Src/bno055_support.c ****     comres += bno055_read_mag_y(&mag_datay);
 539              		.loc 1 379 15 is_stmt 0 view .LVU197
 540 00ea 0DF5B570 		add	r0, sp, #362
 541 00ee FFF7FEFF 		bl	bno055_read_mag_x
 542              	.LVL47:
 379:Core/Src/bno055_support.c ****     comres += bno055_read_mag_y(&mag_datay);
 543              		.loc 1 379 12 view .LVU198
 544 00f2 0444     		add	r4, r4, r0
 545              	.LVL48:
 380:Core/Src/bno055_support.c ****     comres += bno055_read_mag_z(&mag_dataz);
 546              		.loc 1 380 5 is_stmt 1 view .LVU199
 380:Core/Src/bno055_support.c ****     comres += bno055_read_mag_z(&mag_dataz);
 547              		.loc 1 380 15 is_stmt 0 view .LVU200
 548 00f4 5AA8     		add	r0, sp, #360
 549 00f6 FFF7FEFF 		bl	bno055_read_mag_y
 550              	.LVL49:
 380:Core/Src/bno055_support.c ****     comres += bno055_read_mag_z(&mag_dataz);
 551              		.loc 1 380 12 view .LVU201
 552 00fa 0444     		add	r4, r4, r0
 553              	.LVL50:
 381:Core/Src/bno055_support.c ****     comres += bno055_read_mag_xyz(&mag_xyz);
 554              		.loc 1 381 5 is_stmt 1 view .LVU202
 381:Core/Src/bno055_support.c ****     comres += bno055_read_mag_xyz(&mag_xyz);
 555              		.loc 1 381 15 is_stmt 0 view .LVU203
 556 00fc 0DF5B370 		add	r0, sp, #358
 557 0100 FFF7FEFF 		bl	bno055_read_mag_z
 558              	.LVL51:
 381:Core/Src/bno055_support.c ****     comres += bno055_read_mag_xyz(&mag_xyz);
 559              		.loc 1 381 12 view .LVU204
 560 0104 0444     		add	r4, r4, r0
 561              	.LVL52:
 382:Core/Src/bno055_support.c **** 
 562              		.loc 1 382 5 is_stmt 1 view .LVU205
 382:Core/Src/bno055_support.c **** 
 563              		.loc 1 382 15 is_stmt 0 view .LVU206
 564 0106 58A8     		add	r0, sp, #352
 565 0108 FFF7FEFF 		bl	bno055_read_mag_xyz
 566              	.LVL53:
 382:Core/Src/bno055_support.c **** 
 567              		.loc 1 382 12 view .LVU207
 568 010c 0444     		add	r4, r4, r0
 569              	.LVL54:
 387:Core/Src/bno055_support.c ****     comres += bno055_read_gyro_y(&gyro_datay);
 570              		.loc 1 387 5 is_stmt 1 view .LVU208
 387:Core/Src/bno055_support.c ****     comres += bno055_read_gyro_y(&gyro_datay);
 571              		.loc 1 387 15 is_stmt 0 view .LVU209
 572 010e 0DF5AF70 		add	r0, sp, #350
 573 0112 FFF7FEFF 		bl	bno055_read_gyro_x
ARM GAS  /tmp/ccE3KnbY.s 			page 25


 574              	.LVL55:
 387:Core/Src/bno055_support.c ****     comres += bno055_read_gyro_y(&gyro_datay);
 575              		.loc 1 387 12 view .LVU210
 576 0116 0444     		add	r4, r4, r0
 577              	.LVL56:
 388:Core/Src/bno055_support.c ****     comres += bno055_read_gyro_z(&gyro_dataz);
 578              		.loc 1 388 5 is_stmt 1 view .LVU211
 388:Core/Src/bno055_support.c ****     comres += bno055_read_gyro_z(&gyro_dataz);
 579              		.loc 1 388 15 is_stmt 0 view .LVU212
 580 0118 57A8     		add	r0, sp, #348
 581 011a FFF7FEFF 		bl	bno055_read_gyro_y
 582              	.LVL57:
 388:Core/Src/bno055_support.c ****     comres += bno055_read_gyro_z(&gyro_dataz);
 583              		.loc 1 388 12 view .LVU213
 584 011e 0444     		add	r4, r4, r0
 585              	.LVL58:
 389:Core/Src/bno055_support.c ****     comres += bno055_read_gyro_xyz(&gyro_xyz);
 586              		.loc 1 389 5 is_stmt 1 view .LVU214
 389:Core/Src/bno055_support.c ****     comres += bno055_read_gyro_xyz(&gyro_xyz);
 587              		.loc 1 389 15 is_stmt 0 view .LVU215
 588 0120 0DF5AD70 		add	r0, sp, #346
 589 0124 FFF7FEFF 		bl	bno055_read_gyro_z
 590              	.LVL59:
 389:Core/Src/bno055_support.c ****     comres += bno055_read_gyro_xyz(&gyro_xyz);
 591              		.loc 1 389 12 view .LVU216
 592 0128 0444     		add	r4, r4, r0
 593              	.LVL60:
 390:Core/Src/bno055_support.c **** 
 594              		.loc 1 390 5 is_stmt 1 view .LVU217
 390:Core/Src/bno055_support.c **** 
 595              		.loc 1 390 15 is_stmt 0 view .LVU218
 596 012a 55A8     		add	r0, sp, #340
 597 012c FFF7FEFF 		bl	bno055_read_gyro_xyz
 598              	.LVL61:
 390:Core/Src/bno055_support.c **** 
 599              		.loc 1 390 12 view .LVU219
 600 0130 0444     		add	r4, r4, r0
 601              	.LVL62:
 409:Core/Src/bno055_support.c **** 
 602              		.loc 1 409 5 is_stmt 1 view .LVU220
 409:Core/Src/bno055_support.c **** 
 603              		.loc 1 409 15 is_stmt 0 view .LVU221
 604 0132 0C20     		movs	r0, #12
 605 0134 FFF7FEFF 		bl	bno055_set_operation_mode
 606              	.LVL63:
 409:Core/Src/bno055_support.c **** 
 607              		.loc 1 409 12 view .LVU222
 608 0138 0444     		add	r4, r4, r0
 609              	.LVL64:
 414:Core/Src/bno055_support.c ****     comres += bno055_read_euler_r(&euler_data_r);
 610              		.loc 1 414 5 is_stmt 1 view .LVU223
 414:Core/Src/bno055_support.c ****     comres += bno055_read_euler_r(&euler_data_r);
 611              		.loc 1 414 15 is_stmt 0 view .LVU224
 612 013a 0DF5A970 		add	r0, sp, #338
 613 013e FFF7FEFF 		bl	bno055_read_euler_h
 614              	.LVL65:
 414:Core/Src/bno055_support.c ****     comres += bno055_read_euler_r(&euler_data_r);
ARM GAS  /tmp/ccE3KnbY.s 			page 26


 615              		.loc 1 414 12 view .LVU225
 616 0142 0444     		add	r4, r4, r0
 617              	.LVL66:
 415:Core/Src/bno055_support.c ****     comres += bno055_read_euler_p(&euler_data_p);
 618              		.loc 1 415 5 is_stmt 1 view .LVU226
 415:Core/Src/bno055_support.c ****     comres += bno055_read_euler_p(&euler_data_p);
 619              		.loc 1 415 15 is_stmt 0 view .LVU227
 620 0144 54A8     		add	r0, sp, #336
 621 0146 FFF7FEFF 		bl	bno055_read_euler_r
 622              	.LVL67:
 415:Core/Src/bno055_support.c ****     comres += bno055_read_euler_p(&euler_data_p);
 623              		.loc 1 415 12 view .LVU228
 624 014a 0444     		add	r4, r4, r0
 625              	.LVL68:
 416:Core/Src/bno055_support.c ****     comres += bno055_read_euler_hrp(&euler_hrp);
 626              		.loc 1 416 5 is_stmt 1 view .LVU229
 416:Core/Src/bno055_support.c ****     comres += bno055_read_euler_hrp(&euler_hrp);
 627              		.loc 1 416 15 is_stmt 0 view .LVU230
 628 014c 0DF5A770 		add	r0, sp, #334
 629 0150 FFF7FEFF 		bl	bno055_read_euler_p
 630              	.LVL69:
 416:Core/Src/bno055_support.c ****     comres += bno055_read_euler_hrp(&euler_hrp);
 631              		.loc 1 416 12 view .LVU231
 632 0154 0444     		add	r4, r4, r0
 633              	.LVL70:
 417:Core/Src/bno055_support.c **** 
 634              		.loc 1 417 5 is_stmt 1 view .LVU232
 417:Core/Src/bno055_support.c **** 
 635              		.loc 1 417 15 is_stmt 0 view .LVU233
 636 0156 52A8     		add	r0, sp, #328
 637 0158 FFF7FEFF 		bl	bno055_read_euler_hrp
 638              	.LVL71:
 417:Core/Src/bno055_support.c **** 
 639              		.loc 1 417 12 view .LVU234
 640 015c 0444     		add	r4, r4, r0
 641              	.LVL72:
 422:Core/Src/bno055_support.c ****     comres += bno055_read_quaternion_x(&quaternion_data_x);
 642              		.loc 1 422 5 is_stmt 1 view .LVU235
 422:Core/Src/bno055_support.c ****     comres += bno055_read_quaternion_x(&quaternion_data_x);
 643              		.loc 1 422 15 is_stmt 0 view .LVU236
 644 015e 0DF5A370 		add	r0, sp, #326
 645 0162 FFF7FEFF 		bl	bno055_read_quaternion_w
 646              	.LVL73:
 422:Core/Src/bno055_support.c ****     comres += bno055_read_quaternion_x(&quaternion_data_x);
 647              		.loc 1 422 12 view .LVU237
 648 0166 0444     		add	r4, r4, r0
 649              	.LVL74:
 423:Core/Src/bno055_support.c ****     comres += bno055_read_quaternion_y(&quaternion_data_y);
 650              		.loc 1 423 5 is_stmt 1 view .LVU238
 423:Core/Src/bno055_support.c ****     comres += bno055_read_quaternion_y(&quaternion_data_y);
 651              		.loc 1 423 15 is_stmt 0 view .LVU239
 652 0168 51A8     		add	r0, sp, #324
 653 016a FFF7FEFF 		bl	bno055_read_quaternion_x
 654              	.LVL75:
 423:Core/Src/bno055_support.c ****     comres += bno055_read_quaternion_y(&quaternion_data_y);
 655              		.loc 1 423 12 view .LVU240
 656 016e 0444     		add	r4, r4, r0
ARM GAS  /tmp/ccE3KnbY.s 			page 27


 657              	.LVL76:
 424:Core/Src/bno055_support.c ****     comres += bno055_read_quaternion_z(&quaternion_data_z);
 658              		.loc 1 424 5 is_stmt 1 view .LVU241
 424:Core/Src/bno055_support.c ****     comres += bno055_read_quaternion_z(&quaternion_data_z);
 659              		.loc 1 424 15 is_stmt 0 view .LVU242
 660 0170 0DF5A170 		add	r0, sp, #322
 661 0174 FFF7FEFF 		bl	bno055_read_quaternion_y
 662              	.LVL77:
 424:Core/Src/bno055_support.c ****     comres += bno055_read_quaternion_z(&quaternion_data_z);
 663              		.loc 1 424 12 view .LVU243
 664 0178 0444     		add	r4, r4, r0
 665              	.LVL78:
 425:Core/Src/bno055_support.c ****     comres += bno055_read_quaternion_wxyz(&quaternion_wxyz);
 666              		.loc 1 425 5 is_stmt 1 view .LVU244
 425:Core/Src/bno055_support.c ****     comres += bno055_read_quaternion_wxyz(&quaternion_wxyz);
 667              		.loc 1 425 15 is_stmt 0 view .LVU245
 668 017a 50A8     		add	r0, sp, #320
 669 017c FFF7FEFF 		bl	bno055_read_quaternion_z
 670              	.LVL79:
 425:Core/Src/bno055_support.c ****     comres += bno055_read_quaternion_wxyz(&quaternion_wxyz);
 671              		.loc 1 425 12 view .LVU246
 672 0180 0444     		add	r4, r4, r0
 673              	.LVL80:
 426:Core/Src/bno055_support.c **** 
 674              		.loc 1 426 5 is_stmt 1 view .LVU247
 426:Core/Src/bno055_support.c **** 
 675              		.loc 1 426 15 is_stmt 0 view .LVU248
 676 0182 4EA8     		add	r0, sp, #312
 677 0184 FFF7FEFF 		bl	bno055_read_quaternion_wxyz
 678              	.LVL81:
 426:Core/Src/bno055_support.c **** 
 679              		.loc 1 426 12 view .LVU249
 680 0188 0444     		add	r4, r4, r0
 681              	.LVL82:
 431:Core/Src/bno055_support.c ****     comres += bno055_read_linear_accel_y(&linear_accel_data_y);
 682              		.loc 1 431 5 is_stmt 1 view .LVU250
 431:Core/Src/bno055_support.c ****     comres += bno055_read_linear_accel_y(&linear_accel_data_y);
 683              		.loc 1 431 15 is_stmt 0 view .LVU251
 684 018a 0DF59B70 		add	r0, sp, #310
 685 018e FFF7FEFF 		bl	bno055_read_linear_accel_x
 686              	.LVL83:
 431:Core/Src/bno055_support.c ****     comres += bno055_read_linear_accel_y(&linear_accel_data_y);
 687              		.loc 1 431 12 view .LVU252
 688 0192 0444     		add	r4, r4, r0
 689              	.LVL84:
 432:Core/Src/bno055_support.c ****     comres += bno055_read_linear_accel_z(&linear_accel_data_z);
 690              		.loc 1 432 5 is_stmt 1 view .LVU253
 432:Core/Src/bno055_support.c ****     comres += bno055_read_linear_accel_z(&linear_accel_data_z);
 691              		.loc 1 432 15 is_stmt 0 view .LVU254
 692 0194 4DA8     		add	r0, sp, #308
 693 0196 FFF7FEFF 		bl	bno055_read_linear_accel_y
 694              	.LVL85:
 432:Core/Src/bno055_support.c ****     comres += bno055_read_linear_accel_z(&linear_accel_data_z);
 695              		.loc 1 432 12 view .LVU255
 696 019a 0444     		add	r4, r4, r0
 697              	.LVL86:
 433:Core/Src/bno055_support.c ****     comres += bno055_read_linear_accel_xyz(&linear_acce_xyz);
ARM GAS  /tmp/ccE3KnbY.s 			page 28


 698              		.loc 1 433 5 is_stmt 1 view .LVU256
 433:Core/Src/bno055_support.c ****     comres += bno055_read_linear_accel_xyz(&linear_acce_xyz);
 699              		.loc 1 433 15 is_stmt 0 view .LVU257
 700 019c 0DF59970 		add	r0, sp, #306
 701 01a0 FFF7FEFF 		bl	bno055_read_linear_accel_z
 702              	.LVL87:
 433:Core/Src/bno055_support.c ****     comres += bno055_read_linear_accel_xyz(&linear_acce_xyz);
 703              		.loc 1 433 12 view .LVU258
 704 01a4 0444     		add	r4, r4, r0
 705              	.LVL88:
 434:Core/Src/bno055_support.c **** 
 706              		.loc 1 434 5 is_stmt 1 view .LVU259
 434:Core/Src/bno055_support.c **** 
 707              		.loc 1 434 15 is_stmt 0 view .LVU260
 708 01a6 4BA8     		add	r0, sp, #300
 709 01a8 FFF7FEFF 		bl	bno055_read_linear_accel_xyz
 710              	.LVL89:
 434:Core/Src/bno055_support.c **** 
 711              		.loc 1 434 12 view .LVU261
 712 01ac 0444     		add	r4, r4, r0
 713              	.LVL90:
 439:Core/Src/bno055_support.c ****     comres += bno055_read_gravity_y(&gravity_data_y);
 714              		.loc 1 439 5 is_stmt 1 view .LVU262
 439:Core/Src/bno055_support.c ****     comres += bno055_read_gravity_y(&gravity_data_y);
 715              		.loc 1 439 15 is_stmt 0 view .LVU263
 716 01ae 0DF59570 		add	r0, sp, #298
 717 01b2 FFF7FEFF 		bl	bno055_read_gravity_x
 718              	.LVL91:
 439:Core/Src/bno055_support.c ****     comres += bno055_read_gravity_y(&gravity_data_y);
 719              		.loc 1 439 12 view .LVU264
 720 01b6 0444     		add	r4, r4, r0
 721              	.LVL92:
 440:Core/Src/bno055_support.c ****     comres += bno055_read_gravity_z(&gravity_data_z);
 722              		.loc 1 440 5 is_stmt 1 view .LVU265
 440:Core/Src/bno055_support.c ****     comres += bno055_read_gravity_z(&gravity_data_z);
 723              		.loc 1 440 15 is_stmt 0 view .LVU266
 724 01b8 4AA8     		add	r0, sp, #296
 725 01ba FFF7FEFF 		bl	bno055_read_gravity_y
 726              	.LVL93:
 440:Core/Src/bno055_support.c ****     comres += bno055_read_gravity_z(&gravity_data_z);
 727              		.loc 1 440 12 view .LVU267
 728 01be 0444     		add	r4, r4, r0
 729              	.LVL94:
 441:Core/Src/bno055_support.c ****     comres += bno055_read_gravity_xyz(&gravity_xyz);
 730              		.loc 1 441 5 is_stmt 1 view .LVU268
 441:Core/Src/bno055_support.c ****     comres += bno055_read_gravity_xyz(&gravity_xyz);
 731              		.loc 1 441 15 is_stmt 0 view .LVU269
 732 01c0 0DF59370 		add	r0, sp, #294
 733 01c4 FFF7FEFF 		bl	bno055_read_gravity_z
 734              	.LVL95:
 441:Core/Src/bno055_support.c ****     comres += bno055_read_gravity_xyz(&gravity_xyz);
 735              		.loc 1 441 12 view .LVU270
 736 01c8 0444     		add	r4, r4, r0
 737              	.LVL96:
 442:Core/Src/bno055_support.c **** 
 738              		.loc 1 442 5 is_stmt 1 view .LVU271
 442:Core/Src/bno055_support.c **** 
ARM GAS  /tmp/ccE3KnbY.s 			page 29


 739              		.loc 1 442 15 is_stmt 0 view .LVU272
 740 01ca 48A8     		add	r0, sp, #288
 741 01cc FFF7FEFF 		bl	bno055_read_gravity_xyz
 742              	.LVL97:
 442:Core/Src/bno055_support.c **** 
 743              		.loc 1 442 12 view .LVU273
 744 01d0 0444     		add	r4, r4, r0
 745              	.LVL98:
 449:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_x_mg(&d_accel_datax);
 746              		.loc 1 449 5 is_stmt 1 view .LVU274
 449:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_x_mg(&d_accel_datax);
 747              		.loc 1 449 15 is_stmt 0 view .LVU275
 748 01d2 46A8     		add	r0, sp, #280
 749 01d4 FFF7FEFF 		bl	bno055_convert_double_accel_x_msq
 750              	.LVL99:
 449:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_x_mg(&d_accel_datax);
 751              		.loc 1 449 12 view .LVU276
 752 01d8 0444     		add	r4, r4, r0
 753              	.LVL100:
 450:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_y_msq(&d_accel_datay);
 754              		.loc 1 450 5 is_stmt 1 view .LVU277
 450:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_y_msq(&d_accel_datay);
 755              		.loc 1 450 15 is_stmt 0 view .LVU278
 756 01da 46A8     		add	r0, sp, #280
 757 01dc FFF7FEFF 		bl	bno055_convert_double_accel_x_mg
 758              	.LVL101:
 450:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_y_msq(&d_accel_datay);
 759              		.loc 1 450 12 view .LVU279
 760 01e0 0444     		add	r4, r4, r0
 761              	.LVL102:
 451:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_y_mg(&d_accel_datay);
 762              		.loc 1 451 5 is_stmt 1 view .LVU280
 451:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_y_mg(&d_accel_datay);
 763              		.loc 1 451 15 is_stmt 0 view .LVU281
 764 01e2 44A8     		add	r0, sp, #272
 765 01e4 FFF7FEFF 		bl	bno055_convert_double_accel_y_msq
 766              	.LVL103:
 451:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_y_mg(&d_accel_datay);
 767              		.loc 1 451 12 view .LVU282
 768 01e8 0444     		add	r4, r4, r0
 769              	.LVL104:
 452:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_z_msq(&d_accel_dataz);
 770              		.loc 1 452 5 is_stmt 1 view .LVU283
 452:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_z_msq(&d_accel_dataz);
 771              		.loc 1 452 15 is_stmt 0 view .LVU284
 772 01ea 44A8     		add	r0, sp, #272
 773 01ec FFF7FEFF 		bl	bno055_convert_double_accel_y_mg
 774              	.LVL105:
 452:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_z_msq(&d_accel_dataz);
 775              		.loc 1 452 12 view .LVU285
 776 01f0 0444     		add	r4, r4, r0
 777              	.LVL106:
 453:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_z_mg(&d_accel_dataz);
 778              		.loc 1 453 5 is_stmt 1 view .LVU286
 453:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_z_mg(&d_accel_dataz);
 779              		.loc 1 453 15 is_stmt 0 view .LVU287
 780 01f2 42A8     		add	r0, sp, #264
ARM GAS  /tmp/ccE3KnbY.s 			page 30


 781 01f4 FFF7FEFF 		bl	bno055_convert_double_accel_z_msq
 782              	.LVL107:
 453:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_z_mg(&d_accel_dataz);
 783              		.loc 1 453 12 view .LVU288
 784 01f8 0444     		add	r4, r4, r0
 785              	.LVL108:
 454:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_xyz_msq(&d_accel_xyz);
 786              		.loc 1 454 5 is_stmt 1 view .LVU289
 454:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_xyz_msq(&d_accel_xyz);
 787              		.loc 1 454 15 is_stmt 0 view .LVU290
 788 01fa 42A8     		add	r0, sp, #264
 789 01fc FFF7FEFF 		bl	bno055_convert_double_accel_z_mg
 790              	.LVL109:
 454:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_xyz_msq(&d_accel_xyz);
 791              		.loc 1 454 12 view .LVU291
 792 0200 0444     		add	r4, r4, r0
 793              	.LVL110:
 455:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_xyz_mg(&d_accel_xyz);
 794              		.loc 1 455 5 is_stmt 1 view .LVU292
 455:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_xyz_mg(&d_accel_xyz);
 795              		.loc 1 455 15 is_stmt 0 view .LVU293
 796 0202 3CA8     		add	r0, sp, #240
 797 0204 FFF7FEFF 		bl	bno055_convert_double_accel_xyz_msq
 798              	.LVL111:
 455:Core/Src/bno055_support.c ****     comres += bno055_convert_double_accel_xyz_mg(&d_accel_xyz);
 799              		.loc 1 455 12 view .LVU294
 800 0208 0444     		add	r4, r4, r0
 801              	.LVL112:
 456:Core/Src/bno055_support.c **** 
 802              		.loc 1 456 5 is_stmt 1 view .LVU295
 456:Core/Src/bno055_support.c **** 
 803              		.loc 1 456 15 is_stmt 0 view .LVU296
 804 020a 3CA8     		add	r0, sp, #240
 805 020c FFF7FEFF 		bl	bno055_convert_double_accel_xyz_mg
 806              	.LVL113:
 456:Core/Src/bno055_support.c **** 
 807              		.loc 1 456 12 view .LVU297
 808 0210 0444     		add	r4, r4, r0
 809              	.LVL114:
 460:Core/Src/bno055_support.c ****     comres += bno055_convert_double_mag_y_uT(&d_mag_datay);
 810              		.loc 1 460 5 is_stmt 1 view .LVU298
 460:Core/Src/bno055_support.c ****     comres += bno055_convert_double_mag_y_uT(&d_mag_datay);
 811              		.loc 1 460 15 is_stmt 0 view .LVU299
 812 0212 3AA8     		add	r0, sp, #232
 813 0214 FFF7FEFF 		bl	bno055_convert_double_mag_x_uT
 814              	.LVL115:
 460:Core/Src/bno055_support.c ****     comres += bno055_convert_double_mag_y_uT(&d_mag_datay);
 815              		.loc 1 460 12 view .LVU300
 816 0218 0444     		add	r4, r4, r0
 817              	.LVL116:
 461:Core/Src/bno055_support.c ****     comres += bno055_convert_double_mag_z_uT(&d_mag_dataz);
 818              		.loc 1 461 5 is_stmt 1 view .LVU301
 461:Core/Src/bno055_support.c ****     comres += bno055_convert_double_mag_z_uT(&d_mag_dataz);
 819              		.loc 1 461 15 is_stmt 0 view .LVU302
 820 021a 38A8     		add	r0, sp, #224
 821 021c FFF7FEFF 		bl	bno055_convert_double_mag_y_uT
 822              	.LVL117:
ARM GAS  /tmp/ccE3KnbY.s 			page 31


 461:Core/Src/bno055_support.c ****     comres += bno055_convert_double_mag_z_uT(&d_mag_dataz);
 823              		.loc 1 461 12 view .LVU303
 824 0220 0444     		add	r4, r4, r0
 825              	.LVL118:
 462:Core/Src/bno055_support.c ****     comres += bno055_convert_double_mag_xyz_uT(&d_mag_xyz);
 826              		.loc 1 462 5 is_stmt 1 view .LVU304
 462:Core/Src/bno055_support.c ****     comres += bno055_convert_double_mag_xyz_uT(&d_mag_xyz);
 827              		.loc 1 462 15 is_stmt 0 view .LVU305
 828 0222 36A8     		add	r0, sp, #216
 829 0224 FFF7FEFF 		bl	bno055_convert_double_mag_z_uT
 830              	.LVL119:
 462:Core/Src/bno055_support.c ****     comres += bno055_convert_double_mag_xyz_uT(&d_mag_xyz);
 831              		.loc 1 462 12 view .LVU306
 832 0228 0444     		add	r4, r4, r0
 833              	.LVL120:
 463:Core/Src/bno055_support.c **** 
 834              		.loc 1 463 5 is_stmt 1 view .LVU307
 463:Core/Src/bno055_support.c **** 
 835              		.loc 1 463 15 is_stmt 0 view .LVU308
 836 022a 30A8     		add	r0, sp, #192
 837 022c FFF7FEFF 		bl	bno055_convert_double_mag_xyz_uT
 838              	.LVL121:
 463:Core/Src/bno055_support.c **** 
 839              		.loc 1 463 12 view .LVU309
 840 0230 0444     		add	r4, r4, r0
 841              	.LVL122:
 467:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_y_dps(&d_gyro_datay);
 842              		.loc 1 467 5 is_stmt 1 view .LVU310
 467:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_y_dps(&d_gyro_datay);
 843              		.loc 1 467 15 is_stmt 0 view .LVU311
 844 0232 2EA8     		add	r0, sp, #184
 845 0234 FFF7FEFF 		bl	bno055_convert_double_gyro_x_dps
 846              	.LVL123:
 467:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_y_dps(&d_gyro_datay);
 847              		.loc 1 467 12 view .LVU312
 848 0238 0444     		add	r4, r4, r0
 849              	.LVL124:
 468:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_z_dps(&d_gyro_dataz);
 850              		.loc 1 468 5 is_stmt 1 view .LVU313
 468:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_z_dps(&d_gyro_dataz);
 851              		.loc 1 468 15 is_stmt 0 view .LVU314
 852 023a 2CA8     		add	r0, sp, #176
 853 023c FFF7FEFF 		bl	bno055_convert_double_gyro_y_dps
 854              	.LVL125:
 468:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_z_dps(&d_gyro_dataz);
 855              		.loc 1 468 12 view .LVU315
 856 0240 0444     		add	r4, r4, r0
 857              	.LVL126:
 469:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_x_rps(&d_gyro_datax);
 858              		.loc 1 469 5 is_stmt 1 view .LVU316
 469:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_x_rps(&d_gyro_datax);
 859              		.loc 1 469 15 is_stmt 0 view .LVU317
 860 0242 2AA8     		add	r0, sp, #168
 861 0244 FFF7FEFF 		bl	bno055_convert_double_gyro_z_dps
 862              	.LVL127:
 469:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_x_rps(&d_gyro_datax);
 863              		.loc 1 469 12 view .LVU318
ARM GAS  /tmp/ccE3KnbY.s 			page 32


 864 0248 0444     		add	r4, r4, r0
 865              	.LVL128:
 470:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_y_rps(&d_gyro_datay);
 866              		.loc 1 470 5 is_stmt 1 view .LVU319
 470:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_y_rps(&d_gyro_datay);
 867              		.loc 1 470 15 is_stmt 0 view .LVU320
 868 024a 2EA8     		add	r0, sp, #184
 869 024c FFF7FEFF 		bl	bno055_convert_double_gyro_x_rps
 870              	.LVL129:
 470:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_y_rps(&d_gyro_datay);
 871              		.loc 1 470 12 view .LVU321
 872 0250 0444     		add	r4, r4, r0
 873              	.LVL130:
 471:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_z_rps(&d_gyro_dataz);
 874              		.loc 1 471 5 is_stmt 1 view .LVU322
 471:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_z_rps(&d_gyro_dataz);
 875              		.loc 1 471 15 is_stmt 0 view .LVU323
 876 0252 2CA8     		add	r0, sp, #176
 877 0254 FFF7FEFF 		bl	bno055_convert_double_gyro_y_rps
 878              	.LVL131:
 471:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_z_rps(&d_gyro_dataz);
 879              		.loc 1 471 12 view .LVU324
 880 0258 0444     		add	r4, r4, r0
 881              	.LVL132:
 472:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_xyz_dps(&d_gyro_xyz);
 882              		.loc 1 472 5 is_stmt 1 view .LVU325
 472:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_xyz_dps(&d_gyro_xyz);
 883              		.loc 1 472 15 is_stmt 0 view .LVU326
 884 025a 2AA8     		add	r0, sp, #168
 885 025c FFF7FEFF 		bl	bno055_convert_double_gyro_z_rps
 886              	.LVL133:
 472:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_xyz_dps(&d_gyro_xyz);
 887              		.loc 1 472 12 view .LVU327
 888 0260 0444     		add	r4, r4, r0
 889              	.LVL134:
 473:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_xyz_rps(&d_gyro_xyz);
 890              		.loc 1 473 5 is_stmt 1 view .LVU328
 473:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_xyz_rps(&d_gyro_xyz);
 891              		.loc 1 473 15 is_stmt 0 view .LVU329
 892 0262 24A8     		add	r0, sp, #144
 893 0264 FFF7FEFF 		bl	bno055_convert_double_gyro_xyz_dps
 894              	.LVL135:
 473:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gyro_xyz_rps(&d_gyro_xyz);
 895              		.loc 1 473 12 view .LVU330
 896 0268 0444     		add	r4, r4, r0
 897              	.LVL136:
 474:Core/Src/bno055_support.c **** 
 898              		.loc 1 474 5 is_stmt 1 view .LVU331
 474:Core/Src/bno055_support.c **** 
 899              		.loc 1 474 15 is_stmt 0 view .LVU332
 900 026a 24A8     		add	r0, sp, #144
 901 026c FFF7FEFF 		bl	bno055_convert_double_gyro_xyz_rps
 902              	.LVL137:
 474:Core/Src/bno055_support.c **** 
 903              		.loc 1 474 12 view .LVU333
 904 0270 0444     		add	r4, r4, r0
 905              	.LVL138:
ARM GAS  /tmp/ccE3KnbY.s 			page 33


 478:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_r_deg(&d_euler_data_r);
 906              		.loc 1 478 5 is_stmt 1 view .LVU334
 478:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_r_deg(&d_euler_data_r);
 907              		.loc 1 478 15 is_stmt 0 view .LVU335
 908 0272 22A8     		add	r0, sp, #136
 909 0274 FFF7FEFF 		bl	bno055_convert_double_euler_h_deg
 910              	.LVL139:
 478:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_r_deg(&d_euler_data_r);
 911              		.loc 1 478 12 view .LVU336
 912 0278 0444     		add	r4, r4, r0
 913              	.LVL140:
 479:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_p_deg(&d_euler_data_p);
 914              		.loc 1 479 5 is_stmt 1 view .LVU337
 479:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_p_deg(&d_euler_data_p);
 915              		.loc 1 479 15 is_stmt 0 view .LVU338
 916 027a 20A8     		add	r0, sp, #128
 917 027c FFF7FEFF 		bl	bno055_convert_double_euler_r_deg
 918              	.LVL141:
 479:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_p_deg(&d_euler_data_p);
 919              		.loc 1 479 12 view .LVU339
 920 0280 0444     		add	r4, r4, r0
 921              	.LVL142:
 480:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_h_rad(&d_euler_data_h);
 922              		.loc 1 480 5 is_stmt 1 view .LVU340
 480:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_h_rad(&d_euler_data_h);
 923              		.loc 1 480 15 is_stmt 0 view .LVU341
 924 0282 1EA8     		add	r0, sp, #120
 925 0284 FFF7FEFF 		bl	bno055_convert_double_euler_p_deg
 926              	.LVL143:
 480:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_h_rad(&d_euler_data_h);
 927              		.loc 1 480 12 view .LVU342
 928 0288 0444     		add	r4, r4, r0
 929              	.LVL144:
 481:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_r_rad(&d_euler_data_r);
 930              		.loc 1 481 5 is_stmt 1 view .LVU343
 481:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_r_rad(&d_euler_data_r);
 931              		.loc 1 481 15 is_stmt 0 view .LVU344
 932 028a 22A8     		add	r0, sp, #136
 933 028c FFF7FEFF 		bl	bno055_convert_double_euler_h_rad
 934              	.LVL145:
 481:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_r_rad(&d_euler_data_r);
 935              		.loc 1 481 12 view .LVU345
 936 0290 0444     		add	r4, r4, r0
 937              	.LVL146:
 482:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_p_rad(&d_euler_data_p);
 938              		.loc 1 482 5 is_stmt 1 view .LVU346
 482:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_p_rad(&d_euler_data_p);
 939              		.loc 1 482 15 is_stmt 0 view .LVU347
 940 0292 20A8     		add	r0, sp, #128
 941 0294 FFF7FEFF 		bl	bno055_convert_double_euler_r_rad
 942              	.LVL147:
 482:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_p_rad(&d_euler_data_p);
 943              		.loc 1 482 12 view .LVU348
 944 0298 0444     		add	r4, r4, r0
 945              	.LVL148:
 483:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_hpr_deg(&d_euler_hpr);
 946              		.loc 1 483 5 is_stmt 1 view .LVU349
ARM GAS  /tmp/ccE3KnbY.s 			page 34


 483:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_hpr_deg(&d_euler_hpr);
 947              		.loc 1 483 15 is_stmt 0 view .LVU350
 948 029a 1EA8     		add	r0, sp, #120
 949 029c FFF7FEFF 		bl	bno055_convert_double_euler_p_rad
 950              	.LVL149:
 483:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_hpr_deg(&d_euler_hpr);
 951              		.loc 1 483 12 view .LVU351
 952 02a0 0444     		add	r4, r4, r0
 953              	.LVL150:
 484:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_hpr_rad(&d_euler_hpr);
 954              		.loc 1 484 5 is_stmt 1 view .LVU352
 484:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_hpr_rad(&d_euler_hpr);
 955              		.loc 1 484 15 is_stmt 0 view .LVU353
 956 02a2 18A8     		add	r0, sp, #96
 957 02a4 FFF7FEFF 		bl	bno055_convert_double_euler_hpr_deg
 958              	.LVL151:
 484:Core/Src/bno055_support.c ****     comres += bno055_convert_double_euler_hpr_rad(&d_euler_hpr);
 959              		.loc 1 484 12 view .LVU354
 960 02a8 0444     		add	r4, r4, r0
 961              	.LVL152:
 485:Core/Src/bno055_support.c **** 
 962              		.loc 1 485 5 is_stmt 1 view .LVU355
 485:Core/Src/bno055_support.c **** 
 963              		.loc 1 485 15 is_stmt 0 view .LVU356
 964 02aa 18A8     		add	r0, sp, #96
 965 02ac FFF7FEFF 		bl	bno055_convert_double_euler_hpr_rad
 966              	.LVL153:
 485:Core/Src/bno055_support.c **** 
 967              		.loc 1 485 12 view .LVU357
 968 02b0 0444     		add	r4, r4, r0
 969              	.LVL154:
 489:Core/Src/bno055_support.c ****     comres += bno055_convert_double_linear_accel_y_msq(&d_linear_accel_datay);
 970              		.loc 1 489 5 is_stmt 1 view .LVU358
 489:Core/Src/bno055_support.c ****     comres += bno055_convert_double_linear_accel_y_msq(&d_linear_accel_datay);
 971              		.loc 1 489 15 is_stmt 0 view .LVU359
 972 02b2 16A8     		add	r0, sp, #88
 973 02b4 FFF7FEFF 		bl	bno055_convert_double_linear_accel_x_msq
 974              	.LVL155:
 489:Core/Src/bno055_support.c ****     comres += bno055_convert_double_linear_accel_y_msq(&d_linear_accel_datay);
 975              		.loc 1 489 12 view .LVU360
 976 02b8 0444     		add	r4, r4, r0
 977              	.LVL156:
 490:Core/Src/bno055_support.c ****     comres += bno055_convert_double_linear_accel_z_msq(&d_linear_accel_dataz);
 978              		.loc 1 490 5 is_stmt 1 view .LVU361
 490:Core/Src/bno055_support.c ****     comres += bno055_convert_double_linear_accel_z_msq(&d_linear_accel_dataz);
 979              		.loc 1 490 15 is_stmt 0 view .LVU362
 980 02ba 14A8     		add	r0, sp, #80
 981 02bc FFF7FEFF 		bl	bno055_convert_double_linear_accel_y_msq
 982              	.LVL157:
 490:Core/Src/bno055_support.c ****     comres += bno055_convert_double_linear_accel_z_msq(&d_linear_accel_dataz);
 983              		.loc 1 490 12 view .LVU363
 984 02c0 0444     		add	r4, r4, r0
 985              	.LVL158:
 491:Core/Src/bno055_support.c ****     comres += bno055_convert_double_linear_accel_xyz_msq(&d_linear_accel_xyz);
 986              		.loc 1 491 5 is_stmt 1 view .LVU364
 491:Core/Src/bno055_support.c ****     comres += bno055_convert_double_linear_accel_xyz_msq(&d_linear_accel_xyz);
 987              		.loc 1 491 15 is_stmt 0 view .LVU365
ARM GAS  /tmp/ccE3KnbY.s 			page 35


 988 02c2 12A8     		add	r0, sp, #72
 989 02c4 FFF7FEFF 		bl	bno055_convert_double_linear_accel_z_msq
 990              	.LVL159:
 491:Core/Src/bno055_support.c ****     comres += bno055_convert_double_linear_accel_xyz_msq(&d_linear_accel_xyz);
 991              		.loc 1 491 12 view .LVU366
 992 02c8 0444     		add	r4, r4, r0
 993              	.LVL160:
 492:Core/Src/bno055_support.c **** 
 994              		.loc 1 492 5 is_stmt 1 view .LVU367
 492:Core/Src/bno055_support.c **** 
 995              		.loc 1 492 15 is_stmt 0 view .LVU368
 996 02ca 0CA8     		add	r0, sp, #48
 997 02cc FFF7FEFF 		bl	bno055_convert_double_linear_accel_xyz_msq
 998              	.LVL161:
 492:Core/Src/bno055_support.c **** 
 999              		.loc 1 492 12 view .LVU369
 1000 02d0 0444     		add	r4, r4, r0
 1001              	.LVL162:
 496:Core/Src/bno055_support.c ****     comres += bno055_convert_gravity_double_y_msq(&d_gravity_data_y);
 1002              		.loc 1 496 5 is_stmt 1 view .LVU370
 496:Core/Src/bno055_support.c ****     comres += bno055_convert_gravity_double_y_msq(&d_gravity_data_y);
 1003              		.loc 1 496 15 is_stmt 0 view .LVU371
 1004 02d2 0AA8     		add	r0, sp, #40
 1005 02d4 FFF7FEFF 		bl	bno055_convert_gravity_double_x_msq
 1006              	.LVL163:
 496:Core/Src/bno055_support.c ****     comres += bno055_convert_gravity_double_y_msq(&d_gravity_data_y);
 1007              		.loc 1 496 12 view .LVU372
 1008 02d8 0444     		add	r4, r4, r0
 1009              	.LVL164:
 497:Core/Src/bno055_support.c ****     comres += bno055_convert_gravity_double_z_msq(&d_gravity_data_z);
 1010              		.loc 1 497 5 is_stmt 1 view .LVU373
 497:Core/Src/bno055_support.c ****     comres += bno055_convert_gravity_double_z_msq(&d_gravity_data_z);
 1011              		.loc 1 497 15 is_stmt 0 view .LVU374
 1012 02da 08A8     		add	r0, sp, #32
 1013 02dc FFF7FEFF 		bl	bno055_convert_gravity_double_y_msq
 1014              	.LVL165:
 497:Core/Src/bno055_support.c ****     comres += bno055_convert_gravity_double_z_msq(&d_gravity_data_z);
 1015              		.loc 1 497 12 view .LVU375
 1016 02e0 0444     		add	r4, r4, r0
 1017              	.LVL166:
 498:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gravity_xyz_msq(&d_gravity_xyz);
 1018              		.loc 1 498 5 is_stmt 1 view .LVU376
 498:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gravity_xyz_msq(&d_gravity_xyz);
 1019              		.loc 1 498 15 is_stmt 0 view .LVU377
 1020 02e2 06A8     		add	r0, sp, #24
 1021 02e4 FFF7FEFF 		bl	bno055_convert_gravity_double_z_msq
 1022              	.LVL167:
 498:Core/Src/bno055_support.c ****     comres += bno055_convert_double_gravity_xyz_msq(&d_gravity_xyz);
 1023              		.loc 1 498 12 view .LVU378
 1024 02e8 0444     		add	r4, r4, r0
 1025              	.LVL168:
 499:Core/Src/bno055_support.c **** 
 1026              		.loc 1 499 5 is_stmt 1 view .LVU379
 499:Core/Src/bno055_support.c **** 
 1027              		.loc 1 499 15 is_stmt 0 view .LVU380
 1028 02ea 6846     		mov	r0, sp
 1029 02ec FFF7FEFF 		bl	bno055_convert_double_gravity_xyz_msq
ARM GAS  /tmp/ccE3KnbY.s 			page 36


 1030              	.LVL169:
 499:Core/Src/bno055_support.c **** 
 1031              		.loc 1 499 12 view .LVU381
 1032 02f0 0444     		add	r4, r4, r0
 1033              	.LVL170:
 511:Core/Src/bno055_support.c **** 
 1034              		.loc 1 511 5 is_stmt 1 view .LVU382
 514:Core/Src/bno055_support.c **** 
 1035              		.loc 1 514 5 view .LVU383
 514:Core/Src/bno055_support.c **** 
 1036              		.loc 1 514 15 is_stmt 0 view .LVU384
 1037 02f2 0220     		movs	r0, #2
 1038 02f4 FFF7FEFF 		bl	bno055_set_power_mode
 1039              	.LVL171:
 519:Core/Src/bno055_support.c **** }
 1040              		.loc 1 519 5 is_stmt 1 view .LVU385
 520:Core/Src/bno055_support.c **** 
 1041              		.loc 1 520 1 is_stmt 0 view .LVU386
 1042 02f8 2044     		add	r0, r0, r4
 1043              	.LVL172:
 520:Core/Src/bno055_support.c **** 
 1044              		.loc 1 520 1 view .LVU387
 1045 02fa 5FB0     		add	sp, sp, #380
 1046              	.LCFI9:
 1047              		.cfi_def_cfa_offset 12
 1048              		@ sp needed
 1049 02fc 30BD     		pop	{r4, r5, pc}
 1050              	.L25:
 1051 02fe 00BF     		.align	2
 1052              	.L24:
 1053 0300 00000000 		.word	.LANCHOR0
 1054              		.cfi_endproc
 1055              	.LFE123:
 1057              		.global	bno055
 1058              		.section	.bss.bno055,"aw",%nobits
 1059              		.align	2
 1060              		.set	.LANCHOR0,. + 0
 1063              	bno055:
 1064 0000 00000000 		.space	24
 1064      00000000 
 1064      00000000 
 1064      00000000 
 1064      00000000 
 1065              		.text
 1066              	.Letext0:
 1067              		.file 2 "Core/Inc/bno055.h"
 1068              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1069              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1070              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 1071              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1072              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1073              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c.h"
 1074              		.file 9 "Core/Inc/main.h"
 1075              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccE3KnbY.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bno055_support.c
     /tmp/ccE3KnbY.s:20     .text.BNO055_I2C_bus_write:0000000000000000 $t
     /tmp/ccE3KnbY.s:26     .text.BNO055_I2C_bus_write:0000000000000000 BNO055_I2C_bus_write
     /tmp/ccE3KnbY.s:115    .text.BNO055_I2C_bus_write:0000000000000048 $d
     /tmp/ccE3KnbY.s:120    .text.BNO055_I2C_bus_read:0000000000000000 $t
     /tmp/ccE3KnbY.s:126    .text.BNO055_I2C_bus_read:0000000000000000 BNO055_I2C_bus_read
     /tmp/ccE3KnbY.s:239    .text.BNO055_I2C_bus_read:0000000000000070 $d
     /tmp/ccE3KnbY.s:244    .text.BNO055_delay_msek:0000000000000000 $t
     /tmp/ccE3KnbY.s:250    .text.BNO055_delay_msek:0000000000000000 BNO055_delay_msek
     /tmp/ccE3KnbY.s:272    .text.I2C_routine:0000000000000000 $t
     /tmp/ccE3KnbY.s:278    .text.I2C_routine:0000000000000000 I2C_routine
     /tmp/ccE3KnbY.s:309    .text.I2C_routine:0000000000000018 $d
     /tmp/ccE3KnbY.s:317    .text.bno055_data_readout_template:0000000000000000 $t
     /tmp/ccE3KnbY.s:323    .text.bno055_data_readout_template:0000000000000000 bno055_data_readout_template
     /tmp/ccE3KnbY.s:1053   .text.bno055_data_readout_template:0000000000000300 $d
     /tmp/ccE3KnbY.s:1063   .bss.bno055:0000000000000000 bno055
     /tmp/ccE3KnbY.s:1059   .bss.bno055:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_I2C_Master_Transmit
hi2c1
HAL_I2C_Master_Receive
HAL_Delay
bno055_init
bno055_set_power_mode
bno055_set_operation_mode
bno055_read_accel_x
bno055_read_accel_y
bno055_read_accel_z
bno055_read_accel_xyz
bno055_read_mag_x
bno055_read_mag_y
bno055_read_mag_z
bno055_read_mag_xyz
bno055_read_gyro_x
bno055_read_gyro_y
bno055_read_gyro_z
bno055_read_gyro_xyz
bno055_read_euler_h
bno055_read_euler_r
bno055_read_euler_p
bno055_read_euler_hrp
bno055_read_quaternion_w
bno055_read_quaternion_x
bno055_read_quaternion_y
bno055_read_quaternion_z
bno055_read_quaternion_wxyz
bno055_read_linear_accel_x
bno055_read_linear_accel_y
bno055_read_linear_accel_z
bno055_read_linear_accel_xyz
bno055_read_gravity_x
bno055_read_gravity_y
bno055_read_gravity_z
bno055_read_gravity_xyz
bno055_convert_double_accel_x_msq
ARM GAS  /tmp/ccE3KnbY.s 			page 38


bno055_convert_double_accel_x_mg
bno055_convert_double_accel_y_msq
bno055_convert_double_accel_y_mg
bno055_convert_double_accel_z_msq
bno055_convert_double_accel_z_mg
bno055_convert_double_accel_xyz_msq
bno055_convert_double_accel_xyz_mg
bno055_convert_double_mag_x_uT
bno055_convert_double_mag_y_uT
bno055_convert_double_mag_z_uT
bno055_convert_double_mag_xyz_uT
bno055_convert_double_gyro_x_dps
bno055_convert_double_gyro_y_dps
bno055_convert_double_gyro_z_dps
bno055_convert_double_gyro_x_rps
bno055_convert_double_gyro_y_rps
bno055_convert_double_gyro_z_rps
bno055_convert_double_gyro_xyz_dps
bno055_convert_double_gyro_xyz_rps
bno055_convert_double_euler_h_deg
bno055_convert_double_euler_r_deg
bno055_convert_double_euler_p_deg
bno055_convert_double_euler_h_rad
bno055_convert_double_euler_r_rad
bno055_convert_double_euler_p_rad
bno055_convert_double_euler_hpr_deg
bno055_convert_double_euler_hpr_rad
bno055_convert_double_linear_accel_x_msq
bno055_convert_double_linear_accel_y_msq
bno055_convert_double_linear_accel_z_msq
bno055_convert_double_linear_accel_xyz_msq
bno055_convert_gravity_double_x_msq
bno055_convert_gravity_double_y_msq
bno055_convert_gravity_double_z_msq
bno055_convert_double_gravity_xyz_msq
