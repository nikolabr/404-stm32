ARM GAS  /tmp/ccEwdJ7R.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"syscalls.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.initialise_monitor_handles,"ax",%progbits
  20              		.align	1
  21              		.global	initialise_monitor_handles
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	initialise_monitor_handles:
  27              	.LFB25:
  28              		.file 1 "Core/Src/syscalls.c"
   1:Core/Src/syscalls.c **** /**
   2:Core/Src/syscalls.c ****  ******************************************************************************
   3:Core/Src/syscalls.c ****  * @file      syscalls.c
   4:Core/Src/syscalls.c ****  * @author    Auto-generated by STM32CubeIDE
   5:Core/Src/syscalls.c ****  * @brief     STM32CubeIDE Minimal System calls file
   6:Core/Src/syscalls.c ****  *
   7:Core/Src/syscalls.c ****  *            For more information about which c-functions
   8:Core/Src/syscalls.c ****  *            need which of these lowlevel functions
   9:Core/Src/syscalls.c ****  *            please consult the Newlib libc-manual
  10:Core/Src/syscalls.c ****  ******************************************************************************
  11:Core/Src/syscalls.c ****  * @attention
  12:Core/Src/syscalls.c ****  *
  13:Core/Src/syscalls.c ****  * Copyright (c) 2021 STMicroelectronics.
  14:Core/Src/syscalls.c ****  * All rights reserved.
  15:Core/Src/syscalls.c ****  *
  16:Core/Src/syscalls.c ****  * This software is licensed under terms that can be found in the LICENSE file
  17:Core/Src/syscalls.c ****  * in the root directory of this software component.
  18:Core/Src/syscalls.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  19:Core/Src/syscalls.c ****  *
  20:Core/Src/syscalls.c ****  ******************************************************************************
  21:Core/Src/syscalls.c ****  */
  22:Core/Src/syscalls.c **** 
  23:Core/Src/syscalls.c **** /* Includes */
  24:Core/Src/syscalls.c **** #include <sys/stat.h>
  25:Core/Src/syscalls.c **** #include <stdlib.h>
  26:Core/Src/syscalls.c **** #include <errno.h>
  27:Core/Src/syscalls.c **** #include <stdio.h>
  28:Core/Src/syscalls.c **** #include <signal.h>
  29:Core/Src/syscalls.c **** #include <time.h>
  30:Core/Src/syscalls.c **** #include <sys/time.h>
ARM GAS  /tmp/ccEwdJ7R.s 			page 2


  31:Core/Src/syscalls.c **** #include <sys/times.h>
  32:Core/Src/syscalls.c **** 
  33:Core/Src/syscalls.c **** 
  34:Core/Src/syscalls.c **** /* Variables */
  35:Core/Src/syscalls.c **** extern int __io_putchar(int ch) __attribute__((weak));
  36:Core/Src/syscalls.c **** extern int __io_getchar(void) __attribute__((weak));
  37:Core/Src/syscalls.c **** 
  38:Core/Src/syscalls.c **** 
  39:Core/Src/syscalls.c **** char *__env[1] = { 0 };
  40:Core/Src/syscalls.c **** char **environ = __env;
  41:Core/Src/syscalls.c **** 
  42:Core/Src/syscalls.c **** 
  43:Core/Src/syscalls.c **** /* Functions */
  44:Core/Src/syscalls.c **** void initialise_monitor_handles()
  45:Core/Src/syscalls.c **** {
  29              		.loc 1 45 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  46:Core/Src/syscalls.c **** }
  34              		.loc 1 46 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE25:
  39              		.section	.text._getpid,"ax",%progbits
  40              		.align	1
  41              		.global	_getpid
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	_getpid:
  47              	.LFB26:
  47:Core/Src/syscalls.c **** 
  48:Core/Src/syscalls.c **** int _getpid(void)
  49:Core/Src/syscalls.c **** {
  48              		.loc 1 49 1 view -0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  50:Core/Src/syscalls.c **** 	return 1;
  53              		.loc 1 50 2 view .LVU3
  51:Core/Src/syscalls.c **** }
  54              		.loc 1 51 1 is_stmt 0 view .LVU4
  55 0000 0120     		movs	r0, #1
  56 0002 7047     		bx	lr
  57              		.cfi_endproc
  58              	.LFE26:
  60              		.section	.text._kill,"ax",%progbits
  61              		.align	1
  62              		.global	_kill
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  67              	_kill:
  68              	.LVL0:
ARM GAS  /tmp/ccEwdJ7R.s 			page 3


  69              	.LFB27:
  52:Core/Src/syscalls.c **** 
  53:Core/Src/syscalls.c **** int _kill(int pid, int sig)
  54:Core/Src/syscalls.c **** {
  70              		.loc 1 54 1 is_stmt 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		.loc 1 54 1 is_stmt 0 view .LVU6
  75 0000 08B5     		push	{r3, lr}
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 3, -8
  79              		.cfi_offset 14, -4
  55:Core/Src/syscalls.c **** 	errno = EINVAL;
  80              		.loc 1 55 2 is_stmt 1 view .LVU7
  81 0002 FFF7FEFF 		bl	__errno
  82              	.LVL1:
  83              		.loc 1 55 8 is_stmt 0 view .LVU8
  84 0006 1623     		movs	r3, #22
  85 0008 0360     		str	r3, [r0]
  56:Core/Src/syscalls.c **** 	return -1;
  86              		.loc 1 56 2 is_stmt 1 view .LVU9
  57:Core/Src/syscalls.c **** }
  87              		.loc 1 57 1 is_stmt 0 view .LVU10
  88 000a 4FF0FF30 		mov	r0, #-1
  89 000e 08BD     		pop	{r3, pc}
  90              		.cfi_endproc
  91              	.LFE27:
  93              		.section	.text._exit,"ax",%progbits
  94              		.align	1
  95              		.global	_exit
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
 100              	_exit:
 101              	.LVL2:
 102              	.LFB28:
  58:Core/Src/syscalls.c **** 
  59:Core/Src/syscalls.c **** void _exit (int status)
  60:Core/Src/syscalls.c **** {
 103              		.loc 1 60 1 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ Volatile: function does not return.
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		.loc 1 60 1 is_stmt 0 view .LVU12
 109 0000 08B5     		push	{r3, lr}
 110              	.LCFI1:
 111              		.cfi_def_cfa_offset 8
 112              		.cfi_offset 3, -8
 113              		.cfi_offset 14, -4
  61:Core/Src/syscalls.c **** 	_kill(status, -1);
 114              		.loc 1 61 2 is_stmt 1 view .LVU13
 115 0002 4FF0FF31 		mov	r1, #-1
 116 0006 FFF7FEFF 		bl	_kill
 117              	.LVL3:
ARM GAS  /tmp/ccEwdJ7R.s 			page 4


 118              	.L6:
  62:Core/Src/syscalls.c **** 	while (1) {}		/* Make sure we hang here */
 119              		.loc 1 62 2 discriminator 1 view .LVU14
 120              		.loc 1 62 13 discriminator 1 view .LVU15
 121              		.loc 1 62 8 discriminator 1 view .LVU16
 122 000a FEE7     		b	.L6
 123              		.cfi_endproc
 124              	.LFE28:
 126              		.section	.text._read,"ax",%progbits
 127              		.align	1
 128              		.weak	_read
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 133              	_read:
 134              	.LVL4:
 135              	.LFB29:
  63:Core/Src/syscalls.c **** }
  64:Core/Src/syscalls.c **** 
  65:Core/Src/syscalls.c **** __attribute__((weak)) int _read(int file, char *ptr, int len)
  66:Core/Src/syscalls.c **** {
 136              		.loc 1 66 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		.loc 1 66 1 is_stmt 0 view .LVU18
 141 0000 70B5     		push	{r4, r5, r6, lr}
 142              	.LCFI2:
 143              		.cfi_def_cfa_offset 16
 144              		.cfi_offset 4, -16
 145              		.cfi_offset 5, -12
 146              		.cfi_offset 6, -8
 147              		.cfi_offset 14, -4
 148 0002 0C46     		mov	r4, r1
 149 0004 1646     		mov	r6, r2
  67:Core/Src/syscalls.c **** 	int DataIdx;
 150              		.loc 1 67 2 is_stmt 1 view .LVU19
  68:Core/Src/syscalls.c **** 
  69:Core/Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 151              		.loc 1 69 2 view .LVU20
 152              	.LVL5:
 153              		.loc 1 69 15 is_stmt 0 view .LVU21
 154 0006 0025     		movs	r5, #0
 155              		.loc 1 69 2 view .LVU22
 156 0008 06E0     		b	.L9
 157              	.LVL6:
 158              	.L10:
  70:Core/Src/syscalls.c **** 	{
  71:Core/Src/syscalls.c **** 		*ptr++ = __io_getchar();
 159              		.loc 1 71 3 is_stmt 1 discriminator 3 view .LVU23
 160              		.loc 1 71 12 is_stmt 0 discriminator 3 view .LVU24
 161 000a FFF7FEFF 		bl	__io_getchar
 162              	.LVL7:
 163              		.loc 1 71 7 discriminator 3 view .LVU25
 164 000e 2146     		mov	r1, r4
 165              	.LVL8:
 166              		.loc 1 71 10 discriminator 3 view .LVU26
ARM GAS  /tmp/ccEwdJ7R.s 			page 5


 167 0010 01F8010B 		strb	r0, [r1], #1
 168              	.LVL9:
  69:Core/Src/syscalls.c **** 	{
 169              		.loc 1 69 35 is_stmt 1 discriminator 3 view .LVU27
  69:Core/Src/syscalls.c **** 	{
 170              		.loc 1 69 42 is_stmt 0 discriminator 3 view .LVU28
 171 0014 0135     		adds	r5, r5, #1
 172              	.LVL10:
 173              		.loc 1 71 7 discriminator 3 view .LVU29
 174 0016 0C46     		mov	r4, r1
 175              	.LVL11:
 176              	.L9:
  69:Core/Src/syscalls.c **** 	{
 177              		.loc 1 69 20 is_stmt 1 discriminator 1 view .LVU30
  69:Core/Src/syscalls.c **** 	{
 178              		.loc 1 69 2 is_stmt 0 discriminator 1 view .LVU31
 179 0018 B542     		cmp	r5, r6
 180 001a F6DB     		blt	.L10
  72:Core/Src/syscalls.c **** 	}
  73:Core/Src/syscalls.c **** 
  74:Core/Src/syscalls.c **** return len;
 181              		.loc 1 74 1 is_stmt 1 view .LVU32
  75:Core/Src/syscalls.c **** }
 182              		.loc 1 75 1 is_stmt 0 view .LVU33
 183 001c 3046     		mov	r0, r6
 184 001e 70BD     		pop	{r4, r5, r6, pc}
 185              		.loc 1 75 1 view .LVU34
 186              		.cfi_endproc
 187              	.LFE29:
 189              		.section	.text._write,"ax",%progbits
 190              		.align	1
 191              		.weak	_write
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	_write:
 197              	.LVL12:
 198              	.LFB30:
  76:Core/Src/syscalls.c **** 
  77:Core/Src/syscalls.c **** __attribute__((weak)) int _write(int file, char *ptr, int len)
  78:Core/Src/syscalls.c **** {
 199              		.loc 1 78 1 is_stmt 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              		.loc 1 78 1 is_stmt 0 view .LVU36
 204 0000 70B5     		push	{r4, r5, r6, lr}
 205              	.LCFI3:
 206              		.cfi_def_cfa_offset 16
 207              		.cfi_offset 4, -16
 208              		.cfi_offset 5, -12
 209              		.cfi_offset 6, -8
 210              		.cfi_offset 14, -4
 211 0002 0C46     		mov	r4, r1
 212 0004 1646     		mov	r6, r2
  79:Core/Src/syscalls.c **** 	int DataIdx;
 213              		.loc 1 79 2 is_stmt 1 view .LVU37
ARM GAS  /tmp/ccEwdJ7R.s 			page 6


  80:Core/Src/syscalls.c **** 
  81:Core/Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 214              		.loc 1 81 2 view .LVU38
 215              	.LVL13:
 216              		.loc 1 81 15 is_stmt 0 view .LVU39
 217 0006 0025     		movs	r5, #0
 218              		.loc 1 81 2 view .LVU40
 219 0008 04E0     		b	.L13
 220              	.LVL14:
 221              	.L14:
  82:Core/Src/syscalls.c **** 	{
  83:Core/Src/syscalls.c **** 		__io_putchar(*ptr++);
 222              		.loc 1 83 3 is_stmt 1 discriminator 3 view .LVU41
 223              		.loc 1 83 3 is_stmt 0 discriminator 3 view .LVU42
 224 000a 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 225              	.LVL15:
 226              		.loc 1 83 3 discriminator 3 view .LVU43
 227 000e FFF7FEFF 		bl	__io_putchar
 228              	.LVL16:
  81:Core/Src/syscalls.c **** 	{
 229              		.loc 1 81 35 is_stmt 1 discriminator 3 view .LVU44
  81:Core/Src/syscalls.c **** 	{
 230              		.loc 1 81 42 is_stmt 0 discriminator 3 view .LVU45
 231 0012 0135     		adds	r5, r5, #1
 232              	.LVL17:
 233              	.L13:
  81:Core/Src/syscalls.c **** 	{
 234              		.loc 1 81 20 is_stmt 1 discriminator 1 view .LVU46
  81:Core/Src/syscalls.c **** 	{
 235              		.loc 1 81 2 is_stmt 0 discriminator 1 view .LVU47
 236 0014 B542     		cmp	r5, r6
 237 0016 F8DB     		blt	.L14
  84:Core/Src/syscalls.c **** 	}
  85:Core/Src/syscalls.c **** 	return len;
 238              		.loc 1 85 2 is_stmt 1 view .LVU48
  86:Core/Src/syscalls.c **** }
 239              		.loc 1 86 1 is_stmt 0 view .LVU49
 240 0018 3046     		mov	r0, r6
 241 001a 70BD     		pop	{r4, r5, r6, pc}
 242              		.loc 1 86 1 view .LVU50
 243              		.cfi_endproc
 244              	.LFE30:
 246              		.section	.text._close,"ax",%progbits
 247              		.align	1
 248              		.global	_close
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	_close:
 254              	.LVL18:
 255              	.LFB31:
  87:Core/Src/syscalls.c **** 
  88:Core/Src/syscalls.c **** int _close(int file)
  89:Core/Src/syscalls.c **** {
 256              		.loc 1 89 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccEwdJ7R.s 			page 7


 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
  90:Core/Src/syscalls.c **** 	return -1;
 261              		.loc 1 90 2 view .LVU52
  91:Core/Src/syscalls.c **** }
 262              		.loc 1 91 1 is_stmt 0 view .LVU53
 263 0000 4FF0FF30 		mov	r0, #-1
 264              	.LVL19:
 265              		.loc 1 91 1 view .LVU54
 266 0004 7047     		bx	lr
 267              		.cfi_endproc
 268              	.LFE31:
 270              		.section	.text._fstat,"ax",%progbits
 271              		.align	1
 272              		.global	_fstat
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 277              	_fstat:
 278              	.LVL20:
 279              	.LFB32:
  92:Core/Src/syscalls.c **** 
  93:Core/Src/syscalls.c **** 
  94:Core/Src/syscalls.c **** int _fstat(int file, struct stat *st)
  95:Core/Src/syscalls.c **** {
 280              		.loc 1 95 1 is_stmt 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
  96:Core/Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 285              		.loc 1 96 2 view .LVU56
 286              		.loc 1 96 14 is_stmt 0 view .LVU57
 287 0000 4FF40053 		mov	r3, #8192
 288 0004 4B60     		str	r3, [r1, #4]
  97:Core/Src/syscalls.c **** 	return 0;
 289              		.loc 1 97 2 is_stmt 1 view .LVU58
  98:Core/Src/syscalls.c **** }
 290              		.loc 1 98 1 is_stmt 0 view .LVU59
 291 0006 0020     		movs	r0, #0
 292              	.LVL21:
 293              		.loc 1 98 1 view .LVU60
 294 0008 7047     		bx	lr
 295              		.cfi_endproc
 296              	.LFE32:
 298              		.section	.text._isatty,"ax",%progbits
 299              		.align	1
 300              		.global	_isatty
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 305              	_isatty:
 306              	.LVL22:
 307              	.LFB33:
  99:Core/Src/syscalls.c **** 
 100:Core/Src/syscalls.c **** int _isatty(int file)
 101:Core/Src/syscalls.c **** {
ARM GAS  /tmp/ccEwdJ7R.s 			page 8


 308              		.loc 1 101 1 is_stmt 1 view -0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 102:Core/Src/syscalls.c **** 	return 1;
 313              		.loc 1 102 2 view .LVU62
 103:Core/Src/syscalls.c **** }
 314              		.loc 1 103 1 is_stmt 0 view .LVU63
 315 0000 0120     		movs	r0, #1
 316              	.LVL23:
 317              		.loc 1 103 1 view .LVU64
 318 0002 7047     		bx	lr
 319              		.cfi_endproc
 320              	.LFE33:
 322              		.section	.text._lseek,"ax",%progbits
 323              		.align	1
 324              		.global	_lseek
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 329              	_lseek:
 330              	.LVL24:
 331              	.LFB34:
 104:Core/Src/syscalls.c **** 
 105:Core/Src/syscalls.c **** int _lseek(int file, int ptr, int dir)
 106:Core/Src/syscalls.c **** {
 332              		.loc 1 106 1 is_stmt 1 view -0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 107:Core/Src/syscalls.c **** 	return 0;
 337              		.loc 1 107 2 view .LVU66
 108:Core/Src/syscalls.c **** }
 338              		.loc 1 108 1 is_stmt 0 view .LVU67
 339 0000 0020     		movs	r0, #0
 340              	.LVL25:
 341              		.loc 1 108 1 view .LVU68
 342 0002 7047     		bx	lr
 343              		.cfi_endproc
 344              	.LFE34:
 346              		.section	.text._open,"ax",%progbits
 347              		.align	1
 348              		.global	_open
 349              		.syntax unified
 350              		.thumb
 351              		.thumb_func
 353              	_open:
 354              	.LVL26:
 355              	.LFB35:
 109:Core/Src/syscalls.c **** 
 110:Core/Src/syscalls.c **** int _open(char *path, int flags, ...)
 111:Core/Src/syscalls.c **** {
 356              		.loc 1 111 1 is_stmt 1 view -0
 357              		.cfi_startproc
 358              		@ args = 4, pretend = 12, frame = 0
ARM GAS  /tmp/ccEwdJ7R.s 			page 9


 359              		@ frame_needed = 0, uses_anonymous_args = 1
 360              		@ link register save eliminated.
 361              		.loc 1 111 1 is_stmt 0 view .LVU70
 362 0000 0EB4     		push	{r1, r2, r3}
 363              	.LCFI4:
 364              		.cfi_def_cfa_offset 12
 365              		.cfi_offset 1, -12
 366              		.cfi_offset 2, -8
 367              		.cfi_offset 3, -4
 112:Core/Src/syscalls.c **** 	/* Pretend like we always fail */
 113:Core/Src/syscalls.c **** 	return -1;
 368              		.loc 1 113 2 is_stmt 1 view .LVU71
 114:Core/Src/syscalls.c **** }
 369              		.loc 1 114 1 is_stmt 0 view .LVU72
 370 0002 4FF0FF30 		mov	r0, #-1
 371              	.LVL27:
 372              		.loc 1 114 1 view .LVU73
 373 0006 03B0     		add	sp, sp, #12
 374              	.LCFI5:
 375              		.cfi_restore 3
 376              		.cfi_restore 2
 377              		.cfi_restore 1
 378              		.cfi_def_cfa_offset 0
 379 0008 7047     		bx	lr
 380              		.cfi_endproc
 381              	.LFE35:
 383              		.section	.text._wait,"ax",%progbits
 384              		.align	1
 385              		.global	_wait
 386              		.syntax unified
 387              		.thumb
 388              		.thumb_func
 390              	_wait:
 391              	.LVL28:
 392              	.LFB36:
 115:Core/Src/syscalls.c **** 
 116:Core/Src/syscalls.c **** int _wait(int *status)
 117:Core/Src/syscalls.c **** {
 393              		.loc 1 117 1 is_stmt 1 view -0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              		.loc 1 117 1 is_stmt 0 view .LVU75
 398 0000 08B5     		push	{r3, lr}
 399              	.LCFI6:
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 3, -8
 402              		.cfi_offset 14, -4
 118:Core/Src/syscalls.c **** 	errno = ECHILD;
 403              		.loc 1 118 2 is_stmt 1 view .LVU76
 404 0002 FFF7FEFF 		bl	__errno
 405              	.LVL29:
 406              		.loc 1 118 8 is_stmt 0 view .LVU77
 407 0006 0A23     		movs	r3, #10
 408 0008 0360     		str	r3, [r0]
 119:Core/Src/syscalls.c **** 	return -1;
 409              		.loc 1 119 2 is_stmt 1 view .LVU78
ARM GAS  /tmp/ccEwdJ7R.s 			page 10


 120:Core/Src/syscalls.c **** }
 410              		.loc 1 120 1 is_stmt 0 view .LVU79
 411 000a 4FF0FF30 		mov	r0, #-1
 412 000e 08BD     		pop	{r3, pc}
 413              		.cfi_endproc
 414              	.LFE36:
 416              		.section	.text._unlink,"ax",%progbits
 417              		.align	1
 418              		.global	_unlink
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 423              	_unlink:
 424              	.LVL30:
 425              	.LFB37:
 121:Core/Src/syscalls.c **** 
 122:Core/Src/syscalls.c **** int _unlink(char *name)
 123:Core/Src/syscalls.c **** {
 426              		.loc 1 123 1 is_stmt 1 view -0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430              		.loc 1 123 1 is_stmt 0 view .LVU81
 431 0000 08B5     		push	{r3, lr}
 432              	.LCFI7:
 433              		.cfi_def_cfa_offset 8
 434              		.cfi_offset 3, -8
 435              		.cfi_offset 14, -4
 124:Core/Src/syscalls.c **** 	errno = ENOENT;
 436              		.loc 1 124 2 is_stmt 1 view .LVU82
 437 0002 FFF7FEFF 		bl	__errno
 438              	.LVL31:
 439              		.loc 1 124 8 is_stmt 0 view .LVU83
 440 0006 0223     		movs	r3, #2
 441 0008 0360     		str	r3, [r0]
 125:Core/Src/syscalls.c **** 	return -1;
 442              		.loc 1 125 2 is_stmt 1 view .LVU84
 126:Core/Src/syscalls.c **** }
 443              		.loc 1 126 1 is_stmt 0 view .LVU85
 444 000a 4FF0FF30 		mov	r0, #-1
 445 000e 08BD     		pop	{r3, pc}
 446              		.cfi_endproc
 447              	.LFE37:
 449              		.section	.text._times,"ax",%progbits
 450              		.align	1
 451              		.global	_times
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 456              	_times:
 457              	.LVL32:
 458              	.LFB38:
 127:Core/Src/syscalls.c **** 
 128:Core/Src/syscalls.c **** int _times(struct tms *buf)
 129:Core/Src/syscalls.c **** {
 459              		.loc 1 129 1 is_stmt 1 view -0
 460              		.cfi_startproc
ARM GAS  /tmp/ccEwdJ7R.s 			page 11


 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463              		@ link register save eliminated.
 130:Core/Src/syscalls.c **** 	return -1;
 464              		.loc 1 130 2 view .LVU87
 131:Core/Src/syscalls.c **** }
 465              		.loc 1 131 1 is_stmt 0 view .LVU88
 466 0000 4FF0FF30 		mov	r0, #-1
 467              	.LVL33:
 468              		.loc 1 131 1 view .LVU89
 469 0004 7047     		bx	lr
 470              		.cfi_endproc
 471              	.LFE38:
 473              		.section	.text._stat,"ax",%progbits
 474              		.align	1
 475              		.global	_stat
 476              		.syntax unified
 477              		.thumb
 478              		.thumb_func
 480              	_stat:
 481              	.LVL34:
 482              	.LFB39:
 132:Core/Src/syscalls.c **** 
 133:Core/Src/syscalls.c **** int _stat(char *file, struct stat *st)
 134:Core/Src/syscalls.c **** {
 483              		.loc 1 134 1 is_stmt 1 view -0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              		@ link register save eliminated.
 135:Core/Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 488              		.loc 1 135 2 view .LVU91
 489              		.loc 1 135 14 is_stmt 0 view .LVU92
 490 0000 4FF40053 		mov	r3, #8192
 491 0004 4B60     		str	r3, [r1, #4]
 136:Core/Src/syscalls.c **** 	return 0;
 492              		.loc 1 136 2 is_stmt 1 view .LVU93
 137:Core/Src/syscalls.c **** }
 493              		.loc 1 137 1 is_stmt 0 view .LVU94
 494 0006 0020     		movs	r0, #0
 495              	.LVL35:
 496              		.loc 1 137 1 view .LVU95
 497 0008 7047     		bx	lr
 498              		.cfi_endproc
 499              	.LFE39:
 501              		.section	.text._link,"ax",%progbits
 502              		.align	1
 503              		.global	_link
 504              		.syntax unified
 505              		.thumb
 506              		.thumb_func
 508              	_link:
 509              	.LVL36:
 510              	.LFB40:
 138:Core/Src/syscalls.c **** 
 139:Core/Src/syscalls.c **** int _link(char *old, char *new)
 140:Core/Src/syscalls.c **** {
ARM GAS  /tmp/ccEwdJ7R.s 			page 12


 511              		.loc 1 140 1 is_stmt 1 view -0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515              		.loc 1 140 1 is_stmt 0 view .LVU97
 516 0000 08B5     		push	{r3, lr}
 517              	.LCFI8:
 518              		.cfi_def_cfa_offset 8
 519              		.cfi_offset 3, -8
 520              		.cfi_offset 14, -4
 141:Core/Src/syscalls.c **** 	errno = EMLINK;
 521              		.loc 1 141 2 is_stmt 1 view .LVU98
 522 0002 FFF7FEFF 		bl	__errno
 523              	.LVL37:
 524              		.loc 1 141 8 is_stmt 0 view .LVU99
 525 0006 1F23     		movs	r3, #31
 526 0008 0360     		str	r3, [r0]
 142:Core/Src/syscalls.c **** 	return -1;
 527              		.loc 1 142 2 is_stmt 1 view .LVU100
 143:Core/Src/syscalls.c **** }
 528              		.loc 1 143 1 is_stmt 0 view .LVU101
 529 000a 4FF0FF30 		mov	r0, #-1
 530 000e 08BD     		pop	{r3, pc}
 531              		.cfi_endproc
 532              	.LFE40:
 534              		.section	.text._fork,"ax",%progbits
 535              		.align	1
 536              		.global	_fork
 537              		.syntax unified
 538              		.thumb
 539              		.thumb_func
 541              	_fork:
 542              	.LFB41:
 144:Core/Src/syscalls.c **** 
 145:Core/Src/syscalls.c **** int _fork(void)
 146:Core/Src/syscalls.c **** {
 543              		.loc 1 146 1 is_stmt 1 view -0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547 0000 08B5     		push	{r3, lr}
 548              	.LCFI9:
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 3, -8
 551              		.cfi_offset 14, -4
 147:Core/Src/syscalls.c **** 	errno = EAGAIN;
 552              		.loc 1 147 2 view .LVU103
 553 0002 FFF7FEFF 		bl	__errno
 554              	.LVL38:
 555              		.loc 1 147 8 is_stmt 0 view .LVU104
 556 0006 0B23     		movs	r3, #11
 557 0008 0360     		str	r3, [r0]
 148:Core/Src/syscalls.c **** 	return -1;
 558              		.loc 1 148 2 is_stmt 1 view .LVU105
 149:Core/Src/syscalls.c **** }
 559              		.loc 1 149 1 is_stmt 0 view .LVU106
 560 000a 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccEwdJ7R.s 			page 13


 561 000e 08BD     		pop	{r3, pc}
 562              		.cfi_endproc
 563              	.LFE41:
 565              		.section	.text._execve,"ax",%progbits
 566              		.align	1
 567              		.global	_execve
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 572              	_execve:
 573              	.LVL39:
 574              	.LFB42:
 150:Core/Src/syscalls.c **** 
 151:Core/Src/syscalls.c **** int _execve(char *name, char **argv, char **env)
 152:Core/Src/syscalls.c **** {
 575              		.loc 1 152 1 is_stmt 1 view -0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		.loc 1 152 1 is_stmt 0 view .LVU108
 580 0000 08B5     		push	{r3, lr}
 581              	.LCFI10:
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 3, -8
 584              		.cfi_offset 14, -4
 153:Core/Src/syscalls.c **** 	errno = ENOMEM;
 585              		.loc 1 153 2 is_stmt 1 view .LVU109
 586 0002 FFF7FEFF 		bl	__errno
 587              	.LVL40:
 588              		.loc 1 153 8 is_stmt 0 view .LVU110
 589 0006 0C23     		movs	r3, #12
 590 0008 0360     		str	r3, [r0]
 154:Core/Src/syscalls.c **** 	return -1;
 591              		.loc 1 154 2 is_stmt 1 view .LVU111
 155:Core/Src/syscalls.c **** }
 592              		.loc 1 155 1 is_stmt 0 view .LVU112
 593 000a 4FF0FF30 		mov	r0, #-1
 594 000e 08BD     		pop	{r3, pc}
 595              		.cfi_endproc
 596              	.LFE42:
 598              		.global	environ
 599              		.global	__env
 600              		.section	.bss.__env,"aw",%nobits
 601              		.align	2
 604              	__env:
 605 0000 00000000 		.space	4
 606              		.section	.data.environ,"aw"
 607              		.align	2
 610              	environ:
 611 0000 00000000 		.word	__env
 612              		.weak	__io_putchar
 613              		.weak	__io_getchar
 614              		.text
 615              	.Letext0:
 616              		.file 2 "/home/dqnk/.config/Code - OSS/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 617              		.file 3 "/home/dqnk/.config/Code - OSS/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 618              		.file 4 "/home/dqnk/.config/Code - OSS/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
ARM GAS  /tmp/ccEwdJ7R.s 			page 14


 619              		.file 5 "/home/dqnk/.config/Code - OSS/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 620              		.file 6 "/home/dqnk/.config/Code - OSS/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 621              		.file 7 "/home/dqnk/.config/Code - OSS/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 622              		.file 8 "/home/dqnk/.config/Code - OSS/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 623              		.file 9 "/home/dqnk/.config/Code - OSS/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
ARM GAS  /tmp/ccEwdJ7R.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscalls.c
     /tmp/ccEwdJ7R.s:20     .text.initialise_monitor_handles:0000000000000000 $t
     /tmp/ccEwdJ7R.s:26     .text.initialise_monitor_handles:0000000000000000 initialise_monitor_handles
     /tmp/ccEwdJ7R.s:40     .text._getpid:0000000000000000 $t
     /tmp/ccEwdJ7R.s:46     .text._getpid:0000000000000000 _getpid
     /tmp/ccEwdJ7R.s:61     .text._kill:0000000000000000 $t
     /tmp/ccEwdJ7R.s:67     .text._kill:0000000000000000 _kill
     /tmp/ccEwdJ7R.s:94     .text._exit:0000000000000000 $t
     /tmp/ccEwdJ7R.s:100    .text._exit:0000000000000000 _exit
     /tmp/ccEwdJ7R.s:127    .text._read:0000000000000000 $t
     /tmp/ccEwdJ7R.s:133    .text._read:0000000000000000 _read
     /tmp/ccEwdJ7R.s:190    .text._write:0000000000000000 $t
     /tmp/ccEwdJ7R.s:196    .text._write:0000000000000000 _write
     /tmp/ccEwdJ7R.s:247    .text._close:0000000000000000 $t
     /tmp/ccEwdJ7R.s:253    .text._close:0000000000000000 _close
     /tmp/ccEwdJ7R.s:271    .text._fstat:0000000000000000 $t
     /tmp/ccEwdJ7R.s:277    .text._fstat:0000000000000000 _fstat
     /tmp/ccEwdJ7R.s:299    .text._isatty:0000000000000000 $t
     /tmp/ccEwdJ7R.s:305    .text._isatty:0000000000000000 _isatty
     /tmp/ccEwdJ7R.s:323    .text._lseek:0000000000000000 $t
     /tmp/ccEwdJ7R.s:329    .text._lseek:0000000000000000 _lseek
     /tmp/ccEwdJ7R.s:347    .text._open:0000000000000000 $t
     /tmp/ccEwdJ7R.s:353    .text._open:0000000000000000 _open
     /tmp/ccEwdJ7R.s:384    .text._wait:0000000000000000 $t
     /tmp/ccEwdJ7R.s:390    .text._wait:0000000000000000 _wait
     /tmp/ccEwdJ7R.s:417    .text._unlink:0000000000000000 $t
     /tmp/ccEwdJ7R.s:423    .text._unlink:0000000000000000 _unlink
     /tmp/ccEwdJ7R.s:450    .text._times:0000000000000000 $t
     /tmp/ccEwdJ7R.s:456    .text._times:0000000000000000 _times
     /tmp/ccEwdJ7R.s:474    .text._stat:0000000000000000 $t
     /tmp/ccEwdJ7R.s:480    .text._stat:0000000000000000 _stat
     /tmp/ccEwdJ7R.s:502    .text._link:0000000000000000 $t
     /tmp/ccEwdJ7R.s:508    .text._link:0000000000000000 _link
     /tmp/ccEwdJ7R.s:535    .text._fork:0000000000000000 $t
     /tmp/ccEwdJ7R.s:541    .text._fork:0000000000000000 _fork
     /tmp/ccEwdJ7R.s:566    .text._execve:0000000000000000 $t
     /tmp/ccEwdJ7R.s:572    .text._execve:0000000000000000 _execve
     /tmp/ccEwdJ7R.s:610    .data.environ:0000000000000000 environ
     /tmp/ccEwdJ7R.s:604    .bss.__env:0000000000000000 __env
     /tmp/ccEwdJ7R.s:601    .bss.__env:0000000000000000 $d
     /tmp/ccEwdJ7R.s:607    .data.environ:0000000000000000 $d

UNDEFINED SYMBOLS
__errno
__io_getchar
__io_putchar
